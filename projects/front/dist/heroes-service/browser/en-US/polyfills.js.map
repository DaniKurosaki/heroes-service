{"version":3,"mappings":";CASG,UAASA,SAAQ;EAChBA,QAAOC,EAAA,KAAO,CAAC;EACfD,QAAOC,EAAA,CAAGC,MAAA,KAAW,CAAC;EACtBF,QAAOC,EAAA,CAAGC,MAAA,CAAOC,OAAA,KAAY,CAAC;EAC9B,MAAMC,CAAA,GAAI;EACV,SAASC,OAAOC,GAAA,EAAK;IACzB,MAAMC,CAAA,GAAID,GAAA;MAAKE,CAAA,GAAIC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,GAAA,CAAIL,GAAG,CAAC;MAAGM,CAAA,GAAIN,GAAA,CAAIO,QAAA,CAAS,EAAEC,OAAA,CAAQ,aAAa,EAAE,EAAEC,MAAA;MAAQC,CAAA,GAAIC,QAAA,CAASX,GAAA,CAAIO,QAAA,CAAS,EAAEC,OAAA,CAAQ,wBAAwB,IAAI,CAAC,KAAK;IAExK,IAAIP,CAAA,KAAM,GACN,OAAO;IACX,IAAIS,CAAA,KAAM,KAAM,EAAER,CAAA,KAAM,MAAOA,CAAA,GAAI,QAAY,KAAKI,CAAA,KAAM,KAAO,EAAEI,CAAA,IAAK,KAAKA,CAAA,IAAK,IAC9E,OAAO;IACX,OAAO;EACP;EACIhB,QAAOC,EAAA,CAAGC,MAAA,CAAOC,OAAA,CAAQ,IAAI,IAAI,CAAC,MAAK,CAAC,CAAC,YAAQ,UAAO,GAAEC,CAAA,EAAEA,CAAC,GAAEA,CAAA,EAAE,CAAC,CAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAE,CAAC,OAAM,OAAM,OAAM,UAAM,OAAM,OAAM,QAAK,GAAE,CAAC,WAAU,SAAQ,UAAS,gBAAY,UAAS,WAAU,WAAQ,GAAE,CAAC,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,IAAI,CAAC,GAAEA,CAAA,EAAE,CAAC,CAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAE,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,QAAO,OAAM,OAAM,KAAK,GAAE,CAAC,SAAQ,WAAU,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,UAAS,cAAa,WAAU,aAAY,WAAW,CAAC,GAAEA,CAAA,EAAE,CAAC,CAAC,SAAQ,OAAO,GAAEA,CAAA,EAAE,CAAC,mBAAkB,sBAAmB,CAAC,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,CAAC,UAAS,WAAU,sBAAqB,0BAA0B,GAAE,CAAC,QAAO,WAAU,aAAY,gBAAgB,GAAE,CAAC,YAAWA,CAAA,EAAEA,CAAA,EAAEA,CAAC,GAAE,CAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAI,UAAI,UAAI,OAAM,GAAG,GAAE,CAAC,aAAY,cAAU,oBAAa,KAAK,GAAE,OAAM,UAAI,QAAO;IAAC,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAACA,CAAA,EAAE,IAAI;IAAE,OAAM,CAACA,CAAA,EAAE,SAAI;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAACA,CAAA,EAAE,MAAG;IAAE,OAAM,EAAC;IAAE,OAAM,CAAC,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,MAAG;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAACA,CAAA,EAAE,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,MAAG;IAAE,OAAM,CAACA,CAAA,EAAE,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAACA,CAAA,EAAE,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM,CAAC,QAAG;IAAE,OAAM,CAACA,CAAA,EAAE,KAAK;IAAE,OAAM,CAAC,OAAM,GAAG;IAAE,OAAM,EAAC;IAAE,OAAM,CAACA,CAAA,EAAE,GAAG;IAAE,OAAM;EAAE,GAAE,OAAOC,MAAA,EAAQ,CAAC,CAAC,CAAC,mBAAe,mBAAkB,mBAAe,eAAc,aAAa,GAAED,CAAA,EAAEA,CAAC,GAAE,CAAC,CAAC,eAAW,aAAY,aAAS,SAAQ,OAAO,GAAEA,CAAA,EAAEA,CAAC,GAAE,CAAC,SAAQ,CAAC,SAAQ,OAAO,GAAE,CAAC,SAAQ,OAAO,GAAE,CAAC,SAAQ,OAAO,GAAE,CAAC,SAAQ,OAAO,CAAC,CAAC,CAAC;AACp1C,GAAGc,UAAU;;;AClBf,IAAMlB,MAAA,GAASkB,UAAA;AAGf,SAASC,WAAWC,IAAA,EAAM;EACtB,MAAMC,YAAA,GAAerB,MAAA,CAAO,sBAAsB,KAAK;EACvD,OAAOqB,YAAA,GAAeD,IAAA;AAC1B;AACA,SAASE,SAAA,EAAW;EAChB,MAAMC,WAAA,GAAcvB,MAAA,CAAO,aAAa;EACxC,SAASwB,KAAKJ,IAAA,EAAM;IAChBG,WAAA,IAAeA,WAAA,CAAY,MAAM,KAAKA,WAAA,CAAY,MAAM,EAAEH,IAAI;EAClE;EACA,SAASK,mBAAmBL,IAAA,EAAMM,KAAA,EAAO;IACrCH,WAAA,IAAeA,WAAA,CAAY,SAAS,KAAKA,WAAA,CAAY,SAAS,EAAEH,IAAA,EAAMM,KAAK;EAC/E;EACAF,IAAA,CAAK,MAAM;EACX,MAAMG,SAAA,GAAN,MAAMA,SAAA,CAAS;IAGX,OAAOC,kBAAA,EAAoB;MACvB,IAAI5B,MAAA,CAAO,SAAS,MAAM6B,OAAA,CAAQ,kBAAkB,GAAG;QACnD,MAAM,IAAIC,KAAA,CAAM,+RAI0C;MAC9D;IACJ;IACA,WAAWC,KAAA,EAAO;MACd,IAAIC,IAAA,GAAOL,SAAA,CAASM,OAAA;MACpB,OAAOD,IAAA,CAAKE,MAAA,EAAQ;QAChBF,IAAA,GAAOA,IAAA,CAAKE,MAAA;MAChB;MACA,OAAOF,IAAA;IACX;IACA,WAAWC,QAAA,EAAU;MACjB,OAAOE,iBAAA,CAAkBH,IAAA;IAC7B;IACA,WAAWI,YAAA,EAAc;MACrB,OAAOC,YAAA;IACX;IAAA;IAEA,OAAOC,aAAalB,IAAA,EAAMmB,EAAA,EAAIC,eAAA,GAAkB,OAAO;MACnD,IAAIX,OAAA,CAAQY,cAAA,CAAerB,IAAI,GAAG;QAI9B,MAAMsB,cAAA,GAAiB1C,MAAA,CAAOmB,UAAA,CAAW,yBAAyB,CAAC,MAAM;QACzE,IAAI,CAACqB,eAAA,IAAmBE,cAAA,EAAgB;UACpC,MAAMZ,KAAA,CAAM,2BAA2BV,IAAI;QAC/C;MACJ,WACS,CAACpB,MAAA,CAAO,oBAAoBoB,IAAI,GAAG;QACxC,MAAMuB,QAAA,GAAW,UAAUvB,IAAA;QAC3BI,IAAA,CAAKmB,QAAQ;QACbd,OAAA,CAAQT,IAAI,IAAImB,EAAA,CAAGvC,MAAA,EAAQ2B,SAAA,EAAUiB,IAAI;QACzCnB,kBAAA,CAAmBkB,QAAA,EAAUA,QAAQ;MACzC;IACJ;IACA,IAAIT,OAAA,EAAS;MACT,OAAO,KAAKW,OAAA;IAChB;IACA,IAAIzB,KAAA,EAAO;MACP,OAAO,KAAK0B,KAAA;IAChB;IACAC,YAAYb,MAAA,EAAQc,QAAA,EAAU;MAC1B,KAAKH,OAAA,GAAUX,MAAA;MACf,KAAKY,KAAA,GAAQE,QAAA,GAAWA,QAAA,CAAS5B,IAAA,IAAQ,YAAY;MACrD,KAAK6B,WAAA,GAAeD,QAAA,IAAYA,QAAA,CAASE,UAAA,IAAe,CAAC;MACzD,KAAKC,aAAA,GAAgB,IAAIC,aAAA,CAAc,MAAM,KAAKP,OAAA,IAAW,KAAKA,OAAA,CAAQM,aAAA,EAAeH,QAAQ;IACrG;IACAK,IAAIC,GAAA,EAAK;MACL,MAAMtB,IAAA,GAAO,KAAKuB,WAAA,CAAYD,GAAG;MACjC,IAAItB,IAAA,EACA,OAAOA,IAAA,CAAKiB,WAAA,CAAYK,GAAG;IACnC;IACAC,YAAYD,GAAA,EAAK;MACb,IAAIrB,OAAA,GAAU;MACd,OAAOA,OAAA,EAAS;QACZ,IAAIA,OAAA,CAAQgB,WAAA,CAAYR,cAAA,CAAea,GAAG,GAAG;UACzC,OAAOrB,OAAA;QACX;QACAA,OAAA,GAAUA,OAAA,CAAQY,OAAA;MACtB;MACA,OAAO;IACX;IACAW,KAAKR,QAAA,EAAU;MACX,IAAI,CAACA,QAAA,EACD,MAAM,IAAIlB,KAAA,CAAM,oBAAoB;MACxC,OAAO,KAAKqB,aAAA,CAAcK,IAAA,CAAK,MAAMR,QAAQ;IACjD;IACAS,KAAKC,QAAA,EAAUC,MAAA,EAAQ;MACnB,IAAI,OAAOD,QAAA,KAAa,YAAY;QAChC,MAAM,IAAI5B,KAAA,CAAM,6BAA6B4B,QAAQ;MACzD;MACA,MAAME,SAAA,GAAY,KAAKT,aAAA,CAAcU,SAAA,CAAU,MAAMH,QAAA,EAAUC,MAAM;MACrE,MAAM3B,IAAA,GAAO;MACb,OAAO,YAAY;QACf,OAAOA,IAAA,CAAK8B,UAAA,CAAWF,SAAA,EAAW,MAAMG,SAAA,EAAWJ,MAAM;MAC7D;IACJ;IACAK,IAAIN,QAAA,EAAUO,SAAA,EAAWC,SAAA,EAAWP,MAAA,EAAQ;MACxCxB,iBAAA,GAAoB;QAAED,MAAA,EAAQC,iBAAA;QAAmBH,IAAA,EAAM;MAAK;MAC5D,IAAI;QACA,OAAO,KAAKmB,aAAA,CAAcgB,MAAA,CAAO,MAAMT,QAAA,EAAUO,SAAA,EAAWC,SAAA,EAAWP,MAAM;MACjF,UACA;QACIxB,iBAAA,GAAoBA,iBAAA,CAAkBD,MAAA;MAC1C;IACJ;IACA4B,WAAWJ,QAAA,EAAUO,SAAA,GAAY,MAAMC,SAAA,EAAWP,MAAA,EAAQ;MACtDxB,iBAAA,GAAoB;QAAED,MAAA,EAAQC,iBAAA;QAAmBH,IAAA,EAAM;MAAK;MAC5D,IAAI;QACA,IAAI;UACA,OAAO,KAAKmB,aAAA,CAAcgB,MAAA,CAAO,MAAMT,QAAA,EAAUO,SAAA,EAAWC,SAAA,EAAWP,MAAM;QACjF,SACOS,KAAA,EAAO;UACV,IAAI,KAAKjB,aAAA,CAAckB,WAAA,CAAY,MAAMD,KAAK,GAAG;YAC7C,MAAMA,KAAA;UACV;QACJ;MACJ,UACA;QACIjC,iBAAA,GAAoBA,iBAAA,CAAkBD,MAAA;MAC1C;IACJ;IACAoC,QAAQC,IAAA,EAAMN,SAAA,EAAWC,SAAA,EAAW;MAChC,IAAIK,IAAA,CAAKvC,IAAA,IAAQ,MAAM;QACnB,MAAM,IAAIF,KAAA,CAAM,iEACXyC,IAAA,CAAKvC,IAAA,IAAQwC,OAAA,EAASpD,IAAA,GACvB,kBACA,KAAKA,IAAA,GACL,GAAG;MACX;MAIA,IAAImD,IAAA,CAAKE,KAAA,KAAUC,YAAA,KAAiBH,IAAA,CAAKI,IAAA,KAASC,SAAA,IAAaL,IAAA,CAAKI,IAAA,KAASE,SAAA,GAAY;QACrF;MACJ;MACA,MAAMC,YAAA,GAAeP,IAAA,CAAKE,KAAA,IAASM,OAAA;MACnCD,YAAA,IAAgBP,IAAA,CAAKS,aAAA,CAAcD,OAAA,EAASE,SAAS;MACrDV,IAAA,CAAKW,QAAA;MACL,MAAMC,YAAA,GAAe9C,YAAA;MACrBA,YAAA,GAAekC,IAAA;MACfpC,iBAAA,GAAoB;QAAED,MAAA,EAAQC,iBAAA;QAAmBH,IAAA,EAAM;MAAK;MAC5D,IAAI;QACA,IAAIuC,IAAA,CAAKI,IAAA,IAAQE,SAAA,IAAaN,IAAA,CAAKa,IAAA,IAAQ,CAACb,IAAA,CAAKa,IAAA,CAAKC,UAAA,EAAY;UAC9Dd,IAAA,CAAKe,QAAA,GAAW;QACpB;QACA,IAAI;UACA,OAAO,KAAKnC,aAAA,CAAcoC,UAAA,CAAW,MAAMhB,IAAA,EAAMN,SAAA,EAAWC,SAAS;QACzE,SACOE,KAAA,EAAO;UACV,IAAI,KAAKjB,aAAA,CAAckB,WAAA,CAAY,MAAMD,KAAK,GAAG;YAC7C,MAAMA,KAAA;UACV;QACJ;MACJ,UACA;QAGI,IAAIG,IAAA,CAAKE,KAAA,KAAUC,YAAA,IAAgBH,IAAA,CAAKE,KAAA,KAAUe,OAAA,EAAS;UACvD,IAAIjB,IAAA,CAAKI,IAAA,IAAQC,SAAA,IAAcL,IAAA,CAAKa,IAAA,IAAQb,IAAA,CAAKa,IAAA,CAAKC,UAAA,EAAa;YAC/DP,YAAA,IAAgBP,IAAA,CAAKS,aAAA,CAAcC,SAAA,EAAWF,OAAO;UACzD,OACK;YACDR,IAAA,CAAKW,QAAA,GAAW;YAChB,KAAKO,gBAAA,CAAiBlB,IAAA,EAAM,EAAE;YAC9BO,YAAA,IACIP,IAAA,CAAKS,aAAA,CAAcN,YAAA,EAAcK,OAAA,EAASL,YAAY;UAC9D;QACJ;QACAvC,iBAAA,GAAoBA,iBAAA,CAAkBD,MAAA;QACtCG,YAAA,GAAe8C,YAAA;MACnB;IACJ;IACAO,aAAanB,IAAA,EAAM;MACf,IAAIA,IAAA,CAAKvC,IAAA,IAAQuC,IAAA,CAAKvC,IAAA,KAAS,MAAM;QAGjC,IAAI2D,OAAA,GAAU;QACd,OAAOA,OAAA,EAAS;UACZ,IAAIA,OAAA,KAAYpB,IAAA,CAAKvC,IAAA,EAAM;YACvB,MAAMF,KAAA,CAAM,8BAA8B,KAAKV,IAAI,8CAA8CmD,IAAA,CAAKvC,IAAA,CAAKZ,IAAI,EAAE;UACrH;UACAuE,OAAA,GAAUA,OAAA,CAAQzD,MAAA;QACtB;MACJ;MACAqC,IAAA,CAAKS,aAAA,CAAcY,UAAA,EAAYlB,YAAY;MAC3C,MAAMmB,aAAA,GAAgB,EAAC;MACvBtB,IAAA,CAAKuB,cAAA,GAAiBD,aAAA;MACtBtB,IAAA,CAAKwB,KAAA,GAAQ;MACb,IAAI;QACAxB,IAAA,GAAO,KAAKpB,aAAA,CAAcuC,YAAA,CAAa,MAAMnB,IAAI;MACrD,SACOyB,GAAA,EAAK;QAGRzB,IAAA,CAAKS,aAAA,CAAcQ,OAAA,EAASI,UAAA,EAAYlB,YAAY;QAEpD,KAAKvB,aAAA,CAAckB,WAAA,CAAY,MAAM2B,GAAG;QACxC,MAAMA,GAAA;MACV;MACA,IAAIzB,IAAA,CAAKuB,cAAA,KAAmBD,aAAA,EAAe;QAEvC,KAAKJ,gBAAA,CAAiBlB,IAAA,EAAM,CAAC;MACjC;MACA,IAAIA,IAAA,CAAKE,KAAA,IAASmB,UAAA,EAAY;QAC1BrB,IAAA,CAAKS,aAAA,CAAcC,SAAA,EAAWW,UAAU;MAC5C;MACA,OAAOrB,IAAA;IACX;IACA0B,kBAAkBtC,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgB;MACtD,OAAO,KAAKR,YAAA,CAAa,IAAIS,QAAA,CAASC,SAAA,EAAWzC,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgB,MAAS,CAAC;IACvG;IACAG,kBAAkB1C,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAA,EAAc;MACpE,OAAO,KAAKZ,YAAA,CAAa,IAAIS,QAAA,CAAStB,SAAA,EAAWlB,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAY,CAAC;IAC1G;IACAC,kBAAkB5C,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAA,EAAc;MACpE,OAAO,KAAKZ,YAAA,CAAa,IAAIS,QAAA,CAASvB,SAAA,EAAWjB,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAY,CAAC;IAC1G;IACAE,WAAWjC,IAAA,EAAM;MACb,IAAIA,IAAA,CAAKvC,IAAA,IAAQ,MACb,MAAM,IAAIF,KAAA,CAAM,uEACXyC,IAAA,CAAKvC,IAAA,IAAQwC,OAAA,EAASpD,IAAA,GACvB,kBACA,KAAKA,IAAA,GACL,GAAG;MACX,IAAImD,IAAA,CAAKE,KAAA,KAAUQ,SAAA,IAAaV,IAAA,CAAKE,KAAA,KAAUM,OAAA,EAAS;QACpD;MACJ;MACAR,IAAA,CAAKS,aAAA,CAAcyB,SAAA,EAAWxB,SAAA,EAAWF,OAAO;MAChD,IAAI;QACA,KAAK5B,aAAA,CAAcqD,UAAA,CAAW,MAAMjC,IAAI;MAC5C,SACOyB,GAAA,EAAK;QAERzB,IAAA,CAAKS,aAAA,CAAcQ,OAAA,EAASiB,SAAS;QACrC,KAAKtD,aAAA,CAAckB,WAAA,CAAY,MAAM2B,GAAG;QACxC,MAAMA,GAAA;MACV;MACA,KAAKP,gBAAA,CAAiBlB,IAAA,EAAM,EAAE;MAC9BA,IAAA,CAAKS,aAAA,CAAcN,YAAA,EAAc+B,SAAS;MAC1ClC,IAAA,CAAKW,QAAA,GAAW;MAChB,OAAOX,IAAA;IACX;IACAkB,iBAAiBlB,IAAA,EAAMmC,KAAA,EAAO;MAC1B,MAAMb,aAAA,GAAgBtB,IAAA,CAAKuB,cAAA;MAC3B,IAAIY,KAAA,IAAS,IAAI;QACbnC,IAAA,CAAKuB,cAAA,GAAiB;MAC1B;MACA,SAAStF,CAAA,GAAI,GAAGA,CAAA,GAAIqF,aAAA,CAAc9E,MAAA,EAAQP,CAAA,IAAK;QAC3CqF,aAAA,CAAcrF,CAAC,EAAEiF,gBAAA,CAAiBlB,IAAA,CAAKI,IAAA,EAAM+B,KAAK;MACtD;IACJ;EACJ;EA9Oa/E,SAAA,CAAKR,UAAA,GAAaA,UAAA;EAF/B,IAAMwF,QAAA,GAANhF,SAAA;EAiPA,MAAMiF,WAAA,GAAc;IAChBxF,IAAA,EAAM;IACNyF,SAAA,EAAWA,CAACC,QAAA,EAAUC,CAAA,EAAGC,MAAA,EAAQC,YAAA,KAAiBH,QAAA,CAASI,OAAA,CAAQF,MAAA,EAAQC,YAAY;IACvFE,cAAA,EAAgBA,CAACL,QAAA,EAAUC,CAAA,EAAGC,MAAA,EAAQzC,IAAA,KAASuC,QAAA,CAASpB,YAAA,CAAasB,MAAA,EAAQzC,IAAI;IACjF6C,YAAA,EAAcA,CAACN,QAAA,EAAUC,CAAA,EAAGC,MAAA,EAAQzC,IAAA,EAAMN,SAAA,EAAWC,SAAA,KAAc4C,QAAA,CAASvB,UAAA,CAAWyB,MAAA,EAAQzC,IAAA,EAAMN,SAAA,EAAWC,SAAS;IACzHmD,YAAA,EAAcA,CAACP,QAAA,EAAUC,CAAA,EAAGC,MAAA,EAAQzC,IAAA,KAASuC,QAAA,CAASN,UAAA,CAAWQ,MAAA,EAAQzC,IAAI;EACjF;EACA,MAAMnB,aAAA,CAAc;IAChB,IAAIpB,KAAA,EAAO;MACP,OAAO,KAAK+D,KAAA;IAChB;IACAhD,YAAYf,IAAA,EAAMsF,cAAA,EAAgBtE,QAAA,EAAU;MACxC,KAAKuE,WAAA,GAAc;QACf,aAAa;QACb,aAAa;QACb,aAAa;MACjB;MACA,KAAKxB,KAAA,GAAQ/D,IAAA;MACb,KAAKwF,eAAA,GAAkBF,cAAA;MACvB,KAAKG,OAAA,GAAUzE,QAAA,KAAaA,QAAA,IAAYA,QAAA,CAAS0E,MAAA,GAAS1E,QAAA,GAAWsE,cAAA,CAAeG,OAAA;MACpF,KAAKE,SAAA,GAAY3E,QAAA,KAAaA,QAAA,CAAS0E,MAAA,GAASJ,cAAA,GAAiBA,cAAA,CAAeK,SAAA;MAChF,KAAKC,aAAA,GACD5E,QAAA,KAAaA,QAAA,CAAS0E,MAAA,GAAS,KAAK3B,KAAA,GAAQuB,cAAA,CAAeM,aAAA;MAC/D,KAAKC,YAAA,GACD7E,QAAA,KAAaA,QAAA,CAAS8E,WAAA,GAAc9E,QAAA,GAAWsE,cAAA,CAAeO,YAAA;MAClE,KAAKE,cAAA,GACD/E,QAAA,KAAaA,QAAA,CAAS8E,WAAA,GAAcR,cAAA,GAAiBA,cAAA,CAAeS,cAAA;MACxE,KAAKC,kBAAA,GACDhF,QAAA,KAAaA,QAAA,CAAS8E,WAAA,GAAc,KAAK/B,KAAA,GAAQuB,cAAA,CAAeU,kBAAA;MACpE,KAAKC,SAAA,GAAYjF,QAAA,KAAaA,QAAA,CAASkF,QAAA,GAAWlF,QAAA,GAAWsE,cAAA,CAAeW,SAAA;MAC5E,KAAKE,WAAA,GACDnF,QAAA,KAAaA,QAAA,CAASkF,QAAA,GAAWZ,cAAA,GAAiBA,cAAA,CAAea,WAAA;MACrE,KAAKC,eAAA,GACDpF,QAAA,KAAaA,QAAA,CAASkF,QAAA,GAAW,KAAKnC,KAAA,GAAQuB,cAAA,CAAec,eAAA;MACjE,KAAKC,cAAA,GACDrF,QAAA,KAAaA,QAAA,CAASsF,aAAA,GAAgBtF,QAAA,GAAWsE,cAAA,CAAee,cAAA;MACpE,KAAKE,gBAAA,GACDvF,QAAA,KAAaA,QAAA,CAASsF,aAAA,GAAgBhB,cAAA,GAAiBA,cAAA,CAAeiB,gBAAA;MAC1E,KAAKC,oBAAA,GACDxF,QAAA,KAAaA,QAAA,CAASsF,aAAA,GAAgB,KAAKvC,KAAA,GAAQuB,cAAA,CAAekB,oBAAA;MACtE,KAAKC,eAAA,GACDzF,QAAA,KAAaA,QAAA,CAASmE,cAAA,GAAiBnE,QAAA,GAAWsE,cAAA,CAAemB,eAAA;MACrE,KAAKC,iBAAA,GACD1F,QAAA,KAAaA,QAAA,CAASmE,cAAA,GAAiBG,cAAA,GAAiBA,cAAA,CAAeoB,iBAAA;MAC3E,KAAKC,qBAAA,GACD3F,QAAA,KAAaA,QAAA,CAASmE,cAAA,GAAiB,KAAKpB,KAAA,GAAQuB,cAAA,CAAeqB,qBAAA;MACvE,KAAKC,aAAA,GACD5F,QAAA,KAAaA,QAAA,CAASoE,YAAA,GAAepE,QAAA,GAAWsE,cAAA,CAAesB,aAAA;MACnE,KAAKC,eAAA,GACD7F,QAAA,KAAaA,QAAA,CAASoE,YAAA,GAAeE,cAAA,GAAiBA,cAAA,CAAeuB,eAAA;MACzE,KAAKC,mBAAA,GACD9F,QAAA,KAAaA,QAAA,CAASoE,YAAA,GAAe,KAAKrB,KAAA,GAAQuB,cAAA,CAAewB,mBAAA;MACrE,KAAKC,aAAA,GACD/F,QAAA,KAAaA,QAAA,CAASqE,YAAA,GAAerE,QAAA,GAAWsE,cAAA,CAAeyB,aAAA;MACnE,KAAKC,eAAA,GACDhG,QAAA,KAAaA,QAAA,CAASqE,YAAA,GAAeC,cAAA,GAAiBA,cAAA,CAAe0B,eAAA;MACzE,KAAKC,mBAAA,GACDjG,QAAA,KAAaA,QAAA,CAASqE,YAAA,GAAe,KAAKtB,KAAA,GAAQuB,cAAA,CAAe2B,mBAAA;MACrE,KAAKC,UAAA,GAAa;MAClB,KAAKC,YAAA,GAAe;MACpB,KAAKC,iBAAA,GAAoB;MACzB,KAAKC,gBAAA,GAAmB;MACxB,MAAMC,eAAA,GAAkBtG,QAAA,IAAYA,QAAA,CAAS6D,SAAA;MAC7C,MAAM0C,aAAA,GAAgBjC,cAAA,IAAkBA,cAAA,CAAe4B,UAAA;MACvD,IAAII,eAAA,IAAmBC,aAAA,EAAe;QAGlC,KAAKL,UAAA,GAAaI,eAAA,GAAkBtG,QAAA,GAAW4D,WAAA;QAC/C,KAAKuC,YAAA,GAAe7B,cAAA;QACpB,KAAK8B,iBAAA,GAAoB;QACzB,KAAKC,gBAAA,GAAmB,KAAKtD,KAAA;QAC7B,IAAI,CAAC/C,QAAA,CAASmE,cAAA,EAAgB;UAC1B,KAAKsB,eAAA,GAAkB7B,WAAA;UACvB,KAAK8B,iBAAA,GAAoBpB,cAAA;UACzB,KAAKqB,qBAAA,GAAwB,KAAK5C,KAAA;QACtC;QACA,IAAI,CAAC/C,QAAA,CAASoE,YAAA,EAAc;UACxB,KAAKwB,aAAA,GAAgBhC,WAAA;UACrB,KAAKiC,eAAA,GAAkBvB,cAAA;UACvB,KAAKwB,mBAAA,GAAsB,KAAK/C,KAAA;QACpC;QACA,IAAI,CAAC/C,QAAA,CAASqE,YAAA,EAAc;UACxB,KAAK0B,aAAA,GAAgBnC,WAAA;UACrB,KAAKoC,eAAA,GAAkB1B,cAAA;UACvB,KAAK2B,mBAAA,GAAsB,KAAKlD,KAAA;QACpC;MACJ;IACJ;IACAvC,KAAKgG,UAAA,EAAYxG,QAAA,EAAU;MACvB,OAAO,KAAKyE,OAAA,GACN,KAAKA,OAAA,CAAQC,MAAA,CAAO,KAAKC,SAAA,EAAW,KAAK3F,IAAA,EAAMwH,UAAA,EAAYxG,QAAQ,IACnE,IAAI2D,QAAA,CAAS6C,UAAA,EAAYxG,QAAQ;IAC3C;IACAa,UAAU2F,UAAA,EAAY9F,QAAA,EAAUC,MAAA,EAAQ;MACpC,OAAO,KAAKkE,YAAA,GACN,KAAKA,YAAA,CAAaC,WAAA,CAAY,KAAKC,cAAA,EAAgB,KAAKC,kBAAA,EAAoBwB,UAAA,EAAY9F,QAAA,EAAUC,MAAM,IACxGD,QAAA;IACV;IACAS,OAAOqF,UAAA,EAAY9F,QAAA,EAAUO,SAAA,EAAWC,SAAA,EAAWP,MAAA,EAAQ;MACvD,OAAO,KAAKsE,SAAA,GACN,KAAKA,SAAA,CAAUC,QAAA,CAAS,KAAKC,WAAA,EAAa,KAAKC,eAAA,EAAiBoB,UAAA,EAAY9F,QAAA,EAAUO,SAAA,EAAWC,SAAA,EAAWP,MAAM,IAClHD,QAAA,CAAS+F,KAAA,CAAMxF,SAAA,EAAWC,SAAS;IAC7C;IACAG,YAAYmF,UAAA,EAAYpF,KAAA,EAAO;MAC3B,OAAO,KAAKiE,cAAA,GACN,KAAKA,cAAA,CAAeC,aAAA,CAAc,KAAKC,gBAAA,EAAkB,KAAKC,oBAAA,EAAsBgB,UAAA,EAAYpF,KAAK,IACrG;IACV;IACAsB,aAAa8D,UAAA,EAAYjF,IAAA,EAAM;MAC3B,IAAImF,UAAA,GAAanF,IAAA;MACjB,IAAI,KAAKkE,eAAA,EAAiB;QACtB,IAAI,KAAKS,UAAA,EAAY;UACjBQ,UAAA,CAAW5D,cAAA,CAAe6D,IAAA,CAAK,KAAKP,iBAAiB;QACzD;QACAM,UAAA,GAAa,KAAKjB,eAAA,CAAgBtB,cAAA,CAAe,KAAKuB,iBAAA,EAAmB,KAAKC,qBAAA,EAAuBa,UAAA,EAAYjF,IAAI;QACrH,IAAI,CAACmF,UAAA,EACDA,UAAA,GAAanF,IAAA;MACrB,OACK;QACD,IAAIA,IAAA,CAAKqF,UAAA,EAAY;UACjBrF,IAAA,CAAKqF,UAAA,CAAWrF,IAAI;QACxB,WACSA,IAAA,CAAKI,IAAA,IAAQyB,SAAA,EAAW;UAC7BH,iBAAA,CAAkB1B,IAAI;QAC1B,OACK;UACD,MAAM,IAAIzC,KAAA,CAAM,6BAA6B;QACjD;MACJ;MACA,OAAO4H,UAAA;IACX;IACAnE,WAAWiE,UAAA,EAAYjF,IAAA,EAAMN,SAAA,EAAWC,SAAA,EAAW;MAC/C,OAAO,KAAK0E,aAAA,GACN,KAAKA,aAAA,CAAcxB,YAAA,CAAa,KAAKyB,eAAA,EAAiB,KAAKC,mBAAA,EAAqBU,UAAA,EAAYjF,IAAA,EAAMN,SAAA,EAAWC,SAAS,IACtHK,IAAA,CAAKb,QAAA,CAAS+F,KAAA,CAAMxF,SAAA,EAAWC,SAAS;IAClD;IACAsC,WAAWgD,UAAA,EAAYjF,IAAA,EAAM;MACzB,IAAIsF,KAAA;MACJ,IAAI,KAAKd,aAAA,EAAe;QACpBc,KAAA,GAAQ,KAAKd,aAAA,CAAc1B,YAAA,CAAa,KAAK2B,eAAA,EAAiB,KAAKC,mBAAA,EAAqBO,UAAA,EAAYjF,IAAI;MAC5G,OACK;QACD,IAAI,CAACA,IAAA,CAAKe,QAAA,EAAU;UAChB,MAAMxD,KAAA,CAAM,wBAAwB;QACxC;QACA+H,KAAA,GAAQtF,IAAA,CAAKe,QAAA,CAASf,IAAI;MAC9B;MACA,OAAOsF,KAAA;IACX;IACA3C,QAAQsC,UAAA,EAAYM,OAAA,EAAS;MAGzB,IAAI;QACA,KAAKZ,UAAA,IACD,KAAKA,UAAA,CAAWrC,SAAA,CAAU,KAAKsC,YAAA,EAAc,KAAKE,gBAAA,EAAkBG,UAAA,EAAYM,OAAO;MAC/F,SACO9D,GAAA,EAAK;QACR,KAAK3B,WAAA,CAAYmF,UAAA,EAAYxD,GAAG;MACpC;IACJ;IAAA;IAEAP,iBAAiBd,IAAA,EAAM+B,KAAA,EAAO;MAC1B,MAAMqD,MAAA,GAAS,KAAKxC,WAAA;MACpB,MAAMyC,IAAA,GAAOD,MAAA,CAAOpF,IAAI;MACxB,MAAMsF,IAAA,GAAQF,MAAA,CAAOpF,IAAI,IAAIqF,IAAA,GAAOtD,KAAA;MACpC,IAAIuD,IAAA,GAAO,GAAG;QACV,MAAM,IAAInI,KAAA,CAAM,0CAA0C;MAC9D;MACA,IAAIkI,IAAA,IAAQ,KAAKC,IAAA,IAAQ,GAAG;QACxB,MAAMH,OAAA,GAAU;UACZ1D,SAAA,EAAW2D,MAAA,CAAO,WAAW,IAAI;UACjClF,SAAA,EAAWkF,MAAA,CAAO,WAAW,IAAI;UACjCnF,SAAA,EAAWmF,MAAA,CAAO,WAAW,IAAI;UACjCG,MAAA,EAAQvF;QACZ;QACA,KAAKuC,OAAA,CAAQ,KAAKnB,KAAA,EAAO+D,OAAO;MACpC;IACJ;EACJ;EACA,MAAM3D,QAAA,CAAS;IACXpD,YAAY4B,IAAA,EAAMhB,MAAA,EAAQD,QAAA,EAAUyG,OAAA,EAASP,UAAA,EAAYtE,QAAA,EAAU;MAE/D,KAAKS,KAAA,GAAQ;MACb,KAAKb,QAAA,GAAW;MAEhB,KAAKY,cAAA,GAAiB;MAEtB,KAAKsE,MAAA,GAAS;MACd,KAAKzF,IAAA,GAAOA,IAAA;MACZ,KAAKhB,MAAA,GAASA,MAAA;MACd,KAAKyB,IAAA,GAAO+E,OAAA;MACZ,KAAKP,UAAA,GAAaA,UAAA;MAClB,KAAKtE,QAAA,GAAWA,QAAA;MAChB,IAAI,CAAC5B,QAAA,EAAU;QACX,MAAM,IAAI5B,KAAA,CAAM,yBAAyB;MAC7C;MACA,KAAK4B,QAAA,GAAWA,QAAA;MAChB,MAAM2G,QAAO;MAEb,IAAI1F,IAAA,KAASC,SAAA,IAAauF,OAAA,IAAWA,OAAA,CAAQG,IAAA,EAAM;QAC/C,KAAKnG,MAAA,GAASgC,QAAA,CAASZ,UAAA;MAC3B,OACK;QACD,KAAKpB,MAAA,GAAS,YAAY;UACtB,OAAOgC,QAAA,CAASZ,UAAA,CAAWgF,IAAA,CAAKvK,MAAA,EAAQqK,OAAM,MAAMtG,SAAS;QACjE;MACJ;IACJ;IACA,OAAOwB,WAAWhB,IAAA,EAAMyC,MAAA,EAAQwD,IAAA,EAAM;MAClC,IAAI,CAACjG,IAAA,EAAM;QACPA,IAAA,GAAO;MACX;MACAkG,yBAAA;MACA,IAAI;QACAlG,IAAA,CAAKW,QAAA;QACL,OAAOX,IAAA,CAAKvC,IAAA,CAAKsC,OAAA,CAAQC,IAAA,EAAMyC,MAAA,EAAQwD,IAAI;MAC/C,UACA;QACI,IAAIC,yBAAA,IAA6B,GAAG;UAChCC,mBAAA,CAAoB;QACxB;QACAD,yBAAA;MACJ;IACJ;IACA,IAAIzI,KAAA,EAAO;MACP,OAAO,KAAK+D,KAAA;IAChB;IACA,IAAItB,MAAA,EAAQ;MACR,OAAO,KAAK2F,MAAA;IAChB;IACAO,sBAAA,EAAwB;MACpB,KAAK3F,aAAA,CAAcN,YAAA,EAAckB,UAAU;IAC/C;IAAA;IAEAZ,cAAc4F,OAAA,EAASC,UAAA,EAAYC,UAAA,EAAY;MAC3C,IAAI,KAAKV,MAAA,KAAWS,UAAA,IAAc,KAAKT,MAAA,KAAWU,UAAA,EAAY;QAC1D,KAAKV,MAAA,GAASQ,OAAA;QACd,IAAIA,OAAA,IAAWlG,YAAA,EAAc;UACzB,KAAKoB,cAAA,GAAiB;QAC1B;MACJ,OACK;QACD,MAAM,IAAIhE,KAAA,CAAM,GAAG,KAAK6C,IAAI,KAAK,KAAKhB,MAAM,6BAA6BiH,OAAO,uBAAuBC,UAAU,IAAIC,UAAA,GAAa,UAAUA,UAAA,GAAa,MAAM,EAAE,UAAU,KAAKV,MAAM,IAAI;MAC9L;IACJ;IACAvJ,SAAA,EAAW;MACP,IAAI,KAAKuE,IAAA,IAAQ,OAAO,KAAKA,IAAA,CAAK2F,QAAA,KAAa,aAAa;QACxD,OAAO,KAAK3F,IAAA,CAAK2F,QAAA,CAASlK,QAAA,CAAS;MACvC,OACK;QACD,OAAOmK,MAAA,CAAOC,SAAA,CAAUpK,QAAA,CAAS0J,IAAA,CAAK,IAAI;MAC9C;IACJ;IAAA;IAAA;IAGAW,OAAA,EAAS;MACL,OAAO;QACHvG,IAAA,EAAM,KAAKA,IAAA;QACXF,KAAA,EAAO,KAAKA,KAAA;QACZd,MAAA,EAAQ,KAAKA,MAAA;QACb3B,IAAA,EAAM,KAAKA,IAAA,CAAKZ,IAAA;QAChB8D,QAAA,EAAU,KAAKA;MACnB;IACJ;EACJ;EAMA,MAAMiG,gBAAA,GAAmBhK,UAAA,CAAW,YAAY;EAChD,MAAMiK,aAAA,GAAgBjK,UAAA,CAAW,SAAS;EAC1C,MAAMkK,UAAA,GAAalK,UAAA,CAAW,MAAM;EACpC,IAAImK,eAAA,GAAkB,EAAC;EACvB,IAAIC,yBAAA,GAA4B;EAChC,IAAIC,2BAAA;EACJ,SAASC,wBAAwBC,IAAA,EAAM;IACnC,IAAI,CAACF,2BAAA,EAA6B;MAC9B,IAAIxL,MAAA,CAAOoL,aAAa,GAAG;QACvBI,2BAAA,GAA8BxL,MAAA,CAAOoL,aAAa,EAAEO,OAAA,CAAQ,CAAC;MACjE;IACJ;IACA,IAAIH,2BAAA,EAA6B;MAC7B,IAAII,UAAA,GAAaJ,2BAAA,CAA4BH,UAAU;MACvD,IAAI,CAACO,UAAA,EAAY;QAGbA,UAAA,GAAaJ,2BAAA,CAA4B,MAAM;MACnD;MACAI,UAAA,CAAWrB,IAAA,CAAKiB,2BAAA,EAA6BE,IAAI;IACrD,OACK;MACD1L,MAAA,CAAOmL,gBAAgB,EAAEO,IAAA,EAAM,CAAC;IACpC;EACJ;EACA,SAASzF,kBAAkB1B,IAAA,EAAM;IAG7B,IAAIkG,yBAAA,KAA8B,KAAKa,eAAA,CAAgBvK,MAAA,KAAW,GAAG;MAEjE0K,uBAAA,CAAwBf,mBAAmB;IAC/C;IACAnG,IAAA,IAAQ+G,eAAA,CAAgB3B,IAAA,CAAKpF,IAAI;EACrC;EACA,SAASmG,oBAAA,EAAsB;IAC3B,IAAI,CAACa,yBAAA,EAA2B;MAC5BA,yBAAA,GAA4B;MAC5B,OAAOD,eAAA,CAAgBvK,MAAA,EAAQ;QAC3B,MAAM8K,KAAA,GAAQP,eAAA;QACdA,eAAA,GAAkB,EAAC;QACnB,SAAS9K,CAAA,GAAI,GAAGA,CAAA,GAAIqL,KAAA,CAAM9K,MAAA,EAAQP,CAAA,IAAK;UACnC,MAAM+D,IAAA,GAAOsH,KAAA,CAAMrL,CAAC;UACpB,IAAI;YACA+D,IAAA,CAAKvC,IAAA,CAAKsC,OAAA,CAAQC,IAAA,EAAM,MAAM,IAAI;UACtC,SACOH,KAAA,EAAO;YACVxB,IAAA,CAAKkJ,gBAAA,CAAiB1H,KAAK;UAC/B;QACJ;MACJ;MACAxB,IAAA,CAAKmJ,kBAAA,CAAmB;MACxBR,yBAAA,GAA4B;IAChC;EACJ;EAMA,MAAM/G,OAAA,GAAU;IAAEpD,IAAA,EAAM;EAAU;EAClC,MAAMsD,YAAA,GAAe;IAAgBkB,UAAA,GAAa;IAAcX,SAAA,GAAY;IAAaF,OAAA,GAAU;IAAW0B,SAAA,GAAY;IAAajB,OAAA,GAAU;EACjJ,MAAMY,SAAA,GAAY;IAAavB,SAAA,GAAY;IAAaD,SAAA,GAAY;EACpE,MAAM/C,OAAA,GAAU,CAAC;EACjB,MAAMe,IAAA,GAAO;IACToJ,MAAA,EAAQ7K,UAAA;IACR8K,gBAAA,EAAkBA,CAAA,KAAM9J,iBAAA;IACxB2J,gBAAA,EAAkBI,IAAA;IAClBH,kBAAA,EAAoBG,IAAA;IACpBjG,iBAAA;IACAkG,iBAAA,EAAmBA,CAAA,KAAM,CAACxF,QAAA,CAASxF,UAAA,CAAW,iCAAiC,CAAC;IAChFiL,gBAAA,EAAkBA,CAAA,KAAM,EAAC;IACzBC,iBAAA,EAAmBH,IAAA;IACnBI,WAAA,EAAaA,CAAA,KAAMJ,IAAA;IACnBK,aAAA,EAAeA,CAAA,KAAM,EAAC;IACtBC,SAAA,EAAWA,CAAA,KAAMN,IAAA;IACjBO,cAAA,EAAgBA,CAAA,KAAMP,IAAA;IACtBQ,mBAAA,EAAqBA,CAAA,KAAMR,IAAA;IAC3BS,UAAA,EAAYA,CAAA,KAAM;IAClBC,gBAAA,EAAkBA,CAAA,KAAM;IACxBC,oBAAA,EAAsBA,CAAA,KAAMX,IAAA;IAC5BY,8BAAA,EAAgCA,CAAA,KAAM;IACtCC,YAAA,EAAcA,CAAA,KAAM;IACpBC,UAAA,EAAYA,CAAA,KAAM,EAAC;IACnBC,UAAA,EAAYA,CAAA,KAAMf,IAAA;IAClBgB,mBAAA,EAAqBA,CAAA,KAAMhB,IAAA;IAC3BiB,gBAAA,EAAkBA,CAAA,KAAM,EAAC;IACzBC,qBAAA,EAAuBA,CAAA,KAAMlB,IAAA;IAC7BmB,iBAAA,EAAmBA,CAAA,KAAMnB,IAAA;IACzBoB,cAAA,EAAgBA,CAAA,KAAMpB,IAAA;IACtBT;EACJ;EACA,IAAItJ,iBAAA,GAAoB;IAAED,MAAA,EAAQ;IAAMF,IAAA,EAAM,IAAI2E,QAAA,CAAS,MAAM,IAAI;EAAE;EACvE,IAAItE,YAAA,GAAe;EACnB,IAAIoI,yBAAA,GAA4B;EAChC,SAASyB,KAAA,EAAO,CAAE;EAClBzK,kBAAA,CAAmB,QAAQ,MAAM;EACjC,OAAOkF,QAAA;AACX;AAEA,SAAS4G,SAAA,EAAW;EAUhB,MAAMvN,UAASkB,UAAA;EACf,MAAMwB,cAAA,GAAiB1C,QAAOmB,UAAA,CAAW,yBAAyB,CAAC,MAAM;EACzE,IAAInB,QAAO,MAAM,MAAM0C,cAAA,IAAkB,OAAO1C,QAAO,MAAM,EAAEmB,UAAA,KAAe,aAAa;IACvF,MAAM,IAAIW,KAAA,CAAM,sBAAsB;EAC1C;EAEA9B,QAAO,MAAM,MAAMsB,QAAA,CAAS;EAC5B,OAAOtB,QAAO,MAAM;AACxB;AASA,IAAM8M,8BAAA,GAAiC9B,MAAA,CAAOwC,wBAAA;AAE9C,IAAMX,oBAAA,GAAuB7B,MAAA,CAAOyC,cAAA;AAEpC,IAAMC,oBAAA,GAAuB1C,MAAA,CAAO2C,cAAA;AAEpC,IAAMZ,YAAA,GAAe/B,MAAA,CAAO4C,MAAA;AAE5B,IAAMZ,UAAA,GAAaa,KAAA,CAAM5C,SAAA,CAAU6C,KAAA;AAEnC,IAAMC,sBAAA,GAAyB;AAE/B,IAAMC,yBAAA,GAA4B;AAElC,IAAMC,8BAAA,GAAiC9M,UAAA,CAAW4M,sBAAsB;AAExE,IAAMG,iCAAA,GAAoC/M,UAAA,CAAW6M,yBAAyB;AAE9E,IAAMG,QAAA,GAAW;AAEjB,IAAMC,SAAA,GAAY;AAElB,IAAMC,kBAAA,GAAqBlN,UAAA,CAAW,EAAE;AACxC,SAAS+L,oBAAoBxJ,QAAA,EAAUC,MAAA,EAAQ;EAC3C,OAAO2K,IAAA,CAAKrM,OAAA,CAAQwB,IAAA,CAAKC,QAAA,EAAUC,MAAM;AAC7C;AACA,SAAS4K,iCAAiC5K,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAA,EAAc;EAC5F,OAAOgI,IAAA,CAAKrM,OAAA,CAAQoE,iBAAA,CAAkB1C,MAAA,EAAQD,QAAA,EAAU0B,IAAA,EAAMc,cAAA,EAAgBI,YAAY;AAC9F;AACA,IAAMkI,UAAA,GAAarN,UAAA;AACnB,IAAMsN,cAAA,GAAiB,OAAOC,MAAA,KAAW;AACzC,IAAMC,cAAA,GAAiBF,cAAA,GAAiBC,MAAA,GAAS;AACjD,IAAME,OAAA,GAAWH,cAAA,IAAkBE,cAAA,IAAmBzN,UAAA;AACtD,IAAM2N,gBAAA,GAAmB;AACzB,SAAStC,cAAc/B,IAAA,EAAM7G,MAAA,EAAQ;EACjC,SAASnD,CAAA,GAAIgK,IAAA,CAAKzJ,MAAA,GAAS,GAAGP,CAAA,IAAK,GAAGA,CAAA,IAAK;IACvC,IAAI,OAAOgK,IAAA,CAAKhK,CAAC,MAAM,YAAY;MAC/BgK,IAAA,CAAKhK,CAAC,IAAI0M,mBAAA,CAAoB1C,IAAA,CAAKhK,CAAC,GAAGmD,MAAA,GAAS,MAAMnD,CAAC;IAC3D;EACJ;EACA,OAAOgK,IAAA;AACX;AACA,SAASsE,eAAe7D,SAAA,EAAW8D,OAAA,EAAS;EACxC,MAAMpL,MAAA,GAASsH,SAAA,CAAUlI,WAAA,CAAY,MAAM;EAC3C,SAASvC,CAAA,GAAI,GAAGA,CAAA,GAAIuO,OAAA,CAAQhO,MAAA,EAAQP,CAAA,IAAK;IACrC,MAAMY,IAAA,GAAO2N,OAAA,CAAQvO,CAAC;IACtB,MAAMsG,QAAA,GAAWmE,SAAA,CAAU7J,IAAI;IAC/B,IAAI0F,QAAA,EAAU;MACV,MAAMkI,aAAA,GAAgBlC,8BAAA,CAA+B7B,SAAA,EAAW7J,IAAI;MACpE,IAAI,CAAC6N,kBAAA,CAAmBD,aAAa,GAAG;QACpC;MACJ;MACA/D,SAAA,CAAU7J,IAAI,KAAM0F,aAAa;QAC7B,MAAMoI,OAAA,GAAU,SAAAA,CAAA,EAAY;UACxB,OAAOpI,UAAS2C,KAAA,CAAM,MAAM8C,aAAA,CAAcxI,SAAA,EAAWJ,MAAA,GAAS,MAAMvC,IAAI,CAAC;QAC7E;QACAgM,qBAAA,CAAsB8B,OAAA,EAASpI,SAAQ;QACvC,OAAOoI,OAAA;MACX,GAAGpI,QAAQ;IACf;EACJ;AACJ;AACA,SAASmI,mBAAmBE,YAAA,EAAc;EACtC,IAAI,CAACA,YAAA,EAAc;IACf,OAAO;EACX;EACA,IAAIA,YAAA,CAAaC,QAAA,KAAa,OAAO;IACjC,OAAO;EACX;EACA,OAAO,EAAE,OAAOD,YAAA,CAAa9L,GAAA,KAAQ,cAAc,OAAO8L,YAAA,CAAaE,GAAA,KAAQ;AACnF;AACA,IAAMC,WAAA,GAAc,OAAOC,iBAAA,KAAsB,eAAelF,IAAA,YAAgBkF,iBAAA;AAGhF,IAAMC,MAAA,GAAS,EAAE,QAAQZ,OAAA,KACrB,OAAOA,OAAA,CAAQa,OAAA,KAAY,eAC3Bb,OAAA,CAAQa,OAAA,CAAQ5O,QAAA,CAAS,MAAM;AACnC,IAAM6O,SAAA,GAAY,CAACF,MAAA,IAAU,CAACF,WAAA,IAAe,CAAC,EAAEb,cAAA,IAAkBE,cAAA,CAAe,aAAa;AAI9F,IAAMgB,KAAA,GAAQ,OAAOf,OAAA,CAAQa,OAAA,KAAY,eACrCb,OAAA,CAAQa,OAAA,CAAQ5O,QAAA,CAAS,MAAM,sBAC/B,CAACyO,WAAA,IACD,CAAC,EAAEb,cAAA,IAAkBE,cAAA,CAAe,aAAa;AACrD,IAAMiB,sBAAA,GAAyB,CAAC;AAChC,IAAMC,MAAA,GAAS,SAAAA,CAAUC,KAAA,EAAO;EAG5BA,KAAA,GAAQA,KAAA,IAASlB,OAAA,CAAQkB,KAAA;EACzB,IAAI,CAACA,KAAA,EAAO;IACR;EACJ;EACA,IAAIC,eAAA,GAAkBH,sBAAA,CAAuBE,KAAA,CAAMnL,IAAI;EACvD,IAAI,CAACoL,eAAA,EAAiB;IAClBA,eAAA,GAAkBH,sBAAA,CAAuBE,KAAA,CAAMnL,IAAI,IAAI6J,UAAA,CAAW,gBAAgBsB,KAAA,CAAMnL,IAAI;EAChG;EACA,MAAMqC,MAAA,GAAS,QAAQ8I,KAAA,CAAM9I,MAAA,IAAU4H,OAAA;EACvC,MAAMoB,QAAA,GAAWhJ,MAAA,CAAO+I,eAAe;EACvC,IAAIE,MAAA;EACJ,IAAIP,SAAA,IAAa1I,MAAA,KAAW2H,cAAA,IAAkBmB,KAAA,CAAMnL,IAAA,KAAS,SAAS;IAIlE,MAAMuL,UAAA,GAAaJ,KAAA;IACnBG,MAAA,GACID,QAAA,IACIA,QAAA,CAASzF,IAAA,CAAK,MAAM2F,UAAA,CAAWC,OAAA,EAASD,UAAA,CAAWE,QAAA,EAAUF,UAAA,CAAWG,MAAA,EAAQH,UAAA,CAAWI,KAAA,EAAOJ,UAAA,CAAW9L,KAAK;IAC1H,IAAI6L,MAAA,KAAW,MAAM;MACjBH,KAAA,CAAMS,cAAA,CAAe;IACzB;EACJ,OACK;IACDN,MAAA,GAASD,QAAA,IAAYA,QAAA,CAASvG,KAAA,CAAM,MAAM1F,SAAS;IACnD,IAAIkM,MAAA,IAAU,UAAa,CAACA,MAAA,EAAQ;MAChCH,KAAA,CAAMS,cAAA,CAAe;IACzB;EACJ;EACA,OAAON,MAAA;AACX;AACA,SAASO,cAAcC,GAAA,EAAKC,IAAA,EAAMzF,SAAA,EAAW;EACzC,IAAI0F,IAAA,GAAO7D,8BAAA,CAA+B2D,GAAA,EAAKC,IAAI;EACnD,IAAI,CAACC,IAAA,IAAQ1F,SAAA,EAAW;IAEpB,MAAM+D,aAAA,GAAgBlC,8BAAA,CAA+B7B,SAAA,EAAWyF,IAAI;IACpE,IAAI1B,aAAA,EAAe;MACf2B,IAAA,GAAO;QAAEC,UAAA,EAAY;QAAMC,YAAA,EAAc;MAAK;IAClD;EACJ;EAGA,IAAI,CAACF,IAAA,IAAQ,CAACA,IAAA,CAAKE,YAAA,EAAc;IAC7B;EACJ;EACA,MAAMC,mBAAA,GAAsBtC,UAAA,CAAW,OAAOkC,IAAA,GAAO,SAAS;EAC9D,IAAID,GAAA,CAAIhO,cAAA,CAAeqO,mBAAmB,KAAKL,GAAA,CAAIK,mBAAmB,GAAG;IACrE;EACJ;EAMA,OAAOH,IAAA,CAAKvB,QAAA;EACZ,OAAOuB,IAAA,CAAK9G,KAAA;EACZ,MAAMkH,eAAA,GAAkBJ,IAAA,CAAKtN,GAAA;EAC7B,MAAM2N,eAAA,GAAkBL,IAAA,CAAKtB,GAAA;EAE7B,MAAM4B,SAAA,GAAYP,IAAA,CAAK5C,KAAA,CAAM,CAAC;EAC9B,IAAIiC,eAAA,GAAkBH,sBAAA,CAAuBqB,SAAS;EACtD,IAAI,CAAClB,eAAA,EAAiB;IAClBA,eAAA,GAAkBH,sBAAA,CAAuBqB,SAAS,IAAIzC,UAAA,CAAW,gBAAgByC,SAAS;EAC9F;EACAN,IAAA,CAAKtB,GAAA,GAAM,UAAU6B,QAAA,EAAU;IAG3B,IAAIlK,MAAA,GAAS;IACb,IAAI,CAACA,MAAA,IAAUyJ,GAAA,KAAQ7B,OAAA,EAAS;MAC5B5H,MAAA,GAAS4H,OAAA;IACb;IACA,IAAI,CAAC5H,MAAA,EAAQ;MACT;IACJ;IACA,MAAMmK,aAAA,GAAgBnK,MAAA,CAAO+I,eAAe;IAC5C,IAAI,OAAOoB,aAAA,KAAkB,YAAY;MACrCnK,MAAA,CAAOoK,mBAAA,CAAoBH,SAAA,EAAWpB,MAAM;IAChD;IAGAmB,eAAA,IAAmBA,eAAA,CAAgBzG,IAAA,CAAKvD,MAAA,EAAQ,IAAI;IACpDA,MAAA,CAAO+I,eAAe,IAAImB,QAAA;IAC1B,IAAI,OAAOA,QAAA,KAAa,YAAY;MAChClK,MAAA,CAAOqK,gBAAA,CAAiBJ,SAAA,EAAWpB,MAAA,EAAQ,KAAK;IACpD;EACJ;EAGAc,IAAA,CAAKtN,GAAA,GAAM,YAAY;IAGnB,IAAI2D,MAAA,GAAS;IACb,IAAI,CAACA,MAAA,IAAUyJ,GAAA,KAAQ7B,OAAA,EAAS;MAC5B5H,MAAA,GAAS4H,OAAA;IACb;IACA,IAAI,CAAC5H,MAAA,EAAQ;MACT,OAAO;IACX;IACA,MAAMgJ,QAAA,GAAWhJ,MAAA,CAAO+I,eAAe;IACvC,IAAIC,QAAA,EAAU;MACV,OAAOA,QAAA;IACX,WACSe,eAAA,EAAiB;MAOtB,IAAIlH,KAAA,GAAQkH,eAAA,CAAgBxG,IAAA,CAAK,IAAI;MACrC,IAAIV,KAAA,EAAO;QACP8G,IAAA,CAAKtB,GAAA,CAAI9E,IAAA,CAAK,MAAMV,KAAK;QACzB,IAAI,OAAO7C,MAAA,CAAO6H,gBAAgB,MAAM,YAAY;UAChD7H,MAAA,CAAOsK,eAAA,CAAgBZ,IAAI;QAC/B;QACA,OAAO7G,KAAA;MACX;IACJ;IACA,OAAO;EACX;EACAgD,oBAAA,CAAqB4D,GAAA,EAAKC,IAAA,EAAMC,IAAI;EACpCF,GAAA,CAAIK,mBAAmB,IAAI;AAC/B;AACA,SAASzE,kBAAkBoE,GAAA,EAAKvN,UAAA,EAAY+H,SAAA,EAAW;EACnD,IAAI/H,UAAA,EAAY;IACZ,SAAS1C,CAAA,GAAI,GAAGA,CAAA,GAAI0C,UAAA,CAAWnC,MAAA,EAAQP,CAAA,IAAK;MACxCgQ,aAAA,CAAcC,GAAA,EAAK,OAAOvN,UAAA,CAAW1C,CAAC,GAAGyK,SAAS;IACtD;EACJ,OACK;IACD,MAAMsG,YAAA,GAAe,EAAC;IACtB,WAAWb,IAAA,IAAQD,GAAA,EAAK;MACpB,IAAIC,IAAA,CAAK5C,KAAA,CAAM,GAAG,CAAC,KAAK,MAAM;QAC1ByD,YAAA,CAAa5H,IAAA,CAAK+G,IAAI;MAC1B;IACJ;IACA,SAASc,CAAA,GAAI,GAAGA,CAAA,GAAID,YAAA,CAAaxQ,MAAA,EAAQyQ,CAAA,IAAK;MAC1ChB,aAAA,CAAcC,GAAA,EAAKc,YAAA,CAAaC,CAAC,GAAGvG,SAAS;IACjD;EACJ;AACJ;AACA,IAAMwG,mBAAA,GAAsBjD,UAAA,CAAW,kBAAkB;AAEzD,SAASvB,WAAWyE,SAAA,EAAW;EAC3B,MAAMC,aAAA,GAAgB/C,OAAA,CAAQ8C,SAAS;EACvC,IAAI,CAACC,aAAA,EACD;EAEJ/C,OAAA,CAAQJ,UAAA,CAAWkD,SAAS,CAAC,IAAIC,aAAA;EACjC/C,OAAA,CAAQ8C,SAAS,IAAI,YAAY;IAC7B,MAAME,CAAA,GAAIrF,aAAA,CAAcxI,SAAA,EAAW2N,SAAS;IAC5C,QAAQE,CAAA,CAAE7Q,MAAA;MACN,KAAK;QACD,KAAK0Q,mBAAmB,IAAI,IAAIE,aAAA,CAAc;QAC9C;MACJ,KAAK;QACD,KAAKF,mBAAmB,IAAI,IAAIE,aAAA,CAAcC,CAAA,CAAE,CAAC,CAAC;QAClD;MACJ,KAAK;QACD,KAAKH,mBAAmB,IAAI,IAAIE,aAAA,CAAcC,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,CAAC;QACxD;MACJ,KAAK;QACD,KAAKH,mBAAmB,IAAI,IAAIE,aAAA,CAAcC,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,CAAC;QAC9D;MACJ,KAAK;QACD,KAAKH,mBAAmB,IAAI,IAAIE,aAAA,CAAcC,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,CAAC;QACpE;MACJ;QACI,MAAM,IAAI9P,KAAA,CAAM,oBAAoB;IAC5C;EACJ;EAEAsL,qBAAA,CAAsBwB,OAAA,CAAQ8C,SAAS,GAAGC,aAAa;EACvD,MAAME,QAAA,GAAW,IAAIF,aAAA,CAAc,YAAY,CAAE,CAAC;EAClD,IAAIjB,IAAA;EACJ,KAAKA,IAAA,IAAQmB,QAAA,EAAU;IAEnB,IAAIH,SAAA,KAAc,oBAAoBhB,IAAA,KAAS,gBAC3C;IACJ,CAAC,UAAUA,OAAM;MACb,IAAI,OAAOmB,QAAA,CAASnB,KAAI,MAAM,YAAY;QACtC9B,OAAA,CAAQ8C,SAAS,EAAEzG,SAAA,CAAUyF,KAAI,IAAI,YAAY;UAC7C,OAAO,KAAKe,mBAAmB,EAAEf,KAAI,EAAEjH,KAAA,CAAM,KAAKgI,mBAAmB,GAAG1N,SAAS;QACrF;MACJ,OACK;QACD8I,oBAAA,CAAqB+B,OAAA,CAAQ8C,SAAS,EAAEzG,SAAA,EAAWyF,OAAM;UACrDrB,GAAA,EAAK,SAAAA,CAAU9M,EAAA,EAAI;YACf,IAAI,OAAOA,EAAA,KAAO,YAAY;cAC1B,KAAKkP,mBAAmB,EAAEf,KAAI,IAAIxD,mBAAA,CAAoB3K,EAAA,EAAImP,SAAA,GAAY,MAAMhB,KAAI;cAIhFtD,qBAAA,CAAsB,KAAKqE,mBAAmB,EAAEf,KAAI,GAAGnO,EAAE;YAC7D,OACK;cACD,KAAKkP,mBAAmB,EAAEf,KAAI,IAAInO,EAAA;YACtC;UACJ;UACAc,GAAA,EAAK,SAAAA,CAAA,EAAY;YACb,OAAO,KAAKoO,mBAAmB,EAAEf,KAAI;UACzC;QACJ,CAAC;MACL;IACJ,GAAGA,IAAI;EACX;EACA,KAAKA,IAAA,IAAQiB,aAAA,EAAe;IACxB,IAAIjB,IAAA,KAAS,eAAeiB,aAAA,CAAclP,cAAA,CAAeiO,IAAI,GAAG;MAC5D9B,OAAA,CAAQ8C,SAAS,EAAEhB,IAAI,IAAIiB,aAAA,CAAcjB,IAAI;IACjD;EACJ;AACJ;AACA,SAASpE,YAAYtF,MAAA,EAAQ5F,IAAA,EAAM0Q,OAAA,EAAS;EACxC,IAAIC,KAAA,GAAQ/K,MAAA;EACZ,OAAO+K,KAAA,IAAS,CAACA,KAAA,CAAMtP,cAAA,CAAerB,IAAI,GAAG;IACzC2Q,KAAA,GAAQrE,oBAAA,CAAqBqE,KAAK;EACtC;EACA,IAAI,CAACA,KAAA,IAAS/K,MAAA,CAAO5F,IAAI,GAAG;IAExB2Q,KAAA,GAAQ/K,MAAA;EACZ;EACA,MAAMgL,YAAA,GAAexD,UAAA,CAAWpN,IAAI;EACpC,IAAI0F,QAAA,GAAW;EACf,IAAIiL,KAAA,KAAU,EAAEjL,QAAA,GAAWiL,KAAA,CAAMC,YAAY,MAAM,CAACD,KAAA,CAAMtP,cAAA,CAAeuP,YAAY,IAAI;IACrFlL,QAAA,GAAWiL,KAAA,CAAMC,YAAY,IAAID,KAAA,CAAM3Q,IAAI;IAG3C,MAAMuP,IAAA,GAAOoB,KAAA,IAASjF,8BAAA,CAA+BiF,KAAA,EAAO3Q,IAAI;IAChE,IAAI6N,kBAAA,CAAmB0B,IAAI,GAAG;MAC1B,MAAMsB,aAAA,GAAgBH,OAAA,CAAQhL,QAAA,EAAUkL,YAAA,EAAc5Q,IAAI;MAC1D2Q,KAAA,CAAM3Q,IAAI,IAAI,YAAY;QACtB,OAAO6Q,aAAA,CAAc,MAAMlO,SAAS;MACxC;MACAqJ,qBAAA,CAAsB2E,KAAA,CAAM3Q,IAAI,GAAG0F,QAAQ;IAC/C;EACJ;EACA,OAAOA,QAAA;AACX;AAEA,SAAS2F,eAAegE,GAAA,EAAKyB,QAAA,EAAUC,WAAA,EAAa;EAChD,IAAIC,SAAA,GAAY;EAChB,SAAS1M,aAAanB,IAAA,EAAM;IACxB,MAAMa,IAAA,GAAOb,IAAA,CAAKa,IAAA;IAClBA,IAAA,CAAKoF,IAAA,CAAKpF,IAAA,CAAKiN,KAAK,IAAI,YAAY;MAChC9N,IAAA,CAAKJ,MAAA,CAAOsF,KAAA,CAAM,MAAM1F,SAAS;IACrC;IACAqO,SAAA,CAAU3I,KAAA,CAAMrE,IAAA,CAAK4B,MAAA,EAAQ5B,IAAA,CAAKoF,IAAI;IACtC,OAAOjG,IAAA;EACX;EACA6N,SAAA,GAAY9F,WAAA,CAAYmE,GAAA,EAAKyB,QAAA,EAAWpL,QAAA,IAAa,UAAUuD,OAAMG,IAAA,EAAM;IACvE,MAAM8H,IAAA,GAAOH,WAAA,CAAY9H,OAAMG,IAAI;IACnC,IAAI8H,IAAA,CAAKD,KAAA,IAAS,KAAK,OAAO7H,IAAA,CAAK8H,IAAA,CAAKD,KAAK,MAAM,YAAY;MAC3D,OAAO9D,gCAAA,CAAiC+D,IAAA,CAAKlR,IAAA,EAAMoJ,IAAA,CAAK8H,IAAA,CAAKD,KAAK,GAAGC,IAAA,EAAM5M,YAAY;IAC3F,OACK;MAED,OAAOoB,QAAA,CAAS2C,KAAA,CAAMY,OAAMG,IAAI;IACpC;EACJ,CAAC;AACL;AACA,SAAS4C,sBAAsB8B,OAAA,EAASqD,QAAA,EAAU;EAC9CrD,OAAA,CAAQV,UAAA,CAAW,kBAAkB,CAAC,IAAI+D,QAAA;AAC9C;AACA,IAAIC,kBAAA,GAAqB;AACzB,IAAIC,QAAA,GAAW;AACf,SAASC,KAAA,EAAO;EACZ,IAAI;IACA,MAAMC,EAAA,GAAKhE,cAAA,CAAeiE,SAAA,CAAUC,SAAA;IACpC,IAAIF,EAAA,CAAGG,OAAA,CAAQ,OAAO,MAAM,MAAMH,EAAA,CAAGG,OAAA,CAAQ,UAAU,MAAM,IAAI;MAC7D,OAAO;IACX;EACJ,SACO1O,KAAA,EAAO,CAAE;EAChB,OAAO;AACX;AACA,SAASuI,WAAA,EAAa;EAClB,IAAI6F,kBAAA,EAAoB;IACpB,OAAOC,QAAA;EACX;EACAD,kBAAA,GAAqB;EACrB,IAAI;IACA,MAAMG,EAAA,GAAKhE,cAAA,CAAeiE,SAAA,CAAUC,SAAA;IACpC,IAAIF,EAAA,CAAGG,OAAA,CAAQ,OAAO,MAAM,MAAMH,EAAA,CAAGG,OAAA,CAAQ,UAAU,MAAM,MAAMH,EAAA,CAAGG,OAAA,CAAQ,OAAO,MAAM,IAAI;MAC3FL,QAAA,GAAW;IACf;EACJ,SACOrO,KAAA,EAAO,CAAE;EAChB,OAAOqO,QAAA;AACX;AAMA,IAAIM,gBAAA,GAAmB;AACvB,IAAI,OAAOrE,MAAA,KAAW,aAAa;EAC/B,IAAI;IACA,MAAMvE,OAAA,GAAUa,MAAA,CAAOyC,cAAA,CAAe,CAAC,GAAG,WAAW;MACjDpK,GAAA,EAAK,SAAAA,CAAA,EAAY;QACb0P,gBAAA,GAAmB;MACvB;IACJ,CAAC;IAIDrE,MAAA,CAAO2C,gBAAA,CAAiB,QAAQlH,OAAA,EAASA,OAAO;IAChDuE,MAAA,CAAO0C,mBAAA,CAAoB,QAAQjH,OAAA,EAASA,OAAO;EACvD,SACOnE,GAAA,EAAK;IACR+M,gBAAA,GAAmB;EACvB;AACJ;AAEA,IAAMC,8BAAA,GAAiC;EACnC1I,IAAA,EAAM;AACV;AACA,IAAM2I,oBAAA,GAAuB,CAAC;AAC9B,IAAMC,aAAA,GAAgB,CAAC;AACvB,IAAMC,sBAAA,GAAyB,IAAIC,MAAA,CAAO,MAAM/E,kBAAA,GAAqB,qBAAqB;AAC1F,IAAMgF,4BAAA,GAA+B7E,UAAA,CAAW,oBAAoB;AACpE,SAAS8E,kBAAkBrC,SAAA,EAAWsC,iBAAA,EAAmB;EACrD,MAAMC,cAAA,IAAkBD,iBAAA,GAAoBA,iBAAA,CAAkBtC,SAAS,IAAIA,SAAA,IAAa7C,SAAA;EACxF,MAAMqF,aAAA,IAAiBF,iBAAA,GAAoBA,iBAAA,CAAkBtC,SAAS,IAAIA,SAAA,IAAa9C,QAAA;EACvF,MAAMnC,MAAA,GAASqC,kBAAA,GAAqBmF,cAAA;EACpC,MAAME,aAAA,GAAgBrF,kBAAA,GAAqBoF,aAAA;EAC3CR,oBAAA,CAAqBhC,SAAS,IAAI,CAAC;EACnCgC,oBAAA,CAAqBhC,SAAS,EAAE7C,SAAS,IAAIpC,MAAA;EAC7CiH,oBAAA,CAAqBhC,SAAS,EAAE9C,QAAQ,IAAIuF,aAAA;AAChD;AACA,SAAStH,iBAAiBwC,UAAS+E,GAAA,EAAKC,IAAA,EAAMC,YAAA,EAAc;EACxD,MAAMC,kBAAA,GAAsBD,YAAA,IAAgBA,YAAA,CAAaE,GAAA,IAAQhG,sBAAA;EACjE,MAAMiG,qBAAA,GAAyBH,YAAA,IAAgBA,YAAA,CAAaI,EAAA,IAAOjG,yBAAA;EACnE,MAAMkG,wBAAA,GAA4BL,YAAA,IAAgBA,YAAA,CAAaM,SAAA,IAAc;EAC7E,MAAMC,mCAAA,GAAuCP,YAAA,IAAgBA,YAAA,CAAaQ,KAAA,IAAU;EACpF,MAAMC,0BAAA,GAA6B9F,UAAA,CAAWsF,kBAAkB;EAChE,MAAMS,yBAAA,GAA4B,MAAMT,kBAAA,GAAqB;EAC7D,MAAMU,sBAAA,GAAyB;EAC/B,MAAMC,6BAAA,GAAgC,MAAMD,sBAAA,GAAyB;EACrE,MAAMjP,UAAA,GAAa,SAAAA,CAAUhB,IAAA,EAAMyC,MAAA,EAAQ8I,KAAA,EAAO;IAG9C,IAAIvL,IAAA,CAAKmQ,SAAA,EAAW;MAChB;IACJ;IACA,MAAM5N,QAAA,GAAWvC,IAAA,CAAKb,QAAA;IACtB,IAAI,OAAOoD,QAAA,KAAa,YAAYA,QAAA,CAAS6N,WAAA,EAAa;MAEtDpQ,IAAA,CAAKb,QAAA,GAAYoM,UAAUhJ,QAAA,CAAS6N,WAAA,CAAY7E,MAAK;MACrDvL,IAAA,CAAKqQ,gBAAA,GAAmB9N,QAAA;IAC5B;IAKA,IAAI1C,KAAA;IACJ,IAAI;MACAG,IAAA,CAAKJ,MAAA,CAAOI,IAAA,EAAMyC,MAAA,EAAQ,CAAC8I,KAAK,CAAC;IACrC,SACO9J,GAAA,EAAK;MACR5B,KAAA,GAAQ4B,GAAA;IACZ;IACA,MAAMmE,OAAA,GAAU5F,IAAA,CAAK4F,OAAA;IACrB,IAAIA,OAAA,IAAW,OAAOA,OAAA,KAAY,YAAYA,OAAA,CAAQ0K,IAAA,EAAM;MAIxD,MAAM/N,YAAWvC,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKb,QAAA;MACtEsD,MAAA,CAAOgN,qBAAqB,EAAEzJ,IAAA,CAAKvD,MAAA,EAAQ8I,KAAA,CAAMnL,IAAA,EAAMmC,WAAUqD,OAAO;IAC5E;IACA,OAAO/F,KAAA;EACX;EACA,SAAS0Q,eAAeC,OAAA,EAASjF,KAAA,EAAOkF,SAAA,EAAW;IAG/ClF,KAAA,GAAQA,KAAA,IAASlB,SAAQkB,KAAA;IACzB,IAAI,CAACA,KAAA,EAAO;MACR;IACJ;IAGA,MAAM9I,MAAA,GAAS+N,OAAA,IAAWjF,KAAA,CAAM9I,MAAA,IAAU4H;IAC1C,MAAMqG,KAAA,GAAQjO,MAAA,CAAOiM,oBAAA,CAAqBnD,KAAA,CAAMnL,IAAI,EAAEqQ,SAAA,GAAY7G,QAAA,GAAWC,SAAS,CAAC;IACvF,IAAI6G,KAAA,EAAO;MACP,MAAMC,MAAA,GAAS,EAAC;MAGhB,IAAID,KAAA,CAAMlU,MAAA,KAAW,GAAG;QACpB,MAAMiF,GAAA,GAAMT,UAAA,CAAW0P,KAAA,CAAM,CAAC,GAAGjO,MAAA,EAAQ8I,KAAK;QAC9C9J,GAAA,IAAOkP,MAAA,CAAOvL,IAAA,CAAK3D,GAAG;MAC1B,OACK;QAID,MAAMmP,SAAA,GAAYF,KAAA,CAAMnH,KAAA,CAAM;QAC9B,SAAStN,CAAA,GAAI,GAAGA,CAAA,GAAI2U,SAAA,CAAUpU,MAAA,EAAQP,CAAA,IAAK;UACvC,IAAIsP,KAAA,IAASA,KAAA,CAAMuD,4BAA4B,MAAM,MAAM;YACvD;UACJ;UACA,MAAMrN,GAAA,GAAMT,UAAA,CAAW4P,SAAA,CAAU3U,CAAC,GAAGwG,MAAA,EAAQ8I,KAAK;UAClD9J,GAAA,IAAOkP,MAAA,CAAOvL,IAAA,CAAK3D,GAAG;QAC1B;MACJ;MAGA,IAAIkP,MAAA,CAAOnU,MAAA,KAAW,GAAG;QACrB,MAAMmU,MAAA,CAAO,CAAC;MAClB,OACK;QACD,SAAS1U,CAAA,GAAI,GAAGA,CAAA,GAAI0U,MAAA,CAAOnU,MAAA,EAAQP,CAAA,IAAK;UACpC,MAAMwF,GAAA,GAAMkP,MAAA,CAAO1U,CAAC;UACpBmT,GAAA,CAAIlI,uBAAA,CAAwB,MAAM;YAC9B,MAAMzF,GAAA;UACV,CAAC;QACL;MACJ;IACJ;EACJ;EAEA,MAAMoP,uBAAA,GAA0B,SAAAA,CAAUtF,KAAA,EAAO;IAC7C,OAAOgF,cAAA,CAAe,MAAMhF,KAAA,EAAO,KAAK;EAC5C;EAEA,MAAMuF,8BAAA,GAAiC,SAAAA,CAAUvF,KAAA,EAAO;IACpD,OAAOgF,cAAA,CAAe,MAAMhF,KAAA,EAAO,IAAI;EAC3C;EACA,SAASwF,wBAAwB7E,GAAA,EAAKoD,eAAc;IAChD,IAAI,CAACpD,GAAA,EAAK;MACN,OAAO;IACX;IACA,IAAI8E,iBAAA,GAAoB;IACxB,IAAI1B,iBAAgBA,cAAavJ,IAAA,KAAS,QAAW;MACjDiL,iBAAA,GAAoB1B,cAAavJ,IAAA;IACrC;IACA,MAAMkL,eAAA,GAAkB3B,iBAAgBA,cAAa4B,EAAA;IACrD,IAAI/S,cAAA,GAAiB;IACrB,IAAImR,iBAAgBA,cAAa6B,MAAA,KAAW,QAAW;MACnDhT,cAAA,GAAiBmR,cAAa6B,MAAA;IAClC;IACA,IAAIC,YAAA,GAAe;IACnB,IAAI9B,iBAAgBA,cAAa+B,EAAA,KAAO,QAAW;MAC/CD,YAAA,GAAe9B,cAAa+B,EAAA;IAChC;IACA,IAAI7D,KAAA,GAAQtB,GAAA;IACZ,OAAOsB,KAAA,IAAS,CAACA,KAAA,CAAMtP,cAAA,CAAeqR,kBAAkB,GAAG;MACvD/B,KAAA,GAAQrE,oBAAA,CAAqBqE,KAAK;IACtC;IACA,IAAI,CAACA,KAAA,IAAStB,GAAA,CAAIqD,kBAAkB,GAAG;MAEnC/B,KAAA,GAAQtB,GAAA;IACZ;IACA,IAAI,CAACsB,KAAA,EAAO;MACR,OAAO;IACX;IACA,IAAIA,KAAA,CAAMuC,0BAA0B,GAAG;MACnC,OAAO;IACX;IACA,MAAMf,iBAAA,GAAoBM,iBAAgBA,cAAaN,iBAAA;IAGvD,MAAMsC,QAAA,GAAW,CAAC;IAClB,MAAMC,sBAAA,GAA0B/D,KAAA,CAAMuC,0BAA0B,IAAIvC,KAAA,CAAM+B,kBAAkB;IAC5F,MAAMiC,yBAAA,GAA6BhE,KAAA,CAAMvD,UAAA,CAAWwF,qBAAqB,CAAC,IACtEjC,KAAA,CAAMiC,qBAAqB;IAC/B,MAAMgC,eAAA,GAAmBjE,KAAA,CAAMvD,UAAA,CAAW0F,wBAAwB,CAAC,IAC/DnC,KAAA,CAAMmC,wBAAwB;IAClC,MAAM+B,wBAAA,GAA4BlE,KAAA,CAAMvD,UAAA,CAAW4F,mCAAmC,CAAC,IACnFrC,KAAA,CAAMqC,mCAAmC;IAC7C,IAAI8B,0BAAA;IACJ,IAAIrC,iBAAgBA,cAAasC,OAAA,EAAS;MACtCD,0BAAA,GAA6BnE,KAAA,CAAMvD,UAAA,CAAWqF,cAAasC,OAAO,CAAC,IAC/DpE,KAAA,CAAM8B,cAAasC,OAAO;IAClC;IAKA,SAASC,0BAA0BjM,OAAA,EAASkM,OAAA,EAAS;MACjD,IAAI,CAACtD,gBAAA,IAAoB,OAAO5I,OAAA,KAAY,YAAYA,OAAA,EAAS;QAI7D,OAAO,CAAC,CAACA,OAAA,CAAQmM,OAAA;MACrB;MACA,IAAI,CAACvD,gBAAA,IAAoB,CAACsD,OAAA,EAAS;QAC/B,OAAOlM,OAAA;MACX;MACA,IAAI,OAAOA,OAAA,KAAY,WAAW;QAC9B,OAAO;UAAEmM,OAAA,EAASnM,OAAA;UAASkM,OAAA,EAAS;QAAK;MAC7C;MACA,IAAI,CAAClM,OAAA,EAAS;QACV,OAAO;UAAEkM,OAAA,EAAS;QAAK;MAC3B;MACA,IAAI,OAAOlM,OAAA,KAAY,YAAYA,OAAA,CAAQkM,OAAA,KAAY,OAAO;QAC1D,OAAO;UAAE,GAAGlM,OAAA;UAASkM,OAAA,EAAS;QAAK;MACvC;MACA,OAAOlM,OAAA;IACX;IACA,MAAMoM,oBAAA,GAAuB,SAAAA,CAAUhS,IAAA,EAAM;MAGzC,IAAIsR,QAAA,CAASW,UAAA,EAAY;QACrB;MACJ;MACA,OAAOV,sBAAA,CAAuBvL,IAAA,CAAKsL,QAAA,CAAS7O,MAAA,EAAQ6O,QAAA,CAAS5E,SAAA,EAAW4E,QAAA,CAASS,OAAA,GAAUjB,8BAAA,GAAiCD,uBAAA,EAAyBS,QAAA,CAAS1L,OAAO;IACzK;IACA,MAAMsM,kBAAA,GAAqB,SAAAA,CAAUlS,IAAA,EAAM;MAIvC,IAAI,CAACA,IAAA,CAAKmQ,SAAA,EAAW;QACjB,MAAMgC,gBAAA,GAAmBzD,oBAAA,CAAqB1O,IAAA,CAAK0M,SAAS;QAC5D,IAAI0F,eAAA;QACJ,IAAID,gBAAA,EAAkB;UAClBC,eAAA,GAAkBD,gBAAA,CAAiBnS,IAAA,CAAK+R,OAAA,GAAUnI,QAAA,GAAWC,SAAS;QAC1E;QACA,MAAMwI,aAAA,GAAgBD,eAAA,IAAmBpS,IAAA,CAAKyC,MAAA,CAAO2P,eAAe;QACpE,IAAIC,aAAA,EAAe;UACf,SAASpW,CAAA,GAAI,GAAGA,CAAA,GAAIoW,aAAA,CAAc7V,MAAA,EAAQP,CAAA,IAAK;YAC3C,MAAMqW,YAAA,GAAeD,aAAA,CAAcpW,CAAC;YACpC,IAAIqW,YAAA,KAAiBtS,IAAA,EAAM;cACvBqS,aAAA,CAAcE,MAAA,CAAOtW,CAAA,EAAG,CAAC;cAEzB+D,IAAA,CAAKmQ,SAAA,GAAY;cACjB,IAAIkC,aAAA,CAAc7V,MAAA,KAAW,GAAG;gBAG5BwD,IAAA,CAAKwS,UAAA,GAAa;gBAClBxS,IAAA,CAAKyC,MAAA,CAAO2P,eAAe,IAAI;cACnC;cACA;YACJ;UACJ;QACJ;MACJ;MAIA,IAAI,CAACpS,IAAA,CAAKwS,UAAA,EAAY;QAClB;MACJ;MACA,OAAOhB,yBAAA,CAA0BxL,IAAA,CAAKhG,IAAA,CAAKyC,MAAA,EAAQzC,IAAA,CAAK0M,SAAA,EAAW1M,IAAA,CAAK+R,OAAA,GAAUjB,8BAAA,GAAiCD,uBAAA,EAAyB7Q,IAAA,CAAK4F,OAAO;IAC5J;IACA,MAAM6M,uBAAA,GAA0B,SAAAA,CAAUzS,IAAA,EAAM;MAC5C,OAAOuR,sBAAA,CAAuBvL,IAAA,CAAKsL,QAAA,CAAS7O,MAAA,EAAQ6O,QAAA,CAAS5E,SAAA,EAAW1M,IAAA,CAAKJ,MAAA,EAAQ0R,QAAA,CAAS1L,OAAO;IACzG;IACA,MAAM8M,qBAAA,GAAwB,SAAAA,CAAU1S,IAAA,EAAM;MAC1C,OAAO2R,0BAAA,CAA2B3L,IAAA,CAAKsL,QAAA,CAAS7O,MAAA,EAAQ6O,QAAA,CAAS5E,SAAA,EAAW1M,IAAA,CAAKJ,MAAA,EAAQ0R,QAAA,CAAS1L,OAAO;IAC7G;IACA,MAAM+M,qBAAA,GAAwB,SAAAA,CAAU3S,IAAA,EAAM;MAC1C,OAAOwR,yBAAA,CAA0BxL,IAAA,CAAKhG,IAAA,CAAKyC,MAAA,EAAQzC,IAAA,CAAK0M,SAAA,EAAW1M,IAAA,CAAKJ,MAAA,EAAQI,IAAA,CAAK4F,OAAO;IAChG;IACA,MAAMjE,cAAA,GAAiBqP,iBAAA,GAAoBgB,oBAAA,GAAuBS,uBAAA;IAClE,MAAM1Q,YAAA,GAAeiP,iBAAA,GAAoBkB,kBAAA,GAAqBS,qBAAA;IAC9D,MAAMC,6BAAA,GAAgC,SAAAA,CAAU5S,IAAA,EAAMuC,QAAA,EAAU;MAC5D,MAAMsQ,cAAA,GAAiB,OAAOtQ,QAAA;MAC9B,OAASsQ,cAAA,KAAmB,cAAc7S,IAAA,CAAKb,QAAA,KAAaoD,QAAA,IACvDsQ,cAAA,KAAmB,YAAY7S,IAAA,CAAKqQ,gBAAA,KAAqB9N,QAAA;IAClE;IACA,MAAMuQ,OAAA,GAAUxD,iBAAgBA,cAAayD,IAAA,GAAOzD,cAAayD,IAAA,GAAOH,6BAAA;IACxE,MAAMI,eAAA,GAAkBjJ,IAAA,CAAKE,UAAA,CAAW,kBAAkB,CAAC;IAC3D,MAAMgJ,aAAA,GAAgB5I,SAAQJ,UAAA,CAAW,gBAAgB,CAAC;IAC1D,MAAMiJ,eAAA,GAAkB,SAAAA,CAAUC,cAAA,EAAgBC,SAAA,EAAWC,gBAAA,EAAkBC,cAAA,EAAgBlC,gBAAe,OAAOQ,OAAA,GAAU,OAAO;MAClI,OAAO,YAAY;QACf,MAAMnP,MAAA,GAAS,QAAQ4H;QACvB,IAAIqC,SAAA,GAAYlN,SAAA,CAAU,CAAC;QAC3B,IAAI8P,iBAAgBA,cAAaiE,iBAAA,EAAmB;UAChD7G,SAAA,GAAY4C,cAAaiE,iBAAA,CAAkB7G,SAAS;QACxD;QACA,IAAInK,QAAA,GAAW/C,SAAA,CAAU,CAAC;QAC1B,IAAI,CAAC+C,QAAA,EAAU;UACX,OAAO4Q,cAAA,CAAejO,KAAA,CAAM,MAAM1F,SAAS;QAC/C;QACA,IAAIyL,MAAA,IAAUyB,SAAA,KAAc,qBAAqB;UAE7C,OAAOyG,cAAA,CAAejO,KAAA,CAAM,MAAM1F,SAAS;QAC/C;QAIA,IAAIgU,aAAA,GAAgB;QACpB,IAAI,OAAOjR,QAAA,KAAa,YAAY;UAChC,IAAI,CAACA,QAAA,CAAS6N,WAAA,EAAa;YACvB,OAAO+C,cAAA,CAAejO,KAAA,CAAM,MAAM1F,SAAS;UAC/C;UACAgU,aAAA,GAAgB;QACpB;QACA,IAAIvC,eAAA,IAAmB,CAACA,eAAA,CAAgBkC,cAAA,EAAgB5Q,QAAA,EAAUE,MAAA,EAAQjD,SAAS,GAAG;UAClF;QACJ;QACA,MAAMsS,OAAA,GAAUtD,gBAAA,IAAoB,CAAC,CAACyE,aAAA,IAAiBA,aAAA,CAAc1E,OAAA,CAAQ7B,SAAS,MAAM;QAC5F,MAAM9G,OAAA,GAAUiM,yBAAA,CAA0BrS,SAAA,CAAU,CAAC,GAAGsS,OAAO;QAC/D,MAAM2B,MAAA,GAAS7N,OAAA,EAAS6N,MAAA;QACxB,IAAIA,MAAA,EAAQC,OAAA,EAAS;UAEjB;QACJ;QACA,IAAIV,eAAA,EAAiB;UAEjB,SAAS/W,CAAA,GAAI,GAAGA,CAAA,GAAI+W,eAAA,CAAgBxW,MAAA,EAAQP,CAAA,IAAK;YAC7C,IAAIyQ,SAAA,KAAcsG,eAAA,CAAgB/W,CAAC,GAAG;cAClC,IAAI6V,OAAA,EAAS;gBACT,OAAOqB,cAAA,CAAenN,IAAA,CAAKvD,MAAA,EAAQiK,SAAA,EAAWnK,QAAA,EAAUqD,OAAO;cACnE,OACK;gBACD,OAAOuN,cAAA,CAAejO,KAAA,CAAM,MAAM1F,SAAS;cAC/C;YACJ;UACJ;QACJ;QACA,MAAMuS,OAAA,GAAU,CAACnM,OAAA,GAAU,QAAQ,OAAOA,OAAA,KAAY,YAAY,OAAOA,OAAA,CAAQmM,OAAA;QACjF,MAAMzB,IAAA,GAAO1K,OAAA,IAAW,OAAOA,OAAA,KAAY,WAAWA,OAAA,CAAQ0K,IAAA,GAAO;QACrE,MAAM7S,IAAA,GAAOsM,IAAA,CAAKrM,OAAA;QAClB,IAAIyU,gBAAA,GAAmBzD,oBAAA,CAAqBhC,SAAS;QACrD,IAAI,CAACyF,gBAAA,EAAkB;UACnBpD,iBAAA,CAAkBrC,SAAA,EAAWsC,iBAAiB;UAC9CmD,gBAAA,GAAmBzD,oBAAA,CAAqBhC,SAAS;QACrD;QACA,MAAM0F,eAAA,GAAkBD,gBAAA,CAAiBJ,OAAA,GAAUnI,QAAA,GAAWC,SAAS;QACvE,IAAIwI,aAAA,GAAgB5P,MAAA,CAAO2P,eAAe;QAC1C,IAAIH,UAAA,GAAa;QACjB,IAAII,aAAA,EAAe;UAEfJ,UAAA,GAAa;UACb,IAAI9T,cAAA,EAAgB;YAChB,SAASlC,CAAA,GAAI,GAAGA,CAAA,GAAIoW,aAAA,CAAc7V,MAAA,EAAQP,CAAA,IAAK;cAC3C,IAAI6W,OAAA,CAAQT,aAAA,CAAcpW,CAAC,GAAGsG,QAAQ,GAAG;gBAErC;cACJ;YACJ;UACJ;QACJ,OACK;UACD8P,aAAA,GAAgB5P,MAAA,CAAO2P,eAAe,IAAI,EAAC;QAC/C;QACA,IAAIhT,MAAA;QACJ,MAAMuU,eAAA,GAAkBlR,MAAA,CAAOjE,WAAA,CAAY,MAAM;QACjD,MAAMoV,YAAA,GAAejF,aAAA,CAAcgF,eAAe;QAClD,IAAIC,YAAA,EAAc;UACdxU,MAAA,GAASwU,YAAA,CAAalH,SAAS;QACnC;QACA,IAAI,CAACtN,MAAA,EAAQ;UACTA,MAAA,GACIuU,eAAA,GACIP,SAAA,IACCpE,iBAAA,GAAoBA,iBAAA,CAAkBtC,SAAS,IAAIA,SAAA;QAChE;QAGA4E,QAAA,CAAS1L,OAAA,GAAUA,OAAA;QACnB,IAAI0K,IAAA,EAAM;UAINgB,QAAA,CAAS1L,OAAA,CAAQ0K,IAAA,GAAO;QAC5B;QACAgB,QAAA,CAAS7O,MAAA,GAASA,MAAA;QAClB6O,QAAA,CAASS,OAAA,GAAUA,OAAA;QACnBT,QAAA,CAAS5E,SAAA,GAAYA,SAAA;QACrB4E,QAAA,CAASW,UAAA,GAAaA,UAAA;QACtB,MAAMpR,IAAA,GAAOmQ,iBAAA,GAAoBvC,8BAAA,GAAiC;QAElE,IAAI5N,IAAA,EAAM;UACNA,IAAA,CAAKyQ,QAAA,GAAWA,QAAA;QACpB;QACA,IAAImC,MAAA,EAAQ;UAIRnC,QAAA,CAAS1L,OAAA,CAAQ6N,MAAA,GAAS;QAC9B;QACA,MAAMzT,IAAA,GAAOvC,IAAA,CAAKuE,iBAAA,CAAkB5C,MAAA,EAAQmD,QAAA,EAAU1B,IAAA,EAAMwS,gBAAA,EAAkBC,cAAc;QAC5F,IAAIG,MAAA,EAAQ;UAERnC,QAAA,CAAS1L,OAAA,CAAQ6N,MAAA,GAASA,MAAA;UAI1B,MAAMI,OAAA,GAAUA,CAAA,KAAM7T,IAAA,CAAKvC,IAAA,CAAKwE,UAAA,CAAWjC,IAAI;UAC/CmT,cAAA,CAAenN,IAAA,CAAKyN,MAAA,EAAQ,SAASI,OAAA,EAAS;YAAEvD,IAAA,EAAM;UAAK,CAAC;UAK5D,IAAIzP,IAAA,EAAM;YACNA,IAAA,CAAKiT,mBAAA,GAAsB,MAAML,MAAA,CAAO5G,mBAAA,CAAoB,SAASgH,OAAO;UAChF;QACJ;QAGAvC,QAAA,CAAS7O,MAAA,GAAS;QAElB,IAAI5B,IAAA,EAAM;UACNA,IAAA,CAAKyQ,QAAA,GAAW;QACpB;QAGA,IAAIhB,IAAA,EAAM;UACN1K,OAAA,CAAQ0K,IAAA,GAAO;QACnB;QACA,IAAI,EAAE,CAAC9B,gBAAA,IAAoB,OAAOxO,IAAA,CAAK4F,OAAA,KAAY,YAAY;UAG3D5F,IAAA,CAAK4F,OAAA,GAAUA,OAAA;QACnB;QACA5F,IAAA,CAAKyC,MAAA,GAASA,MAAA;QACdzC,IAAA,CAAK+R,OAAA,GAAUA,OAAA;QACf/R,IAAA,CAAK0M,SAAA,GAAYA,SAAA;QACjB,IAAI8G,aAAA,EAAe;UAEfxT,IAAA,CAAKqQ,gBAAA,GAAmB9N,QAAA;QAC5B;QACA,IAAI,CAACqP,OAAA,EAAS;UACVS,aAAA,CAAcjN,IAAA,CAAKpF,IAAI;QAC3B,OACK;UACDqS,aAAA,CAAc0B,OAAA,CAAQ/T,IAAI;QAC9B;QACA,IAAIoR,eAAc;UACd,OAAO3O,MAAA;QACX;MACJ;IACJ;IACA+K,KAAA,CAAM+B,kBAAkB,IAAI2D,eAAA,CAAgB3B,sBAAA,EAAwBvB,yBAAA,EAA2BrO,cAAA,EAAgBI,YAAA,EAAcqP,YAAY;IACzI,IAAIO,0BAAA,EAA4B;MAC5BnE,KAAA,CAAMyC,sBAAsB,IAAIiD,eAAA,CAAgBvB,0BAAA,EAA4BzB,6BAAA,EAA+BwC,qBAAA,EAAuB3Q,YAAA,EAAcqP,YAAA,EAAc,IAAI;IACtK;IACA5D,KAAA,CAAMiC,qBAAqB,IAAI,YAAY;MACvC,MAAMhN,MAAA,GAAS,QAAQ4H;MACvB,IAAIqC,SAAA,GAAYlN,SAAA,CAAU,CAAC;MAC3B,IAAI8P,iBAAgBA,cAAaiE,iBAAA,EAAmB;QAChD7G,SAAA,GAAY4C,cAAaiE,iBAAA,CAAkB7G,SAAS;MACxD;MACA,MAAM9G,OAAA,GAAUpG,SAAA,CAAU,CAAC;MAC3B,MAAMuS,OAAA,GAAU,CAACnM,OAAA,GAAU,QAAQ,OAAOA,OAAA,KAAY,YAAY,OAAOA,OAAA,CAAQmM,OAAA;MACjF,MAAMxP,QAAA,GAAW/C,SAAA,CAAU,CAAC;MAC5B,IAAI,CAAC+C,QAAA,EAAU;QACX,OAAOiP,yBAAA,CAA0BtM,KAAA,CAAM,MAAM1F,SAAS;MAC1D;MACA,IAAIyR,eAAA,IACA,CAACA,eAAA,CAAgBO,yBAAA,EAA2BjP,QAAA,EAAUE,MAAA,EAAQjD,SAAS,GAAG;QAC1E;MACJ;MACA,MAAM2S,gBAAA,GAAmBzD,oBAAA,CAAqBhC,SAAS;MACvD,IAAI0F,eAAA;MACJ,IAAID,gBAAA,EAAkB;QAClBC,eAAA,GAAkBD,gBAAA,CAAiBJ,OAAA,GAAUnI,QAAA,GAAWC,SAAS;MACrE;MACA,MAAMwI,aAAA,GAAgBD,eAAA,IAAmB3P,MAAA,CAAO2P,eAAe;MAC/D,IAAIC,aAAA,EAAe;QACf,SAASpW,CAAA,GAAI,GAAGA,CAAA,GAAIoW,aAAA,CAAc7V,MAAA,EAAQP,CAAA,IAAK;UAC3C,MAAMqW,YAAA,GAAeD,aAAA,CAAcpW,CAAC;UACpC,IAAI6W,OAAA,CAAQR,YAAA,EAAc/P,QAAQ,GAAG;YACjC8P,aAAA,CAAcE,MAAA,CAAOtW,CAAA,EAAG,CAAC;YAEzBqW,YAAA,CAAanC,SAAA,GAAY;YACzB,IAAIkC,aAAA,CAAc7V,MAAA,KAAW,GAAG;cAG5B8V,YAAA,CAAaE,UAAA,GAAa;cAC1B/P,MAAA,CAAO2P,eAAe,IAAI;cAM1B,IAAI,CAACL,OAAA,IAAW,OAAOrF,SAAA,KAAc,UAAU;gBAC3C,MAAMsH,gBAAA,GAAmBlK,kBAAA,GAAqB,gBAAgB4C,SAAA;gBAC9DjK,MAAA,CAAOuR,gBAAgB,IAAI;cAC/B;YACJ;YAGA,MAAM1C,YAAWgB,YAAA,CAAazR,IAAA;YAC9B,IAAIyQ,WAAUwC,mBAAA,EAAqB;cAC/BxC,UAASwC,mBAAA,CAAoB;cAC7BxC,UAASwC,mBAAA,GAAsB;YACnC;YACAxB,YAAA,CAAa7U,IAAA,CAAKwE,UAAA,CAAWqQ,YAAY;YACzC,IAAIlB,YAAA,EAAc;cACd,OAAO3O,MAAA;YACX;YACA;UACJ;QACJ;MACJ;MAKA,OAAO+O,yBAAA,CAA0BtM,KAAA,CAAM,MAAM1F,SAAS;IAC1D;IACAgO,KAAA,CAAMmC,wBAAwB,IAAI,YAAY;MAC1C,MAAMlN,MAAA,GAAS,QAAQ4H;MACvB,IAAIqC,SAAA,GAAYlN,SAAA,CAAU,CAAC;MAC3B,IAAI8P,iBAAgBA,cAAaiE,iBAAA,EAAmB;QAChD7G,SAAA,GAAY4C,cAAaiE,iBAAA,CAAkB7G,SAAS;MACxD;MACA,MAAMkD,SAAA,GAAY,EAAC;MACnB,MAAMc,KAAA,GAAQuD,cAAA,CAAexR,MAAA,EAAQuM,iBAAA,GAAoBA,iBAAA,CAAkBtC,SAAS,IAAIA,SAAS;MACjG,SAASzQ,CAAA,GAAI,GAAGA,CAAA,GAAIyU,KAAA,CAAMlU,MAAA,EAAQP,CAAA,IAAK;QACnC,MAAM+D,IAAA,GAAO0Q,KAAA,CAAMzU,CAAC;QACpB,IAAIsG,QAAA,GAAWvC,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKb,QAAA;QACpEyQ,SAAA,CAAUxK,IAAA,CAAK7C,QAAQ;MAC3B;MACA,OAAOqN,SAAA;IACX;IACApC,KAAA,CAAMqC,mCAAmC,IAAI,YAAY;MACrD,MAAMpN,MAAA,GAAS,QAAQ4H;MACvB,IAAIqC,SAAA,GAAYlN,SAAA,CAAU,CAAC;MAC3B,IAAI,CAACkN,SAAA,EAAW;QACZ,MAAMwH,IAAA,GAAOzN,MAAA,CAAOyN,IAAA,CAAKzR,MAAM;QAC/B,SAASxG,CAAA,GAAI,GAAGA,CAAA,GAAIiY,IAAA,CAAK1X,MAAA,EAAQP,CAAA,IAAK;UAClC,MAAMkQ,IAAA,GAAO+H,IAAA,CAAKjY,CAAC;UACnB,MAAMkY,KAAA,GAAQvF,sBAAA,CAAuBwF,IAAA,CAAKjI,IAAI;UAC9C,IAAIkI,OAAA,GAAUF,KAAA,IAASA,KAAA,CAAM,CAAC;UAK9B,IAAIE,OAAA,IAAWA,OAAA,KAAY,kBAAkB;YACzC,KAAKxE,mCAAmC,EAAE7J,IAAA,CAAK,MAAMqO,OAAO;UAChE;QACJ;QAEA,KAAKxE,mCAAmC,EAAE7J,IAAA,CAAK,MAAM,gBAAgB;MACzE,OACK;QACD,IAAIsJ,iBAAgBA,cAAaiE,iBAAA,EAAmB;UAChD7G,SAAA,GAAY4C,cAAaiE,iBAAA,CAAkB7G,SAAS;QACxD;QACA,MAAMyF,gBAAA,GAAmBzD,oBAAA,CAAqBhC,SAAS;QACvD,IAAIyF,gBAAA,EAAkB;UAClB,MAAMC,eAAA,GAAkBD,gBAAA,CAAiBtI,SAAS;UAClD,MAAMyK,sBAAA,GAAyBnC,gBAAA,CAAiBvI,QAAQ;UACxD,MAAM8G,KAAA,GAAQjO,MAAA,CAAO2P,eAAe;UACpC,MAAMmC,YAAA,GAAe9R,MAAA,CAAO6R,sBAAsB;UAClD,IAAI5D,KAAA,EAAO;YACP,MAAM8D,WAAA,GAAc9D,KAAA,CAAMnH,KAAA,CAAM;YAChC,SAAStN,CAAA,GAAI,GAAGA,CAAA,GAAIuY,WAAA,CAAYhY,MAAA,EAAQP,CAAA,IAAK;cACzC,MAAM+D,IAAA,GAAOwU,WAAA,CAAYvY,CAAC;cAC1B,IAAIsG,QAAA,GAAWvC,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKb,QAAA;cACpE,KAAKsQ,qBAAqB,EAAEzJ,IAAA,CAAK,MAAM0G,SAAA,EAAWnK,QAAA,EAAUvC,IAAA,CAAK4F,OAAO;YAC5E;UACJ;UACA,IAAI2O,YAAA,EAAc;YACd,MAAMC,WAAA,GAAcD,YAAA,CAAahL,KAAA,CAAM;YACvC,SAAStN,CAAA,GAAI,GAAGA,CAAA,GAAIuY,WAAA,CAAYhY,MAAA,EAAQP,CAAA,IAAK;cACzC,MAAM+D,IAAA,GAAOwU,WAAA,CAAYvY,CAAC;cAC1B,IAAIsG,QAAA,GAAWvC,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKqQ,gBAAA,GAAmBrQ,IAAA,CAAKb,QAAA;cACpE,KAAKsQ,qBAAqB,EAAEzJ,IAAA,CAAK,MAAM0G,SAAA,EAAWnK,QAAA,EAAUvC,IAAA,CAAK4F,OAAO;YAC5E;UACJ;QACJ;MACJ;MACA,IAAIwL,YAAA,EAAc;QACd,OAAO;MACX;IACJ;IAEAvI,qBAAA,CAAsB2E,KAAA,CAAM+B,kBAAkB,GAAGgC,sBAAsB;IACvE1I,qBAAA,CAAsB2E,KAAA,CAAMiC,qBAAqB,GAAG+B,yBAAyB;IAC7E,IAAIE,wBAAA,EAA0B;MAC1B7I,qBAAA,CAAsB2E,KAAA,CAAMqC,mCAAmC,GAAG6B,wBAAwB;IAC9F;IACA,IAAID,eAAA,EAAiB;MACjB5I,qBAAA,CAAsB2E,KAAA,CAAMmC,wBAAwB,GAAG8B,eAAe;IAC1E;IACA,OAAO;EACX;EACA,IAAIgD,OAAA,GAAU,EAAC;EACf,SAASxY,CAAA,GAAI,GAAGA,CAAA,GAAIoT,IAAA,CAAK7S,MAAA,EAAQP,CAAA,IAAK;IAClCwY,OAAA,CAAQxY,CAAC,IAAI8U,uBAAA,CAAwB1B,IAAA,CAAKpT,CAAC,GAAGqT,YAAY;EAC9D;EACA,OAAOmF,OAAA;AACX;AACA,SAASR,eAAexR,MAAA,EAAQiK,SAAA,EAAW;EACvC,IAAI,CAACA,SAAA,EAAW;IACZ,MAAMgI,UAAA,GAAa,EAAC;IACpB,SAASvI,IAAA,IAAQ1J,MAAA,EAAQ;MACrB,MAAM0R,KAAA,GAAQvF,sBAAA,CAAuBwF,IAAA,CAAKjI,IAAI;MAC9C,IAAIkI,OAAA,GAAUF,KAAA,IAASA,KAAA,CAAM,CAAC;MAC9B,IAAIE,OAAA,KAAY,CAAC3H,SAAA,IAAa2H,OAAA,KAAY3H,SAAA,GAAY;QAClD,MAAMgE,KAAA,GAAQjO,MAAA,CAAO0J,IAAI;QACzB,IAAIuE,KAAA,EAAO;UACP,SAASzU,CAAA,GAAI,GAAGA,CAAA,GAAIyU,KAAA,CAAMlU,MAAA,EAAQP,CAAA,IAAK;YACnCyY,UAAA,CAAWtP,IAAA,CAAKsL,KAAA,CAAMzU,CAAC,CAAC;UAC5B;QACJ;MACJ;IACJ;IACA,OAAOyY,UAAA;EACX;EACA,IAAItC,eAAA,GAAkB1D,oBAAA,CAAqBhC,SAAS;EACpD,IAAI,CAAC0F,eAAA,EAAiB;IAClBrD,iBAAA,CAAkBrC,SAAS;IAC3B0F,eAAA,GAAkB1D,oBAAA,CAAqBhC,SAAS;EACpD;EACA,MAAMiI,iBAAA,GAAoBlS,MAAA,CAAO2P,eAAA,CAAgBvI,SAAS,CAAC;EAC3D,MAAM+K,gBAAA,GAAmBnS,MAAA,CAAO2P,eAAA,CAAgBxI,QAAQ,CAAC;EACzD,IAAI,CAAC+K,iBAAA,EAAmB;IACpB,OAAOC,gBAAA,GAAmBA,gBAAA,CAAiBrL,KAAA,CAAM,IAAI,EAAC;EAC1D,OACK;IACD,OAAOqL,gBAAA,GACDD,iBAAA,CAAkBE,MAAA,CAAOD,gBAAgB,IACzCD,iBAAA,CAAkBpL,KAAA,CAAM;EAClC;AACJ;AACA,SAASpB,oBAAoB1M,SAAQ2T,GAAA,EAAK;EACtC,MAAM0F,KAAA,GAAQrZ,QAAO,OAAO;EAC5B,IAAIqZ,KAAA,IAASA,KAAA,CAAMpO,SAAA,EAAW;IAC1B0I,GAAA,CAAIrH,WAAA,CAAY+M,KAAA,CAAMpO,SAAA,EAAW,4BAA6BnE,QAAA,IAAa,UAAUuD,OAAMG,IAAA,EAAM;MAC7FH,MAAKgJ,4BAA4B,IAAI;MAIrCvM,QAAA,IAAYA,QAAA,CAAS2C,KAAA,CAAMY,OAAMG,IAAI;IACzC,CAAC;EACL;AACJ;AAMA,SAAS8O,oBAAoBtZ,SAAQ2T,GAAA,EAAK;EACtCA,GAAA,CAAIrH,WAAA,CAAYtM,SAAQ,kBAAmB8G,QAAA,IAAa;IACpD,OAAO,UAAUuD,OAAMG,IAAA,EAAM;MACzB8D,IAAA,CAAKrM,OAAA,CAAQgE,iBAAA,CAAkB,kBAAkBuE,IAAA,CAAK,CAAC,CAAC;IAC5D;EACJ,CAAC;AACL;AAMA,IAAM+O,UAAA,GAAa/K,UAAA,CAAW,UAAU;AACxC,SAASgL,WAAW9K,SAAQ+K,OAAA,EAASC,UAAA,EAAYC,UAAA,EAAY;EACzD,IAAIvH,SAAA,GAAY;EAChB,IAAIwH,WAAA,GAAc;EAClBH,OAAA,IAAWE,UAAA;EACXD,UAAA,IAAcC,UAAA;EACd,MAAME,eAAA,GAAkB,CAAC;EACzB,SAASnU,aAAanB,IAAA,EAAM;IACxB,MAAMa,IAAA,GAAOb,IAAA,CAAKa,IAAA;IAClBA,IAAA,CAAKoF,IAAA,CAAK,CAAC,IAAI,YAAY;MACvB,OAAOjG,IAAA,CAAKJ,MAAA,CAAOsF,KAAA,CAAM,MAAM1F,SAAS;IAC5C;IACAqB,IAAA,CAAK2F,QAAA,GAAWqH,SAAA,CAAU3I,KAAA,CAAMiF,SAAQtJ,IAAA,CAAKoF,IAAI;IACjD,OAAOjG,IAAA;EACX;EACA,SAASuV,UAAUvV,IAAA,EAAM;IACrB,OAAOqV,WAAA,CAAYrP,IAAA,CAAKmE,SAAQnK,IAAA,CAAKa,IAAA,CAAK2F,QAAQ;EACtD;EACAqH,SAAA,GAAY9F,WAAA,CAAYoC,SAAQ+K,OAAA,EAAU3S,QAAA,IAAa,UAAUuD,OAAMG,IAAA,EAAM;IACzE,IAAI,OAAOA,IAAA,CAAK,CAAC,MAAM,YAAY;MAC/B,MAAML,OAAA,GAAU;QACZ9E,UAAA,EAAYsU,UAAA,KAAe;QAC3BI,KAAA,EAAOJ,UAAA,KAAe,aAAaA,UAAA,KAAe,aAAanP,IAAA,CAAK,CAAC,KAAK,IAAI;QAC9EA;MACJ;MACA,MAAM9G,QAAA,GAAW8G,IAAA,CAAK,CAAC;MACvBA,IAAA,CAAK,CAAC,IAAI,SAASwP,MAAA,EAAQ;QACvB,IAAI;UACA,OAAOtW,QAAA,CAAS+F,KAAA,CAAM,MAAM1F,SAAS;QACzC,UACA;UAQI,IAAI,CAACoG,OAAA,CAAQ9E,UAAA,EAAY;YACrB,IAAI,OAAO8E,OAAA,CAAQY,QAAA,KAAa,UAAU;cAGtC,OAAO8O,eAAA,CAAgB1P,OAAA,CAAQY,QAAQ;YAC3C,WACSZ,OAAA,CAAQY,QAAA,EAAU;cAGvBZ,OAAA,CAAQY,QAAA,CAASwO,UAAU,IAAI;YACnC;UACJ;QACJ;MACJ;MACA,MAAMhV,IAAA,GAAOgK,gCAAA,CAAiCkL,OAAA,EAASjP,IAAA,CAAK,CAAC,GAAGL,OAAA,EAASzE,YAAA,EAAcoU,SAAS;MAChG,IAAI,CAACvV,IAAA,EAAM;QACP,OAAOA,IAAA;MACX;MAEA,MAAM0V,MAAA,GAAS1V,IAAA,CAAKa,IAAA,CAAK2F,QAAA;MACzB,IAAI,OAAOkP,MAAA,KAAW,UAAU;QAG5BJ,eAAA,CAAgBI,MAAM,IAAI1V,IAAA;MAC9B,WACS0V,MAAA,EAAQ;QAGbA,MAAA,CAAOV,UAAU,IAAIhV,IAAA;MACzB;MAGA,IAAI0V,MAAA,IACAA,MAAA,CAAOC,GAAA,IACPD,MAAA,CAAOE,KAAA,IACP,OAAOF,MAAA,CAAOC,GAAA,KAAQ,cACtB,OAAOD,MAAA,CAAOE,KAAA,KAAU,YAAY;QACpC5V,IAAA,CAAK2V,GAAA,GAAMD,MAAA,CAAOC,GAAA,CAAIE,IAAA,CAAKH,MAAM;QACjC1V,IAAA,CAAK4V,KAAA,GAAQF,MAAA,CAAOE,KAAA,CAAMC,IAAA,CAAKH,MAAM;MACzC;MACA,IAAI,OAAOA,MAAA,KAAW,YAAYA,MAAA,EAAQ;QACtC,OAAOA,MAAA;MACX;MACA,OAAO1V,IAAA;IACX,OACK;MAED,OAAOuC,QAAA,CAAS2C,KAAA,CAAMiF,SAAQlE,IAAI;IACtC;EACJ,CAAC;EACDoP,WAAA,GAActN,WAAA,CAAYoC,SAAQgL,UAAA,EAAa5S,QAAA,IAAa,UAAUuD,OAAMG,IAAA,EAAM;IAC9E,MAAM6P,EAAA,GAAK7P,IAAA,CAAK,CAAC;IACjB,IAAIjG,IAAA;IACJ,IAAI,OAAO8V,EAAA,KAAO,UAAU;MAExB9V,IAAA,GAAOsV,eAAA,CAAgBQ,EAAE;IAC7B,OACK;MAED9V,IAAA,GAAO8V,EAAA,IAAMA,EAAA,CAAGd,UAAU;MAE1B,IAAI,CAAChV,IAAA,EAAM;QACPA,IAAA,GAAO8V,EAAA;MACX;IACJ;IACA,IAAI9V,IAAA,IAAQ,OAAOA,IAAA,CAAKI,IAAA,KAAS,UAAU;MACvC,IAAIJ,IAAA,CAAKE,KAAA,KAAU,mBACbF,IAAA,CAAKe,QAAA,IAAYf,IAAA,CAAKa,IAAA,CAAKC,UAAA,IAAed,IAAA,CAAKW,QAAA,KAAa,IAAI;QAClE,IAAI,OAAOmV,EAAA,KAAO,UAAU;UACxB,OAAOR,eAAA,CAAgBQ,EAAE;QAC7B,WACSA,EAAA,EAAI;UACTA,EAAA,CAAGd,UAAU,IAAI;QACrB;QAEAhV,IAAA,CAAKvC,IAAA,CAAKwE,UAAA,CAAWjC,IAAI;MAC7B;IACJ,OACK;MAEDuC,QAAA,CAAS2C,KAAA,CAAMiF,SAAQlE,IAAI;IAC/B;EACJ,CAAC;AACL;AAEA,SAAS8P,oBAAoB1L,UAAS+E,GAAA,EAAK;EACvC,MAAM;IAAEjE,SAAA,EAAAA;IAAWC,KAAA,EAAAA;EAAM,IAAIgE,GAAA,CAAI/G,gBAAA,CAAiB;EAClD,IAAK,CAAC8C,cAAa,CAACC,UAAU,CAACf,SAAQ,gBAAgB,KAAK,EAAE,oBAAoBA,WAAU;IACxF;EACJ;EAEA,MAAM2L,SAAA,GAAY,CACd,qBACA,wBACA,mBACA,4BACA,0BACA,wBACA,qBACA,2BACJ;EACA5G,GAAA,CAAIrG,cAAA,CAAeqG,GAAA,EAAK/E,SAAQ4L,cAAA,EAAgB,kBAAkB,UAAUD,SAAS;AACzF;AAEA,SAASE,iBAAiB7L,UAAS+E,GAAA,EAAK;EACpC,IAAIrF,IAAA,CAAKqF,GAAA,CAAI3H,MAAA,CAAO,kBAAkB,CAAC,GAAG;IAEtC;EACJ;EACA,MAAM;IAAE0O,UAAA;IAAYzH,oBAAA,EAAAA;IAAsB9E,QAAA,EAAAA;IAAUC,SAAA,EAAAA;IAAWC,kBAAA,EAAAA;EAAmB,IAAIsF,GAAA,CAAI/G,gBAAA,CAAiB;EAE3G,SAASpM,CAAA,GAAI,GAAGA,CAAA,GAAIka,UAAA,CAAW3Z,MAAA,EAAQP,CAAA,IAAK;IACxC,MAAMyQ,SAAA,GAAYyJ,UAAA,CAAWla,CAAC;IAC9B,MAAMgT,cAAA,GAAiBvC,SAAA,GAAY7C;IACnC,MAAMqF,aAAA,GAAgBxC,SAAA,GAAY9C;IAClC,MAAMnC,MAAA,GAASqC,sBAAqBmF,cAAA;IACpC,MAAME,aAAA,GAAgBrF,sBAAqBoF,aAAA;IAC3CR,sBAAqBhC,SAAS,IAAI,CAAC;IACnCgC,sBAAqBhC,SAAS,EAAE7C,UAAS,IAAIpC,MAAA;IAC7CiH,sBAAqBhC,SAAS,EAAE9C,SAAQ,IAAIuF,aAAA;EAChD;EACA,MAAMiH,YAAA,GAAe/L,SAAQ,aAAa;EAC1C,IAAI,CAAC+L,YAAA,IAAgB,CAACA,YAAA,CAAa1P,SAAA,EAAW;IAC1C;EACJ;EACA0I,GAAA,CAAIvH,gBAAA,CAAiBwC,UAAS+E,GAAA,EAAK,CAACgH,YAAA,IAAgBA,YAAA,CAAa1P,SAAS,CAAC;EAC3E,OAAO;AACX;AACA,SAAS2P,WAAW5a,SAAQ2T,GAAA,EAAK;EAC7BA,GAAA,CAAIjH,mBAAA,CAAoB1M,SAAQ2T,GAAG;AACvC;AAMA,SAASxG,iBAAiBnG,MAAA,EAAQuK,YAAA,EAAcsJ,gBAAA,EAAkB;EAC9D,IAAI,CAACA,gBAAA,IAAoBA,gBAAA,CAAiB9Z,MAAA,KAAW,GAAG;IACpD,OAAOwQ,YAAA;EACX;EACA,MAAMuJ,GAAA,GAAMD,gBAAA,CAAiBE,MAAA,CAAQC,EAAA,IAAOA,EAAA,CAAGhU,MAAA,KAAWA,MAAM;EAChE,IAAI,CAAC8T,GAAA,IAAOA,GAAA,CAAI/Z,MAAA,KAAW,GAAG;IAC1B,OAAOwQ,YAAA;EACX;EACA,MAAM0J,sBAAA,GAAyBH,GAAA,CAAI,CAAC,EAAED,gBAAA;EACtC,OAAOtJ,YAAA,CAAawJ,MAAA,CAAQG,EAAA,IAAOD,sBAAA,CAAuBnI,OAAA,CAAQoI,EAAE,MAAM,EAAE;AAChF;AACA,SAASC,wBAAwBnU,MAAA,EAAQuK,YAAA,EAAcsJ,gBAAA,EAAkB5P,SAAA,EAAW;EAGhF,IAAI,CAACjE,MAAA,EAAQ;IACT;EACJ;EACA,MAAMoU,kBAAA,GAAqBjO,gBAAA,CAAiBnG,MAAA,EAAQuK,YAAA,EAAcsJ,gBAAgB;EAClFxO,iBAAA,CAAkBrF,MAAA,EAAQoU,kBAAA,EAAoBnQ,SAAS;AAC3D;AAKA,SAASoQ,gBAAgBrU,MAAA,EAAQ;EAC7B,OAAOgE,MAAA,CAAOsQ,mBAAA,CAAoBtU,MAAM,EACnC+T,MAAA,CAAQ3Z,IAAA,IAASA,IAAA,CAAKma,UAAA,CAAW,IAAI,KAAKna,IAAA,CAAKL,MAAA,GAAS,CAAC,EACzDya,GAAA,CAAKpa,IAAA,IAASA,IAAA,CAAKqa,SAAA,CAAU,CAAC,CAAC;AACxC;AACA,SAASC,wBAAwB/H,GAAA,EAAK/E,UAAS;EAC3C,IAAIY,MAAA,IAAU,CAACG,KAAA,EAAO;IAClB;EACJ;EACA,IAAIrB,IAAA,CAAKqF,GAAA,CAAI3H,MAAA,CAAO,aAAa,CAAC,GAAG;IAEjC;EACJ;EACA,MAAM6O,gBAAA,GAAmBjM,SAAQ,6BAA6B;EAE9D,IAAI+M,YAAA,GAAe,EAAC;EACpB,IAAIjM,SAAA,EAAW;IACX,MAAMf,kBAAiBD,MAAA;IACvBiN,YAAA,GAAeA,YAAA,CAAavC,MAAA,CAAO,CAC/B,YACA,cACA,WACA,eACA,mBACA,oBACA,uBACA,oBACA,qBACA,sBACA,SACH;IACD,MAAMwC,qBAAA,GAAwBlJ,IAAA,CAAK,IAC7B,CAAC;MAAE1L,MAAA,EAAQ2H;MAAgBkM,gBAAA,EAAkB,CAAC,OAAO;IAAE,CAAC,IACxD,EAAC;IAGPM,uBAAA,CAAwBxM,iBAAgB0M,eAAA,CAAgB1M,eAAc,GAAGkM,gBAAA,GAAmBA,gBAAA,CAAiBzB,MAAA,CAAOwC,qBAAqB,IAAIf,gBAAA,EAAkBnN,oBAAA,CAAqBiB,eAAc,CAAC;EACvM;EACAgN,YAAA,GAAeA,YAAA,CAAavC,MAAA,CAAO,CAC/B,kBACA,6BACA,YACA,cACA,oBACA,eACA,kBACA,aACA,YACH;EACD,SAAS5Y,CAAA,GAAI,GAAGA,CAAA,GAAImb,YAAA,CAAa5a,MAAA,EAAQP,CAAA,IAAK;IAC1C,MAAMwG,MAAA,GAAS4H,SAAQ+M,YAAA,CAAanb,CAAC,CAAC;IACtCwG,MAAA,IACIA,MAAA,CAAOiE,SAAA,IACPkQ,uBAAA,CAAwBnU,MAAA,CAAOiE,SAAA,EAAWoQ,eAAA,CAAgBrU,MAAA,CAAOiE,SAAS,GAAG4P,gBAAgB;EACrG;AACJ;AAMA,SAASgB,aAAavN,OAAM;EACxBA,MAAKhM,YAAA,CAAa,UAAWtC,WAAW;IACpC,MAAM8b,WAAA,GAAc9b,QAAOsO,MAAKnN,UAAA,CAAW,aAAa,CAAC;IACzD,IAAI2a,WAAA,EAAa;MACbA,WAAA,CAAY;IAChB;EACJ,CAAC;EACDxN,MAAKhM,YAAA,CAAa,UAAWtC,WAAW;IACpC,MAAMqP,GAAA,GAAM;IACZ,MAAM0M,KAAA,GAAQ;IACdvC,UAAA,CAAWxZ,SAAQqP,GAAA,EAAK0M,KAAA,EAAO,SAAS;IACxCvC,UAAA,CAAWxZ,SAAQqP,GAAA,EAAK0M,KAAA,EAAO,UAAU;IACzCvC,UAAA,CAAWxZ,SAAQqP,GAAA,EAAK0M,KAAA,EAAO,WAAW;EAC9C,CAAC;EACDzN,MAAKhM,YAAA,CAAa,yBAA0BtC,WAAW;IACnDwZ,UAAA,CAAWxZ,SAAQ,WAAW,UAAU,gBAAgB;IACxDwZ,UAAA,CAAWxZ,SAAQ,cAAc,aAAa,gBAAgB;IAC9DwZ,UAAA,CAAWxZ,SAAQ,iBAAiB,gBAAgB,gBAAgB;EACxE,CAAC;EACDsO,MAAKhM,YAAA,CAAa,YAAY,CAACtC,SAAQsO,UAAS;IAC5C,MAAM0N,eAAA,GAAkB,CAAC,SAAS,UAAU,SAAS;IACrD,SAASxb,CAAA,GAAI,GAAGA,CAAA,GAAIwb,eAAA,CAAgBjb,MAAA,EAAQP,CAAA,IAAK;MAC7C,MAAMY,IAAA,GAAO4a,eAAA,CAAgBxb,CAAC;MAC9B8L,WAAA,CAAYtM,SAAQoB,IAAA,EAAM,CAAC0F,QAAA,EAAUkF,MAAA,EAAQ5K,UAAS;QAClD,OAAO,UAAU6a,CAAA,EAAGzR,IAAA,EAAM;UACtB,OAAO8D,MAAKrM,OAAA,CAAQ+B,GAAA,CAAI8C,QAAA,EAAU9G,SAAQwK,IAAA,EAAMpJ,KAAI;QACxD;MACJ,CAAC;IACL;EACJ,CAAC;EACDkN,MAAKhM,YAAA,CAAa,eAAe,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACpDiH,UAAA,CAAW5a,SAAQ2T,GAAG;IACtB8G,gBAAA,CAAiBza,SAAQ2T,GAAG;IAE5B,MAAMuI,yBAAA,GAA4Blc,QAAO,2BAA2B;IACpE,IAAIkc,yBAAA,IAA6BA,yBAAA,CAA0BjR,SAAA,EAAW;MAClE0I,GAAA,CAAIvH,gBAAA,CAAiBpM,SAAQ2T,GAAA,EAAK,CAACuI,yBAAA,CAA0BjR,SAAS,CAAC;IAC3E;EACJ,CAAC;EACDqD,MAAKhM,YAAA,CAAa,oBAAoB,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACzD1G,UAAA,CAAW,kBAAkB;IAC7BA,UAAA,CAAW,wBAAwB;EACvC,CAAC;EACDqB,MAAKhM,YAAA,CAAa,wBAAwB,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IAC7D1G,UAAA,CAAW,sBAAsB;EACrC,CAAC;EACDqB,MAAKhM,YAAA,CAAa,cAAc,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACnD1G,UAAA,CAAW,YAAY;EAC3B,CAAC;EACDqB,MAAKhM,YAAA,CAAa,eAAe,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACpD+H,uBAAA,CAAwB/H,GAAA,EAAK3T,OAAM;EACvC,CAAC;EACDsO,MAAKhM,YAAA,CAAa,kBAAkB,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACvD2G,mBAAA,CAAoBta,SAAQ2T,GAAG;EACnC,CAAC;EACDrF,MAAKhM,YAAA,CAAa,OAAO,CAACtC,SAAQsO,UAAS;IAEvC6N,QAAA,CAASnc,OAAM;IACf,MAAMoc,QAAA,GAAW5N,UAAA,CAAW,SAAS;IACrC,MAAM6N,QAAA,GAAW7N,UAAA,CAAW,SAAS;IACrC,MAAM8N,YAAA,GAAe9N,UAAA,CAAW,aAAa;IAC7C,MAAM+N,aAAA,GAAgB/N,UAAA,CAAW,cAAc;IAC/C,MAAMgO,OAAA,GAAUhO,UAAA,CAAW,QAAQ;IACnC,MAAMiO,0BAAA,GAA6BjO,UAAA,CAAW,yBAAyB;IACvE,SAAS2N,SAASzN,SAAQ;MACtB,MAAMgO,cAAA,GAAiBhO,QAAO,gBAAgB;MAC9C,IAAI,CAACgO,cAAA,EAAgB;QAEjB;MACJ;MACA,MAAMC,uBAAA,GAA0BD,cAAA,CAAezR,SAAA;MAC/C,SAAS2R,gBAAgB5V,MAAA,EAAQ;QAC7B,OAAOA,MAAA,CAAOoV,QAAQ;MAC1B;MACA,IAAIS,cAAA,GAAiBF,uBAAA,CAAwB1O,8BAA8B;MAC3E,IAAI6O,iBAAA,GAAoBH,uBAAA,CAAwBzO,iCAAiC;MACjF,IAAI,CAAC2O,cAAA,EAAgB;QACjB,MAAMX,yBAAA,GAA4BxN,QAAO,2BAA2B;QACpE,IAAIwN,yBAAA,EAA2B;UAC3B,MAAMa,kCAAA,GAAqCb,yBAAA,CAA0BjR,SAAA;UACrE4R,cAAA,GAAiBE,kCAAA,CAAmC9O,8BAA8B;UAClF6O,iBAAA,GAAoBC,kCAAA,CAAmC7O,iCAAiC;QAC5F;MACJ;MACA,MAAM8O,kBAAA,GAAqB;MAC3B,MAAMC,SAAA,GAAY;MAClB,SAASvX,aAAanB,IAAA,EAAM;QACxB,MAAMa,IAAA,GAAOb,IAAA,CAAKa,IAAA;QAClB,MAAM4B,MAAA,GAAS5B,IAAA,CAAK4B,MAAA;QACpBA,MAAA,CAAOuV,aAAa,IAAI;QACxBvV,MAAA,CAAOyV,0BAA0B,IAAI;QAErC,MAAMzM,QAAA,GAAWhJ,MAAA,CAAOsV,YAAY;QACpC,IAAI,CAACO,cAAA,EAAgB;UACjBA,cAAA,GAAiB7V,MAAA,CAAOiH,8BAA8B;UACtD6O,iBAAA,GAAoB9V,MAAA,CAAOkH,iCAAiC;QAChE;QACA,IAAI8B,QAAA,EAAU;UACV8M,iBAAA,CAAkBvS,IAAA,CAAKvD,MAAA,EAAQgW,kBAAA,EAAoBhN,QAAQ;QAC/D;QACA,MAAMkN,WAAA,GAAelW,MAAA,CAAOsV,YAAY,IAAI,MAAM;UAC9C,IAAItV,MAAA,CAAOmW,UAAA,KAAenW,MAAA,CAAOoW,IAAA,EAAM;YAGnC,IAAI,CAAChY,IAAA,CAAK6S,OAAA,IAAWjR,MAAA,CAAOuV,aAAa,KAAKhY,IAAA,CAAKE,KAAA,KAAUwY,SAAA,EAAW;cAQpE,MAAMI,SAAA,GAAYrW,MAAA,CAAOsH,MAAKnN,UAAA,CAAW,WAAW,CAAC;cACrD,IAAI6F,MAAA,CAAOsW,MAAA,KAAW,KAAKD,SAAA,IAAaA,SAAA,CAAUtc,MAAA,GAAS,GAAG;gBAC1D,MAAMwc,SAAA,GAAYhZ,IAAA,CAAKJ,MAAA;gBACvBI,IAAA,CAAKJ,MAAA,GAAS,YAAY;kBAGtB,MAAMkZ,aAAYrW,MAAA,CAAOsH,MAAKnN,UAAA,CAAW,WAAW,CAAC;kBACrD,SAASX,CAAA,GAAI,GAAGA,CAAA,GAAI6c,WAAUtc,MAAA,EAAQP,CAAA,IAAK;oBACvC,IAAI6c,WAAU7c,CAAC,MAAM+D,IAAA,EAAM;sBACvB8Y,WAAUvG,MAAA,CAAOtW,CAAA,EAAG,CAAC;oBACzB;kBACJ;kBACA,IAAI,CAAC4E,IAAA,CAAK6S,OAAA,IAAW1T,IAAA,CAAKE,KAAA,KAAUwY,SAAA,EAAW;oBAC3CM,SAAA,CAAUhT,IAAA,CAAKhG,IAAI;kBACvB;gBACJ;gBACA8Y,SAAA,CAAU1T,IAAA,CAAKpF,IAAI;cACvB,OACK;gBACDA,IAAA,CAAKJ,MAAA,CAAO;cAChB;YACJ,WACS,CAACiB,IAAA,CAAK6S,OAAA,IAAWjR,MAAA,CAAOuV,aAAa,MAAM,OAAO;cAEvDvV,MAAA,CAAOyV,0BAA0B,IAAI;YACzC;UACJ;QACJ;QACAI,cAAA,CAAetS,IAAA,CAAKvD,MAAA,EAAQgW,kBAAA,EAAoBE,WAAW;QAC3D,MAAMM,UAAA,GAAaxW,MAAA,CAAOoV,QAAQ;QAClC,IAAI,CAACoB,UAAA,EAAY;UACbxW,MAAA,CAAOoV,QAAQ,IAAI7X,IAAA;QACvB;QACAkZ,UAAA,CAAWhU,KAAA,CAAMzC,MAAA,EAAQ5B,IAAA,CAAKoF,IAAI;QAClCxD,MAAA,CAAOuV,aAAa,IAAI;QACxB,OAAOhY,IAAA;MACX;MACA,SAASmZ,oBAAA,EAAsB,CAAE;MACjC,SAAS5D,UAAUvV,IAAA,EAAM;QACrB,MAAMa,IAAA,GAAOb,IAAA,CAAKa,IAAA;QAGlBA,IAAA,CAAK6S,OAAA,GAAU;QACf,OAAO0F,WAAA,CAAYlU,KAAA,CAAMrE,IAAA,CAAK4B,MAAA,EAAQ5B,IAAA,CAAKoF,IAAI;MACnD;MACA,MAAMoT,UAAA,GAAatR,WAAA,CAAYqQ,uBAAA,EAAyB,QAAQ,MAAM,UAAUtS,OAAMG,IAAA,EAAM;QACxFH,MAAKgS,QAAQ,IAAI7R,IAAA,CAAK,CAAC,KAAK;QAC5BH,MAAKmS,OAAO,IAAIhS,IAAA,CAAK,CAAC;QACtB,OAAOoT,UAAA,CAAWnU,KAAA,CAAMY,OAAMG,IAAI;MACtC,CAAC;MACD,MAAMqT,qBAAA,GAAwB;MAC9B,MAAMC,iBAAA,GAAoBtP,UAAA,CAAW,mBAAmB;MACxD,MAAMuP,mBAAA,GAAsBvP,UAAA,CAAW,qBAAqB;MAC5D,MAAMiP,UAAA,GAAanR,WAAA,CAAYqQ,uBAAA,EAAyB,QAAQ,MAAM,UAAUtS,OAAMG,IAAA,EAAM;QACxF,IAAI8D,MAAKrM,OAAA,CAAQ8b,mBAAmB,MAAM,MAAM;UAI5C,OAAON,UAAA,CAAWhU,KAAA,CAAMY,OAAMG,IAAI;QACtC;QACA,IAAIH,MAAKgS,QAAQ,GAAG;UAEhB,OAAOoB,UAAA,CAAWhU,KAAA,CAAMY,OAAMG,IAAI;QACtC,OACK;UACD,MAAML,OAAA,GAAU;YACZnD,MAAA,EAAQqD;YACR2T,GAAA,EAAK3T,MAAKmS,OAAO;YACjBnX,UAAA,EAAY;YACZmF,IAAA;YACAyN,OAAA,EAAS;UACb;UACA,MAAM1T,IAAA,GAAOgK,gCAAA,CAAiCsP,qBAAA,EAAuBH,mBAAA,EAAqBvT,OAAA,EAASzE,YAAA,EAAcoU,SAAS;UAC1H,IAAIzP,SACAA,MAAKoS,0BAA0B,MAAM,QACrC,CAACtS,OAAA,CAAQ8N,OAAA,IACT1T,IAAA,CAAKE,KAAA,KAAUwY,SAAA,EAAW;YAI1B1Y,IAAA,CAAKJ,MAAA,CAAO;UAChB;QACJ;MACJ,CAAC;MACD,MAAMwZ,WAAA,GAAcrR,WAAA,CAAYqQ,uBAAA,EAAyB,SAAS,MAAM,UAAUtS,OAAMG,IAAA,EAAM;QAC1F,MAAMjG,IAAA,GAAOqY,eAAA,CAAgBvS,KAAI;QACjC,IAAI9F,IAAA,IAAQ,OAAOA,IAAA,CAAKI,IAAA,IAAQ,UAAU;UAKtC,IAAIJ,IAAA,CAAKe,QAAA,IAAY,QAASf,IAAA,CAAKa,IAAA,IAAQb,IAAA,CAAKa,IAAA,CAAK6S,OAAA,EAAU;YAC3D;UACJ;UACA1T,IAAA,CAAKvC,IAAA,CAAKwE,UAAA,CAAWjC,IAAI;QAC7B,WACS+J,MAAKrM,OAAA,CAAQ6b,iBAAiB,MAAM,MAAM;UAE/C,OAAOH,WAAA,CAAYlU,KAAA,CAAMY,OAAMG,IAAI;QACvC;MAIJ,CAAC;IACL;EACJ,CAAC;EACD8D,MAAKhM,YAAA,CAAa,eAAgBtC,WAAW;IAEzC,IAAIA,QAAO,WAAW,KAAKA,QAAO,WAAW,EAAEie,WAAA,EAAa;MACxDnP,cAAA,CAAe9O,QAAO,WAAW,EAAEie,WAAA,EAAa,CAAC,sBAAsB,eAAe,CAAC;IAC3F;EACJ,CAAC;EACD3P,MAAKhM,YAAA,CAAa,yBAAyB,CAACtC,SAAQsO,UAAS;IAEzD,SAAS4P,4BAA4BtF,OAAA,EAAS;MAC1C,OAAO,UAAU5X,CAAA,EAAG;QAChB,MAAMmd,UAAA,GAAa3F,cAAA,CAAexY,SAAQ4Y,OAAO;QACjDuF,UAAA,CAAWC,OAAA,CAASxZ,SAAA,IAAc;UAG9B,MAAMyZ,qBAAA,GAAwBre,QAAO,uBAAuB;UAC5D,IAAIqe,qBAAA,EAAuB;YACvB,MAAMC,GAAA,GAAM,IAAID,qBAAA,CAAsBzF,OAAA,EAAS;cAC3C2F,OAAA,EAASvd,CAAA,CAAEud,OAAA;cACXC,MAAA,EAAQxd,CAAA,CAAEyd;YACd,CAAC;YACD7Z,SAAA,CAAUT,MAAA,CAAOma,GAAG;UACxB;QACJ,CAAC;MACL;IACJ;IACA,IAAIte,QAAO,uBAAuB,GAAG;MACjCsO,MAAKE,UAAA,CAAW,kCAAkC,CAAC,IAC/C0P,2BAAA,CAA4B,oBAAoB;MACpD5P,MAAKE,UAAA,CAAW,yBAAyB,CAAC,IACtC0P,2BAAA,CAA4B,kBAAkB;IACtD;EACJ,CAAC;EACD5P,MAAKhM,YAAA,CAAa,kBAAkB,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACvD2F,mBAAA,CAAoBtZ,SAAQ2T,GAAG;EACnC,CAAC;AACL;AAEA,SAAS+K,aAAapQ,OAAM;EACxBA,MAAKhM,YAAA,CAAa,oBAAoB,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IACzD,MAAM7G,kCAAiC9B,MAAA,CAAOwC,wBAAA;IAC9C,MAAMX,wBAAuB7B,MAAA,CAAOyC,cAAA;IACpC,SAASkR,uBAAuBlO,GAAA,EAAK;MACjC,IAAIA,GAAA,IAAOA,GAAA,CAAI5P,QAAA,KAAamK,MAAA,CAAOC,SAAA,CAAUpK,QAAA,EAAU;QACnD,MAAM6Q,SAAA,GAAYjB,GAAA,CAAI1N,WAAA,IAAe0N,GAAA,CAAI1N,WAAA,CAAY3B,IAAA;QACrD,QAAQsQ,SAAA,GAAYA,SAAA,GAAY,MAAM,OAAOkN,IAAA,CAAKC,SAAA,CAAUpO,GAAG;MACnE;MACA,OAAOA,GAAA,GAAMA,GAAA,CAAI5P,QAAA,CAAS,IAAImK,MAAA,CAAOC,SAAA,CAAUpK,QAAA,CAAS0J,IAAA,CAAKkG,GAAG;IACpE;IACA,MAAMtP,cAAawS,GAAA,CAAI3H,MAAA;IACvB,MAAM8S,sBAAA,GAAyB,EAAC;IAChC,MAAMC,yCAAA,GAA4C/e,QAAOmB,YAAW,6CAA6C,CAAC,MAAM;IACxH,MAAMiK,aAAA,GAAgBjK,YAAW,SAAS;IAC1C,MAAMkK,UAAA,GAAalK,YAAW,MAAM;IACpC,MAAM6d,aAAA,GAAgB;IACtBrL,GAAA,CAAI7H,gBAAA,GAAoB9K,CAAA,IAAM;MAC1B,IAAI2S,GAAA,CAAIxH,iBAAA,CAAkB,GAAG;QACzB,MAAMsS,SAAA,GAAYzd,CAAA,IAAKA,CAAA,CAAEyd,SAAA;QACzB,IAAIA,SAAA,EAAW;UACXQ,OAAA,CAAQ7a,KAAA,CAAM,gCAAgCqa,SAAA,YAAqB3c,KAAA,GAAQ2c,SAAA,CAAUtO,OAAA,GAAUsO,SAAA,EAAW,WAAWzd,CAAA,CAAEgB,IAAA,CAAKZ,IAAA,EAAM,WAAWJ,CAAA,CAAEuD,IAAA,IAAQvD,CAAA,CAAEuD,IAAA,CAAKZ,MAAA,EAAQ,YAAY8a,SAAA,EAAWA,SAAA,YAAqB3c,KAAA,GAAQ2c,SAAA,CAAUS,KAAA,GAAQ,MAAS;QACzP,OACK;UACDD,OAAA,CAAQ7a,KAAA,CAAMpD,CAAC;QACnB;MACJ;IACJ;IACA2S,GAAA,CAAI5H,kBAAA,GAAqB,MAAM;MAC3B,OAAO+S,sBAAA,CAAuB/d,MAAA,EAAQ;QAClC,MAAMoe,oBAAA,GAAuBL,sBAAA,CAAuBM,KAAA,CAAM;QAC1D,IAAI;UACAD,oBAAA,CAAqBnd,IAAA,CAAK8B,UAAA,CAAW,MAAM;YACvC,IAAIqb,oBAAA,CAAqBE,aAAA,EAAe;cACpC,MAAMF,oBAAA,CAAqBV,SAAA;YAC/B;YACA,MAAMU,oBAAA;UACV,CAAC;QACL,SACO/a,KAAA,EAAO;UACVkb,wBAAA,CAAyBlb,KAAK;QAClC;MACJ;IACJ;IACA,MAAMmb,0CAAA,GAA6Cpe,YAAW,kCAAkC;IAChG,SAASme,yBAAyBte,CAAA,EAAG;MACjC2S,GAAA,CAAI7H,gBAAA,CAAiB9K,CAAC;MACtB,IAAI;QACA,MAAMwe,OAAA,GAAUlR,MAAKiR,0CAA0C;QAC/D,IAAI,OAAOC,OAAA,KAAY,YAAY;UAC/BA,OAAA,CAAQjV,IAAA,CAAK,MAAMvJ,CAAC;QACxB;MACJ,SACOgF,GAAA,EAAK,CAAE;IAClB;IACA,SAASyZ,WAAW5V,KAAA,EAAO;MACvB,OAAOA,KAAA,IAASA,KAAA,CAAM6V,IAAA;IAC1B;IACA,SAASC,kBAAkB9V,KAAA,EAAO;MAC9B,OAAOA,KAAA;IACX;IACA,SAAS+V,iBAAiBnB,SAAA,EAAW;MACjC,OAAOoB,gBAAA,CAAiBC,MAAA,CAAOrB,SAAS;IAC5C;IACA,MAAMsB,WAAA,GAAc5e,YAAW,OAAO;IACtC,MAAM6e,WAAA,GAAc7e,YAAW,OAAO;IACtC,MAAM8e,aAAA,GAAgB9e,YAAW,SAAS;IAC1C,MAAM+e,wBAAA,GAA2B/e,YAAW,oBAAoB;IAChE,MAAMgf,wBAAA,GAA2Bhf,YAAW,oBAAoB;IAChE,MAAMwC,MAAA,GAAS;IACf,MAAMyc,UAAA,GAAa;IACnB,MAAMC,QAAA,GAAW;IACjB,MAAMC,QAAA,GAAW;IACjB,MAAMC,iBAAA,GAAoB;IAC1B,SAASC,aAAajC,OAAA,EAAS9Z,KAAA,EAAO;MAClC,OAAQ7D,CAAA,IAAM;QACV,IAAI;UACA6f,cAAA,CAAelC,OAAA,EAAS9Z,KAAA,EAAO7D,CAAC;QACpC,SACOoF,GAAA,EAAK;UACRya,cAAA,CAAelC,OAAA,EAAS,OAAOvY,GAAG;QACtC;MAEJ;IACJ;IACA,MAAM6O,IAAA,GAAO,SAAAA,CAAA,EAAY;MACrB,IAAI6L,SAAA,GAAY;MAChB,OAAO,SAASC,QAAQC,eAAA,EAAiB;QACrC,OAAO,YAAY;UACf,IAAIF,SAAA,EAAW;YACX;UACJ;UACAA,SAAA,GAAY;UACZE,eAAA,CAAgBnX,KAAA,CAAM,MAAM1F,SAAS;QACzC;MACJ;IACJ;IACA,MAAM8c,UAAA,GAAa;IACnB,MAAMC,yBAAA,GAA4B3f,YAAW,kBAAkB;IAE/D,SAASsf,eAAelC,OAAA,EAAS9Z,KAAA,EAAOoF,KAAA,EAAO;MAC3C,MAAMkX,WAAA,GAAclM,IAAA,CAAK;MACzB,IAAI0J,OAAA,KAAY1U,KAAA,EAAO;QACnB,MAAM,IAAImX,SAAA,CAAUH,UAAU;MAClC;MACA,IAAItC,OAAA,CAAQwB,WAAW,MAAMK,UAAA,EAAY;QAErC,IAAIV,IAAA,GAAO;QACX,IAAI;UACA,IAAI,OAAO7V,KAAA,KAAU,YAAY,OAAOA,KAAA,KAAU,YAAY;YAC1D6V,IAAA,GAAO7V,KAAA,IAASA,KAAA,CAAM6V,IAAA;UAC1B;QACJ,SACO1Z,GAAA,EAAK;UACR+a,WAAA,CAAY,MAAM;YACdN,cAAA,CAAelC,OAAA,EAAS,OAAOvY,GAAG;UACtC,CAAC,EAAE;UACH,OAAOuY,OAAA;QACX;QAEA,IAAI9Z,KAAA,KAAU6b,QAAA,IACVzW,KAAA,YAAiBgW,gBAAA,IACjBhW,KAAA,CAAMpH,cAAA,CAAesd,WAAW,KAChClW,KAAA,CAAMpH,cAAA,CAAeud,WAAW,KAChCnW,KAAA,CAAMkW,WAAW,MAAMK,UAAA,EAAY;UACnCa,oBAAA,CAAqBpX,KAAK;UAC1B4W,cAAA,CAAelC,OAAA,EAAS1U,KAAA,CAAMkW,WAAW,GAAGlW,KAAA,CAAMmW,WAAW,CAAC;QAClE,WACSvb,KAAA,KAAU6b,QAAA,IAAY,OAAOZ,IAAA,KAAS,YAAY;UACvD,IAAI;YACAA,IAAA,CAAKnV,IAAA,CAAKV,KAAA,EAAOkX,WAAA,CAAYP,YAAA,CAAajC,OAAA,EAAS9Z,KAAK,CAAC,GAAGsc,WAAA,CAAYP,YAAA,CAAajC,OAAA,EAAS,KAAK,CAAC,CAAC;UACzG,SACOvY,GAAA,EAAK;YACR+a,WAAA,CAAY,MAAM;cACdN,cAAA,CAAelC,OAAA,EAAS,OAAOvY,GAAG;YACtC,CAAC,EAAE;UACP;QACJ,OACK;UACDuY,OAAA,CAAQwB,WAAW,IAAItb,KAAA;UACvB,MAAMoH,KAAA,GAAQ0S,OAAA,CAAQyB,WAAW;UACjCzB,OAAA,CAAQyB,WAAW,IAAInW,KAAA;UACvB,IAAI0U,OAAA,CAAQ0B,aAAa,MAAMA,aAAA,EAAe;YAE1C,IAAIxb,KAAA,KAAU4b,QAAA,EAAU;cAGpB9B,OAAA,CAAQwB,WAAW,IAAIxB,OAAA,CAAQ4B,wBAAwB;cACvD5B,OAAA,CAAQyB,WAAW,IAAIzB,OAAA,CAAQ2B,wBAAwB;YAC3D;UACJ;UAGA,IAAIzb,KAAA,KAAU6b,QAAA,IAAYzW,KAAA,YAAiB/H,KAAA,EAAO;YAE9C,MAAMof,KAAA,GAAQ5S,MAAKlM,WAAA,IACfkM,MAAKlM,WAAA,CAAYgD,IAAA,IACjBkJ,MAAKlM,WAAA,CAAYgD,IAAA,CAAK4Z,aAAa;YACvC,IAAIkC,KAAA,EAAO;cAEPrU,sBAAqBhD,KAAA,EAAOiX,yBAAA,EAA2B;gBACnDjQ,YAAA,EAAc;gBACdD,UAAA,EAAY;gBACZxB,QAAA,EAAU;gBACVvF,KAAA,EAAOqX;cACX,CAAC;YACL;UACJ;UACA,SAAS1gB,CAAA,GAAI,GAAGA,CAAA,GAAIqL,KAAA,CAAM9K,MAAA,GAAS;YAC/BogB,uBAAA,CAAwB5C,OAAA,EAAS1S,KAAA,CAAMrL,CAAA,EAAG,GAAGqL,KAAA,CAAMrL,CAAA,EAAG,GAAGqL,KAAA,CAAMrL,CAAA,EAAG,GAAGqL,KAAA,CAAMrL,CAAA,EAAG,CAAC;UACnF;UACA,IAAIqL,KAAA,CAAM9K,MAAA,IAAU,KAAK0D,KAAA,IAAS6b,QAAA,EAAU;YACxC/B,OAAA,CAAQwB,WAAW,IAAIQ,iBAAA;YACvB,IAAIpB,oBAAA,GAAuBtV,KAAA;YAC3B,IAAI;cAIA,MAAM,IAAI/H,KAAA,CAAM,4BACZ6c,sBAAA,CAAuB9U,KAAK,KAC3BA,KAAA,IAASA,KAAA,CAAMqV,KAAA,GAAQ,OAAOrV,KAAA,CAAMqV,KAAA,GAAQ,GAAG;YACxD,SACOlZ,GAAA,EAAK;cACRmZ,oBAAA,GAAuBnZ,GAAA;YAC3B;YACA,IAAI+Y,yCAAA,EAA2C;cAG3CI,oBAAA,CAAqBE,aAAA,GAAgB;YACzC;YACAF,oBAAA,CAAqBV,SAAA,GAAY5U,KAAA;YACjCsV,oBAAA,CAAqBZ,OAAA,GAAUA,OAAA;YAC/BY,oBAAA,CAAqBnd,IAAA,GAAOsM,MAAKrM,OAAA;YACjCkd,oBAAA,CAAqB5a,IAAA,GAAO+J,MAAKlM,WAAA;YACjC0c,sBAAA,CAAuBnV,IAAA,CAAKwV,oBAAoB;YAChDxL,GAAA,CAAI1N,iBAAA,CAAkB;UAC1B;QACJ;MACJ;MAEA,OAAOsY,OAAA;IACX;IACA,MAAM6C,yBAAA,GAA4BjgB,YAAW,yBAAyB;IACtE,SAAS8f,qBAAqB1C,OAAA,EAAS;MACnC,IAAIA,OAAA,CAAQwB,WAAW,MAAMQ,iBAAA,EAAmB;QAM5C,IAAI;UACA,MAAMf,OAAA,GAAUlR,MAAK8S,yBAAyB;UAC9C,IAAI5B,OAAA,IAAW,OAAOA,OAAA,KAAY,YAAY;YAC1CA,OAAA,CAAQjV,IAAA,CAAK,MAAM;cAAEkU,SAAA,EAAWF,OAAA,CAAQyB,WAAW;cAAGzB;YAAiB,CAAC;UAC5E;QACJ,SACOvY,GAAA,EAAK,CAAE;QACduY,OAAA,CAAQwB,WAAW,IAAIO,QAAA;QACvB,SAAS9f,CAAA,GAAI,GAAGA,CAAA,GAAIse,sBAAA,CAAuB/d,MAAA,EAAQP,CAAA,IAAK;UACpD,IAAI+d,OAAA,KAAYO,sBAAA,CAAuBte,CAAC,EAAE+d,OAAA,EAAS;YAC/CO,sBAAA,CAAuBhI,MAAA,CAAOtW,CAAA,EAAG,CAAC;UACtC;QACJ;MACJ;IACJ;IACA,SAAS2gB,wBAAwB5C,OAAA,EAASvc,IAAA,EAAMqf,YAAA,EAAcC,WAAA,EAAaC,UAAA,EAAY;MACnFN,oBAAA,CAAqB1C,OAAO;MAC5B,MAAMiD,YAAA,GAAejD,OAAA,CAAQwB,WAAW;MACxC,MAAMjZ,QAAA,GAAW0a,YAAA,GACX,OAAOF,WAAA,KAAgB,aACnBA,WAAA,GACA3B,iBAAA,GACJ,OAAO4B,UAAA,KAAe,aAClBA,UAAA,GACA3B,gBAAA;MACV5d,IAAA,CAAKiE,iBAAA,CAAkBtC,MAAA,EAAQ,MAAM;QACjC,IAAI;UACA,MAAM8d,kBAAA,GAAqBlD,OAAA,CAAQyB,WAAW;UAC9C,MAAM0B,gBAAA,GAAmB,CAAC,CAACL,YAAA,IAAgBpB,aAAA,KAAkBoB,YAAA,CAAapB,aAAa;UACvF,IAAIyB,gBAAA,EAAkB;YAElBL,YAAA,CAAanB,wBAAwB,IAAIuB,kBAAA;YACzCJ,YAAA,CAAalB,wBAAwB,IAAIqB,YAAA;UAC7C;UAEA,MAAM3X,KAAA,GAAQ7H,IAAA,CAAKgC,GAAA,CAAI8C,QAAA,EAAU,QAAW4a,gBAAA,IAAoB5a,QAAA,KAAa8Y,gBAAA,IAAoB9Y,QAAA,KAAa6Y,iBAAA,GACxG,EAAC,GACD,CAAC8B,kBAAkB,CAAC;UAC1BhB,cAAA,CAAeY,YAAA,EAAc,MAAMxX,KAAK;QAC5C,SACOzF,KAAA,EAAO;UAEVqc,cAAA,CAAeY,YAAA,EAAc,OAAOjd,KAAK;QAC7C;MACJ,GAAGid,YAAY;IACnB;IACA,MAAMM,4BAAA,GAA+B;IACrC,MAAMzV,IAAA,GAAO,SAAAA,CAAA,EAAY,CAAE;IAC3B,MAAM0V,cAAA,GAAiB5hB,QAAO4hB,cAAA;IAC9B,MAAM/B,gBAAA,CAAiB;MACnB,OAAOhf,SAAA,EAAW;QACd,OAAO8gB,4BAAA;MACX;MACA,OAAOhW,QAAQ9B,KAAA,EAAO;QAClB,IAAIA,KAAA,YAAiBgW,gBAAA,EAAkB;UACnC,OAAOhW,KAAA;QACX;QACA,OAAO4W,cAAA,CAAe,IAAI,KAAK,IAAI,GAAGJ,QAAA,EAAUxW,KAAK;MACzD;MACA,OAAOiW,OAAO1b,KAAA,EAAO;QACjB,OAAOqc,cAAA,CAAe,IAAI,KAAK,IAAI,GAAGH,QAAA,EAAUlc,KAAK;MACzD;MACA,OAAOyd,cAAA,EAAgB;QACnB,MAAM5R,MAAA,GAAS,CAAC;QAChBA,MAAA,CAAOsO,OAAA,GAAU,IAAIsB,gBAAA,CAAiB,CAACiC,GAAA,EAAKC,GAAA,KAAQ;UAChD9R,MAAA,CAAOtE,OAAA,GAAUmW,GAAA;UACjB7R,MAAA,CAAO6P,MAAA,GAASiC,GAAA;QACpB,CAAC;QACD,OAAO9R,MAAA;MACX;MACA,OAAO+R,IAAIC,MAAA,EAAQ;QACf,IAAI,CAACA,MAAA,IAAU,OAAOA,MAAA,CAAOC,MAAA,CAAOC,QAAQ,MAAM,YAAY;UAC1D,OAAOC,OAAA,CAAQtC,MAAA,CAAO,IAAI8B,cAAA,CAAe,EAAC,EAAG,4BAA4B,CAAC;QAC9E;QACA,MAAMS,QAAA,GAAW,EAAC;QAClB,IAAI3b,KAAA,GAAQ;QACZ,IAAI;UACA,SAAS9F,CAAA,IAAKqhB,MAAA,EAAQ;YAClBvb,KAAA;YACA2b,QAAA,CAAS1Y,IAAA,CAAKkW,gBAAA,CAAiBlU,OAAA,CAAQ/K,CAAC,CAAC;UAC7C;QACJ,SACOoF,GAAA,EAAK;UACR,OAAOoc,OAAA,CAAQtC,MAAA,CAAO,IAAI8B,cAAA,CAAe,EAAC,EAAG,4BAA4B,CAAC;QAC9E;QACA,IAAIlb,KAAA,KAAU,GAAG;UACb,OAAO0b,OAAA,CAAQtC,MAAA,CAAO,IAAI8B,cAAA,CAAe,EAAC,EAAG,4BAA4B,CAAC;QAC9E;QACA,IAAIU,QAAA,GAAW;QACf,MAAMpN,MAAA,GAAS,EAAC;QAChB,OAAO,IAAI2K,gBAAA,CAAiB,CAAClU,OAAA,EAASmU,MAAA,KAAW;UAC7C,SAAStf,CAAA,GAAI,GAAGA,CAAA,GAAI6hB,QAAA,CAASthB,MAAA,EAAQP,CAAA,IAAK;YACtC6hB,QAAA,CAAS7hB,CAAC,EAAEkf,IAAA,CAAM9e,CAAA,IAAM;cACpB,IAAI0hB,QAAA,EAAU;gBACV;cACJ;cACAA,QAAA,GAAW;cACX3W,OAAA,CAAQ/K,CAAC;YACb,GAAIoF,GAAA,IAAQ;cACRkP,MAAA,CAAOvL,IAAA,CAAK3D,GAAG;cACfU,KAAA;cACA,IAAIA,KAAA,KAAU,GAAG;gBACb4b,QAAA,GAAW;gBACXxC,MAAA,CAAO,IAAI8B,cAAA,CAAe1M,MAAA,EAAQ,4BAA4B,CAAC;cACnE;YACJ,CAAC;UACL;QACJ,CAAC;MACL;MACA,OAAOqN,KAAKN,MAAA,EAAQ;QAChB,IAAItW,OAAA;QACJ,IAAImU,MAAA;QACJ,IAAIvB,OAAA,GAAU,IAAI,KAAK,CAACuD,GAAA,EAAKC,GAAA,KAAQ;UACjCpW,OAAA,GAAUmW,GAAA;UACVhC,MAAA,GAASiC,GAAA;QACb,CAAC;QACD,SAASS,UAAU3Y,KAAA,EAAO;UACtB8B,OAAA,CAAQ9B,KAAK;QACjB;QACA,SAAS4Y,SAASre,KAAA,EAAO;UACrB0b,MAAA,CAAO1b,KAAK;QAChB;QACA,SAASyF,KAAA,IAASoY,MAAA,EAAQ;UACtB,IAAI,CAACxC,UAAA,CAAW5V,KAAK,GAAG;YACpBA,KAAA,GAAQ,KAAK8B,OAAA,CAAQ9B,KAAK;UAC9B;UACAA,KAAA,CAAM6V,IAAA,CAAK8C,SAAA,EAAWC,QAAQ;QAClC;QACA,OAAOlE,OAAA;MACX;MACA,OAAOmE,IAAIT,MAAA,EAAQ;QACf,OAAOpC,gBAAA,CAAiB8C,eAAA,CAAgBV,MAAM;MAClD;MACA,OAAOW,WAAWX,MAAA,EAAQ;QACtB,MAAMY,CAAA,GAAI,QAAQ,KAAK5X,SAAA,YAAqB4U,gBAAA,GAAmB,OAAOA,gBAAA;QACtE,OAAOgD,CAAA,CAAEF,eAAA,CAAgBV,MAAA,EAAQ;UAC7Ba,YAAA,EAAejZ,KAAA,KAAW;YAAEyT,MAAA,EAAQ;YAAazT;UAAM;UACvDkZ,aAAA,EAAgB/c,GAAA,KAAS;YAAEsX,MAAA,EAAQ;YAAYkB,MAAA,EAAQxY;UAAI;QAC/D,CAAC;MACL;MACA,OAAO2c,gBAAgBV,MAAA,EAAQve,QAAA,EAAU;QACrC,IAAIiI,OAAA;QACJ,IAAImU,MAAA;QACJ,IAAIvB,OAAA,GAAU,IAAI,KAAK,CAACuD,GAAA,EAAKC,GAAA,KAAQ;UACjCpW,OAAA,GAAUmW,GAAA;UACVhC,MAAA,GAASiC,GAAA;QACb,CAAC;QAED,IAAIiB,eAAA,GAAkB;QACtB,IAAIC,UAAA,GAAa;QACjB,MAAMC,cAAA,GAAiB,EAAC;QACxB,SAASrZ,KAAA,IAASoY,MAAA,EAAQ;UACtB,IAAI,CAACxC,UAAA,CAAW5V,KAAK,GAAG;YACpBA,KAAA,GAAQ,KAAK8B,OAAA,CAAQ9B,KAAK;UAC9B;UACA,MAAMsZ,aAAA,GAAgBF,UAAA;UACtB,IAAI;YACApZ,KAAA,CAAM6V,IAAA,CAAM7V,UAAU;cAClBqZ,cAAA,CAAeC,aAAa,IAAIzf,QAAA,GAAWA,QAAA,CAASof,YAAA,CAAajZ,MAAK,IAAIA;cAC1EmZ,eAAA;cACA,IAAIA,eAAA,KAAoB,GAAG;gBACvBrX,OAAA,CAAQuX,cAAc;cAC1B;YACJ,GAAIld,GAAA,IAAQ;cACR,IAAI,CAACtC,QAAA,EAAU;gBACXoc,MAAA,CAAO9Z,GAAG;cACd,OACK;gBACDkd,cAAA,CAAeC,aAAa,IAAIzf,QAAA,CAASqf,aAAA,CAAc/c,GAAG;gBAC1Dgd,eAAA;gBACA,IAAIA,eAAA,KAAoB,GAAG;kBACvBrX,OAAA,CAAQuX,cAAc;gBAC1B;cACJ;YACJ,CAAC;UACL,SACOE,OAAA,EAAS;YACZtD,MAAA,CAAOsD,OAAO;UAClB;UACAJ,eAAA;UACAC,UAAA;QACJ;QAEAD,eAAA,IAAmB;QACnB,IAAIA,eAAA,KAAoB,GAAG;UACvBrX,OAAA,CAAQuX,cAAc;QAC1B;QACA,OAAO3E,OAAA;MACX;MACAxb,YAAYsgB,QAAA,EAAU;QAClB,MAAM9E,OAAA,GAAU;QAChB,IAAI,EAAEA,OAAA,YAAmBsB,gBAAA,GAAmB;UACxC,MAAM,IAAI/d,KAAA,CAAM,gCAAgC;QACpD;QACAyc,OAAA,CAAQwB,WAAW,IAAIK,UAAA;QACvB7B,OAAA,CAAQyB,WAAW,IAAI,EAAC;QACxB,IAAI;UACA,MAAMe,WAAA,GAAclM,IAAA,CAAK;UACzBwO,QAAA,IACIA,QAAA,CAAStC,WAAA,CAAYP,YAAA,CAAajC,OAAA,EAAS8B,QAAQ,CAAC,GAAGU,WAAA,CAAYP,YAAA,CAAajC,OAAA,EAAS+B,QAAQ,CAAC,CAAC;QAC3G,SACOlc,KAAA,EAAO;UACVqc,cAAA,CAAelC,OAAA,EAAS,OAAOna,KAAK;QACxC;MACJ;MACA,KAAK8d,MAAA,CAAOoB,WAAW,IAAI;QACvB,OAAO;MACX;MACA,KAAKpB,MAAA,CAAOqB,OAAO,IAAI;QACnB,OAAO1D,gBAAA;MACX;MACAH,KAAK4B,WAAA,EAAaC,UAAA,EAAY;QAS1B,IAAIiC,CAAA,GAAI,KAAKzgB,WAAA,GAAcmf,MAAA,CAAOqB,OAAO;QACzC,IAAI,CAACC,CAAA,IAAK,OAAOA,CAAA,KAAM,YAAY;UAC/BA,CAAA,GAAI,KAAKzgB,WAAA,IAAe8c,gBAAA;QAC5B;QACA,MAAMwB,YAAA,GAAe,IAAImC,CAAA,CAAEtX,IAAI;QAC/B,MAAMlK,IAAA,GAAOsM,MAAKrM,OAAA;QAClB,IAAI,KAAK8d,WAAW,KAAKK,UAAA,EAAY;UACjC,KAAKJ,WAAW,EAAErW,IAAA,CAAK3H,IAAA,EAAMqf,YAAA,EAAcC,WAAA,EAAaC,UAAU;QACtE,OACK;UACDJ,uBAAA,CAAwB,MAAMnf,IAAA,EAAMqf,YAAA,EAAcC,WAAA,EAAaC,UAAU;QAC7E;QACA,OAAOF,YAAA;MACX;MACAoC,MAAMlC,UAAA,EAAY;QACd,OAAO,KAAK7B,IAAA,CAAK,MAAM6B,UAAU;MACrC;MACAmC,QAAQC,SAAA,EAAW;QAEf,IAAIH,CAAA,GAAI,KAAKzgB,WAAA,GAAcmf,MAAA,CAAOqB,OAAO;QACzC,IAAI,CAACC,CAAA,IAAK,OAAOA,CAAA,KAAM,YAAY;UAC/BA,CAAA,GAAI3D,gBAAA;QACR;QACA,MAAMwB,YAAA,GAAe,IAAImC,CAAA,CAAEtX,IAAI;QAC/BmV,YAAA,CAAapB,aAAa,IAAIA,aAAA;QAC9B,MAAMje,IAAA,GAAOsM,MAAKrM,OAAA;QAClB,IAAI,KAAK8d,WAAW,KAAKK,UAAA,EAAY;UACjC,KAAKJ,WAAW,EAAErW,IAAA,CAAK3H,IAAA,EAAMqf,YAAA,EAAcsC,SAAA,EAAWA,SAAS;QACnE,OACK;UACDxC,uBAAA,CAAwB,MAAMnf,IAAA,EAAMqf,YAAA,EAAcsC,SAAA,EAAWA,SAAS;QAC1E;QACA,OAAOtC,YAAA;MACX;IACJ;IAGAxB,gBAAA,CAAiB,SAAS,IAAIA,gBAAA,CAAiBlU,OAAA;IAC/CkU,gBAAA,CAAiB,QAAQ,IAAIA,gBAAA,CAAiBC,MAAA;IAC9CD,gBAAA,CAAiB,MAAM,IAAIA,gBAAA,CAAiB0C,IAAA;IAC5C1C,gBAAA,CAAiB,KAAK,IAAIA,gBAAA,CAAiB6C,GAAA;IAC3C,MAAMkB,aAAA,GAAiB5jB,QAAOoL,aAAa,IAAIpL,QAAO,SAAS;IAC/DA,QAAO,SAAS,IAAI6f,gBAAA;IACpB,MAAMgE,iBAAA,GAAoB1iB,YAAW,aAAa;IAClD,SAASqL,UAAUsX,IAAA,EAAM;MACrB,MAAM/R,KAAA,GAAQ+R,IAAA,CAAK7Y,SAAA;MACnB,MAAMyF,IAAA,GAAO5D,gCAA+BiF,KAAA,EAAO,MAAM;MACzD,IAAIrB,IAAA,KAASA,IAAA,CAAKtB,QAAA,KAAa,SAAS,CAACsB,IAAA,CAAKG,YAAA,GAAe;QAGzD;MACJ;MACA,MAAMkT,YAAA,GAAehS,KAAA,CAAM2N,IAAA;MAE3B3N,KAAA,CAAM1G,UAAU,IAAI0Y,YAAA;MACpBD,IAAA,CAAK7Y,SAAA,CAAUyU,IAAA,GAAO,UAAU8C,SAAA,EAAWC,QAAA,EAAU;QACjD,MAAMuB,OAAA,GAAU,IAAInE,gBAAA,CAAiB,CAAClU,OAAA,EAASmU,MAAA,KAAW;UACtDiE,YAAA,CAAaxZ,IAAA,CAAK,MAAMoB,OAAA,EAASmU,MAAM;QAC3C,CAAC;QACD,OAAOkE,OAAA,CAAQtE,IAAA,CAAK8C,SAAA,EAAWC,QAAQ;MAC3C;MACAqB,IAAA,CAAKD,iBAAiB,IAAI;IAC9B;IACAlQ,GAAA,CAAInH,SAAA,GAAYA,SAAA;IAChB,SAASyX,QAAQ1hB,EAAA,EAAI;MACjB,OAAO,UAAU8H,OAAMG,IAAA,EAAM;QACzB,IAAI0Z,aAAA,GAAgB3hB,EAAA,CAAGkH,KAAA,CAAMY,OAAMG,IAAI;QACvC,IAAI0Z,aAAA,YAAyBrE,gBAAA,EAAkB;UAC3C,OAAOqE,aAAA;QACX;QACA,IAAIC,IAAA,GAAOD,aAAA,CAAcnhB,WAAA;QACzB,IAAI,CAACohB,IAAA,CAAKN,iBAAiB,GAAG;UAC1BrX,SAAA,CAAU2X,IAAI;QAClB;QACA,OAAOD,aAAA;MACX;IACJ;IACA,IAAIN,aAAA,EAAe;MACfpX,SAAA,CAAUoX,aAAa;MACvBtX,WAAA,CAAYtM,SAAQ,SAAU8G,QAAA,IAAamd,OAAA,CAAQnd,QAAQ,CAAC;IAChE;IAEAsb,OAAA,CAAQ9T,MAAKnN,UAAA,CAAW,uBAAuB,CAAC,IAAI2d,sBAAA;IACpD,OAAOe,gBAAA;EACX,CAAC;AACL;AAEA,SAASuE,cAAc9V,OAAM;EAGzBA,MAAKhM,YAAA,CAAa,YAAatC,WAAW;IAEtC,MAAMqkB,wBAAA,GAA2BC,QAAA,CAASrZ,SAAA,CAAUpK,QAAA;IACpD,MAAM0jB,wBAAA,GAA2B/V,UAAA,CAAW,kBAAkB;IAC9D,MAAMgW,cAAA,GAAiBhW,UAAA,CAAW,SAAS;IAC3C,MAAMiW,YAAA,GAAejW,UAAA,CAAW,OAAO;IACvC,MAAMkW,mBAAA,GAAsB,SAAS7jB,SAAA,EAAW;MAC5C,IAAI,OAAO,SAAS,YAAY;QAC5B,MAAM+T,gBAAA,GAAmB,KAAK2P,wBAAwB;QACtD,IAAI3P,gBAAA,EAAkB;UAClB,IAAI,OAAOA,gBAAA,KAAqB,YAAY;YACxC,OAAOyP,wBAAA,CAAyB9Z,IAAA,CAAKqK,gBAAgB;UACzD,OACK;YACD,OAAO5J,MAAA,CAAOC,SAAA,CAAUpK,QAAA,CAAS0J,IAAA,CAAKqK,gBAAgB;UAC1D;QACJ;QACA,IAAI,SAASwN,OAAA,EAAS;UAClB,MAAMuC,aAAA,GAAgB3kB,QAAOwkB,cAAc;UAC3C,IAAIG,aAAA,EAAe;YACf,OAAON,wBAAA,CAAyB9Z,IAAA,CAAKoa,aAAa;UACtD;QACJ;QACA,IAAI,SAAS7iB,KAAA,EAAO;UAChB,MAAM8iB,WAAA,GAAc5kB,QAAOykB,YAAY;UACvC,IAAIG,WAAA,EAAa;YACb,OAAOP,wBAAA,CAAyB9Z,IAAA,CAAKqa,WAAW;UACpD;QACJ;MACJ;MACA,OAAOP,wBAAA,CAAyB9Z,IAAA,CAAK,IAAI;IAC7C;IACAma,mBAAA,CAAoBH,wBAAwB,IAAIF,wBAAA;IAChDC,QAAA,CAASrZ,SAAA,CAAUpK,QAAA,GAAW6jB,mBAAA;IAE9B,MAAMG,sBAAA,GAAyB7Z,MAAA,CAAOC,SAAA,CAAUpK,QAAA;IAChD,MAAMikB,wBAAA,GAA2B;IACjC9Z,MAAA,CAAOC,SAAA,CAAUpK,QAAA,GAAW,YAAY;MACpC,IAAI,OAAOuhB,OAAA,KAAY,cAAc,gBAAgBA,OAAA,EAAS;QAC1D,OAAO0C,wBAAA;MACX;MACA,OAAOD,sBAAA,CAAuBta,IAAA,CAAK,IAAI;IAC3C;EACJ,CAAC;AACL;AAEA,SAAS+C,eAAeqG,GAAA,EAAK3M,MAAA,EAAQ+d,UAAA,EAAYC,MAAA,EAAQzK,SAAA,EAAW;EAChE,MAAMvO,MAAA,GAASsC,IAAA,CAAKnN,UAAA,CAAW6jB,MAAM;EACrC,IAAIhe,MAAA,CAAOgF,MAAM,GAAG;IAChB;EACJ;EACA,MAAMiZ,cAAA,GAAkBje,MAAA,CAAOgF,MAAM,IAAIhF,MAAA,CAAOge,MAAM;EACtDhe,MAAA,CAAOge,MAAM,IAAI,UAAU5jB,IAAA,EAAM8jB,IAAA,EAAM/a,OAAA,EAAS;IAC5C,IAAI+a,IAAA,IAAQA,IAAA,CAAKja,SAAA,EAAW;MACxBsP,SAAA,CAAU6D,OAAA,CAAQ,UAAU1a,QAAA,EAAU;QAClC,MAAMC,MAAA,GAAS,GAAGohB,UAAU,IAAIC,MAAM,OAAOthB,QAAA;QAC7C,MAAMuH,SAAA,GAAYia,IAAA,CAAKja,SAAA;QASvB,IAAI;UACA,IAAIA,SAAA,CAAUxI,cAAA,CAAeiB,QAAQ,GAAG;YACpC,MAAMyhB,UAAA,GAAaxR,GAAA,CAAI7G,8BAAA,CAA+B7B,SAAA,EAAWvH,QAAQ;YACzE,IAAIyhB,UAAA,IAAcA,UAAA,CAAWtb,KAAA,EAAO;cAChCsb,UAAA,CAAWtb,KAAA,GAAQ8J,GAAA,CAAIzG,mBAAA,CAAoBiY,UAAA,CAAWtb,KAAA,EAAOlG,MAAM;cACnEgQ,GAAA,CAAItG,iBAAA,CAAkB6X,IAAA,CAAKja,SAAA,EAAWvH,QAAA,EAAUyhB,UAAU;YAC9D,WACSla,SAAA,CAAUvH,QAAQ,GAAG;cAC1BuH,SAAA,CAAUvH,QAAQ,IAAIiQ,GAAA,CAAIzG,mBAAA,CAAoBjC,SAAA,CAAUvH,QAAQ,GAAGC,MAAM;YAC7E;UACJ,WACSsH,SAAA,CAAUvH,QAAQ,GAAG;YAC1BuH,SAAA,CAAUvH,QAAQ,IAAIiQ,GAAA,CAAIzG,mBAAA,CAAoBjC,SAAA,CAAUvH,QAAQ,GAAGC,MAAM;UAC7E;QACJ,QACM,CAGN;MACJ,CAAC;IACL;IACA,OAAOshB,cAAA,CAAe1a,IAAA,CAAKvD,MAAA,EAAQ5F,IAAA,EAAM8jB,IAAA,EAAM/a,OAAO;EAC1D;EACAwJ,GAAA,CAAIvG,qBAAA,CAAsBpG,MAAA,CAAOge,MAAM,GAAGC,cAAc;AAC5D;AAEA,SAASG,UAAU9W,OAAM;EACrBA,MAAKhM,YAAA,CAAa,QAAQ,CAACtC,SAAQsO,OAAMqF,GAAA,KAAQ;IAG7C,MAAM+G,UAAA,GAAaW,eAAA,CAAgBrb,OAAM;IACzC2T,GAAA,CAAItH,iBAAA,GAAoBA,iBAAA;IACxBsH,GAAA,CAAIrH,WAAA,GAAcA,WAAA;IAClBqH,GAAA,CAAIpH,aAAA,GAAgBA,aAAA;IACpBoH,GAAA,CAAIlH,cAAA,GAAiBA,cAAA;IAMrB,MAAM4Y,0BAAA,GAA6B/W,MAAKnN,UAAA,CAAW,qBAAqB;IACxE,MAAMmkB,uBAAA,GAA0BhX,MAAKnN,UAAA,CAAW,kBAAkB;IAClE,IAAInB,QAAOslB,uBAAuB,GAAG;MACjCtlB,QAAOqlB,0BAA0B,IAAIrlB,QAAOslB,uBAAuB;IACvE;IACA,IAAItlB,QAAOqlB,0BAA0B,GAAG;MACpC/W,MAAK+W,0BAA0B,IAAI/W,MAAKgX,uBAAuB,IAC3DtlB,QAAOqlB,0BAA0B;IACzC;IACA1R,GAAA,CAAIjH,mBAAA,GAAsBA,mBAAA;IAC1BiH,GAAA,CAAIvH,gBAAA,GAAmBA,gBAAA;IACvBuH,GAAA,CAAIhH,UAAA,GAAaA,UAAA;IACjBgH,GAAA,CAAI9G,oBAAA,GAAuBA,oBAAA;IAC3B8G,GAAA,CAAI7G,8BAAA,GAAiCA,8BAAA;IACrC6G,GAAA,CAAI5G,YAAA,GAAeA,YAAA;IACnB4G,GAAA,CAAI3G,UAAA,GAAaA,UAAA;IACjB2G,GAAA,CAAI1G,UAAA,GAAaA,UAAA;IACjB0G,GAAA,CAAIzG,mBAAA,GAAsBA,mBAAA;IAC1ByG,GAAA,CAAIxG,gBAAA,GAAmBA,gBAAA;IACvBwG,GAAA,CAAIvG,qBAAA,GAAwBA,qBAAA;IAC5BuG,GAAA,CAAItG,iBAAA,GAAoBrC,MAAA,CAAOyC,cAAA;IAC/BkG,GAAA,CAAIrG,cAAA,GAAiBA,cAAA;IACrBqG,GAAA,CAAI/G,gBAAA,GAAmB,OAAO;MAC1BsG,aAAA;MACAD,oBAAA;MACAyH,UAAA;MACAhL,SAAA;MACAC,KAAA;MACAH,MAAA;MACArB,QAAA;MACAC,SAAA;MACAC,kBAAA;MACAN,sBAAA;MACAC;IACJ;EACJ,CAAC;AACL;AAEA,SAASuX,YAAYjX,OAAM;EACvBoQ,YAAA,CAAapQ,KAAI;EACjB8V,aAAA,CAAc9V,KAAI;EAClB8W,SAAA,CAAU9W,KAAI;AAClB;AAEA,IAAMkX,MAAA,GAASjY,QAAA,CAAS;AACxBgY,WAAA,CAAYC,MAAM;AAClB3J,YAAA,CAAa2J,MAAM;;;CCtzFDtkB,UAAA,CAAWukB,SAAA,KAAc,CAAC,GAAGC,MAAA,UAAS","names":["global","ng","common","locales","u","plural","val","n","i","Math","floor","abs","v","toString","replace","length","e","parseInt","globalThis","__symbol__","name","symbolPrefix","initZone","performance","mark","performanceMeasure","label","_ZoneImpl","assertZonePatched","patches","Error","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","checkDuplicate","perfName","_api","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","ZoneImpl","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","loadZone","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","Zone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","window","internalWindow","_global","REMOVE_ATTRIBUTE","patchPrototype","fnNames","prototypeDesc","isPropertyWritable","patched","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","originalDelegate","once","globalCallback","context","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","buildEventListenerOptions","passive","capture","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","splice","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","signal","aborted","constructorName","targetSource","onAbort","removeAbortListener","unshift","onPropertySymbol","findEventTasks","keys","match","exec","evtName","symbolCaptureEventName","captureTasks","removeTasks","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","patchQueueMicrotask","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","timer","handle","ref","unref","bind","id","patchCustomElements","callbacks","customElements","eventTargetPatch","eventNames","EVENT_TARGET","patchEvent","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","patchBrowser","legacyPatch","clear","blockingMethods","s","XMLHttpRequestEventTarget","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequest","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","readyState","DONE","loadTasks","status","oriInvoke","storedTask","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","url","geolocation","findPromiseRejectionHandler","eventTasks","forEach","PromiseRejectionEvent","evt","promise","reason","rejection","patchPromise","readableObjectToString","JSON","stringify","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","resolvePromise","wasCalled","wrapper","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","AggregateError","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","P","thenCallback","errorCallback","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","targetName","method","nativeDelegate","opts","descriptor","patchUtil","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchCommon","Zone$1","$localize","locale"],"ignoreList":[0,1],"sources":["node_modules/@angular/common/locales/global/es.js","node_modules/zone.js/fesm2015/zone.js","angular:polyfills:angular:polyfills"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY.\n  (function(global) {\n    global.ng ??= {};\n    global.ng.common ??= {};\n    global.ng.common.locales ??= {};\n    const u = undefined;\n    function plural(val) {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length, e = parseInt(val.toString().replace(/^[^e]*(e([-+]?\\d+))?/, '$2')) || 0;\n\nif (n === 1)\n    return 1;\nif (e === 0 && (!(i === 0) && (i % 1000000 === 0 && v === 0)) || !(e >= 0 && e <= 5))\n    return 4;\nreturn 5;\n}\n    global.ng.common.locales['es'] = [\"es\",[[\"a. m.\",\"p. m.\"],u,u],u,[[\"D\",\"L\",\"M\",\"X\",\"J\",\"V\",\"S\"],[\"dom\",\"lun\",\"mar\",\"mié\",\"jue\",\"vie\",\"sáb\"],[\"domingo\",\"lunes\",\"martes\",\"miércoles\",\"jueves\",\"viernes\",\"sábado\"],[\"DO\",\"LU\",\"MA\",\"MI\",\"JU\",\"VI\",\"SA\"]],u,[[\"E\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"ene\",\"feb\",\"mar\",\"abr\",\"may\",\"jun\",\"jul\",\"ago\",\"sept\",\"oct\",\"nov\",\"dic\"],[\"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\"]],u,[[\"a. C.\",\"d. C.\"],u,[\"antes de Cristo\",\"después de Cristo\"]],1,[6,0],[\"d/M/yy\",\"d MMM y\",\"d 'de' MMMM 'de' y\",\"EEEE, d 'de' MMMM 'de' y\"],[\"H:mm\",\"H:mm:ss\",\"H:mm:ss z\",\"H:mm:ss (zzzz)\"],[\"{1}, {0}\",u,u,u],[\",\",\".\",\";\",\"%\",\"+\",\"-\",\"E\",\"×\",\"‰\",\"∞\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0 %\",\"#,##0.00 ¤\",\"#E0\"],\"EUR\",\"€\",\"euro\",{\"AUD\":[u,\"$\"],\"BRL\":[u,\"R$\"],\"BYN\":[u,\"р.\"],\"CAD\":[u,\"$\"],\"CNY\":[u,\"¥\"],\"EGP\":[],\"ESP\":[\"₧\"],\"GBP\":[u,\"£\"],\"HKD\":[u,\"$\"],\"ILS\":[u,\"₪\"],\"INR\":[u,\"₹\"],\"JPY\":[u,\"¥\"],\"KRW\":[u,\"₩\"],\"MXN\":[u,\"$\"],\"NZD\":[u,\"$\"],\"PHP\":[u,\"₱\"],\"RON\":[u,\"L\"],\"THB\":[\"฿\"],\"TWD\":[u,\"NT$\"],\"USD\":[\"US$\",\"$\"],\"XAF\":[],\"XCD\":[u,\"$\"],\"XOF\":[]},\"ltr\", plural, [[[\"del mediodía\",\"de la madrugada\",\"de la mañana\",\"de la tarde\",\"de la noche\"],u,u],[[\"mediodía\",\"madrugada\",\"mañana\",\"tarde\",\"noche\"],u,u],[\"12:00\",[\"00:00\",\"06:00\"],[\"06:00\",\"12:00\"],[\"12:00\",\"20:00\"],[\"20:00\",\"24:00\"]]]];\n  })(globalThis);\n    ","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    if (data) {\n                        data.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                    }\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // Note that `removeAllListeners` would ultimately call `removeEventListener`,\n                        // so we're safe to remove the abort listener only once here.\n                        const taskData = existingTask.data;\n                        if (taskData?.removeAbortListener) {\n                            taskData.removeAbortListener();\n                            taskData.removeAbortListener = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (typeof args[0] === 'function') {\n            const options = {\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    if (!options.isPeriodic) {\n                        if (typeof options.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[options.handleId];\n                        }\n                        else if (options.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            options.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const handle = task.data.handleId;\n            if (typeof handle === 'number') {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handle] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n            }\n            // check whether handle is null, because some polyfill or browser\n            // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n            if (handle &&\n                handle.ref &&\n                handle.unref &&\n                typeof handle.ref === 'function' &&\n                typeof handle.unref === 'function') {\n                task.ref = handle.ref.bind(handle);\n                task.unref = handle.unref.bind(handle);\n            }\n            if (typeof handle === 'number' || handle) {\n                return handle;\n            }\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (typeof id === 'number') {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n        }\n        else {\n            // nodejs env.\n            task = id && id[taskSymbol];\n            // other environments.\n            if (!task) {\n                task = id;\n            }\n        }\n        if (task && typeof task.type === 'string') {\n            if (task.state !== 'notScheduled' &&\n                ((task.cancelFn && task.data.isPeriodic) || task.runCount === 0)) {\n                if (typeof id === 'number') {\n                    delete tasksByHandleId[id];\n                }\n                else if (id) {\n                    id[taskSymbol] = null;\n                }\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","import 'angular:locale/data:es';\nimport 'angular:locale/data:en-US';\nimport 'zone.js';(globalThis.$localize ??= {}).locale = \"___NG_LOCALE_INSERT___\";\n"]}