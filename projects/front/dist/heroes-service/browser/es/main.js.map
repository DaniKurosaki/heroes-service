{"version":3,"mappings":";;;;AAyBA,IAAMA,WAAA,GAAN,MAAkB,EAAC;AAWnB,IAAMC,WAAA,GAAN,MAAkB,EAAC;AASnB,IAAMC,WAAA,GAAN,MAAMC,YAAA,CAAY;EAAA;EAEhBC,YAAYC,OAAA,EAAS;IAKnB,KAAKC,eAAA,GAAkB,mBAAIC,GAAA,CAAI;IAI/B,KAAKC,UAAA,GAAa;IAClB,IAAI,CAACH,OAAA,EAAS;MACZ,KAAKA,OAAA,GAAU,mBAAIE,GAAA,CAAI;IACzB,WAAW,OAAOF,OAAA,KAAY,UAAU;MACtC,KAAKI,QAAA,GAAW,MAAM;QACpB,KAAKJ,OAAA,GAAU,mBAAIE,GAAA,CAAI;QACvBF,OAAA,CAAQK,KAAA,CAAM,IAAI,EAAEC,OAAA,CAAQC,IAAA,IAAQ;UAClC,MAAMC,KAAA,GAAQD,IAAA,CAAKE,OAAA,CAAQ,GAAG;UAC9B,IAAID,KAAA,GAAQ,GAAG;YACb,MAAME,IAAA,GAAOH,IAAA,CAAKI,KAAA,CAAM,GAAGH,KAAK;YAChC,MAAMI,GAAA,GAAMF,IAAA,CAAKG,WAAA,CAAY;YAC7B,MAAMC,KAAA,GAAQP,IAAA,CAAKI,KAAA,CAAMH,KAAA,GAAQ,CAAC,EAAEO,IAAA,CAAK;YACzC,KAAKC,sBAAA,CAAuBN,IAAA,EAAME,GAAG;YACrC,IAAI,KAAKZ,OAAA,CAAQiB,GAAA,CAAIL,GAAG,GAAG;cACzB,KAAKZ,OAAA,CAAQkB,GAAA,CAAIN,GAAG,EAAEO,IAAA,CAAKL,KAAK;YAClC,OAAO;cACL,KAAKd,OAAA,CAAQoB,GAAA,CAAIR,GAAA,EAAK,CAACE,KAAK,CAAC;YAC/B;UACF;QACF,CAAC;MACH;IACF,WAAW,OAAOO,OAAA,KAAY,eAAerB,OAAA,YAAmBqB,OAAA,EAAS;MACvE,KAAKrB,OAAA,GAAU,mBAAIE,GAAA,CAAI;MACvBF,OAAA,CAAQM,OAAA,CAAQ,CAACgB,MAAA,EAAQZ,IAAA,KAAS;QAChC,KAAKa,gBAAA,CAAiBb,IAAA,EAAMY,MAAM;MACpC,CAAC;IACH,OAAO;MACL,KAAKlB,QAAA,GAAW,MAAM;QACpB,IAAI,OAAOoB,SAAA,KAAc,eAAeA,SAAA,EAAW;UACjDC,kBAAA,CAAmBzB,OAAO;QAC5B;QACA,KAAKA,OAAA,GAAU,mBAAIE,GAAA,CAAI;QACvBwB,MAAA,CAAOC,OAAA,CAAQ3B,OAAO,EAAEM,OAAA,CAAQ,CAAC,CAACI,IAAA,EAAMY,MAAM,MAAM;UAClD,KAAKC,gBAAA,CAAiBb,IAAA,EAAMY,MAAM;QACpC,CAAC;MACH;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAL,IAAIP,IAAA,EAAM;IACR,KAAKkB,IAAA,CAAK;IACV,OAAO,KAAK5B,OAAA,CAAQiB,GAAA,CAAIP,IAAA,CAAKG,WAAA,CAAY,CAAC;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAK,IAAIR,IAAA,EAAM;IACR,KAAKkB,IAAA,CAAK;IACV,MAAMN,MAAA,GAAS,KAAKtB,OAAA,CAAQkB,GAAA,CAAIR,IAAA,CAAKG,WAAA,CAAY,CAAC;IAClD,OAAOS,MAAA,IAAUA,MAAA,CAAOO,MAAA,GAAS,IAAIP,MAAA,CAAO,CAAC,IAAI;EACnD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAQ,KAAA,EAAO;IACL,KAAKF,IAAA,CAAK;IACV,OAAOG,KAAA,CAAMC,IAAA,CAAK,KAAK/B,eAAA,CAAgBqB,MAAA,CAAO,CAAC;EACjD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAW,OAAOvB,IAAA,EAAM;IACX,KAAKkB,IAAA,CAAK;IACV,OAAO,KAAK5B,OAAA,CAAQkB,GAAA,CAAIR,IAAA,CAAKG,WAAA,CAAY,CAAC,KAAK;EACjD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUAqB,OAAOxB,IAAA,EAAMI,KAAA,EAAO;IAClB,OAAO,KAAKqB,KAAA,CAAM;MAChBzB,IAAA;MACAI,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAhB,IAAIV,IAAA,EAAMI,KAAA,EAAO;IACf,OAAO,KAAKqB,KAAA,CAAM;MAChBzB,IAAA;MACAI,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAC,OAAO3B,IAAA,EAAMI,KAAA,EAAO;IAClB,OAAO,KAAKqB,KAAA,CAAM;MAChBzB,IAAA;MACAI,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EACApB,uBAAuBN,IAAA,EAAM4B,MAAA,EAAQ;IACnC,IAAI,CAAC,KAAKrC,eAAA,CAAgBgB,GAAA,CAAIqB,MAAM,GAAG;MACrC,KAAKrC,eAAA,CAAgBmB,GAAA,CAAIkB,MAAA,EAAQ5B,IAAI;IACvC;EACF;EACAkB,KAAA,EAAO;IACL,IAAI,CAAC,CAAC,KAAKxB,QAAA,EAAU;MACnB,IAAI,KAAKA,QAAA,YAAoBN,YAAA,EAAa;QACxC,KAAKyC,QAAA,CAAS,KAAKnC,QAAQ;MAC7B,OAAO;QACL,KAAKA,QAAA,CAAS;MAChB;MACA,KAAKA,QAAA,GAAW;MAChB,IAAI,CAAC,CAAC,KAAKD,UAAA,EAAY;QACrB,KAAKA,UAAA,CAAWG,OAAA,CAAQkC,MAAA,IAAU,KAAKC,WAAA,CAAYD,MAAM,CAAC;QAC1D,KAAKrC,UAAA,GAAa;MACpB;IACF;EACF;EACAoC,SAASG,KAAA,EAAO;IACdA,KAAA,CAAMd,IAAA,CAAK;IACXG,KAAA,CAAMC,IAAA,CAAKU,KAAA,CAAM1C,OAAA,CAAQ8B,IAAA,CAAK,CAAC,EAAExB,OAAA,CAAQM,GAAA,IAAO;MAC9C,KAAKZ,OAAA,CAAQoB,GAAA,CAAIR,GAAA,EAAK8B,KAAA,CAAM1C,OAAA,CAAQkB,GAAA,CAAIN,GAAG,CAAC;MAC5C,KAAKX,eAAA,CAAgBmB,GAAA,CAAIR,GAAA,EAAK8B,KAAA,CAAMzC,eAAA,CAAgBiB,GAAA,CAAIN,GAAG,CAAC;IAC9D,CAAC;EACH;EACAuB,MAAMK,MAAA,EAAQ;IACZ,MAAML,KAAA,GAAQ,IAAIrC,YAAA,CAAY;IAC9BqC,KAAA,CAAM/B,QAAA,GAAW,CAAC,CAAC,KAAKA,QAAA,IAAY,KAAKA,QAAA,YAAoBN,YAAA,GAAc,KAAKM,QAAA,GAAW;IAC3F+B,KAAA,CAAMhC,UAAA,IAAc,KAAKA,UAAA,IAAc,EAAC,EAAGwC,MAAA,CAAO,CAACH,MAAM,CAAC;IAC1D,OAAOL,KAAA;EACT;EACAM,YAAYD,MAAA,EAAQ;IAClB,MAAM5B,GAAA,GAAM4B,MAAA,CAAO9B,IAAA,CAAKG,WAAA,CAAY;IACpC,QAAQ2B,MAAA,CAAOJ,EAAA;MACb,KAAK;MACL,KAAK;QACH,IAAItB,KAAA,GAAQ0B,MAAA,CAAO1B,KAAA;QACnB,IAAI,OAAOA,KAAA,KAAU,UAAU;UAC7BA,KAAA,GAAQ,CAACA,KAAK;QAChB;QACA,IAAIA,KAAA,CAAMe,MAAA,KAAW,GAAG;UACtB;QACF;QACA,KAAKb,sBAAA,CAAuBwB,MAAA,CAAO9B,IAAA,EAAME,GAAG;QAC5C,MAAMgC,IAAA,IAAQJ,MAAA,CAAOJ,EAAA,KAAO,MAAM,KAAKpC,OAAA,CAAQkB,GAAA,CAAIN,GAAG,IAAI,WAAc,EAAC;QACzEgC,IAAA,CAAKzB,IAAA,CAAK,GAAGL,KAAK;QAClB,KAAKd,OAAA,CAAQoB,GAAA,CAAIR,GAAA,EAAKgC,IAAI;QAC1B;MACF,KAAK;QACH,MAAMC,QAAA,GAAWL,MAAA,CAAO1B,KAAA;QACxB,IAAI,CAAC+B,QAAA,EAAU;UACb,KAAK7C,OAAA,CAAQqC,MAAA,CAAOzB,GAAG;UACvB,KAAKX,eAAA,CAAgBoC,MAAA,CAAOzB,GAAG;QACjC,OAAO;UACL,IAAIkC,QAAA,GAAW,KAAK9C,OAAA,CAAQkB,GAAA,CAAIN,GAAG;UACnC,IAAI,CAACkC,QAAA,EAAU;YACb;UACF;UACAA,QAAA,GAAWA,QAAA,CAASC,MAAA,CAAOjC,UAAS+B,QAAA,CAASpC,OAAA,CAAQK,MAAK,MAAM,EAAE;UAClE,IAAIgC,QAAA,CAASjB,MAAA,KAAW,GAAG;YACzB,KAAK7B,OAAA,CAAQqC,MAAA,CAAOzB,GAAG;YACvB,KAAKX,eAAA,CAAgBoC,MAAA,CAAOzB,GAAG;UACjC,OAAO;YACL,KAAKZ,OAAA,CAAQoB,GAAA,CAAIR,GAAA,EAAKkC,QAAQ;UAChC;QACF;QACA;IACJ;EACF;EACAvB,iBAAiBb,IAAA,EAAMY,MAAA,EAAQ;IAC7B,MAAM0B,YAAA,IAAgBjB,KAAA,CAAMkB,OAAA,CAAQ3B,MAAM,IAAIA,MAAA,GAAS,CAACA,MAAM,GAAG4B,GAAA,CAAIpC,KAAA,IAASA,KAAA,CAAMqC,QAAA,CAAS,CAAC;IAC9F,MAAMvC,GAAA,GAAMF,IAAA,CAAKG,WAAA,CAAY;IAC7B,KAAKb,OAAA,CAAQoB,GAAA,CAAIR,GAAA,EAAKoC,YAAY;IAClC,KAAKhC,sBAAA,CAAuBN,IAAA,EAAME,GAAG;EACvC;EAAA;AAAA;AAAA;EAIAN,QAAQ8C,EAAA,EAAI;IACV,KAAKxB,IAAA,CAAK;IACVG,KAAA,CAAMC,IAAA,CAAK,KAAK/B,eAAA,CAAgB6B,IAAA,CAAK,CAAC,EAAExB,OAAA,CAAQM,GAAA,IAAOwC,EAAA,CAAG,KAAKnD,eAAA,CAAgBiB,GAAA,CAAIN,GAAG,GAAG,KAAKZ,OAAA,CAAQkB,GAAA,CAAIN,GAAG,CAAC,CAAC;EACjH;AACF;AAMA,SAASa,mBAAmBzB,OAAA,EAAS;EACnC,WAAW,CAACY,GAAA,EAAKE,KAAK,KAAKY,MAAA,CAAOC,OAAA,CAAQ3B,OAAO,GAAG;IAClD,IAAI,EAAE,OAAOc,KAAA,KAAU,YAAY,OAAOA,KAAA,KAAU,aAAa,CAACiB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,GAAG;MACtF,MAAM,IAAIuC,KAAA,CAAM,6BAA6BzC,GAAG,mFAAwFE,KAAK,KAAK;IACpJ;EACF;AACF;AAYA,IAAMwC,oBAAA,GAAN,MAA2B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMzBC,UAAU3C,GAAA,EAAK;IACb,OAAO4C,gBAAA,CAAiB5C,GAAG;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6C,YAAY3C,KAAA,EAAO;IACjB,OAAO0C,gBAAA,CAAiB1C,KAAK;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA4C,UAAU9C,GAAA,EAAK;IACb,OAAO+C,kBAAA,CAAmB/C,GAAG;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAgD,YAAY9C,KAAA,EAAO;IACjB,OAAO6C,kBAAA,CAAmB7C,KAAK;EACjC;AACF;AACA,SAAS+C,YAAYC,SAAA,EAAWC,KAAA,EAAO;EACrC,MAAMb,OAAM,mBAAIhD,GAAA,CAAI;EACpB,IAAI4D,SAAA,CAAUjC,MAAA,GAAS,GAAG;IAIxB,MAAMmC,MAAA,GAASF,SAAA,CAAUG,OAAA,CAAQ,OAAO,EAAE,EAAE5D,KAAA,CAAM,GAAG;IACrD2D,MAAA,CAAO1D,OAAA,CAAQ4D,KAAA,IAAS;MACtB,MAAMC,KAAA,GAAQD,KAAA,CAAMzD,OAAA,CAAQ,GAAG;MAC/B,MAAM,CAACG,GAAA,EAAKwD,GAAG,IAAID,KAAA,IAAS,KAAK,CAACJ,KAAA,CAAML,SAAA,CAAUQ,KAAK,GAAG,EAAE,IAAI,CAACH,KAAA,CAAML,SAAA,CAAUQ,KAAA,CAAMvD,KAAA,CAAM,GAAGwD,KAAK,CAAC,GAAGJ,KAAA,CAAMH,WAAA,CAAYM,KAAA,CAAMvD,KAAA,CAAMwD,KAAA,GAAQ,CAAC,CAAC,CAAC;MAClJ,MAAME,IAAA,GAAOnB,KAAIhC,GAAA,CAAIN,GAAG,KAAK,EAAC;MAC9ByD,IAAA,CAAKlD,IAAA,CAAKiD,GAAG;MACblB,KAAI9B,GAAA,CAAIR,GAAA,EAAKyD,IAAI;IACnB,CAAC;EACH;EACA,OAAOnB;AACT;AAIA,IAAMoB,uBAAA,GAA0B;AAChC,IAAMC,8BAAA,GAAiC;EACrC,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;AACR;AACA,SAASf,iBAAiBgB,CAAA,EAAG;EAC3B,OAAOC,kBAAA,CAAmBD,CAAC,EAAEP,OAAA,CAAQK,uBAAA,EAAyB,CAACI,CAAA,EAAGC,CAAA,KAAMJ,8BAAA,CAA+BI,CAAC,KAAKD,CAAC;AAChH;AACA,SAASE,cAAc9D,KAAA,EAAO;EAC5B,OAAO,GAAGA,KAAK;AACjB;AASA,IAAM+D,UAAA,GAAN,MAAMC,WAAA,CAAW;EACf/E,YAAYgF,OAAA,GAAU,CAAC,GAAG;IACxB,KAAKC,OAAA,GAAU;IACf,KAAKC,SAAA,GAAY;IACjB,KAAKC,OAAA,GAAUH,OAAA,CAAQG,OAAA,IAAW,IAAI5B,oBAAA,CAAqB;IAC3D,IAAI,CAAC,CAACyB,OAAA,CAAQI,UAAA,EAAY;MACxB,IAAI,CAAC,CAACJ,OAAA,CAAQK,UAAA,EAAY;QACxB,MAAM,IAAI/B,KAAA,CAAM,gDAAgD;MAClE;MACA,KAAKH,GAAA,GAAMW,WAAA,CAAYkB,OAAA,CAAQI,UAAA,EAAY,KAAKD,OAAO;IACzD,WAAW,CAAC,CAACH,OAAA,CAAQK,UAAA,EAAY;MAC/B,KAAKlC,GAAA,GAAM,mBAAIhD,GAAA,CAAI;MACnBwB,MAAA,CAAOI,IAAA,CAAKiD,OAAA,CAAQK,UAAU,EAAE9E,OAAA,CAAQM,GAAA,IAAO;QAC7C,MAAME,KAAA,GAAQiE,OAAA,CAAQK,UAAA,CAAWxE,GAAG;QAEpC,MAAMU,MAAA,GAASS,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,IAAIA,KAAA,CAAMoC,GAAA,CAAI0B,aAAa,IAAI,CAACA,aAAA,CAAc9D,KAAK,CAAC;QACtF,KAAKoC,GAAA,CAAI9B,GAAA,CAAIR,GAAA,EAAKU,MAAM;MAC1B,CAAC;IACH,OAAO;MACL,KAAK4B,GAAA,GAAM;IACb;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAjC,IAAIiD,KAAA,EAAO;IACT,KAAKtC,IAAA,CAAK;IACV,OAAO,KAAKsB,GAAA,CAAIjC,GAAA,CAAIiD,KAAK;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAhD,IAAIgD,KAAA,EAAO;IACT,KAAKtC,IAAA,CAAK;IACV,MAAMyD,GAAA,GAAM,KAAKnC,GAAA,CAAIhC,GAAA,CAAIgD,KAAK;IAC9B,OAAO,CAAC,CAACmB,GAAA,GAAMA,GAAA,CAAI,CAAC,IAAI;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOApD,OAAOiC,KAAA,EAAO;IACZ,KAAKtC,IAAA,CAAK;IACV,OAAO,KAAKsB,GAAA,CAAIhC,GAAA,CAAIgD,KAAK,KAAK;EAChC;EAAA;AAAA;AAAA;AAAA;EAKApC,KAAA,EAAO;IACL,KAAKF,IAAA,CAAK;IACV,OAAOG,KAAA,CAAMC,IAAA,CAAK,KAAKkB,GAAA,CAAIpB,IAAA,CAAK,CAAC;EACnC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAI,OAAOgC,KAAA,EAAOpD,KAAA,EAAO;IACnB,OAAO,KAAKqB,KAAA,CAAM;MAChB+B,KAAA;MACApD,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAkD,UAAUtB,MAAA,EAAQ;IAChB,MAAMgB,OAAA,GAAU,EAAC;IACjBtD,MAAA,CAAOI,IAAA,CAAKkC,MAAM,EAAE1D,OAAA,CAAQ4D,KAAA,IAAS;MACnC,MAAMpD,KAAA,GAAQkD,MAAA,CAAOE,KAAK;MAC1B,IAAInC,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,GAAG;QACxBA,KAAA,CAAMR,OAAA,CAAQiF,MAAA,IAAU;UACtBP,OAAA,CAAQ7D,IAAA,CAAK;YACX+C,KAAA;YACApD,KAAA,EAAOyE,MAAA;YACPnD,EAAA,EAAI;UACN,CAAC;QACH,CAAC;MACH,OAAO;QACL4C,OAAA,CAAQ7D,IAAA,CAAK;UACX+C,KAAA;UACApD,KAAA;UACAsB,EAAA,EAAI;QACN,CAAC;MACH;IACF,CAAC;IACD,OAAO,KAAKD,KAAA,CAAM6C,OAAO;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA5D,IAAI8C,KAAA,EAAOpD,KAAA,EAAO;IAChB,OAAO,KAAKqB,KAAA,CAAM;MAChB+B,KAAA;MACApD,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAC,OAAO6B,KAAA,EAAOpD,KAAA,EAAO;IACnB,OAAO,KAAKqB,KAAA,CAAM;MAChB+B,KAAA;MACApD,KAAA;MACAsB,EAAA,EAAI;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAe,SAAA,EAAW;IACT,KAAKvB,IAAA,CAAK;IACV,OAAO,KAAKE,IAAA,CAAK,EAAEoB,GAAA,CAAItC,GAAA,IAAO;MAC5B,MAAM4E,IAAA,GAAO,KAAKN,OAAA,CAAQ3B,SAAA,CAAU3C,GAAG;MAIvC,OAAO,KAAKsC,GAAA,CAAIhC,GAAA,CAAIN,GAAG,EAAEsC,GAAA,CAAIpC,KAAA,IAAS0E,IAAA,GAAO,MAAM,KAAKN,OAAA,CAAQzB,WAAA,CAAY3C,KAAK,CAAC,EAAE2E,IAAA,CAAK,GAAG;IAC9F,CAAC,EAGA1C,MAAA,CAAOmB,KAAA,IAASA,KAAA,KAAU,EAAE,EAAEuB,IAAA,CAAK,GAAG;EACzC;EACAtD,MAAMK,MAAA,EAAQ;IACZ,MAAML,KAAA,GAAQ,IAAI2C,WAAA,CAAW;MAC3BI,OAAA,EAAS,KAAKA;IAChB,CAAC;IACD/C,KAAA,CAAM8C,SAAA,GAAY,KAAKA,SAAA,IAAa;IACpC9C,KAAA,CAAM6C,OAAA,IAAW,KAAKA,OAAA,IAAW,EAAC,EAAGrC,MAAA,CAAOH,MAAM;IAClD,OAAOL,KAAA;EACT;EACAP,KAAA,EAAO;IACL,IAAI,KAAKsB,GAAA,KAAQ,MAAM;MACrB,KAAKA,GAAA,GAAM,mBAAIhD,GAAA,CAAI;IACrB;IACA,IAAI,KAAK+E,SAAA,KAAc,MAAM;MAC3B,KAAKA,SAAA,CAAUrD,IAAA,CAAK;MACpB,KAAKqD,SAAA,CAAUnD,IAAA,CAAK,EAAExB,OAAA,CAAQM,GAAA,IAAO,KAAKsC,GAAA,CAAI9B,GAAA,CAAIR,GAAA,EAAK,KAAKqE,SAAA,CAAU/B,GAAA,CAAIhC,GAAA,CAAIN,GAAG,CAAC,CAAC;MACnF,KAAKoE,OAAA,CAAQ1E,OAAA,CAAQkC,MAAA,IAAU;QAC7B,QAAQA,MAAA,CAAOJ,EAAA;UACb,KAAK;UACL,KAAK;YACH,MAAMQ,IAAA,IAAQJ,MAAA,CAAOJ,EAAA,KAAO,MAAM,KAAKc,GAAA,CAAIhC,GAAA,CAAIsB,MAAA,CAAO0B,KAAK,IAAI,WAAc,EAAC;YAC9EtB,IAAA,CAAKzB,IAAA,CAAKyD,aAAA,CAAcpC,MAAA,CAAO1B,KAAK,CAAC;YACrC,KAAKoC,GAAA,CAAI9B,GAAA,CAAIoB,MAAA,CAAO0B,KAAA,EAAOtB,IAAI;YAC/B;UACF,KAAK;YACH,IAAIJ,MAAA,CAAO1B,KAAA,KAAU,QAAW;cAC9B,IAAI8B,QAAO,KAAKM,GAAA,CAAIhC,GAAA,CAAIsB,MAAA,CAAO0B,KAAK,KAAK,EAAC;cAC1C,MAAMwB,GAAA,GAAM9C,MAAKnC,OAAA,CAAQmE,aAAA,CAAcpC,MAAA,CAAO1B,KAAK,CAAC;cACpD,IAAI4E,GAAA,KAAQ,IAAI;gBACd9C,MAAK+C,MAAA,CAAOD,GAAA,EAAK,CAAC;cACpB;cACA,IAAI9C,MAAKf,MAAA,GAAS,GAAG;gBACnB,KAAKqB,GAAA,CAAI9B,GAAA,CAAIoB,MAAA,CAAO0B,KAAA,EAAOtB,KAAI;cACjC,OAAO;gBACL,KAAKM,GAAA,CAAIb,MAAA,CAAOG,MAAA,CAAO0B,KAAK;cAC9B;YACF,OAAO;cACL,KAAKhB,GAAA,CAAIb,MAAA,CAAOG,MAAA,CAAO0B,KAAK;cAC5B;YACF;QACJ;MACF,CAAC;MACD,KAAKe,SAAA,GAAY,KAAKD,OAAA,GAAU;IAClC;EACF;AACF;AA6CA,IAAMY,WAAA,GAAN,MAAkB;EAChB7F,YAAA,EAAc;IACZ,KAAKmD,GAAA,GAAM,mBAAIhD,GAAA,CAAI;EACrB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAkB,IAAIyE,KAAA,EAAO/E,KAAA,EAAO;IAChB,KAAKoC,GAAA,CAAI9B,GAAA,CAAIyE,KAAA,EAAO/E,KAAK;IACzB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAI,IAAI2E,KAAA,EAAO;IACT,IAAI,CAAC,KAAK3C,GAAA,CAAIjC,GAAA,CAAI4E,KAAK,GAAG;MACxB,KAAK3C,GAAA,CAAI9B,GAAA,CAAIyE,KAAA,EAAOA,KAAA,CAAMC,YAAA,CAAa,CAAC;IAC1C;IACA,OAAO,KAAK5C,GAAA,CAAIhC,GAAA,CAAI2E,KAAK;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAxD,OAAOwD,KAAA,EAAO;IACZ,KAAK3C,GAAA,CAAIb,MAAA,CAAOwD,KAAK;IACrB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA5E,IAAI4E,KAAA,EAAO;IACT,OAAO,KAAK3C,GAAA,CAAIjC,GAAA,CAAI4E,KAAK;EAC3B;EAAA;AAAA;AAAA;EAIA/D,KAAA,EAAO;IACL,OAAO,KAAKoB,GAAA,CAAIpB,IAAA,CAAK;EACvB;AACF;AAKA,SAASiE,cAAcC,MAAA,EAAQ;EAC7B,QAAQA,MAAA;IACN,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO;IACT;MACE,OAAO;EACX;AACF;AAMA,SAASC,cAAcnF,KAAA,EAAO;EAC5B,OAAO,OAAOoF,WAAA,KAAgB,eAAepF,KAAA,YAAiBoF,WAAA;AAChE;AAMA,SAASC,OAAOrF,KAAA,EAAO;EACrB,OAAO,OAAOsF,IAAA,KAAS,eAAetF,KAAA,YAAiBsF,IAAA;AACzD;AAMA,SAASC,WAAWvF,KAAA,EAAO;EACzB,OAAO,OAAOwF,QAAA,KAAa,eAAexF,KAAA,YAAiBwF,QAAA;AAC7D;AAMA,SAASC,kBAAkBzF,KAAA,EAAO;EAChC,OAAO,OAAO0F,eAAA,KAAoB,eAAe1F,KAAA,YAAiB0F,eAAA;AACpE;AAWA,IAAMC,WAAA,GAAN,MAAMC,YAAA,CAAY;EAChB3G,YAAYiG,MAAA,EAAQW,GAAA,EAAKC,KAAA,EAAOC,MAAA,EAAQ;IACtC,KAAKF,GAAA,GAAMA,GAAA;IAQX,KAAKG,IAAA,GAAO;IASZ,KAAKC,cAAA,GAAiB;IAItB,KAAKC,eAAA,GAAkB;IAOvB,KAAKC,YAAA,GAAe;IACpB,KAAKjB,MAAA,GAASA,MAAA,CAAOkB,WAAA,CAAY;IAGjC,IAAInC,OAAA;IAGJ,IAAIgB,aAAA,CAAc,KAAKC,MAAM,KAAK,CAAC,CAACa,MAAA,EAAQ;MAE1C,KAAKC,IAAA,GAAOF,KAAA,KAAU,SAAYA,KAAA,GAAQ;MAC1C7B,OAAA,GAAU8B,MAAA;IACZ,OAAO;MAEL9B,OAAA,GAAU6B,KAAA;IACZ;IAEA,IAAI7B,OAAA,EAAS;MAEX,KAAKgC,cAAA,GAAiB,CAAC,CAAChC,OAAA,CAAQgC,cAAA;MAChC,KAAKC,eAAA,GAAkB,CAAC,CAACjC,OAAA,CAAQiC,eAAA;MAEjC,IAAI,CAAC,CAACjC,OAAA,CAAQkC,YAAA,EAAc;QAC1B,KAAKA,YAAA,GAAelC,OAAA,CAAQkC,YAAA;MAC9B;MAEA,IAAI,CAAC,CAAClC,OAAA,CAAQ/E,OAAA,EAAS;QACrB,KAAKA,OAAA,GAAU+E,OAAA,CAAQ/E,OAAA;MACzB;MACA,IAAI,CAAC,CAAC+E,OAAA,CAAQoC,OAAA,EAAS;QACrB,KAAKA,OAAA,GAAUpC,OAAA,CAAQoC,OAAA;MACzB;MACA,IAAI,CAAC,CAACpC,OAAA,CAAQf,MAAA,EAAQ;QACpB,KAAKA,MAAA,GAASe,OAAA,CAAQf,MAAA;MACxB;MAEA,KAAKoD,aAAA,GAAgBrC,OAAA,CAAQqC,aAAA;IAC/B;IAEA,KAAKpH,OAAA,KAAY,IAAIH,WAAA,CAAY;IAEjC,KAAKsH,OAAA,KAAY,IAAIvB,WAAA,CAAY;IAEjC,IAAI,CAAC,KAAK5B,MAAA,EAAQ;MAChB,KAAKA,MAAA,GAAS,IAAIa,UAAA,CAAW;MAC7B,KAAKwC,aAAA,GAAgBV,GAAA;IACvB,OAAO;MAEL,MAAM3C,MAAA,GAAS,KAAKA,MAAA,CAAOb,QAAA,CAAS;MACpC,IAAIa,MAAA,CAAOnC,MAAA,KAAW,GAAG;QAEvB,KAAKwF,aAAA,GAAgBV,GAAA;MACvB,OAAO;QAEL,MAAMW,IAAA,GAAOX,GAAA,CAAIlG,OAAA,CAAQ,GAAG;QAQ5B,MAAM8G,GAAA,GAAMD,IAAA,KAAS,KAAK,MAAMA,IAAA,GAAOX,GAAA,CAAI9E,MAAA,GAAS,IAAI,MAAM;QAC9D,KAAKwF,aAAA,GAAgBV,GAAA,GAAMY,GAAA,GAAMvD,MAAA;MACnC;IACF;EACF;EAAA;AAAA;AAAA;AAAA;EAKAwD,cAAA,EAAgB;IAEd,IAAI,KAAKV,IAAA,KAAS,MAAM;MACtB,OAAO;IACT;IAGA,IAAI,OAAO,KAAKA,IAAA,KAAS,YAAYb,aAAA,CAAc,KAAKa,IAAI,KAAKX,MAAA,CAAO,KAAKW,IAAI,KAAKT,UAAA,CAAW,KAAKS,IAAI,KAAKP,iBAAA,CAAkB,KAAKO,IAAI,GAAG;MAC3I,OAAO,KAAKA,IAAA;IACd;IAEA,IAAI,KAAKA,IAAA,YAAgBjC,UAAA,EAAY;MACnC,OAAO,KAAKiC,IAAA,CAAK3D,QAAA,CAAS;IAC5B;IAEA,IAAI,OAAO,KAAK2D,IAAA,KAAS,YAAY,OAAO,KAAKA,IAAA,KAAS,aAAa/E,KAAA,CAAMkB,OAAA,CAAQ,KAAK6D,IAAI,GAAG;MAC/F,OAAOW,IAAA,CAAKC,SAAA,CAAU,KAAKZ,IAAI;IACjC;IAEA,OAAO,KAAKA,IAAA,CAAK3D,QAAA,CAAS;EAC5B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAwE,wBAAA,EAA0B;IAExB,IAAI,KAAKb,IAAA,KAAS,MAAM;MACtB,OAAO;IACT;IAEA,IAAIT,UAAA,CAAW,KAAKS,IAAI,GAAG;MACzB,OAAO;IACT;IAGA,IAAIX,MAAA,CAAO,KAAKW,IAAI,GAAG;MACrB,OAAO,KAAKA,IAAA,CAAKc,IAAA,IAAQ;IAC3B;IAEA,IAAI3B,aAAA,CAAc,KAAKa,IAAI,GAAG;MAC5B,OAAO;IACT;IAGA,IAAI,OAAO,KAAKA,IAAA,KAAS,UAAU;MACjC,OAAO;IACT;IAEA,IAAI,KAAKA,IAAA,YAAgBjC,UAAA,EAAY;MACnC,OAAO;IACT;IAEA,IAAI,OAAO,KAAKiC,IAAA,KAAS,YAAY,OAAO,KAAKA,IAAA,KAAS,YAAY,OAAO,KAAKA,IAAA,KAAS,WAAW;MACpG,OAAO;IACT;IAEA,OAAO;EACT;EACA3E,MAAMK,MAAA,GAAS,CAAC,GAAG;IAGjB,MAAMwD,MAAA,GAASxD,MAAA,CAAOwD,MAAA,IAAU,KAAKA,MAAA;IACrC,MAAMW,GAAA,GAAMnE,MAAA,CAAOmE,GAAA,IAAO,KAAKA,GAAA;IAC/B,MAAMM,YAAA,GAAezE,MAAA,CAAOyE,YAAA,IAAgB,KAAKA,YAAA;IAGjD,MAAMG,aAAA,GAAgB5E,MAAA,CAAO4E,aAAA,IAAiB,KAAKA,aAAA;IAKnD,MAAMN,IAAA,GAAOtE,MAAA,CAAOsE,IAAA,KAAS,SAAYtE,MAAA,CAAOsE,IAAA,GAAO,KAAKA,IAAA;IAG5D,MAAME,eAAA,GAAkBxE,MAAA,CAAOwE,eAAA,IAAmB,KAAKA,eAAA;IACvD,MAAMD,cAAA,GAAiBvE,MAAA,CAAOuE,cAAA,IAAkB,KAAKA,cAAA;IAGrD,IAAI/G,OAAA,GAAUwC,MAAA,CAAOxC,OAAA,IAAW,KAAKA,OAAA;IACrC,IAAIgE,MAAA,GAASxB,MAAA,CAAOwB,MAAA,IAAU,KAAKA,MAAA;IAEnC,MAAMmD,OAAA,GAAU3E,MAAA,CAAO2E,OAAA,IAAW,KAAKA,OAAA;IAEvC,IAAI3E,MAAA,CAAOqF,UAAA,KAAe,QAAW;MAEnC7H,OAAA,GAAU0B,MAAA,CAAOI,IAAA,CAAKU,MAAA,CAAOqF,UAAU,EAAEC,MAAA,CAAO,CAAC9H,UAASU,IAAA,KAASV,SAAQoB,GAAA,CAAIV,IAAA,EAAM8B,MAAA,CAAOqF,UAAA,CAAWnH,IAAI,CAAC,GAAGV,OAAO;IACxH;IAEA,IAAIwC,MAAA,CAAOuF,SAAA,EAAW;MAEpB/D,MAAA,GAAStC,MAAA,CAAOI,IAAA,CAAKU,MAAA,CAAOuF,SAAS,EAAED,MAAA,CAAO,CAAC9D,SAAQE,KAAA,KAAUF,QAAO5C,GAAA,CAAI8C,KAAA,EAAO1B,MAAA,CAAOuF,SAAA,CAAU7D,KAAK,CAAC,GAAGF,MAAM;IACrH;IAEA,OAAO,IAAI0C,YAAA,CAAYV,MAAA,EAAQW,GAAA,EAAKG,IAAA,EAAM;MACxC9C,MAAA;MACAhE,OAAA;MACAmH,OAAA;MACAJ,cAAA;MACAE,YAAA;MACAD,eAAA;MACAI;IACF,CAAC;EACH;AACF;AAOA,IAAIY,aAAA;AAAA,CACH,UAAUA,gBAAe;EAIxBA,eAAcA,eAAc,MAAM,IAAI,CAAC,IAAI;EAM3CA,eAAcA,eAAc,gBAAgB,IAAI,CAAC,IAAI;EAIrDA,eAAcA,eAAc,gBAAgB,IAAI,CAAC,IAAI;EAIrDA,eAAcA,eAAc,kBAAkB,IAAI,CAAC,IAAI;EAIvDA,eAAcA,eAAc,UAAU,IAAI,CAAC,IAAI;EAI/CA,eAAcA,eAAc,MAAM,IAAI,CAAC,IAAI;AAC7C,GAAGA,aAAA,KAAkBA,aAAA,GAAgB,CAAC,EAAE;AAMxC,IAAMC,gBAAA,GAAN,MAAuB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOrBlI,YAAY6B,IAAA,EAAMsG,aAAA,GAAgBC,cAAA,CAAeC,EAAA,EAAIC,iBAAA,GAAoB,MAAM;IAG7E,KAAKrI,OAAA,GAAU4B,IAAA,CAAK5B,OAAA,IAAW,IAAIH,WAAA,CAAY;IAC/C,KAAKyI,MAAA,GAAS1G,IAAA,CAAK0G,MAAA,KAAW,SAAY1G,IAAA,CAAK0G,MAAA,GAASJ,aAAA;IACxD,KAAKK,UAAA,GAAa3G,IAAA,CAAK2G,UAAA,IAAcF,iBAAA;IACrC,KAAK1B,GAAA,GAAM/E,IAAA,CAAK+E,GAAA,IAAO;IAEvB,KAAK6B,EAAA,GAAK,KAAKF,MAAA,IAAU,OAAO,KAAKA,MAAA,GAAS;EAChD;AACF;AAUA,IAAMG,kBAAA,GAAN,MAAMC,mBAAA,SAA2BT,gBAAA,CAAiB;EAAA;AAAA;AAAA;EAIhDlI,YAAY6B,IAAA,GAAO,CAAC,GAAG;IACrB,MAAMA,IAAI;IACV,KAAKgG,IAAA,GAAOI,aAAA,CAAcW,cAAA;EAC5B;EAAA;AAAA;AAAA;AAAA;EAKAxG,MAAMK,MAAA,GAAS,CAAC,GAAG;IAGjB,OAAO,IAAIkG,mBAAA,CAAmB;MAC5B1I,OAAA,EAASwC,MAAA,CAAOxC,OAAA,IAAW,KAAKA,OAAA;MAChCsI,MAAA,EAAQ9F,MAAA,CAAO8F,MAAA,KAAW,SAAY9F,MAAA,CAAO8F,MAAA,GAAS,KAAKA,MAAA;MAC3DC,UAAA,EAAY/F,MAAA,CAAO+F,UAAA,IAAc,KAAKA,UAAA;MACtC5B,GAAA,EAAKnE,MAAA,CAAOmE,GAAA,IAAO,KAAKA,GAAA,IAAO;IACjC,CAAC;EACH;AACF;AAUA,IAAMiC,YAAA,GAAN,MAAMC,aAAA,SAAqBZ,gBAAA,CAAiB;EAAA;AAAA;AAAA;EAI1ClI,YAAY6B,IAAA,GAAO,CAAC,GAAG;IACrB,MAAMA,IAAI;IACV,KAAKgG,IAAA,GAAOI,aAAA,CAAcc,QAAA;IAC1B,KAAKhC,IAAA,GAAOlF,IAAA,CAAKkF,IAAA,KAAS,SAAYlF,IAAA,CAAKkF,IAAA,GAAO;EACpD;EACA3E,MAAMK,MAAA,GAAS,CAAC,GAAG;IACjB,OAAO,IAAIqG,aAAA,CAAa;MACtB/B,IAAA,EAAMtE,MAAA,CAAOsE,IAAA,KAAS,SAAYtE,MAAA,CAAOsE,IAAA,GAAO,KAAKA,IAAA;MACrD9G,OAAA,EAASwC,MAAA,CAAOxC,OAAA,IAAW,KAAKA,OAAA;MAChCsI,MAAA,EAAQ9F,MAAA,CAAO8F,MAAA,KAAW,SAAY9F,MAAA,CAAO8F,MAAA,GAAS,KAAKA,MAAA;MAC3DC,UAAA,EAAY/F,MAAA,CAAO+F,UAAA,IAAc,KAAKA,UAAA;MACtC5B,GAAA,EAAKnE,MAAA,CAAOmE,GAAA,IAAO,KAAKA,GAAA,IAAO;IACjC,CAAC;EACH;AACF;AAcA,IAAMoC,iBAAA,GAAN,cAAgCd,gBAAA,CAAiB;EAC/ClI,YAAY6B,IAAA,EAAM;IAEhB,MAAMA,IAAA,EAAM,GAAG,eAAe;IAC9B,KAAKlB,IAAA,GAAO;IAIZ,KAAK8H,EAAA,GAAK;IAIV,IAAI,KAAKF,MAAA,IAAU,OAAO,KAAKA,MAAA,GAAS,KAAK;MAC3C,KAAKU,OAAA,GAAU,mCAAmCpH,IAAA,CAAK+E,GAAA,IAAO,eAAe;IAC/E,OAAO;MACL,KAAKqC,OAAA,GAAU,6BAA6BpH,IAAA,CAAK+E,GAAA,IAAO,eAAe,KAAK/E,IAAA,CAAK0G,MAAM,IAAI1G,IAAA,CAAK2G,UAAU;IAC5G;IACA,KAAKU,KAAA,GAAQrH,IAAA,CAAKqH,KAAA,IAAS;EAC7B;AACF;AAMA,IAAId,cAAA;AAAA,CACH,UAAUA,iBAAgB;EACzBA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,oBAAoB,IAAI,GAAG,IAAI;EAC7DA,gBAAeA,gBAAe,YAAY,IAAI,GAAG,IAAI;EACrDA,gBAAeA,gBAAe,YAAY,IAAI,GAAG,IAAI;EACrDA,gBAAeA,gBAAe,IAAI,IAAI,GAAG,IAAI;EAC7CA,gBAAeA,gBAAe,SAAS,IAAI,GAAG,IAAI;EAClDA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,6BAA6B,IAAI,GAAG,IAAI;EACtEA,gBAAeA,gBAAe,WAAW,IAAI,GAAG,IAAI;EACpDA,gBAAeA,gBAAe,cAAc,IAAI,GAAG,IAAI;EACvDA,gBAAeA,gBAAe,gBAAgB,IAAI,GAAG,IAAI;EACzDA,gBAAeA,gBAAe,aAAa,IAAI,GAAG,IAAI;EACtDA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,QAAQ,IAAI,GAAG,IAAI;EACjDA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,kBAAkB,IAAI,GAAG,IAAI;EAC3DA,gBAAeA,gBAAe,OAAO,IAAI,GAAG,IAAI;EAChDA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,aAAa,IAAI,GAAG,IAAI;EACtDA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,QAAQ,IAAI,GAAG,IAAI;EACjDA,gBAAeA,gBAAe,mBAAmB,IAAI,GAAG,IAAI;EAC5DA,gBAAeA,gBAAe,mBAAmB,IAAI,GAAG,IAAI;EAC5DA,gBAAeA,gBAAe,YAAY,IAAI,GAAG,IAAI;EACrDA,gBAAeA,gBAAe,cAAc,IAAI,GAAG,IAAI;EACvDA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,WAAW,IAAI,GAAG,IAAI;EACpDA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,kBAAkB,IAAI,GAAG,IAAI;EAC3DA,gBAAeA,gBAAe,eAAe,IAAI,GAAG,IAAI;EACxDA,gBAAeA,gBAAe,6BAA6B,IAAI,GAAG,IAAI;EACtEA,gBAAeA,gBAAe,gBAAgB,IAAI,GAAG,IAAI;EACzDA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,MAAM,IAAI,GAAG,IAAI;EAC/CA,gBAAeA,gBAAe,gBAAgB,IAAI,GAAG,IAAI;EACzDA,gBAAeA,gBAAe,oBAAoB,IAAI,GAAG,IAAI;EAC7DA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,YAAY,IAAI,GAAG,IAAI;EACrDA,gBAAeA,gBAAe,sBAAsB,IAAI,GAAG,IAAI;EAC/DA,gBAAeA,gBAAe,qBAAqB,IAAI,GAAG,IAAI;EAC9DA,gBAAeA,gBAAe,mBAAmB,IAAI,GAAG,IAAI;EAC5DA,gBAAeA,gBAAe,WAAW,IAAI,GAAG,IAAI;EACpDA,gBAAeA,gBAAe,oBAAoB,IAAI,GAAG,IAAI;EAC7DA,gBAAeA,gBAAe,qBAAqB,IAAI,GAAG,IAAI;EAC9DA,gBAAeA,gBAAe,QAAQ,IAAI,GAAG,IAAI;EACjDA,gBAAeA,gBAAe,kBAAkB,IAAI,GAAG,IAAI;EAC3DA,gBAAeA,gBAAe,UAAU,IAAI,GAAG,IAAI;EACnDA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,sBAAsB,IAAI,GAAG,IAAI;EAC/DA,gBAAeA,gBAAe,iBAAiB,IAAI,GAAG,IAAI;EAC1DA,gBAAeA,gBAAe,6BAA6B,IAAI,GAAG,IAAI;EACtEA,gBAAeA,gBAAe,4BAA4B,IAAI,GAAG,IAAI;EACrEA,gBAAeA,gBAAe,qBAAqB,IAAI,GAAG,IAAI;EAC9DA,gBAAeA,gBAAe,gBAAgB,IAAI,GAAG,IAAI;EACzDA,gBAAeA,gBAAe,YAAY,IAAI,GAAG,IAAI;EACrDA,gBAAeA,gBAAe,oBAAoB,IAAI,GAAG,IAAI;EAC7DA,gBAAeA,gBAAe,gBAAgB,IAAI,GAAG,IAAI;EACzDA,gBAAeA,gBAAe,yBAAyB,IAAI,GAAG,IAAI;EAClEA,gBAAeA,gBAAe,uBAAuB,IAAI,GAAG,IAAI;EAChEA,gBAAeA,gBAAe,qBAAqB,IAAI,GAAG,IAAI;EAC9DA,gBAAeA,gBAAe,cAAc,IAAI,GAAG,IAAI;EACvDA,gBAAeA,gBAAe,aAAa,IAAI,GAAG,IAAI;EACtDA,gBAAeA,gBAAe,+BAA+B,IAAI,GAAG,IAAI;AAC1E,GAAGA,cAAA,KAAmBA,cAAA,GAAiB,CAAC,EAAE;AAY1C,SAASe,QAAQnE,OAAA,EAAS+B,IAAA,EAAM;EAC9B,OAAO;IACLA,IAAA;IACA9G,OAAA,EAAS+E,OAAA,CAAQ/E,OAAA;IACjBmH,OAAA,EAASpC,OAAA,CAAQoC,OAAA;IACjBgC,OAAA,EAASpE,OAAA,CAAQoE,OAAA;IACjBnF,MAAA,EAAQe,OAAA,CAAQf,MAAA;IAChB+C,cAAA,EAAgBhC,OAAA,CAAQgC,cAAA;IACxBE,YAAA,EAAclC,OAAA,CAAQkC,YAAA;IACtBD,eAAA,EAAiBjC,OAAA,CAAQiC,eAAA;IACzBI,aAAA,EAAerC,OAAA,CAAQqC;EACzB;AACF;AAwDA,IAAMgC,WAAA,GAAN,MAAMA,WAAA,CAAW;EACfrJ,YAAYsJ,OAAA,EAAS;IACnB,KAAKA,OAAA,GAAUA,OAAA;EACjB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA2BAC,QAAQC,QAAO5C,GAAA,EAAK5B,OAAA,GAAU,CAAC,GAAG;IAChC,IAAIyE,GAAA;IAEJ,IAAID,kBAAiB9C,WAAA,EAAa;MAGhC+C,GAAA,GAAMD;IACR,OAAO;MAKL,IAAIvJ,OAAA,GAAU;MACd,IAAI+E,OAAA,CAAQ/E,OAAA,YAAmBH,WAAA,EAAa;QAC1CG,OAAA,GAAU+E,OAAA,CAAQ/E,OAAA;MACpB,OAAO;QACLA,OAAA,GAAU,IAAIH,WAAA,CAAYkF,OAAA,CAAQ/E,OAAO;MAC3C;MAEA,IAAIgE,MAAA,GAAS;MACb,IAAI,CAAC,CAACe,OAAA,CAAQf,MAAA,EAAQ;QACpB,IAAIe,OAAA,CAAQf,MAAA,YAAkBa,UAAA,EAAY;UACxCb,MAAA,GAASe,OAAA,CAAQf,MAAA;QACnB,OAAO;UACLA,MAAA,GAAS,IAAIa,UAAA,CAAW;YACtBO,UAAA,EAAYL,OAAA,CAAQf;UACtB,CAAC;QACH;MACF;MAEAwF,GAAA,GAAM,IAAI/C,WAAA,CAAY8C,QAAO5C,GAAA,EAAK5B,OAAA,CAAQ+B,IAAA,KAAS,SAAY/B,OAAA,CAAQ+B,IAAA,GAAO,MAAM;QAClF9G,OAAA;QACAmH,OAAA,EAASpC,OAAA,CAAQoC,OAAA;QACjBnD,MAAA;QACA+C,cAAA,EAAgBhC,OAAA,CAAQgC,cAAA;QAAA;QAExBE,YAAA,EAAclC,OAAA,CAAQkC,YAAA,IAAgB;QACtCD,eAAA,EAAiBjC,OAAA,CAAQiC,eAAA;QACzBI,aAAA,EAAerC,OAAA,CAAQqC;MACzB,CAAC;IACH;IAKA,MAAMqC,OAAA,GAAUC,EAAA,CAAGF,GAAG,EAAEG,IAAA,CAAKC,SAAA,CAAUJ,QAAO,KAAKH,OAAA,CAAQQ,MAAA,CAAOL,IAAG,CAAC,CAAC;IAIvE,IAAID,kBAAiB9C,WAAA,IAAe1B,OAAA,CAAQoE,OAAA,KAAY,UAAU;MAChE,OAAOM,OAAA;IACT;IAIA,MAAMK,IAAA,GAAOL,OAAA,CAAQE,IAAA,CAAK5G,MAAA,CAAOgH,KAAA,IAASA,KAAA,YAAiBnB,YAAY,CAAC;IAExE,QAAQ7D,OAAA,CAAQoE,OAAA,IAAW;MACzB,KAAK;QAMH,QAAQK,GAAA,CAAIvC,YAAA;UACV,KAAK;YACH,OAAO6C,IAAA,CAAKH,IAAA,CAAKzG,GAAA,CAAImC,GAAA,IAAO;cAE1B,IAAIA,GAAA,CAAIyB,IAAA,KAAS,QAAQ,EAAEzB,GAAA,CAAIyB,IAAA,YAAgBZ,WAAA,GAAc;gBAC3D,MAAM,IAAI7C,KAAA,CAAM,iCAAiC;cACnD;cACA,OAAOgC,GAAA,CAAIyB,IAAA;YACb,CAAC,CAAC;UACJ,KAAK;YACH,OAAOgD,IAAA,CAAKH,IAAA,CAAKzG,GAAA,CAAImC,GAAA,IAAO;cAE1B,IAAIA,GAAA,CAAIyB,IAAA,KAAS,QAAQ,EAAEzB,GAAA,CAAIyB,IAAA,YAAgBV,IAAA,GAAO;gBACpD,MAAM,IAAI/C,KAAA,CAAM,yBAAyB;cAC3C;cACA,OAAOgC,GAAA,CAAIyB,IAAA;YACb,CAAC,CAAC;UACJ,KAAK;YACH,OAAOgD,IAAA,CAAKH,IAAA,CAAKzG,GAAA,CAAImC,GAAA,IAAO;cAE1B,IAAIA,GAAA,CAAIyB,IAAA,KAAS,QAAQ,OAAOzB,GAAA,CAAIyB,IAAA,KAAS,UAAU;gBACrD,MAAM,IAAIzD,KAAA,CAAM,2BAA2B;cAC7C;cACA,OAAOgC,GAAA,CAAIyB,IAAA;YACb,CAAC,CAAC;UACJ,KAAK;UACL;YAEE,OAAOgD,IAAA,CAAKH,IAAA,CAAKzG,GAAA,CAAImC,GAAA,IAAOA,GAAA,CAAIyB,IAAI,CAAC;QACzC;MACF,KAAK;QAEH,OAAOgD,IAAA;MACT;QAEE,MAAM,IAAIzG,KAAA,CAAM,uCAAuC0B,OAAA,CAAQoE,OAAO,GAAG;IAC7E;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUA9G,OAAOsE,GAAA,EAAK5B,OAAA,GAAU,CAAC,GAAG;IACxB,OAAO,KAAKuE,OAAA,CAAQ,UAAU3C,GAAA,EAAK5B,OAAO;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA7D,IAAIyF,GAAA,EAAK5B,OAAA,GAAU,CAAC,GAAG;IACrB,OAAO,KAAKuE,OAAA,CAAQ,OAAO3C,GAAA,EAAK5B,OAAO;EACzC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAiF,KAAKrD,GAAA,EAAK5B,OAAA,GAAU,CAAC,GAAG;IACtB,OAAO,KAAKuE,OAAA,CAAQ,QAAQ3C,GAAA,EAAK5B,OAAO;EAC1C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAmBAkF,MAAMtD,GAAA,EAAKuD,aAAA,EAAe;IACxB,OAAO,KAAKZ,OAAA,CAAQ,SAAS3C,GAAA,EAAK;MAChC3C,MAAA,EAAQ,IAAIa,UAAA,CAAW,EAAE3C,MAAA,CAAOgI,aAAA,EAAe,gBAAgB;MAC/Df,OAAA,EAAS;MACTlC,YAAA,EAAc;IAChB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAlC,QAAQ4B,GAAA,EAAK5B,OAAA,GAAU,CAAC,GAAG;IACzB,OAAO,KAAKuE,OAAA,CAAQ,WAAW3C,GAAA,EAAK5B,OAAO;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAoF,MAAMxD,GAAA,EAAKG,IAAA,EAAM/B,OAAA,GAAU,CAAC,GAAG;IAC7B,OAAO,KAAKuE,OAAA,CAAQ,SAAS3C,GAAA,EAAKuC,OAAA,CAAQnE,OAAA,EAAS+B,IAAI,CAAC;EAC1D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAsD,KAAKzD,GAAA,EAAKG,IAAA,EAAM/B,OAAA,GAAU,CAAC,GAAG;IAC5B,OAAO,KAAKuE,OAAA,CAAQ,QAAQ3C,GAAA,EAAKuC,OAAA,CAAQnE,OAAA,EAAS+B,IAAI,CAAC;EACzD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAuD,IAAI1D,GAAA,EAAKG,IAAA,EAAM/B,OAAA,GAAU,CAAC,GAAG;IAC3B,OAAO,KAAKuE,OAAA,CAAQ,OAAO3C,GAAA,EAAKuC,OAAA,CAAQnE,OAAA,EAAS+B,IAAI,CAAC;EACxD;AAYF;AAVIsC,WAAA,CAAKkB,IAAA,GAAO,SAASC,mBAAmB5F,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKyE,WAAA,EAAeoB,QAAA,CAAS7K,WAAW,CAAC;AACvD;AAGAyJ,WAAA,CAAKqB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOuD,WAAA;EACPuB,OAAA,EAASvB,WAAA,CAAWkB;AACtB,CAAC;AAxOL,IAAMM,UAAA,GAANxB,WAAA;AAAA,CA2OC,MAAM;EACL,CAAC,OAAO5H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBD,UAAA,EAAY,CAAC;IACnFhD,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAMjI;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMoL,aAAA,GAAgB;AACtB,IAAMC,kBAAA,GAAqB;AAK3B,SAASC,iBAAiBC,QAAA,EAAU;EAClC,IAAIA,QAAA,CAASvE,GAAA,EAAK;IAChB,OAAOuE,QAAA,CAASvE,GAAA;EAClB;EAEA,MAAMwE,WAAA,GAAcH,kBAAA,CAAmBI,iBAAA,CAAkB;EACzD,OAAOF,QAAA,CAASlL,OAAA,CAAQkB,GAAA,CAAIiK,WAAW;AACzC;AAYA,IAAME,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjBtL,YAAA,EAAc;IAEZ,KAAKuL,SAAA,GAAYC,MAAA,CAAOC,YAAA,EAAc;MACpCC,QAAA,EAAU;IACZ,CAAC,GAAGC,KAAA,IAASA,KAAA,CAAMC,IAAA,CAAKC,UAAU;IAClC,KAAKC,MAAA,GAASN,MAAA,CAAOO,MAAM;EAC7B;EACAjC,OAAOP,OAAA,EAAS;IACd,OAAO,IAAIyC,UAAA,CAAWC,QAAA,IAAY;MAChC,MAAMC,OAAA,GAAU,IAAIC,eAAA,CAAgB;MACpC,KAAKC,SAAA,CAAU7C,OAAA,EAAS2C,OAAA,CAAQG,MAAA,EAAQJ,QAAQ,EAAEK,IAAA,CAAKC,IAAA,EAAMrD,KAAA,IAAS+C,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;QACzGE;MACF,CAAC,CAAC,CAAC;MACH,OAAO,MAAMgD,OAAA,CAAQM,KAAA,CAAM;IAC7B,CAAC;EACH;EACMJ,UAAU7C,OAAA,EAAS8C,MAAA,EAAQJ,QAAA,EAAU;IAAA,OAAAQ,OAAA;MACzC,MAAM5K,IAAA,GAAO,KAAK6K,iBAAA,CAAkBnD,OAAO;MAC3C,IAAI4B,QAAA;MACJ,IAAI;QACF,MAAMwB,YAAA,GAAe,KAAKpB,SAAA,CAAUhC,OAAA,CAAQjC,aAAA,EAAesF,cAAA;UACzDP;QAAA,GACGxK,IAAA,CACJ;QAIDgL,2CAAA,CAA4CF,YAAY;QAExDV,QAAA,CAASa,IAAA,CAAK;UACZjF,IAAA,EAAMI,aAAA,CAAc8E;QACtB,CAAC;QACD5B,QAAA,GAAW,MAAMwB,YAAA;MACnB,SAASzD,KAAA,EAAO;QACd+C,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;UACnCE,KAAA;UACAX,MAAA,EAAQW,KAAA,CAAMX,MAAA,IAAU;UACxBC,UAAA,EAAYU,KAAA,CAAMV,UAAA;UAClB5B,GAAA,EAAK2C,OAAA,CAAQjC,aAAA;UACbrH,OAAA,EAASiJ,KAAA,CAAMjJ;QACjB,CAAC,CAAC;QACF;MACF;MACA,MAAMA,OAAA,GAAU,IAAIH,WAAA,CAAYqL,QAAA,CAASlL,OAAO;MAChD,MAAMuI,UAAA,GAAa2C,QAAA,CAAS3C,UAAA;MAC5B,MAAM5B,GAAA,GAAMsE,gBAAA,CAAiBC,QAAQ,KAAK5B,OAAA,CAAQjC,aAAA;MAClD,IAAIiB,MAAA,GAAS4C,QAAA,CAAS5C,MAAA;MACtB,IAAIxB,IAAA,GAAO;MACX,IAAIwC,OAAA,CAAQvC,cAAA,EAAgB;QAC1BiF,QAAA,CAASa,IAAA,CAAK,IAAIpE,kBAAA,CAAmB;UACnCzI,OAAA;UACAsI,MAAA;UACAC,UAAA;UACA5B;QACF,CAAC,CAAC;MACJ;MACA,IAAIuE,QAAA,CAASpE,IAAA,EAAM;QAEjB,MAAMiG,aAAA,GAAgB7B,QAAA,CAASlL,OAAA,CAAQkB,GAAA,CAAI,gBAAgB;QAC3D,MAAM8L,MAAA,GAAS,EAAC;QAChB,MAAMC,MAAA,GAAS/B,QAAA,CAASpE,IAAA,CAAKoG,SAAA,CAAU;QACvC,IAAIC,cAAA,GAAiB;QACrB,IAAIC,OAAA;QACJ,IAAIC,WAAA;QAGJ,MAAMC,OAAA,GAAU,OAAOC,IAAA,KAAS,eAAeA,IAAA,CAAKC,OAAA;QAIpD,MAAM,KAAK3B,MAAA,CAAO4B,iBAAA,CAAkB,MAAYjB,OAAA;UAC9C,OAAO,MAAM;YACX,MAAM;cACJkB,IAAA;cACA5M;YACF,IAAI,MAAMmM,MAAA,CAAOU,IAAA,CAAK;YACtB,IAAID,IAAA,EAAM;cACR;YACF;YACAV,MAAA,CAAO7L,IAAA,CAAKL,KAAK;YACjBqM,cAAA,IAAkBrM,KAAA,CAAMe,MAAA;YACxB,IAAIyH,OAAA,CAAQvC,cAAA,EAAgB;cAC1BsG,WAAA,GAAc/D,OAAA,CAAQrC,YAAA,KAAiB,UAAUoG,WAAA,IAAe,OAAOD,OAAA,KAAY,IAAIQ,WAAA,CAAY,GAAGC,MAAA,CAAO/M,KAAA,EAAO;gBAClHgN,MAAA,EAAQ;cACV,CAAC,IAAI;cACL,MAAM/G,cAAA,GAAiBA,CAAA,KAAMiF,QAAA,CAASa,IAAA,CAAK;gBACzCjF,IAAA,EAAMI,aAAA,CAAc+F,gBAAA;gBACpBC,KAAA,EAAOjB,aAAA,GAAgB,CAACA,aAAA,GAAgB;gBACxCkB,MAAA,EAAQd,cAAA;gBACRE;cACF,CAAC;cACDC,OAAA,GAAUA,OAAA,CAAQY,GAAA,CAAInH,cAAc,IAAIA,cAAA,CAAe;YACzD;UACF;QACF,EAAC;QAED,MAAMoH,SAAA,GAAY,KAAKC,YAAA,CAAapB,MAAA,EAAQG,cAAc;QAC1D,IAAI;UACF,MAAMkB,WAAA,GAAcnD,QAAA,CAASlL,OAAA,CAAQkB,GAAA,CAAI,cAAc,KAAK;UAC5D4F,IAAA,GAAO,KAAKwH,SAAA,CAAUhF,OAAA,EAAS6E,SAAA,EAAWE,WAAW;QACvD,SAASpF,KAAA,EAAO;UAEd+C,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;YACnCE,KAAA;YACAjJ,OAAA,EAAS,IAAIH,WAAA,CAAYqL,QAAA,CAASlL,OAAO;YACzCsI,MAAA,EAAQ4C,QAAA,CAAS5C,MAAA;YACjBC,UAAA,EAAY2C,QAAA,CAAS3C,UAAA;YACrB5B,GAAA,EAAKsE,gBAAA,CAAiBC,QAAQ,KAAK5B,OAAA,CAAQjC;UAC7C,CAAC,CAAC;UACF;QACF;MACF;MAEA,IAAIiB,MAAA,KAAW,GAAG;QAChBA,MAAA,GAASxB,IAAA,GAAOqB,cAAA,CAAeC,EAAA,GAAK;MACtC;MAKA,MAAMI,EAAA,GAAKF,MAAA,IAAU,OAAOA,MAAA,GAAS;MACrC,IAAIE,EAAA,EAAI;QACNwD,QAAA,CAASa,IAAA,CAAK,IAAIjE,YAAA,CAAa;UAC7B9B,IAAA;UACA9G,OAAA;UACAsI,MAAA;UACAC,UAAA;UACA5B;QACF,CAAC,CAAC;QAGFqF,QAAA,CAASuC,QAAA,CAAS;MACpB,OAAO;QACLvC,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;UACnCE,KAAA,EAAOnC,IAAA;UACP9G,OAAA;UACAsI,MAAA;UACAC,UAAA;UACA5B;QACF,CAAC,CAAC;MACJ;IACF;EAAA;EACA2H,UAAUhF,OAAA,EAASkF,UAAA,EAAYH,WAAA,EAAa;IAC1C,QAAQ/E,OAAA,CAAQrC,YAAA;MACd,KAAK;QAEH,MAAMwH,IAAA,GAAO,IAAIb,WAAA,CAAY,EAAEC,MAAA,CAAOW,UAAU,EAAEvK,OAAA,CAAQ8G,aAAA,EAAe,EAAE;QAC3E,OAAO0D,IAAA,KAAS,KAAK,OAAOhH,IAAA,CAAKiH,KAAA,CAAMD,IAAI;MAC7C,KAAK;QACH,OAAO,IAAIb,WAAA,CAAY,EAAEC,MAAA,CAAOW,UAAU;MAC5C,KAAK;QACH,OAAO,IAAIpI,IAAA,CAAK,CAACoI,UAAU,GAAG;UAC5B5G,IAAA,EAAMyG;QACR,CAAC;MACH,KAAK;QACH,OAAOG,UAAA,CAAWG,MAAA;IACtB;EACF;EACAlC,kBAAkBjD,GAAA,EAAK;IAErB,MAAMxJ,OAAA,GAAU,CAAC;IACjB,MAAM4O,WAAA,GAAcpF,GAAA,CAAIxC,eAAA,GAAkB,YAAY;IAEtDwC,GAAA,CAAIxJ,OAAA,CAAQM,OAAA,CAAQ,CAACI,IAAA,EAAMY,MAAA,KAAWtB,OAAA,CAAQU,IAAI,IAAIY,MAAA,CAAOmE,IAAA,CAAK,GAAG,CAAC;IAEtEzF,OAAA,CAAQ,QAAQ,MAAM;IAEtB,IAAI,CAACA,OAAA,CAAQ,cAAc,GAAG;MAC5B,MAAM6O,YAAA,GAAerF,GAAA,CAAI7B,uBAAA,CAAwB;MAEjD,IAAIkH,YAAA,KAAiB,MAAM;QACzB7O,OAAA,CAAQ,cAAc,IAAI6O,YAAA;MAC5B;IACF;IACA,OAAO;MACL/H,IAAA,EAAM0C,GAAA,CAAIhC,aAAA,CAAc;MACxBxB,MAAA,EAAQwD,GAAA,CAAIxD,MAAA;MACZhG,OAAA;MACA4O;IACF;EACF;EACAR,aAAapB,MAAA,EAAQ8B,WAAA,EAAa;IAChC,MAAMX,SAAA,GAAY,IAAIY,UAAA,CAAWD,WAAW;IAC5C,IAAIE,QAAA,GAAW;IACf,WAAWC,KAAA,IAASjC,MAAA,EAAQ;MAC1BmB,SAAA,CAAU/M,GAAA,CAAI6N,KAAA,EAAOD,QAAQ;MAC7BA,QAAA,IAAYC,KAAA,CAAMpN,MAAA;IACpB;IACA,OAAOsM,SAAA;EACT;AAYF;AAVI9C,aAAA,CAAKf,IAAA,GAAO,SAAS4E,qBAAqBvK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK0G,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKZ,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOwF,aAAA;EACPV,OAAA,EAASU,aAAA,CAAaf;AACxB,CAAC;AAxML,IAAM6E,YAAA,GAAN9D,aAAA;AAAA,CA2MC,MAAM;EACL,CAAC,OAAO7J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsE,YAAA,EAAc,CAAC;IACrFvH,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAIH,IAAMU,YAAA,GAAN,MAAmB,EAAC;AACpB,SAASc,KAAA,EAAO,CAAC;AAOjB,SAASM,4CAA4CwC,OAAA,EAAS;EAC5DA,OAAA,CAAQ/C,IAAA,CAAKC,IAAA,EAAMA,IAAI;AACzB;AACA,SAAS+C,sBAAsB7F,GAAA,EAAK8F,cAAA,EAAgB;EAClD,OAAOA,cAAA,CAAe9F,GAAG;AAC3B;AAKA,SAAS+F,8BAA8BC,WAAA,EAAaC,WAAA,EAAa;EAC/D,OAAO,CAACC,cAAA,EAAgBJ,cAAA,KAAmBG,WAAA,CAAYE,SAAA,CAAUD,cAAA,EAAgB;IAC/E7F,MAAA,EAAQ+F,iBAAA,IAAqBJ,WAAA,CAAYI,iBAAA,EAAmBN,cAAc;EAC5E,CAAC;AACH;AAKA,SAASO,qBAAqBL,WAAA,EAAaM,aAAA,EAAeC,QAAA,EAAU;EAElE,OAAO,CAACL,cAAA,EAAgBJ,cAAA,KAAmBU,qBAAA,CAAsBD,QAAA,EAAU,MAAMD,aAAA,CAAcJ,cAAA,EAAgBE,iBAAA,IAAqBJ,WAAA,CAAYI,iBAAA,EAAmBN,cAAc,CAAC,CAAC;AAErL;AAOA,IAAMW,iBAAA,GAAoB,IAAIC,cAAA,CAAe1O,SAAA,GAAY,sBAAsB,EAAE;AAIjF,IAAM2O,oBAAA,GAAuB,IAAID,cAAA,CAAe1O,SAAA,GAAY,yBAAyB,EAAE;AAIvF,IAAM4O,yBAAA,GAA4B,IAAIF,cAAA,CAAe1O,SAAA,GAAY,8BAA8B,EAAE;AAIjG,IAAM6O,oBAAA,GAAuB,IAAIH,cAAA,CAAe1O,SAAA,GAAY,yBAAyB,EAAE;AAKvF,SAAS8O,2BAAA,EAA6B;EACpC,IAAIC,KAAA,GAAQ;EACZ,OAAO,CAAC/G,GAAA,EAAKH,OAAA,KAAY;IACvB,IAAIkH,KAAA,KAAU,MAAM;MAClB,MAAMC,YAAA,GAAejF,MAAA,CAAO0E,iBAAA,EAAmB;QAC7CxE,QAAA,EAAU;MACZ,CAAC,KAAK,EAAC;MAKP8E,KAAA,GAAQC,YAAA,CAAaC,WAAA,CAAYlB,6BAAA,EAA+BF,qBAAqB;IACvF;IACA,MAAMqB,YAAA,GAAenF,MAAA,CAAOoF,YAAa;IACzC,MAAMC,MAAA,GAASF,YAAA,CAAaG,GAAA,CAAI;IAChC,OAAON,KAAA,CAAM/G,GAAA,EAAKH,OAAO,EAAEM,IAAA,CAAKmH,QAAA,CAAS,MAAMJ,YAAA,CAAaK,MAAA,CAAOH,MAAM,CAAC,CAAC;EAC7E;AACF;AACA,IAAII,4BAAA,GAA+B;AAKnC,IAAMC,uBAAA,GAAN,MAAMA,uBAAA,SAA+BtR,WAAA,CAAY;EAC/CI,YAAYmR,OAAA,EAASnB,QAAA,EAAU;IAC7B,MAAM;IACN,KAAKmB,OAAA,GAAUA,OAAA;IACf,KAAKnB,QAAA,GAAWA,QAAA;IAChB,KAAKQ,KAAA,GAAQ;IACb,KAAKG,YAAA,GAAenF,MAAA,CAAOoF,YAAa;IAIxC,MAAMQ,kBAAA,GAAqB5F,MAAA,CAAO8E,oBAAA,EAAsB;MACtD5E,QAAA,EAAU;IACZ,CAAC;IACD,KAAKyF,OAAA,GAAUC,kBAAA,IAAsBD,OAAA;IAIrC,KAAK,OAAO1P,SAAA,KAAc,eAAeA,SAAA,KAAc,CAACwP,4BAAA,EAA8B;MACpF,MAAMI,QAAA,GAAWC,gBAAA,CAAiBtB,QAAA,CAAS7O,GAAA,CAAIoQ,WAAW,CAAC;MAC3D,IAAIF,QAAA,IAAY,EAAE,KAAKF,OAAA,YAAmB/B,YAAA,GAAe;QACvD6B,4BAAA,GAA+B;QAC/BjB,QAAA,CAAS7O,GAAA,CAAIqQ,OAAQ,EAAEC,IAAA,CAAKC,kBAAA,CAAoB,MAA4D,4TAAqV,CAAC;MACpc;IACF;EACF;EACA5H,OAAO6F,cAAA,EAAgB;IACrB,IAAI,KAAKa,KAAA,KAAU,MAAM;MACvB,MAAMmB,qBAAA,GAAwB3P,KAAA,CAAMC,IAAA,EAAK,mBAAI2P,GAAA,CAAI,CAAC,GAAG,KAAK5B,QAAA,CAAS7O,GAAA,CAAIiP,oBAAoB,GAAG,GAAG,KAAKJ,QAAA,CAAS7O,GAAA,CAAIkP,yBAAA,EAA2B,EAAE,CAAC,CAAC,CAAC;MAKnJ,KAAKG,KAAA,GAAQmB,qBAAA,CAAsBjB,WAAA,CAAY,CAACmB,eAAA,EAAiB9B,aAAA,KAAkBD,oBAAA,CAAqB+B,eAAA,EAAiB9B,aAAA,EAAe,KAAKC,QAAQ,GAAGV,qBAAqB;IAC/K;IACA,MAAMuB,MAAA,GAAS,KAAKF,YAAA,CAAaG,GAAA,CAAI;IACrC,OAAO,KAAKN,KAAA,CAAMb,cAAA,EAAgBE,iBAAA,IAAqB,KAAKsB,OAAA,CAAQrH,MAAA,CAAO+F,iBAAiB,CAAC,EAAEjG,IAAA,CAAKmH,QAAA,CAAS,MAAM,KAAKJ,YAAA,CAAaK,MAAA,CAAOH,MAAM,CAAC,CAAC;EACtJ;AAYF;AAVIK,uBAAA,CAAK3G,IAAA,GAAO,SAASuH,+BAA+BlN,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAKsM,uBAAA,EAA2BzG,QAAA,CAAS5K,WAAW,GAAM4K,QAAA,CAAYsH,mBAAmB,CAAC;AACxG;AAGAb,uBAAA,CAAKxG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOoL,uBAAA;EACPtG,OAAA,EAASsG,uBAAA,CAAuB3G;AAClC,CAAC;AA9CL,IAAMyH,sBAAA,GAANd,uBAAA;AAAA,CAiDC,MAAM;EACL,CAAC,OAAOzP,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkH,sBAAA,EAAwB,CAAC;IAC/FnK,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAMhI;EACR,GAAG;IACDgI,IAAA,EAASkK;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAIE,aAAA,GAAgB;AAKpB,IAAIC,eAAA;AAGJ,IAAMC,qBAAA,GAAwB;AAG9B,IAAMC,sBAAA,GAAyB;AAC/B,IAAMC,6BAAA,GAAgC;AAGtC,IAAMC,+BAAA,GAAkC;AAQxC,IAAMC,oBAAA,GAAN,MAA2B,EAAC;AAS5B,SAASC,qBAAA,EAAuB;EAC9B,IAAI,OAAOC,MAAA,KAAW,UAAU;IAC9B,OAAOA,MAAA;EACT;EACA,OAAO,CAAC;AACV;AASA,IAAMC,mBAAA,GAAN,MAAMA,mBAAA,CAAmB;EACvB1S,YAAY2S,WAAA,EAAaC,WAAU;IACjC,KAAKD,WAAA,GAAcA,WAAA;IACnB,KAAKC,QAAA,GAAWA;IAIhB,KAAKC,eAAA,GAAkBC,OAAA,CAAQC,OAAA,CAAQ;EACzC;EAAA;AAAA;AAAA;EAIAC,aAAA,EAAe;IACb,OAAO,qBAAqBf,aAAA,EAAe;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAnI,OAAOL,GAAA,EAAK;IAGV,IAAIA,GAAA,CAAIxD,MAAA,KAAW,SAAS;MAC1B,MAAM,IAAI3C,KAAA,CAAM8O,sBAAsB;IACxC,WAAW3I,GAAA,CAAIvC,YAAA,KAAiB,QAAQ;MACtC,MAAM,IAAI5D,KAAA,CAAM+O,6BAA6B;IAC/C;IAGA,IAAI5I,GAAA,CAAIxJ,OAAA,CAAQ8B,IAAA,CAAK,EAAED,MAAA,GAAS,GAAG;MACjC,MAAM,IAAIwB,KAAA,CAAMgP,+BAA+B;IACjD;IAEA,OAAO,IAAItG,UAAA,CAAWC,QAAA,IAAY;MAIhC,MAAMgH,QAAA,GAAW,KAAKD,YAAA,CAAa;MACnC,MAAMpM,GAAA,GAAM6C,GAAA,CAAInC,aAAA,CAAcpD,OAAA,CAAQ,wBAAwB,IAAI+O,QAAQ,IAAI;MAE9E,MAAMC,IAAA,GAAO,KAAKN,QAAA,CAASO,aAAA,CAAc,QAAQ;MACjDD,IAAA,CAAKE,GAAA,GAAMxM,GAAA;MAIX,IAAIG,IAAA,GAAO;MAEX,IAAIsM,QAAA,GAAW;MAIf,KAAKV,WAAA,CAAYM,QAAQ,IAAIK,IAAA,IAAQ;QAEnC,OAAO,KAAKX,WAAA,CAAYM,QAAQ;QAEhClM,IAAA,GAAOuM,IAAA;QACPD,QAAA,GAAW;MACb;MAIA,MAAME,OAAA,GAAUA,CAAA,KAAM;QAEpB,IAAIL,IAAA,CAAKM,UAAA,EAAY;UACnBN,IAAA,CAAKM,UAAA,CAAWC,WAAA,CAAYP,IAAI;QAClC;QAGA,OAAO,KAAKP,WAAA,CAAYM,QAAQ;MAClC;MAKA,MAAMS,MAAA,GAAS1J,KAAA,IAAS;QAItB,KAAK6I,eAAA,CAAgBvG,IAAA,CAAK,MAAM;UAE9BiH,OAAA,CAAQ;UAER,IAAI,CAACF,QAAA,EAAU;YAGbpH,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;cACnCpC,GAAA;cACA2B,MAAA,EAAQ;cACRC,UAAA,EAAY;cACZU,KAAA,EAAO,IAAI5F,KAAA,CAAM6O,qBAAqB;YACxC,CAAC,CAAC;YACF;UACF;UAGAlG,QAAA,CAASa,IAAA,CAAK,IAAIjE,YAAA,CAAa;YAC7B9B,IAAA;YACAwB,MAAA,EAAQH,cAAA,CAAeC,EAAA;YACvBG,UAAA,EAAY;YACZ5B;UACF,CAAC,CAAC;UAEFqF,QAAA,CAASuC,QAAA,CAAS;QACpB,CAAC;MACH;MAIA,MAAMmF,OAAA,GAAUzK,KAAA,IAAS;QACvBqK,OAAA,CAAQ;QAERtH,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;UACnCE,KAAA;UACAX,MAAA,EAAQ;UACRC,UAAA,EAAY;UACZ5B;QACF,CAAC,CAAC;MACJ;MAGAsM,IAAA,CAAKU,gBAAA,CAAiB,QAAQF,MAAM;MACpCR,IAAA,CAAKU,gBAAA,CAAiB,SAASD,OAAO;MACtC,KAAKf,QAAA,CAAS7L,IAAA,CAAK8M,WAAA,CAAYX,IAAI;MAEnCjH,QAAA,CAASa,IAAA,CAAK;QACZjF,IAAA,EAAMI,aAAA,CAAc8E;MACtB,CAAC;MAED,OAAO,MAAM;QACX,IAAI,CAACsG,QAAA,EAAU;UACb,KAAKS,eAAA,CAAgBZ,IAAI;QAC3B;QAEAK,OAAA,CAAQ;MACV;IACF,CAAC;EACH;EACAO,gBAAgBC,MAAA,EAAQ;IAItB7B,eAAA,KAAoB,KAAKU,QAAA,CAASoB,cAAA,CAAeC,kBAAA,CAAmB;IACpE/B,eAAA,CAAgBgC,SAAA,CAAUH,MAAM;EAClC;AAYF;AAVIrB,mBAAA,CAAKnI,IAAA,GAAO,SAAS4J,2BAA2BvP,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK8N,mBAAA,EAAuBjI,QAAA,CAAS8H,oBAAoB,GAAM9H,QAAA,CAAS2J,QAAQ,CAAC;AAC/F;AAGA1B,mBAAA,CAAKhI,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4M,mBAAA;EACP9H,OAAA,EAAS8H,mBAAA,CAAmBnI;AAC9B,CAAC;AA3JL,IAAM8J,kBAAA,GAAN3B,mBAAA;AAAA,CA8JC,MAAM;EACL,CAAC,OAAOjR,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuJ,kBAAA,EAAoB,CAAC;IAC3FxM,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM0K;EACR,GAAG;IACD1K,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAIH,SAASK,mBAAmBhL,GAAA,EAAKqD,IAAA,EAAM;EACrC,IAAIrD,GAAA,CAAIxD,MAAA,KAAW,SAAS;IAC1B,OAAOuF,MAAA,CAAO6I,kBAAkB,EAAEvK,MAAA,CAAOL,GAAG;EAC9C;EAEA,OAAOqD,IAAA,CAAKrD,GAAG;AACjB;AASA,IAAMiL,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrB1U,YAAYgQ,QAAA,EAAU;IACpB,KAAKA,QAAA,GAAWA,QAAA;EAClB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAJ,UAAUD,cAAA,EAAgB7C,IAAA,EAAM;IAC9B,OAAOmD,qBAAA,CAAsB,KAAKD,QAAA,EAAU,MAAMyE,kBAAA,CAAmB9E,cAAA,EAAgBE,iBAAA,IAAqB/C,IAAA,CAAKhD,MAAA,CAAO+F,iBAAiB,CAAC,CAAC;EAC3I;AAYF;AAVI6E,iBAAA,CAAKnK,IAAA,GAAO,SAASoK,yBAAyB/P,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK8P,iBAAA,EAAqBjK,QAAA,CAAYsH,mBAAmB,CAAC;AACxE;AAGA2C,iBAAA,CAAKhK,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4O,iBAAA;EACP9J,OAAA,EAAS8J,iBAAA,CAAiBnK;AAC5B,CAAC;AAvBL,IAAMqK,gBAAA,GAANF,iBAAA;AAAA,CA0BC,MAAM;EACL,CAAC,OAAOjT,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8J,gBAAA,EAAkB,CAAC;IACzF/M,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAASkK;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM8C,WAAA,GAAc;AAKpB,SAASC,eAAeC,GAAA,EAAK;EAC3B,IAAI,iBAAiBA,GAAA,IAAOA,GAAA,CAAIC,WAAA,EAAa;IAC3C,OAAOD,GAAA,CAAIC,WAAA;EACb;EACA,IAAI,mBAAmBC,IAAA,CAAKF,GAAA,CAAIG,qBAAA,CAAsB,CAAC,GAAG;IACxD,OAAOH,GAAA,CAAII,iBAAA,CAAkB,eAAe;EAC9C;EACA,OAAO;AACT;AAQA,IAAMC,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBpV,YAAYqV,UAAA,EAAY;IACtB,KAAKA,UAAA,GAAaA,UAAA;EACpB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAvL,OAAOL,GAAA,EAAK;IAGV,IAAIA,GAAA,CAAIxD,MAAA,KAAW,SAAS;MAC1B,MAAM,IAAIqP,YAAA,CAAc,QAAoD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,sNAAsN;IACtV;IAIA,MAAM4T,UAAA,GAAa,KAAKA,UAAA;IACxB,MAAME,MAAA,GAASF,UAAA,CAAWG,SAAA,GAAYvT,IAAA,CAAKoT,UAAA,CAAWG,SAAA,CAAU,CAAC,IAAI7L,EAAA,CAAG,IAAI;IAC5E,OAAO4L,MAAA,CAAO3L,IAAA,CAAK6L,SAAA,CAAU,MAAM;MAEjC,OAAO,IAAIzJ,UAAA,CAAWC,QAAA,IAAY;QAGhC,MAAM8I,GAAA,GAAMM,UAAA,CAAWK,KAAA,CAAM;QAC7BX,GAAA,CAAIY,IAAA,CAAKlM,GAAA,CAAIxD,MAAA,EAAQwD,GAAA,CAAInC,aAAa;QACtC,IAAImC,GAAA,CAAIxC,eAAA,EAAiB;UACvB8N,GAAA,CAAI9N,eAAA,GAAkB;QACxB;QAEAwC,GAAA,CAAIxJ,OAAA,CAAQM,OAAA,CAAQ,CAACI,IAAA,EAAMY,MAAA,KAAWwT,GAAA,CAAIa,gBAAA,CAAiBjV,IAAA,EAAMY,MAAA,CAAOmE,IAAA,CAAK,GAAG,CAAC,CAAC;QAElF,IAAI,CAAC+D,GAAA,CAAIxJ,OAAA,CAAQiB,GAAA,CAAI,QAAQ,GAAG;UAC9B6T,GAAA,CAAIa,gBAAA,CAAiB,UAAU,mCAAmC;QACpE;QAEA,IAAI,CAACnM,GAAA,CAAIxJ,OAAA,CAAQiB,GAAA,CAAI,cAAc,GAAG;UACpC,MAAM4N,YAAA,GAAerF,GAAA,CAAI7B,uBAAA,CAAwB;UAEjD,IAAIkH,YAAA,KAAiB,MAAM;YACzBiG,GAAA,CAAIa,gBAAA,CAAiB,gBAAgB9G,YAAY;UACnD;QACF;QAEA,IAAIrF,GAAA,CAAIvC,YAAA,EAAc;UACpB,MAAMA,YAAA,GAAeuC,GAAA,CAAIvC,YAAA,CAAapG,WAAA,CAAY;UAMlDiU,GAAA,CAAI7N,YAAA,GAAeA,YAAA,KAAiB,SAASA,YAAA,GAAe;QAC9D;QAEA,MAAM2O,OAAA,GAAUpM,GAAA,CAAIhC,aAAA,CAAc;QAOlC,IAAIqO,cAAA,GAAiB;QAGrB,MAAMC,cAAA,GAAiBA,CAAA,KAAM;UAC3B,IAAID,cAAA,KAAmB,MAAM;YAC3B,OAAOA,cAAA;UACT;UACA,MAAMtN,UAAA,GAAauM,GAAA,CAAIvM,UAAA,IAAc;UAErC,MAAMvI,OAAA,GAAU,IAAIH,WAAA,CAAYiV,GAAA,CAAIG,qBAAA,CAAsB,CAAC;UAG3D,MAAMtO,GAAA,GAAMkO,cAAA,CAAeC,GAAG,KAAKtL,GAAA,CAAI7C,GAAA;UAEvCkP,cAAA,GAAiB,IAAIpN,kBAAA,CAAmB;YACtCzI,OAAA;YACAsI,MAAA,EAAQwM,GAAA,CAAIxM,MAAA;YACZC,UAAA;YACA5B;UACF,CAAC;UACD,OAAOkP,cAAA;QACT;QAIA,MAAMpC,MAAA,GAASA,CAAA,KAAM;UAEnB,IAAI;YACFzT,OAAA;YACAsI,MAAA;YACAC,UAAA;YACA5B;UACF,IAAImP,cAAA,CAAe;UAEnB,IAAIhP,IAAA,GAAO;UACX,IAAIwB,MAAA,KAAWH,cAAA,CAAe4N,SAAA,EAAW;YAEvCjP,IAAA,GAAO,OAAOgO,GAAA,CAAI5J,QAAA,KAAa,cAAc4J,GAAA,CAAIkB,YAAA,GAAelB,GAAA,CAAI5J,QAAA;UACtE;UAEA,IAAI5C,MAAA,KAAW,GAAG;YAChBA,MAAA,GAAS,CAAC,CAACxB,IAAA,GAAOqB,cAAA,CAAeC,EAAA,GAAK;UACxC;UAKA,IAAII,EAAA,GAAKF,MAAA,IAAU,OAAOA,MAAA,GAAS;UAGnC,IAAIkB,GAAA,CAAIvC,YAAA,KAAiB,UAAU,OAAOH,IAAA,KAAS,UAAU;YAE3D,MAAMmP,YAAA,GAAenP,IAAA;YACrBA,IAAA,GAAOA,IAAA,CAAK7C,OAAA,CAAQ2Q,WAAA,EAAa,EAAE;YACnC,IAAI;cAGF9N,IAAA,GAAOA,IAAA,KAAS,KAAKW,IAAA,CAAKiH,KAAA,CAAM5H,IAAI,IAAI;YAC1C,SAASmC,KAAA,EAAO;cAIdnC,IAAA,GAAOmP,YAAA;cAGP,IAAIzN,EAAA,EAAI;gBAENA,EAAA,GAAK;gBAEL1B,IAAA,GAAO;kBACLmC,KAAA;kBACAwF,IAAA,EAAM3H;gBACR;cACF;YACF;UACF;UACA,IAAI0B,EAAA,EAAI;YAENwD,QAAA,CAASa,IAAA,CAAK,IAAIjE,YAAA,CAAa;cAC7B9B,IAAA;cACA9G,OAAA;cACAsI,MAAA;cACAC,UAAA;cACA5B,GAAA,EAAKA,GAAA,IAAO;YACd,CAAC,CAAC;YAGFqF,QAAA,CAASuC,QAAA,CAAS;UACpB,OAAO;YAELvC,QAAA,CAAS/C,KAAA,CAAM,IAAIF,iBAAA,CAAkB;cAAA;cAEnCE,KAAA,EAAOnC,IAAA;cACP9G,OAAA;cACAsI,MAAA;cACAC,UAAA;cACA5B,GAAA,EAAKA,GAAA,IAAO;YACd,CAAC,CAAC;UACJ;QACF;QAIA,MAAM+M,OAAA,GAAUzK,KAAA,IAAS;UACvB,MAAM;YACJtC;UACF,IAAImP,cAAA,CAAe;UACnB,MAAMzQ,GAAA,GAAM,IAAI0D,iBAAA,CAAkB;YAChCE,KAAA;YACAX,MAAA,EAAQwM,GAAA,CAAIxM,MAAA,IAAU;YACtBC,UAAA,EAAYuM,GAAA,CAAIvM,UAAA,IAAc;YAC9B5B,GAAA,EAAKA,GAAA,IAAO;UACd,CAAC;UACDqF,QAAA,CAAS/C,KAAA,CAAM5D,GAAG;QACpB;QAKA,IAAI6Q,WAAA,GAAc;QAGlB,MAAMC,cAAA,GAAiBpM,KAAA,IAAS;UAE9B,IAAI,CAACmM,WAAA,EAAa;YAChBlK,QAAA,CAASa,IAAA,CAAKiJ,cAAA,CAAe,CAAC;YAC9BI,WAAA,GAAc;UAChB;UAGA,IAAIE,aAAA,GAAgB;YAClBxO,IAAA,EAAMI,aAAA,CAAc+F,gBAAA;YACpBE,MAAA,EAAQlE,KAAA,CAAMkE;UAChB;UAEA,IAAIlE,KAAA,CAAMsM,gBAAA,EAAkB;YAC1BD,aAAA,CAAcpI,KAAA,GAAQjE,KAAA,CAAMiE,KAAA;UAC9B;UAIA,IAAIxE,GAAA,CAAIvC,YAAA,KAAiB,UAAU,CAAC,CAAC6N,GAAA,CAAIkB,YAAA,EAAc;YACrDI,aAAA,CAAc/I,WAAA,GAAcyH,GAAA,CAAIkB,YAAA;UAClC;UAEAhK,QAAA,CAASa,IAAA,CAAKuJ,aAAa;QAC7B;QAGA,MAAME,YAAA,GAAevM,KAAA,IAAS;UAG5B,IAAIwM,QAAA,GAAW;YACb3O,IAAA,EAAMI,aAAA,CAAcwO,cAAA;YACpBvI,MAAA,EAAQlE,KAAA,CAAMkE;UAChB;UAGA,IAAIlE,KAAA,CAAMsM,gBAAA,EAAkB;YAC1BE,QAAA,CAASvI,KAAA,GAAQjE,KAAA,CAAMiE,KAAA;UACzB;UAEAhC,QAAA,CAASa,IAAA,CAAK0J,QAAQ;QACxB;QAEAzB,GAAA,CAAInB,gBAAA,CAAiB,QAAQF,MAAM;QACnCqB,GAAA,CAAInB,gBAAA,CAAiB,SAASD,OAAO;QACrCoB,GAAA,CAAInB,gBAAA,CAAiB,WAAWD,OAAO;QACvCoB,GAAA,CAAInB,gBAAA,CAAiB,SAASD,OAAO;QAErC,IAAIlK,GAAA,CAAIzC,cAAA,EAAgB;UAEtB+N,GAAA,CAAInB,gBAAA,CAAiB,YAAYwC,cAAc;UAE/C,IAAIP,OAAA,KAAY,QAAQd,GAAA,CAAI2B,MAAA,EAAQ;YAClC3B,GAAA,CAAI2B,MAAA,CAAO9C,gBAAA,CAAiB,YAAY2C,YAAY;UACtD;QACF;QAEAxB,GAAA,CAAI4B,IAAA,CAAKd,OAAO;QAChB5J,QAAA,CAASa,IAAA,CAAK;UACZjF,IAAA,EAAMI,aAAA,CAAc8E;QACtB,CAAC;QAGD,OAAO,MAAM;UAEXgI,GAAA,CAAI6B,mBAAA,CAAoB,SAASjD,OAAO;UACxCoB,GAAA,CAAI6B,mBAAA,CAAoB,SAASjD,OAAO;UACxCoB,GAAA,CAAI6B,mBAAA,CAAoB,QAAQlD,MAAM;UACtCqB,GAAA,CAAI6B,mBAAA,CAAoB,WAAWjD,OAAO;UAC1C,IAAIlK,GAAA,CAAIzC,cAAA,EAAgB;YACtB+N,GAAA,CAAI6B,mBAAA,CAAoB,YAAYR,cAAc;YAClD,IAAIP,OAAA,KAAY,QAAQd,GAAA,CAAI2B,MAAA,EAAQ;cAClC3B,GAAA,CAAI2B,MAAA,CAAOE,mBAAA,CAAoB,YAAYL,YAAY;YACzD;UACF;UAEA,IAAIxB,GAAA,CAAI8B,UAAA,KAAe9B,GAAA,CAAI+B,IAAA,EAAM;YAC/B/B,GAAA,CAAIvI,KAAA,CAAM;UACZ;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;AAYF;AAVI4I,eAAA,CAAK7K,IAAA,GAAO,SAASwM,uBAAuBnS,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKwQ,eAAA,EAAmB3K,QAAA,CAAYuM,UAAU,CAAC;AAC7D;AAGA5B,eAAA,CAAK1K,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOsP,eAAA;EACPxK,OAAA,EAASwK,eAAA,CAAe7K;AAC1B,CAAC;AApRL,IAAM0M,cAAA,GAAN7B,eAAA;AAAA,CAuRC,MAAM;EACL,CAAC,OAAO3T,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmM,cAAA,EAAgB,CAAC;IACvFpP,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAASmP;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAME,YAAA,GAAe,IAAI/G,cAAA,CAAe1O,SAAA,GAAY,iBAAiB,EAAE;AACvE,IAAM0V,wBAAA,GAA2B;AACjC,IAAMC,gBAAA,GAAmB,IAAIjH,cAAA,CAAe1O,SAAA,GAAY,qBAAqB,IAAI;EAC/E4V,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAMuM;AACjB,CAAC;AACD,IAAMG,wBAAA,GAA2B;AACjC,IAAMC,gBAAA,GAAmB,IAAIpH,cAAA,CAAe1O,SAAA,GAAY,qBAAqB,IAAI;EAC/E4V,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM0M;AACjB,CAAC;AAMD,IAAME,sBAAA,GAAN,MAA6B,EAAC;AAI9B,IAAMC,wBAAA,GAAN,MAAMA,wBAAA,CAAwB;EAC5BzX,YAAY0X,GAAA,EAAKC,QAAA,EAAUC,UAAA,EAAY;IACrC,KAAKF,GAAA,GAAMA,GAAA;IACX,KAAKC,QAAA,GAAWA,QAAA;IAChB,KAAKC,UAAA,GAAaA,UAAA;IAClB,KAAKC,gBAAA,GAAmB;IACxB,KAAKC,SAAA,GAAY;IAIjB,KAAKC,UAAA,GAAa;EACpB;EACAC,SAAA,EAAW;IACT,IAAI,KAAKL,QAAA,KAAa,UAAU;MAC9B,OAAO;IACT;IACA,MAAMM,YAAA,GAAe,KAAKP,GAAA,CAAIQ,MAAA,IAAU;IACxC,IAAID,YAAA,KAAiB,KAAKJ,gBAAA,EAAkB;MAC1C,KAAKE,UAAA;MACL,KAAKD,SAAA,GAAYK,gBAAA,CAAkBF,YAAA,EAAc,KAAKL,UAAU;MAChE,KAAKC,gBAAA,GAAmBI,YAAA;IAC1B;IACA,OAAO,KAAKH,SAAA;EACd;AAYF;AAVIL,wBAAA,CAAKlN,IAAA,GAAO,SAAS6N,gCAAgCxT,CAAA,EAAG;EACtD,OAAO,KAAKA,CAAA,IAAK6S,wBAAA,EAA4BhN,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAS8G,WAAW,GAAM9G,QAAA,CAAS2M,gBAAgB,CAAC;AAC1H;AAGAK,wBAAA,CAAK/M,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO2R,wBAAA;EACP7M,OAAA,EAAS6M,wBAAA,CAAwBlN;AACnC,CAAC;AAjCL,IAAM8N,uBAAA,GAANZ,wBAAA;AAAA,CAoCC,MAAM;EACL,CAAC,OAAOhW,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuN,uBAAA,EAAyB,CAAC;IAChGxQ,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACjD,WAAW;IACpB,CAAC;EACH,GAAG;IACD1J,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4C,gBAAgB;IACzB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,SAASkB,kBAAkB7O,GAAA,EAAKqD,IAAA,EAAM;EACpC,MAAMyL,KAAA,GAAQ9O,GAAA,CAAI7C,GAAA,CAAI9F,WAAA,CAAY;EAKlC,IAAI,CAAC0K,MAAA,CAAO0L,YAAY,KAAKzN,GAAA,CAAIxD,MAAA,KAAW,SAASwD,GAAA,CAAIxD,MAAA,KAAW,UAAUsS,KAAA,CAAMC,UAAA,CAAW,SAAS,KAAKD,KAAA,CAAMC,UAAA,CAAW,UAAU,GAAG;IACzI,OAAO1L,IAAA,CAAKrD,GAAG;EACjB;EACA,MAAM3D,KAAA,GAAQ0F,MAAA,CAAOgM,sBAAsB,EAAEQ,QAAA,CAAS;EACtD,MAAMS,UAAA,GAAajN,MAAA,CAAO+L,gBAAgB;EAE1C,IAAIzR,KAAA,IAAS,QAAQ,CAAC2D,GAAA,CAAIxJ,OAAA,CAAQiB,GAAA,CAAIuX,UAAU,GAAG;IACjDhP,GAAA,GAAMA,GAAA,CAAIrH,KAAA,CAAM;MACdnC,OAAA,EAASwJ,GAAA,CAAIxJ,OAAA,CAAQoB,GAAA,CAAIoX,UAAA,EAAY3S,KAAK;IAC5C,CAAC;EACH;EACA,OAAOgH,IAAA,CAAKrD,GAAG;AACjB;AAIA,IAAMiP,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EACxB1Y,YAAYgQ,QAAA,EAAU;IACpB,KAAKA,QAAA,GAAWA,QAAA;EAClB;EACAJ,UAAUD,cAAA,EAAgB7C,IAAA,EAAM;IAC9B,OAAOmD,qBAAA,CAAsB,KAAKD,QAAA,EAAU,MAAMsI,iBAAA,CAAkB3I,cAAA,EAAgBE,iBAAA,IAAqB/C,IAAA,CAAKhD,MAAA,CAAO+F,iBAAiB,CAAC,CAAC;EAC1I;AAYF;AAVI6I,oBAAA,CAAKnO,IAAA,GAAO,SAASoO,4BAA4B/T,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAK8T,oBAAA,EAAwBjO,QAAA,CAAYsH,mBAAmB,CAAC;AAC3E;AAGA2G,oBAAA,CAAKhO,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4S,oBAAA;EACP9N,OAAA,EAAS8N,oBAAA,CAAoBnO;AAC/B,CAAC;AAhBL,IAAMqO,mBAAA,GAANF,oBAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOjX,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8N,mBAAA,EAAqB,CAAC;IAC5F/Q,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAASkK;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAI8G,eAAA;AAAA,CACH,UAAUA,kBAAiB;EAC1BA,iBAAgBA,iBAAgB,cAAc,IAAI,CAAC,IAAI;EACvDA,iBAAgBA,iBAAgB,oBAAoB,IAAI,CAAC,IAAI;EAC7DA,iBAAgBA,iBAAgB,yBAAyB,IAAI,CAAC,IAAI;EAClEA,iBAAgBA,iBAAgB,kBAAkB,IAAI,CAAC,IAAI;EAC3DA,iBAAgBA,iBAAgB,cAAc,IAAI,CAAC,IAAI;EACvDA,iBAAgBA,iBAAgB,uBAAuB,IAAI,CAAC,IAAI;EAChEA,iBAAgBA,iBAAgB,OAAO,IAAI,CAAC,IAAI;AAClD,GAAGA,eAAA,KAAoBA,eAAA,GAAkB,CAAC,EAAE;AAC5C,SAASC,gBAAgBC,IAAA,EAAMC,SAAA,EAAW;EACxC,OAAO;IACLC,KAAA,EAAOF,IAAA;IACPG,UAAA,EAAYF;EACd;AACF;AA8BA,SAASG,kBAAA,GAAqBC,QAAA,EAAU;EACtC,IAAI3X,SAAA,EAAW;IACb,MAAM4X,YAAA,GAAe,IAAIzH,GAAA,CAAIwH,QAAA,CAASjW,GAAA,CAAImW,CAAA,IAAKA,CAAA,CAAEL,KAAK,CAAC;IACvD,IAAII,YAAA,CAAanY,GAAA,CAAI2X,eAAA,CAAgBU,gBAAgB,KAAKF,YAAA,CAAanY,GAAA,CAAI2X,eAAA,CAAgBW,uBAAuB,GAAG;MACnH,MAAM,IAAIlW,KAAA,CAAM7B,SAAA,GAAY,0JAA0J,EAAE;IAC1L;EACF;EACA,MAAMuX,SAAA,GAAY,CAACnO,UAAA,EAAYoM,cAAA,EAAgBjF,sBAAA,EAAwB;IACrEyH,OAAA,EAAS7Z,WAAA;IACT8Z,WAAA,EAAa1H;EACf,GAAG;IACDyH,OAAA,EAAS5Z,WAAA;IACT6Z,WAAA,EAAazC;EACf,GAAG;IACDwC,OAAA,EAASrJ,oBAAA;IACTuJ,QAAA,EAAUrB,iBAAA;IACVsB,KAAA,EAAO;EACT,GAAG;IACDH,OAAA,EAASvC,YAAA;IACTyC,QAAA,EAAU;EACZ,GAAG;IACDF,OAAA,EAASjC,sBAAA;IACTqC,QAAA,EAAUxB;EACZ,CAAC;EACD,WAAWyB,OAAA,IAAWV,QAAA,EAAU;IAC9BJ,SAAA,CAAU5X,IAAA,CAAK,GAAG0Y,OAAA,CAAQZ,UAAU;EACtC;EACA,OAAOa,wBAAA,CAAyBf,SAAS;AAC3C;AAkBA,IAAMgB,qBAAA,GAAwB,IAAI7J,cAAA,CAAe1O,SAAA,GAAY,0BAA0B,EAAE;AAYzF,SAASwY,uBAAA,EAAyB;EAMhC,OAAOnB,eAAA,CAAgBD,eAAA,CAAgBqB,kBAAA,EAAoB,CAAC;IAC1DT,OAAA,EAASO,qBAAA;IACTG,UAAA,EAAY5J;EACd,GAAG;IACDkJ,OAAA,EAASrJ,oBAAA;IACTsJ,WAAA,EAAaM,qBAAA;IACbJ,KAAA,EAAO;EACT,CAAC,CAAC;AACJ;AAQA,SAASQ,sBAAsB;EAC7BxC,UAAA;EACAa;AACF,GAAG;EACD,MAAMO,SAAA,GAAY,EAAC;EACnB,IAAIpB,UAAA,KAAe,QAAW;IAC5BoB,SAAA,CAAU5X,IAAA,CAAK;MACbqY,OAAA,EAASrC,gBAAA;MACTuC,QAAA,EAAU/B;IACZ,CAAC;EACH;EACA,IAAIa,UAAA,KAAe,QAAW;IAC5BO,SAAA,CAAU5X,IAAA,CAAK;MACbqY,OAAA,EAASlC,gBAAA;MACToC,QAAA,EAAUlB;IACZ,CAAC;EACH;EACA,OAAOK,eAAA,CAAgBD,eAAA,CAAgBW,uBAAA,EAAyBR,SAAS;AAC3E;AAQA,SAASqB,qBAAA,EAAuB;EAC9B,OAAOvB,eAAA,CAAgBD,eAAA,CAAgBU,gBAAA,EAAkB,CAAC;IACxDE,OAAA,EAASvC,YAAA;IACTyC,QAAA,EAAU;EACZ,CAAC,CAAC;AACJ;AAMA,SAASW,iBAAA,EAAmB;EAC1B,OAAOxB,eAAA,CAAgBD,eAAA,CAAgB0B,YAAA,EAAc,CAAClG,kBAAA,EAAoB;IACxEoF,OAAA,EAASlH,oBAAA;IACT4H,UAAA,EAAY3H;EACd,GAAG;IACDiH,OAAA,EAASrJ,oBAAA;IACTuJ,QAAA,EAAUlF,kBAAA;IACVmF,KAAA,EAAO;EACT,CAAC,CAAC;AACJ;AAyEA,IAAMY,qBAAA,GAAN,MAAMA,qBAAA,CAAqB;EAAA;AAAA;AAAA;EAIzB,OAAOC,QAAA,EAAU;IACf,OAAO;MACLC,QAAA,EAAUF,qBAAA;MACVxB,SAAA,EAAW,CAACqB,oBAAA,CAAqB,EAAEnB,UAAU;IAC/C;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA,OAAOyB,YAAY3V,OAAA,GAAU,CAAC,GAAG;IAC/B,OAAO;MACL0V,QAAA,EAAUF,qBAAA;MACVxB,SAAA,EAAWoB,qBAAA,CAAsBpV,OAAO,EAAEkU;IAC5C;EACF;AA6BF;AA3BIsB,qBAAA,CAAKjQ,IAAA,GAAO,SAASqQ,6BAA6BhW,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAK4V,qBAAA,EAAsB;AACzC;AAGAA,qBAAA,CAAKK,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2S;AACR,CAAC;AAGDA,qBAAA,CAAKO,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACJ,mBAAA,EAAqB;IAC/Ba,OAAA,EAASvJ,iBAAA;IACTwJ,WAAA,EAAad,mBAAA;IACbgB,KAAA,EAAO;EACT,GAAG;IACDH,OAAA,EAASjC,sBAAA;IACTqC,QAAA,EAAUxB;EACZ,GAAG+B,qBAAA,CAAsB;IACvBxC,UAAA,EAAYT,wBAAA;IACZsB,UAAA,EAAYnB;EACd,CAAC,EAAE4B,UAAA,EAAY;IACbO,OAAA,EAASvC,YAAA;IACTyC,QAAA,EAAU;EACZ,CAAC;AACH,CAAC;AAlDL,IAAMsB,oBAAA,GAANT,qBAAA;AAAA,CAqDC,MAAM;EACL,CAAC,OAAO/Y,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmQ,oBAAA,EAAsB,CAAC;IAC7FpT,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAACJ,mBAAA,EAAqB;QAC/Ba,OAAA,EAASvJ,iBAAA;QACTwJ,WAAA,EAAad,mBAAA;QACbgB,KAAA,EAAO;MACT,GAAG;QACDH,OAAA,EAASjC,sBAAA;QACTqC,QAAA,EAAUxB;MACZ,GAAG+B,qBAAA,CAAsB;QACvBxC,UAAA,EAAYT,wBAAA;QACZsB,UAAA,EAAYnB;MACd,CAAC,EAAE4B,UAAA,EAAY;QACbO,OAAA,EAASvC,YAAA;QACTyC,QAAA,EAAU;MACZ,CAAC;IACH,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAMwB,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAgBvB;AAdIA,iBAAA,CAAK5Q,IAAA,GAAO,SAAS6Q,yBAAyBxW,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKuW,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAKN,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMsT;AACR,CAAC;AAGDA,iBAAA,CAAKJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACG,iBAAA,CAAkBc,sBAAA,CAAuB,CAAC,CAAC;AACzD,CAAC;AAdL,IAAMoB,gBAAA,GAANF,iBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO1Z,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuQ,gBAAA,EAAkB,CAAC;IACzFxT,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MAAA;AAAA;AAAA;AAAA;MAKLwE,SAAA,EAAW,CAACG,iBAAA,CAAkBc,sBAAA,CAAuB,CAAC,CAAC;IACzD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AASH,IAAMqB,sBAAA,GAAN,MAAMA,sBAAA,CAAsB,EAgB5B;AAdIA,sBAAA,CAAK/Q,IAAA,GAAO,SAASgR,8BAA8B3W,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAK0W,sBAAA,EAAuB;AAC1C;AAGAA,sBAAA,CAAKT,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMyT;AACR,CAAC;AAGDA,sBAAA,CAAKP,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACsB,gBAAA,CAAiB,EAAEpB,UAAU;AAC3C,CAAC;AAdL,IAAMsC,qBAAA,GAANF,sBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO7Z,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0Q,qBAAA,EAAuB,CAAC;IAC9F3T,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAACsB,gBAAA,CAAiB,EAAEpB,UAAU;IAC3C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAWH,IAAMuC,aAAA,GAAgB,IAAItL,cAAA,CAAe1O,SAAA,GAAY,sCAAsC,EAAE;;;ACx3F7F,IAAMia,wBAAA,GAAN,cAAuCC,UAAA,CAAY;EACjD3b,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAClB,KAAKC,iBAAA,GAAoB;EAC3B;AACF;AASA,IAAMC,iBAAA,GAAN,MAAMC,kBAAA,SAA0BL,wBAAA,CAAyB;EACvD,OAAOM,YAAA,EAAc;IACnBC,iBAAA,CAAmB,IAAIF,kBAAA,CAAkB,CAAC;EAC5C;EACAG,YAAYC,EAAA,EAAIC,GAAA,EAAKC,QAAA,EAAU;IAC7BF,EAAA,CAAGvI,gBAAA,CAAiBwI,GAAA,EAAKC,QAAQ;IACjC,OAAO,MAAM;MACXF,EAAA,CAAGvF,mBAAA,CAAoBwF,GAAA,EAAKC,QAAQ;IACtC;EACF;EACAC,cAAcH,EAAA,EAAIC,GAAA,EAAK;IACrBD,EAAA,CAAGG,aAAA,CAAcF,GAAG;EACtB;EACApL,OAAOkC,IAAA,EAAM;IACX,IAAIA,IAAA,CAAKM,UAAA,EAAY;MACnBN,IAAA,CAAKM,UAAA,CAAWC,WAAA,CAAYP,IAAI;IAClC;EACF;EACAC,cAAcoJ,OAAA,EAAS7E,GAAA,EAAK;IAC1BA,GAAA,GAAMA,GAAA,IAAO,KAAK8E,kBAAA,CAAmB;IACrC,OAAO9E,GAAA,CAAIvE,aAAA,CAAcoJ,OAAO;EAClC;EACAE,mBAAA,EAAqB;IACnB,OAAO7J,QAAA,CAASoB,cAAA,CAAeC,kBAAA,CAAmB,WAAW;EAC/D;EACAuI,mBAAA,EAAqB;IACnB,OAAO5J,QAAA;EACT;EACA8J,cAAcxJ,IAAA,EAAM;IAClB,OAAOA,IAAA,CAAKyJ,QAAA,KAAaC,IAAA,CAAKC,YAAA;EAChC;EACAC,aAAa5J,IAAA,EAAM;IACjB,OAAOA,IAAA,YAAgB6J,gBAAA;EACzB;EAAA;EAEAC,qBAAqBtF,GAAA,EAAKuF,MAAA,EAAQ;IAChC,IAAIA,MAAA,KAAW,UAAU;MACvB,OAAOxK,MAAA;IACT;IACA,IAAIwK,MAAA,KAAW,YAAY;MACzB,OAAOvF,GAAA;IACT;IACA,IAAIuF,MAAA,KAAW,QAAQ;MACrB,OAAOvF,GAAA,CAAI3Q,IAAA;IACb;IACA,OAAO;EACT;EACAmW,YAAYxF,GAAA,EAAK;IACf,MAAMyF,IAAA,GAAOC,kBAAA,CAAmB;IAChC,OAAOD,IAAA,IAAQ,OAAO,OAAOE,YAAA,CAAaF,IAAI;EAChD;EACAG,iBAAA,EAAmB;IACjBC,WAAA,GAAc;EAChB;EACAC,aAAA,EAAe;IACb,OAAO/K,MAAA,CAAOgL,SAAA,CAAUC,SAAA;EAC1B;EACAC,UAAUhd,IAAA,EAAM;IACd,OAAOwX,gBAAA,CAAkBvF,QAAA,CAASsF,MAAA,EAAQvX,IAAI;EAChD;AACF;AACA,IAAI4c,WAAA,GAAc;AAClB,SAASH,mBAAA,EAAqB;EAC5BG,WAAA,GAAcA,WAAA,IAAe3K,QAAA,CAASgL,aAAA,CAAc,MAAM;EAC1D,OAAOL,WAAA,GAAcA,WAAA,CAAYM,YAAA,CAAa,MAAM,IAAI;AAC1D;AACA,SAASR,aAAazW,GAAA,EAAK;EAGzB,OAAO,IAAIkX,GAAA,CAAIlX,GAAA,EAAKgM,QAAA,CAASmL,OAAO,EAAEC,QAAA;AACxC;AACA,IAAMC,qBAAA,GAAN,MAA4B;EAC1BC,YAAYC,QAAA,EAAU;IACpBC,OAAA,CAAQ,uBAAuB,IAAI,CAACC,IAAA,EAAMC,eAAA,GAAkB,SAAS;MACnE,MAAMC,WAAA,GAAcJ,QAAA,CAASK,qBAAA,CAAsBH,IAAA,EAAMC,eAAe;MACxE,IAAIC,WAAA,IAAe,MAAM;QACvB,MAAM,IAAIjJ,YAAA,CAAc,OAAoD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yCAAyC;MACzK;MACA,OAAO8c,WAAA;IACT;IACAH,OAAA,CAAQ,4BAA4B,IAAI,MAAMD,QAAA,CAASM,mBAAA,CAAoB;IAC3EL,OAAA,CAAQ,2BAA2B,IAAI,MAAMD,QAAA,CAASO,kBAAA,CAAmB;IACzE,MAAMC,aAAA,GAAgB1L,QAAA,IAAY;MAChC,MAAM2L,aAAA,GAAgBR,OAAA,CAAQ,4BAA4B,EAAE;MAC5D,IAAIS,KAAA,GAAQD,aAAA,CAAc9c,MAAA;MAC1B,MAAMgd,SAAA,GAAY,SAAAA,CAAA,EAAY;QAC5BD,KAAA;QACA,IAAIA,KAAA,IAAS,GAAG;UACd5L,QAAA,CAAS;QACX;MACF;MACA2L,aAAA,CAAcre,OAAA,CAAQge,WAAA,IAAe;QACnCA,WAAA,CAAYQ,UAAA,CAAWD,SAAS;MAClC,CAAC;IACH;IACA,IAAI,CAACV,OAAA,CAAQ,sBAAsB,GAAG;MACpCA,OAAA,CAAQ,sBAAsB,IAAI,EAAC;IACrC;IACAA,OAAA,CAAQ,sBAAsB,EAAEhd,IAAA,CAAKud,aAAa;EACpD;EACAH,sBAAsBL,QAAA,EAAUE,IAAA,EAAMC,eAAA,EAAiB;IACrD,IAAID,IAAA,IAAQ,MAAM;MAChB,OAAO;IACT;IACA,MAAMzZ,CAAA,GAAIuZ,QAAA,CAASa,cAAA,CAAeX,IAAI;IACtC,IAAIzZ,CAAA,IAAK,MAAM;MACb,OAAOA,CAAA;IACT,WAAW,CAAC0Z,eAAA,EAAiB;MAC3B,OAAO;IACT;IACA,IAAIW,MAAA,CAAQ,EAAEnC,YAAA,CAAauB,IAAI,GAAG;MAChC,OAAO,KAAKG,qBAAA,CAAsBL,QAAA,EAAUE,IAAA,CAAKa,IAAA,EAAM,IAAI;IAC7D;IACA,OAAO,KAAKV,qBAAA,CAAsBL,QAAA,EAAUE,IAAA,CAAKc,aAAA,EAAe,IAAI;EACtE;AACF;AAKA,IAAMC,WAAA,GAAN,MAAMA,WAAA,CAAW;EACf1J,MAAA,EAAQ;IACN,OAAO,IAAI2J,cAAA,CAAe;EAC5B;AAYF;AAVID,WAAA,CAAK7U,IAAA,GAAO,SAAS+U,mBAAmB1a,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKwa,WAAA,EAAY;AAC/B;AAGAA,WAAA,CAAK1U,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOsZ,WAAA;EACPxU,OAAA,EAASwU,WAAA,CAAW7U;AACtB,CAAC;AAbL,IAAMgV,UAAA,GAANH,WAAA;AAAA,CAgBC,MAAM;EACL,CAAC,OAAO3d,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByU,UAAA,EAAY,CAAC;IACnF1X,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAOH,IAAMyU,qBAAA,GAAwB,IAAIrP,cAAA,CAAe1O,SAAA,GAAY,wBAAwB,EAAE;AAOvF,IAAMge,aAAA,GAAN,MAAMA,aAAA,CAAa;EAAA;AAAA;AAAA;EAIjBzf,YAAY0f,OAAA,EAASC,KAAA,EAAO;IAC1B,KAAKA,KAAA,GAAQA,KAAA;IACb,KAAKC,kBAAA,GAAqB,mBAAIzf,GAAA,CAAI;IAClCuf,OAAA,CAAQnf,OAAA,CAAQsf,MAAA,IAAU;MACxBA,MAAA,CAAOC,OAAA,GAAU;IACnB,CAAC;IACD,KAAKC,QAAA,GAAWL,OAAA,CAAQ9e,KAAA,CAAM,EAAEof,OAAA,CAAQ;EAC1C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUApM,iBAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAA,EAAS;IAC5C,MAAMuW,MAAA,GAAS,KAAKM,cAAA,CAAeD,SAAS;IAC5C,OAAOL,MAAA,CAAOjM,gBAAA,CAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAO;EAC5D;EAAA;AAAA;AAAA;EAIA8W,QAAA,EAAU;IACR,OAAO,KAAKT,KAAA;EACd;EAAA;EAEAQ,eAAeD,SAAA,EAAW;IACxB,IAAIL,MAAA,GAAS,KAAKD,kBAAA,CAAmBze,GAAA,CAAI+e,SAAS;IAClD,IAAIL,MAAA,EAAQ;MACV,OAAOA,MAAA;IACT;IACA,MAAMH,OAAA,GAAU,KAAKK,QAAA;IACrBF,MAAA,GAASH,OAAA,CAAQW,IAAA,CAAKR,WAAUA,QAAOS,QAAA,CAASJ,SAAS,CAAC;IAC1D,IAAI,CAACL,MAAA,EAAQ;MACX,MAAM,IAAIvK,YAAA,CAAc,OAAkD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,2CAA2Cye,SAAS,EAAE;IACpL;IACA,KAAKN,kBAAA,CAAmBve,GAAA,CAAI6e,SAAA,EAAWL,MAAM;IAC7C,OAAOA,MAAA;EACT;AAYF;AAVIJ,aAAA,CAAKlV,IAAA,GAAO,SAASgW,qBAAqB3b,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK6a,aAAA,EAAiBhV,QAAA,CAAS+U,qBAAqB,GAAM/U,QAAA,CAAYsB,MAAM,CAAC;AAC3F;AAGA0T,aAAA,CAAK/U,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO2Z,aAAA;EACP7U,OAAA,EAAS6U,aAAA,CAAalV;AACxB,CAAC;AAtDL,IAAMiW,YAAA,GAANf,aAAA;AAAA,CAyDC,MAAM;EACL,CAAC,OAAOhe,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0V,YAAA,EAAc,CAAC;IACrF3Y,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACgL,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACD3X,IAAA,EAASkE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AASH,IAAM0U,kBAAA,GAAN,MAAyB;EAAA;EAEvBzgB,YAAY0gB,IAAA,EAAM;IAChB,KAAKA,IAAA,GAAOA,IAAA;EACd;AACF;AAGA,IAAMC,qBAAA,GAAwB;AAC9B,IAAMC,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrB5gB,YAAY0X,GAAA,EAAKmJ,KAAA,EAAOC,KAAA,EAAOC,UAAA,GAAa,CAAC,GAAG;IAC9C,KAAKrJ,GAAA,GAAMA,GAAA;IACX,KAAKmJ,KAAA,GAAQA,KAAA;IACb,KAAKC,KAAA,GAAQA,KAAA;IACb,KAAKC,UAAA,GAAaA,UAAA;IAElB,KAAKC,QAAA,GAAW,mBAAI7gB,GAAA,CAAI;IACxB,KAAK8gB,SAAA,GAAY,mBAAIrP,GAAA,CAAI;IACzB,KAAKsP,eAAA,GAAkB,KAAKC,2BAAA,CAA4B;IACxD,KAAKC,gBAAA,GAAmB9P,gBAAA,CAAiByP,UAAU;IACnD,KAAKM,cAAA,CAAe;EACtB;EACAC,UAAUC,MAAA,EAAQ;IAChB,WAAWC,UAASD,MAAA,EAAQ;MAC1B,MAAME,UAAA,GAAa,KAAKC,gBAAA,CAAiBF,QAAO,CAAC;MACjD,IAAIC,UAAA,KAAe,GAAG;QACpB,KAAKE,YAAA,CAAaH,MAAK;MACzB;IACF;EACF;EACAI,aAAaL,MAAA,EAAQ;IACnB,WAAWC,UAASD,MAAA,EAAQ;MAC1B,MAAME,UAAA,GAAa,KAAKC,gBAAA,CAAiBF,QAAO,EAAE;MAClD,IAAIC,UAAA,IAAc,GAAG;QACnB,KAAKI,cAAA,CAAeL,MAAK;MAC3B;IACF;EACF;EACAM,YAAA,EAAc;IACZ,MAAMZ,eAAA,GAAkB,KAAKA,eAAA;IAC7B,IAAIA,eAAA,EAAiB;MACnBA,eAAA,CAAgB3gB,OAAA,CAAQ2S,IAAA,IAAQA,IAAA,CAAKlC,MAAA,CAAO,CAAC;MAC7CkQ,eAAA,CAAgBa,KAAA,CAAM;IACxB;IACA,WAAWP,UAAS,KAAKQ,YAAA,CAAa,GAAG;MACvC,KAAKH,cAAA,CAAeL,MAAK;IAC3B;IACA,KAAKH,cAAA,CAAe;EACtB;EACAY,QAAQC,QAAA,EAAU;IAChB,KAAKjB,SAAA,CAAUnQ,GAAA,CAAIoR,QAAQ;IAC3B,WAAWV,UAAS,KAAKQ,YAAA,CAAa,GAAG;MACvC,KAAKG,cAAA,CAAeD,QAAA,EAAUV,MAAK;IACrC;EACF;EACAY,WAAWF,QAAA,EAAU;IACnB,KAAKjB,SAAA,CAAU3e,MAAA,CAAO4f,QAAQ;EAChC;EACAF,aAAA,EAAe;IACb,OAAO,KAAKhB,QAAA,CAASjf,IAAA,CAAK;EAC5B;EACA4f,aAAaH,QAAO;IAClB,WAAWtC,IAAA,IAAQ,KAAK+B,SAAA,EAAW;MACjC,KAAKkB,cAAA,CAAejD,IAAA,EAAMsC,MAAK;IACjC;EACF;EACAK,eAAeL,QAAO;IACpB,MAAMR,QAAA,GAAW,KAAKA,QAAA;IACtBA,QAAA,CAAS7f,GAAA,CAAIqgB,MAAK,GAAGa,QAAA,EAAU9hB,OAAA,CAAQ2S,IAAA,IAAQA,IAAA,CAAKlC,MAAA,CAAO,CAAC;IAC5DgQ,QAAA,CAAS1e,MAAA,CAAOkf,MAAK;EACvB;EACAL,4BAAA,EAA8B;IAC5B,MAAMI,MAAA,GAAS,KAAK7J,GAAA,CAAIzN,IAAA,EAAMqY,gBAAA,CAAiB,SAAS3B,qBAAqB,KAAK,KAAKE,KAAK,IAAI;IAChG,IAAIU,MAAA,EAAQzf,MAAA,EAAQ;MAClB,MAAMygB,QAAA,GAAW,mBAAIpiB,GAAA,CAAI;MACzBohB,MAAA,CAAOhhB,OAAA,CAAQihB,UAAS;QACtB,IAAIA,OAAMgB,WAAA,IAAe,MAAM;UAC7BD,QAAA,CAASlhB,GAAA,CAAImgB,OAAMgB,WAAA,EAAahB,MAAK;QACvC;MACF,CAAC;MACD,OAAOe,QAAA;IACT;IACA,OAAO;EACT;EACAb,iBAAiBF,QAAOiB,KAAA,EAAO;IAC7B,MAAMtf,OAAM,KAAK6d,QAAA;IACjB,IAAI7d,KAAIjC,GAAA,CAAIsgB,MAAK,GAAG;MAClB,MAAMkB,aAAA,GAAgBvf,KAAIhC,GAAA,CAAIqgB,MAAK;MACnCkB,aAAA,CAAcC,KAAA,IAASF,KAAA;MACvB,OAAOC,aAAA,CAAcC,KAAA;IACvB;IACAxf,KAAI9B,GAAA,CAAImgB,QAAO;MACbmB,KAAA,EAAOF,KAAA;MACPJ,QAAA,EAAU;IACZ,CAAC;IACD,OAAOI,KAAA;EACT;EACAG,gBAAgB1D,IAAA,EAAMsC,QAAO;IAC3B,MAAMN,eAAA,GAAkB,KAAKA,eAAA;IAC7B,MAAM2B,OAAA,GAAU3B,eAAA,EAAiB/f,GAAA,CAAIqgB,MAAK;IAC1C,IAAIqB,OAAA,EAASrP,UAAA,KAAe0L,IAAA,EAAM;MAEhCgC,eAAA,CAAgB5e,MAAA,CAAOkf,MAAK;MAC5BqB,OAAA,CAAQC,eAAA,CAAgBnC,qBAAqB;MAC7C,IAAI,OAAOlf,SAAA,KAAc,eAAeA,SAAA,EAAW;QAEjDohB,OAAA,CAAQE,YAAA,CAAa,mBAAmB,EAAE;MAC5C;MACA,OAAOF,OAAA;IACT,OAAO;MACL,MAAMA,WAAU,KAAKnL,GAAA,CAAIvE,aAAA,CAAc,OAAO;MAC9C,IAAI,KAAK2N,KAAA,EAAO;QACd+B,SAAQE,YAAA,CAAa,SAAS,KAAKjC,KAAK;MAC1C;MACA+B,SAAQL,WAAA,GAAchB;MACtB,IAAI,KAAKJ,gBAAA,EAAkB;QACzByB,SAAQE,YAAA,CAAapC,qBAAA,EAAuB,KAAKE,KAAK;MACxD;MACA3B,IAAA,CAAKrL,WAAA,CAAYgP,QAAO;MACxB,OAAOA;IACT;EACF;EACAV,eAAejD,IAAA,EAAMsC,QAAO;IAC1B,MAAMqB,OAAA,GAAU,KAAKD,eAAA,CAAgB1D,IAAA,EAAMsC,MAAK;IAChD,MAAMR,QAAA,GAAW,KAAKA,QAAA;IACtB,MAAMgC,UAAA,GAAahC,QAAA,CAAS7f,GAAA,CAAIqgB,MAAK,GAAGa,QAAA;IACxC,IAAIW,UAAA,EAAY;MACdA,UAAA,CAAW5hB,IAAA,CAAKyhB,OAAO;IACzB,OAAO;MACL7B,QAAA,CAAS3f,GAAA,CAAImgB,QAAO;QAClBa,QAAA,EAAU,CAACQ,OAAO;QAClBF,KAAA,EAAO;MACT,CAAC;IACH;EACF;EACAtB,eAAA,EAAiB;IACf,MAAMJ,SAAA,GAAY,KAAKA,SAAA;IACvBA,SAAA,CAAUc,KAAA,CAAM;IAEhBd,SAAA,CAAUnQ,GAAA,CAAI,KAAK4G,GAAA,CAAIzN,IAAI;EAC7B;AAYF;AAVI2W,iBAAA,CAAKrW,IAAA,GAAO,SAAS0Y,yBAAyBre,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKgc,iBAAA,EAAqBnW,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAASyY,MAAM,GAAMzY,QAAA,CAAS0Y,SAAA,EAAW,CAAC,GAAM1Y,QAAA,CAAS8G,WAAW,CAAC;AACpI;AAGAqP,iBAAA,CAAKlW,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO8a,iBAAA;EACPhW,OAAA,EAASgW,iBAAA,CAAiBrW;AAC5B,CAAC;AA7IL,IAAM6Y,gBAAA,GAANxC,iBAAA;AAAA,CAgJC,MAAM;EACL,CAAC,OAAOnf,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsY,gBAAA,EAAkB,CAAC;IACzFvb,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAMwb,QAAA;IACN/O,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC0O,MAAM;IACf,CAAC;EACH,GAAG;IACDrb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2O,SAAS;IAClB,GAAG;MACDtb,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACjD,WAAW;IACpB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMgS,cAAA,GAAiB;EACrB,OAAO;EACP,SAAS;EACT,SAAS;EACT,OAAO;EACP,SAAS;EACT,QAAQ;AACV;AACA,IAAMC,eAAA,GAAkB;AACxB,IAAMC,kBAAA,GAAqB;AAC3B,IAAMC,SAAA,GAAY,WAAWD,kBAAkB;AAC/C,IAAME,YAAA,GAAe,cAAcF,kBAAkB;AAIrD,IAAMG,0CAAA,GAA6C;AAQnD,IAAMC,kCAAA,GAAqC,IAAI1T,cAAA,CAAe1O,SAAA,GAAY,8BAA8B,IAAI;EAC1G4V,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAMgZ;AACjB,CAAC;AACD,SAASE,qBAAqBC,gBAAA,EAAkB;EAC9C,OAAOJ,YAAA,CAAazf,OAAA,CAAQsf,eAAA,EAAiBO,gBAAgB;AAC/D;AACA,SAASC,kBAAkBD,gBAAA,EAAkB;EAC3C,OAAOL,SAAA,CAAUxf,OAAA,CAAQsf,eAAA,EAAiBO,gBAAgB;AAC5D;AACA,SAASE,kBAAkBC,MAAA,EAAQ3C,MAAA,EAAQ;EACzC,OAAOA,MAAA,CAAOpe,GAAA,CAAIwB,CAAA,IAAKA,CAAA,CAAET,OAAA,CAAQsf,eAAA,EAAiBU,MAAM,CAAC;AAC3D;AACA,IAAMC,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EACxBnkB,YAAYokB,YAAA,EAAcC,gBAAA,EAAkBxD,KAAA,EAAOyD,yBAAA,EAA2B5M,GAAA,EAAKqJ,UAAA,EAAYjV,MAAA,EAAQgV,KAAA,GAAQ,MAAM;IACnH,KAAKsD,YAAA,GAAeA,YAAA;IACpB,KAAKC,gBAAA,GAAmBA,gBAAA;IACxB,KAAKxD,KAAA,GAAQA,KAAA;IACb,KAAKyD,yBAAA,GAA4BA,yBAAA;IACjC,KAAK5M,GAAA,GAAMA,GAAA;IACX,KAAKqJ,UAAA,GAAaA,UAAA;IAClB,KAAKjV,MAAA,GAASA,MAAA;IACd,KAAKgV,KAAA,GAAQA,KAAA;IACb,KAAKyD,gBAAA,GAAmB,mBAAIpkB,GAAA,CAAI;IAChC,KAAKihB,gBAAA,GAAmB9P,gBAAA,CAAiByP,UAAU;IACnD,KAAKyD,eAAA,GAAkB,IAAIC,mBAAA,CAAoBL,YAAA,EAAc1M,GAAA,EAAK5L,MAAA,EAAQ,KAAKsV,gBAAgB;EACjG;EACAsD,eAAezE,OAAA,EAASpY,IAAA,EAAM;IAC5B,IAAI,CAACoY,OAAA,IAAW,CAACpY,IAAA,EAAM;MACrB,OAAO,KAAK2c,eAAA;IACd;IACA,IAAI,KAAKpD,gBAAA,IAAoBvZ,IAAA,CAAK8c,aAAA,KAAkBC,mBAAA,CAAkBC,SAAA,EAAW;MAE/Ehd,IAAA,GAAOid,aAAA,CAAAlY,cAAA,KACF/E,IAAA,GADE;QAEL8c,aAAA,EAAeC,mBAAA,CAAkBG;MACnC;IACF;IACA,MAAMC,QAAA,GAAW,KAAKC,mBAAA,CAAoBhF,OAAA,EAASpY,IAAI;IAGvD,IAAImd,QAAA,YAAoBE,iCAAA,EAAmC;MACzDF,QAAA,CAASG,WAAA,CAAYlF,OAAO;IAC9B,WAAW+E,QAAA,YAAoBI,4BAAA,EAA8B;MAC3DJ,QAAA,CAASK,WAAA,CAAY;IACvB;IACA,OAAOL,QAAA;EACT;EACAC,oBAAoBhF,OAAA,EAASpY,IAAA,EAAM;IACjC,MAAM0c,gBAAA,GAAmB,KAAKA,gBAAA;IAC9B,IAAIS,QAAA,GAAWT,gBAAA,CAAiBpjB,GAAA,CAAI0G,IAAA,CAAKyd,EAAE;IAC3C,IAAI,CAACN,QAAA,EAAU;MACb,MAAMtN,GAAA,GAAM,KAAKA,GAAA;MACjB,MAAM5L,MAAA,GAAS,KAAKA,MAAA;MACpB,MAAMsY,YAAA,GAAe,KAAKA,YAAA;MAC1B,MAAMC,gBAAA,GAAmB,KAAKA,gBAAA;MAC9B,MAAMC,yBAAA,GAA4B,KAAKA,yBAAA;MACvC,MAAMlD,gBAAA,GAAmB,KAAKA,gBAAA;MAC9B,QAAQvZ,IAAA,CAAK8c,aAAA;QACX,KAAKC,mBAAA,CAAkBG,QAAA;UACrBC,QAAA,GAAW,IAAIE,iCAAA,CAAkCd,YAAA,EAAcC,gBAAA,EAAkBxc,IAAA,EAAM,KAAKgZ,KAAA,EAAOyD,yBAAA,EAA2B5M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAgB;UAC3J;QACF,KAAKwD,mBAAA,CAAkBC,SAAA;UACrB,OAAO,IAAIU,iBAAA,CAAkBnB,YAAA,EAAcC,gBAAA,EAAkBpE,OAAA,EAASpY,IAAA,EAAM6P,GAAA,EAAK5L,MAAA,EAAQ,KAAKgV,KAAA,EAAOM,gBAAgB;QACvH;UACE4D,QAAA,GAAW,IAAII,4BAAA,CAA6BhB,YAAA,EAAcC,gBAAA,EAAkBxc,IAAA,EAAMyc,yBAAA,EAA2B5M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAgB;UAC1I;MACJ;MACAmD,gBAAA,CAAiBljB,GAAA,CAAIwG,IAAA,CAAKyd,EAAA,EAAIN,QAAQ;IACxC;IACA,OAAOA,QAAA;EACT;EACAlD,YAAA,EAAc;IACZ,KAAKyC,gBAAA,CAAiBxC,KAAA,CAAM;EAC9B;AAYF;AAVIoC,oBAAA,CAAK5Z,IAAA,GAAO,SAASib,4BAA4B5gB,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKuf,oBAAA,EAAwB1Z,QAAA,CAAS+V,YAAY,GAAM/V,QAAA,CAAS2Y,gBAAgB,GAAM3Y,QAAA,CAASyY,MAAM,GAAMzY,QAAA,CAASoZ,kCAAkC,GAAMpZ,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAS8G,WAAW,GAAM9G,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS0Y,SAAS,CAAC;AACvQ;AAGAgB,oBAAA,CAAKzZ,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOqe,oBAAA;EACPvZ,OAAA,EAASuZ,oBAAA,CAAoB5Z;AAC/B,CAAC;AAvEL,IAAMkb,mBAAA,GAANtB,oBAAA;AAAA,CA0EC,MAAM;EACL,CAAC,OAAO1iB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2a,mBAAA,EAAqB,CAAC;IAC5F5d,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM2Y;EACR,GAAG;IACD3Y,IAAA,EAAMub;EACR,GAAG;IACDvb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC0O,MAAM;IACf,CAAC;EACH,GAAG;IACDrb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACqP,kCAAkC;IAC3C,CAAC;EACH,GAAG;IACDhc,IAAA,EAAMwb,QAAA;IACN/O,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAMlG,MAAA;IACN2S,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACjD,WAAW;IACpB,CAAC;EACH,GAAG;IACD1J,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2O,SAAS;IAClB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMsB,mBAAA,GAAN,MAA0B;EACxBzkB,YAAYokB,YAAA,EAAc1M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAA,EAAkB;IACvD,KAAKgD,YAAA,GAAeA,YAAA;IACpB,KAAK1M,GAAA,GAAMA,GAAA;IACX,KAAK5L,MAAA,GAASA,MAAA;IACd,KAAKsV,gBAAA,GAAmBA,gBAAA;IACxB,KAAK9N,IAAA,GAAO,eAAA3R,MAAA,CAAO+jB,MAAA,CAAO,IAAI;IAK9B,KAAKC,qBAAA,GAAwB;IAC7B,KAAKC,WAAA,GAAc;EACrB;EACAC,QAAA,EAAU,CAAC;EACX1S,cAAcxS,IAAA,EAAMmlB,SAAA,EAAW;IAC7B,IAAIA,SAAA,EAAW;MAUb,OAAO,KAAKpO,GAAA,CAAIqO,eAAA,CAAgBxC,cAAA,CAAeuC,SAAS,KAAKA,SAAA,EAAWnlB,IAAI;IAC9E;IACA,OAAO,KAAK+W,GAAA,CAAIvE,aAAA,CAAcxS,IAAI;EACpC;EACAqlB,cAAcjlB,KAAA,EAAO;IACnB,OAAO,KAAK2W,GAAA,CAAIsO,aAAA,CAAcjlB,KAAK;EACrC;EACAklB,WAAWllB,KAAA,EAAO;IAChB,OAAO,KAAK2W,GAAA,CAAIwO,cAAA,CAAenlB,KAAK;EACtC;EACA8S,YAAYsS,MAAA,EAAQC,QAAA,EAAU;IAC5B,MAAMC,YAAA,GAAeC,cAAA,CAAeH,MAAM,IAAIA,MAAA,CAAOI,OAAA,GAAUJ,MAAA;IAC/DE,YAAA,CAAaxS,WAAA,CAAYuS,QAAQ;EACnC;EACAI,aAAaL,MAAA,EAAQC,QAAA,EAAUK,QAAA,EAAU;IACvC,IAAIN,MAAA,EAAQ;MACV,MAAME,YAAA,GAAeC,cAAA,CAAeH,MAAM,IAAIA,MAAA,CAAOI,OAAA,GAAUJ,MAAA;MAC/DE,YAAA,CAAaG,YAAA,CAAaJ,QAAA,EAAUK,QAAQ;IAC9C;EACF;EACAhT,YAAY0S,MAAA,EAAQO,QAAA,EAAU;IAC5B,IAAIP,MAAA,EAAQ;MACVA,MAAA,CAAO1S,WAAA,CAAYiT,QAAQ;IAC7B;EACF;EACAC,kBAAkBC,cAAA,EAAgBC,eAAA,EAAiB;IACjD,IAAI1K,EAAA,GAAK,OAAOyK,cAAA,KAAmB,WAAW,KAAKlP,GAAA,CAAIkG,aAAA,CAAcgJ,cAAc,IAAIA,cAAA;IACvF,IAAI,CAACzK,EAAA,EAAI;MACP,MAAM,IAAI7G,YAAA,CAAc,QAAmD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,iBAAiBmlB,cAAc,8BAA8B;IAC5L;IACA,IAAI,CAACC,eAAA,EAAiB;MACpB1K,EAAA,CAAGqG,WAAA,GAAc;IACnB;IACA,OAAOrG,EAAA;EACT;EACA3I,WAAWN,IAAA,EAAM;IACf,OAAOA,IAAA,CAAKM,UAAA;EACd;EACAsT,YAAY5T,IAAA,EAAM;IAChB,OAAOA,IAAA,CAAK4T,WAAA;EACd;EACA/D,aAAa5G,EAAA,EAAIxb,IAAA,EAAMI,KAAA,EAAO+kB,SAAA,EAAW;IACvC,IAAIA,SAAA,EAAW;MACbnlB,IAAA,GAAOmlB,SAAA,GAAY,MAAMnlB,IAAA;MACzB,MAAMomB,YAAA,GAAexD,cAAA,CAAeuC,SAAS;MAC7C,IAAIiB,YAAA,EAAc;QAChB5K,EAAA,CAAG6K,cAAA,CAAeD,YAAA,EAAcpmB,IAAA,EAAMI,KAAK;MAC7C,OAAO;QACLob,EAAA,CAAG4G,YAAA,CAAapiB,IAAA,EAAMI,KAAK;MAC7B;IACF,OAAO;MACLob,EAAA,CAAG4G,YAAA,CAAapiB,IAAA,EAAMI,KAAK;IAC7B;EACF;EACA+hB,gBAAgB3G,EAAA,EAAIxb,IAAA,EAAMmlB,SAAA,EAAW;IACnC,IAAIA,SAAA,EAAW;MACb,MAAMiB,YAAA,GAAexD,cAAA,CAAeuC,SAAS;MAC7C,IAAIiB,YAAA,EAAc;QAChB5K,EAAA,CAAG8K,iBAAA,CAAkBF,YAAA,EAAcpmB,IAAI;MACzC,OAAO;QACLwb,EAAA,CAAG2G,eAAA,CAAgB,GAAGgD,SAAS,IAAInlB,IAAI,EAAE;MAC3C;IACF,OAAO;MACLwb,EAAA,CAAG2G,eAAA,CAAgBniB,IAAI;IACzB;EACF;EACAumB,SAAS/K,EAAA,EAAIxb,IAAA,EAAM;IACjBwb,EAAA,CAAGgL,SAAA,CAAUrW,GAAA,CAAInQ,IAAI;EACvB;EACAymB,YAAYjL,EAAA,EAAIxb,IAAA,EAAM;IACpBwb,EAAA,CAAGgL,SAAA,CAAUnW,MAAA,CAAOrQ,IAAI;EAC1B;EACA0mB,SAASlL,EAAA,EAAIqF,QAAOzgB,KAAA,EAAOumB,KAAA,EAAO;IAChC,IAAIA,KAAA,IAASC,mBAAA,CAAoBC,QAAA,GAAWD,mBAAA,CAAoBE,SAAA,GAAY;MAC1EtL,EAAA,CAAGqF,KAAA,CAAMkG,WAAA,CAAYlG,QAAOzgB,KAAA,EAAOumB,KAAA,GAAQC,mBAAA,CAAoBE,SAAA,GAAY,cAAc,EAAE;IAC7F,OAAO;MACLtL,EAAA,CAAGqF,KAAA,CAAMA,MAAK,IAAIzgB,KAAA;IACpB;EACF;EACA4mB,YAAYxL,EAAA,EAAIqF,QAAO8F,KAAA,EAAO;IAC5B,IAAIA,KAAA,GAAQC,mBAAA,CAAoBC,QAAA,EAAU;MAExCrL,EAAA,CAAGqF,KAAA,CAAMoG,cAAA,CAAepG,MAAK;IAC/B,OAAO;MACLrF,EAAA,CAAGqF,KAAA,CAAMA,MAAK,IAAI;IACpB;EACF;EACAkG,YAAYvL,EAAA,EAAIxb,IAAA,EAAMI,KAAA,EAAO;IAC3B,IAAIob,EAAA,IAAM,MAAM;MACd;IACF;IACA,CAAC,OAAO1a,SAAA,KAAc,eAAeA,SAAA,KAAc,KAAKkkB,qBAAA,IAAyBkC,oBAAA,CAAqBlnB,IAAA,EAAM,UAAU;IACtHwb,EAAA,CAAGxb,IAAI,IAAII,KAAA;EACb;EACA+mB,SAAS5U,IAAA,EAAMnS,KAAA,EAAO;IACpBmS,IAAA,CAAK6U,SAAA,GAAYhnB,KAAA;EACnB;EACAinB,OAAO/K,MAAA,EAAQjT,KAAA,EAAOiJ,QAAA,EAAU;IAC9B,CAAC,OAAOxR,SAAA,KAAc,eAAeA,SAAA,KAAc,KAAKkkB,qBAAA,IAAyBkC,oBAAA,CAAqB7d,KAAA,EAAO,UAAU;IACvH,IAAI,OAAOiT,MAAA,KAAW,UAAU;MAC9BA,MAAA,GAASgC,MAAA,CAAQ,EAAEjC,oBAAA,CAAqB,KAAKtF,GAAA,EAAKuF,MAAM;MACxD,IAAI,CAACA,MAAA,EAAQ;QACX,MAAM,IAAI3Z,KAAA,CAAM,4BAA4B2Z,MAAM,cAAcjT,KAAK,EAAE;MACzE;IACF;IACA,OAAO,KAAKoa,YAAA,CAAaxQ,gBAAA,CAAiBqJ,MAAA,EAAQjT,KAAA,EAAO,KAAKie,sBAAA,CAAuBhV,QAAQ,CAAC;EAChG;EACAgV,uBAAuBC,YAAA,EAAc;IAKnC,OAAOle,KAAA,IAAS;MAMd,IAAIA,KAAA,KAAU,gBAAgB;QAC5B,OAAOke,YAAA;MACT;MAGA,MAAMC,oBAAA,GAAuB,KAAK/G,gBAAA,GAAmB,KAAKtV,MAAA,CAAOsc,UAAA,CAAW,MAAMF,YAAA,CAAale,KAAK,CAAC,IAAIke,YAAA,CAAale,KAAK;MAC3H,IAAIme,oBAAA,KAAyB,OAAO;QAClCne,KAAA,CAAMqe,cAAA,CAAe;MACvB;MACA,OAAO;IACT;EACF;AACF;AACA,IAAMC,WAAA,IAAe,MAAM,IAAIC,UAAA,CAAW,CAAC,GAAG;AAC9C,SAASV,qBAAqBlnB,IAAA,EAAM6nB,QAAA,EAAU;EAC5C,IAAI7nB,IAAA,CAAK4nB,UAAA,CAAW,CAAC,MAAMD,WAAA,EAAa;IACtC,MAAM,IAAIhT,YAAA,CAAc,MAA2D,wBAAwBkT,QAAQ,IAAI7nB,IAAI;AAAA;AAAA,qEAE1DA,IAAI,gIAAgI;EACvM;AACF;AACA,SAAS2lB,eAAepT,IAAA,EAAM;EAC5B,OAAOA,IAAA,CAAKqJ,OAAA,KAAY,cAAcrJ,IAAA,CAAKqT,OAAA,KAAY;AACzD;AACA,IAAMhB,iBAAA,GAAN,cAAgCd,mBAAA,CAAoB;EAClDzkB,YAAYokB,YAAA,EAAcC,gBAAA,EAAkBoE,MAAA,EAAQC,SAAA,EAAWhR,GAAA,EAAK5L,MAAA,EAAQgV,KAAA,EAAOM,gBAAA,EAAkB;IACnG,MAAMgD,YAAA,EAAc1M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAgB;IACjD,KAAKiD,gBAAA,GAAmBA,gBAAA;IACxB,KAAKoE,MAAA,GAASA,MAAA;IACd,KAAKE,UAAA,GAAaF,MAAA,CAAOG,YAAA,CAAa;MACpCC,IAAA,EAAM;IACR,CAAC;IACD,KAAKxE,gBAAA,CAAiBpC,OAAA,CAAQ,KAAK0G,UAAU;IAC7C,MAAMpH,MAAA,GAAS0C,iBAAA,CAAkByE,SAAA,CAAUpD,EAAA,EAAIoD,SAAA,CAAUnH,MAAM;IAC/D,WAAWC,UAASD,MAAA,EAAQ;MAC1B,MAAMsB,OAAA,GAAUjQ,QAAA,CAASO,aAAA,CAAc,OAAO;MAC9C,IAAI2N,KAAA,EAAO;QACT+B,OAAA,CAAQE,YAAA,CAAa,SAASjC,KAAK;MACrC;MACA+B,OAAA,CAAQL,WAAA,GAAchB;MACtB,KAAKmH,UAAA,CAAW9U,WAAA,CAAYgP,OAAO;IACrC;EACF;EACAiG,iBAAiB5V,IAAA,EAAM;IACrB,OAAOA,IAAA,KAAS,KAAKuV,MAAA,GAAS,KAAKE,UAAA,GAAazV,IAAA;EAClD;EACAW,YAAYsS,MAAA,EAAQC,QAAA,EAAU;IAC5B,OAAO,MAAMvS,WAAA,CAAY,KAAKiV,gBAAA,CAAiB3C,MAAM,GAAGC,QAAQ;EAClE;EACAI,aAAaL,MAAA,EAAQC,QAAA,EAAUK,QAAA,EAAU;IACvC,OAAO,MAAMD,YAAA,CAAa,KAAKsC,gBAAA,CAAiB3C,MAAM,GAAGC,QAAA,EAAUK,QAAQ;EAC7E;EACAhT,YAAY0S,MAAA,EAAQO,QAAA,EAAU;IAC5B,OAAO,MAAMjT,WAAA,CAAY,KAAKqV,gBAAA,CAAiB3C,MAAM,GAAGO,QAAQ;EAClE;EACAlT,WAAWN,IAAA,EAAM;IACf,OAAO,KAAK4V,gBAAA,CAAiB,MAAMtV,UAAA,CAAW,KAAKsV,gBAAA,CAAiB5V,IAAI,CAAC,CAAC;EAC5E;EACA2S,QAAA,EAAU;IACR,KAAKxB,gBAAA,CAAiBjC,UAAA,CAAW,KAAKuG,UAAU;EAClD;AACF;AACA,IAAMvD,4BAAA,GAAN,cAA2CX,mBAAA,CAAoB;EAC7DzkB,YAAYokB,YAAA,EAAcC,gBAAA,EAAkBqE,SAAA,EAAWpE,yBAAA,EAA2B5M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAA,EAAkB8C,MAAA,EAAQ;IACvH,MAAME,YAAA,EAAc1M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAgB;IACjD,KAAKiD,gBAAA,GAAmBA,gBAAA;IACxB,KAAKC,yBAAA,GAA4BA,yBAAA;IACjC,KAAK/C,MAAA,GAAS2C,MAAA,GAASD,iBAAA,CAAkBC,MAAA,EAAQwE,SAAA,CAAUnH,MAAM,IAAImH,SAAA,CAAUnH,MAAA;EACjF;EACA8D,YAAA,EAAc;IACZ,KAAKhB,gBAAA,CAAiB/C,SAAA,CAAU,KAAKC,MAAM;EAC7C;EACAsE,QAAA,EAAU;IACR,IAAI,CAAC,KAAKvB,yBAAA,EAA2B;MACnC;IACF;IACA,KAAKD,gBAAA,CAAiBzC,YAAA,CAAa,KAAKL,MAAM;EAChD;AACF;AACA,IAAM2D,iCAAA,GAAN,cAAgDE,4BAAA,CAA6B;EAC3EplB,YAAYokB,YAAA,EAAcC,gBAAA,EAAkBqE,SAAA,EAAW7H,KAAA,EAAOyD,yBAAA,EAA2B5M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAA,EAAkB;IACtH,MAAM8C,MAAA,GAASrD,KAAA,GAAQ,MAAM6H,SAAA,CAAUpD,EAAA;IACvC,MAAMlB,YAAA,EAAcC,gBAAA,EAAkBqE,SAAA,EAAWpE,yBAAA,EAA2B5M,GAAA,EAAK5L,MAAA,EAAQsV,gBAAA,EAAkB8C,MAAM;IACjH,KAAK6E,WAAA,GAAcjF,oBAAA,CAAqBI,MAAM;IAC9C,KAAK8E,QAAA,GAAWhF,iBAAA,CAAkBE,MAAM;EAC1C;EACAiB,YAAYlF,OAAA,EAAS;IACnB,KAAKoF,WAAA,CAAY;IACjB,KAAKtC,YAAA,CAAa9C,OAAA,EAAS,KAAK+I,QAAA,EAAU,EAAE;EAC9C;EACA7V,cAAcgT,MAAA,EAAQxlB,IAAA,EAAM;IAC1B,MAAMwb,EAAA,GAAK,MAAMhJ,aAAA,CAAcgT,MAAA,EAAQxlB,IAAI;IAC3C,MAAMoiB,YAAA,CAAa5G,EAAA,EAAI,KAAK4M,WAAA,EAAa,EAAE;IAC3C,OAAO5M,EAAA;EACT;AACF;AACA,IAAM8M,gBAAA,GAAN,MAAMA,gBAAA,SAAwBxI,kBAAA,CAAmB;EAC/CzgB,YAAY0X,GAAA,EAAK;IACf,MAAMA,GAAG;EACX;EAAA;EAAA;EAGA4I,SAASJ,SAAA,EAAW;IAClB,OAAO;EACT;EACAtM,iBAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAA,EAAS;IAC5C2W,OAAA,CAAQrM,gBAAA,CAAiBsM,SAAA,EAAW5W,OAAA,EAAS,KAAK;IAClD,OAAO,MAAM,KAAKsN,mBAAA,CAAoBqJ,OAAA,EAASC,SAAA,EAAW5W,OAAO;EACnE;EACAsN,oBAAoBqG,MAAA,EAAQiD,SAAA,EAAWjN,QAAA,EAAU;IAC/C,OAAOgK,MAAA,CAAOrG,mBAAA,CAAoBsJ,SAAA,EAAWjN,QAAQ;EACvD;AAYF;AAVIgW,gBAAA,CAAK1e,IAAA,GAAO,SAAS2e,wBAAwBtkB,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKqkB,gBAAA,EAAoBxe,QAAA,CAAS2J,QAAQ,CAAC;AACzD;AAGA6U,gBAAA,CAAKve,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOmjB,gBAAA;EACPre,OAAA,EAASqe,gBAAA,CAAgB1e;AAC3B,CAAC;AAzBL,IAAM4e,eAAA,GAANF,gBAAA;AAAA,CA4BC,MAAM;EACL,CAAC,OAAOxnB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqe,eAAA,EAAiB,CAAC;IACxFthB,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMgV,aAAA,GAAgB,CAAC,OAAO,WAAW,QAAQ,OAAO;AAGxD,IAAMC,OAAA,GAAU;EACd,MAAM;EACN,KAAM;EACN,QAAQ;EACR,QAAQ;EACR,OAAO;EACP,OAAO;EACP,QAAQ;EACR,SAAS;EACT,MAAM;EACN,QAAQ;EACR,QAAQ;EACR,UAAU;EACV,OAAO;AACT;AAIA,IAAMC,oBAAA,GAAuB;EAC3B,OAAOtf,KAAA,IAASA,KAAA,CAAMuf,MAAA;EACtB,WAAWvf,KAAA,IAASA,KAAA,CAAMwf,OAAA;EAC1B,QAAQxf,KAAA,IAASA,KAAA,CAAMyf,OAAA;EACvB,SAASzf,KAAA,IAASA,KAAA,CAAM0f;AAC1B;AAIA,IAAMC,gBAAA,GAAN,MAAMA,gBAAA,SAAwBlJ,kBAAA,CAAmB;EAAA;AAAA;AAAA;AAAA;EAK/CzgB,YAAY0X,GAAA,EAAK;IACf,MAAMA,GAAG;EACX;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA4I,SAASJ,SAAA,EAAW;IAClB,OAAOyJ,gBAAA,CAAgBC,cAAA,CAAe1J,SAAS,KAAK;EACtD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAtM,iBAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAA,EAAS;IAC5C,MAAMugB,WAAA,GAAcF,gBAAA,CAAgBC,cAAA,CAAe1J,SAAS;IAC5D,MAAM4J,cAAA,GAAiBH,gBAAA,CAAgBI,aAAA,CAAcF,WAAA,CAAY,SAAS,GAAGvgB,OAAA,EAAS,KAAKwW,OAAA,CAAQM,OAAA,CAAQ,CAAC;IAC5G,OAAO,KAAKN,OAAA,CAAQM,OAAA,CAAQ,EAAE1S,iBAAA,CAAkB,MAAM;MACpD,OAAOuR,MAAA,CAAQ,EAAE/C,WAAA,CAAY+D,OAAA,EAAS4J,WAAA,CAAY,cAAc,GAAGC,cAAc;IACnF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUA,OAAOF,eAAe1J,SAAA,EAAW;IAC/B,MAAM8J,KAAA,GAAQ9J,SAAA,CAAUpf,WAAA,CAAY,EAAER,KAAA,CAAM,GAAG;IAC/C,MAAM2pB,YAAA,GAAeD,KAAA,CAAME,KAAA,CAAM;IACjC,IAAIF,KAAA,CAAMloB,MAAA,KAAW,KAAK,EAAEmoB,YAAA,KAAiB,aAAaA,YAAA,KAAiB,UAAU;MACnF,OAAO;IACT;IACA,MAAMppB,GAAA,GAAM8oB,gBAAA,CAAgBQ,aAAA,CAAcH,KAAA,CAAMI,GAAA,CAAI,CAAC;IACrD,IAAIC,OAAA,GAAU;IACd,IAAIC,MAAA,GAASN,KAAA,CAAMtpB,OAAA,CAAQ,MAAM;IACjC,IAAI4pB,MAAA,GAAS,IAAI;MACfN,KAAA,CAAMpkB,MAAA,CAAO0kB,MAAA,EAAQ,CAAC;MACtBD,OAAA,GAAU;IACZ;IACAjB,aAAA,CAAc7oB,OAAA,CAAQgqB,YAAA,IAAgB;MACpC,MAAM9pB,KAAA,GAAQupB,KAAA,CAAMtpB,OAAA,CAAQ6pB,YAAY;MACxC,IAAI9pB,KAAA,GAAQ,IAAI;QACdupB,KAAA,CAAMpkB,MAAA,CAAOnF,KAAA,EAAO,CAAC;QACrB4pB,OAAA,IAAWE,YAAA,GAAe;MAC5B;IACF,CAAC;IACDF,OAAA,IAAWxpB,GAAA;IACX,IAAImpB,KAAA,CAAMloB,MAAA,IAAU,KAAKjB,GAAA,CAAIiB,MAAA,KAAW,GAAG;MAEzC,OAAO;IACT;IAIA,MAAM0oB,MAAA,GAAS,CAAC;IAChBA,MAAA,CAAO,cAAc,IAAIP,YAAA;IACzBO,MAAA,CAAO,SAAS,IAAIH,OAAA;IACpB,OAAOG,MAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWA,OAAOC,sBAAsBzgB,KAAA,EAAO0gB,WAAA,EAAa;IAC/C,IAAIC,OAAA,GAAUtB,OAAA,CAAQrf,KAAA,CAAMnJ,GAAG,KAAKmJ,KAAA,CAAMnJ,GAAA;IAC1C,IAAIA,GAAA,GAAM;IACV,IAAI6pB,WAAA,CAAYhqB,OAAA,CAAQ,OAAO,IAAI,IAAI;MACrCiqB,OAAA,GAAU3gB,KAAA,CAAM4gB,IAAA;MAChB/pB,GAAA,GAAM;IACR;IAEA,IAAI8pB,OAAA,IAAW,QAAQ,CAACA,OAAA,EAAS,OAAO;IACxCA,OAAA,GAAUA,OAAA,CAAQ7pB,WAAA,CAAY;IAC9B,IAAI6pB,OAAA,KAAY,KAAK;MACnBA,OAAA,GAAU;IACZ,WAAWA,OAAA,KAAY,KAAK;MAC1BA,OAAA,GAAU;IACZ;IACAvB,aAAA,CAAc7oB,OAAA,CAAQgqB,YAAA,IAAgB;MACpC,IAAIA,YAAA,KAAiBI,OAAA,EAAS;QAC5B,MAAME,cAAA,GAAiBvB,oBAAA,CAAqBiB,YAAY;QACxD,IAAIM,cAAA,CAAe7gB,KAAK,GAAG;UACzBnJ,GAAA,IAAO0pB,YAAA,GAAe;QACxB;MACF;IACF,CAAC;IACD1pB,GAAA,IAAO8pB,OAAA;IACP,OAAO9pB,GAAA,KAAQ6pB,WAAA;EACjB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA,OAAOX,cAAcM,OAAA,EAAS/gB,OAAA,EAASwhB,IAAA,EAAM;IAC3C,OAAO9gB,KAAA,IAAS;MACd,IAAI2f,gBAAA,CAAgBc,qBAAA,CAAsBzgB,KAAA,EAAOqgB,OAAO,GAAG;QACzDS,IAAA,CAAK1C,UAAA,CAAW,MAAM9e,OAAA,CAAQU,KAAK,CAAC;MACtC;IACF;EACF;EAAA;EAEA,OAAOmgB,cAAcY,OAAA,EAAS;IAC5B,OAAOA,OAAA,KAAY,QAAQ,WAAWA,OAAA;EACxC;AAYF;AAVIpB,gBAAA,CAAKpf,IAAA,GAAO,SAASygB,wBAAwBpmB,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK+kB,gBAAA,EAAoBlf,QAAA,CAAS2J,QAAQ,CAAC;AACzD;AAGAuV,gBAAA,CAAKjf,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO6jB,gBAAA;EACP/e,OAAA,EAAS+e,gBAAA,CAAgBpf;AAC3B,CAAC;AAxIL,IAAM0gB,eAAA,GAANtB,gBAAA;AAAA,CA2IC,MAAM;EACL,CAAC,OAAOloB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmgB,eAAA,EAAiB,CAAC;IACxFpjB,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AA6DH,SAAS8W,qBAAqBC,aAAA,EAAenmB,OAAA,EAAS;EACpD,OAAOomB,yBAAA,CAA2Bxe,cAAA;IAChCue;EAAA,GACGE,qBAAA,CAAsBrmB,OAAO,EACjC;AACH;AAgBA,SAASqmB,sBAAsBrmB,OAAA,EAAS;EACtC,OAAO;IACLsmB,YAAA,EAAc,CAAC,GAAGC,wBAAA,EAA0B,IAAIvmB,OAAA,EAASgU,SAAA,IAAa,EAAG;IACzEwS,iBAAA,EAAmBC;EACrB;AACF;AAkBA,SAASC,eAAA,EAAiB;EACxB5P,iBAAA,CAAkBE,WAAA,CAAY;AAChC;AACA,SAAS2P,aAAA,EAAe;EACtB,OAAO,IAAIC,YAAA,CAAa;AAC1B;AACA,SAASC,UAAA,EAAY;EAEnBC,WAAA,CAAalZ,QAAQ;EACrB,OAAOA,QAAA;AACT;AACA,IAAM6Y,mCAAA,GAAsC,CAAC;EAC3ChS,OAAA,EAASlI,WAAA;EACToI,QAAA,EAAUoS;AACZ,GAAG;EACDtS,OAAA,EAASuS,oBAAA;EACTrS,QAAA,EAAU+R,cAAA;EACV9R,KAAA,EAAO;AACT,GAAG;EACDH,OAAA,EAASrF,QAAA;EACT+F,UAAA,EAAY0R,SAAA;EACZI,IAAA,EAAM;AACR,CAAC;AAOD,IAAMC,eAAA,GAAkBC,qBAAA,CAAsBC,YAAA,EAAc,WAAWX,mCAAmC;AAO1G,IAAMY,+BAAA,GAAkC,IAAIlc,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,mCAAmC,EAAE;AAChJ,IAAM6qB,qBAAA,GAAwB,CAAC;EAC7B7S,OAAA,EAAS8S,kBAAA;EACT1S,QAAA,EAAUoE,qBAAA;EACVgO,IAAA,EAAM;AACR,GAAG;EACDxS,OAAA,EAAS+S,WAAA;EACT3S,QAAA,EAAU4S,WAAA;EACVR,IAAA,EAAM,CAAClgB,MAAA,EAAQ2gB,mBAAA,EAAqBH,kBAAmB;AACzD,GAAG;EACD9S,OAAA,EAASgT,WAAA;EAAA;EAET5S,QAAA,EAAU4S,WAAA;EACVR,IAAA,EAAM,CAAClgB,MAAA,EAAQ2gB,mBAAA,EAAqBH,kBAAmB;AACzD,CAAC;AACD,IAAMhB,wBAAA,GAA2B,CAAC;EAChC9R,OAAA,EAASkT,cAAA;EACThT,QAAA,EAAU;AACZ,GAAG;EACDF,OAAA,EAASmS,YAAA;EACTzR,UAAA,EAAYwR,YAAA;EACZM,IAAA,EAAM;AACR,GAAG;EACDxS,OAAA,EAAS+F,qBAAA;EACT3F,QAAA,EAAUsP,eAAA;EACVvP,KAAA,EAAO;EACPqS,IAAA,EAAM,CAAC7X,QAAA,EAAUrI,MAAA,EAAQwF,WAAW;AACtC,GAAG;EACDkI,OAAA,EAAS+F,qBAAA;EACT3F,QAAA,EAAUoR,eAAA;EACVrR,KAAA,EAAO;EACPqS,IAAA,EAAM,CAAC7X,QAAQ;AACjB,GAAGqR,mBAAA,EAAqBrC,gBAAA,EAAkB5C,YAAA,EAAc;EACtD/G,OAAA,EAASmT,gBAAA;EACTlT,WAAA,EAAa+L;AACf,GAAG;EACDhM,OAAA,EAASzC,UAAA;EACT6C,QAAA,EAAU0F,UAAA;EACV0M,IAAA,EAAM;AACR,GAAG,OAAOxqB,SAAA,KAAc,eAAeA,SAAA,GAAY;EACjDgY,OAAA,EAAS4S,+BAAA;EACT1S,QAAA,EAAU;AACZ,IAAI,EAAE;AAUN,IAAMkT,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClB7sB,YAAY8sB,uBAAA,EAAyB;IACnC,KAAK,OAAOrrB,SAAA,KAAc,eAAeA,SAAA,KAAcqrB,uBAAA,EAAyB;MAC9E,MAAM,IAAIxX,YAAA,CAAc,MAA2D,qKAA0K;IAC/P;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWA,OAAOyX,qBAAqB9oB,MAAA,EAAQ;IAClC,OAAO;MACLyW,QAAA,EAAUmS,cAAA;MACV7T,SAAA,EAAW,CAAC;QACVS,OAAA,EAASyJ,MAAA;QACTvJ,QAAA,EAAU1V,MAAA,CAAO4c;MACnB,CAAC;IACH;EACF;AAiBF;AAfIgM,cAAA,CAAKtiB,IAAA,GAAO,SAASyiB,sBAAsBpoB,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKioB,cAAA,EAAkBpiB,QAAA,CAAS4hB,+BAAA,EAAiC,EAAE,CAAC;AAClF;AAGAQ,cAAA,CAAKhS,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMglB;AACR,CAAC;AAGDA,cAAA,CAAK9R,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC,GAAGuS,wBAAA,EAA0B,GAAGe,qBAAqB;EACjEW,OAAA,EAAS,CAACC,YAAA,EAAcC,iBAAiB;AAC3C,CAAC;AAvCL,IAAMC,aAAA,GAANP,cAAA;AAAA,CA0CC,MAAM;EACL,CAAC,OAAOprB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsiB,aAAA,EAAe,CAAC;IACtFvlB,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAAC,GAAGuS,wBAAA,EAA0B,GAAGe,qBAAqB;MACjEe,OAAA,EAAS,CAACH,YAAA,EAAcC,iBAAiB;IAC3C,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTtlB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMylB;IACR,GAAG;MACDzlB,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC6X,+BAA+B;IACxC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAwBH,IAAMkB,KAAA,GAAN,MAAMA,KAAA,CAAK;EACTvtB,YAAY0gB,IAAA,EAAM;IAChB,KAAKA,IAAA,GAAOA,IAAA;IACZ,KAAK8M,IAAA,GAAOvO,MAAA,CAAQ;EACtB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAwO,OAAOC,GAAA,EAAKC,aAAA,GAAgB,OAAO;IACjC,IAAI,CAACD,GAAA,EAAK,OAAO;IACjB,OAAO,KAAKE,mBAAA,CAAoBF,GAAA,EAAKC,aAAa;EACpD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAE,QAAQC,IAAA,EAAMH,aAAA,GAAgB,OAAO;IACnC,IAAI,CAACG,IAAA,EAAM,OAAO,EAAC;IACnB,OAAOA,IAAA,CAAK/lB,MAAA,CAAO,CAACyiB,MAAA,EAAQkD,GAAA,KAAQ;MAClC,IAAIA,GAAA,EAAK;QACPlD,MAAA,CAAOppB,IAAA,CAAK,KAAKwsB,mBAAA,CAAoBF,GAAA,EAAKC,aAAa,CAAC;MAC1D;MACA,OAAOnD,MAAA;IACT,GAAG,EAAE;EACP;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAuD,OAAOC,YAAA,EAAc;IACnB,IAAI,CAACA,YAAA,EAAc,OAAO;IAC1B,OAAO,KAAKtN,IAAA,CAAK9C,aAAA,CAAc,QAAQoQ,YAAY,GAAG,KAAK;EAC7D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAC,QAAQD,YAAA,EAAc;IACpB,IAAI,CAACA,YAAA,EAAc,OAAO,EAAC;IAC3B,MAAM1pB,IAAA,GAAoB,KAAKoc,IAAA,CAAK4B,gBAAA,CAAiB,QAAQ0L,YAAY,GAAG;IAC5E,OAAO1pB,IAAA,GAAO,EAAC,CAAE1D,KAAA,CAAMstB,IAAA,CAAK5pB,IAAI,IAAI,EAAC;EACvC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUA6pB,UAAUT,GAAA,EAAKU,QAAA,EAAU;IACvB,IAAI,CAACV,GAAA,EAAK,OAAO;IACjBU,QAAA,GAAWA,QAAA,IAAY,KAAKC,cAAA,CAAeX,GAAG;IAC9C,MAAMY,IAAA,GAAO,KAAKP,MAAA,CAAOK,QAAQ;IACjC,IAAIE,IAAA,EAAM;MACR,OAAO,KAAKC,yBAAA,CAA0Bb,GAAA,EAAKY,IAAI;IACjD;IACA,OAAO,KAAKV,mBAAA,CAAoBF,GAAA,EAAK,IAAI;EAC3C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAc,UAAUR,YAAA,EAAc;IACtB,KAAKS,gBAAA,CAAiB,KAAKV,MAAA,CAAOC,YAAY,CAAC;EACjD;EAAA;AAAA;AAAA;AAAA;EAKAS,iBAAiBH,IAAA,EAAM;IACrB,IAAIA,IAAA,EAAM;MACR,KAAKd,IAAA,CAAKxc,MAAA,CAAOsd,IAAI;IACvB;EACF;EACAV,oBAAoBU,IAAA,EAAMX,aAAA,GAAgB,OAAO;IAC/C,IAAI,CAACA,aAAA,EAAe;MAClB,MAAMS,QAAA,GAAW,KAAKC,cAAA,CAAeC,IAAI;MAIzC,MAAMjQ,IAAA,GAAO,KAAK4P,OAAA,CAAQG,QAAQ,EAAEprB,MAAA,CAAOqb,SAAQ,KAAKqQ,mBAAA,CAAoBJ,IAAA,EAAMjQ,KAAI,CAAC,EAAE,CAAC;MAC1F,IAAIA,IAAA,KAAS,QAAW,OAAOA,IAAA;IACjC;IACA,MAAM4B,OAAA,GAAU,KAAKuN,IAAA,CAAKra,aAAA,CAAc,MAAM;IAC9C,KAAKob,yBAAA,CAA0BD,IAAA,EAAMrO,OAAO;IAC5C,MAAMhW,IAAA,GAAO,KAAKyW,IAAA,CAAKiO,oBAAA,CAAqB,MAAM,EAAE,CAAC;IACrD1kB,IAAA,CAAK4J,WAAA,CAAYoM,OAAO;IACxB,OAAOA,OAAA;EACT;EACAsO,0BAA0Bb,GAAA,EAAKvR,EAAA,EAAI;IACjCxa,MAAA,CAAOI,IAAA,CAAK2rB,GAAG,EAAEntB,OAAA,CAAQquB,IAAA,IAAQzS,EAAA,CAAG4G,YAAA,CAAa,KAAK8L,cAAA,CAAeD,IAAI,GAAGlB,GAAA,CAAIkB,IAAI,CAAC,CAAC;IACtF,OAAOzS,EAAA;EACT;EACAkS,eAAeX,GAAA,EAAK;IAClB,MAAMoB,IAAA,GAAOpB,GAAA,CAAI/sB,IAAA,GAAO,SAAS;IACjC,OAAO,GAAGmuB,IAAI,KAAKpB,GAAA,CAAIoB,IAAI,CAAC;EAC9B;EACAJ,oBAAoBhB,GAAA,EAAKrP,IAAA,EAAM;IAC7B,OAAO1c,MAAA,CAAOI,IAAA,CAAK2rB,GAAG,EAAEqB,KAAA,CAAMluB,GAAA,IAAOwd,IAAA,CAAKR,YAAA,CAAa,KAAKgR,cAAA,CAAehuB,GAAG,CAAC,MAAM6sB,GAAA,CAAI7sB,GAAG,CAAC;EAC/F;EACAguB,eAAeD,IAAA,EAAM;IACnB,OAAOI,aAAA,CAAcJ,IAAI,KAAKA,IAAA;EAChC;AAaF;AAXIrB,KAAA,CAAKhjB,IAAA,GAAO,SAAS0kB,aAAarqB,CAAA,EAAG;EACnC,OAAO,KAAKA,CAAA,IAAK2oB,KAAA,EAAS9iB,QAAA,CAAS2J,QAAQ,CAAC;AAC9C;AAGAmZ,KAAA,CAAK7iB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOynB,KAAA;EACP3iB,OAAA,EAAS2iB,KAAA,CAAKhjB,IAAA;EACd8M,UAAA,EAAY;AACd,CAAC;AAnIL,IAAM6X,IAAA,GAAN3B,KAAA;AAAA,CAsIC,MAAM;EACL,CAAC,OAAO9rB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBokB,IAAA,EAAM,CAAC;IAC7ErnB,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAIH,IAAM4a,aAAA,GAAgB;EACpBG,SAAA,EAAW;AACb;AAYA,IAAMC,MAAA,GAAN,MAAMA,MAAA,CAAM;EACVpvB,YAAY0gB,IAAA,EAAM;IAChB,KAAKA,IAAA,GAAOA,IAAA;EACd;EAAA;AAAA;AAAA;EAIA2O,SAAA,EAAW;IACT,OAAO,KAAK3O,IAAA,CAAK4O,KAAA;EACnB;EAAA;AAAA;AAAA;AAAA;EAKAC,SAASC,QAAA,EAAU;IACjB,KAAK9O,IAAA,CAAK4O,KAAA,GAAQE,QAAA,IAAY;EAChC;AAaF;AAXIJ,MAAA,CAAK7kB,IAAA,GAAO,SAASklB,cAAc7qB,CAAA,EAAG;EACpC,OAAO,KAAKA,CAAA,IAAKwqB,MAAA,EAAU3kB,QAAA,CAAS2J,QAAQ,CAAC;AAC/C;AAGAgb,MAAA,CAAK1kB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOspB,MAAA;EACPxkB,OAAA,EAASwkB,MAAA,CAAM7kB,IAAA;EACf8M,UAAA,EAAY;AACd,CAAC;AA3BL,IAAMqY,KAAA,GAANN,MAAA;AAAA,CA8BC,MAAM;EACL,CAAC,OAAO3tB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4kB,KAAA,EAAO,CAAC;IAC9E7nB,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAwJH,IAAMub,WAAA,GAAc;EAAA;EAElB,OAAO;EACP,YAAY;EACZ,WAAW;EACX,UAAU;EACV,aAAa;EACb,WAAW;EACX,YAAY;EACZ,SAAS;EACT,WAAW;EAAA;EAEX,SAAS;EACT,cAAc;EACd,aAAa;EACb,YAAY;EACZ,eAAe;EACf,WAAW;EACX,YAAY;EAAA;EAEZ,SAAS;EACT,WAAW;EAAA;EAEX,UAAU;EACV,eAAe;EACf,cAAc;EACd,aAAa;EACb,gBAAgB;EAAA;EAEhB,SAAS;EACT,aAAa;EACb,cAAc;EACd,WAAW;EACX,aAAa;EAAA;EAEb,OAAO;EACP,aAAa;AACf;AAQA,IAAMC,qBAAA,GAAwB,IAAIzf,cAAA,CAAe,qBAAqB;AAMtE,IAAM0f,aAAA,GAAgB,IAAI1f,cAAA,CAAe,cAAc;AAMvD,IAAM2f,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EACxB9vB,YAAA,EAAc;IAMZ,KAAK+vB,MAAA,GAAS,EAAC;IAiBf,KAAKC,SAAA,GAAY,CAAC;EACpB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAC,YAAYhQ,OAAA,EAAS;IACnB,MAAMiQ,EAAA,GAAK,IAAIC,MAAA,CAAOlQ,OAAA,EAAS,KAAKjb,OAAO;IAC3CkrB,EAAA,CAAG/uB,GAAA,CAAI,OAAO,EAAEE,GAAA,CAAI;MAClB+uB,MAAA,EAAQ;IACV,CAAC;IACDF,EAAA,CAAG/uB,GAAA,CAAI,QAAQ,EAAEE,GAAA,CAAI;MACnB+uB,MAAA,EAAQ;IACV,CAAC;IACD,WAAWlQ,SAAA,IAAa,KAAK8P,SAAA,EAAW;MACtCE,EAAA,CAAG/uB,GAAA,CAAI+e,SAAS,EAAE7e,GAAA,CAAI,KAAK2uB,SAAA,CAAU9P,SAAS,CAAC;IACjD;IACA,OAAOgQ,EAAA;EACT;AAYF;AAVIJ,oBAAA,CAAKvlB,IAAA,GAAO,SAAS8lB,4BAA4BzrB,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKkrB,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKplB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOgqB,oBAAA;EACPllB,OAAA,EAASklB,oBAAA,CAAoBvlB;AAC/B,CAAC;AAtDL,IAAM+lB,mBAAA,GAANR,oBAAA;AAAA,CAyDC,MAAM;EACL,CAAC,OAAOruB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwlB,mBAAA,EAAqB,CAAC;IAC5FzoB,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAMwlB,qBAAA,GAAN,MAAMA,qBAAA,SAA6B9P,kBAAA,CAAmB;EACpDzgB,YAAY0X,GAAA,EAAK8Y,OAAA,EAASC,UAASC,MAAA,EAAQ;IACzC,MAAMhZ,GAAG;IACT,KAAK8Y,OAAA,GAAUA,OAAA;IACf,KAAKC,OAAA,GAAUA;IACf,KAAKC,MAAA,GAASA,MAAA;IACd,KAAKC,cAAA,GAAiB;EACxB;EACArQ,SAASJ,SAAA,EAAW;IAClB,IAAI,CAACyP,WAAA,CAAYiB,cAAA,CAAe1Q,SAAA,CAAUpf,WAAA,CAAY,CAAC,KAAK,CAAC,KAAK+vB,aAAA,CAAc3Q,SAAS,GAAG;MAC1F,OAAO;IACT;IACA,IAAI,CAACzN,MAAA,CAAO0d,MAAA,IAAU,CAAC,KAAKO,MAAA,EAAQ;MAClC,IAAI,OAAOjvB,SAAA,KAAc,eAAeA,SAAA,EAAW;QACjD,KAAKgvB,OAAA,CAAQhf,IAAA,CAAK,QAAQyO,SAAS,kGAAuG;MAC5I;MACA,OAAO;IACT;IACA,OAAO;EACT;EACAtM,iBAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAA,EAAS;IAC5C,MAAMwhB,IAAA,GAAO,KAAKhL,OAAA,CAAQM,OAAA,CAAQ;IAClCF,SAAA,GAAYA,SAAA,CAAUpf,WAAA,CAAY;IAGlC,IAAI,CAAC2R,MAAA,CAAO0d,MAAA,IAAU,KAAKO,MAAA,EAAQ;MACjC,KAAKC,cAAA,GAAiB,KAAKA,cAAA,IAAkB7F,IAAA,CAAKpd,iBAAA,CAAkB,MAAM,KAAKgjB,MAAA,CAAO,CAAC;MAIvF,IAAII,kBAAA,GAAqB;MACzB,IAAIC,UAAA,GAAaA,CAAA,KAAM;QACrBD,kBAAA,GAAqB;MACvB;MACAhG,IAAA,CAAKpd,iBAAA,CAAkB,MAAM,KAAKijB,cAAA,CAAerkB,IAAA,CAAK,MAAM;QAE1D,IAAI,CAACmG,MAAA,CAAO0d,MAAA,EAAQ;UAClB,IAAI,OAAO1uB,SAAA,KAAc,eAAeA,SAAA,EAAW;YACjD,KAAKgvB,OAAA,CAAQhf,IAAA,CAAK,mEAAmE;UACvF;UACAsf,UAAA,GAAaA,CAAA,KAAM,CAAC;UACpB;QACF;QACA,IAAI,CAACD,kBAAA,EAAoB;UAIvBC,UAAA,GAAa,KAAKnd,gBAAA,CAAiBqM,OAAA,EAASC,SAAA,EAAW5W,OAAO;QAChE;MACF,CAAC,EAAE0nB,KAAA,CAAM,MAAM;QACb,IAAI,OAAOvvB,SAAA,KAAc,eAAeA,SAAA,EAAW;UACjD,KAAKgvB,OAAA,CAAQhf,IAAA,CAAK,QAAQyO,SAAS,qEAA0E;QAC/G;QACA6Q,UAAA,GAAaA,CAAA,KAAM,CAAC;MACtB,CAAC,CAAC;MAIF,OAAO,MAAM;QACXA,UAAA,CAAW;MACb;IACF;IACA,OAAOjG,IAAA,CAAKpd,iBAAA,CAAkB,MAAM;MAElC,MAAMwiB,EAAA,GAAK,KAAKM,OAAA,CAAQP,WAAA,CAAYhQ,OAAO;MAC3C,MAAMhN,QAAA,GAAW,SAAAA,CAAUge,QAAA,EAAU;QACnCnG,IAAA,CAAK1C,UAAA,CAAW,YAAY;UAC1B9e,OAAA,CAAQ2nB,QAAQ;QAClB,CAAC;MACH;MACAf,EAAA,CAAGgB,EAAA,CAAGhR,SAAA,EAAWjN,QAAQ;MACzB,OAAO,MAAM;QACXid,EAAA,CAAGiB,GAAA,CAAIjR,SAAA,EAAWjN,QAAQ;QAE1B,IAAI,OAAOid,EAAA,CAAGrK,OAAA,KAAY,YAAY;UACpCqK,EAAA,CAAGrK,OAAA,CAAQ;QACb;MACF;IACF,CAAC;EACH;EACAgL,cAAc3Q,SAAA,EAAW;IACvB,OAAO,KAAKsQ,OAAA,CAAQT,MAAA,CAAOrvB,OAAA,CAAQwf,SAAS,IAAI;EAClD;AAYF;AAVIqQ,qBAAA,CAAKhmB,IAAA,GAAO,SAAS6mB,6BAA6BxsB,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAK2rB,qBAAA,EAAyB9lB,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAASmlB,qBAAqB,GAAMnlB,QAAA,CAAY+G,OAAQ,GAAM/G,QAAA,CAASolB,aAAA,EAAe,CAAC,CAAC;AAC3J;AAGAU,qBAAA,CAAK7lB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOyqB,qBAAA;EACP3lB,OAAA,EAAS2lB,qBAAA,CAAqBhmB;AAChC,CAAC;AA5FL,IAAM8mB,oBAAA,GAANd,qBAAA;AAAA,CA+FC,MAAM;EACL,CAAC,OAAO9uB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBumB,oBAAA,EAAsB,CAAC;IAC7FxpB,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAMyoB,mBAAA;IACNhc,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACob,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACD/nB,IAAA,EAAS2J;EACX,GAAG;IACD3J,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACqb,aAAa;IACtB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAYH,IAAMyB,aAAA,GAAN,MAAMA,aAAA,CAAa,EAyBnB;AAvBIA,aAAA,CAAK/mB,IAAA,GAAO,SAASgnB,qBAAqB3sB,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK0sB,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKzW,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMypB;AACR,CAAC;AAGDA,aAAA,CAAKvW,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC;IACVS,OAAA,EAAS+F,qBAAA;IACT3F,QAAA,EAAUwX,oBAAA;IACVzX,KAAA,EAAO;IACPqS,IAAA,EAAM,CAAC7X,QAAA,EAAUwb,qBAAA,EAAuBpe,OAAA,EAAU,CAAC,IAAI8R,QAAA,CAAS,GAAGuM,aAAa,CAAC;EACnF,GAAG;IACDpW,OAAA,EAASmW,qBAAA;IACT/V,QAAA,EAAUyW,mBAAA;IACVrE,IAAA,EAAM;EACR,CAAC;AACH,CAAC;AAvBL,IAAMuF,YAAA,GAANF,aAAA;AAAA,CA0BC,MAAM;EACL,CAAC,OAAO7vB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0mB,YAAA,EAAc,CAAC;IACrF3pB,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS+F,qBAAA;QACT3F,QAAA,EAAUwX,oBAAA;QACVzX,KAAA,EAAO;QACPqS,IAAA,EAAM,CAAC7X,QAAA,EAAUwb,qBAAA,EAAuBpe,OAAA,EAAU,CAAC,IAAI8R,QAAA,CAAS,GAAGuM,aAAa,CAAC;MACnF,GAAG;QACDpW,OAAA,EAASmW,qBAAA;QACT/V,QAAA,EAAUyW,mBAAA;QACVrE,IAAA,EAAM;MACR,CAAC;IACH,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAiCH,IAAMwF,aAAA,GAAN,MAAMA,aAAA,CAAa,EAqBnB;AAnBIA,aAAA,CAAKlnB,IAAA,GAAO,SAASmnB,qBAAqB9sB,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK6sB,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAK/mB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO2rB,aAAA;EACP7mB,OAAA,EAAS,SAAS8mB,qBAAqB9sB,CAAA,EAAG;IACxC,IAAI+sB,CAAA,GAAI;IACR,IAAI/sB,CAAA,EAAG;MACL+sB,CAAA,GAAI,KAAK/sB,CAAA,IAAK6sB,aAAA,EAAc;IAC9B,OAAO;MACLE,CAAA,GAAOlnB,QAAA,CAASmnB,gBAAgB;IAClC;IACA,OAAOD,CAAA;EACT;EACAta,UAAA,EAAY;AACd,CAAC;AAnBL,IAAMwa,YAAA,GAANJ,aAAA;AAAA,CAsBC,MAAM;EACL,CAAC,OAAOhwB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+mB,YAAA,EAAc,CAAC;IACrFhqB,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZqC,WAAA,EAAaoY,UAAA,CAAW,MAAMF,gBAAgB;IAChD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMG,iBAAA,GAAN,MAAMA,iBAAA,SAAyBF,YAAA,CAAa;EAC1C7xB,YAAY0gB,IAAA,EAAM;IAChB,MAAM;IACN,KAAKA,IAAA,GAAOA,IAAA;EACd;EACAsR,SAASC,GAAA,EAAKlxB,KAAA,EAAO;IACnB,IAAIA,KAAA,IAAS,MAAM,OAAO;IAC1B,QAAQkxB,GAAA;MACN,KAAKC,eAAA,CAAgBC,IAAA;QACnB,OAAOpxB,KAAA;MACT,KAAKmxB,eAAA,CAAgBE,IAAA;QACnB,IAAIC,+BAAA,CAAiCtxB,KAAA,EAAO;QAAA,qBAA4B,GAAG;UACzE,OAAOuxB,eAAA,CAAiBvxB,KAAK;QAC/B;QACA,OAAOwxB,aAAA,CAAe,KAAK7R,IAAA,EAAM8R,MAAA,CAAOzxB,KAAK,CAAC,EAAEqC,QAAA,CAAS;MAC3D,KAAK8uB,eAAA,CAAgBO,KAAA;QACnB,IAAIJ,+BAAA,CAAiCtxB,KAAA,EAAO;QAAA,sBAA8B,GAAG;UAC3E,OAAOuxB,eAAA,CAAiBvxB,KAAK;QAC/B;QACA,OAAOA,KAAA;MACT,KAAKmxB,eAAA,CAAgBQ,MAAA;QACnB,IAAIL,+BAAA,CAAiCtxB,KAAA,EAAO;QAAA,uBAAgC,GAAG;UAC7E,OAAOuxB,eAAA,CAAiBvxB,KAAK;QAC/B;QACA,MAAM,IAAIuU,YAAA,CAAc,OAAyD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,uCAAuC;MAC5K,KAAKywB,eAAA,CAAgBpU,GAAA;QACnB,IAAIuU,+BAAA,CAAiCtxB,KAAA,EAAO;QAAA,oBAA0B,GAAG;UACvE,OAAOuxB,eAAA,CAAiBvxB,KAAK;QAC/B;QACA,OAAO4xB,YAAA,CAAcH,MAAA,CAAOzxB,KAAK,CAAC;MACpC,KAAKmxB,eAAA,CAAgBU,YAAA;QACnB,IAAIP,+BAAA,CAAiCtxB,KAAA,EAAO;QAAA,4BAA0C,GAAG;UACvF,OAAOuxB,eAAA,CAAiBvxB,KAAK;QAC/B;QACA,MAAM,IAAIuU,YAAA,CAAc,OAA+D,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,oDAAoDoxB,gBAAiB,GAAG;MACnN;QACE,MAAM,IAAIvd,YAAA,CAAc,OAA0D,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,8BAA8BwwB,GAAG,SAASY,gBAAiB,GAAG;IACtM;EACF;EACAC,wBAAwB/xB,KAAA,EAAO;IAC7B,OAAOgyB,2BAAA,CAA6BhyB,KAAK;EAC3C;EACAiyB,yBAAyBjyB,KAAA,EAAO;IAC9B,OAAOkyB,4BAAA,CAA8BlyB,KAAK;EAC5C;EACAmyB,0BAA0BnyB,KAAA,EAAO;IAC/B,OAAOoyB,6BAAA,CAA+BpyB,KAAK;EAC7C;EACAqyB,uBAAuBryB,KAAA,EAAO;IAC5B,OAAOsyB,0BAAA,CAA4BtyB,KAAK;EAC1C;EACAuyB,+BAA+BvyB,KAAA,EAAO;IACpC,OAAOwyB,kCAAA,CAAoCxyB,KAAK;EAClD;AAaF;AAXIgxB,iBAAA,CAAKxnB,IAAA,GAAO,SAASipB,yBAAyB5uB,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKmtB,iBAAA,EAAqBtnB,QAAA,CAAS2J,QAAQ,CAAC;AAC1D;AAGA2d,iBAAA,CAAKrnB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOisB,iBAAA;EACPnnB,OAAA,EAASmnB,iBAAA,CAAiBxnB,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AAhEL,IAAMua,gBAAA,GAANG,iBAAA;AAAA,CAmEC,MAAM;EACL,CAAC,OAAOtwB,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8mB,gBAAA,EAAkB,CAAC;IACzF/pB,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAQH,IAAIqf,oBAAA;AAAA,CACH,UAAUA,uBAAsB;EAC/BA,sBAAqBA,sBAAqB,qBAAqB,IAAI,CAAC,IAAI;EACxEA,sBAAqBA,sBAAqB,0BAA0B,IAAI,CAAC,IAAI;AAC/E,GAAGA,oBAAA,KAAyBA,oBAAA,GAAuB,CAAC,EAAE;AA+HtD,IAAMC,OAAA,GAAU,IAAIC,OAAA,CAAQ,SAAS;;;ACrtErC,IAAMC,cAAA,GAAiB;AAMvB,IAAMC,aAAA,GAA+B,eAAAC,MAAA,CAAO,YAAY;AACxD,IAAMC,WAAA,GAAN,MAAkB;EAChB/zB,YAAYiE,MAAA,EAAQ;IAClB,KAAKA,MAAA,GAASA,MAAA,IAAU,CAAC;EAC3B;EACA/C,IAAIP,IAAA,EAAM;IACR,OAAOgB,MAAA,CAAOqyB,SAAA,CAAUpD,cAAA,CAAe1C,IAAA,CAAK,KAAKjqB,MAAA,EAAQtD,IAAI;EAC/D;EACAQ,IAAIR,IAAA,EAAM;IACR,IAAI,KAAKO,GAAA,CAAIP,IAAI,GAAG;MAClB,MAAM8D,CAAA,GAAI,KAAKR,MAAA,CAAOtD,IAAI;MAC1B,OAAOqB,KAAA,CAAMkB,OAAA,CAAQuB,CAAC,IAAIA,CAAA,CAAE,CAAC,IAAIA,CAAA;IACnC;IACA,OAAO;EACT;EACAvC,OAAOvB,IAAA,EAAM;IACX,IAAI,KAAKO,GAAA,CAAIP,IAAI,GAAG;MAClB,MAAM8D,CAAA,GAAI,KAAKR,MAAA,CAAOtD,IAAI;MAC1B,OAAOqB,KAAA,CAAMkB,OAAA,CAAQuB,CAAC,IAAIA,CAAA,GAAI,CAACA,CAAC;IAClC;IACA,OAAO,EAAC;EACV;EACA,IAAI1C,KAAA,EAAO;IACT,OAAOJ,MAAA,CAAOI,IAAA,CAAK,KAAKkC,MAAM;EAChC;AACF;AAQA,SAASgwB,kBAAkBhwB,MAAA,EAAQ;EACjC,OAAO,IAAI8vB,WAAA,CAAY9vB,MAAM;AAC/B;AAgBA,SAASiwB,kBAAkBC,QAAA,EAAUC,YAAA,EAAcC,KAAA,EAAO;EACxD,MAAMrK,KAAA,GAAQqK,KAAA,CAAMC,IAAA,CAAKh0B,KAAA,CAAM,GAAG;EAClC,IAAI0pB,KAAA,CAAMloB,MAAA,GAASqyB,QAAA,CAASryB,MAAA,EAAQ;IAElC,OAAO;EACT;EACA,IAAIuyB,KAAA,CAAME,SAAA,KAAc,WAAWH,YAAA,CAAaI,WAAA,CAAY,KAAKxK,KAAA,CAAMloB,MAAA,GAASqyB,QAAA,CAASryB,MAAA,GAAS;IAEhG,OAAO;EACT;EACA,MAAM2yB,SAAA,GAAY,CAAC;EAEnB,SAASh0B,KAAA,GAAQ,GAAGA,KAAA,GAAQupB,KAAA,CAAMloB,MAAA,EAAQrB,KAAA,IAAS;IACjD,MAAMi0B,IAAA,GAAO1K,KAAA,CAAMvpB,KAAK;IACxB,MAAMk0B,OAAA,GAAUR,QAAA,CAAS1zB,KAAK;IAC9B,MAAMm0B,WAAA,GAAcF,IAAA,CAAKlc,UAAA,CAAW,GAAG;IACvC,IAAIoc,WAAA,EAAa;MACfH,SAAA,CAAUC,IAAA,CAAKG,SAAA,CAAU,CAAC,CAAC,IAAIF,OAAA;IACjC,WAAWD,IAAA,KAASC,OAAA,CAAQL,IAAA,EAAM;MAEhC,OAAO;IACT;EACF;EACA,OAAO;IACLQ,QAAA,EAAUX,QAAA,CAASvzB,KAAA,CAAM,GAAGopB,KAAA,CAAMloB,MAAM;IACxC2yB;EACF;AACF;AACA,SAASM,mBAAmBC,CAAA,EAAGC,CAAA,EAAG;EAChC,IAAID,CAAA,CAAElzB,MAAA,KAAWmzB,CAAA,CAAEnzB,MAAA,EAAQ,OAAO;EAClC,SAASozB,CAAA,GAAI,GAAGA,CAAA,GAAIF,CAAA,CAAElzB,MAAA,EAAQ,EAAEozB,CAAA,EAAG;IACjC,IAAI,CAACC,YAAA,CAAaH,CAAA,CAAEE,CAAC,GAAGD,CAAA,CAAEC,CAAC,CAAC,GAAG,OAAO;EACxC;EACA,OAAO;AACT;AACA,SAASC,aAAaH,CAAA,EAAGC,CAAA,EAAG;EAG1B,MAAMG,EAAA,GAAKJ,CAAA,GAAIK,WAAA,CAAYL,CAAC,IAAI;EAChC,MAAMM,EAAA,GAAKL,CAAA,GAAII,WAAA,CAAYJ,CAAC,IAAI;EAChC,IAAI,CAACG,EAAA,IAAM,CAACE,EAAA,IAAMF,EAAA,CAAGtzB,MAAA,IAAUwzB,EAAA,CAAGxzB,MAAA,EAAQ;IACxC,OAAO;EACT;EACA,IAAIjB,GAAA;EACJ,SAASq0B,CAAA,GAAI,GAAGA,CAAA,GAAIE,EAAA,CAAGtzB,MAAA,EAAQozB,CAAA,IAAK;IAClCr0B,GAAA,GAAMu0B,EAAA,CAAGF,CAAC;IACV,IAAI,CAACK,mBAAA,CAAoBP,CAAA,CAAEn0B,GAAG,GAAGo0B,CAAA,CAAEp0B,GAAG,CAAC,GAAG;MACxC,OAAO;IACT;EACF;EACA,OAAO;AACT;AAIA,SAASw0B,YAAYG,GAAA,EAAK;EACxB,OAAO,CAAC,GAAG7zB,MAAA,CAAOI,IAAA,CAAKyzB,GAAG,GAAG,GAAG7zB,MAAA,CAAO8zB,qBAAA,CAAsBD,GAAG,CAAC;AACnE;AAIA,SAASD,oBAAoBP,CAAA,EAAGC,CAAA,EAAG;EACjC,IAAIjzB,KAAA,CAAMkB,OAAA,CAAQ8xB,CAAC,KAAKhzB,KAAA,CAAMkB,OAAA,CAAQ+xB,CAAC,GAAG;IACxC,IAAID,CAAA,CAAElzB,MAAA,KAAWmzB,CAAA,CAAEnzB,MAAA,EAAQ,OAAO;IAClC,MAAM4zB,OAAA,GAAU,CAAC,GAAGV,CAAC,EAAEW,IAAA,CAAK;IAC5B,MAAMC,OAAA,GAAU,CAAC,GAAGX,CAAC,EAAEU,IAAA,CAAK;IAC5B,OAAOD,OAAA,CAAQ3G,KAAA,CAAM,CAAC1qB,GAAA,EAAK5D,KAAA,KAAUm1B,OAAA,CAAQn1B,KAAK,MAAM4D,GAAG;EAC7D,OAAO;IACL,OAAO2wB,CAAA,KAAMC,CAAA;EACf;AACF;AAIA,SAASY,MAAKb,CAAA,EAAG;EACf,OAAOA,CAAA,CAAElzB,MAAA,GAAS,IAAIkzB,CAAA,CAAEA,CAAA,CAAElzB,MAAA,GAAS,CAAC,IAAI;AAC1C;AACA,SAASg0B,mBAAmB/0B,KAAA,EAAO;EACjC,IAAIg1B,YAAA,CAAah1B,KAAK,GAAG;IACvB,OAAOA,KAAA;EACT;EACA,IAAIi1B,SAAA,CAAWj1B,KAAK,GAAG;IAIrB,OAAOkB,IAAA,CAAK6Q,OAAA,CAAQC,OAAA,CAAQhS,KAAK,CAAC;EACpC;EACA,OAAO4I,EAAA,CAAG5I,KAAK;AACjB;AACA,IAAMk1B,cAAA,GAAiB;EACrB,SAASC,kBAAA;EACT,UAAUC;AACZ;AACA,IAAMC,eAAA,GAAkB;EACtB,SAASC,WAAA;EACT,UAAUC,cAAA;EACV,WAAWC,CAAA,KAAM;AACnB;AACA,SAASC,aAAaC,SAAA,EAAWC,SAAA,EAAW1xB,OAAA,EAAS;EACnD,OAAOixB,cAAA,CAAejxB,OAAA,CAAQ2xB,KAAK,EAAEF,SAAA,CAAUG,IAAA,EAAMF,SAAA,CAAUE,IAAA,EAAM5xB,OAAA,CAAQ6xB,YAAY,KAAKT,eAAA,CAAgBpxB,OAAA,CAAQ8xB,WAAW,EAAEL,SAAA,CAAUK,WAAA,EAAaJ,SAAA,CAAUI,WAAW,KAAK,EAAE9xB,OAAA,CAAQ+xB,QAAA,KAAa,WAAWN,SAAA,CAAUM,QAAA,KAAaL,SAAA,CAAUK,QAAA;AACzP;AACA,SAASV,YAAYI,SAAA,EAAWC,SAAA,EAAW;EAEzC,OAAOvB,YAAA,CAAasB,SAAA,EAAWC,SAAS;AAC1C;AACA,SAASR,mBAAmBO,SAAA,EAAWC,SAAA,EAAWG,YAAA,EAAc;EAC9D,IAAI,CAACG,SAAA,CAAUP,SAAA,CAAUtC,QAAA,EAAUuC,SAAA,CAAUvC,QAAQ,GAAG,OAAO;EAC/D,IAAI,CAAC8C,iBAAA,CAAkBR,SAAA,CAAUtC,QAAA,EAAUuC,SAAA,CAAUvC,QAAA,EAAU0C,YAAY,GAAG;IAC5E,OAAO;EACT;EACA,IAAIJ,SAAA,CAAUS,gBAAA,KAAqBR,SAAA,CAAUQ,gBAAA,EAAkB,OAAO;EACtE,WAAWC,CAAA,IAAKT,SAAA,CAAUU,QAAA,EAAU;IAClC,IAAI,CAACX,SAAA,CAAUW,QAAA,CAASD,CAAC,GAAG,OAAO;IACnC,IAAI,CAACjB,kBAAA,CAAmBO,SAAA,CAAUW,QAAA,CAASD,CAAC,GAAGT,SAAA,CAAUU,QAAA,CAASD,CAAC,GAAGN,YAAY,GAAG,OAAO;EAC9F;EACA,OAAO;AACT;AACA,SAASP,eAAeG,SAAA,EAAWC,SAAA,EAAW;EAC5C,OAAO/0B,MAAA,CAAOI,IAAA,CAAK20B,SAAS,EAAE50B,MAAA,IAAUH,MAAA,CAAOI,IAAA,CAAK00B,SAAS,EAAE30B,MAAA,IAAUH,MAAA,CAAOI,IAAA,CAAK20B,SAAS,EAAE3H,KAAA,CAAMluB,GAAA,IAAO00B,mBAAA,CAAoBkB,SAAA,CAAU51B,GAAG,GAAG61B,SAAA,CAAU71B,GAAG,CAAC,CAAC;AAClK;AACA,SAASs1B,qBAAqBM,SAAA,EAAWC,SAAA,EAAWG,YAAA,EAAc;EAChE,OAAOQ,0BAAA,CAA2BZ,SAAA,EAAWC,SAAA,EAAWA,SAAA,CAAUvC,QAAA,EAAU0C,YAAY;AAC1F;AACA,SAASQ,2BAA2BZ,SAAA,EAAWC,SAAA,EAAWY,cAAA,EAAgBT,YAAA,EAAc;EACtF,IAAIJ,SAAA,CAAUtC,QAAA,CAASryB,MAAA,GAASw1B,cAAA,CAAex1B,MAAA,EAAQ;IACrD,MAAM2L,OAAA,GAAUgpB,SAAA,CAAUtC,QAAA,CAASvzB,KAAA,CAAM,GAAG02B,cAAA,CAAex1B,MAAM;IACjE,IAAI,CAACk1B,SAAA,CAAUvpB,OAAA,EAAS6pB,cAAc,GAAG,OAAO;IAChD,IAAIZ,SAAA,CAAUlC,WAAA,CAAY,GAAG,OAAO;IACpC,IAAI,CAACyC,iBAAA,CAAkBxpB,OAAA,EAAS6pB,cAAA,EAAgBT,YAAY,GAAG,OAAO;IACtE,OAAO;EACT,WAAWJ,SAAA,CAAUtC,QAAA,CAASryB,MAAA,KAAWw1B,cAAA,CAAex1B,MAAA,EAAQ;IAC9D,IAAI,CAACk1B,SAAA,CAAUP,SAAA,CAAUtC,QAAA,EAAUmD,cAAc,GAAG,OAAO;IAC3D,IAAI,CAACL,iBAAA,CAAkBR,SAAA,CAAUtC,QAAA,EAAUmD,cAAA,EAAgBT,YAAY,GAAG,OAAO;IACjF,WAAWM,CAAA,IAAKT,SAAA,CAAUU,QAAA,EAAU;MAClC,IAAI,CAACX,SAAA,CAAUW,QAAA,CAASD,CAAC,GAAG,OAAO;MACnC,IAAI,CAAChB,oBAAA,CAAqBM,SAAA,CAAUW,QAAA,CAASD,CAAC,GAAGT,SAAA,CAAUU,QAAA,CAASD,CAAC,GAAGN,YAAY,GAAG;QACrF,OAAO;MACT;IACF;IACA,OAAO;EACT,OAAO;IACL,MAAMppB,OAAA,GAAU6pB,cAAA,CAAe12B,KAAA,CAAM,GAAG61B,SAAA,CAAUtC,QAAA,CAASryB,MAAM;IACjE,MAAMgL,IAAA,GAAOwqB,cAAA,CAAe12B,KAAA,CAAM61B,SAAA,CAAUtC,QAAA,CAASryB,MAAM;IAC3D,IAAI,CAACk1B,SAAA,CAAUP,SAAA,CAAUtC,QAAA,EAAU1mB,OAAO,GAAG,OAAO;IACpD,IAAI,CAACwpB,iBAAA,CAAkBR,SAAA,CAAUtC,QAAA,EAAU1mB,OAAA,EAASopB,YAAY,GAAG,OAAO;IAC1E,IAAI,CAACJ,SAAA,CAAUW,QAAA,CAASxD,cAAc,GAAG,OAAO;IAChD,OAAOyD,0BAAA,CAA2BZ,SAAA,CAAUW,QAAA,CAASxD,cAAc,GAAG8C,SAAA,EAAW5pB,IAAA,EAAM+pB,YAAY;EACrG;AACF;AACA,SAASI,kBAAkBM,cAAA,EAAgBD,cAAA,EAAgBtyB,OAAA,EAAS;EAClE,OAAOsyB,cAAA,CAAevI,KAAA,CAAM,CAACyI,gBAAA,EAAkBtC,CAAA,KAAM;IACnD,OAAOkB,eAAA,CAAgBpxB,OAAO,EAAEuyB,cAAA,CAAerC,CAAC,EAAEuC,UAAA,EAAYD,gBAAA,CAAiBC,UAAU;EAC3F,CAAC;AACH;AA+BA,IAAMC,OAAA,GAAN,MAAc;EACZ13B,YACA42B,IAAA,GAAO,IAAIe,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC,GACjCb,WAAA,GAAc,CAAC,GACfC,QAAA,GAAW,MAAM;IACf,KAAKH,IAAA,GAAOA,IAAA;IACZ,KAAKE,WAAA,GAAcA,WAAA;IACnB,KAAKC,QAAA,GAAWA,QAAA;IAChB,IAAI,OAAOt1B,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAIm1B,IAAA,CAAKzC,QAAA,CAASryB,MAAA,GAAS,GAAG;QAC5B,MAAM,IAAIwT,YAAA,CAAc,MAAsD,2JAAgK;MAChP;IACF;EACF;EACA,IAAIsiB,cAAA,EAAgB;IAClB,KAAKC,cAAA,KAAmB5D,iBAAA,CAAkB,KAAK6C,WAAW;IAC1D,OAAO,KAAKe,cAAA;EACd;EAAA;EAEAz0B,SAAA,EAAW;IACT,OAAO00B,kBAAA,CAAmBC,SAAA,CAAU,IAAI;EAC1C;AACF;AAUA,IAAMJ,eAAA,GAAN,MAAsB;EACpB33B,YACAm0B,QAAA,EACAiD,QAAA,EAAU;IACR,KAAKjD,QAAA,GAAWA,QAAA;IAChB,KAAKiD,QAAA,GAAWA,QAAA;IAEhB,KAAKjR,MAAA,GAAS;IACdxkB,MAAA,CAAOJ,MAAA,CAAO61B,QAAQ,EAAE72B,OAAA,CAAQkE,CAAA,IAAKA,CAAA,CAAE0hB,MAAA,GAAS,IAAI;EACtD;EAAA;EAEAqO,YAAA,EAAc;IACZ,OAAO,KAAK0C,gBAAA,GAAmB;EACjC;EAAA;EAEA,IAAIA,iBAAA,EAAmB;IACrB,OAAOv1B,MAAA,CAAOI,IAAA,CAAK,KAAKq1B,QAAQ,EAAEt1B,MAAA;EACpC;EAAA;EAEAsB,SAAA,EAAW;IACT,OAAO40B,cAAA,CAAe,IAAI;EAC5B;AACF;AA2BA,IAAMC,UAAA,GAAN,MAAiB;EACfj4B,YACAs0B,IAAA,EACAmD,UAAA,EAAY;IACV,KAAKnD,IAAA,GAAOA,IAAA;IACZ,KAAKmD,UAAA,GAAaA,UAAA;EACpB;EACA,IAAIS,aAAA,EAAe;IACjB,KAAKC,aAAA,KAAkBlE,iBAAA,CAAkB,KAAKwD,UAAU;IACxD,OAAO,KAAKU,aAAA;EACd;EAAA;EAEA/0B,SAAA,EAAW;IACT,OAAOg1B,aAAA,CAAc,IAAI;EAC3B;AACF;AACA,SAASC,cAAcC,EAAA,EAAIC,EAAA,EAAI;EAC7B,OAAOvB,SAAA,CAAUsB,EAAA,EAAIC,EAAE,KAAKD,EAAA,CAAGvJ,KAAA,CAAM,CAACiG,CAAA,EAAGE,CAAA,KAAMC,YAAA,CAAaH,CAAA,CAAEyC,UAAA,EAAYc,EAAA,CAAGrD,CAAC,EAAEuC,UAAU,CAAC;AAC7F;AACA,SAAST,UAAUsB,EAAA,EAAIC,EAAA,EAAI;EACzB,IAAID,EAAA,CAAGx2B,MAAA,KAAWy2B,EAAA,CAAGz2B,MAAA,EAAQ,OAAO;EACpC,OAAOw2B,EAAA,CAAGvJ,KAAA,CAAM,CAACiG,CAAA,EAAGE,CAAA,KAAMF,CAAA,CAAEV,IAAA,KAASiE,EAAA,CAAGrD,CAAC,EAAEZ,IAAI;AACjD;AACA,SAASkE,qBAAqB7D,OAAA,EAAStxB,EAAA,EAAI;EACzC,IAAIiC,GAAA,GAAM,EAAC;EACX3D,MAAA,CAAOC,OAAA,CAAQ+yB,OAAA,CAAQyC,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACk4B,WAAA,EAAaC,KAAK,MAAM;IACjE,IAAID,WAAA,KAAgB7E,cAAA,EAAgB;MAClCtuB,GAAA,GAAMA,GAAA,CAAI1C,MAAA,CAAOS,EAAA,CAAGq1B,KAAA,EAAOD,WAAW,CAAC;IACzC;EACF,CAAC;EACD92B,MAAA,CAAOC,OAAA,CAAQ+yB,OAAA,CAAQyC,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACk4B,WAAA,EAAaC,KAAK,MAAM;IACjE,IAAID,WAAA,KAAgB7E,cAAA,EAAgB;MAClCtuB,GAAA,GAAMA,GAAA,CAAI1C,MAAA,CAAOS,EAAA,CAAGq1B,KAAA,EAAOD,WAAW,CAAC;IACzC;EACF,CAAC;EACD,OAAOnzB,GAAA;AACT;AAaA,IAAMqzB,cAAA,GAAN,MAAMA,cAAA,CAAc,EAapB;AAXIA,cAAA,CAAKpuB,IAAA,GAAO,SAASquB,sBAAsBh0B,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK+zB,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKjuB,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO6yB,cAAA;EACP/tB,OAAA,EAASA,CAAA,MAAO,MAAM,IAAIiuB,oBAAA,CAAqB,GAAG;EAClDxhB,UAAA,EAAY;AACd,CAAC;AAXL,IAAMyhB,aAAA,GAANH,cAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAOl3B,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBguB,aAAA,EAAe,CAAC;IACtFjxB,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM,IAAI0e,oBAAA,CAAqB;IAC7C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAmBH,IAAMA,oBAAA,GAAN,MAA2B;EAAA;EAEzBlqB,MAAM/H,GAAA,EAAK;IACT,MAAMmyB,CAAA,GAAI,IAAIC,SAAA,CAAUpyB,GAAG;IAC3B,OAAO,IAAI8wB,OAAA,CAAQqB,CAAA,CAAEE,gBAAA,CAAiB,GAAGF,CAAA,CAAEG,gBAAA,CAAiB,GAAGH,CAAA,CAAEI,aAAA,CAAc,CAAC;EAClF;EAAA;EAEApB,UAAUqB,OAAM;IACd,MAAMzE,OAAA,GAAU,IAAI0E,gBAAA,CAAiBD,MAAKxC,IAAA,EAAM,IAAI,CAAC;IACrD,MAAM0C,SAAQC,oBAAA,CAAqBH,MAAKtC,WAAW;IACnD,MAAMC,QAAA,GAAW,OAAOqC,MAAKrC,QAAA,KAAa,WAAW,IAAIyC,iBAAA,CAAkBJ,MAAKrC,QAAQ,CAAC,KAAK;IAC9F,OAAO,GAAGpC,OAAO,GAAG2E,MAAK,GAAGvC,QAAQ;EACtC;AACF;AACA,IAAMe,kBAAA,GAAqB,IAAIe,oBAAA,CAAqB;AACpD,SAASb,eAAerD,OAAA,EAAS;EAC/B,OAAOA,OAAA,CAAQR,QAAA,CAAShxB,GAAA,CAAI41B,CAAA,IAAKX,aAAA,CAAcW,CAAC,CAAC,EAAErzB,IAAA,CAAK,GAAG;AAC7D;AACA,SAAS2zB,iBAAiB1E,OAAA,EAASiC,IAAA,EAAM;EACvC,IAAI,CAACjC,OAAA,CAAQH,WAAA,CAAY,GAAG;IAC1B,OAAOwD,cAAA,CAAerD,OAAO;EAC/B;EACA,IAAIiC,IAAA,EAAM;IACR,MAAM6C,OAAA,GAAU9E,OAAA,CAAQyC,QAAA,CAASxD,cAAc,IAAIyF,gBAAA,CAAiB1E,OAAA,CAAQyC,QAAA,CAASxD,cAAc,GAAG,KAAK,IAAI;IAC/G,MAAMwD,QAAA,GAAW,EAAC;IAClBz1B,MAAA,CAAOC,OAAA,CAAQ+yB,OAAA,CAAQyC,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACm5B,CAAA,EAAGj1B,CAAC,MAAM;MACnD,IAAIi1B,CAAA,KAAM9F,cAAA,EAAgB;QACxBwD,QAAA,CAASh2B,IAAA,CAAK,GAAGs4B,CAAC,IAAIL,gBAAA,CAAiB50B,CAAA,EAAG,KAAK,CAAC,EAAE;MACpD;IACF,CAAC;IACD,OAAO2yB,QAAA,CAASt1B,MAAA,GAAS,IAAI,GAAG23B,OAAO,IAAIrC,QAAA,CAAS1xB,IAAA,CAAK,IAAI,CAAC,MAAM+zB,OAAA;EACtE,OAAO;IACL,MAAMrC,QAAA,GAAWoB,oBAAA,CAAqB7D,OAAA,EAAS,CAAClwB,CAAA,EAAGi1B,CAAA,KAAM;MACvD,IAAIA,CAAA,KAAM9F,cAAA,EAAgB;QACxB,OAAO,CAACyF,gBAAA,CAAiB1E,OAAA,CAAQyC,QAAA,CAASxD,cAAc,GAAG,KAAK,CAAC;MACnE;MACA,OAAO,CAAC,GAAG8F,CAAC,IAAIL,gBAAA,CAAiB50B,CAAA,EAAG,KAAK,CAAC,EAAE;IAC9C,CAAC;IAED,IAAI9C,MAAA,CAAOI,IAAA,CAAK4yB,OAAA,CAAQyC,QAAQ,EAAEt1B,MAAA,KAAW,KAAK6yB,OAAA,CAAQyC,QAAA,CAASxD,cAAc,KAAK,MAAM;MAC1F,OAAO,GAAGoE,cAAA,CAAerD,OAAO,CAAC,IAAIyC,QAAA,CAAS,CAAC,CAAC;IAClD;IACA,OAAO,GAAGY,cAAA,CAAerD,OAAO,CAAC,KAAKyC,QAAA,CAAS1xB,IAAA,CAAK,IAAI,CAAC;EAC3D;AACF;AAOA,SAASi0B,gBAAgBh1B,CAAA,EAAG;EAC1B,OAAOD,kBAAA,CAAmBC,CAAC,EAAET,OAAA,CAAQ,QAAQ,GAAG,EAAEA,OAAA,CAAQ,SAAS,GAAG,EAAEA,OAAA,CAAQ,QAAQ,GAAG,EAAEA,OAAA,CAAQ,SAAS,GAAG;AACnH;AAOA,SAAS01B,eAAej1B,CAAA,EAAG;EACzB,OAAOg1B,eAAA,CAAgBh1B,CAAC,EAAET,OAAA,CAAQ,SAAS,GAAG;AAChD;AAOA,SAASs1B,kBAAkB70B,CAAA,EAAG;EAC5B,OAAOk1B,SAAA,CAAUl1B,CAAC;AACpB;AAQA,SAASm1B,iBAAiBn1B,CAAA,EAAG;EAC3B,OAAOg1B,eAAA,CAAgBh1B,CAAC,EAAET,OAAA,CAAQ,OAAO,KAAK,EAAEA,OAAA,CAAQ,OAAO,KAAK,EAAEA,OAAA,CAAQ,SAAS,GAAG;AAC5F;AACA,SAAS4J,OAAOnJ,CAAA,EAAG;EACjB,OAAOf,kBAAA,CAAmBe,CAAC;AAC7B;AAGA,SAASo1B,YAAYp1B,CAAA,EAAG;EACtB,OAAOmJ,MAAA,CAAOnJ,CAAA,CAAET,OAAA,CAAQ,OAAO,KAAK,CAAC;AACvC;AACA,SAASk0B,cAAc9D,IAAA,EAAM;EAC3B,OAAO,GAAGwF,gBAAA,CAAiBxF,IAAA,CAAKA,IAAI,CAAC,GAAG0F,qBAAA,CAAsB1F,IAAA,CAAKmD,UAAU,CAAC;AAChF;AACA,SAASuC,sBAAsB/1B,MAAA,EAAQ;EACrC,OAAOtC,MAAA,CAAOC,OAAA,CAAQqC,MAAM,EAAEd,GAAA,CAAI,CAAC,CAACtC,GAAA,EAAKE,KAAK,MAAM,IAAI+4B,gBAAA,CAAiBj5B,GAAG,CAAC,IAAIi5B,gBAAA,CAAiB/4B,KAAK,CAAC,EAAE,EAAE2E,IAAA,CAAK,EAAE;AACrH;AACA,SAAS6zB,qBAAqBt1B,MAAA,EAAQ;EACpC,MAAMg2B,SAAA,GAAYt4B,MAAA,CAAOC,OAAA,CAAQqC,MAAM,EAAEd,GAAA,CAAI,CAAC,CAACxC,IAAA,EAAMI,KAAK,MAAM;IAC9D,OAAOiB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,IAAIA,KAAA,CAAMoC,GAAA,CAAIsB,CAAA,IAAK,GAAGm1B,cAAA,CAAej5B,IAAI,CAAC,IAAIi5B,cAAA,CAAen1B,CAAC,CAAC,EAAE,EAAEiB,IAAA,CAAK,GAAG,IAAI,GAAGk0B,cAAA,CAAej5B,IAAI,CAAC,IAAIi5B,cAAA,CAAe74B,KAAK,CAAC;EAC3J,CAAC,EAAEiC,MAAA,CAAO2B,CAAA,IAAKA,CAAC;EAChB,OAAOs1B,SAAA,CAAUn4B,MAAA,GAAS,IAAIm4B,SAAA,CAAUv0B,IAAA,CAAK,GAAG,CAAC,KAAK;AACxD;AACA,IAAMw0B,UAAA,GAAa;AACnB,SAASC,cAAcC,GAAA,EAAK;EAC1B,MAAMC,SAAQD,GAAA,CAAIC,KAAA,CAAMH,UAAU;EAClC,OAAOG,SAAQA,OAAM,CAAC,IAAI;AAC5B;AACA,IAAMC,uBAAA,GAA0B;AAChC,SAASC,uBAAuBH,GAAA,EAAK;EACnC,MAAMC,SAAQD,GAAA,CAAIC,KAAA,CAAMC,uBAAuB;EAC/C,OAAOD,SAAQA,OAAM,CAAC,IAAI;AAC5B;AACA,IAAMG,cAAA,GAAiB;AAEvB,SAASC,iBAAiBL,GAAA,EAAK;EAC7B,MAAMC,SAAQD,GAAA,CAAIC,KAAA,CAAMG,cAAc;EACtC,OAAOH,SAAQA,OAAM,CAAC,IAAI;AAC5B;AACA,IAAMK,oBAAA,GAAuB;AAE7B,SAASC,wBAAwBP,GAAA,EAAK;EACpC,MAAMC,SAAQD,GAAA,CAAIC,KAAA,CAAMK,oBAAoB;EAC5C,OAAOL,SAAQA,OAAM,CAAC,IAAI;AAC5B;AACA,IAAMrB,SAAA,GAAN,MAAgB;EACdh5B,YAAY4G,GAAA,EAAK;IACf,KAAKA,GAAA,GAAMA,GAAA;IACX,KAAKg0B,SAAA,GAAYh0B,GAAA;EACnB;EACAqyB,iBAAA,EAAmB;IACjB,KAAK4B,eAAA,CAAgB,GAAG;IACxB,IAAI,KAAKD,SAAA,KAAc,MAAM,KAAKE,cAAA,CAAe,GAAG,KAAK,KAAKA,cAAA,CAAe,GAAG,GAAG;MACjF,OAAO,IAAInD,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC;IACnC;IAEA,OAAO,IAAIA,eAAA,CAAgB,EAAC,EAAG,KAAKoD,aAAA,CAAc,CAAC;EACrD;EACA7B,iBAAA,EAAmB;IACjB,MAAMj1B,MAAA,GAAS,CAAC;IAChB,IAAI,KAAK42B,eAAA,CAAgB,GAAG,GAAG;MAC7B,GAAG;QACD,KAAKG,eAAA,CAAgB/2B,MAAM;MAC7B,SAAS,KAAK42B,eAAA,CAAgB,GAAG;IACnC;IACA,OAAO52B,MAAA;EACT;EACAk1B,cAAA,EAAgB;IACd,OAAO,KAAK0B,eAAA,CAAgB,GAAG,IAAIj3B,kBAAA,CAAmB,KAAKg3B,SAAS,IAAI;EAC1E;EACAG,cAAA,EAAgB;IACd,IAAI,KAAKH,SAAA,KAAc,IAAI;MACzB,OAAO,CAAC;IACV;IACA,KAAKC,eAAA,CAAgB,GAAG;IACxB,MAAM1G,QAAA,GAAW,EAAC;IAClB,IAAI,CAAC,KAAK2G,cAAA,CAAe,GAAG,GAAG;MAC7B3G,QAAA,CAAS/yB,IAAA,CAAK,KAAK65B,YAAA,CAAa,CAAC;IACnC;IACA,OAAO,KAAKH,cAAA,CAAe,GAAG,KAAK,CAAC,KAAKA,cAAA,CAAe,IAAI,KAAK,CAAC,KAAKA,cAAA,CAAe,IAAI,GAAG;MAC3F,KAAKI,OAAA,CAAQ,GAAG;MAChB/G,QAAA,CAAS/yB,IAAA,CAAK,KAAK65B,YAAA,CAAa,CAAC;IACnC;IACA,IAAI7D,QAAA,GAAW,CAAC;IAChB,IAAI,KAAK0D,cAAA,CAAe,IAAI,GAAG;MAC7B,KAAKI,OAAA,CAAQ,GAAG;MAChB9D,QAAA,GAAW,KAAK+D,WAAA,CAAY,IAAI;IAClC;IACA,IAAI71B,GAAA,GAAM,CAAC;IACX,IAAI,KAAKw1B,cAAA,CAAe,GAAG,GAAG;MAC5Bx1B,GAAA,GAAM,KAAK61B,WAAA,CAAY,KAAK;IAC9B;IACA,IAAIhH,QAAA,CAASryB,MAAA,GAAS,KAAKH,MAAA,CAAOI,IAAA,CAAKq1B,QAAQ,EAAEt1B,MAAA,GAAS,GAAG;MAC3DwD,GAAA,CAAIsuB,cAAc,IAAI,IAAI+D,eAAA,CAAgBxD,QAAA,EAAUiD,QAAQ;IAC9D;IACA,OAAO9xB,GAAA;EACT;EAAA;EAAA;EAGA21B,aAAA,EAAe;IACb,MAAM3G,IAAA,GAAO6F,aAAA,CAAc,KAAKS,SAAS;IACzC,IAAItG,IAAA,KAAS,MAAM,KAAKwG,cAAA,CAAe,GAAG,GAAG;MAC3C,MAAM,IAAIxlB,YAAA,CAAc,OAAqD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,mDAAmD,KAAKm5B,SAAS,IAAI;IACtM;IACA,KAAKM,OAAA,CAAQ5G,IAAI;IACjB,OAAO,IAAI2D,UAAA,CAAWnqB,MAAA,CAAOwmB,IAAI,GAAG,KAAK8G,iBAAA,CAAkB,CAAC;EAC9D;EACAA,kBAAA,EAAoB;IAClB,MAAMn3B,MAAA,GAAS,CAAC;IAChB,OAAO,KAAK42B,eAAA,CAAgB,GAAG,GAAG;MAChC,KAAKQ,UAAA,CAAWp3B,MAAM;IACxB;IACA,OAAOA,MAAA;EACT;EACAo3B,WAAWp3B,MAAA,EAAQ;IACjB,MAAMpD,GAAA,GAAM05B,sBAAA,CAAuB,KAAKK,SAAS;IACjD,IAAI,CAAC/5B,GAAA,EAAK;MACR;IACF;IACA,KAAKq6B,OAAA,CAAQr6B,GAAG;IAChB,IAAIE,KAAA,GAAQ;IACZ,IAAI,KAAK85B,eAAA,CAAgB,GAAG,GAAG;MAC7B,MAAMS,UAAA,GAAanB,aAAA,CAAc,KAAKS,SAAS;MAC/C,IAAIU,UAAA,EAAY;QACdv6B,KAAA,GAAQu6B,UAAA;QACR,KAAKJ,OAAA,CAAQn6B,KAAK;MACpB;IACF;IACAkD,MAAA,CAAO6J,MAAA,CAAOjN,GAAG,CAAC,IAAIiN,MAAA,CAAO/M,KAAK;EACpC;EAAA;EAEAi6B,gBAAgB/2B,MAAA,EAAQ;IACtB,MAAMpD,GAAA,GAAM45B,gBAAA,CAAiB,KAAKG,SAAS;IAC3C,IAAI,CAAC/5B,GAAA,EAAK;MACR;IACF;IACA,KAAKq6B,OAAA,CAAQr6B,GAAG;IAChB,IAAIE,KAAA,GAAQ;IACZ,IAAI,KAAK85B,eAAA,CAAgB,GAAG,GAAG;MAC7B,MAAMS,UAAA,GAAaX,uBAAA,CAAwB,KAAKC,SAAS;MACzD,IAAIU,UAAA,EAAY;QACdv6B,KAAA,GAAQu6B,UAAA;QACR,KAAKJ,OAAA,CAAQn6B,KAAK;MACpB;IACF;IACA,MAAMw6B,UAAA,GAAaxB,WAAA,CAAYl5B,GAAG;IAClC,MAAM26B,UAAA,GAAazB,WAAA,CAAYh5B,KAAK;IACpC,IAAIkD,MAAA,CAAO2sB,cAAA,CAAe2K,UAAU,GAAG;MAErC,IAAIE,UAAA,GAAax3B,MAAA,CAAOs3B,UAAU;MAClC,IAAI,CAACv5B,KAAA,CAAMkB,OAAA,CAAQu4B,UAAU,GAAG;QAC9BA,UAAA,GAAa,CAACA,UAAU;QACxBx3B,MAAA,CAAOs3B,UAAU,IAAIE,UAAA;MACvB;MACAA,UAAA,CAAWr6B,IAAA,CAAKo6B,UAAU;IAC5B,OAAO;MAELv3B,MAAA,CAAOs3B,UAAU,IAAIC,UAAA;IACvB;EACF;EAAA;EAEAL,YAAYO,YAAA,EAAc;IACxB,MAAMvH,QAAA,GAAW,CAAC;IAClB,KAAK+G,OAAA,CAAQ,GAAG;IAChB,OAAO,CAAC,KAAKL,eAAA,CAAgB,GAAG,KAAK,KAAKD,SAAA,CAAU94B,MAAA,GAAS,GAAG;MAC9D,MAAMwyB,IAAA,GAAO6F,aAAA,CAAc,KAAKS,SAAS;MACzC,MAAM9tB,IAAA,GAAO,KAAK8tB,SAAA,CAAUtG,IAAA,CAAKxyB,MAAM;MAGvC,IAAIgL,IAAA,KAAS,OAAOA,IAAA,KAAS,OAAOA,IAAA,KAAS,KAAK;QAChD,MAAM,IAAIwI,YAAA,CAAc,OAA6C,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,qBAAqB,KAAKmF,GAAG,GAAG;MACzJ;MACA,IAAI+0B,UAAA,GAAa;MACjB,IAAIrH,IAAA,CAAK5zB,OAAA,CAAQ,GAAG,IAAI,IAAI;QAC1Bi7B,UAAA,GAAarH,IAAA,CAAK1zB,KAAA,CAAM,GAAG0zB,IAAA,CAAK5zB,OAAA,CAAQ,GAAG,CAAC;QAC5C,KAAKw6B,OAAA,CAAQS,UAAU;QACvB,KAAKT,OAAA,CAAQ,GAAG;MAClB,WAAWQ,YAAA,EAAc;QACvBC,UAAA,GAAa/H,cAAA;MACf;MACA,MAAMwD,QAAA,GAAW,KAAK2D,aAAA,CAAc;MACpC5G,QAAA,CAASwH,UAAU,IAAIh6B,MAAA,CAAOI,IAAA,CAAKq1B,QAAQ,EAAEt1B,MAAA,KAAW,IAAIs1B,QAAA,CAASxD,cAAc,IAAI,IAAI+D,eAAA,CAAgB,EAAC,EAAGP,QAAQ;MACvH,KAAKyD,eAAA,CAAgB,IAAI;IAC3B;IACA,OAAO1G,QAAA;EACT;EACA2G,eAAeV,GAAA,EAAK;IAClB,OAAO,KAAKQ,SAAA,CAAUpiB,UAAA,CAAW4hB,GAAG;EACtC;EAAA;EAEAS,gBAAgBT,GAAA,EAAK;IACnB,IAAI,KAAKU,cAAA,CAAeV,GAAG,GAAG;MAC5B,KAAKQ,SAAA,GAAY,KAAKA,SAAA,CAAU/F,SAAA,CAAUuF,GAAA,CAAIt4B,MAAM;MACpD,OAAO;IACT;IACA,OAAO;EACT;EACAo5B,QAAQd,GAAA,EAAK;IACX,IAAI,CAAC,KAAKS,eAAA,CAAgBT,GAAG,GAAG;MAC9B,MAAM,IAAI9kB,YAAA,CAAc,OAAsD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,aAAa24B,GAAG,IAAI;IACtJ;EACF;AACF;AACA,SAASwB,WAAWC,aAAA,EAAe;EACjC,OAAOA,aAAA,CAAc1H,QAAA,CAASryB,MAAA,GAAS,IAAI,IAAI61B,eAAA,CAAgB,EAAC,EAAG;IACjE,CAAC/D,cAAc,GAAGiI;EACpB,CAAC,IAAIA,aAAA;AACP;AAWA,SAASC,mBAAmB1H,YAAA,EAAc;EACxC,MAAM2H,WAAA,GAAc,CAAC;EACrB,WAAW,CAACtD,WAAA,EAAaC,KAAK,KAAK/2B,MAAA,CAAOC,OAAA,CAAQwyB,YAAA,CAAagD,QAAQ,GAAG;IACxE,MAAM4E,cAAA,GAAiBF,kBAAA,CAAmBpD,KAAK;IAE/C,IAAID,WAAA,KAAgB7E,cAAA,IAAkBoI,cAAA,CAAe7H,QAAA,CAASryB,MAAA,KAAW,KAAKk6B,cAAA,CAAexH,WAAA,CAAY,GAAG;MAC1G,WAAW,CAACyH,gBAAA,EAAkBC,UAAU,KAAKv6B,MAAA,CAAOC,OAAA,CAAQo6B,cAAA,CAAe5E,QAAQ,GAAG;QACpF2E,WAAA,CAAYE,gBAAgB,IAAIC,UAAA;MAClC;IACF,WACSF,cAAA,CAAe7H,QAAA,CAASryB,MAAA,GAAS,KAAKk6B,cAAA,CAAexH,WAAA,CAAY,GAAG;MAC3EuH,WAAA,CAAYtD,WAAW,IAAIuD,cAAA;IAC7B;EACF;EACA,MAAMr3B,CAAA,GAAI,IAAIgzB,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAU4H,WAAW;EAChE,OAAOI,oBAAA,CAAqBx3B,CAAC;AAC/B;AASA,SAASw3B,qBAAqBx3B,CAAA,EAAG;EAC/B,IAAIA,CAAA,CAAEuyB,gBAAA,KAAqB,KAAKvyB,CAAA,CAAEyyB,QAAA,CAASxD,cAAc,GAAG;IAC1D,MAAMuD,CAAA,GAAIxyB,CAAA,CAAEyyB,QAAA,CAASxD,cAAc;IACnC,OAAO,IAAI+D,eAAA,CAAgBhzB,CAAA,CAAEwvB,QAAA,CAASvxB,MAAA,CAAOu0B,CAAA,CAAEhD,QAAQ,GAAGgD,CAAA,CAAEC,QAAQ;EACtE;EACA,OAAOzyB,CAAA;AACT;AACA,SAASy3B,UAAU33B,CAAA,EAAG;EACpB,OAAOA,CAAA,YAAaizB,OAAA;AACtB;AAqDA,SAAS2E,0BAA0BC,UAAA,EAAYC,QAAA,EAAUzF,WAAA,GAAc,MAAMC,QAAA,GAAW,MAAM;EAC5F,MAAMyF,yBAAA,GAA4BC,2BAAA,CAA4BH,UAAU;EACxE,OAAOI,6BAAA,CAA8BF,yBAAA,EAA2BD,QAAA,EAAUzF,WAAA,EAAaC,QAAQ;AACjG;AACA,SAAS0F,4BAA4BpI,KAAA,EAAO;EAC1C,IAAIsI,WAAA;EACJ,SAASC,qCAAqCC,YAAA,EAAc;IAC1D,MAAMC,YAAA,GAAe,CAAC;IACtB,WAAWC,aAAA,IAAiBF,YAAA,CAAazF,QAAA,EAAU;MACjD,MAAMR,IAAA,GAAOgG,oCAAA,CAAqCG,aAAa;MAC/DD,YAAA,CAAaC,aAAA,CAAcC,MAAM,IAAIpG,IAAA;IACvC;IACA,MAAMxC,YAAA,GAAe,IAAIuD,eAAA,CAAgBkF,YAAA,CAAaj2B,GAAA,EAAKk2B,YAAY;IACvE,IAAID,YAAA,KAAiBxI,KAAA,EAAO;MAC1BsI,WAAA,GAAcvI,YAAA;IAChB;IACA,OAAOA,YAAA;EACT;EACA,MAAMyH,aAAA,GAAgBe,oCAAA,CAAqCvI,KAAA,CAAMuC,IAAI;EACrE,MAAMqG,gBAAA,GAAmBrB,UAAA,CAAWC,aAAa;EACjD,OAAOc,WAAA,IAAeM,gBAAA;AACxB;AACA,SAASP,8BAA8BJ,UAAA,EAAYC,QAAA,EAAUzF,WAAA,EAAaC,QAAA,EAAU;EAClF,IAAIH,IAAA,GAAO0F,UAAA;EACX,OAAO1F,IAAA,CAAKzQ,MAAA,EAAQ;IAClByQ,IAAA,GAAOA,IAAA,CAAKzQ,MAAA;EACd;EAIA,IAAIoW,QAAA,CAASz6B,MAAA,KAAW,GAAG;IACzB,OAAOs3B,IAAA,CAAKxC,IAAA,EAAMA,IAAA,EAAMA,IAAA,EAAME,WAAA,EAAaC,QAAQ;EACrD;EACA,MAAMmG,GAAA,GAAMC,iBAAA,CAAkBZ,QAAQ;EACtC,IAAIW,GAAA,CAAIE,MAAA,CAAO,GAAG;IAChB,OAAOhE,IAAA,CAAKxC,IAAA,EAAMA,IAAA,EAAM,IAAIe,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC,GAAGb,WAAA,EAAaC,QAAQ;EAC5E;EACA,MAAM9nB,QAAA,GAAWouB,kCAAA,CAAmCH,GAAA,EAAKtG,IAAA,EAAM0F,UAAU;EACzE,MAAMgB,eAAA,GAAkBruB,QAAA,CAASsuB,eAAA,GAAkBC,0BAAA,CAA2BvuB,QAAA,CAASmlB,YAAA,EAAcnlB,QAAA,CAASxO,KAAA,EAAOy8B,GAAA,CAAIX,QAAQ,IAAIkB,kBAAA,CAAmBxuB,QAAA,CAASmlB,YAAA,EAAcnlB,QAAA,CAASxO,KAAA,EAAOy8B,GAAA,CAAIX,QAAQ;EAC3M,OAAOnD,IAAA,CAAKxC,IAAA,EAAM3nB,QAAA,CAASmlB,YAAA,EAAckJ,eAAA,EAAiBxG,WAAA,EAAaC,QAAQ;AACjF;AACA,SAAS2G,eAAeC,OAAA,EAAS;EAC/B,OAAO,OAAOA,OAAA,KAAY,YAAYA,OAAA,IAAW,QAAQ,CAACA,OAAA,CAAQC,OAAA,IAAW,CAACD,OAAA,CAAQE,WAAA;AACxF;AAKA,SAASC,qBAAqBH,OAAA,EAAS;EACrC,OAAO,OAAOA,OAAA,KAAY,YAAYA,OAAA,IAAW,QAAQA,OAAA,CAAQC,OAAA;AACnE;AACA,SAASxE,KAAK2E,OAAA,EAASC,eAAA,EAAiBV,eAAA,EAAiBxG,WAAA,EAAaC,QAAA,EAAU;EAC9E,IAAIkH,EAAA,GAAK,CAAC;EACV,IAAInH,WAAA,EAAa;IACfn1B,MAAA,CAAOC,OAAA,CAAQk1B,WAAW,EAAEv2B,OAAA,CAAQ,CAAC,CAACI,IAAA,EAAMI,KAAK,MAAM;MACrDk9B,EAAA,CAAGt9B,IAAI,IAAIqB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,IAAIA,KAAA,CAAMoC,GAAA,CAAIsB,CAAA,IAAK,GAAGA,CAAC,EAAE,IAAI,GAAG1D,KAAK;IACrE,CAAC;EACH;EACA,IAAI86B,aAAA;EACJ,IAAIkC,OAAA,KAAYC,eAAA,EAAiB;IAC/BnC,aAAA,GAAgByB,eAAA;EAClB,OAAO;IACLzB,aAAA,GAAgBqC,cAAA,CAAeH,OAAA,EAASC,eAAA,EAAiBV,eAAe;EAC1E;EACA,MAAMa,OAAA,GAAUvC,UAAA,CAAWE,kBAAA,CAAmBD,aAAa,CAAC;EAC5D,OAAO,IAAInE,OAAA,CAAQyG,OAAA,EAASF,EAAA,EAAIlH,QAAQ;AAC1C;AAQA,SAASmH,eAAezwB,OAAA,EAAS2wB,UAAA,EAAYC,UAAA,EAAY;EACvD,MAAMjH,QAAA,GAAW,CAAC;EAClBz1B,MAAA,CAAOC,OAAA,CAAQ6L,OAAA,CAAQ2pB,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACo7B,UAAA,EAAYxE,CAAC,MAAM;IAC5D,IAAIA,CAAA,KAAMiH,UAAA,EAAY;MACpBhH,QAAA,CAASuE,UAAU,IAAI0C,UAAA;IACzB,OAAO;MACLjH,QAAA,CAASuE,UAAU,IAAIuC,cAAA,CAAe/G,CAAA,EAAGiH,UAAA,EAAYC,UAAU;IACjE;EACF,CAAC;EACD,OAAO,IAAI1G,eAAA,CAAgBlqB,OAAA,CAAQ0mB,QAAA,EAAUiD,QAAQ;AACvD;AACA,IAAMkH,UAAA,GAAN,MAAiB;EACft+B,YAAYu+B,UAAA,EAAYC,kBAAA,EAAoBjC,QAAA,EAAU;IACpD,KAAKgC,UAAA,GAAaA,UAAA;IAClB,KAAKC,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKjC,QAAA,GAAWA,QAAA;IAChB,IAAIgC,UAAA,IAAchC,QAAA,CAASz6B,MAAA,GAAS,KAAK47B,cAAA,CAAenB,QAAA,CAAS,CAAC,CAAC,GAAG;MACpE,MAAM,IAAIjnB,YAAA,CAAc,OAAyD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,4CAA4C;IACjL;IACA,MAAMg9B,aAAA,GAAgBlC,QAAA,CAASlc,IAAA,CAAKyd,oBAAoB;IACxD,IAAIW,aAAA,IAAiBA,aAAA,KAAkB5I,MAAK0G,QAAQ,GAAG;MACrD,MAAM,IAAIjnB,YAAA,CAAc,OAAwD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yCAAyC;IAC7K;EACF;EACA27B,OAAA,EAAS;IACP,OAAO,KAAKmB,UAAA,IAAc,KAAKhC,QAAA,CAASz6B,MAAA,KAAW,KAAK,KAAKy6B,QAAA,CAAS,CAAC,KAAK;EAC9E;AACF;AAEA,SAASY,kBAAkBZ,QAAA,EAAU;EACnC,IAAI,OAAOA,QAAA,CAAS,CAAC,MAAM,YAAYA,QAAA,CAASz6B,MAAA,KAAW,KAAKy6B,QAAA,CAAS,CAAC,MAAM,KAAK;IACnF,OAAO,IAAI+B,UAAA,CAAW,MAAM,GAAG/B,QAAQ;EACzC;EACA,IAAIiC,kBAAA,GAAqB;EACzB,IAAID,UAAA,GAAa;EACjB,MAAMj5B,GAAA,GAAMi3B,QAAA,CAASx0B,MAAA,CAAO,CAACzC,MAAKo5B,GAAA,EAAKC,MAAA,KAAW;IAChD,IAAI,OAAOD,GAAA,KAAQ,YAAYA,GAAA,IAAO,MAAM;MAC1C,IAAIA,GAAA,CAAId,OAAA,EAAS;QACf,MAAMA,OAAA,GAAU,CAAC;QACjBj8B,MAAA,CAAOC,OAAA,CAAQ88B,GAAA,CAAId,OAAO,EAAEr9B,OAAA,CAAQ,CAAC,CAACI,IAAA,EAAM47B,SAAQ,MAAM;UACxDqB,OAAA,CAAQj9B,IAAI,IAAI,OAAO47B,cAAa,WAAWA,UAASj8B,KAAA,CAAM,GAAG,IAAIi8B;QACvE,CAAC;QACD,OAAO,CAAC,GAAGj3B,MAAK;UACds4B;QACF,CAAC;MACH;MACA,IAAIc,GAAA,CAAIb,WAAA,EAAa;QACnB,OAAO,CAAC,GAAGv4B,MAAKo5B,GAAA,CAAIb,WAAW;MACjC;IACF;IACA,IAAI,EAAE,OAAOa,GAAA,KAAQ,WAAW;MAC9B,OAAO,CAAC,GAAGp5B,MAAKo5B,GAAG;IACrB;IACA,IAAIC,MAAA,KAAW,GAAG;MAChBD,GAAA,CAAIp+B,KAAA,CAAM,GAAG,EAAEC,OAAA,CAAQ,CAACq+B,OAAA,EAASC,SAAA,KAAc;QAC7C,IAAIA,SAAA,IAAa,KAAKD,OAAA,KAAY,KAAK,CAEvC,WAAWC,SAAA,IAAa,KAAKD,OAAA,KAAY,IAAI;UAE3CL,UAAA,GAAa;QACf,WAAWK,OAAA,KAAY,MAAM;UAE3BJ,kBAAA;QACF,WAAWI,OAAA,IAAW,IAAI;UACxBt5B,KAAIlE,IAAA,CAAKw9B,OAAO;QAClB;MACF,CAAC;MACD,OAAOt5B;IACT;IACA,OAAO,CAAC,GAAGA,MAAKo5B,GAAG;EACrB,GAAG,EAAE;EACL,OAAO,IAAIJ,UAAA,CAAWC,UAAA,EAAYC,kBAAA,EAAoBl5B,GAAG;AAC3D;AACA,IAAMw5B,QAAA,GAAN,MAAe;EACb9+B,YAAYo0B,YAAA,EAAcmJ,eAAA,EAAiB98B,KAAA,EAAO;IAChD,KAAK2zB,YAAA,GAAeA,YAAA;IACpB,KAAKmJ,eAAA,GAAkBA,eAAA;IACvB,KAAK98B,KAAA,GAAQA,KAAA;EACf;AACF;AACA,SAAS48B,mCAAmCH,GAAA,EAAKtG,IAAA,EAAM3Z,MAAA,EAAQ;EAC7D,IAAIigB,GAAA,CAAIqB,UAAA,EAAY;IAClB,OAAO,IAAIO,QAAA,CAASlI,IAAA,EAAM,MAAM,CAAC;EACnC;EACA,IAAI,CAAC3Z,MAAA,EAAQ;IAKX,OAAO,IAAI6hB,QAAA,CAASlI,IAAA,EAAM,OAAOmI,GAAG;EACtC;EACA,IAAI9hB,MAAA,CAAOkJ,MAAA,KAAW,MAAM;IAC1B,OAAO,IAAI2Y,QAAA,CAAS7hB,MAAA,EAAQ,MAAM,CAAC;EACrC;EACA,MAAM+hB,QAAA,GAAWtB,cAAA,CAAeR,GAAA,CAAIX,QAAA,CAAS,CAAC,CAAC,IAAI,IAAI;EACvD,MAAM97B,KAAA,GAAQwc,MAAA,CAAOkX,QAAA,CAASryB,MAAA,GAAS,IAAIk9B,QAAA;EAC3C,OAAOC,gCAAA,CAAiChiB,MAAA,EAAQxc,KAAA,EAAOy8B,GAAA,CAAIsB,kBAAkB;AAC/E;AACA,SAASS,iCAAiCC,QAAOz+B,KAAA,EAAO+9B,kBAAA,EAAoB;EAC1E,IAAIW,CAAA,GAAID;EACR,IAAIE,EAAA,GAAK3+B,KAAA;EACT,IAAI4+B,EAAA,GAAKb,kBAAA;EACT,OAAOa,EAAA,GAAKD,EAAA,EAAI;IACdC,EAAA,IAAMD,EAAA;IACND,CAAA,GAAIA,CAAA,CAAEhZ,MAAA;IACN,IAAI,CAACgZ,CAAA,EAAG;MACN,MAAM,IAAI7pB,YAAA,CAAc,OAAkD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yBAAyB;IACvJ;IACA29B,EAAA,GAAKD,CAAA,CAAEhL,QAAA,CAASryB,MAAA;EAClB;EACA,OAAO,IAAIg9B,QAAA,CAASK,CAAA,EAAG,OAAOC,EAAA,GAAKC,EAAE;AACvC;AACA,SAASC,WAAW/C,QAAA,EAAU;EAC5B,IAAIuB,oBAAA,CAAqBvB,QAAA,CAAS,CAAC,CAAC,GAAG;IACrC,OAAOA,QAAA,CAAS,CAAC,EAAEqB,OAAA;EACrB;EACA,OAAO;IACL,CAAChK,cAAc,GAAG2I;EACpB;AACF;AACA,SAASkB,mBAAmBrJ,YAAA,EAAcmL,UAAA,EAAYhD,QAAA,EAAU;EAC9DnI,YAAA,KAAiB,IAAIuD,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC;EAC3C,IAAIvD,YAAA,CAAaD,QAAA,CAASryB,MAAA,KAAW,KAAKsyB,YAAA,CAAaI,WAAA,CAAY,GAAG;IACpE,OAAOgJ,0BAAA,CAA2BpJ,YAAA,EAAcmL,UAAA,EAAYhD,QAAQ;EACtE;EACA,MAAMiD,CAAA,GAAIC,YAAA,CAAarL,YAAA,EAAcmL,UAAA,EAAYhD,QAAQ;EACzD,MAAMmD,cAAA,GAAiBnD,QAAA,CAAS37B,KAAA,CAAM4+B,CAAA,CAAEG,YAAY;EACpD,IAAIH,CAAA,CAAEnF,KAAA,IAASmF,CAAA,CAAEI,SAAA,GAAYxL,YAAA,CAAaD,QAAA,CAASryB,MAAA,EAAQ;IACzD,MAAMq9B,CAAA,GAAI,IAAIxH,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,CAASvzB,KAAA,CAAM,GAAG4+B,CAAA,CAAEI,SAAS,GAAG,CAAC,CAAC;IAC7ET,CAAA,CAAE/H,QAAA,CAASxD,cAAc,IAAI,IAAI+D,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,CAASvzB,KAAA,CAAM4+B,CAAA,CAAEI,SAAS,GAAGxL,YAAA,CAAagD,QAAQ;IAChH,OAAOoG,0BAAA,CAA2B2B,CAAA,EAAG,GAAGO,cAAc;EACxD,WAAWF,CAAA,CAAEnF,KAAA,IAASqF,cAAA,CAAe59B,MAAA,KAAW,GAAG;IACjD,OAAO,IAAI61B,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAU,CAAC,CAAC;EACtD,WAAWqL,CAAA,CAAEnF,KAAA,IAAS,CAACjG,YAAA,CAAaI,WAAA,CAAY,GAAG;IACjD,OAAOqL,qBAAA,CAAsBzL,YAAA,EAAcmL,UAAA,EAAYhD,QAAQ;EACjE,WAAWiD,CAAA,CAAEnF,KAAA,EAAO;IAClB,OAAOmD,0BAAA,CAA2BpJ,YAAA,EAAc,GAAGsL,cAAc;EACnE,OAAO;IACL,OAAOG,qBAAA,CAAsBzL,YAAA,EAAcmL,UAAA,EAAYhD,QAAQ;EACjE;AACF;AACA,SAASiB,2BAA2BpJ,YAAA,EAAcmL,UAAA,EAAYhD,QAAA,EAAU;EACtE,IAAIA,QAAA,CAASz6B,MAAA,KAAW,GAAG;IACzB,OAAO,IAAI61B,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAU,CAAC,CAAC;EACtD,OAAO;IACL,MAAMyJ,OAAA,GAAU0B,UAAA,CAAW/C,QAAQ;IACnC,MAAMnF,QAAA,GAAW,CAAC;IAsBlB,IAAIz1B,MAAA,CAAOI,IAAA,CAAK67B,OAAO,EAAEkC,IAAA,CAAKC,CAAA,IAAKA,CAAA,KAAMnM,cAAc,KAAKQ,YAAA,CAAagD,QAAA,CAASxD,cAAc,KAAKQ,YAAA,CAAa8C,gBAAA,KAAqB,KAAK9C,YAAA,CAAagD,QAAA,CAASxD,cAAc,EAAEO,QAAA,CAASryB,MAAA,KAAW,GAAG;MACvM,MAAMk+B,oBAAA,GAAuBxC,0BAAA,CAA2BpJ,YAAA,CAAagD,QAAA,CAASxD,cAAc,GAAG2L,UAAA,EAAYhD,QAAQ;MACnH,OAAO,IAAI5E,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAU6L,oBAAA,CAAqB5I,QAAQ;IACjF;IACAz1B,MAAA,CAAOC,OAAA,CAAQg8B,OAAO,EAAEr9B,OAAA,CAAQ,CAAC,CAACy8B,MAAA,EAAQT,SAAQ,MAAM;MACtD,IAAI,OAAOA,cAAa,UAAU;QAChCA,YAAW,CAACA,SAAQ;MACtB;MACA,IAAIA,cAAa,MAAM;QACrBnF,QAAA,CAAS4F,MAAM,IAAIS,kBAAA,CAAmBrJ,YAAA,CAAagD,QAAA,CAAS4F,MAAM,GAAGuC,UAAA,EAAYhD,SAAQ;MAC3F;IACF,CAAC;IACD56B,MAAA,CAAOC,OAAA,CAAQwyB,YAAA,CAAagD,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACk4B,WAAA,EAAaC,KAAK,MAAM;MACtE,IAAIkF,OAAA,CAAQnF,WAAW,MAAM,QAAW;QACtCrB,QAAA,CAASqB,WAAW,IAAIC,KAAA;MAC1B;IACF,CAAC;IACD,OAAO,IAAIf,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAUiD,QAAQ;EAC5D;AACF;AACA,SAASqI,aAAarL,YAAA,EAAcmL,UAAA,EAAYhD,QAAA,EAAU;EACxD,IAAI0D,mBAAA,GAAsB;EAC1B,IAAIC,gBAAA,GAAmBX,UAAA;EACvB,MAAMY,WAAU;IACd9F,KAAA,EAAO;IACPuF,SAAA,EAAW;IACXD,YAAA,EAAc;EAChB;EACA,OAAOO,gBAAA,GAAmB9L,YAAA,CAAaD,QAAA,CAASryB,MAAA,EAAQ;IACtD,IAAIm+B,mBAAA,IAAuB1D,QAAA,CAASz6B,MAAA,EAAQ,OAAOq+B;IACnD,MAAM7L,IAAA,GAAOF,YAAA,CAAaD,QAAA,CAAS+L,gBAAgB;IACnD,MAAMvC,OAAA,GAAUpB,QAAA,CAAS0D,mBAAmB;IAI5C,IAAInC,oBAAA,CAAqBH,OAAO,GAAG;MACjC;IACF;IACA,MAAMyC,IAAA,GAAO,GAAGzC,OAAO;IACvB,MAAM7wB,IAAA,GAAOmzB,mBAAA,GAAsB1D,QAAA,CAASz6B,MAAA,GAAS,IAAIy6B,QAAA,CAAS0D,mBAAA,GAAsB,CAAC,IAAI;IAC7F,IAAIC,gBAAA,GAAmB,KAAKE,IAAA,KAAS,QAAW;IAChD,IAAIA,IAAA,IAAQtzB,IAAA,IAAQ,OAAOA,IAAA,KAAS,YAAYA,IAAA,CAAK8wB,OAAA,KAAY,QAAW;MAC1E,IAAI,CAACyC,OAAA,CAAQD,IAAA,EAAMtzB,IAAA,EAAMwnB,IAAI,GAAG,OAAO6L;MACvCF,mBAAA,IAAuB;IACzB,OAAO;MACL,IAAI,CAACI,OAAA,CAAQD,IAAA,EAAM,CAAC,GAAG9L,IAAI,GAAG,OAAO6L;MACrCF,mBAAA;IACF;IACAC,gBAAA;EACF;EACA,OAAO;IACL7F,KAAA,EAAO;IACPuF,SAAA,EAAWM,gBAAA;IACXP,YAAA,EAAcM;EAChB;AACF;AACA,SAASJ,sBAAsBzL,YAAA,EAAcmL,UAAA,EAAYhD,QAAA,EAAU;EACjE,MAAM5F,KAAA,GAAQvC,YAAA,CAAaD,QAAA,CAASvzB,KAAA,CAAM,GAAG2+B,UAAU;EACvD,IAAIrK,CAAA,GAAI;EACR,OAAOA,CAAA,GAAIqH,QAAA,CAASz6B,MAAA,EAAQ;IAC1B,MAAM67B,OAAA,GAAUpB,QAAA,CAASrH,CAAC;IAC1B,IAAI4I,oBAAA,CAAqBH,OAAO,GAAG;MACjC,MAAMvG,QAAA,GAAWkJ,wBAAA,CAAyB3C,OAAA,CAAQC,OAAO;MACzD,OAAO,IAAIjG,eAAA,CAAgBhB,KAAA,EAAOS,QAAQ;IAC5C;IAEA,IAAIlC,CAAA,KAAM,KAAKwI,cAAA,CAAenB,QAAA,CAAS,CAAC,CAAC,GAAG;MAC1C,MAAMxD,CAAA,GAAI3E,YAAA,CAAaD,QAAA,CAASoL,UAAU;MAC1C5I,KAAA,CAAMv1B,IAAA,CAAK,IAAI62B,UAAA,CAAWc,CAAA,CAAEzE,IAAA,EAAM3sB,SAAA,CAAU40B,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;MACzDrH,CAAA;MACA;IACF;IACA,MAAMkL,IAAA,GAAOtC,oBAAA,CAAqBH,OAAO,IAAIA,OAAA,CAAQC,OAAA,CAAQhK,cAAc,IAAI,GAAG+J,OAAO;IACzF,MAAM7wB,IAAA,GAAOooB,CAAA,GAAIqH,QAAA,CAASz6B,MAAA,GAAS,IAAIy6B,QAAA,CAASrH,CAAA,GAAI,CAAC,IAAI;IACzD,IAAIkL,IAAA,IAAQtzB,IAAA,IAAQ4wB,cAAA,CAAe5wB,IAAI,GAAG;MACxC6pB,KAAA,CAAMv1B,IAAA,CAAK,IAAI62B,UAAA,CAAWmI,IAAA,EAAMz4B,SAAA,CAAUmF,IAAI,CAAC,CAAC;MAChDooB,CAAA,IAAK;IACP,OAAO;MACLyB,KAAA,CAAMv1B,IAAA,CAAK,IAAI62B,UAAA,CAAWmI,IAAA,EAAM,CAAC,CAAC,CAAC;MACnClL,CAAA;IACF;EACF;EACA,OAAO,IAAIyC,eAAA,CAAgBhB,KAAA,EAAO,CAAC,CAAC;AACtC;AACA,SAAS2J,yBAAyB1C,OAAA,EAAS;EACzC,MAAMxG,QAAA,GAAW,CAAC;EAClBz1B,MAAA,CAAOC,OAAA,CAAQg8B,OAAO,EAAEr9B,OAAA,CAAQ,CAAC,CAACy8B,MAAA,EAAQT,QAAQ,MAAM;IACtD,IAAI,OAAOA,QAAA,KAAa,UAAU;MAChCA,QAAA,GAAW,CAACA,QAAQ;IACtB;IACA,IAAIA,QAAA,KAAa,MAAM;MACrBnF,QAAA,CAAS4F,MAAM,IAAI6C,qBAAA,CAAsB,IAAIlI,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC,GAAG,GAAG4E,QAAQ;IACnF;EACF,CAAC;EACD,OAAOnF,QAAA;AACT;AACA,SAASzvB,UAAU1D,MAAA,EAAQ;EACzB,MAAMqB,GAAA,GAAM,CAAC;EACb3D,MAAA,CAAOC,OAAA,CAAQqC,MAAM,EAAE1D,OAAA,CAAQ,CAAC,CAACm5B,CAAA,EAAGj1B,CAAC,MAAMa,GAAA,CAAIo0B,CAAC,IAAI,GAAGj1B,CAAC,EAAE;EAC1D,OAAOa,GAAA;AACT;AACA,SAAS+6B,QAAQ/L,IAAA,EAAMrwB,MAAA,EAAQ0wB,OAAA,EAAS;EACtC,OAAOL,IAAA,IAAQK,OAAA,CAAQL,IAAA,IAAQa,YAAA,CAAalxB,MAAA,EAAQ0wB,OAAA,CAAQ8C,UAAU;AACxE;AACA,IAAM8I,qBAAA,GAAwB;AAM9B,IAAIC,SAAA;AAAA,CACH,UAAUA,YAAW;EACpBA,WAAUA,WAAU,iBAAiB,IAAI,CAAC,IAAI;EAC9CA,WAAUA,WAAU,eAAe,IAAI,CAAC,IAAI;EAC5CA,WAAUA,WAAU,kBAAkB,IAAI,CAAC,IAAI;EAC/CA,WAAUA,WAAU,iBAAiB,IAAI,CAAC,IAAI;EAC9CA,WAAUA,WAAU,kBAAkB,IAAI,CAAC,IAAI;EAC/CA,WAAUA,WAAU,cAAc,IAAI,CAAC,IAAI;EAC3CA,WAAUA,WAAU,YAAY,IAAI,CAAC,IAAI;EACzCA,WAAUA,WAAU,kBAAkB,IAAI,CAAC,IAAI;EAC/CA,WAAUA,WAAU,gBAAgB,IAAI,CAAC,IAAI;EAC7CA,WAAUA,WAAU,sBAAsB,IAAI,CAAC,IAAI;EACnDA,WAAUA,WAAU,oBAAoB,IAAI,EAAE,IAAI;EAClDA,WAAUA,WAAU,sBAAsB,IAAI,EAAE,IAAI;EACpDA,WAAUA,WAAU,oBAAoB,IAAI,EAAE,IAAI;EAClDA,WAAUA,WAAU,iBAAiB,IAAI,EAAE,IAAI;EAC/CA,WAAUA,WAAU,eAAe,IAAI,EAAE,IAAI;EAC7CA,WAAUA,WAAU,QAAQ,IAAI,EAAE,IAAI;EACtCA,WAAUA,WAAU,mBAAmB,IAAI,EAAE,IAAI;AACnD,GAAGA,SAAA,KAAcA,SAAA,GAAY,CAAC,EAAE;AAyBhC,IAAMC,WAAA,GAAN,MAAkB;EAChBzgC,YACAslB,EAAA,EACA1e,GAAA,EAAK;IACH,KAAK0e,EAAA,GAAKA,EAAA;IACV,KAAK1e,GAAA,GAAMA,GAAA;EACb;AACF;AAMA,IAAM85B,eAAA,GAAN,cAA8BD,WAAA,CAAY;EACxCzgC,YACAslB,EAAA,EACA1e,GAAA,EACA+5B,iBAAA,GAAoB,cACpBC,aAAA,GAAgB,MAAM;IACpB,MAAMtb,EAAA,EAAI1e,GAAG;IACb,KAAKiB,IAAA,GAAO24B,SAAA,CAAUE,eAAA;IACtB,KAAKC,iBAAA,GAAoBA,iBAAA;IACzB,KAAKC,aAAA,GAAgBA,aAAA;EACvB;EAAA;EAEAx9B,SAAA,EAAW;IACT,OAAO,uBAAuB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG;EAC1D;AACF;AAUA,IAAMi6B,aAAA,GAAN,cAA4BJ,WAAA,CAAY;EACtCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EAAmB;IACjB,MAAMxb,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKj5B,IAAA,GAAO24B,SAAA,CAAUK,aAAA;EACxB;EAAA;EAEAz9B,SAAA,EAAW;IACT,OAAO,qBAAqB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB;EACxG;AACF;AAOA,IAAIC,0BAAA;AAAA,CACH,UAAUA,6BAA4B;EAIrCA,4BAA2BA,4BAA2B,UAAU,IAAI,CAAC,IAAI;EAIzEA,4BAA2BA,4BAA2B,2BAA2B,IAAI,CAAC,IAAI;EAI1FA,4BAA2BA,4BAA2B,oBAAoB,IAAI,CAAC,IAAI;EAInFA,4BAA2BA,4BAA2B,eAAe,IAAI,CAAC,IAAI;AAChF,GAAGA,0BAAA,KAA+BA,0BAAA,GAA6B,CAAC,EAAE;AAOlE,IAAIC,qBAAA;AAAA,CACH,UAAUA,wBAAuB;EAIhCA,uBAAsBA,uBAAsB,0BAA0B,IAAI,CAAC,IAAI;EAO/EA,uBAAsBA,uBAAsB,8BAA8B,IAAI,CAAC,IAAI;AACrF,GAAGA,qBAAA,KAA0BA,qBAAA,GAAwB,CAAC,EAAE;AAYxD,IAAMC,gBAAA,GAAN,cAA+BR,WAAA,CAAY;EACzCzgC,YACAslB,EAAA,EACA1e,GAAA,EAKAs6B,MAAA,EAMAtW,IAAA,EAAM;IACJ,MAAMtF,EAAA,EAAI1e,GAAG;IACb,KAAKs6B,MAAA,GAASA,MAAA;IACd,KAAKtW,IAAA,GAAOA,IAAA;IACZ,KAAK/iB,IAAA,GAAO24B,SAAA,CAAUS,gBAAA;EACxB;EAAA;EAEA79B,SAAA,EAAW;IACT,OAAO,wBAAwB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG;EAC3D;AACF;AASA,IAAMu6B,iBAAA,GAAN,cAAgCV,WAAA,CAAY;EAC1CzgC,YACAslB,EAAA,EACA1e,GAAA,EAKAs6B,MAAA,EAMAtW,IAAA,EAAM;IACJ,MAAMtF,EAAA,EAAI1e,GAAG;IACb,KAAKs6B,MAAA,GAASA,MAAA;IACd,KAAKtW,IAAA,GAAOA,IAAA;IACZ,KAAK/iB,IAAA,GAAO24B,SAAA,CAAUW,iBAAA;EACxB;AACF;AAUA,IAAMC,eAAA,GAAN,cAA8BX,WAAA,CAAY;EACxCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAsC,KAAA,EAOA+T,MAAA,EAAQ;IACN,MAAMqI,EAAA,EAAI1e,GAAG;IACb,KAAKsC,KAAA,GAAQA,KAAA;IACb,KAAK+T,MAAA,GAASA,MAAA;IACd,KAAKpV,IAAA,GAAO24B,SAAA,CAAUY,eAAA;EACxB;EAAA;EAEAh+B,SAAA,EAAW;IACT,OAAO,uBAAuB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,aAAa,KAAKsC,KAAK;EACjF;AACF;AAMA,IAAMm4B,gBAAA,GAAN,cAA+BZ,WAAA,CAAY;EACzCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EACAQ,QAAO;IACL,MAAMhc,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKQ,KAAA,GAAQA;IACb,KAAKz5B,IAAA,GAAO24B,SAAA,CAAUa,gBAAA;EACxB;EAAA;EAEAj+B,SAAA,EAAW;IACT,OAAO,wBAAwB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB,aAAa,KAAKQ,KAAK;EAClI;AACF;AAQA,IAAMC,gBAAA,GAAN,cAA+Bd,WAAA,CAAY;EACzCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EACAQ,QAAO;IACL,MAAMhc,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKQ,KAAA,GAAQA;IACb,KAAKz5B,IAAA,GAAO24B,SAAA,CAAUe,gBAAA;EACxB;EACAn+B,SAAA,EAAW;IACT,OAAO,wBAAwB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB,aAAa,KAAKQ,KAAK;EAClI;AACF;AAQA,IAAME,cAAA,GAAN,cAA6Bf,WAAA,CAAY;EACvCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EACAQ,QACAG,cAAA,EAAgB;IACd,MAAMnc,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKQ,KAAA,GAAQA;IACb,KAAKG,cAAA,GAAiBA,cAAA;IACtB,KAAK55B,IAAA,GAAO24B,SAAA,CAAUgB,cAAA;EACxB;EACAp+B,SAAA,EAAW;IACT,OAAO,sBAAsB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB,aAAa,KAAKQ,KAAK,qBAAqB,KAAKG,cAAc;EACxK;AACF;AAWA,IAAMC,YAAA,GAAN,cAA2BjB,WAAA,CAAY;EACrCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EACAQ,QAAO;IACL,MAAMhc,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKQ,KAAA,GAAQA;IACb,KAAKz5B,IAAA,GAAO24B,SAAA,CAAUkB,YAAA;EACxB;EACAt+B,SAAA,EAAW;IACT,OAAO,oBAAoB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB,aAAa,KAAKQ,KAAK;EAC9H;AACF;AAOA,IAAMK,UAAA,GAAN,cAAyBlB,WAAA,CAAY;EACnCzgC,YACAslB,EAAA,EACA1e,GAAA,EACAk6B,iBAAA,EACAQ,QAAO;IACL,MAAMhc,EAAA,EAAI1e,GAAG;IACb,KAAKk6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKQ,KAAA,GAAQA;IACb,KAAKz5B,IAAA,GAAO24B,SAAA,CAAUmB,UAAA;EACxB;EACAv+B,SAAA,EAAW;IACT,OAAO,kBAAkB,KAAKkiB,EAAE,WAAW,KAAK1e,GAAG,0BAA0B,KAAKk6B,iBAAiB,aAAa,KAAKQ,KAAK;EAC5H;AACF;AAQA,IAAMM,oBAAA,GAAN,MAA2B;EACzB5hC,YACAq0B,KAAA,EAAO;IACL,KAAKA,KAAA,GAAQA,KAAA;IACb,KAAKxsB,IAAA,GAAO24B,SAAA,CAAUoB,oBAAA;EACxB;EACAx+B,SAAA,EAAW;IACT,OAAO,8BAA8B,KAAKixB,KAAA,CAAMC,IAAI;EACtD;AACF;AAQA,IAAMuN,kBAAA,GAAN,MAAyB;EACvB7hC,YACAq0B,KAAA,EAAO;IACL,KAAKA,KAAA,GAAQA,KAAA;IACb,KAAKxsB,IAAA,GAAO24B,SAAA,CAAUqB,kBAAA;EACxB;EACAz+B,SAAA,EAAW;IACT,OAAO,4BAA4B,KAAKixB,KAAA,CAAMC,IAAI;EACpD;AACF;AASA,IAAMwN,oBAAA,GAAN,MAA2B;EACzB9hC,YACA+hC,QAAA,EAAU;IACR,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKl6B,IAAA,GAAO24B,SAAA,CAAUsB,oBAAA;EACxB;EACA1+B,SAAA,EAAW;IACT,MAAMkxB,IAAA,GAAO,KAAKyN,QAAA,CAASC,WAAA,IAAe,KAAKD,QAAA,CAASC,WAAA,CAAY1N,IAAA,IAAQ;IAC5E,OAAO,+BAA+BA,IAAI;EAC5C;AACF;AAQA,IAAM2N,kBAAA,GAAN,MAAyB;EACvBjiC,YACA+hC,QAAA,EAAU;IACR,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKl6B,IAAA,GAAO24B,SAAA,CAAUyB,kBAAA;EACxB;EACA7+B,SAAA,EAAW;IACT,MAAMkxB,IAAA,GAAO,KAAKyN,QAAA,CAASC,WAAA,IAAe,KAAKD,QAAA,CAASC,WAAA,CAAY1N,IAAA,IAAQ;IAC5E,OAAO,6BAA6BA,IAAI;EAC1C;AACF;AASA,IAAM4N,eAAA,GAAN,MAAsB;EACpBliC,YACA+hC,QAAA,EAAU;IACR,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKl6B,IAAA,GAAO24B,SAAA,CAAU0B,eAAA;EACxB;EACA9+B,SAAA,EAAW;IACT,MAAMkxB,IAAA,GAAO,KAAKyN,QAAA,CAASC,WAAA,IAAe,KAAKD,QAAA,CAASC,WAAA,CAAY1N,IAAA,IAAQ;IAC5E,OAAO,0BAA0BA,IAAI;EACvC;AACF;AASA,IAAM6N,aAAA,GAAN,MAAoB;EAClBniC,YACA+hC,QAAA,EAAU;IACR,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKl6B,IAAA,GAAO24B,SAAA,CAAU2B,aAAA;EACxB;EACA/+B,SAAA,EAAW;IACT,MAAMkxB,IAAA,GAAO,KAAKyN,QAAA,CAASC,WAAA,IAAe,KAAKD,QAAA,CAASC,WAAA,CAAY1N,IAAA,IAAQ;IAC5E,OAAO,wBAAwBA,IAAI;EACrC;AACF;AAMA,IAAM8N,MAAA,GAAN,MAAa;EACXpiC,YACAqiC,WAAA,EACApzB,QAAA,EACAqzB,MAAA,EAAQ;IACN,KAAKD,WAAA,GAAcA,WAAA;IACnB,KAAKpzB,QAAA,GAAWA,QAAA;IAChB,KAAKqzB,MAAA,GAASA,MAAA;IACd,KAAKz6B,IAAA,GAAO24B,SAAA,CAAU4B,MAAA;EACxB;EACAh/B,SAAA,EAAW;IACT,MAAMm/B,GAAA,GAAM,KAAKtzB,QAAA,GAAW,GAAG,KAAKA,QAAA,CAAS,CAAC,CAAC,KAAK,KAAKA,QAAA,CAAS,CAAC,CAAC,KAAK;IACzE,OAAO,mBAAmB,KAAKqzB,MAAM,iBAAiBC,GAAG;EAC3D;AACF;AACA,IAAMC,oBAAA,GAAN,MAA2B,EAAC;AAC5B,IAAMC,eAAA,GAAN,MAAsB;EACpBziC,YAAY4G,GAAA,EAAK;IACf,KAAKA,GAAA,GAAMA,GAAA;EACb;AACF;AACA,SAAS87B,eAAeL,WAAA,EAAa;EACnC,QAAQA,WAAA,CAAYx6B,IAAA;IAClB,KAAK24B,SAAA,CAAU2B,aAAA;MACb,OAAO,wBAAwBE,WAAA,CAAYN,QAAA,CAASC,WAAA,EAAa1N,IAAA,IAAQ,EAAE;IAC7E,KAAKkM,SAAA,CAAU0B,eAAA;MACb,OAAO,0BAA0BG,WAAA,CAAYN,QAAA,CAASC,WAAA,EAAa1N,IAAA,IAAQ,EAAE;IAC/E,KAAKkM,SAAA,CAAUyB,kBAAA;MACb,OAAO,6BAA6BI,WAAA,CAAYN,QAAA,CAASC,WAAA,EAAa1N,IAAA,IAAQ,EAAE;IAClF,KAAKkM,SAAA,CAAUsB,oBAAA;MACb,OAAO,+BAA+BO,WAAA,CAAYN,QAAA,CAASC,WAAA,EAAa1N,IAAA,IAAQ,EAAE;IACpF,KAAKkM,SAAA,CAAUgB,cAAA;MACb,OAAO,sBAAsBa,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB,aAAauB,WAAA,CAAYf,KAAK,qBAAqBe,WAAA,CAAYZ,cAAc;IAC3M,KAAKjB,SAAA,CAAUe,gBAAA;MACb,OAAO,wBAAwBc,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB,aAAauB,WAAA,CAAYf,KAAK;IAC9J,KAAKd,SAAA,CAAUS,gBAAA;MACb,OAAO,wBAAwBoB,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG;IACzE,KAAK45B,SAAA,CAAUW,iBAAA;MACb,OAAO,yBAAyBkB,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG;IAC1E,KAAK45B,SAAA,CAAUK,aAAA;MACb,OAAO,qBAAqBwB,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB;IAC7H,KAAKN,SAAA,CAAUY,eAAA;MACb,OAAO,uBAAuBiB,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,aAAay7B,WAAA,CAAYn5B,KAAK;IACtG,KAAKs3B,SAAA,CAAUE,eAAA;MACb,OAAO,uBAAuB2B,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG;IACxE,KAAK45B,SAAA,CAAUmB,UAAA;MACb,OAAO,kBAAkBU,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB,aAAauB,WAAA,CAAYf,KAAK;IACxJ,KAAKd,SAAA,CAAUkB,YAAA;MACb,OAAO,oBAAoBW,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB,aAAauB,WAAA,CAAYf,KAAK;IAC1J,KAAKd,SAAA,CAAUqB,kBAAA;MACb,OAAO,4BAA4BQ,WAAA,CAAYhO,KAAA,CAAMC,IAAI;IAC3D,KAAKkM,SAAA,CAAUoB,oBAAA;MACb,OAAO,8BAA8BS,WAAA,CAAYhO,KAAA,CAAMC,IAAI;IAC7D,KAAKkM,SAAA,CAAUa,gBAAA;MACb,OAAO,wBAAwBgB,WAAA,CAAY/c,EAAE,WAAW+c,WAAA,CAAYz7B,GAAG,0BAA0By7B,WAAA,CAAYvB,iBAAiB,aAAauB,WAAA,CAAYf,KAAK;IAC9J,KAAKd,SAAA,CAAU4B,MAAA;MACb,MAAMG,GAAA,GAAMF,WAAA,CAAYpzB,QAAA,GAAW,GAAGozB,WAAA,CAAYpzB,QAAA,CAAS,CAAC,CAAC,KAAKozB,WAAA,CAAYpzB,QAAA,CAAS,CAAC,CAAC,KAAK;MAC9F,OAAO,mBAAmBozB,WAAA,CAAYC,MAAM,iBAAiBC,GAAG;EACpE;AACF;AAOA,IAAMI,aAAA,GAAN,MAAoB;EAClB3iC,YAAA,EAAc;IACZ,KAAKg9B,MAAA,GAAS;IACd,KAAK3I,KAAA,GAAQ;IACb,KAAKrkB,QAAA,GAAW;IAChB,KAAKonB,QAAA,GAAW,IAAIwL,sBAAA,CAAuB;IAC3C,KAAKC,SAAA,GAAY;EACnB;AACF;AAMA,IAAMC,uBAAA,GAAN,MAAMA,uBAAA,CAAuB;EAC3B9iC,YAAA,EAAc;IAEZ,KAAK+iC,QAAA,GAAW,mBAAI5iC,GAAA,CAAI;EAC1B;EAAA;EAEA6iC,qBAAqBC,SAAA,EAAWjG,MAAA,EAAQ;IACtC,MAAM51B,OAAA,GAAU,KAAK87B,kBAAA,CAAmBD,SAAS;IACjD77B,OAAA,CAAQ41B,MAAA,GAASA,MAAA;IACjB,KAAK+F,QAAA,CAAS1hC,GAAA,CAAI4hC,SAAA,EAAW77B,OAAO;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+7B,uBAAuBF,SAAA,EAAW;IAChC,MAAM77B,OAAA,GAAU,KAAKg8B,UAAA,CAAWH,SAAS;IACzC,IAAI77B,OAAA,EAAS;MACXA,OAAA,CAAQ41B,MAAA,GAAS;MACjB51B,OAAA,CAAQy7B,SAAA,GAAY;IACtB;EACF;EAAA;AAAA;AAAA;AAAA;EAKAQ,oBAAA,EAAsB;IACpB,MAAMN,QAAA,GAAW,KAAKA,QAAA;IACtB,KAAKA,QAAA,GAAW,mBAAI5iC,GAAA,CAAI;IACxB,OAAO4iC,QAAA;EACT;EACAO,mBAAmBP,QAAA,EAAU;IAC3B,KAAKA,QAAA,GAAWA,QAAA;EAClB;EACAG,mBAAmBD,SAAA,EAAW;IAC5B,IAAI77B,OAAA,GAAU,KAAKg8B,UAAA,CAAWH,SAAS;IACvC,IAAI,CAAC77B,OAAA,EAAS;MACZA,OAAA,GAAU,IAAIu7B,aAAA,CAAc;MAC5B,KAAKI,QAAA,CAAS1hC,GAAA,CAAI4hC,SAAA,EAAW77B,OAAO;IACtC;IACA,OAAOA,OAAA;EACT;EACAg8B,WAAWH,SAAA,EAAW;IACpB,OAAO,KAAKF,QAAA,CAAS5hC,GAAA,CAAI8hC,SAAS,KAAK;EACzC;AAaF;AAXIH,uBAAA,CAAKv4B,IAAA,GAAO,SAASg5B,+BAA+B3+B,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAKk+B,uBAAA,EAAwB;AAC3C;AAGAA,uBAAA,CAAKp4B,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg9B,uBAAA;EACPl4B,OAAA,EAASk4B,uBAAA,CAAuBv4B,IAAA;EAChC8M,UAAA,EAAY;AACd,CAAC;AAxDL,IAAMurB,sBAAA,GAANE,uBAAA;AAAA,CA2DC,MAAM;EACL,CAAC,OAAOrhC,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB83B,sBAAA,EAAwB,CAAC;IAC/F/6B,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMmsB,IAAA,GAAN,MAAW;EACTxjC,YAAY42B,IAAA,EAAM;IAChB,KAAK6M,KAAA,GAAQ7M,IAAA;EACf;EACA,IAAIA,KAAA,EAAO;IACT,OAAO,KAAK6M,KAAA,CAAM1iC,KAAA;EACpB;EAAA;AAAA;AAAA;EAIAolB,OAAOvhB,CAAA,EAAG;IACR,MAAMm0B,CAAA,GAAI,KAAK2K,YAAA,CAAa9+B,CAAC;IAC7B,OAAOm0B,CAAA,CAAEj3B,MAAA,GAAS,IAAIi3B,CAAA,CAAEA,CAAA,CAAEj3B,MAAA,GAAS,CAAC,IAAI;EAC1C;EAAA;AAAA;AAAA;EAIAs1B,SAASxyB,CAAA,EAAG;IACV,MAAM++B,CAAA,GAAIC,QAAA,CAASh/B,CAAA,EAAG,KAAK6+B,KAAK;IAChC,OAAOE,CAAA,GAAIA,CAAA,CAAEvM,QAAA,CAASj0B,GAAA,CAAIyB,MAAKA,GAAE7D,KAAK,IAAI,EAAC;EAC7C;EAAA;AAAA;AAAA;EAIA8iC,WAAWj/B,CAAA,EAAG;IACZ,MAAM++B,CAAA,GAAIC,QAAA,CAASh/B,CAAA,EAAG,KAAK6+B,KAAK;IAChC,OAAOE,CAAA,IAAKA,CAAA,CAAEvM,QAAA,CAASt1B,MAAA,GAAS,IAAI6hC,CAAA,CAAEvM,QAAA,CAAS,CAAC,EAAEr2B,KAAA,GAAQ;EAC5D;EAAA;AAAA;AAAA;EAIA+iC,SAASl/B,CAAA,EAAG;IACV,MAAMm0B,CAAA,GAAIgL,QAAA,CAASn/B,CAAA,EAAG,KAAK6+B,KAAK;IAChC,IAAI1K,CAAA,CAAEj3B,MAAA,GAAS,GAAG,OAAO,EAAC;IAC1B,MAAMq1B,CAAA,GAAI4B,CAAA,CAAEA,CAAA,CAAEj3B,MAAA,GAAS,CAAC,EAAEs1B,QAAA,CAASj0B,GAAA,CAAIg0B,MAAKA,GAAEp2B,KAAK;IACnD,OAAOo2B,CAAA,CAAEn0B,MAAA,CAAOghC,EAAA,IAAMA,EAAA,KAAOp/B,CAAC;EAChC;EAAA;AAAA;AAAA;EAIA8+B,aAAa9+B,CAAA,EAAG;IACd,OAAOm/B,QAAA,CAASn/B,CAAA,EAAG,KAAK6+B,KAAK,EAAEtgC,GAAA,CAAIwB,CAAA,IAAKA,CAAA,CAAE5D,KAAK;EACjD;AACF;AAEA,SAAS6iC,SAAS7iC,KAAA,EAAOmS,IAAA,EAAM;EAC7B,IAAInS,KAAA,KAAUmS,IAAA,CAAKnS,KAAA,EAAO,OAAOmS,IAAA;EACjC,WAAWwlB,KAAA,IAASxlB,IAAA,CAAKkkB,QAAA,EAAU;IACjC,MAAMlkB,QAAO0wB,QAAA,CAAS7iC,KAAA,EAAO23B,KAAK;IAClC,IAAIxlB,OAAM,OAAOA;EACnB;EACA,OAAO;AACT;AAEA,SAAS6wB,SAAShjC,KAAA,EAAOmS,IAAA,EAAM;EAC7B,IAAInS,KAAA,KAAUmS,IAAA,CAAKnS,KAAA,EAAO,OAAO,CAACmS,IAAI;EACtC,WAAWwlB,KAAA,IAASxlB,IAAA,CAAKkkB,QAAA,EAAU;IACjC,MAAM9C,IAAA,GAAOyP,QAAA,CAAShjC,KAAA,EAAO23B,KAAK;IAClC,IAAIpE,IAAA,CAAKxyB,MAAA,EAAQ;MACfwyB,IAAA,CAAK2P,OAAA,CAAQ/wB,IAAI;MACjB,OAAOohB,IAAA;IACT;EACF;EACA,OAAO,EAAC;AACV;AACA,IAAM4P,QAAA,GAAN,MAAe;EACblkC,YAAYe,KAAA,EAAOq2B,QAAA,EAAU;IAC3B,KAAKr2B,KAAA,GAAQA,KAAA;IACb,KAAKq2B,QAAA,GAAWA,QAAA;EAClB;EACAh0B,SAAA,EAAW;IACT,OAAO,YAAY,KAAKrC,KAAK;EAC/B;AACF;AAEA,SAASojC,kBAAkBjxB,IAAA,EAAM;EAC/B,MAAM/P,OAAM,CAAC;EACb,IAAI+P,IAAA,EAAM;IACRA,IAAA,CAAKkkB,QAAA,CAAS72B,OAAA,CAAQm4B,KAAA,IAASv1B,KAAIu1B,KAAA,CAAM33B,KAAA,CAAMi8B,MAAM,IAAItE,KAAK;EAChE;EACA,OAAOv1B;AACT;AAiCA,IAAMihC,WAAA,GAAN,cAA0BZ,IAAA,CAAK;EAAA;EAE7BxjC,YAAY42B,IAAA,EACZmL,QAAA,EAAU;IACR,MAAMnL,IAAI;IACV,KAAKmL,QAAA,GAAWA,QAAA;IAChBsC,cAAA,CAAe,MAAMzN,IAAI;EAC3B;EACAxzB,SAAA,EAAW;IACT,OAAO,KAAK2+B,QAAA,CAAS3+B,QAAA,CAAS;EAChC;AACF;AACA,SAASkhC,iBAAiBnZ,aAAA,EAAe;EACvC,MAAM4W,QAAA,GAAWwC,wBAAA,CAAyBpZ,aAAa;EACvD,MAAMqZ,QAAA,GAAW,IAAIC,eAAA,CAAgB,CAAC,IAAIxM,UAAA,CAAW,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAMyM,WAAA,GAAc,IAAID,eAAA,CAAgB,CAAC,CAAC;EAC1C,MAAME,SAAA,GAAY,IAAIF,eAAA,CAAgB,CAAC,CAAC;EACxC,MAAMG,gBAAA,GAAmB,IAAIH,eAAA,CAAgB,CAAC,CAAC;EAC/C,MAAM1N,QAAA,GAAW,IAAI0N,eAAA,CAAgB,EAAE;EACvC,MAAMI,SAAA,GAAY,IAAIC,cAAA,CAAeN,QAAA,EAAUE,WAAA,EAAaE,gBAAA,EAAkB7N,QAAA,EAAU4N,SAAA,EAAW/Q,cAAA,EAAgBzI,aAAA,EAAe4W,QAAA,CAASnL,IAAI;EAC/IiO,SAAA,CAAU9C,QAAA,GAAWA,QAAA,CAASnL,IAAA;EAC9B,OAAO,IAAIwN,WAAA,CAAY,IAAIF,QAAA,CAASW,SAAA,EAAW,EAAE,GAAG9C,QAAQ;AAC9D;AACA,SAASwC,yBAAyBpZ,aAAA,EAAe;EAC/C,MAAMuZ,WAAA,GAAc,CAAC;EACrB,MAAMC,SAAA,GAAY,CAAC;EACnB,MAAMC,gBAAA,GAAmB,CAAC;EAC1B,MAAM7N,QAAA,GAAW;EACjB,MAAM8N,SAAA,GAAY,IAAIE,sBAAA,CAAuB,EAAC,EAAGL,WAAA,EAAaE,gBAAA,EAAkB7N,QAAA,EAAU4N,SAAA,EAAW/Q,cAAA,EAAgBzI,aAAA,EAAe,MAAM,CAAC,CAAC;EAC5I,OAAO,IAAI6Z,mBAAA,CAAoB,IAAI,IAAId,QAAA,CAASW,SAAA,EAAW,EAAE,CAAC;AAChE;AAoBA,IAAMC,cAAA,GAAN,MAAqB;EAAA;EAEnB9kC,YACAilC,UAAA,EACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,EACArI,MAAA,EACAtU,SAAA,EAAW4c,cAAA,EAAgB;IACzB,KAAKL,UAAA,GAAaA,UAAA;IAClB,KAAKC,aAAA,GAAgBA,aAAA;IACrB,KAAKC,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKC,eAAA,GAAkBA,eAAA;IACvB,KAAKC,WAAA,GAAcA,WAAA;IACnB,KAAKrI,MAAA,GAASA,MAAA;IACd,KAAKtU,SAAA,GAAYA,SAAA;IACjB,KAAK6c,eAAA,GAAkBD,cAAA;IACvB,KAAKhW,KAAA,GAAQ,KAAK+V,WAAA,EAAaz7B,IAAA,CAAKzG,GAAA,CAAIqiC,CAAA,IAAKA,CAAA,CAAE3R,aAAa,CAAC,CAAC,KAAKlqB,EAAA,CAAG,MAAS;IAE/E,KAAK/C,GAAA,GAAMq+B,UAAA;IACX,KAAKhhC,MAAA,GAASihC,aAAA;IACd,KAAKpO,WAAA,GAAcqO,kBAAA;IACnB,KAAKpO,QAAA,GAAWqO,eAAA;IAChB,KAAK9xB,IAAA,GAAO+xB,WAAA;EACd;EAAA;EAEA,IAAIrD,YAAA,EAAc;IAChB,OAAO,KAAKuD,eAAA,CAAgBvD,WAAA;EAC9B;EAAA;EAEA,IAAIpL,KAAA,EAAO;IACT,OAAO,KAAK6O,YAAA,CAAa7O,IAAA;EAC3B;EAAA;EAEA,IAAIzQ,OAAA,EAAS;IACX,OAAO,KAAKsf,YAAA,CAAatf,MAAA,CAAO,IAAI;EACtC;EAAA;EAEA,IAAI0d,WAAA,EAAa;IACf,OAAO,KAAK4B,YAAA,CAAa5B,UAAA,CAAW,IAAI;EAC1C;EAAA;EAEA,IAAIzM,SAAA,EAAW;IACb,OAAO,KAAKqO,YAAA,CAAarO,QAAA,CAAS,IAAI;EACxC;EAAA;EAEA,IAAIsM,aAAA,EAAe;IACjB,OAAO,KAAK+B,YAAA,CAAa/B,YAAA,CAAa,IAAI;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIgC,SAAA,EAAW;IACb,KAAKC,SAAA,KAAc,KAAK1hC,MAAA,CAAO2F,IAAA,CAAKzG,GAAA,CAAI41B,CAAA,IAAK9E,iBAAA,CAAkB8E,CAAC,CAAC,CAAC;IAClE,OAAO,KAAK4M,SAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI/N,cAAA,EAAgB;IAClB,KAAKC,cAAA,KAAmB,KAAKf,WAAA,CAAYltB,IAAA,CAAKzG,GAAA,CAAI41B,CAAA,IAAK9E,iBAAA,CAAkB8E,CAAC,CAAC,CAAC;IAC5E,OAAO,KAAKlB,cAAA;EACd;EACAz0B,SAAA,EAAW;IACT,OAAO,KAAK2+B,QAAA,GAAW,KAAKA,QAAA,CAAS3+B,QAAA,CAAS,IAAI,UAAU,KAAKmiC,eAAe;EAClF;AACF;AAOA,SAASK,aAAavR,KAAA,EAAOlO,MAAA,EAAQ0f,yBAAA,GAA4B,aAAa;EAC5E,IAAIC,SAAA;EACJ,MAAM;IACJ9D;EACF,IAAI3N,KAAA;EACJ,IAAIlO,MAAA,KAAW,SAAS0f,yBAAA,KAA8B;EAAA;EAEtD7D,WAAA,EAAa1N,IAAA,KAAS;EAAA;EAEtB,CAACnO,MAAA,CAAOuC,SAAA,IAAa,CAACvC,MAAA,CAAO6b,WAAA,EAAa+D,aAAA,GAAgB;IACxDD,SAAA,GAAY;MACV7hC,MAAA,EAAQ2I,cAAA,CAAAA,cAAA,KACHuZ,MAAA,CAAOliB,MAAA,GACPowB,KAAA,CAAMpwB,MAAA;MAEXqP,IAAA,EAAM1G,cAAA,CAAAA,cAAA,KACDuZ,MAAA,CAAO7S,IAAA,GACP+gB,KAAA,CAAM/gB,IAAA;MAEXP,OAAA,EAASnG,cAAA,CAAAA,cAAA,CAAAA,cAAA,CAAAA,cAAA,KAOJynB,KAAA,CAAM/gB,IAAA,GAEN6S,MAAA,CAAO7S,IAAA,GAEP0uB,WAAA,EAAa1uB,IAAA,GAEb+gB,KAAA,CAAM2R,aAAA;IAEb;EACF,OAAO;IACLF,SAAA,GAAY;MACV7hC,MAAA,EAAQ2I,cAAA,KACHynB,KAAA,CAAMpwB,MAAA;MAEXqP,IAAA,EAAM1G,cAAA,KACDynB,KAAA,CAAM/gB,IAAA;MAEXP,OAAA,EAASnG,cAAA,CAAAA,cAAA,KACJynB,KAAA,CAAM/gB,IAAA,GACL+gB,KAAA,CAAM2R,aAAA,IAAiB,CAAC;IAEhC;EACF;EACA,IAAIhE,WAAA,IAAeiE,cAAA,CAAejE,WAAW,GAAG;IAC9C8D,SAAA,CAAU/yB,OAAA,CAAQ8gB,aAAa,IAAImO,WAAA,CAAY1S,KAAA;EACjD;EACA,OAAOwW,SAAA;AACT;AAwBA,IAAMf,sBAAA,GAAN,MAA6B;EAAA;EAE3B,IAAIzV,MAAA,EAAQ;IAGV,OAAO,KAAKhc,IAAA,GAAOugB,aAAa;EAClC;EAAA;EAEA7zB,YACA4G,GAAA,EAoBA3C,MAAA,EACA6yB,WAAA,EACAC,QAAA,EACAzjB,IAAA,EACA0pB,MAAA,EACAtU,SAAA,EAAWsZ,WAAA,EAAajvB,OAAA,EAAS;IAC/B,KAAKnM,GAAA,GAAMA,GAAA;IACX,KAAK3C,MAAA,GAASA,MAAA;IACd,KAAK6yB,WAAA,GAAcA,WAAA;IACnB,KAAKC,QAAA,GAAWA,QAAA;IAChB,KAAKzjB,IAAA,GAAOA,IAAA;IACZ,KAAK0pB,MAAA,GAASA,MAAA;IACd,KAAKtU,SAAA,GAAYA,SAAA;IACjB,KAAKsZ,WAAA,GAAcA,WAAA;IACnB,KAAKkE,QAAA,GAAWnzB,OAAA;EAClB;EAAA;EAEA,IAAI6jB,KAAA,EAAO;IACT,OAAO,KAAK6O,YAAA,CAAa7O,IAAA;EAC3B;EAAA;EAEA,IAAIzQ,OAAA,EAAS;IACX,OAAO,KAAKsf,YAAA,CAAatf,MAAA,CAAO,IAAI;EACtC;EAAA;EAEA,IAAI0d,WAAA,EAAa;IACf,OAAO,KAAK4B,YAAA,CAAa5B,UAAA,CAAW,IAAI;EAC1C;EAAA;EAEA,IAAIzM,SAAA,EAAW;IACb,OAAO,KAAKqO,YAAA,CAAarO,QAAA,CAAS,IAAI;EACxC;EAAA;EAEA,IAAIsM,aAAA,EAAe;IACjB,OAAO,KAAK+B,YAAA,CAAa/B,YAAA,CAAa,IAAI;EAC5C;EACA,IAAIgC,SAAA,EAAW;IACb,KAAKC,SAAA,KAAc1R,iBAAA,CAAkB,KAAKhwB,MAAM;IAChD,OAAO,KAAK0hC,SAAA;EACd;EACA,IAAI/N,cAAA,EAAgB;IAClB,KAAKC,cAAA,KAAmB5D,iBAAA,CAAkB,KAAK6C,WAAW;IAC1D,OAAO,KAAKe,cAAA;EACd;EACAz0B,SAAA,EAAW;IACT,MAAMwD,GAAA,GAAM,KAAKA,GAAA,CAAIzD,GAAA,CAAIwxB,OAAA,IAAWA,OAAA,CAAQvxB,QAAA,CAAS,CAAC,EAAEsC,IAAA,CAAK,GAAG;IAChE,MAAMygC,OAAA,GAAU,KAAKnE,WAAA,GAAc,KAAKA,WAAA,CAAY1N,IAAA,GAAO;IAC3D,OAAO,cAAc1tB,GAAG,YAAYu/B,OAAO;EAC7C;AACF;AA4BA,IAAMnB,mBAAA,GAAN,cAAkCxB,IAAA,CAAK;EAAA;EAErCxjC,YACA4G,GAAA,EAAKgwB,IAAA,EAAM;IACT,MAAMA,IAAI;IACV,KAAKhwB,GAAA,GAAMA,GAAA;IACXy9B,cAAA,CAAe,MAAMzN,IAAI;EAC3B;EACAxzB,SAAA,EAAW;IACT,OAAOgjC,aAAA,CAAc,KAAK3C,KAAK;EACjC;AACF;AACA,SAASY,eAAe/C,QAAOpuB,IAAA,EAAM;EACnCA,IAAA,CAAKnS,KAAA,CAAM0kC,YAAA,GAAenE;EAC1BpuB,IAAA,CAAKkkB,QAAA,CAAS72B,OAAA,CAAQ42B,CAAA,IAAKkN,cAAA,CAAe/C,QAAOnK,CAAC,CAAC;AACrD;AACA,SAASiP,cAAclzB,IAAA,EAAM;EAC3B,MAAMikB,CAAA,GAAIjkB,IAAA,CAAKkkB,QAAA,CAASt1B,MAAA,GAAS,IAAI,MAAMoR,IAAA,CAAKkkB,QAAA,CAASj0B,GAAA,CAAIijC,aAAa,EAAE1gC,IAAA,CAAK,IAAI,CAAC,QAAQ;EAC9F,OAAO,GAAGwN,IAAA,CAAKnS,KAAK,GAAGo2B,CAAC;AAC1B;AAMA,SAASkP,sBAAsBhS,KAAA,EAAO;EACpC,IAAIA,KAAA,CAAM0N,QAAA,EAAU;IAClB,MAAMuE,eAAA,GAAkBjS,KAAA,CAAM0N,QAAA;IAC9B,MAAMwE,YAAA,GAAelS,KAAA,CAAMkR,eAAA;IAC3BlR,KAAA,CAAM0N,QAAA,GAAWwE,YAAA;IACjB,IAAI,CAACpR,YAAA,CAAamR,eAAA,CAAgBxP,WAAA,EAAayP,YAAA,CAAazP,WAAW,GAAG;MACxEzC,KAAA,CAAM8Q,kBAAA,CAAmBr4B,IAAA,CAAKy5B,YAAA,CAAazP,WAAW;IACxD;IACA,IAAIwP,eAAA,CAAgBvP,QAAA,KAAawP,YAAA,CAAaxP,QAAA,EAAU;MACtD1C,KAAA,CAAM+Q,eAAA,CAAgBt4B,IAAA,CAAKy5B,YAAA,CAAaxP,QAAQ;IAClD;IACA,IAAI,CAAC5B,YAAA,CAAamR,eAAA,CAAgBriC,MAAA,EAAQsiC,YAAA,CAAatiC,MAAM,GAAG;MAC9DowB,KAAA,CAAM6Q,aAAA,CAAcp4B,IAAA,CAAKy5B,YAAA,CAAatiC,MAAM;IAC9C;IACA,IAAI,CAAC8wB,kBAAA,CAAmBuR,eAAA,CAAgB1/B,GAAA,EAAK2/B,YAAA,CAAa3/B,GAAG,GAAG;MAC9DytB,KAAA,CAAM4Q,UAAA,CAAWn4B,IAAA,CAAKy5B,YAAA,CAAa3/B,GAAG;IACxC;IACA,IAAI,CAACuuB,YAAA,CAAamR,eAAA,CAAgBhzB,IAAA,EAAMizB,YAAA,CAAajzB,IAAI,GAAG;MAC1D+gB,KAAA,CAAMgR,WAAA,CAAYv4B,IAAA,CAAKy5B,YAAA,CAAajzB,IAAI;IAC1C;EACF,OAAO;IACL+gB,KAAA,CAAM0N,QAAA,GAAW1N,KAAA,CAAMkR,eAAA;IAEvBlR,KAAA,CAAMgR,WAAA,CAAYv4B,IAAA,CAAKunB,KAAA,CAAMkR,eAAA,CAAgBjyB,IAAI;EACnD;AACF;AACA,SAASkzB,0BAA0BxR,CAAA,EAAGC,CAAA,EAAG;EACvC,MAAMwR,cAAA,GAAiBtR,YAAA,CAAaH,CAAA,CAAE/wB,MAAA,EAAQgxB,CAAA,CAAEhxB,MAAM,KAAKo0B,aAAA,CAAcrD,CAAA,CAAEpuB,GAAA,EAAKquB,CAAA,CAAEruB,GAAG;EACrF,MAAM8/B,eAAA,GAAkB,CAAC1R,CAAA,CAAE7O,MAAA,KAAW,CAAC8O,CAAA,CAAE9O,MAAA;EACzC,OAAOsgB,cAAA,IAAkB,CAACC,eAAA,KAAoB,CAAC1R,CAAA,CAAE7O,MAAA,IAAUqgB,yBAAA,CAA0BxR,CAAA,CAAE7O,MAAA,EAAQ8O,CAAA,CAAE9O,MAAM;AACzG;AACA,SAAS8f,eAAeU,MAAA,EAAQ;EAC9B,OAAO,OAAOA,MAAA,CAAOrX,KAAA,KAAU,YAAYqX,MAAA,CAAOrX,KAAA,KAAU;AAC9D;AAqDA,IAAMsX,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjB5mC,YAAA,EAAc;IACZ,KAAK6kC,SAAA,GAAY;IACjB,KAAKgC,eAAA,GAAkB;IAMvB,KAAKlmC,IAAA,GAAOizB,cAAA;IACZ,KAAKkT,cAAA,GAAiB,IAAIC,YAAA,CAAa;IACvC,KAAKC,gBAAA,GAAmB,IAAID,YAAA,CAAa;IAKzC,KAAKE,YAAA,GAAe,IAAIF,YAAA,CAAa;IAKrC,KAAKG,YAAA,GAAe,IAAIH,YAAA,CAAa;IACrC,KAAKI,cAAA,GAAiB37B,MAAA,CAAOo3B,sBAAsB;IACnD,KAAKwE,QAAA,GAAW57B,MAAA,CAAO67B,gBAAgB;IACvC,KAAKC,cAAA,GAAiB97B,MAAA,CAAO+7B,iBAAiB;IAC9C,KAAKC,mBAAA,GAAsBh8B,MAAA,CAAOuG,mBAAmB;IACrD,KAAK01B,WAAA,GAAcj8B,MAAA,CAAOk8B,YAAA,EAAc;MACtCh8B,QAAA,EAAU;IACZ,CAAC;IAED,KAAKi8B,gCAAA,GAAmC;EAC1C;EAAA;EAEA,IAAIC,sBAAA,EAAwB;IAC1B,OAAO,KAAK/C,SAAA;EACd;EAAA;EAEAgD,YAAYC,OAAA,EAAS;IACnB,IAAIA,OAAA,CAAQ,MAAM,GAAG;MACnB,MAAM;QACJC,WAAA;QACAC;MACF,IAAIF,OAAA,CAAQ,MAAM;MAClB,IAAIC,WAAA,EAAa;QAGf;MACF;MAEA,IAAI,KAAKE,yBAAA,CAA0BD,aAAa,GAAG;QACjD,KAAKE,UAAA,CAAW;QAChB,KAAKf,cAAA,CAAehE,sBAAA,CAAuB6E,aAAa;MAC1D;MAEA,KAAKG,wBAAA,CAAyB;IAChC;EACF;EAAA;EAEArmB,YAAA,EAAc;IAEZ,IAAI,KAAKmmB,yBAAA,CAA0B,KAAKtnC,IAAI,GAAG;MAC7C,KAAKwmC,cAAA,CAAehE,sBAAA,CAAuB,KAAKxiC,IAAI;IACtD;IACA,KAAK8mC,WAAA,EAAaW,wBAAA,CAAyB,IAAI;EACjD;EACAH,0BAA0BtM,UAAA,EAAY;IACpC,OAAO,KAAKwL,cAAA,CAAe/D,UAAA,CAAWzH,UAAU,GAAGqB,MAAA,KAAW;EAChE;EAAA;EAEAqL,SAAA,EAAW;IACT,KAAKF,wBAAA,CAAyB;EAChC;EACAA,yBAAA,EAA2B;IACzB,KAAKhB,cAAA,CAAenE,oBAAA,CAAqB,KAAKriC,IAAA,EAAM,IAAI;IACxD,IAAI,KAAKkkC,SAAA,EAAW;MAClB;IACF;IAGA,MAAMz9B,OAAA,GAAU,KAAK+/B,cAAA,CAAe/D,UAAA,CAAW,KAAKziC,IAAI;IACxD,IAAIyG,OAAA,EAASitB,KAAA,EAAO;MAClB,IAAIjtB,OAAA,CAAQy7B,SAAA,EAAW;QAErB,KAAKyF,MAAA,CAAOlhC,OAAA,CAAQy7B,SAAA,EAAWz7B,OAAA,CAAQitB,KAAK;MAC9C,OAAO;QAEL,KAAKkU,YAAA,CAAanhC,OAAA,CAAQitB,KAAA,EAAOjtB,OAAA,CAAQ4I,QAAQ;MACnD;IACF;EACF;EACA,IAAIw4B,YAAA,EAAc;IAChB,OAAO,CAAC,CAAC,KAAK3D,SAAA;EAChB;EAAA;AAAA;AAAA;AAAA;EAKA,IAAInc,UAAA,EAAY;IACd,IAAI,CAAC,KAAKmc,SAAA,EAAW,MAAM,IAAIvvB,YAAA,CAAc,OAAmD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yBAAyB;IAC3K,OAAO,KAAKojC,SAAA,CAAU4D,QAAA;EACxB;EACA,IAAIC,eAAA,EAAiB;IACnB,IAAI,CAAC,KAAK7D,SAAA,EAAW,MAAM,IAAIvvB,YAAA,CAAc,OAAmD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yBAAyB;IAC3K,OAAO,KAAKolC,eAAA;EACd;EACA,IAAI8B,mBAAA,EAAqB;IACvB,IAAI,KAAK9B,eAAA,EAAiB;MACxB,OAAO,KAAKA,eAAA,CAAgB9E,QAAA,CAASzuB,IAAA;IACvC;IACA,OAAO,CAAC;EACV;EAAA;AAAA;AAAA;EAIAs1B,OAAA,EAAS;IACP,IAAI,CAAC,KAAK/D,SAAA,EAAW,MAAM,IAAIvvB,YAAA,CAAc,OAAmD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yBAAyB;IAC3K,KAAK2lC,QAAA,CAASwB,MAAA,CAAO;IACrB,MAAMC,GAAA,GAAM,KAAKhE,SAAA;IACjB,KAAKA,SAAA,GAAY;IACjB,KAAKgC,eAAA,GAAkB;IACvB,KAAKK,YAAA,CAAa4B,IAAA,CAAKD,GAAA,CAAIJ,QAAQ;IACnC,OAAOI,GAAA;EACT;EAAA;AAAA;AAAA;EAIAP,OAAOS,GAAA,EAAKL,cAAA,EAAgB;IAC1B,KAAK7D,SAAA,GAAYkE,GAAA;IACjB,KAAKlC,eAAA,GAAkB6B,cAAA;IACvB,KAAKtB,QAAA,CAAS4B,MAAA,CAAOD,GAAA,CAAIE,QAAQ;IACjC,KAAKxB,WAAA,EAAayB,mCAAA,CAAoC,IAAI;IAC1D,KAAKjC,YAAA,CAAa6B,IAAA,CAAKC,GAAA,CAAIN,QAAQ;EACrC;EACAP,WAAA,EAAa;IACX,IAAI,KAAKrD,SAAA,EAAW;MAClB,MAAM1N,CAAA,GAAI,KAAKzO,SAAA;MACf,KAAKmc,SAAA,CAAUhf,OAAA,CAAQ;MACvB,KAAKgf,SAAA,GAAY;MACjB,KAAKgC,eAAA,GAAkB;MACvB,KAAKG,gBAAA,CAAiB8B,IAAA,CAAK3R,CAAC;IAC9B;EACF;EACAoR,aAAaG,cAAA,EAAgBlB,mBAAA,EAAqB;IAChD,IAAI,KAAKgB,WAAA,EAAa;MACpB,MAAM,IAAIlzB,YAAA,CAAc,OAAuD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,6CAA6C;IAChL;IACA,KAAKolC,eAAA,GAAkB6B,cAAA;IACvB,MAAMtB,QAAA,GAAW,KAAKA,QAAA;IACtB,MAAMrF,QAAA,GAAW2G,cAAA,CAAe3G,QAAA;IAChC,MAAMrZ,SAAA,GAAYqZ,QAAA,CAASrZ,SAAA;IAC3B,MAAMygB,aAAA,GAAgB,KAAKhC,cAAA,CAAejE,kBAAA,CAAmB,KAAKviC,IAAI,EAAEy2B,QAAA;IACxE,MAAMpnB,QAAA,GAAW,IAAIo5B,cAAA,CAAeV,cAAA,EAAgBS,aAAA,EAAe/B,QAAA,CAASp3B,QAAQ;IACpF,KAAK60B,SAAA,GAAYuC,QAAA,CAASiC,eAAA,CAAgB3gB,SAAA,EAAW;MACnDjoB,KAAA,EAAO2mC,QAAA,CAAStlC,MAAA;MAChBkO,QAAA;MACAw3B,mBAAA,EAAqBA,mBAAA,IAAuB,KAAKA;IACnD,CAAC;IAGD,KAAKF,cAAA,CAAegC,YAAA,CAAa;IACjC,KAAK7B,WAAA,EAAayB,mCAAA,CAAoC,IAAI;IAC1D,KAAKpC,cAAA,CAAegC,IAAA,CAAK,KAAKjE,SAAA,CAAU4D,QAAQ;EAClD;AAwBF;AAtBI7B,aAAA,CAAKr8B,IAAA,GAAO,SAASg/B,qBAAqB3kC,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKgiC,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAK4C,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM++B,aAAA;EACN8C,SAAA,EAAW,CAAC,CAAC,eAAe,CAAC;EAC7BC,MAAA,EAAQ;IACNhpC,IAAA,EAAM;EACR;EACAipC,OAAA,EAAS;IACP9C,cAAA,EAAgB;IAChBE,gBAAA,EAAkB;IAClBC,YAAA,EAAc;IACdC,YAAA,EAAc;EAChB;EACA2C,QAAA,EAAU,CAAC,QAAQ;EACnBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2wB,oBAAoB;AACpC,CAAC;AAxLL,IAAMC,YAAA,GAANpD,aAAA;AAAA,CA2LC,MAAM;EACL,CAAC,OAAOnlC,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBk/B,YAAA,EAAc,CAAC;IACrFniC,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACRnpC,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACDpD,cAAA,EAAgB,CAAC;MACfj/B,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;IACDwyB,gBAAA,EAAkB,CAAC;MACjBn/B,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,YAAY;IACrB,CAAC;IACDyyB,YAAA,EAAc,CAAC;MACbp/B,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,QAAQ;IACjB,CAAC;IACD0yB,YAAA,EAAc,CAAC;MACbr/B,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,QAAQ;IACjB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM40B,cAAA,GAAN,MAAMgB,eAAA,CAAe;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAgBnBC,mBAAmBC,cAAA,EAAgB;IACjC,OAAO,IAAIF,eAAA,CAAe,KAAK/V,KAAA,EAAO,KAAK8U,aAAA,EAAemB,cAAc;EAC1E;EACAtqC,YAAYq0B,KAAA,EAAO8U,aAAA,EAAehjB,MAAA,EAAQ;IACxC,KAAKkO,KAAA,GAAQA,KAAA;IACb,KAAK8U,aAAA,GAAgBA,aAAA;IACrB,KAAKhjB,MAAA,GAASA,MAAA;EAChB;EACAhlB,IAAI2E,KAAA,EAAOykC,aAAA,EAAe;IACxB,IAAIzkC,KAAA,KAAUg/B,cAAA,EAAgB;MAC5B,OAAO,KAAKzQ,KAAA;IACd;IACA,IAAIvuB,KAAA,KAAU88B,sBAAA,EAAwB;MACpC,OAAO,KAAKuG,aAAA;IACd;IACA,OAAO,KAAKhjB,MAAA,CAAOhlB,GAAA,CAAI2E,KAAA,EAAOykC,aAAa;EAC7C;AACF;AACA,IAAM7C,YAAA,GAAe,IAAIv3B,cAAA,CAAe,EAAE;AAe1C,IAAMq6B,2BAAA,GAAN,MAAMA,2BAAA,CAA2B;EAC/BxqC,YAAA,EAAc;IACZ,KAAKyqC,uBAAA,GAA0B,mBAAItqC,GAAA,CAAI;EACzC;EACA+oC,oCAAoClM,MAAA,EAAQ;IAC1C,KAAKoL,wBAAA,CAAyBpL,MAAM;IACpC,KAAK0N,oBAAA,CAAqB1N,MAAM;EAClC;EACAoL,yBAAyBpL,MAAA,EAAQ;IAC/B,KAAKyN,uBAAA,CAAwBtpC,GAAA,CAAI67B,MAAM,GAAG2N,WAAA,CAAY;IACtD,KAAKF,uBAAA,CAAwBnoC,MAAA,CAAO06B,MAAM;EAC5C;EACA0N,qBAAqB1N,MAAA,EAAQ;IAC3B,MAAM;MACJ0L;IACF,IAAI1L,MAAA;IACJ,MAAM4N,gBAAA,GAAmBC,aAAA,CAAc,CAACnC,cAAA,CAAe5R,WAAA,EAAa4R,cAAA,CAAezkC,MAAA,EAAQykC,cAAA,CAAep1B,IAAI,CAAC,EAAE1J,IAAA,CAAK6L,SAAA,CAAU,CAAC,CAACqhB,WAAA,EAAa7yB,MAAA,EAAQqP,IAAI,GAAG7S,KAAA,KAAU;MACtK6S,IAAA,GAAO1G,cAAA,CAAAA,cAAA,CAAAA,cAAA,KACFkqB,WAAA,GACA7yB,MAAA,GACAqP,IAAA;MAIL,IAAI7S,KAAA,KAAU,GAAG;QACf,OAAOkJ,EAAA,CAAG2J,IAAI;MAChB;MAIA,OAAOR,OAAA,CAAQC,OAAA,CAAQO,IAAI;IAC7B,CAAC,CAAC,EAAEw3B,SAAA,CAAUx3B,IAAA,IAAQ;MAGpB,IAAI,CAAC0pB,MAAA,CAAOwL,WAAA,IAAe,CAACxL,MAAA,CAAO4K,qBAAA,IAAyB5K,MAAA,CAAO0L,cAAA,KAAmBA,cAAA,IAAkBA,cAAA,CAAehgB,SAAA,KAAc,MAAM;QACzI,KAAK0f,wBAAA,CAAyBpL,MAAM;QACpC;MACF;MACA,MAAM+N,MAAA,GAASC,oBAAA,CAAqBtC,cAAA,CAAehgB,SAAS;MAC5D,IAAI,CAACqiB,MAAA,EAAQ;QACX,KAAK3C,wBAAA,CAAyBpL,MAAM;QACpC;MACF;MACA,WAAW;QACTiO;MACF,KAAKF,MAAA,CAAOpB,MAAA,EAAQ;QAClB3M,MAAA,CAAO4K,qBAAA,CAAsBsD,QAAA,CAASD,YAAA,EAAc33B,IAAA,CAAK23B,YAAY,CAAC;MACxE;IACF,CAAC;IACD,KAAKR,uBAAA,CAAwBppC,GAAA,CAAI27B,MAAA,EAAQ4N,gBAAgB;EAC3D;AAYF;AAVIJ,2BAAA,CAAKjgC,IAAA,GAAO,SAAS4gC,mCAAmCvmC,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAK4lC,2BAAA,EAA4B;AAC/C;AAGAA,2BAAA,CAAK9/B,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO0kC,2BAAA;EACP5/B,OAAA,EAAS4/B,2BAAA,CAA2BjgC;AACtC,CAAC;AA5DL,IAAM6gC,0BAAA,GAANZ,2BAAA;AAAA,CA+DC,MAAM;EACL,CAAC,OAAO/oC,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsgC,0BAAA,EAA4B,CAAC;IACnGvjC,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAASsgC,kBAAkBC,kBAAA,EAAoBlL,IAAA,EAAMmL,SAAA,EAAW;EAC9D,MAAM3U,IAAA,GAAO4U,UAAA,CAAWF,kBAAA,EAAoBlL,IAAA,CAAKqD,KAAA,EAAO8H,SAAA,GAAYA,SAAA,CAAU9H,KAAA,GAAQ,MAAS;EAC/F,OAAO,IAAIW,WAAA,CAAYxN,IAAA,EAAMwJ,IAAI;AACnC;AACA,SAASoL,WAAWF,kBAAA,EAAoBlL,IAAA,EAAMmL,SAAA,EAAW;EAEvD,IAAIA,SAAA,IAAaD,kBAAA,CAAmBG,gBAAA,CAAiBrL,IAAA,CAAKr/B,KAAA,EAAOwqC,SAAA,CAAUxqC,KAAA,CAAMghC,QAAQ,GAAG;IAC1F,MAAMhhC,KAAA,GAAQwqC,SAAA,CAAUxqC,KAAA;IACxBA,KAAA,CAAMwkC,eAAA,GAAkBnF,IAAA,CAAKr/B,KAAA;IAC7B,MAAMq2B,QAAA,GAAWsU,qBAAA,CAAsBJ,kBAAA,EAAoBlL,IAAA,EAAMmL,SAAS;IAC1E,OAAO,IAAIrH,QAAA,CAASnjC,KAAA,EAAOq2B,QAAQ;EACrC,OAAO;IACL,IAAIkU,kBAAA,CAAmBK,YAAA,CAAavL,IAAA,CAAKr/B,KAAK,GAAG;MAE/C,MAAM6qC,mBAAA,GAAsBN,kBAAA,CAAmBO,QAAA,CAASzL,IAAA,CAAKr/B,KAAK;MAClE,IAAI6qC,mBAAA,KAAwB,MAAM;QAChC,MAAMxS,QAAOwS,mBAAA,CAAoBvX,KAAA;QACjC+E,MAAKr4B,KAAA,CAAMwkC,eAAA,GAAkBnF,IAAA,CAAKr/B,KAAA;QAClCq4B,MAAKhC,QAAA,GAAWgJ,IAAA,CAAKhJ,QAAA,CAASj0B,GAAA,CAAIg0B,CAAA,IAAKqU,UAAA,CAAWF,kBAAA,EAAoBnU,CAAC,CAAC;QACxE,OAAOiC;MACT;IACF;IACA,MAAMr4B,KAAA,GAAQ+qC,oBAAA,CAAqB1L,IAAA,CAAKr/B,KAAK;IAC7C,MAAMq2B,QAAA,GAAWgJ,IAAA,CAAKhJ,QAAA,CAASj0B,GAAA,CAAIg0B,CAAA,IAAKqU,UAAA,CAAWF,kBAAA,EAAoBnU,CAAC,CAAC;IACzE,OAAO,IAAI+M,QAAA,CAASnjC,KAAA,EAAOq2B,QAAQ;EACrC;AACF;AACA,SAASsU,sBAAsBJ,kBAAA,EAAoBlL,IAAA,EAAMmL,SAAA,EAAW;EAClE,OAAOnL,IAAA,CAAKhJ,QAAA,CAASj0B,GAAA,CAAIu1B,KAAA,IAAS;IAChC,WAAWK,CAAA,IAAKwS,SAAA,CAAUnU,QAAA,EAAU;MAClC,IAAIkU,kBAAA,CAAmBG,gBAAA,CAAiB/S,KAAA,CAAM33B,KAAA,EAAOg4B,CAAA,CAAEh4B,KAAA,CAAMghC,QAAQ,GAAG;QACtE,OAAOyJ,UAAA,CAAWF,kBAAA,EAAoB5S,KAAA,EAAOK,CAAC;MAChD;IACF;IACA,OAAOyS,UAAA,CAAWF,kBAAA,EAAoB5S,KAAK;EAC7C,CAAC;AACH;AACA,SAASoT,qBAAqB3U,CAAA,EAAG;EAC/B,OAAO,IAAI2N,cAAA,CAAe,IAAIL,eAAA,CAAgBtN,CAAA,CAAEvwB,GAAG,GAAG,IAAI69B,eAAA,CAAgBtN,CAAA,CAAElzB,MAAM,GAAG,IAAIwgC,eAAA,CAAgBtN,CAAA,CAAEL,WAAW,GAAG,IAAI2N,eAAA,CAAgBtN,CAAA,CAAEJ,QAAQ,GAAG,IAAI0N,eAAA,CAAgBtN,CAAA,CAAE7jB,IAAI,GAAG6jB,CAAA,CAAE6F,MAAA,EAAQ7F,CAAA,CAAEzO,SAAA,EAAWyO,CAAC;AACjN;AACA,IAAM4U,0BAAA,GAA6B;AACnC,SAASC,2BAA2BC,aAAA,EAAeC,QAAA,EAAU;EAC3D,MAAM;IACJC,UAAA;IACAC;EACF,IAAIhQ,SAAA,CAAU8P,QAAQ,IAAI;IACxBC,UAAA,EAAYD,QAAA;IACZE,yBAAA,EAA2B;EAC7B,IAAIF,QAAA;EACJ,MAAMhjC,KAAA,GAAQmjC,wBAAA,CAAyB5qC,SAAA,IAAa,mBAAmBwqC,aAAA,CAAclU,SAAA,CAAUoU,UAAU,CAAC,KAAKpL,0BAAA,CAA2BuL,QAAQ;EAClJpjC,KAAA,CAAMtC,GAAA,GAAMulC,UAAA;EACZjjC,KAAA,CAAMkjC,yBAAA,GAA4BA,yBAAA;EAClC,OAAOljC,KAAA;AACT;AACA,SAASmjC,yBAAyBpjC,OAAA,EAAS2hB,IAAA,EAAM;EAC/C,MAAM1hB,KAAA,GAAQ,IAAI5F,KAAA,CAAM,6BAA6B2F,OAAA,IAAW,EAAE,EAAE;EACpEC,KAAA,CAAM6iC,0BAA0B,IAAI;EACpC7iC,KAAA,CAAMqjC,gBAAA,GAAmB3hB,IAAA;EACzB,OAAO1hB,KAAA;AACT;AACA,SAASsjC,sCAAsCtjC,KAAA,EAAO;EACpD,OAAOujC,0BAAA,CAA2BvjC,KAAK,KAAKkzB,SAAA,CAAUlzB,KAAA,CAAMtC,GAAG;AACjE;AACA,SAAS6lC,2BAA2BvjC,KAAA,EAAO;EACzC,OAAO,CAAC,CAACA,KAAA,IAASA,KAAA,CAAM6iC,0BAA0B;AACpD;AAWA,IAAMW,sBAAA,GAAN,MAAMA,sBAAA,CAAsB,EAuB5B;AArBIA,sBAAA,CAAKniC,IAAA,GAAO,SAASoiC,8BAA8B/nC,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAK8nC,sBAAA,EAAuB;AAC1C;AAGAA,sBAAA,CAAKE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM6kC,sBAAA;EACNhD,SAAA,EAAW,CAAC,CAAC,cAAc,CAAC;EAC5BI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,QAAA,EAAU,SAASC,+BAA+BC,EAAA,EAAIlb,GAAA,EAAK;IACzD,IAAIkb,EAAA,GAAK,GAAG;MACPC,SAAA,CAAU,GAAG,eAAe;IACjC;EACF;EACAC,YAAA,EAAc,CAACrD,YAAY;EAC3BrlB,aAAA,EAAe;AACjB,CAAC;AArBL,IAAM2oB,qBAAA,GAANZ,sBAAA;AAAA,CAwBC,MAAM;EACL,CAAC,OAAOjrC,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwiC,qBAAA,EAAuB,CAAC;IAC9FzlC,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACLy4B,QAAA,EAAU;MACVhgB,OAAA,EAAS,CAAC+c,YAAY;MACtBF,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,SAAS0D,iCAAiCnZ,KAAA,EAAOoZ,eAAA,EAAiB;EAChE,IAAIpZ,KAAA,CAAMrb,SAAA,IAAa,CAACqb,KAAA,CAAMqZ,SAAA,EAAW;IACvCrZ,KAAA,CAAMqZ,SAAA,GAAYC,yBAAA,CAA0BtZ,KAAA,CAAMrb,SAAA,EAAWy0B,eAAA,EAAiB,UAAUpZ,KAAA,CAAMC,IAAI,EAAE;EACtG;EACA,OAAOD,KAAA,CAAMqZ,SAAA,IAAaD,eAAA;AAC5B;AAaA,SAASG,eAAejH,MAAA,EAAQkH,UAAA,GAAa,IAAIC,2BAAA,GAA8B,OAAO;EAEpF,SAAS5Y,CAAA,GAAI,GAAGA,CAAA,GAAIyR,MAAA,CAAO7kC,MAAA,EAAQozB,CAAA,IAAK;IACtC,MAAMb,KAAA,GAAQsS,MAAA,CAAOzR,CAAC;IACtB,MAAM6Y,QAAA,GAAWC,WAAA,CAAYH,UAAA,EAAYxZ,KAAK;IAC9C4Z,YAAA,CAAa5Z,KAAA,EAAO0Z,QAAA,EAAUD,2BAA2B;EAC3D;AACF;AACA,SAASI,iBAAiBH,QAAA,EAAUrlB,SAAA,EAAW;EAC7C,IAAIA,SAAA,IAAaylB,UAAA,CAAYzlB,SAAS,GAAG;IACvC,MAAM,IAAIpT,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,6HAAkI;EACzP,WAAWrlB,SAAA,IAAa,CAAC0lB,YAAA,CAAa1lB,SAAS,GAAG;IAChD,MAAM,IAAIpT,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,sCAAsC;EAC7J;AACF;AACA,SAASE,aAAa5Z,KAAA,EAAO0Z,QAAA,EAAUD,2BAAA,EAA6B;EAClE,IAAI,OAAOrsC,SAAA,KAAc,eAAeA,SAAA,EAAW;IACjD,IAAI,CAAC4yB,KAAA,EAAO;MACV,MAAM,IAAI/e,YAAA,CAAc,MAAkD;AAAA,wCACxCy4B,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAS3C;IACD;IACA,IAAI/rC,KAAA,CAAMkB,OAAA,CAAQmxB,KAAK,GAAG;MACxB,MAAM,IAAI/e,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,8BAA8B;IACrJ;IACA,IAAI,CAAC1Z,KAAA,CAAM8X,UAAA,IAAc,CAAC9X,KAAA,CAAM3L,SAAA,IAAa,CAAC2L,KAAA,CAAM0R,aAAA,IAAiB,CAAC1R,KAAA,CAAM+C,QAAA,IAAY,CAAC/C,KAAA,CAAMga,YAAA,IAAgBha,KAAA,CAAM2I,MAAA,IAAU3I,KAAA,CAAM2I,MAAA,KAAWpJ,cAAA,EAAgB;MAC9J,MAAM,IAAIte,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,0FAA0F;IACjN;IACA,IAAI1Z,KAAA,CAAM8X,UAAA,IAAc9X,KAAA,CAAM+C,QAAA,EAAU;MACtC,MAAM,IAAI9hB,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,oDAAoD;IAC3K;IACA,IAAI1Z,KAAA,CAAM8X,UAAA,IAAc9X,KAAA,CAAMga,YAAA,EAAc;MAC1C,MAAM,IAAI/4B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,wDAAwD;IAC/K;IACA,IAAI1Z,KAAA,CAAM+C,QAAA,IAAY/C,KAAA,CAAMga,YAAA,EAAc;MACxC,MAAM,IAAI/4B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,sDAAsD;IAC7K;IACA,IAAI1Z,KAAA,CAAM8X,UAAA,KAAe9X,KAAA,CAAM3L,SAAA,IAAa2L,KAAA,CAAM0R,aAAA,GAAgB;MAChE,MAAM,IAAIzwB,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,mEAAmE;IAC1L;IACA,IAAI1Z,KAAA,CAAM3L,SAAA,IAAa2L,KAAA,CAAM0R,aAAA,EAAe;MAC1C,MAAM,IAAIzwB,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,wDAAwD;IAC/K;IACA,IAAI1Z,KAAA,CAAM8X,UAAA,IAAc9X,KAAA,CAAMia,WAAA,EAAa;MACzC,MAAM,IAAIh5B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,kIAAuI;IAC9P;IACA,IAAI1Z,KAAA,CAAMC,IAAA,IAAQD,KAAA,CAAMka,OAAA,EAAS;MAC/B,MAAM,IAAIj5B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,6CAA6C;IACpK;IACA,IAAI1Z,KAAA,CAAM8X,UAAA,KAAe,UAAU,CAAC9X,KAAA,CAAM3L,SAAA,IAAa,CAAC2L,KAAA,CAAM0R,aAAA,IAAiB,CAAC1R,KAAA,CAAM+C,QAAA,IAAY,CAAC/C,KAAA,CAAMga,YAAA,EAAc;MACrH,MAAM,IAAI/4B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,0GAA0G;IACjO;IACA,IAAI1Z,KAAA,CAAMC,IAAA,KAAS,UAAUD,KAAA,CAAMka,OAAA,KAAY,QAAQ;MACrD,MAAM,IAAIj5B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,0DAA0D;IACjL;IACA,IAAI,OAAO1Z,KAAA,CAAMC,IAAA,KAAS,YAAYD,KAAA,CAAMC,IAAA,CAAKka,MAAA,CAAO,CAAC,MAAM,KAAK;MAClE,MAAM,IAAIl5B,YAAA,CAAc,MAAkD,mCAAmCy4B,QAAQ,mCAAmC;IAC1J;IACA,IAAI1Z,KAAA,CAAMC,IAAA,KAAS,MAAMD,KAAA,CAAM8X,UAAA,KAAe,UAAU9X,KAAA,CAAME,SAAA,KAAc,QAAQ;MAClF,MAAMka,GAAA,GAAM;MACZ,MAAM,IAAIn5B,YAAA,CAAc,MAAkD,2CAA2Cy4B,QAAQ,mBAAmB1Z,KAAA,CAAM8X,UAAU,oCAAoCsC,GAAG,EAAE;IAC3M;IACA,IAAIX,2BAAA,EAA6B;MAC/BI,gBAAA,CAAiBH,QAAA,EAAU1Z,KAAA,CAAM3L,SAAS;IAC5C;EACF;EACA,IAAI2L,KAAA,CAAM+C,QAAA,EAAU;IAClBwW,cAAA,CAAevZ,KAAA,CAAM+C,QAAA,EAAU2W,QAAA,EAAUD,2BAA2B;EACtE;AACF;AACA,SAASE,YAAYH,UAAA,EAAYhR,YAAA,EAAc;EAC7C,IAAI,CAACA,YAAA,EAAc;IACjB,OAAOgR,UAAA;EACT;EACA,IAAI,CAACA,UAAA,IAAc,CAAChR,YAAA,CAAavI,IAAA,EAAM;IACrC,OAAO;EACT,WAAWuZ,UAAA,IAAc,CAAChR,YAAA,CAAavI,IAAA,EAAM;IAC3C,OAAO,GAAGuZ,UAAU;EACtB,WAAW,CAACA,UAAA,IAAchR,YAAA,CAAavI,IAAA,EAAM;IAC3C,OAAOuI,YAAA,CAAavI,IAAA;EACtB,OAAO;IACL,OAAO,GAAGuZ,UAAU,IAAIhR,YAAA,CAAavI,IAAI;EAC3C;AACF;AAIA,SAASoa,kBAAkB/c,CAAA,EAAG;EAC5B,MAAMyF,QAAA,GAAWzF,CAAA,CAAEyF,QAAA,IAAYzF,CAAA,CAAEyF,QAAA,CAASj0B,GAAA,CAAIurC,iBAAiB;EAC/D,MAAMvX,CAAA,GAAIC,QAAA,GAAWtS,aAAA,CAAAlY,cAAA,KAChB+kB,CAAA,GADgB;IAEnByF;EACF,KAAIxqB,cAAA,KACC+kB,CAAA;EAEL,IAAI,CAACwF,CAAA,CAAEzO,SAAA,IAAa,CAACyO,CAAA,CAAE4O,aAAA,KAAkB3O,QAAA,IAAYD,CAAA,CAAEkX,YAAA,KAAiBlX,CAAA,CAAE6F,MAAA,IAAU7F,CAAA,CAAE6F,MAAA,KAAWpJ,cAAA,EAAgB;IAC/GuD,CAAA,CAAEzO,SAAA,GAAY4kB,qBAAA;EAChB;EACA,OAAOnW,CAAA;AACT;AAEA,SAASwX,UAAUta,KAAA,EAAO;EACxB,OAAOA,KAAA,CAAM2I,MAAA,IAAUpJ,cAAA;AACzB;AAKA,SAASgb,sBAAsBC,SAAQlT,UAAA,EAAY;EACjD,MAAMmT,YAAA,GAAeD,QAAO7rC,MAAA,CAAO2uB,CAAA,IAAKgd,SAAA,CAAUhd,CAAC,MAAMgK,UAAU;EACnEmT,YAAA,CAAa1tC,IAAA,CAAK,GAAGytC,QAAO7rC,MAAA,CAAO2uB,CAAA,IAAKgd,SAAA,CAAUhd,CAAC,MAAMgK,UAAU,CAAC;EACpE,OAAOmT,YAAA;AACT;AAaA,SAASC,wBAAwBhN,QAAA,EAAU;EACzC,IAAI,CAACA,QAAA,EAAU,OAAO;EAItB,IAAIA,QAAA,CAASC,WAAA,EAAa0L,SAAA,EAAW;IACnC,OAAO3L,QAAA,CAASC,WAAA,CAAY0L,SAAA;EAC9B;EACA,SAAS/oC,CAAA,GAAIo9B,QAAA,CAAS5b,MAAA,EAAQxhB,CAAA,EAAGA,CAAA,GAAIA,CAAA,CAAEwhB,MAAA,EAAQ;IAC7C,MAAMkO,KAAA,GAAQ1vB,CAAA,CAAEq9B,WAAA;IAKhB,IAAI3N,KAAA,EAAO2a,eAAA,EAAiB,OAAO3a,KAAA,CAAM2a,eAAA;IACzC,IAAI3a,KAAA,EAAOqZ,SAAA,EAAW,OAAOrZ,KAAA,CAAMqZ,SAAA;EACrC;EACA,OAAO;AACT;AACA,IAAIuB,kCAAA,GAAqC;AACzC,IAAMC,cAAA,GAAiBA,CAACC,YAAA,EAAc7D,kBAAA,EAAoB8D,YAAA,EAAcC,mBAAA,KAAwBlsC,GAAA,CAAIyB,CAAA,IAAK;EACvG,IAAI0qC,cAAA,CAAehE,kBAAA,EAAoB1mC,CAAA,CAAE2qC,iBAAA,EAAmB3qC,CAAA,CAAE4qC,kBAAA,EAAoBJ,YAAA,EAAcC,mBAAmB,EAAEI,QAAA,CAASN,YAAY;EAC1I,OAAOvqC,CAAA;AACT,CAAC;AACD,IAAM0qC,cAAA,GAAN,MAAqB;EACnBtvC,YAAYsrC,kBAAA,EAAoBoE,WAAA,EAAaC,SAAA,EAAWP,YAAA,EAAcC,mBAAA,EAAqB;IACzF,KAAK/D,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKoE,WAAA,GAAcA,WAAA;IACnB,KAAKC,SAAA,GAAYA,SAAA;IACjB,KAAKP,YAAA,GAAeA,YAAA;IACpB,KAAKC,mBAAA,GAAsBA,mBAAA;EAC7B;EACAI,SAAStI,cAAA,EAAgB;IACvB,MAAMyI,UAAA,GAAa,KAAKF,WAAA,CAAYjM,KAAA;IACpC,MAAMoM,QAAA,GAAW,KAAKF,SAAA,GAAY,KAAKA,SAAA,CAAUlM,KAAA,GAAQ;IACzD,KAAKqM,qBAAA,CAAsBF,UAAA,EAAYC,QAAA,EAAU1I,cAAc;IAC/Dd,qBAAA,CAAsB,KAAKqJ,WAAA,CAAY9Y,IAAI;IAC3C,KAAKmZ,mBAAA,CAAoBH,UAAA,EAAYC,QAAA,EAAU1I,cAAc;EAC/D;EAAA;EAEA2I,sBAAsBE,UAAA,EAAYC,QAAA,EAAUlN,QAAA,EAAU;IACpD,MAAM3L,QAAA,GAAW+M,iBAAA,CAAkB8L,QAAQ;IAE3CD,UAAA,CAAW5Y,QAAA,CAAS72B,OAAA,CAAQ2vC,WAAA,IAAe;MACzC,MAAMC,eAAA,GAAkBD,WAAA,CAAYnvC,KAAA,CAAMi8B,MAAA;MAC1C,KAAKoT,gBAAA,CAAiBF,WAAA,EAAa9Y,QAAA,CAAS+Y,eAAe,GAAGpN,QAAQ;MACtE,OAAO3L,QAAA,CAAS+Y,eAAe;IACjC,CAAC;IAEDxuC,MAAA,CAAOJ,MAAA,CAAO61B,QAAQ,EAAE72B,OAAA,CAAQkE,CAAA,IAAK;MACnC,KAAK4rC,6BAAA,CAA8B5rC,CAAA,EAAGs+B,QAAQ;IAChD,CAAC;EACH;EACAqN,iBAAiBJ,UAAA,EAAYC,QAAA,EAAUK,aAAA,EAAe;IACpD,MAAMC,MAAA,GAASP,UAAA,CAAWjvC,KAAA;IAC1B,MAAMq/B,IAAA,GAAO6P,QAAA,GAAWA,QAAA,CAASlvC,KAAA,GAAQ;IACzC,IAAIwvC,MAAA,KAAWnQ,IAAA,EAAM;MAEnB,IAAImQ,MAAA,CAAO7nB,SAAA,EAAW;QAEpB,MAAMthB,OAAA,GAAUkpC,aAAA,CAAclN,UAAA,CAAWmN,MAAA,CAAOvT,MAAM;QACtD,IAAI51B,OAAA,EAAS;UACX,KAAK0oC,qBAAA,CAAsBE,UAAA,EAAYC,QAAA,EAAU7oC,OAAA,CAAQgwB,QAAQ;QACnE;MACF,OAAO;QAEL,KAAK0Y,qBAAA,CAAsBE,UAAA,EAAYC,QAAA,EAAUK,aAAa;MAChE;IACF,OAAO;MACL,IAAIlQ,IAAA,EAAM;QAER,KAAKiQ,6BAAA,CAA8BJ,QAAA,EAAUK,aAAa;MAC5D;IACF;EACF;EACAD,8BAA8Bhc,KAAA,EAAO8S,cAAA,EAAgB;IAGnD,IAAI9S,KAAA,CAAMtzB,KAAA,CAAM2nB,SAAA,IAAa,KAAK4iB,kBAAA,CAAmBkF,YAAA,CAAanc,KAAA,CAAMtzB,KAAA,CAAMghC,QAAQ,GAAG;MACvF,KAAK0O,0BAAA,CAA2Bpc,KAAA,EAAO8S,cAAc;IACvD,OAAO;MACL,KAAKuJ,wBAAA,CAAyBrc,KAAA,EAAO8S,cAAc;IACrD;EACF;EACAsJ,2BAA2Bpc,KAAA,EAAO8S,cAAA,EAAgB;IAChD,MAAM//B,OAAA,GAAU+/B,cAAA,CAAe/D,UAAA,CAAW/O,KAAA,CAAMtzB,KAAA,CAAMi8B,MAAM;IAC5D,MAAM+F,QAAA,GAAW37B,OAAA,IAAWitB,KAAA,CAAMtzB,KAAA,CAAM2nB,SAAA,GAAYthB,OAAA,CAAQgwB,QAAA,GAAW+P,cAAA;IACvE,MAAM/P,QAAA,GAAW+M,iBAAA,CAAkB9P,KAAK;IACxC,WAAWsc,QAAA,IAAYhvC,MAAA,CAAOJ,MAAA,CAAO61B,QAAQ,GAAG;MAC9C,KAAKiZ,6BAAA,CAA8BM,QAAA,EAAU5N,QAAQ;IACvD;IACA,IAAI37B,OAAA,IAAWA,OAAA,CAAQ41B,MAAA,EAAQ;MAC7B,MAAM4T,YAAA,GAAexpC,OAAA,CAAQ41B,MAAA,CAAO4L,MAAA,CAAO;MAC3C,MAAM7F,YAAW37B,OAAA,CAAQgwB,QAAA,CAASiM,mBAAA,CAAoB;MACtD,KAAKiI,kBAAA,CAAmBuF,KAAA,CAAMxc,KAAA,CAAMtzB,KAAA,CAAMghC,QAAA,EAAU;QAClD6O,YAAA;QACAvc,KAAA;QACA0O,QAAA,EAAAA;MACF,CAAC;IACH;EACF;EACA2N,yBAAyBrc,KAAA,EAAO8S,cAAA,EAAgB;IAC9C,MAAM//B,OAAA,GAAU+/B,cAAA,CAAe/D,UAAA,CAAW/O,KAAA,CAAMtzB,KAAA,CAAMi8B,MAAM;IAG5D,MAAM+F,QAAA,GAAW37B,OAAA,IAAWitB,KAAA,CAAMtzB,KAAA,CAAM2nB,SAAA,GAAYthB,OAAA,CAAQgwB,QAAA,GAAW+P,cAAA;IACvE,MAAM/P,QAAA,GAAW+M,iBAAA,CAAkB9P,KAAK;IACxC,WAAWsc,QAAA,IAAYhvC,MAAA,CAAOJ,MAAA,CAAO61B,QAAQ,GAAG;MAC9C,KAAKiZ,6BAAA,CAA8BM,QAAA,EAAU5N,QAAQ;IACvD;IACA,IAAI37B,OAAA,EAAS;MACX,IAAIA,OAAA,CAAQ41B,MAAA,EAAQ;QAElB51B,OAAA,CAAQ41B,MAAA,CAAOkL,UAAA,CAAW;QAE1B9gC,OAAA,CAAQgwB,QAAA,CAASiM,mBAAA,CAAoB;MACvC;MAIAj8B,OAAA,CAAQy7B,SAAA,GAAY;MACpBz7B,OAAA,CAAQitB,KAAA,GAAQ;IAClB;EACF;EACA0b,oBAAoBC,UAAA,EAAYC,QAAA,EAAUlN,QAAA,EAAU;IAClD,MAAM3L,QAAA,GAAW+M,iBAAA,CAAkB8L,QAAQ;IAC3CD,UAAA,CAAW5Y,QAAA,CAAS72B,OAAA,CAAQ42B,CAAA,IAAK;MAC/B,KAAK+X,cAAA,CAAe/X,CAAA,EAAGC,QAAA,CAASD,CAAA,CAAEp2B,KAAA,CAAMi8B,MAAM,GAAG+F,QAAQ;MACzD,KAAKqM,YAAA,CAAa,IAAIjN,aAAA,CAAchL,CAAA,CAAEp2B,KAAA,CAAMghC,QAAQ,CAAC;IACvD,CAAC;IACD,IAAIiO,UAAA,CAAW5Y,QAAA,CAASt1B,MAAA,EAAQ;MAC9B,KAAKstC,YAAA,CAAa,IAAInN,kBAAA,CAAmB+N,UAAA,CAAWjvC,KAAA,CAAMghC,QAAQ,CAAC;IACrE;EACF;EACAmN,eAAec,UAAA,EAAYC,QAAA,EAAU9I,cAAA,EAAgB;IACnD,MAAMoJ,MAAA,GAASP,UAAA,CAAWjvC,KAAA;IAC1B,MAAMq/B,IAAA,GAAO6P,QAAA,GAAWA,QAAA,CAASlvC,KAAA,GAAQ;IACzCslC,qBAAA,CAAsBkK,MAAM;IAE5B,IAAIA,MAAA,KAAWnQ,IAAA,EAAM;MACnB,IAAImQ,MAAA,CAAO7nB,SAAA,EAAW;QAEpB,MAAMthB,OAAA,GAAU+/B,cAAA,CAAejE,kBAAA,CAAmBqN,MAAA,CAAOvT,MAAM;QAC/D,KAAK+S,mBAAA,CAAoBC,UAAA,EAAYC,QAAA,EAAU7oC,OAAA,CAAQgwB,QAAQ;MACjE,OAAO;QAEL,KAAK2Y,mBAAA,CAAoBC,UAAA,EAAYC,QAAA,EAAU9I,cAAc;MAC/D;IACF,OAAO;MACL,IAAIoJ,MAAA,CAAO7nB,SAAA,EAAW;QAEpB,MAAMthB,OAAA,GAAU+/B,cAAA,CAAejE,kBAAA,CAAmBqN,MAAA,CAAOvT,MAAM;QAC/D,IAAI,KAAKsO,kBAAA,CAAmBK,YAAA,CAAa4E,MAAA,CAAOxO,QAAQ,GAAG;UACzD,MAAM+O,MAAA,GAAS,KAAKxF,kBAAA,CAAmBO,QAAA,CAAS0E,MAAA,CAAOxO,QAAQ;UAC/D,KAAKuJ,kBAAA,CAAmBuF,KAAA,CAAMN,MAAA,CAAOxO,QAAA,EAAU,IAAI;UACnD36B,OAAA,CAAQgwB,QAAA,CAASkM,kBAAA,CAAmBwN,MAAA,CAAO/N,QAAQ;UACnD37B,OAAA,CAAQy7B,SAAA,GAAYiO,MAAA,CAAOF,YAAA;UAC3BxpC,OAAA,CAAQitB,KAAA,GAAQyc,MAAA,CAAOzc,KAAA,CAAMtzB,KAAA;UAC7B,IAAIqG,OAAA,CAAQ41B,MAAA,EAAQ;YAGlB51B,OAAA,CAAQ41B,MAAA,CAAOsL,MAAA,CAAOwI,MAAA,CAAOF,YAAA,EAAcE,MAAA,CAAOzc,KAAA,CAAMtzB,KAAK;UAC/D;UACAslC,qBAAA,CAAsByK,MAAA,CAAOzc,KAAA,CAAMtzB,KAAK;UACxC,KAAKgvC,mBAAA,CAAoBC,UAAA,EAAY,MAAM5oC,OAAA,CAAQgwB,QAAQ;QAC7D,OAAO;UACL,MAAMpnB,QAAA,GAAW++B,uBAAA,CAAwBwB,MAAA,CAAOxO,QAAQ;UACxD36B,OAAA,CAAQy7B,SAAA,GAAY;UACpBz7B,OAAA,CAAQitB,KAAA,GAAQkc,MAAA;UAChBnpC,OAAA,CAAQ4I,QAAA,GAAWA,QAAA;UACnB,IAAI5I,OAAA,CAAQ41B,MAAA,EAAQ;YAGlB51B,OAAA,CAAQ41B,MAAA,CAAOuL,YAAA,CAAagI,MAAA,EAAQnpC,OAAA,CAAQ4I,QAAQ;UACtD;UACA,KAAK+/B,mBAAA,CAAoBC,UAAA,EAAY,MAAM5oC,OAAA,CAAQgwB,QAAQ;QAC7D;MACF,OAAO;QAEL,KAAK2Y,mBAAA,CAAoBC,UAAA,EAAY,MAAM7I,cAAc;MAC3D;IACF;IACA,IAAI,OAAO1lC,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,MAAM2F,OAAA,GAAU+/B,cAAA,CAAejE,kBAAA,CAAmBqN,MAAA,CAAOvT,MAAM;MAC/D,MAAMA,MAAA,GAAS51B,OAAA,CAAQ41B,MAAA;MACvB,IAAIA,MAAA,IAAU,KAAKqS,mBAAA,IAAuB,CAACrS,MAAA,CAAO2K,gCAAA,IAAoC,CAACsH,kCAAA,EAAoC;QACzHxe,OAAA,CAAQhf,IAAA,CAAK,0IAA+I;QAC5Jw9B,kCAAA,GAAqC;MACvC;IACF;EACF;AACF;AACA,IAAM8B,WAAA,GAAN,MAAkB;EAChB/wC,YAAYs0B,IAAA,EAAM;IAChB,KAAKA,IAAA,GAAOA,IAAA;IACZ,KAAKD,KAAA,GAAQ,KAAKC,IAAA,CAAK,KAAKA,IAAA,CAAKxyB,MAAA,GAAS,CAAC;EAC7C;AACF;AACA,IAAMkvC,aAAA,GAAN,MAAoB;EAClBhxC,YAAY0oB,SAAA,EAAW2L,KAAA,EAAO;IAC5B,KAAK3L,SAAA,GAAYA,SAAA;IACjB,KAAK2L,KAAA,GAAQA,KAAA;EACf;AACF;AACA,SAAS4c,kBAAkBV,MAAA,EAAQnQ,IAAA,EAAM+G,cAAA,EAAgB;EACvD,MAAMyI,UAAA,GAAaW,MAAA,CAAO9M,KAAA;EAC1B,MAAMoM,QAAA,GAAWzP,IAAA,GAAOA,IAAA,CAAKqD,KAAA,GAAQ;EACrC,OAAOyN,mBAAA,CAAoBtB,UAAA,EAAYC,QAAA,EAAU1I,cAAA,EAAgB,CAACyI,UAAA,CAAW7uC,KAAK,CAAC;AACrF;AACA,SAASowC,oBAAoBpY,CAAA,EAAG;EAC9B,MAAMqY,gBAAA,GAAmBrY,CAAA,CAAEiJ,WAAA,GAAcjJ,CAAA,CAAEiJ,WAAA,CAAYoP,gBAAA,GAAmB;EAC1E,IAAI,CAACA,gBAAA,IAAoBA,gBAAA,CAAiBtvC,MAAA,KAAW,GAAG,OAAO;EAC/D,OAAO;IACLoR,IAAA,EAAM6lB,CAAA;IACNsY,MAAA,EAAQD;EACV;AACF;AACA,SAASE,2BAA2BC,eAAA,EAAiBvhC,QAAA,EAAU;EAC7D,MAAMwhC,SAAA,GAAY1d,MAAA,CAAO;EACzB,MAAMtJ,MAAA,GAASxa,QAAA,CAAS7O,GAAA,CAAIowC,eAAA,EAAiBC,SAAS;EACtD,IAAIhnB,MAAA,KAAWgnB,SAAA,EAAW;IACxB,IAAI,OAAOD,eAAA,KAAoB,cAAc,CAACE,YAAA,CAAcF,eAAe,GAAG;MAE5E,OAAOA,eAAA;IACT,OAAO;MAEL,OAAOvhC,QAAA,CAAS7O,GAAA,CAAIowC,eAAe;IACrC;EACF;EACA,OAAO/mB,MAAA;AACT;AACA,SAAS0mB,oBAAoBlB,UAAA,EAAYC,QAAA,EAAUlN,QAAA,EAAU2O,UAAA,EAAYC,MAAA,GAAS;EAChFC,mBAAA,EAAqB,EAAC;EACtBC,iBAAA,EAAmB;AACrB,GAAG;EACD,MAAMC,YAAA,GAAe3N,iBAAA,CAAkB8L,QAAQ;EAE/CD,UAAA,CAAW5Y,QAAA,CAAS72B,OAAA,CAAQ42B,CAAA,IAAK;IAC/B4a,cAAA,CAAe5a,CAAA,EAAG2a,YAAA,CAAa3a,CAAA,CAAEp2B,KAAA,CAAMi8B,MAAM,GAAG+F,QAAA,EAAU2O,UAAA,CAAW9uC,MAAA,CAAO,CAACu0B,CAAA,CAAEp2B,KAAK,CAAC,GAAG4wC,MAAM;IAC9F,OAAOG,YAAA,CAAa3a,CAAA,CAAEp2B,KAAA,CAAMi8B,MAAM;EACpC,CAAC;EAEDr7B,MAAA,CAAOC,OAAA,CAAQkwC,YAAY,EAAEvxC,OAAA,CAAQ,CAAC,CAACm5B,CAAA,EAAGj1B,CAAC,MAAM4rC,6BAAA,CAA8B5rC,CAAA,EAAGs+B,QAAA,CAASK,UAAA,CAAW1J,CAAC,GAAGiY,MAAM,CAAC;EACjH,OAAOA,MAAA;AACT;AACA,SAASI,eAAe/B,UAAA,EAAYC,QAAA,EAAU9I,cAAA,EAAgBuK,UAAA,EAAYC,MAAA,GAAS;EACjFC,mBAAA,EAAqB,EAAC;EACtBC,iBAAA,EAAmB;AACrB,GAAG;EACD,MAAMtB,MAAA,GAASP,UAAA,CAAWjvC,KAAA;EAC1B,MAAMq/B,IAAA,GAAO6P,QAAA,GAAWA,QAAA,CAASlvC,KAAA,GAAQ;EACzC,MAAMqG,OAAA,GAAU+/B,cAAA,GAAiBA,cAAA,CAAe/D,UAAA,CAAW4M,UAAA,CAAWjvC,KAAA,CAAMi8B,MAAM,IAAI;EAEtF,IAAIoD,IAAA,IAAQmQ,MAAA,CAAOvO,WAAA,KAAgB5B,IAAA,CAAK4B,WAAA,EAAa;IACnD,MAAMgQ,SAAA,GAAYC,2BAAA,CAA4B7R,IAAA,EAAMmQ,MAAA,EAAQA,MAAA,CAAOvO,WAAA,CAAYkQ,qBAAqB;IACpG,IAAIF,SAAA,EAAW;MACbL,MAAA,CAAOE,iBAAA,CAAkBzwC,IAAA,CAAK,IAAI2vC,WAAA,CAAYW,UAAU,CAAC;IAC3D,OAAO;MAELnB,MAAA,CAAOj9B,IAAA,GAAO8sB,IAAA,CAAK9sB,IAAA;MACnBi9B,MAAA,CAAOvK,aAAA,GAAgB5F,IAAA,CAAK4F,aAAA;IAC9B;IAEA,IAAIuK,MAAA,CAAO7nB,SAAA,EAAW;MACpBwoB,mBAAA,CAAoBlB,UAAA,EAAYC,QAAA,EAAU7oC,OAAA,GAAUA,OAAA,CAAQgwB,QAAA,GAAW,MAAMsa,UAAA,EAAYC,MAAM;IAEjG,OAAO;MACLT,mBAAA,CAAoBlB,UAAA,EAAYC,QAAA,EAAU9I,cAAA,EAAgBuK,UAAA,EAAYC,MAAM;IAC9E;IACA,IAAIK,SAAA,IAAa5qC,OAAA,IAAWA,OAAA,CAAQ41B,MAAA,IAAU51B,OAAA,CAAQ41B,MAAA,CAAOwL,WAAA,EAAa;MACxEmJ,MAAA,CAAOC,mBAAA,CAAoBxwC,IAAA,CAAK,IAAI4vC,aAAA,CAAc5pC,OAAA,CAAQ41B,MAAA,CAAOtU,SAAA,EAAW0X,IAAI,CAAC;IACnF;EACF,OAAO;IACL,IAAIA,IAAA,EAAM;MACRiQ,6BAAA,CAA8BJ,QAAA,EAAU7oC,OAAA,EAASuqC,MAAM;IACzD;IACAA,MAAA,CAAOE,iBAAA,CAAkBzwC,IAAA,CAAK,IAAI2vC,WAAA,CAAYW,UAAU,CAAC;IAEzD,IAAInB,MAAA,CAAO7nB,SAAA,EAAW;MACpBwoB,mBAAA,CAAoBlB,UAAA,EAAY,MAAM5oC,OAAA,GAAUA,OAAA,CAAQgwB,QAAA,GAAW,MAAMsa,UAAA,EAAYC,MAAM;IAE7F,OAAO;MACLT,mBAAA,CAAoBlB,UAAA,EAAY,MAAM7I,cAAA,EAAgBuK,UAAA,EAAYC,MAAM;IAC1E;EACF;EACA,OAAOA,MAAA;AACT;AACA,SAASM,4BAA4B7R,IAAA,EAAMmQ,MAAA,EAAQ1nB,IAAA,EAAM;EACvD,IAAI,OAAOA,IAAA,KAAS,YAAY;IAC9B,OAAOA,IAAA,CAAKuX,IAAA,EAAMmQ,MAAM;EAC1B;EACA,QAAQ1nB,IAAA;IACN,KAAK;MACH,OAAO,CAACmO,SAAA,CAAUoJ,IAAA,CAAKx5B,GAAA,EAAK2pC,MAAA,CAAO3pC,GAAG;IACxC,KAAK;MACH,OAAO,CAACowB,SAAA,CAAUoJ,IAAA,CAAKx5B,GAAA,EAAK2pC,MAAA,CAAO3pC,GAAG,KAAK,CAACuuB,YAAA,CAAaiL,IAAA,CAAKtJ,WAAA,EAAayZ,MAAA,CAAOzZ,WAAW;IAC/F,KAAK;MACH,OAAO;IACT,KAAK;MACH,OAAO,CAAC0P,yBAAA,CAA0BpG,IAAA,EAAMmQ,MAAM,KAAK,CAACpb,YAAA,CAAaiL,IAAA,CAAKtJ,WAAA,EAAayZ,MAAA,CAAOzZ,WAAW;IACvG,KAAK;IACL;MACE,OAAO,CAAC0P,yBAAA,CAA0BpG,IAAA,EAAMmQ,MAAM;EAClD;AACF;AACA,SAASF,8BAA8Bhc,KAAA,EAAOjtB,OAAA,EAASuqC,MAAA,EAAQ;EAC7D,MAAMva,QAAA,GAAW+M,iBAAA,CAAkB9P,KAAK;EACxC,MAAM1C,CAAA,GAAI0C,KAAA,CAAMtzB,KAAA;EAChBY,MAAA,CAAOC,OAAA,CAAQw1B,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAAC0iC,SAAA,EAAW/vB,IAAI,MAAM;IACtD,IAAI,CAACye,CAAA,CAAEjJ,SAAA,EAAW;MAChB2nB,6BAAA,CAA8Bn9B,IAAA,EAAM9L,OAAA,EAASuqC,MAAM;IACrD,WAAWvqC,OAAA,EAAS;MAClBipC,6BAAA,CAA8Bn9B,IAAA,EAAM9L,OAAA,CAAQgwB,QAAA,CAASgM,UAAA,CAAWH,SAAS,GAAG0O,MAAM;IACpF,OAAO;MACLtB,6BAAA,CAA8Bn9B,IAAA,EAAM,MAAMy+B,MAAM;IAClD;EACF,CAAC;EACD,IAAI,CAAChgB,CAAA,CAAEjJ,SAAA,EAAW;IAChBipB,MAAA,CAAOC,mBAAA,CAAoBxwC,IAAA,CAAK,IAAI4vC,aAAA,CAAc,MAAMrf,CAAC,CAAC;EAC5D,WAAWvqB,OAAA,IAAWA,OAAA,CAAQ41B,MAAA,IAAU51B,OAAA,CAAQ41B,MAAA,CAAOwL,WAAA,EAAa;IAClEmJ,MAAA,CAAOC,mBAAA,CAAoBxwC,IAAA,CAAK,IAAI4vC,aAAA,CAAc5pC,OAAA,CAAQ41B,MAAA,CAAOtU,SAAA,EAAWiJ,CAAC,CAAC;EAChF,OAAO;IACLggB,MAAA,CAAOC,mBAAA,CAAoBxwC,IAAA,CAAK,IAAI4vC,aAAA,CAAc,MAAMrf,CAAC,CAAC;EAC5D;AACF;AAeA,SAASwgB,WAAW1tC,CAAA,EAAG;EACrB,OAAO,OAAOA,CAAA,KAAM;AACtB;AACA,SAAS2tC,UAAU3tC,CAAA,EAAG;EACpB,OAAO,OAAOA,CAAA,KAAM;AACtB;AACA,SAAS4tC,UAAUC,KAAA,EAAO;EACxB,OAAOA,KAAA,IAASH,UAAA,CAAWG,KAAA,CAAMC,OAAO;AAC1C;AACA,SAASC,cAAcF,KAAA,EAAO;EAC5B,OAAOA,KAAA,IAASH,UAAA,CAAWG,KAAA,CAAMhE,WAAW;AAC9C;AACA,SAASmE,mBAAmBH,KAAA,EAAO;EACjC,OAAOA,KAAA,IAASH,UAAA,CAAWG,KAAA,CAAMlB,gBAAgB;AACnD;AACA,SAASsB,gBAAgBJ,KAAA,EAAO;EAC9B,OAAOA,KAAA,IAASH,UAAA,CAAWG,KAAA,CAAMK,aAAa;AAChD;AACA,SAASC,WAAWN,KAAA,EAAO;EACzB,OAAOA,KAAA,IAASH,UAAA,CAAWG,KAAA,CAAMO,QAAQ;AAC3C;AACA,SAASC,aAAaC,CAAA,EAAG;EACvB,OAAOA,CAAA,YAAaC,UAAA,IAAcD,CAAA,EAAGpyC,IAAA,KAAS;AAChD;AACA,IAAMsyC,aAAA,GAA+B,eAAAnf,MAAA,CAAO,eAAe;AAC3D,SAASof,sBAAA,EAAwB;EAC/B,OAAOz9B,SAAA,CAAU09B,GAAA,IAAO;IACtB,OAAOtI,aAAA,CAAcsI,GAAA,CAAIhwC,GAAA,CAAI48B,CAAA,IAAKA,CAAA,CAAEn2B,IAAA,CAAKwpC,IAAA,CAAK,CAAC,GAAGC,SAAA,CAAUJ,aAAa,CAAC,CAAC,CAAC,EAAErpC,IAAA,CAAKzG,GAAA,CAAImwC,OAAA,IAAW;MAChG,WAAW9oB,MAAA,IAAU8oB,OAAA,EAAS;QAC5B,IAAI9oB,MAAA,KAAW,MAAM;UAEnB;QACF,WAAWA,MAAA,KAAWyoB,aAAA,EAAe;UAEnC,OAAOA,aAAA;QACT,WAAWzoB,MAAA,KAAW,SAASA,MAAA,YAAkBkN,OAAA,EAAS;UAIxD,OAAOlN,MAAA;QACT;MACF;MAEA,OAAO;IACT,CAAC,GAAGxnB,MAAA,CAAOuwC,IAAA,IAAQA,IAAA,KAASN,aAAa,GAAGG,IAAA,CAAK,CAAC,CAAC;EACrD,CAAC;AACH;AACA,SAASI,YAAYxjC,QAAA,EAAUo/B,YAAA,EAAc;EAC3C,OAAOqE,QAAA,CAAS7uC,CAAA,IAAK;IACnB,MAAM;MACJ8uC,cAAA;MACApN,eAAA;MACA+K,MAAA,EAAQ;QACNQ,iBAAA;QACAD;MACF;IACF,IAAIhtC,CAAA;IACJ,IAAIgtC,mBAAA,CAAoB9vC,MAAA,KAAW,KAAK+vC,iBAAA,CAAkB/vC,MAAA,KAAW,GAAG;MACtE,OAAO6H,EAAA,CAAGmb,aAAA,CAAAlY,cAAA,KACLhI,CAAA,GADK;QAER+uC,YAAA,EAAc;MAChB,EAAC;IACH;IACA,OAAOC,sBAAA,CAAuBhC,mBAAA,EAAqB8B,cAAA,EAAgBpN,eAAA,EAAiBt2B,QAAQ,EAAEpG,IAAA,CAAK6pC,QAAA,CAASd,aAAA,IAAiB;MAC3H,OAAOA,aAAA,IAAiBP,SAAA,CAAUO,aAAa,IAAIkB,oBAAA,CAAqBH,cAAA,EAAgB7B,iBAAA,EAAmB7hC,QAAA,EAAUo/B,YAAY,IAAIzlC,EAAA,CAAGgpC,aAAa;IACvJ,CAAC,GAAGxvC,GAAA,CAAIwwC,YAAA,IAAiB7uB,aAAA,CAAAlY,cAAA,KACpBhI,CAAA,GADoB;MAEvB+uC;IACF,EAAE,CAAC;EACL,CAAC;AACH;AACA,SAASC,uBAAuBjC,MAAA,EAAQmC,SAAA,EAAWC,OAAA,EAAS/jC,QAAA,EAAU;EACpE,OAAO/N,IAAA,CAAK0vC,MAAM,EAAE/nC,IAAA,CAAK6pC,QAAA,CAASO,KAAA,IAASC,gBAAA,CAAiBD,KAAA,CAAMtrB,SAAA,EAAWsrB,KAAA,CAAM3f,KAAA,EAAO0f,OAAA,EAASD,SAAA,EAAW9jC,QAAQ,CAAC,GAAGxG,KAAA,CAAMghB,MAAA,IAAU;IACxI,OAAOA,MAAA,KAAW;EACpB,GAAG,IAAI,CAAC;AACV;AACA,SAASqpB,qBAAqBvO,cAAA,EAAgBqM,MAAA,EAAQ3hC,QAAA,EAAUo/B,YAAA,EAAc;EAC5E,OAAOntC,IAAA,CAAK0vC,MAAM,EAAE/nC,IAAA,CAAKC,SAAA,CAAUmqC,KAAA,IAAS;IAC1C,OAAOpxC,MAAA,CAAOsxC,wBAAA,CAAyBF,KAAA,CAAM3f,KAAA,CAAMlO,MAAA,EAAQipB,YAAY,GAAG+E,mBAAA,CAAoBH,KAAA,CAAM3f,KAAA,EAAO+a,YAAY,GAAGgF,mBAAA,CAAoB9O,cAAA,EAAgB0O,KAAA,CAAM1f,IAAA,EAAMtkB,QAAQ,GAAGqkC,cAAA,CAAe/O,cAAA,EAAgB0O,KAAA,CAAM3f,KAAA,EAAOrkB,QAAQ,CAAC;EAC5O,CAAC,GAAGxG,KAAA,CAAMghB,MAAA,IAAU;IAClB,OAAOA,MAAA,KAAW;EACpB,GAAG,IAAI,CAAC;AACV;AASA,SAAS2pB,oBAAoBpS,QAAA,EAAUqN,YAAA,EAAc;EACnD,IAAIrN,QAAA,KAAa,QAAQqN,YAAA,EAAc;IACrCA,YAAA,CAAa,IAAIlN,eAAA,CAAgBH,QAAQ,CAAC;EAC5C;EACA,OAAOp4B,EAAA,CAAG,IAAI;AAChB;AASA,SAASuqC,yBAAyBnS,QAAA,EAAUqN,YAAA,EAAc;EACxD,IAAIrN,QAAA,KAAa,QAAQqN,YAAA,EAAc;IACrCA,YAAA,CAAa,IAAItN,oBAAA,CAAqBC,QAAQ,CAAC;EACjD;EACA,OAAOp4B,EAAA,CAAG,IAAI;AAChB;AACA,SAAS0qC,eAAeP,SAAA,EAAWQ,SAAA,EAAWtkC,QAAA,EAAU;EACtD,MAAMs+B,WAAA,GAAcgG,SAAA,CAAUtS,WAAA,GAAcsS,SAAA,CAAUtS,WAAA,CAAYsM,WAAA,GAAc;EAChF,IAAI,CAACA,WAAA,IAAeA,WAAA,CAAYxsC,MAAA,KAAW,GAAG,OAAO6H,EAAA,CAAG,IAAI;EAC5D,MAAM4qC,sBAAA,GAAyBjG,WAAA,CAAYnrC,GAAA,CAAImrC,gBAAe;IAC5D,OAAOkG,KAAA,CAAM,MAAM;MACjB,MAAMC,eAAA,GAAkB1F,uBAAA,CAAwBuF,SAAS,KAAKtkC,QAAA;MAC9D,MAAMsiC,KAAA,GAAQhB,0BAAA,CAA2BhD,cAAamG,eAAe;MACrE,MAAMC,QAAA,GAAWlC,aAAA,CAAcF,KAAK,IAAIA,KAAA,CAAMhE,WAAA,CAAYgG,SAAA,EAAWR,SAAS,IAAI7jC,qBAAA,CAAsBwkC,eAAA,EAAiB,MAAMnC,KAAA,CAAMgC,SAAA,EAAWR,SAAS,CAAC;MAC1J,OAAOhe,kBAAA,CAAmB4e,QAAQ,EAAE9qC,IAAA,CAAKJ,KAAA,CAAM,CAAC;IAClD,CAAC;EACH,CAAC;EACD,OAAOG,EAAA,CAAG4qC,sBAAsB,EAAE3qC,IAAA,CAAKspC,qBAAA,CAAsB,CAAC;AAChE;AACA,SAASkB,oBAAoBN,SAAA,EAAWxf,IAAA,EAAMtkB,QAAA,EAAU;EACtD,MAAMskC,SAAA,GAAYhgB,IAAA,CAAKA,IAAA,CAAKxyB,MAAA,GAAS,CAAC;EACtC,MAAM6yC,sBAAA,GAAyBrgB,IAAA,CAAK1zB,KAAA,CAAM,GAAG0zB,IAAA,CAAKxyB,MAAA,GAAS,CAAC,EAAEke,OAAA,CAAQ,EAAE7c,GAAA,CAAI41B,CAAA,IAAKoY,mBAAA,CAAoBpY,CAAC,CAAC,EAAE/1B,MAAA,CAAO4xC,CAAA,IAAKA,CAAA,KAAM,IAAI;EAC/H,MAAMC,4BAAA,GAA+BF,sBAAA,CAAuBxxC,GAAA,CAAIqiC,CAAA,IAAK;IACnE,OAAOgP,KAAA,CAAM,MAAM;MACjB,MAAMM,YAAA,GAAetP,CAAA,CAAE6L,MAAA,CAAOluC,GAAA,CAAIiuC,gBAAA,IAAoB;QACpD,MAAMqD,eAAA,GAAkB1F,uBAAA,CAAwBvJ,CAAA,CAAEtyB,IAAI,KAAKlD,QAAA;QAC3D,MAAMsiC,KAAA,GAAQhB,0BAAA,CAA2BF,gBAAA,EAAkBqD,eAAe;QAC1E,MAAMC,QAAA,GAAWjC,kBAAA,CAAmBH,KAAK,IAAIA,KAAA,CAAMlB,gBAAA,CAAiBkD,SAAA,EAAWR,SAAS,IAAI7jC,qBAAA,CAAsBwkC,eAAA,EAAiB,MAAMnC,KAAA,CAAMgC,SAAA,EAAWR,SAAS,CAAC;QACpK,OAAOhe,kBAAA,CAAmB4e,QAAQ,EAAE9qC,IAAA,CAAKJ,KAAA,CAAM,CAAC;MAClD,CAAC;MACD,OAAOG,EAAA,CAAGmrC,YAAY,EAAElrC,IAAA,CAAKspC,qBAAA,CAAsB,CAAC;IACtD,CAAC;EACH,CAAC;EACD,OAAOvpC,EAAA,CAAGkrC,4BAA4B,EAAEjrC,IAAA,CAAKspC,qBAAA,CAAsB,CAAC;AACtE;AACA,SAASe,iBAAiBvrB,SAAA,EAAWqsB,OAAA,EAAShB,OAAA,EAASD,SAAA,EAAW9jC,QAAA,EAAU;EAC1E,MAAM2iC,aAAA,GAAgBoC,OAAA,IAAWA,OAAA,CAAQ/S,WAAA,GAAc+S,OAAA,CAAQ/S,WAAA,CAAY2Q,aAAA,GAAgB;EAC3F,IAAI,CAACA,aAAA,IAAiBA,aAAA,CAAc7wC,MAAA,KAAW,GAAG,OAAO6H,EAAA,CAAG,IAAI;EAChE,MAAMqrC,wBAAA,GAA2BrC,aAAA,CAAcxvC,GAAA,CAAIg0B,CAAA,IAAK;IACtD,MAAMsd,eAAA,GAAkB1F,uBAAA,CAAwBgG,OAAO,KAAK/kC,QAAA;IAC5D,MAAMsiC,KAAA,GAAQhB,0BAAA,CAA2Bna,CAAA,EAAGsd,eAAe;IAC3D,MAAMC,QAAA,GAAWhC,eAAA,CAAgBJ,KAAK,IAAIA,KAAA,CAAMK,aAAA,CAAcjqB,SAAA,EAAWqsB,OAAA,EAAShB,OAAA,EAASD,SAAS,IAAI7jC,qBAAA,CAAsBwkC,eAAA,EAAiB,MAAMnC,KAAA,CAAM5pB,SAAA,EAAWqsB,OAAA,EAAShB,OAAA,EAASD,SAAS,CAAC;IAClM,OAAOhe,kBAAA,CAAmB4e,QAAQ,EAAE9qC,IAAA,CAAKJ,KAAA,CAAM,CAAC;EAClD,CAAC;EACD,OAAOG,EAAA,CAAGqrC,wBAAwB,EAAEprC,IAAA,CAAKspC,qBAAA,CAAsB,CAAC;AAClE;AACA,SAAS+B,iBAAiBjlC,QAAA,EAAUqkB,KAAA,EAAOF,QAAA,EAAU8X,aAAA,EAAe;EAClE,MAAMsG,OAAA,GAAUle,KAAA,CAAMke,OAAA;EACtB,IAAIA,OAAA,KAAY,UAAaA,OAAA,CAAQzwC,MAAA,KAAW,GAAG;IACjD,OAAO6H,EAAA,CAAG,IAAI;EAChB;EACA,MAAMurC,kBAAA,GAAqB3C,OAAA,CAAQpvC,GAAA,CAAIgyC,cAAA,IAAkB;IACvD,MAAM7C,KAAA,GAAQhB,0BAAA,CAA2B6D,cAAA,EAAgBnlC,QAAQ;IACjE,MAAM0kC,QAAA,GAAWrC,SAAA,CAAUC,KAAK,IAAIA,KAAA,CAAMC,OAAA,CAAQle,KAAA,EAAOF,QAAQ,IAAIlkB,qBAAA,CAAsBD,QAAA,EAAU,MAAMsiC,KAAA,CAAMje,KAAA,EAAOF,QAAQ,CAAC;IACjI,OAAO2B,kBAAA,CAAmB4e,QAAQ;EACpC,CAAC;EACD,OAAO/qC,EAAA,CAAGurC,kBAAkB,EAAEtrC,IAAA,CAAKspC,qBAAA,CAAsB,GAAGkC,iBAAA,CAAkBnJ,aAAa,CAAC;AAC9F;AACA,SAASmJ,kBAAkBnJ,aAAA,EAAe;EACxC,OAAOriC,IAAA,CAAKyrC,GAAA,CAAI7qB,MAAA,IAAU;IACxB,IAAI,CAAC4R,SAAA,CAAU5R,MAAM,GAAG;IACxB,MAAMwhB,0BAAA,CAA2BC,aAAA,EAAezhB,MAAM;EACxD,CAAC,GAAGrnB,GAAA,CAAIqnB,MAAA,IAAUA,MAAA,KAAW,IAAI,CAAC;AACpC;AACA,SAAS8qB,kBAAkBtlC,QAAA,EAAUqkB,KAAA,EAAOF,QAAA,EAAU8X,aAAA,EAAe;EACnE,MAAM4G,QAAA,GAAWxe,KAAA,CAAMwe,QAAA;EACvB,IAAI,CAACA,QAAA,IAAYA,QAAA,CAAS/wC,MAAA,KAAW,GAAG,OAAO6H,EAAA,CAAG,IAAI;EACtD,MAAM4rC,mBAAA,GAAsB1C,QAAA,CAAS1vC,GAAA,CAAIgyC,cAAA,IAAkB;IACzD,MAAM7C,KAAA,GAAQhB,0BAAA,CAA2B6D,cAAA,EAAgBnlC,QAAQ;IACjE,MAAM0kC,QAAA,GAAW9B,UAAA,CAAWN,KAAK,IAAIA,KAAA,CAAMO,QAAA,CAASxe,KAAA,EAAOF,QAAQ,IAAIlkB,qBAAA,CAAsBD,QAAA,EAAU,MAAMsiC,KAAA,CAAMje,KAAA,EAAOF,QAAQ,CAAC;IACnI,OAAO2B,kBAAA,CAAmB4e,QAAQ;EACpC,CAAC;EACD,OAAO/qC,EAAA,CAAG4rC,mBAAmB,EAAE3rC,IAAA,CAAKspC,qBAAA,CAAsB,GAAGkC,iBAAA,CAAkBnJ,aAAa,CAAC;AAC/F;AACA,IAAMuJ,OAAA,GAAN,MAAc;EACZx1C,YAAYo0B,YAAA,EAAc;IACxB,KAAKA,YAAA,GAAeA,YAAA,IAAgB;EACtC;AACF;AACA,IAAMqhB,gBAAA,GAAN,cAA+BnyC,KAAA,CAAM;EACnCtD,YAAY01C,OAAA,EAAS;IACnB,MAAM;IACN,KAAKA,OAAA,GAAUA,OAAA;EACjB;AACF;AACA,SAASC,UAAUvhB,YAAA,EAAc;EAC/B,OAAOwhB,UAAA,CAAW,IAAIJ,OAAA,CAAQphB,YAAY,CAAC;AAC7C;AAIA,SAASyhB,qBAAqB1J,UAAA,EAAY;EACxC,OAAOyJ,UAAA,CAAW,IAAItgC,YAAA,CAAc,MAAoD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,gEAAgE0qC,UAAU,GAAG,CAAC;AAC1N;AACA,SAAS2J,aAAazhB,KAAA,EAAO;EAC3B,OAAOuhB,UAAA,CAAWvJ,wBAAA,EAA0B,OAAO5qC,SAAA,KAAc,eAAeA,SAAA,KAAc,+DAA+D4yB,KAAA,CAAMC,IAAI,qBAAqByM,0BAAA,CAA2BgV,aAAa,CAAC;AACvO;AACA,IAAMC,cAAA,GAAN,MAAqB;EACnBh2C,YAAYisC,aAAA,EAAeyJ,OAAA,EAAS;IAClC,KAAKzJ,aAAA,GAAgBA,aAAA;IACrB,KAAKyJ,OAAA,GAAUA,OAAA;EACjB;EACAO,mBAAmB5hB,KAAA,EAAOqhB,OAAA,EAAS;IACjC,IAAIpwC,GAAA,GAAM,EAAC;IACX,IAAI6xB,CAAA,GAAIue,OAAA,CAAQ9e,IAAA;IAChB,OAAO,MAAM;MACXtxB,GAAA,GAAMA,GAAA,CAAI1C,MAAA,CAAOu0B,CAAA,CAAEhD,QAAQ;MAC3B,IAAIgD,CAAA,CAAED,gBAAA,KAAqB,GAAG;QAC5B,OAAOvtB,EAAA,CAAGrE,GAAG;MACf;MACA,IAAI6xB,CAAA,CAAED,gBAAA,GAAmB,KAAK,CAACC,CAAA,CAAEC,QAAA,CAASxD,cAAc,GAAG;QACzD,OAAOiiB,oBAAA,CAAqBxhB,KAAA,CAAM8X,UAAU;MAC9C;MACAhV,CAAA,GAAIA,CAAA,CAAEC,QAAA,CAASxD,cAAc;IAC/B;EACF;EACAsiB,sBAAsB/hB,QAAA,EAAUgY,UAAA,EAAY1X,SAAA,EAAW;IACrD,MAAM0hB,OAAA,GAAU,KAAKC,0BAAA,CAA2BjK,UAAA,EAAY,KAAKF,aAAA,CAAct9B,KAAA,CAAMw9B,UAAU,GAAGhY,QAAA,EAAUM,SAAS;IACrH,IAAI0X,UAAA,CAAW3zB,UAAA,CAAW,GAAG,GAAG;MAC9B,MAAM,IAAIi9B,gBAAA,CAAiBU,OAAO;IACpC;IACA,OAAOA,OAAA;EACT;EACAC,2BAA2BjK,UAAA,EAAYuJ,OAAA,EAASvhB,QAAA,EAAUM,SAAA,EAAW;IACnE,MAAM0J,OAAA,GAAU,KAAKkY,kBAAA,CAAmBlK,UAAA,EAAYuJ,OAAA,CAAQ9e,IAAA,EAAMzC,QAAA,EAAUM,SAAS;IACrF,OAAO,IAAIiD,OAAA,CAAQyG,OAAA,EAAS,KAAKmY,iBAAA,CAAkBZ,OAAA,CAAQ5e,WAAA,EAAa,KAAK4e,OAAA,CAAQ5e,WAAW,GAAG4e,OAAA,CAAQ3e,QAAQ;EACrH;EACAuf,kBAAkBC,gBAAA,EAAkBC,YAAA,EAAc;IAChD,MAAMlxC,GAAA,GAAM,CAAC;IACb3D,MAAA,CAAOC,OAAA,CAAQ20C,gBAAgB,EAAEh2C,OAAA,CAAQ,CAAC,CAACm5B,CAAA,EAAGj1B,CAAC,MAAM;MACnD,MAAMgyC,eAAA,GAAkB,OAAOhyC,CAAA,KAAM,YAAYA,CAAA,CAAE+T,UAAA,CAAW,GAAG;MACjE,IAAIi+B,eAAA,EAAiB;QACnB,MAAMC,UAAA,GAAajyC,CAAA,CAAEowB,SAAA,CAAU,CAAC;QAChCvvB,GAAA,CAAIo0B,CAAC,IAAI8c,YAAA,CAAaE,UAAU;MAClC,OAAO;QACLpxC,GAAA,CAAIo0B,CAAC,IAAIj1B,CAAA;MACX;IACF,CAAC;IACD,OAAOa,GAAA;EACT;EACA+wC,mBAAmBlK,UAAA,EAAYjN,QAAO/K,QAAA,EAAUM,SAAA,EAAW;IACzD,MAAMkiB,eAAA,GAAkB,KAAKC,cAAA,CAAezK,UAAA,EAAYjN,OAAM/K,QAAA,EAAUA,QAAA,EAAUM,SAAS;IAC3F,IAAI2C,QAAA,GAAW,CAAC;IAChBz1B,MAAA,CAAOC,OAAA,CAAQs9B,OAAM9H,QAAQ,EAAE72B,OAAA,CAAQ,CAAC,CAACI,IAAA,EAAM+3B,KAAK,MAAM;MACxDtB,QAAA,CAASz2B,IAAI,IAAI,KAAK01C,kBAAA,CAAmBlK,UAAA,EAAYzT,KAAA,EAAOvE,QAAA,EAAUM,SAAS;IACjF,CAAC;IACD,OAAO,IAAIkD,eAAA,CAAgBgf,eAAA,EAAiBvf,QAAQ;EACtD;EACAwf,eAAezK,UAAA,EAAY0K,kBAAA,EAAoBC,cAAA,EAAgBriB,SAAA,EAAW;IACxE,OAAOoiB,kBAAA,CAAmB1zC,GAAA,CAAIwB,CAAA,IAAKA,CAAA,CAAE2vB,IAAA,CAAK9b,UAAA,CAAW,GAAG,IAAI,KAAKu+B,YAAA,CAAa5K,UAAA,EAAYxnC,CAAA,EAAG8vB,SAAS,IAAI,KAAKuiB,YAAA,CAAaryC,CAAA,EAAGmyC,cAAc,CAAC;EAChJ;EACAC,aAAa5K,UAAA,EAAY8K,oBAAA,EAAsBxiB,SAAA,EAAW;IACxD,MAAM8N,GAAA,GAAM9N,SAAA,CAAUwiB,oBAAA,CAAqB3iB,IAAA,CAAKO,SAAA,CAAU,CAAC,CAAC;IAC5D,IAAI,CAAC0N,GAAA,EAAK,MAAM,IAAIjtB,YAAA,CAAc,OAA+C,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,uBAAuB0qC,UAAU,mBAAmB8K,oBAAA,CAAqB3iB,IAAI,IAAI;IACpN,OAAOiO,GAAA;EACT;EACAyU,aAAaC,oBAAA,EAAsBH,cAAA,EAAgB;IACjD,IAAInxC,GAAA,GAAM;IACV,WAAWhB,CAAA,IAAKmyC,cAAA,EAAgB;MAC9B,IAAInyC,CAAA,CAAE2vB,IAAA,KAAS2iB,oBAAA,CAAqB3iB,IAAA,EAAM;QACxCwiB,cAAA,CAAelxC,MAAA,CAAOD,GAAG;QACzB,OAAOhB,CAAA;MACT;MACAgB,GAAA;IACF;IACA,OAAOsxC,oBAAA;EACT;AACF;AACA,IAAM9W,OAAA,GAAU;EACdgG,OAAA,EAAS;EACT+Q,gBAAA,EAAkB,EAAC;EACnBC,iBAAA,EAAmB,EAAC;EACpB1f,UAAA,EAAY,CAAC;EACb2f,uBAAA,EAAyB,CAAC;AAC5B;AACA,SAASC,gBAAgBjjB,YAAA,EAAcC,KAAA,EAAOF,QAAA,EAAUnkB,QAAA,EAAUi8B,aAAA,EAAe;EAC/E,MAAMzhB,MAAA,GAAS6P,KAAA,CAAMjG,YAAA,EAAcC,KAAA,EAAOF,QAAQ;EAClD,IAAI,CAAC3J,MAAA,CAAO2b,OAAA,EAAS;IACnB,OAAOx8B,EAAA,CAAG6gB,MAAM;EAClB;EAGAxa,QAAA,GAAWw9B,gCAAA,CAAiCnZ,KAAA,EAAOrkB,QAAQ;EAC3D,OAAOslC,iBAAA,CAAkBtlC,QAAA,EAAUqkB,KAAA,EAAOF,QAAA,EAAU8X,aAAa,EAAEriC,IAAA,CAAKzG,GAAA,CAAIsB,CAAA,IAAKA,CAAA,KAAM,OAAO+lB,MAAA,GAAS5d,cAAA,KAClGuzB,OAAA,CACJ,CAAC;AACJ;AACA,SAAS9F,MAAMjG,YAAA,EAAcC,KAAA,EAAOF,QAAA,EAAU;EAC5C,IAAIE,KAAA,CAAMC,IAAA,KAAS,MAAM;IACvB,OAAOgjB,yBAAA,CAA0BnjB,QAAQ;EAC3C;EACA,IAAIE,KAAA,CAAMC,IAAA,KAAS,IAAI;IACrB,IAAID,KAAA,CAAME,SAAA,KAAc,WAAWH,YAAA,CAAaI,WAAA,CAAY,KAAKL,QAAA,CAASryB,MAAA,GAAS,IAAI;MACrF,OAAO8K,cAAA,KACFuzB,OAAA;IAEP;IACA,OAAO;MACLgG,OAAA,EAAS;MACT+Q,gBAAA,EAAkB,EAAC;MACnBC,iBAAA,EAAmBhjB,QAAA;MACnBsD,UAAA,EAAY,CAAC;MACb2f,uBAAA,EAAyB,CAAC;IAC5B;EACF;EACA,MAAM7I,OAAA,GAAUla,KAAA,CAAMka,OAAA,IAAWra,iBAAA;EACjC,MAAM5uB,GAAA,GAAMipC,OAAA,CAAQpa,QAAA,EAAUC,YAAA,EAAcC,KAAK;EACjD,IAAI,CAAC/uB,GAAA,EAAK,OAAOsH,cAAA,KACZuzB,OAAA;EAEL,MAAM1L,SAAA,GAAY,CAAC;EACnB9yB,MAAA,CAAOC,OAAA,CAAQ0D,GAAA,CAAImvB,SAAA,IAAa,CAAC,CAAC,EAAEl0B,OAAA,CAAQ,CAAC,CAACm5B,CAAA,EAAGj1B,CAAC,MAAM;IACtDgwB,SAAA,CAAUiF,CAAC,IAAIj1B,CAAA,CAAE6vB,IAAA;EACnB,CAAC;EACD,MAAMmD,UAAA,GAAanyB,GAAA,CAAIwvB,QAAA,CAAShzB,MAAA,GAAS,IAAI8K,cAAA,CAAAA,cAAA,KACxC6nB,SAAA,GACAnvB,GAAA,CAAIwvB,QAAA,CAASxvB,GAAA,CAAIwvB,QAAA,CAAShzB,MAAA,GAAS,CAAC,EAAE21B,UAAA,IACvChD,SAAA;EACJ,OAAO;IACL0R,OAAA,EAAS;IACT+Q,gBAAA,EAAkB5xC,GAAA,CAAIwvB,QAAA;IACtBqiB,iBAAA,EAAmBhjB,QAAA,CAASvzB,KAAA,CAAM0E,GAAA,CAAIwvB,QAAA,CAAShzB,MAAM;IAAA;IAErD21B,UAAA;IACA2f,uBAAA,EAAyB9xC,GAAA,CAAImvB,SAAA,IAAa,CAAC;EAC7C;AACF;AACA,SAAS6iB,0BAA0BnjB,QAAA,EAAU;EAC3C,OAAO;IACLgS,OAAA,EAAS;IACT1O,UAAA,EAAYtD,QAAA,CAASryB,MAAA,GAAS,IAAI+zB,MAAK1B,QAAQ,EAAEsD,UAAA,GAAa,CAAC;IAC/Dyf,gBAAA,EAAkB/iB,QAAA;IAClBgjB,iBAAA,EAAmB,EAAC;IACpBC,uBAAA,EAAyB,CAAC;EAC5B;AACF;AACA,SAAS92C,MAAM8zB,YAAA,EAAc8iB,gBAAA,EAAkBK,cAAA,EAAgB5Q,MAAA,EAAQ;EACrE,IAAI4Q,cAAA,CAAez1C,MAAA,GAAS,KAAK01C,wCAAA,CAAyCpjB,YAAA,EAAcmjB,cAAA,EAAgB5Q,MAAM,GAAG;IAC/G,MAAMhiC,KAAI,IAAIgzB,eAAA,CAAgBuf,gBAAA,EAAkBO,2BAAA,CAA4B9Q,MAAA,EAAQ,IAAIhP,eAAA,CAAgB4f,cAAA,EAAgBnjB,YAAA,CAAagD,QAAQ,CAAC,CAAC;IAC/I,OAAO;MACLhD,YAAA,EAAczvB;MACd4yC,cAAA,EAAgB;IAClB;EACF;EACA,IAAIA,cAAA,CAAez1C,MAAA,KAAW,KAAK41C,wBAAA,CAAyBtjB,YAAA,EAAcmjB,cAAA,EAAgB5Q,MAAM,GAAG;IACjG,MAAMhiC,KAAI,IAAIgzB,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAUwjB,+BAAA,CAAgCvjB,YAAA,EAAcmjB,cAAA,EAAgB5Q,MAAA,EAAQvS,YAAA,CAAagD,QAAQ,CAAC;IACjJ,OAAO;MACLhD,YAAA,EAAczvB;MACd4yC;IACF;EACF;EACA,MAAM5yC,CAAA,GAAI,IAAIgzB,eAAA,CAAgBvD,YAAA,CAAaD,QAAA,EAAUC,YAAA,CAAagD,QAAQ;EAC1E,OAAO;IACLhD,YAAA,EAAczvB,CAAA;IACd4yC;EACF;AACF;AACA,SAASI,gCAAgCvjB,YAAA,EAAcmjB,cAAA,EAAgB1I,SAAQzX,QAAA,EAAU;EACvF,MAAM9xB,GAAA,GAAM,CAAC;EACb,WAAWqsB,CAAA,IAAKkd,SAAQ;IACtB,IAAI+I,cAAA,CAAexjB,YAAA,EAAcmjB,cAAA,EAAgB5lB,CAAC,KAAK,CAACyF,QAAA,CAASuX,SAAA,CAAUhd,CAAC,CAAC,GAAG;MAC9E,MAAMhtB,CAAA,GAAI,IAAIgzB,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC;MACpCryB,GAAA,CAAIqpC,SAAA,CAAUhd,CAAC,CAAC,IAAIhtB,CAAA;IACtB;EACF;EACA,OAAOiI,cAAA,CAAAA,cAAA,KACFwqB,QAAA,GACA9xB,GAAA;AAEP;AACA,SAASmyC,4BAA4B5I,SAAQgJ,cAAA,EAAgB;EAC3D,MAAMvyC,GAAA,GAAM,CAAC;EACbA,GAAA,CAAIsuB,cAAc,IAAIikB,cAAA;EACtB,WAAWlmB,CAAA,IAAKkd,SAAQ;IACtB,IAAIld,CAAA,CAAE2C,IAAA,KAAS,MAAMqa,SAAA,CAAUhd,CAAC,MAAMiC,cAAA,EAAgB;MACpD,MAAMjvB,CAAA,GAAI,IAAIgzB,eAAA,CAAgB,EAAC,EAAG,CAAC,CAAC;MACpCryB,GAAA,CAAIqpC,SAAA,CAAUhd,CAAC,CAAC,IAAIhtB,CAAA;IACtB;EACF;EACA,OAAOW,GAAA;AACT;AACA,SAASkyC,yCAAyCpjB,YAAA,EAAcmjB,cAAA,EAAgB1I,SAAQ;EACtF,OAAOA,QAAO/O,IAAA,CAAKnO,CAAA,IAAKimB,cAAA,CAAexjB,YAAA,EAAcmjB,cAAA,EAAgB5lB,CAAC,KAAKgd,SAAA,CAAUhd,CAAC,MAAMiC,cAAc;AAC5G;AACA,SAAS8jB,yBAAyBtjB,YAAA,EAAcmjB,cAAA,EAAgB1I,SAAQ;EACtE,OAAOA,QAAO/O,IAAA,CAAKnO,CAAA,IAAKimB,cAAA,CAAexjB,YAAA,EAAcmjB,cAAA,EAAgB5lB,CAAC,CAAC;AACzE;AACA,SAASimB,eAAexjB,YAAA,EAAcmjB,cAAA,EAAgB5lB,CAAA,EAAG;EACvD,KAAKyC,YAAA,CAAaI,WAAA,CAAY,KAAK+iB,cAAA,CAAez1C,MAAA,GAAS,MAAM6vB,CAAA,CAAE4C,SAAA,KAAc,QAAQ;IACvF,OAAO;EACT;EACA,OAAO5C,CAAA,CAAE2C,IAAA,KAAS;AACpB;AAMA,SAASwjB,iBAAiBzjB,KAAA,EAAO0jB,UAAA,EAAY5jB,QAAA,EAAU6I,MAAA,EAAQ;EAY7D,IAAI2R,SAAA,CAAUta,KAAK,MAAM2I,MAAA,KAAWA,MAAA,KAAWpJ,cAAA,IAAkB,CAACgkB,cAAA,CAAeG,UAAA,EAAY5jB,QAAA,EAAUE,KAAK,IAAI;IAC9G,OAAO;EACT;EACA,OAAOgG,KAAA,CAAM0d,UAAA,EAAY1jB,KAAA,EAAOF,QAAQ,EAAEgS,OAAA;AAC5C;AACA,SAAS6R,iBAAiB5jB,YAAA,EAAcD,QAAA,EAAU6I,MAAA,EAAQ;EACxD,OAAO7I,QAAA,CAASryB,MAAA,KAAW,KAAK,CAACsyB,YAAA,CAAagD,QAAA,CAAS4F,MAAM;AAC/D;AAOA,IAAMib,gBAAA,GAAN,MAAuB,EAAC;AACxB,SAASC,YAAYloC,QAAA,EAAUmoC,YAAA,EAAcC,iBAAA,EAAmBzR,MAAA,EAAQ+O,OAAA,EAASzJ,aAAA,EAAepG,yBAAA,GAA4B,aAAa;EACvI,OAAO,IAAIwS,UAAA,CAAWroC,QAAA,EAAUmoC,YAAA,EAAcC,iBAAA,EAAmBzR,MAAA,EAAQ+O,OAAA,EAAS7P,yBAAA,EAA2BoG,aAAa,EAAEqM,SAAA,CAAU;AACxI;AACA,IAAMC,qBAAA,GAAwB;AAC9B,IAAMF,UAAA,GAAN,MAAiB;EACfr4C,YAAYgQ,QAAA,EAAUmoC,YAAA,EAAcC,iBAAA,EAAmBzR,MAAA,EAAQ+O,OAAA,EAAS7P,yBAAA,EAA2BoG,aAAA,EAAe;IAChH,KAAKj8B,QAAA,GAAWA,QAAA;IAChB,KAAKmoC,YAAA,GAAeA,YAAA;IACpB,KAAKC,iBAAA,GAAoBA,iBAAA;IACzB,KAAKzR,MAAA,GAASA,MAAA;IACd,KAAK+O,OAAA,GAAUA,OAAA;IACf,KAAK7P,yBAAA,GAA4BA,yBAAA;IACjC,KAAKoG,aAAA,GAAgBA,aAAA;IACrB,KAAKuM,cAAA,GAAiB,IAAIxC,cAAA,CAAe,KAAK/J,aAAA,EAAe,KAAKyJ,OAAO;IACzE,KAAK+C,qBAAA,GAAwB;IAC7B,KAAKC,cAAA,GAAiB;EACxB;EACAC,aAAa5F,CAAA,EAAG;IACd,OAAO,IAAIz9B,YAAA,CAAc,MAAsC,OAAO7T,SAAA,KAAc,eAAeA,SAAA,GAAY,0CAA0CsxC,CAAA,CAAE3e,YAAY,MAAM,IAAI2e,CAAA,CAAE3e,YAAY,GAAG;EACpM;EACAkkB,UAAA,EAAY;IACV,MAAMrb,gBAAA,GAAmB38B,KAAA,CAAM,KAAKo1C,OAAA,CAAQ9e,IAAA,EAAM,EAAC,EAAG,EAAC,EAAG,KAAK+P,MAAM,EAAEvS,YAAA;IACvE,OAAO,KAAKiG,KAAA,CAAM4C,gBAAgB,EAAErzB,IAAA,CAAKzG,GAAA,CAAIi0B,QAAA,IAAY;MAGvD,MAAMR,IAAA,GAAO,IAAImO,sBAAA,CAAuB,EAAC,EAAGpjC,MAAA,CAAOi3C,MAAA,CAAO,CAAC,CAAC,GAAGj3C,MAAA,CAAOi3C,MAAA,CAAOhsC,cAAA,KACxE,KAAK8oC,OAAA,CAAQ5e,WAAA,CACjB,GAAG,KAAK4e,OAAA,CAAQ3e,QAAA,EAAU,CAAC,GAAGnD,cAAA,EAAgB,KAAKwkB,iBAAA,EAAmB,MAAM,CAAC,CAAC;MAC/E,MAAMS,QAAA,GAAW,IAAI3U,QAAA,CAAStN,IAAA,EAAMQ,QAAQ;MAC5C,MAAM0hB,UAAA,GAAa,IAAI9T,mBAAA,CAAoB,IAAI6T,QAAQ;MACvD,MAAMzf,QAAOiD,yBAAA,CAA0BzF,IAAA,EAAM,EAAC,EAAG,KAAK8e,OAAA,CAAQ5e,WAAA,EAAa,KAAK4e,OAAA,CAAQ3e,QAAQ;MAIhGqC,MAAKtC,WAAA,GAAc,KAAK4e,OAAA,CAAQ5e,WAAA;MAChCgiB,UAAA,CAAWlyC,GAAA,GAAM,KAAKqlC,aAAA,CAAclU,SAAA,CAAUqB,KAAI;MAClD,KAAK2f,oBAAA,CAAqBD,UAAA,CAAWrV,KAAA,EAAO,IAAI;MAChD,OAAO;QACLnC,KAAA,EAAOwX,UAAA;QACP1f,IAAA,EAAAA;MACF;IACF,CAAC,CAAC;EACJ;EACAiB,MAAM4C,gBAAA,EAAkB;IACtB,MAAM+b,SAAA,GAAY,KAAKC,mBAAA,CAAoB,KAAKjpC,QAAA,EAAU,KAAK22B,MAAA,EAAQ1J,gBAAA,EAAkBrJ,cAAc;IACvG,OAAOolB,SAAA,CAAUpvC,IAAA,CAAKsvC,UAAA,CAAWnG,CAAA,IAAK;MACpC,IAAIA,CAAA,YAAa0C,gBAAA,EAAkB;QACjC,KAAKC,OAAA,GAAU3C,CAAA,CAAE2C,OAAA;QACjB,OAAO,KAAKrb,KAAA,CAAM0Y,CAAA,CAAE2C,OAAA,CAAQ9e,IAAI;MAClC;MACA,IAAImc,CAAA,YAAayC,OAAA,EAAS;QACxB,MAAM,KAAKmD,YAAA,CAAa5F,CAAC;MAC3B;MACA,MAAMA,CAAA;IACR,CAAC,CAAC;EACJ;EACAgG,qBAAqBI,SAAA,EAAWhzB,MAAA,EAAQ;IACtC,MAAMkO,KAAA,GAAQ8kB,SAAA,CAAUp4C,KAAA;IACxB,MAAMm0B,CAAA,GAAI0Q,YAAA,CAAavR,KAAA,EAAOlO,MAAA,EAAQ,KAAK0f,yBAAyB;IACpExR,KAAA,CAAMpwB,MAAA,GAAStC,MAAA,CAAOi3C,MAAA,CAAO1jB,CAAA,CAAEjxB,MAAM;IACrCowB,KAAA,CAAM/gB,IAAA,GAAO3R,MAAA,CAAOi3C,MAAA,CAAO1jB,CAAA,CAAE5hB,IAAI;IACjC6lC,SAAA,CAAU/hB,QAAA,CAAS72B,OAAA,CAAQojC,CAAA,IAAK,KAAKoV,oBAAA,CAAqBpV,CAAA,EAAGtP,KAAK,CAAC;EACrE;EACA4kB,oBAAoBjpC,QAAA,EAAU22B,MAAA,EAAQvS,YAAA,EAAc4I,MAAA,EAAQ;IAC1D,IAAI5I,YAAA,CAAaD,QAAA,CAASryB,MAAA,KAAW,KAAKsyB,YAAA,CAAaI,WAAA,CAAY,GAAG;MACpE,OAAO,KAAK+I,eAAA,CAAgBvtB,QAAA,EAAU22B,MAAA,EAAQvS,YAAY;IAC5D;IACA,OAAO,KAAKglB,cAAA,CAAeppC,QAAA,EAAU22B,MAAA,EAAQvS,YAAA,EAAcA,YAAA,CAAaD,QAAA,EAAU6I,MAAA,EAAQ,IAAI,EAAEpzB,IAAA,CAAKzG,GAAA,CAAIu1B,KAAA,IAASA,KAAA,YAAiBwL,QAAA,GAAW,CAACxL,KAAK,IAAI,EAAE,CAAC;EAC7J;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA6E,gBAAgBvtB,QAAA,EAAU22B,MAAA,EAAQvS,YAAA,EAAc;IAG9C,MAAM0I,YAAA,GAAe,EAAC;IACtB,WAAWpE,KAAA,IAAS/2B,MAAA,CAAOI,IAAA,CAAKqyB,YAAA,CAAagD,QAAQ,GAAG;MACtD,IAAIsB,KAAA,KAAU,WAAW;QACvBoE,YAAA,CAAamH,OAAA,CAAQvL,KAAK;MAC5B,OAAO;QACLoE,YAAA,CAAa17B,IAAA,CAAKs3B,KAAK;MACzB;IACF;IACA,OAAOz2B,IAAA,CAAK66B,YAAY,EAAElzB,IAAA,CAAKC,SAAA,CAAU4uB,WAAA,IAAe;MACtD,MAAMC,KAAA,GAAQtE,YAAA,CAAagD,QAAA,CAASqB,WAAW;MAI/C,MAAMqW,YAAA,GAAeF,qBAAA,CAAsBjI,MAAA,EAAQlO,WAAW;MAC9D,OAAO,KAAKwgB,mBAAA,CAAoBjpC,QAAA,EAAU8+B,YAAA,EAAcpW,KAAA,EAAOD,WAAW;IAC5E,CAAC,GAAG4gB,IAAA,CAAK,CAACjiB,QAAA,EAAUkiB,cAAA,KAAmB;MACrCliB,QAAA,CAASh2B,IAAA,CAAK,GAAGk4C,cAAc;MAC/B,OAAOliB,QAAA;IACT,CAAC,GAAGmiB,cAAA,CAAe,IAAI,GAAG1jB,IAAA,CAAO,GAAG4d,QAAA,CAASrc,QAAA,IAAY;MACvD,IAAIA,QAAA,KAAa,MAAM,OAAOue,SAAA,CAAUvhB,YAAY;MAIpD,MAAMolB,cAAA,GAAiBC,qBAAA,CAAsBriB,QAAQ;MACrD,IAAI,OAAO31B,SAAA,KAAc,eAAeA,SAAA,EAAW;QAGjDi4C,yBAAA,CAA0BF,cAAc;MAC1C;MACAG,2BAAA,CAA4BH,cAAc;MAC1C,OAAO7vC,EAAA,CAAG6vC,cAAc;IAC1B,CAAC,CAAC;EACJ;EACAJ,eAAeppC,QAAA,EAAU6+B,SAAQza,YAAA,EAAcD,QAAA,EAAU6I,MAAA,EAAQ0b,cAAA,EAAgB;IAC/E,OAAOz2C,IAAA,CAAK4sC,OAAM,EAAEjlC,IAAA,CAAKC,SAAA,CAAU8nB,CAAA,IAAK;MACtC,OAAO,KAAKioB,0BAAA,CAA2BjoB,CAAA,CAAE+b,SAAA,IAAa19B,QAAA,EAAU6+B,SAAQld,CAAA,EAAGyC,YAAA,EAAcD,QAAA,EAAU6I,MAAA,EAAQ0b,cAAc,EAAE9uC,IAAA,CAAKsvC,UAAA,CAAWnG,CAAA,IAAK;QAC9I,IAAIA,CAAA,YAAayC,OAAA,EAAS;UACxB,OAAO7rC,EAAA,CAAG,IAAI;QAChB;QACA,MAAMopC,CAAA;MACR,CAAC,CAAC;IACJ,CAAC,GAAGvpC,KAAA,CAAMqwC,CAAA,IAAK,CAAC,CAACA,CAAC,GAAGX,UAAA,CAAWnG,CAAA,IAAK;MACnC,IAAID,YAAA,CAAaC,CAAC,GAAG;QACnB,IAAIiF,gBAAA,CAAiB5jB,YAAA,EAAcD,QAAA,EAAU6I,MAAM,GAAG;UACpD,OAAOrzB,EAAA,CAAG,IAAIsuC,gBAAA,CAAiB,CAAC;QAClC;QACA,OAAOtC,SAAA,CAAUvhB,YAAY;MAC/B;MACA,MAAM2e,CAAA;IACR,CAAC,CAAC;EACJ;EACA6G,2BAA2B5pC,QAAA,EAAU6+B,SAAQxa,KAAA,EAAO0jB,UAAA,EAAY5jB,QAAA,EAAU6I,MAAA,EAAQ0b,cAAA,EAAgB;IAChG,IAAI,CAACZ,gBAAA,CAAiBzjB,KAAA,EAAO0jB,UAAA,EAAY5jB,QAAA,EAAU6I,MAAM,GAAG,OAAO2Y,SAAA,CAAUoC,UAAU;IACvF,IAAI1jB,KAAA,CAAM8X,UAAA,KAAe,QAAW;MAClC,OAAO,KAAK2N,wBAAA,CAAyB9pC,QAAA,EAAU+nC,UAAA,EAAY1jB,KAAA,EAAOF,QAAA,EAAU6I,MAAM;IACpF;IACA,IAAI,KAAK0b,cAAA,IAAkBA,cAAA,EAAgB;MACzC,OAAO,KAAKqB,sCAAA,CAAuC/pC,QAAA,EAAU+nC,UAAA,EAAYlJ,SAAQxa,KAAA,EAAOF,QAAA,EAAU6I,MAAM;IAC1G;IACA,OAAO2Y,SAAA,CAAUoC,UAAU;EAC7B;EACAgC,uCAAuC/pC,QAAA,EAAUokB,YAAA,EAAcya,SAAQxa,KAAA,EAAOF,QAAA,EAAU6I,MAAA,EAAQ;IAC9F,MAAM;MACJmJ,OAAA;MACA+Q,gBAAA;MACAE,uBAAA;MACAD;IACF,IAAI9c,KAAA,CAAMjG,YAAA,EAAcC,KAAA,EAAOF,QAAQ;IACvC,IAAI,CAACgS,OAAA,EAAS,OAAOwP,SAAA,CAAUvhB,YAAY;IAG3C,IAAIC,KAAA,CAAM8X,UAAA,CAAW3zB,UAAA,CAAW,GAAG,GAAG;MACpC,KAAKigC,qBAAA;MACL,IAAI,KAAKA,qBAAA,GAAwBF,qBAAA,EAAuB;QACtD,IAAI92C,SAAA,EAAW;UACb,MAAM,IAAI6T,YAAA,CAAc,MAA+C,8DAA8D,KAAKogC,OAAO,SAASrhB,KAAA,CAAM8X,UAAU;AAAA,kIAAiJ;QAC7T;QACA,KAAKuM,cAAA,GAAiB;MACxB;IACF;IACA,MAAMvC,OAAA,GAAU,KAAKqC,cAAA,CAAetC,qBAAA,CAAsBgB,gBAAA,EAAkB7iB,KAAA,CAAM8X,UAAA,EAAYiL,uBAAuB;IACrH,OAAO,KAAKoB,cAAA,CAAevC,kBAAA,CAAmB5hB,KAAA,EAAO8hB,OAAO,EAAEvsC,IAAA,CAAK6pC,QAAA,CAASuG,WAAA,IAAe;MACzF,OAAO,KAAKZ,cAAA,CAAeppC,QAAA,EAAU6+B,SAAQza,YAAA,EAAc4lB,WAAA,CAAYp3C,MAAA,CAAOu0C,iBAAiB,GAAGna,MAAA,EAAQ,KAAK;IACjH,CAAC,CAAC;EACJ;EACA8c,yBAAyB9pC,QAAA,EAAU+nC,UAAA,EAAY1jB,KAAA,EAAOF,QAAA,EAAU6I,MAAA,EAAQ;IACtE,MAAMid,WAAA,GAAc5C,eAAA,CAAgBU,UAAA,EAAY1jB,KAAA,EAAOF,QAAA,EAAUnkB,QAAA,EAAU,KAAKi8B,aAAa;IAC7F,IAAI5X,KAAA,CAAMC,IAAA,KAAS,MAAM;MAKvByjB,UAAA,CAAW3gB,QAAA,GAAW,CAAC;IACzB;IACA,OAAO6iB,WAAA,CAAYrwC,IAAA,CAAK6L,SAAA,CAAU+U,MAAA,IAAU;MAC1C,IAAI,CAACA,MAAA,CAAO2b,OAAA,EAAS;QACnB,OAAOwP,SAAA,CAAUoC,UAAU;MAC7B;MAEA/nC,QAAA,GAAWqkB,KAAA,CAAMqZ,SAAA,IAAa19B,QAAA;MAC9B,OAAO,KAAKkqC,cAAA,CAAelqC,QAAA,EAAUqkB,KAAA,EAAOF,QAAQ,EAAEvqB,IAAA,CAAK6L,SAAA,CAAU,CAAC;QACpEo5B,MAAA,EAAQsL;MACV,MAAM;QACJ,MAAMC,aAAA,GAAgB/lB,KAAA,CAAM2a,eAAA,IAAmBh/B,QAAA;QAC/C,MAAM;UACJknC,gBAAA;UACAC,iBAAA;UACA1f;QACF,IAAIjN,MAAA;QACJ,MAAMuX,QAAA,GAAW,IAAIgD,sBAAA,CAAuBmS,gBAAA,EAAkBzf,UAAA,EAAY91B,MAAA,CAAOi3C,MAAA,CAAOhsC,cAAA,KACnF,KAAK8oC,OAAA,CAAQ5e,WAAA,CACjB,GAAG,KAAK4e,OAAA,CAAQ3e,QAAA,EAAUsjB,OAAA,CAAQhmB,KAAK,GAAGsa,SAAA,CAAUta,KAAK,GAAGA,KAAA,CAAM3L,SAAA,IAAa2L,KAAA,CAAMimB,gBAAA,IAAoB,MAAMjmB,KAAA,EAAOkmB,UAAA,CAAWlmB,KAAK,CAAC;QACxI,MAAM;UACJD,YAAA;UACAmjB;QACF,IAAIj3C,KAAA,CAAMy3C,UAAA,EAAYb,gBAAA,EAAkBC,iBAAA,EAAmBgD,WAAW;QACtE,IAAI5C,cAAA,CAAez1C,MAAA,KAAW,KAAKsyB,YAAA,CAAaI,WAAA,CAAY,GAAG;UAC7D,OAAO,KAAK+I,eAAA,CAAgB6c,aAAA,EAAeD,WAAA,EAAa/lB,YAAY,EAAExqB,IAAA,CAAKzG,GAAA,CAAIi0B,QAAA,IAAY;YACzF,IAAIA,QAAA,KAAa,MAAM;cACrB,OAAO;YACT;YACA,OAAO,IAAI8M,QAAA,CAASnC,QAAA,EAAU3K,QAAQ;UACxC,CAAC,CAAC;QACJ;QACA,IAAI+iB,WAAA,CAAYr4C,MAAA,KAAW,KAAKy1C,cAAA,CAAez1C,MAAA,KAAW,GAAG;UAC3D,OAAO6H,EAAA,CAAG,IAAIu6B,QAAA,CAASnC,QAAA,EAAU,EAAE,CAAC;QACtC;QACA,MAAMyY,eAAA,GAAkB7L,SAAA,CAAUta,KAAK,MAAM2I,MAAA;QAS7C,OAAO,KAAKoc,cAAA,CAAegB,aAAA,EAAeD,WAAA,EAAa/lB,YAAA,EAAcmjB,cAAA,EAAgBiD,eAAA,GAAkB5mB,cAAA,GAAiBoJ,MAAA,EAAQ,IAAI,EAAEpzB,IAAA,CAAKzG,GAAA,CAAIu1B,KAAA,IAAS;UACtJ,OAAO,IAAIwL,QAAA,CAASnC,QAAA,EAAUrJ,KAAA,YAAiBwL,QAAA,GAAW,CAACxL,KAAK,IAAI,EAAE;QACxE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACAwhB,eAAelqC,QAAA,EAAUqkB,KAAA,EAAOF,QAAA,EAAU;IACxC,IAAIE,KAAA,CAAM+C,QAAA,EAAU;MAElB,OAAOztB,EAAA,CAAG;QACRklC,MAAA,EAAQxa,KAAA,CAAM+C,QAAA;QACdpnB;MACF,CAAC;IACH;IACA,IAAIqkB,KAAA,CAAMga,YAAA,EAAc;MAEtB,IAAIha,KAAA,CAAMomB,aAAA,KAAkB,QAAW;QACrC,OAAO9wC,EAAA,CAAG;UACRklC,MAAA,EAAQxa,KAAA,CAAMomB,aAAA;UACdzqC,QAAA,EAAUqkB,KAAA,CAAM2a;QAClB,CAAC;MACH;MACA,OAAOiG,gBAAA,CAAiBjlC,QAAA,EAAUqkB,KAAA,EAAOF,QAAA,EAAU,KAAK8X,aAAa,EAAEriC,IAAA,CAAK6pC,QAAA,CAASiH,gBAAA,IAAoB;QACvG,IAAIA,gBAAA,EAAkB;UACpB,OAAO,KAAKvC,YAAA,CAAa9J,YAAA,CAAar+B,QAAA,EAAUqkB,KAAK,EAAEzqB,IAAA,CAAKyrC,GAAA,CAAIsF,GAAA,IAAO;YACrEtmB,KAAA,CAAMomB,aAAA,GAAgBE,GAAA,CAAI9L,MAAA;YAC1Bxa,KAAA,CAAM2a,eAAA,GAAkB2L,GAAA,CAAI3qC,QAAA;UAC9B,CAAC,CAAC;QACJ;QACA,OAAO8lC,YAAA,CAAazhB,KAAK;MAC3B,CAAC,CAAC;IACJ;IACA,OAAO1qB,EAAA,CAAG;MACRklC,MAAA,EAAQ,EAAC;MACT7+B;IACF,CAAC;EACH;AACF;AACA,SAAS2pC,4BAA4BiB,KAAA,EAAO;EAC1CA,KAAA,CAAMjlB,IAAA,CAAK,CAACX,CAAA,EAAGC,CAAA,KAAM;IACnB,IAAID,CAAA,CAAEj0B,KAAA,CAAMi8B,MAAA,KAAWpJ,cAAA,EAAgB,OAAO;IAC9C,IAAIqB,CAAA,CAAEl0B,KAAA,CAAMi8B,MAAA,KAAWpJ,cAAA,EAAgB,OAAO;IAC9C,OAAOoB,CAAA,CAAEj0B,KAAA,CAAMi8B,MAAA,CAAO6d,aAAA,CAAc5lB,CAAA,CAAEl0B,KAAA,CAAMi8B,MAAM;EACpD,CAAC;AACH;AACA,SAAS8d,mBAAmB5nC,IAAA,EAAM;EAChC,MAAMyzB,MAAA,GAASzzB,IAAA,CAAKnS,KAAA,CAAMihC,WAAA;EAC1B,OAAO2E,MAAA,IAAUA,MAAA,CAAOrS,IAAA,KAAS;AACnC;AAMA,SAASmlB,sBAAsBmB,KAAA,EAAO;EACpC,MAAMpwB,MAAA,GAAS,EAAC;EAEhB,MAAMuwB,WAAA,GAAc,mBAAInpC,GAAA,CAAI;EAC5B,WAAWsB,IAAA,IAAQ0nC,KAAA,EAAO;IACxB,IAAI,CAACE,kBAAA,CAAmB5nC,IAAI,GAAG;MAC7BsX,MAAA,CAAOppB,IAAA,CAAK8R,IAAI;MAChB;IACF;IACA,MAAM8nC,sBAAA,GAAyBxwB,MAAA,CAAOnK,IAAA,CAAK46B,UAAA,IAAc/nC,IAAA,CAAKnS,KAAA,CAAMihC,WAAA,KAAgBiZ,UAAA,CAAWl6C,KAAA,CAAMihC,WAAW;IAChH,IAAIgZ,sBAAA,KAA2B,QAAW;MACxCA,sBAAA,CAAuB5jB,QAAA,CAASh2B,IAAA,CAAK,GAAG8R,IAAA,CAAKkkB,QAAQ;MACrD2jB,WAAA,CAAYjqC,GAAA,CAAIkqC,sBAAsB;IACxC,OAAO;MACLxwB,MAAA,CAAOppB,IAAA,CAAK8R,IAAI;IAClB;EACF;EAKA,WAAWgoC,UAAA,IAAcH,WAAA,EAAa;IACpC,MAAMvB,cAAA,GAAiBC,qBAAA,CAAsByB,UAAA,CAAW9jB,QAAQ;IAChE5M,MAAA,CAAOppB,IAAA,CAAK,IAAI8iC,QAAA,CAASgX,UAAA,CAAWn6C,KAAA,EAAOy4C,cAAc,CAAC;EAC5D;EACA,OAAOhvB,MAAA,CAAOxnB,MAAA,CAAO2gC,CAAA,IAAK,CAACoX,WAAA,CAAY75C,GAAA,CAAIyiC,CAAC,CAAC;AAC/C;AACA,SAAS+V,0BAA0BkB,KAAA,EAAO;EACxC,MAAMO,KAAA,GAAQ,CAAC;EACfP,KAAA,CAAMr6C,OAAA,CAAQojC,CAAA,IAAK;IACjB,MAAMyX,uBAAA,GAA0BD,KAAA,CAAMxX,CAAA,CAAE5iC,KAAA,CAAMi8B,MAAM;IACpD,IAAIoe,uBAAA,EAAyB;MAC3B,MAAMriB,CAAA,GAAIqiB,uBAAA,CAAwBx0C,GAAA,CAAIzD,GAAA,CAAIwB,CAAA,IAAKA,CAAA,CAAEvB,QAAA,CAAS,CAAC,EAAEsC,IAAA,CAAK,GAAG;MACrE,MAAMyxB,CAAA,GAAIwM,CAAA,CAAE5iC,KAAA,CAAM6F,GAAA,CAAIzD,GAAA,CAAIwB,CAAA,IAAKA,CAAA,CAAEvB,QAAA,CAAS,CAAC,EAAEsC,IAAA,CAAK,GAAG;MACrD,MAAM,IAAI4P,YAAA,CAAc,OAA4D,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,mDAAmDs3B,CAAC,UAAU5B,CAAC,IAAI;IAC3M;IACAgkB,KAAA,CAAMxX,CAAA,CAAE5iC,KAAA,CAAMi8B,MAAM,IAAI2G,CAAA,CAAE5iC,KAAA;EAC5B,CAAC;AACH;AACA,SAASs5C,QAAQhmB,KAAA,EAAO;EACtB,OAAOA,KAAA,CAAM/gB,IAAA,IAAQ,CAAC;AACxB;AACA,SAASinC,WAAWlmB,KAAA,EAAO;EACzB,OAAOA,KAAA,CAAMthB,OAAA,IAAW,CAAC;AAC3B;AACA,SAASulC,UAAUtoC,QAAA,EAAUmoC,YAAA,EAAcC,iBAAA,EAAmBzR,MAAA,EAAQ0U,UAAA,EAAYxV,yBAAA,EAA2B;EAC3G,OAAO4N,QAAA,CAAS7uC,CAAA,IAAKszC,WAAA,CAAYloC,QAAA,EAAUmoC,YAAA,EAAcC,iBAAA,EAAmBzR,MAAA,EAAQ/hC,CAAA,CAAE02C,YAAA,EAAcD,UAAA,EAAYxV,yBAAyB,EAAEj8B,IAAA,CAAKzG,GAAA,CAAI,CAAC;IACnJm+B,KAAA,EAAOoS,cAAA;IACPta,IAAA,EAAM0H;EACR,MAAM;IACJ,OAAOhc,aAAA,CAAAlY,cAAA,KACFhI,CAAA,GADE;MAEL8uC,cAAA;MACA5S;IACF;EACF,CAAC,CAAC,CAAC;AACL;AACA,SAASya,YAAY1V,yBAAA,EAA2B71B,QAAA,EAAU;EACxD,OAAOyjC,QAAA,CAAS7uC,CAAA,IAAK;IACnB,MAAM;MACJ8uC,cAAA;MACArC,MAAA,EAAQ;QACNQ;MACF;IACF,IAAIjtC,CAAA;IACJ,IAAI,CAACitC,iBAAA,CAAkB/vC,MAAA,EAAQ;MAC7B,OAAO6H,EAAA,CAAG/E,CAAC;IACb;IAIA,MAAM42C,wBAAA,GAA2B,IAAI5pC,GAAA,CAAIigC,iBAAA,CAAkB1uC,GAAA,CAAI6wC,KAAA,IAASA,KAAA,CAAM3f,KAAK,CAAC;IACpF,MAAMonB,wBAAA,GAA2B,mBAAI7pC,GAAA,CAAI;IACzC,WAAWyiB,KAAA,IAASmnB,wBAAA,EAA0B;MAC5C,IAAIC,wBAAA,CAAyBv6C,GAAA,CAAImzB,KAAK,GAAG;QACvC;MACF;MAEA,WAAWqnB,QAAA,IAAYC,gBAAA,CAAiBtnB,KAAK,GAAG;QAC9ConB,wBAAA,CAAyB3qC,GAAA,CAAI4qC,QAAQ;MACvC;IACF;IACA,IAAIE,eAAA,GAAkB;IACtB,OAAO35C,IAAA,CAAKw5C,wBAAwB,EAAE7xC,IAAA,CAAKC,SAAA,CAAUwqB,KAAA,IAAS;MAC5D,IAAImnB,wBAAA,CAAyBt6C,GAAA,CAAImzB,KAAK,GAAG;QACvC,OAAOwnB,UAAA,CAAWxnB,KAAA,EAAOqf,cAAA,EAAgB7N,yBAAA,EAA2B71B,QAAQ;MAC9E,OAAO;QACLqkB,KAAA,CAAM/gB,IAAA,GAAOsyB,YAAA,CAAavR,KAAA,EAAOA,KAAA,CAAMlO,MAAA,EAAQ0f,yBAAyB,EAAE9yB,OAAA;QAC1E,OAAOpJ,EAAA,CAAG,MAAM;MAClB;IACF,CAAC,GAAG0rC,GAAA,CAAI,MAAMuG,eAAA,EAAiB,GAAGE,QAAA,CAAS,CAAC,GAAGrI,QAAA,CAASmB,CAAA,IAAKgH,eAAA,KAAoBH,wBAAA,CAAyBM,IAAA,GAAOpyC,EAAA,CAAG/E,CAAC,IAAIo3C,KAAK,CAAC;EACjI,CAAC;AACH;AAIA,SAASL,iBAAiBtnB,KAAA,EAAO;EAC/B,MAAM4nB,WAAA,GAAc5nB,KAAA,CAAM+C,QAAA,CAASj0B,GAAA,CAAIu1B,KAAA,IAASijB,gBAAA,CAAiBjjB,KAAK,CAAC,EAAEwjB,IAAA,CAAK;EAC9E,OAAO,CAAC7nB,KAAA,EAAO,GAAG4nB,WAAW;AAC/B;AACA,SAASJ,WAAWvH,SAAA,EAAWR,SAAA,EAAWjO,yBAAA,EAA2B71B,QAAA,EAAU;EAC7E,MAAM22B,MAAA,GAAS2N,SAAA,CAAUtS,WAAA;EACzB,MAAMjvB,OAAA,GAAUuhC,SAAA,CAAUpO,QAAA;EAC1B,IAAIS,MAAA,EAAQrX,KAAA,KAAU,UAAa,CAAC2W,cAAA,CAAeU,MAAM,GAAG;IAC1D5zB,OAAA,CAAQ8gB,aAAa,IAAI8S,MAAA,CAAOrX,KAAA;EAClC;EACA,OAAO6sB,WAAA,CAAYppC,OAAA,EAASuhC,SAAA,EAAWR,SAAA,EAAW9jC,QAAQ,EAAEpG,IAAA,CAAKzG,GAAA,CAAIi5C,YAAA,IAAgB;IACnF9H,SAAA,CAAUtO,aAAA,GAAgBoW,YAAA;IAC1B9H,SAAA,CAAUhhC,IAAA,GAAOsyB,YAAA,CAAa0O,SAAA,EAAWA,SAAA,CAAUnuB,MAAA,EAAQ0f,yBAAyB,EAAE9yB,OAAA;IACtF,OAAO;EACT,CAAC,CAAC;AACJ;AACA,SAASopC,YAAYppC,OAAA,EAASuhC,SAAA,EAAWR,SAAA,EAAW9jC,QAAA,EAAU;EAC5D,MAAMjO,IAAA,GAAOszB,WAAA,CAAYtiB,OAAO;EAChC,IAAIhR,IAAA,CAAKD,MAAA,KAAW,GAAG;IACrB,OAAO6H,EAAA,CAAG,CAAC,CAAC;EACd;EACA,MAAM2J,IAAA,GAAO,CAAC;EACd,OAAOrR,IAAA,CAAKF,IAAI,EAAE6H,IAAA,CAAK6pC,QAAA,CAAS5yC,GAAA,IAAOw7C,WAAA,CAAYtpC,OAAA,CAAQlS,GAAG,GAAGyzC,SAAA,EAAWR,SAAA,EAAW9jC,QAAQ,EAAEpG,IAAA,CAAKJ,KAAA,CAAM,GAAG6rC,GAAA,CAAIt0C,KAAA,IAAS;IAC1HuS,IAAA,CAAKzS,GAAG,IAAIE,KAAA;EACd,CAAC,CAAC,CAAC,GAAG+6C,QAAA,CAAS,CAAC,GAAGQ,KAAA,CAAMhpC,IAAI,GAAG4lC,UAAA,CAAWnG,CAAA,IAAKD,YAAA,CAAaC,CAAC,IAAIiJ,KAAA,GAAQpG,UAAA,CAAW7C,CAAC,CAAC,CAAC;AAC1F;AACA,SAASsJ,YAAYlH,cAAA,EAAgBb,SAAA,EAAWR,SAAA,EAAW9jC,QAAA,EAAU;EACnE,MAAMykC,eAAA,GAAkB1F,uBAAA,CAAwBuF,SAAS,KAAKtkC,QAAA;EAC9D,MAAMusC,QAAA,GAAWjL,0BAAA,CAA2B6D,cAAA,EAAgBV,eAAe;EAC3E,MAAM+H,aAAA,GAAgBD,QAAA,CAASxpC,OAAA,GAAUwpC,QAAA,CAASxpC,OAAA,CAAQuhC,SAAA,EAAWR,SAAS,IAAI7jC,qBAAA,CAAsBwkC,eAAA,EAAiB,MAAM8H,QAAA,CAASjI,SAAA,EAAWR,SAAS,CAAC;EAC7J,OAAOhe,kBAAA,CAAmB0mB,aAAa;AACzC;AAQA,SAASC,UAAU3vC,IAAA,EAAM;EACvB,OAAO2I,SAAA,CAAUhR,CAAA,IAAK;IACpB,MAAMi4C,UAAA,GAAa5vC,IAAA,CAAKrI,CAAC;IACzB,IAAIi4C,UAAA,EAAY;MACd,OAAOz6C,IAAA,CAAKy6C,UAAU,EAAE9yC,IAAA,CAAKzG,GAAA,CAAI,MAAMsB,CAAC,CAAC;IAC3C;IACA,OAAOkF,EAAA,CAAGlF,CAAC;EACb,CAAC;AACH;AAyBA,IAAMk4C,cAAA,GAAN,MAAMA,cAAA,CAAc;EAAA;AAAA;AAAA;EAIlBC,WAAW7a,QAAA,EAAU;IACnB,IAAI8a,SAAA;IACJ,IAAIxoB,KAAA,GAAQ0N,QAAA,CAASnL,IAAA;IACrB,OAAOvC,KAAA,KAAU,QAAW;MAC1BwoB,SAAA,GAAY,KAAKC,wBAAA,CAAyBzoB,KAAK,KAAKwoB,SAAA;MACpDxoB,KAAA,GAAQA,KAAA,CAAM+C,QAAA,CAAS/W,IAAA,CAAKqY,KAAA,IAASA,KAAA,CAAMsE,MAAA,KAAWpJ,cAAc;IACtE;IACA,OAAOipB,SAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKAC,yBAAyB/a,QAAA,EAAU;IACjC,OAAOA,QAAA,CAASzuB,IAAA,CAAKugB,aAAa;EACpC;AAaF;AAXI8oB,cAAA,CAAKpyC,IAAA,GAAO,SAASwyC,sBAAsBn4C,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK+3C,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKjyC,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO62C,cAAA;EACP/xC,OAAA,EAASA,CAAA,MAAO,MAAMY,MAAA,CAAOwxC,oBAAoB,GAAG;EACpD3lC,UAAA,EAAY;AACd,CAAC;AA9BL,IAAM4lC,aAAA,GAANN,cAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOl7C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmyC,aAAA,EAAe,CAAC;IACtFp1C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM3O,MAAA,CAAOwxC,oBAAoB;IAC/C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAIH,IAAME,qBAAA,GAAN,MAAMA,qBAAA,SAA6BD,aAAA,CAAc;EAC/Cj9C,YAAYsvB,KAAA,EAAO;IACjB,MAAM;IACN,KAAKA,KAAA,GAAQA,KAAA;EACf;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6tB,YAAYpb,QAAA,EAAU;IACpB,MAAMzS,KAAA,GAAQ,KAAKstB,UAAA,CAAW7a,QAAQ;IACtC,IAAIzS,KAAA,KAAU,QAAW;MACvB,KAAKA,KAAA,CAAMC,QAAA,CAASD,KAAK;IAC3B;EACF;AAaF;AAXI4tB,qBAAA,CAAK3yC,IAAA,GAAO,SAAS6yC,6BAA6Bx4C,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKs4C,qBAAA,EAAyBzyC,QAAA,CAAYilB,KAAK,CAAC;AAC9D;AAGAwtB,qBAAA,CAAKxyC,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOo3C,qBAAA;EACPtyC,OAAA,EAASsyC,qBAAA,CAAqB3yC,IAAA;EAC9B8M,UAAA,EAAY;AACd,CAAC;AA1BL,IAAM2lC,oBAAA,GAANE,qBAAA;AAAA,CA6BC,MAAM;EACL,CAAC,OAAOz7C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkyC,oBAAA,EAAsB,CAAC;IAC7Fn1C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAS6nB;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAM2tB,oBAAA,GAAuB,IAAIltC,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,kBAAkB,IAAI;EACpH4V,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,MAAO,CAAC;AACnB,CAAC;AAYD,IAAM0yC,MAAA,GAAS,IAAIntC,cAAA,CAAe1O,SAAA,GAAY,WAAW,EAAE;AAC3D,IAAM87C,mBAAA,GAAN,MAAMA,mBAAA,CAAmB;EACvBv9C,YAAA,EAAc;IACZ,KAAKw9C,gBAAA,GAAmB,mBAAIC,OAAA,CAAQ;IACpC,KAAKC,eAAA,GAAkB,mBAAID,OAAA,CAAQ;IACnC,KAAKE,QAAA,GAAWnyC,MAAA,CAAOoyC,QAAQ;EACjC;EACA7X,cAAc1R,KAAA,EAAO;IACnB,IAAI,KAAKmpB,gBAAA,CAAiBr8C,GAAA,CAAIkzB,KAAK,GAAG;MACpC,OAAO,KAAKmpB,gBAAA,CAAiBr8C,GAAA,CAAIkzB,KAAK;IACxC,WAAWA,KAAA,CAAMimB,gBAAA,EAAkB;MACjC,OAAO3wC,EAAA,CAAG0qB,KAAA,CAAMimB,gBAAgB;IAClC;IACA,IAAI,KAAKuD,mBAAA,EAAqB;MAC5B,KAAKA,mBAAA,CAAoBxpB,KAAK;IAChC;IACA,MAAMypB,UAAA,GAAahoB,kBAAA,CAAmBzB,KAAA,CAAM0R,aAAA,CAAc,CAAC,EAAEn8B,IAAA,CAAKzG,GAAA,CAAI46C,wBAAwB,GAAG1I,GAAA,CAAI3sB,SAAA,IAAa;MAChH,IAAI,KAAKs1B,iBAAA,EAAmB;QAC1B,KAAKA,iBAAA,CAAkB3pB,KAAK;MAC9B;MACA,CAAC,OAAO5yB,SAAA,KAAc,eAAeA,SAAA,KAAcysC,gBAAA,CAAiB7Z,KAAA,CAAMC,IAAA,IAAQ,IAAI5L,SAAS;MAC/F2L,KAAA,CAAMimB,gBAAA,GAAmB5xB,SAAA;IAC3B,CAAC,GAAG3X,QAAA,CAAS,MAAM;MACjB,KAAKysC,gBAAA,CAAiBl7C,MAAA,CAAO+xB,KAAK;IACpC,CAAC,CAAC;IAEF,MAAM3D,MAAA,GAAS,IAAIutB,qBAAA,CAAsBH,UAAA,EAAY,MAAM,IAAII,OAAA,CAAQ,CAAC,EAAEt0C,IAAA,CAAKu0C,QAAA,CAAS,CAAC;IACzF,KAAKX,gBAAA,CAAiBn8C,GAAA,CAAIgzB,KAAA,EAAO3D,MAAM;IACvC,OAAOA,MAAA;EACT;EACA2d,aAAa/D,cAAA,EAAgBjW,KAAA,EAAO;IAClC,IAAI,KAAKqpB,eAAA,CAAgBv8C,GAAA,CAAIkzB,KAAK,GAAG;MACnC,OAAO,KAAKqpB,eAAA,CAAgBv8C,GAAA,CAAIkzB,KAAK;IACvC,WAAWA,KAAA,CAAMomB,aAAA,EAAe;MAC9B,OAAO9wC,EAAA,CAAG;QACRklC,MAAA,EAAQxa,KAAA,CAAMomB,aAAA;QACdzqC,QAAA,EAAUqkB,KAAA,CAAM2a;MAClB,CAAC;IACH;IACA,IAAI,KAAK6O,mBAAA,EAAqB;MAC5B,KAAKA,mBAAA,CAAoBxpB,KAAK;IAChC;IACA,MAAM+pB,sBAAA,GAAyB/P,YAAA,CAAaha,KAAA,EAAO,KAAKspB,QAAA,EAAUrT,cAAA,EAAgB,KAAK0T,iBAAiB;IACxG,MAAMF,UAAA,GAAaM,sBAAA,CAAuBx0C,IAAA,CAAKmH,QAAA,CAAS,MAAM;MAC5D,KAAK2sC,eAAA,CAAgBp7C,MAAA,CAAO+xB,KAAK;IACnC,CAAC,CAAC;IAEF,MAAM3D,MAAA,GAAS,IAAIutB,qBAAA,CAAsBH,UAAA,EAAY,MAAM,IAAII,OAAA,CAAQ,CAAC,EAAEt0C,IAAA,CAAKu0C,QAAA,CAAS,CAAC;IACzF,KAAKT,eAAA,CAAgBr8C,GAAA,CAAIgzB,KAAA,EAAO3D,MAAM;IACtC,OAAOA,MAAA;EACT;AAaF;AAXI6sB,mBAAA,CAAKhzC,IAAA,GAAO,SAAS8zC,2BAA2Bz5C,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK24C,mBAAA,EAAoB;AACvC;AAGAA,mBAAA,CAAK7yC,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOy3C,mBAAA;EACP3yC,OAAA,EAAS2yC,mBAAA,CAAmBhzC,IAAA;EAC5B8M,UAAA,EAAY;AACd,CAAC;AA5DL,IAAMinC,kBAAA,GAANf,mBAAA;AAAA,CA+DC,MAAM;EACL,CAAC,OAAO97C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwzC,kBAAA,EAAoB,CAAC;IAC3Fz2C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AASH,SAASg3B,aAAaha,KAAA,EAAOspB,QAAA,EAAUrT,cAAA,EAAgB0T,iBAAA,EAAmB;EACxE,OAAOloB,kBAAA,CAAmBzB,KAAA,CAAMga,YAAA,CAAa,CAAC,EAAEzkC,IAAA,CAAKzG,GAAA,CAAI46C,wBAAwB,GAAGtK,QAAA,CAAS7uC,CAAA,IAAK;IAChG,IAAIA,CAAA,YAAa25C,iBAAA,IAAmBv8C,KAAA,CAAMkB,OAAA,CAAQ0B,CAAC,GAAG;MACpD,OAAO+E,EAAA,CAAG/E,CAAC;IACb,OAAO;MACL,OAAO3C,IAAA,CAAK07C,QAAA,CAASa,kBAAA,CAAmB55C,CAAC,CAAC;IAC5C;EACF,CAAC,GAAGzB,GAAA,CAAIs7C,eAAA,IAAmB;IACzB,IAAIT,iBAAA,EAAmB;MACrBA,iBAAA,CAAkB3pB,KAAK;IACzB;IAGA,IAAIrkB,QAAA;IACJ,IAAI0uC,SAAA;IACJ,IAAI5Q,2BAAA,GAA8B;IAClC,IAAI9rC,KAAA,CAAMkB,OAAA,CAAQu7C,eAAe,GAAG;MAClCC,SAAA,GAAYD,eAAA;MACZ3Q,2BAAA,GAA8B;IAChC,OAAO;MACL99B,QAAA,GAAWyuC,eAAA,CAAgB/4B,MAAA,CAAO4kB,cAAc,EAAEt6B,QAAA;MAKlD0uC,SAAA,GAAY1uC,QAAA,CAAS7O,GAAA,CAAIm8C,MAAA,EAAQ,EAAC,EAAG;QACnC5xC,QAAA,EAAU;QACVizC,IAAA,EAAM;MACR,CAAC,EAAEzC,IAAA,CAAK;IACV;IACA,MAAMrN,UAAS6P,SAAA,CAAUv7C,GAAA,CAAIurC,iBAAiB;IAC9C,CAAC,OAAOjtC,SAAA,KAAc,eAAeA,SAAA,KAAcmsC,cAAA,CAAeiB,SAAQxa,KAAA,CAAMC,IAAA,EAAMwZ,2BAA2B;IACjH,OAAO;MACLe,MAAA,EAAAA;MACA7+B;IACF;EACF,CAAC,CAAC;AACJ;AACA,SAAS4uC,uBAAuB79C,KAAA,EAAO;EAIrC,OAAOA,KAAA,IAAS,OAAOA,KAAA,KAAU,YAAY,aAAaA,KAAA;AAC5D;AACA,SAASg9C,yBAAyBc,KAAA,EAAO;EAGvC,OAAOD,sBAAA,CAAuBC,KAAK,IAAIA,KAAA,CAAM,SAAS,IAAIA,KAAA;AAC5D;AASA,IAAMC,oBAAA,GAAN,MAAMA,oBAAA,CAAoB,EAa1B;AAXIA,oBAAA,CAAKv0C,IAAA,GAAO,SAASw0C,4BAA4Bn6C,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKk6C,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKp0C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg5C,oBAAA;EACPl0C,OAAA,EAASA,CAAA,MAAO,MAAMY,MAAA,CAAOwzC,0BAA0B,GAAG;EAC1D3nC,UAAA,EAAY;AACd,CAAC;AAXL,IAAM4nC,mBAAA,GAANH,oBAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAOr9C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBm0C,mBAAA,EAAqB,CAAC;IAC5Fp3C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM3O,MAAA,CAAOwzC,0BAA0B;IACrD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAIH,IAAME,2BAAA,GAAN,MAAMA,2BAAA,CAA2B;EAC/BC,iBAAiBv4C,GAAA,EAAK;IACpB,OAAO;EACT;EACAw4C,QAAQx4C,GAAA,EAAK;IACX,OAAOA,GAAA;EACT;EACAy4C,MAAMC,UAAA,EAAYC,QAAA,EAAU;IAC1B,OAAOD,UAAA;EACT;AAaF;AAXIJ,2BAAA,CAAK30C,IAAA,GAAO,SAASi1C,mCAAmC56C,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAKs6C,2BAAA,EAA4B;AAC/C;AAGAA,2BAAA,CAAKx0C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOo5C,2BAAA;EACPt0C,OAAA,EAASs0C,2BAAA,CAA2B30C,IAAA;EACpC8M,UAAA,EAAY;AACd,CAAC;AApBL,IAAM2nC,0BAAA,GAANE,2BAAA;AAAA,CAuBC,MAAM;EACL,CAAC,OAAOz9C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBk0C,0BAAA,EAA4B,CAAC;IACnGn3C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAMooC,sBAAA,GAAyB,IAAItvC,cAAA,CAAe1O,SAAA,GAAY,2BAA2B,EAAE;AAC3F,IAAMi+C,uBAAA,GAA0B,IAAIvvC,cAAA,CAAe1O,SAAA,GAAY,4BAA4B,EAAE;AAO7F,SAASk+C,qBAAqB3vC,QAAA,EAAU/N,OAAM29C,EAAA,EAAI;EAChD,MAAMC,iBAAA,GAAoB7vC,QAAA,CAAS7O,GAAA,CAAIu+C,uBAAuB;EAC9D,MAAM9sC,YAAW5C,QAAA,CAAS7O,GAAA,CAAIiT,QAAQ;EAEtC,OAAOpE,QAAA,CAAS7O,GAAA,CAAI4K,MAAM,EAAE2B,iBAAA,CAAkB,MAAM;IAClD,IAAI,CAACkF,UAASktC,mBAAA,IAAuBD,iBAAA,CAAkBE,kBAAA,EAAoB;MACzEF,iBAAA,CAAkBE,kBAAA,GAAqB;MAIvC,OAAO,IAAIjtC,OAAA,CAAQC,OAAA,IAAWitC,UAAA,CAAWjtC,OAAO,CAAC;IACnD;IACA,IAAIktC,4BAAA;IACJ,MAAMC,qBAAA,GAAwB,IAAIptC,OAAA,CAAQC,OAAA,IAAW;MACnDktC,4BAAA,GAA+BltC,OAAA;IACjC,CAAC;IACD,MAAMotC,cAAavtC,UAASktC,mBAAA,CAAoB,MAAM;MACpDG,4BAAA,CAA6B;MAK7B,OAAOG,mBAAA,CAAoBpwC,QAAQ;IACrC,CAAC;IACD,MAAM;MACJqwC;IACF,IAAIR,iBAAA;IACJ,IAAIQ,uBAAA,EAAyB;MAC3BpwC,qBAAA,CAAsBD,QAAA,EAAU,MAAMqwC,uBAAA,CAAwB;QAC5DF,UAAA,EAAAA;QACAl+C,IAAA,EAAAA;QACA29C;MACF,CAAC,CAAC;IACJ;IACA,OAAOM,qBAAA;EACT,CAAC;AACH;AAIA,SAASE,oBAAoBpwC,QAAA,EAAU;EACrC,OAAO,IAAI8C,OAAA,CAAQC,OAAA,IAAW;IAC5ButC,eAAA,CAAgBvtC,OAAA,EAAS;MACvB/C;IACF,CAAC;EACH,CAAC;AACH;AACA,IAAMuwC,sBAAA,GAAN,MAAMA,sBAAA,CAAsB;EAC1B,IAAIC,uBAAA,EAAyB;IAC3B,OAAO,KAAKC,YAAA,KAAiB;EAC/B;EACAzgD,YAAA,EAAc;IACZ,KAAK0gD,iBAAA,GAAoB;IACzB,KAAKC,iBAAA,GAAoB;IACzB,KAAKC,wBAAA,GAA2B;IAMhC,KAAK7wB,MAAA,GAAS,IAAImuB,OAAA,CAAQ;IAI1B,KAAK2C,sBAAA,GAAyB,IAAI3C,OAAA,CAAQ;IAC1C,KAAK/F,YAAA,GAAe3sC,MAAA,CAAO8yC,kBAAkB;IAC7C,KAAK9W,mBAAA,GAAsBh8B,MAAA,CAAOuG,mBAAmB;IACrD,KAAKk6B,aAAA,GAAgBzgC,MAAA,CAAOstB,aAAa;IACzC,KAAKqW,YAAA,GAAe3jC,MAAA,CAAOo3B,sBAAsB;IACjD,KAAKwE,QAAA,GAAW57B,MAAA,CAAOs1C,QAAQ;IAC/B,KAAKzR,mBAAA,GAAsB7jC,MAAA,CAAOk8B,YAAA,EAAc;MAC9Ch8B,QAAA,EAAU;IACZ,CAAC,MAAM;IACP,KAAKq1C,aAAA,GAAgBv1C,MAAA,CAAOyxC,aAAa;IACzC,KAAKj4C,OAAA,GAAUwG,MAAA,CAAO6xC,oBAAA,EAAsB;MAC1C3xC,QAAA,EAAU;IACZ,CAAC,KAAK,CAAC;IACP,KAAKm6B,yBAAA,GAA4B,KAAK7gC,OAAA,CAAQ6gC,yBAAA,IAA6B;IAC3E,KAAKmb,mBAAA,GAAsBx1C,MAAA,CAAOyzC,mBAAmB;IACrD,KAAKU,oBAAA,GAAuBn0C,MAAA,CAAOi0C,sBAAA,EAAwB;MACzD/zC,QAAA,EAAU;IACZ,CAAC;IACD,KAAK+0C,YAAA,GAAe;IAOpB,KAAKQ,kBAAA,GAAqB,MAAMt3C,EAAA,CAAG,MAAM;IAEzC,KAAKyuC,iBAAA,GAAoB;IACzB,MAAM8I,WAAA,GAAcvvB,CAAA,IAAK,KAAK5B,MAAA,CAAOjjB,IAAA,CAAK,IAAI80B,oBAAA,CAAqBjQ,CAAC,CAAC;IACrE,MAAMwvB,SAAA,GAAYxvB,CAAA,IAAK,KAAK5B,MAAA,CAAOjjB,IAAA,CAAK,IAAI+0B,kBAAA,CAAmBlQ,CAAC,CAAC;IACjE,KAAKwmB,YAAA,CAAa6F,iBAAA,GAAoBmD,SAAA;IACtC,KAAKhJ,YAAA,CAAa0F,mBAAA,GAAsBqD,WAAA;EAC1C;EACA1yC,SAAA,EAAW;IACT,KAAK4yC,WAAA,EAAa5yC,QAAA,CAAS;EAC7B;EACA6yC,wBAAwB93C,OAAA,EAAS;IAC/B,MAAM+b,EAAA,GAAK,EAAE,KAAKm7B,YAAA;IAClB,KAAKW,WAAA,EAAat0C,IAAA,CAAKgY,aAAA,CAAAlY,cAAA,CAAAA,cAAA,KAClB,KAAKw0C,WAAA,CAAYrgD,KAAA,GACjBwI,OAAA,GAFkB;MAGrB+b;IACF,EAAC;EACH;EACAg8B,iBAAiBC,MAAA,EAAQC,cAAA,EAAgBC,kBAAA,EAAoB;IAC3D,KAAKL,WAAA,GAAc,IAAI3c,eAAA,CAAgB;MACrCnf,EAAA,EAAI;MACJo8B,cAAA,EAAgBF,cAAA;MAChBG,aAAA,EAAeH,cAAA;MACflG,YAAA,EAAc,KAAK0F,mBAAA,CAAoB5B,OAAA,CAAQoC,cAAc;MAC7D1gB,iBAAA,EAAmB,KAAKkgB,mBAAA,CAAoB5B,OAAA,CAAQoC,cAAc;MAClEI,MAAA,EAAQJ,cAAA;MACRK,MAAA,EAAQ,CAAC;MACT9uC,OAAA,EAAS;MACT+uC,MAAA,EAAQ;MACRzyC,OAAA,EAASyD,OAAA,CAAQC,OAAA,CAAQ,IAAI;MAC7BwC,MAAA,EAAQgrB,qBAAA;MACRK,aAAA,EAAe;MACf0F,eAAA,EAAiBmb,kBAAA,CAAmB1f,QAAA;MACpC2R,cAAA,EAAgB;MAChBlE,kBAAA,EAAoBiS,kBAAA;MACpBlS,iBAAA,EAAmB;MACnB8B,MAAA,EAAQ;QACNQ,iBAAA,EAAmB,EAAC;QACpBD,mBAAA,EAAqB;MACvB;MACA+B,YAAA,EAAc;IAChB,CAAC;IACD,OAAO,KAAKyN,WAAA,CAAYx3C,IAAA,CAAK5G,MAAA,CAAO4B,CAAA,IAAKA,CAAA,CAAE0gB,EAAA,KAAO,CAAC;IAAA;IAEnDniB,GAAA,CAAIyB,CAAA,IAAMkgB,aAAA,CAAAlY,cAAA,KACLhI,CAAA,GADK;MAER02C,YAAA,EAAc,KAAK0F,mBAAA,CAAoB5B,OAAA,CAAQx6C,CAAA,CAAEg9C,MAAM;IACzD,EAAE;IAAA;IAEFnsC,SAAA,CAAUssC,sBAAA,IAA0B;MAClC,IAAIC,SAAA,GAAY;MAChB,IAAIC,OAAA,GAAU;MACd,OAAOt4C,EAAA,CAAGo4C,sBAAsB,EAAEn4C,IAAA,CAAK6L,SAAA,CAAU7Q,CAAA,IAAK;QAKpD,IAAI,KAAK67C,YAAA,GAAesB,sBAAA,CAAuBz8B,EAAA,EAAI;UACjD,MAAM48B,kBAAA,GAAqB,OAAOzgD,SAAA,KAAc,eAAeA,SAAA,GAAY,iBAAiBsgD,sBAAA,CAAuBz8B,EAAE,8CAA8C,KAAKm7B,YAAY,KAAK;UACzL,KAAK0B,0BAAA,CAA2BJ,sBAAA,EAAwBG,kBAAA,EAAoBnhB,0BAAA,CAA2BqhB,yBAAyB;UAChI,OAAOpG,KAAA;QACT;QACA,KAAK2E,iBAAA,GAAoBoB,sBAAA;QAEzB,KAAKrB,iBAAA,GAAoB;UACvBp7B,EAAA,EAAI1gB,CAAA,CAAE0gB,EAAA;UACN+8B,UAAA,EAAYz9C,CAAA,CAAEg9C,MAAA;UACdtG,YAAA,EAAc12C,CAAA,CAAE02C,YAAA;UAChBgH,OAAA,EAAS19C,CAAA,CAAE2Q,MAAA;UACXssC,MAAA,EAAQj9C,CAAA,CAAEi9C,MAAA;UACVU,kBAAA,EAAoB,CAAC,KAAK3B,wBAAA,GAA2B,OAAO97B,aAAA,CAAAlY,cAAA,KACvD,KAAKg0C,wBAAA,GADkD;YAE1D2B,kBAAA,EAAoB;UACtB;QACF;QACA,MAAMC,aAAA,GAAgB,CAACjB,MAAA,CAAOkB,SAAA,IAAa,KAAKC,uBAAA,CAAwB,KAAK,KAAKC,mBAAA,CAAoB;QACtG,MAAMC,mBAAA,GAAsBh+C,CAAA,CAAEi9C,MAAA,CAAOe,mBAAA,IAAuBrB,MAAA,CAAOqB,mBAAA;QACnE,IAAI,CAACJ,aAAA,IAAiBI,mBAAA,KAAwB,UAAU;UACtD,MAAM1hB,MAAA,GAAS,OAAOz/B,SAAA,KAAc,eAAeA,SAAA,GAAY,iBAAiBmD,CAAA,CAAEg9C,MAAM,mEAAmE;UAC3J,KAAK7xB,MAAA,CAAOjjB,IAAA,CAAK,IAAIq0B,iBAAA,CAAkBv8B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAEg9C,MAAM,GAAG1gB,MAAA,EAAQF,qBAAA,CAAsB6hB,wBAAwB,CAAC;UAC5Ij+C,CAAA,CAAEmO,OAAA,CAAQ,IAAI;UACd,OAAOipC,KAAA;QACT;QACA,IAAI,KAAKgF,mBAAA,CAAoB7B,gBAAA,CAAiBv6C,CAAA,CAAEg9C,MAAM,GAAG;UACvD,OAAOj4C,EAAA,CAAG/E,CAAC,EAAEgF,IAAA;UAAA;UAEb6L,SAAA,CAAU7Q,MAAK;YACb,MAAMu7C,cAAa,KAAKiB,WAAA,EAAa0B,QAAA,CAAS;YAC9C,KAAK/yB,MAAA,CAAOjjB,IAAA,CAAK,IAAI4zB,eAAA,CAAgB97B,GAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,GAAE02C,YAAY,GAAG12C,GAAE2Q,MAAA,EAAQ3Q,GAAEg8B,aAAa,CAAC;YACnH,IAAIuf,gBAAe,KAAKiB,WAAA,EAAa0B,QAAA,CAAS,GAAG;cAC/C,OAAO9G,KAAA;YACT;YAGA,OAAOlpC,OAAA,CAAQC,OAAA,CAAQnO,EAAC;UAC1B,CAAC;UAAA;UAED0zC,SAAA,CAAU,KAAK9Q,mBAAA,EAAqB,KAAK2Q,YAAA,EAAc,KAAKC,iBAAA,EAAmBmJ,MAAA,CAAO5a,MAAA,EAAQ,KAAKsF,aAAA,EAAe,KAAKpG,yBAAyB;UAAA;UAEhJwP,GAAA,CAAIzwC,MAAK;YACPm9C,sBAAA,CAAuBrO,cAAA,GAAiB9uC,GAAE8uC,cAAA;YAC1CqO,sBAAA,CAAuBjhB,iBAAA,GAAoBl8B,GAAEk8B,iBAAA;YAC7C,KAAK4f,iBAAA,GAAoB57B,aAAA,CAAAlY,cAAA,KACpB,KAAK8zC,iBAAA,GADe;cAEvBqC,QAAA,EAAUn+C,GAAEk8B;YACd;YAEA,MAAMkiB,gBAAA,GAAmB,IAAI3hB,gBAAA,CAAiBz8B,GAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,GAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,GAAEk8B,iBAAiB,GAAGl8B,GAAE8uC,cAAc;YACrK,KAAK3jB,MAAA,CAAOjjB,IAAA,CAAKk2C,gBAAgB;UACnC,CAAC,CAAC;QACJ,WAAWR,aAAA,IAAiB,KAAKxB,mBAAA,CAAoB7B,gBAAA,CAAiBv6C,CAAA,CAAE+8C,aAAa,GAAG;UAItF,MAAM;YACJr8B,EAAA;YACAg2B,YAAA;YACA/lC,MAAA;YACAqrB,aAAA;YACAihB;UACF,IAAIj9C,CAAA;UACJ,MAAMq+C,QAAA,GAAW,IAAIviB,eAAA,CAAgBpb,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUujB,YAAY,GAAG/lC,MAAA,EAAQqrB,aAAa;UAC1G,KAAK7Q,MAAA,CAAOjjB,IAAA,CAAKm2C,QAAQ;UACzB,MAAMvP,cAAA,GAAiBpP,gBAAA,CAAiB,KAAK8T,iBAAiB,EAAErW,QAAA;UAChE,KAAK4e,iBAAA,GAAoBoB,sBAAA,GAAyBj9B,aAAA,CAAAlY,cAAA,KAC7ChI,CAAA,GAD6C;YAEhD8uC,cAAA;YACA5S,iBAAA,EAAmBwa,YAAA;YACnBuG,MAAA,EAAQ/8B,aAAA,CAAAlY,cAAA,KACHi1C,MAAA,GADG;cAENqB,kBAAA,EAAoB;cACpBC,UAAA,EAAY;YACd;UACF;UACA,KAAKzC,iBAAA,CAAkBqC,QAAA,GAAWzH,YAAA;UAClC,OAAO3xC,EAAA,CAAGo4C,sBAAsB;QAClC,OAAO;UAML,MAAM7gB,MAAA,GAAS,OAAOz/B,SAAA,KAAc,eAAeA,SAAA,GAAY,4FAAiGmD,CAAA,CAAE+8C,aAAa,mBAAmB/8C,CAAA,CAAEg9C,MAAM,0BAA0B;UACpO,KAAK7xB,MAAA,CAAOjjB,IAAA,CAAK,IAAIq0B,iBAAA,CAAkBv8B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAE02C,YAAY,GAAGpa,MAAA,EAAQF,qBAAA,CAAsBoiB,4BAA4B,CAAC;UACtJx+C,CAAA,CAAEmO,OAAA,CAAQ,IAAI;UACd,OAAOipC,KAAA;QACT;MACF,CAAC;MAAA;MAED3G,GAAA,CAAIzwC,CAAA,IAAK;QACP,MAAMy+C,WAAA,GAAc,IAAI9hB,gBAAA,CAAiB38B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAEk8B,iBAAiB,GAAGl8B,CAAA,CAAE8uC,cAAc;QAChK,KAAK3jB,MAAA,CAAOjjB,IAAA,CAAKu2C,WAAW;MAC9B,CAAC,GAAGlgD,GAAA,CAAIyB,CAAA,IAAK;QACX,KAAK+7C,iBAAA,GAAoBoB,sBAAA,GAAyBj9B,aAAA,CAAAlY,cAAA,KAC7ChI,CAAA,GAD6C;UAEhDysC,MAAA,EAAQJ,iBAAA,CAAkBrsC,CAAA,CAAE8uC,cAAA,EAAgB9uC,CAAA,CAAE0hC,eAAA,EAAiB,KAAK6I,YAAY;QAClF;QACA,OAAO4S,sBAAA;MACT,CAAC,GAAGvO,WAAA,CAAY,KAAKhM,mBAAA,EAAqBprB,GAAA,IAAO,KAAK2T,MAAA,CAAOjjB,IAAA,CAAKsP,GAAG,CAAC,GAAGi5B,GAAA,CAAIzwC,CAAA,IAAK;QAChFm9C,sBAAA,CAAuBpO,YAAA,GAAe/uC,CAAA,CAAE+uC,YAAA;QACxC,IAAIvX,SAAA,CAAUx3B,CAAA,CAAE+uC,YAAY,GAAG;UAC7B,MAAM3H,0BAAA,CAA2B,KAAKC,aAAA,EAAernC,CAAA,CAAE+uC,YAAY;QACrE;QACA,MAAM2P,SAAA,GAAY,IAAI9hB,cAAA,CAAe58B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAEk8B,iBAAiB,GAAGl8B,CAAA,CAAE8uC,cAAA,EAAgB,CAAC,CAAC9uC,CAAA,CAAE+uC,YAAY;QAC9K,KAAK5jB,MAAA,CAAOjjB,IAAA,CAAKw2C,SAAS;MAC5B,CAAC,GAAGtgD,MAAA,CAAO4B,CAAA,IAAK;QACd,IAAI,CAACA,CAAA,CAAE+uC,YAAA,EAAc;UACnB,KAAKwO,0BAAA,CAA2Bv9C,CAAA,EAAG,IAAIm8B,0BAAA,CAA2BgV,aAAa;UAC/E,OAAO;QACT;QACA,OAAO;MACT,CAAC;MAAA;MAED0G,SAAA,CAAU73C,CAAA,IAAK;QACb,IAAIA,CAAA,CAAEysC,MAAA,CAAOQ,iBAAA,CAAkB/vC,MAAA,EAAQ;UACrC,OAAO6H,EAAA,CAAG/E,CAAC,EAAEgF,IAAA,CAAKyrC,GAAA,CAAIzwC,MAAK;YACzB,MAAM2+C,YAAA,GAAe,IAAI7hB,YAAA,CAAa98B,GAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,GAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,GAAEk8B,iBAAiB,GAAGl8B,GAAE8uC,cAAc;YAC7J,KAAK3jB,MAAA,CAAOjjB,IAAA,CAAKy2C,YAAY;UAC/B,CAAC,GAAG9tC,SAAA,CAAU7Q,MAAK;YACjB,IAAI4+C,YAAA,GAAe;YACnB,OAAO75C,EAAA,CAAG/E,EAAC,EAAEgF,IAAA,CAAK2xC,WAAA,CAAY,KAAK1V,yBAAA,EAA2B,KAAK2B,mBAAmB,GAAG6N,GAAA,CAAI;cAC3FvoC,IAAA,EAAMA,CAAA,KAAM02C,YAAA,GAAe;cAC3Bh1C,QAAA,EAAUA,CAAA,KAAM;gBACd,IAAI,CAACg1C,YAAA,EAAc;kBACjB,KAAKrB,0BAAA,CAA2Bv9C,IAAG,OAAOnD,SAAA,KAAc,eAAeA,SAAA,GAAY,uDAAuD,IAAIs/B,0BAAA,CAA2B0iB,kBAAkB;gBAC7L;cACF;YACF,CAAC,CAAC;UACJ,CAAC,GAAGpO,GAAA,CAAIzwC,MAAK;YACX,MAAM8+C,UAAA,GAAa,IAAI/hB,UAAA,CAAW/8B,GAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,GAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,GAAEk8B,iBAAiB,GAAGl8B,GAAE8uC,cAAc;YACzJ,KAAK3jB,MAAA,CAAOjjB,IAAA,CAAK42C,UAAU;UAC7B,CAAC,CAAC;QACJ;QACA,OAAO;MACT,CAAC;MAAA;MAEDjH,SAAA,CAAU73C,CAAA,IAAK;QACb,MAAM++C,cAAA,GAAiBtvB,KAAA,IAAS;UAC9B,MAAMuvB,OAAA,GAAU,EAAC;UACjB,IAAIvvB,KAAA,CAAM2N,WAAA,EAAa+D,aAAA,IAAiB,CAAC1R,KAAA,CAAM2N,WAAA,CAAYsY,gBAAA,EAAkB;YAC3EsJ,OAAA,CAAQxiD,IAAA,CAAK,KAAK+2C,YAAA,CAAapS,aAAA,CAAc1R,KAAA,CAAM2N,WAAW,EAAEp4B,IAAA,CAAKyrC,GAAA,CAAIwO,eAAA,IAAmB;cAC1FxvB,KAAA,CAAM3L,SAAA,GAAYm7B,eAAA;YACpB,CAAC,GAAG1gD,GAAA,CAAI,MAAM,MAAM,CAAC,CAAC;UACxB;UACA,WAAWu1B,KAAA,IAASrE,KAAA,CAAM+C,QAAA,EAAU;YAClCwsB,OAAA,CAAQxiD,IAAA,CAAK,GAAGuiD,cAAA,CAAejrB,KAAK,CAAC;UACvC;UACA,OAAOkrB,OAAA;QACT;QACA,OAAO/Y,aAAA,CAAc8Y,cAAA,CAAe/+C,CAAA,CAAE8uC,cAAA,CAAe9c,IAAI,CAAC,EAAEhtB,IAAA,CAAK2vC,cAAA,CAAe,IAAI,GAAGnG,IAAA,CAAK,CAAC,CAAC;MAChG,CAAC,GAAGqJ,SAAA,CAAU,MAAM,KAAKwE,kBAAA,CAAmB,CAAC,GAAGxrC,SAAA,CAAU,MAAM;QAC9D,MAAM;UACJ6wB,eAAA;UACAoN;QACF,IAAIqO,sBAAA;QACJ,MAAM7B,qBAAA,GAAwB,KAAKP,oBAAA,GAAuB,KAAKnY,mBAAA,EAAqBlB,eAAA,CAAgB1P,IAAA,EAAM8c,cAAA,CAAe9c,IAAI;QAG7H,OAAOspB,qBAAA,GAAwBj+C,IAAA,CAAKi+C,qBAAqB,EAAEt2C,IAAA,CAAKzG,GAAA,CAAI,MAAM4+C,sBAAsB,CAAC,IAAIp4C,EAAA,CAAGo4C,sBAAsB;MAChI,CAAC,GAAG5+C,GAAA,CAAIyB,CAAA,IAAK;QACX,MAAM2qC,iBAAA,GAAoBlE,iBAAA,CAAkBkW,MAAA,CAAOjW,kBAAA,EAAoB1mC,CAAA,CAAE8uC,cAAA,EAAgB9uC,CAAA,CAAE4qC,kBAAkB;QAC7G,KAAKmR,iBAAA,GAAoBoB,sBAAA,GAAyBj9B,aAAA,CAAAlY,cAAA,KAC7ChI,CAAA,GAD6C;UAEhD2qC;QACF;QACA,KAAKmR,iBAAA,CAAkBnR,iBAAA,GAAoBA,iBAAA;QAC3C,OAAOwS,sBAAA;MACT,CAAC,GAAG1M,GAAA,CAAI,MAAM;QACZ,KAAKtlB,MAAA,CAAOjjB,IAAA,CAAK,IAAI01B,oBAAA,CAAqB,CAAC;MAC7C,CAAC,GAAG0M,cAAA,CAAe,KAAKC,YAAA,EAAcoS,MAAA,CAAOjW,kBAAA,EAAoBlvB,GAAA,IAAO,KAAK2T,MAAA,CAAOjjB,IAAA,CAAKsP,GAAG,GAAG,KAAKizB,mBAAmB;MAAA;MAAA;MAAA;MAIvH+D,IAAA,CAAK,CAAC,GAAGiC,GAAA,CAAI;QACXvoC,IAAA,EAAMlI,CAAA,IAAK;UACTo9C,SAAA,GAAY;UACZ,KAAKpB,wBAAA,GAA2B,KAAKF,iBAAA;UACrC,KAAK3wB,MAAA,CAAOjjB,IAAA,CAAK,IAAI+zB,aAAA,CAAcj8B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAE02C,YAAY,GAAG,KAAKrP,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAEk8B,iBAAiB,CAAC,CAAC;UACzI,KAAKigB,aAAA,EAAe5D,WAAA,CAAYv4C,CAAA,CAAE2qC,iBAAA,CAAkBxN,QAAQ;UAC5Dn9B,CAAA,CAAEmO,OAAA,CAAQ,IAAI;QAChB;QACAvE,QAAA,EAAUA,CAAA,KAAM;UACdwzC,SAAA,GAAY;QACd;MACF,CAAC;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAQD8B,SAAA,CAAU,KAAKjD,sBAAA,CAAuBj3C,IAAA,CAAKyrC,GAAA,CAAI0O,GAAA,IAAO;QACpD,MAAMA,GAAA;MACR,CAAC,CAAC,CAAC,GAAGhzC,QAAA,CAAS,MAAM;QAOnB,IAAI,CAACixC,SAAA,IAAa,CAACC,OAAA,EAAS;UAC1B,MAAM+B,iBAAA,GAAoB,OAAOviD,SAAA,KAAc,eAAeA,SAAA,GAAY,iBAAiBsgD,sBAAA,CAAuBz8B,EAAE,8CAA8C,KAAKm7B,YAAY,KAAK;UACxL,KAAK0B,0BAAA,CAA2BJ,sBAAA,EAAwBiC,iBAAA,EAAmBjjB,0BAAA,CAA2BqhB,yBAAyB;QACjI;QAGA,IAAI,KAAKzB,iBAAA,EAAmBr7B,EAAA,KAAOy8B,sBAAA,CAAuBz8B,EAAA,EAAI;UAC5D,KAAKo7B,iBAAA,GAAoB;UACzB,KAAKC,iBAAA,GAAoB;QAC3B;MACF,CAAC,GAAGzH,UAAA,CAAWnG,CAAA,IAAK;QAClBkP,OAAA,GAAU;QAGV,IAAIxV,0BAAA,CAA2BsG,CAAC,GAAG;UACjC,KAAKhjB,MAAA,CAAOjjB,IAAA,CAAK,IAAIm0B,gBAAA,CAAiB8gB,sBAAA,CAAuBz8B,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUgqB,sBAAA,CAAuBzG,YAAY,GAAGvI,CAAA,CAAE9pC,OAAA,EAAS8pC,CAAA,CAAExG,gBAAgB,CAAC;UAGlK,IAAI,CAACC,qCAAA,CAAsCuG,CAAC,GAAG;YAC7CgP,sBAAA,CAAuBhvC,OAAA,CAAQ,KAAK;UACtC,OAAO;YACL,KAAKgd,MAAA,CAAOjjB,IAAA,CAAK,IAAI21B,eAAA,CAAgBsQ,CAAA,CAAEnsC,GAAG,CAAC;UAC7C;QAGF,OAAO;UACL,KAAKmpB,MAAA,CAAOjjB,IAAA,CAAK,IAAIs0B,eAAA,CAAgB2gB,sBAAA,CAAuBz8B,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUgqB,sBAAA,CAAuBzG,YAAY,GAAGvI,CAAA,EAAGgP,sBAAA,CAAuBrO,cAAA,IAAkB,MAAS,CAAC;UACzL,IAAI;YACFqO,sBAAA,CAAuBhvC,OAAA,CAAQwuC,MAAA,CAAO51B,YAAA,CAAaonB,CAAC,CAAC;UACvD,SAASkR,EAAA,EAAI;YAUX,IAAI,KAAKj/C,OAAA,CAAQk/C,+BAAA,EAAiC;cAChDnC,sBAAA,CAAuBhvC,OAAA,CAAQ,KAAK;YACtC,OAAO;cACLgvC,sBAAA,CAAuBD,MAAA,CAAOmC,EAAE;YAClC;UACF;QACF;QACA,OAAOjI,KAAA;MACT,CAAC,CAAC;IAEJ,CAAC,CAAC;EACJ;EACAmG,2BAA2Bv9C,CAAA,EAAGs8B,MAAA,EAAQtW,IAAA,EAAM;IAC1C,MAAMu5B,SAAA,GAAY,IAAIljB,gBAAA,CAAiBr8B,CAAA,CAAE0gB,EAAA,EAAI,KAAK2mB,aAAA,CAAclU,SAAA,CAAUnzB,CAAA,CAAE02C,YAAY,GAAGpa,MAAA,EAAQtW,IAAI;IACvG,KAAKmF,MAAA,CAAOjjB,IAAA,CAAKq3C,SAAS;IAC1Bv/C,CAAA,CAAEmO,OAAA,CAAQ,KAAK;EACjB;EAAA;AAAA;AAAA;AAAA;EAKA2vC,wBAAA,EAA0B;IAOxB,OAAO,KAAK/B,iBAAA,EAAmBrF,YAAA,CAAal4C,QAAA,CAAS,MAAM,KAAKu9C,iBAAA,EAAmBe,cAAA,CAAet+C,QAAA,CAAS;EAC7G;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAu/C,oBAAA,EAAsB;IAIpB,MAAMyB,mBAAA,GAAsB,KAAKpD,mBAAA,CAAoB5B,OAAA,CAAQ,KAAKnT,aAAA,CAAct9B,KAAA,CAAM,KAAKy4B,QAAA,CAAS9S,IAAA,CAAK,IAAI,CAAC,CAAC;IAC/G,OAAO8vB,mBAAA,CAAoBhhD,QAAA,CAAS,MAAM,KAAKu9C,iBAAA,EAAmBrF,YAAA,CAAal4C,QAAA,CAAS,KAAK,CAAC,KAAKu9C,iBAAA,EAAmBkB,MAAA,CAAOqB,kBAAA;EAC/H;AAaF;AAXI3C,sBAAA,CAAKh2C,IAAA,GAAO,SAAS85C,8BAA8Bz/C,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAK27C,sBAAA,EAAuB;AAC1C;AAGAA,sBAAA,CAAK71C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOy6C,sBAAA;EACP31C,OAAA,EAAS21C,sBAAA,CAAsBh2C,IAAA;EAC/B8M,UAAA,EAAY;AACd,CAAC;AA3YL,IAAMitC,qBAAA,GAAN/D,sBAAA;AAAA,CA8YC,MAAM;EACL,CAAC,OAAO9+C,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw5C,qBAAA,EAAuB,CAAC;IAC9Fz8C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,EAAC,EAAG,IAAI;AACpB,GAAG;AACH,SAASktC,6BAA6BhvC,MAAA,EAAQ;EAC5C,OAAOA,MAAA,KAAWgrB,qBAAA;AACpB;AASA,IAAMikB,mBAAA,GAAN,MAAMA,mBAAA,CAAmB,EAazB;AAXIA,mBAAA,CAAKj6C,IAAA,GAAO,SAASk6C,2BAA2B7/C,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK4/C,mBAAA,EAAoB;AACvC;AAGAA,mBAAA,CAAK95C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO0+C,mBAAA;EACP55C,OAAA,EAASA,CAAA,MAAO,MAAMY,MAAA,CAAOk5C,yBAAyB,GAAG;EACzDrtC,UAAA,EAAY;AACd,CAAC;AAXL,IAAMstC,kBAAA,GAANH,mBAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAO/iD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB65C,kBAAA,EAAoB,CAAC;IAC3F98C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM3O,MAAA,CAAOk5C,yBAAyB;IACpD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAkBH,IAAME,sBAAA,GAAN,MAA6B;EAAA;AAAA;AAAA;AAAA;EAK3BpU,aAAanc,KAAA,EAAO;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;EAIAwc,MAAMxc,KAAA,EAAOwwB,YAAA,EAAc,CAAC;EAAA;EAE5BlZ,aAAatX,KAAA,EAAO;IAClB,OAAO;EACT;EAAA;EAEAwX,SAASxX,KAAA,EAAO;IACd,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAoX,iBAAiB8E,MAAA,EAAQnQ,IAAA,EAAM;IAC7B,OAAOmQ,MAAA,CAAOvO,WAAA,KAAgB5B,IAAA,CAAK4B,WAAA;EACrC;AACF;AACA,IAAM8iB,0BAAA,GAAN,MAAMA,0BAAA,SAAkCF,sBAAA,CAAuB,EAgB/D;AAdIE,0BAAA,CAAKv6C,IAAA,GAAuB,sBAAM;EAChC,IAAIw6C,sCAAA;EACJ,OAAO,SAASC,kCAAkCpgD,CAAA,EAAG;IACnD,QAAQmgD,sCAAA,KAA2CA,sCAAA,GAA4CE,qBAAA,CAAsBH,0BAAyB,IAAIlgD,CAAA,IAAKkgD,0BAAyB;EAClL;AACF,GAAG;AAGHA,0BAAA,CAAKp6C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg/C,0BAAA;EACPl6C,OAAA,EAASk6C,0BAAA,CAA0Bv6C,IAAA;EACnC8M,UAAA,EAAY;AACd,CAAC;AAdL,IAAMqtC,yBAAA,GAANI,0BAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOrjD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB45C,yBAAA,EAA2B,CAAC;IAClG78C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM6tC,aAAA,GAAN,MAAMA,aAAA,CAAa,EAanB;AAXIA,aAAA,CAAK36C,IAAA,GAAO,SAAS46C,qBAAqBvgD,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKsgD,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKx6C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOo/C,aAAA;EACPt6C,OAAA,EAASA,CAAA,MAAO,MAAMY,MAAA,CAAO45C,mBAAmB,GAAG;EACnD/tC,UAAA,EAAY;AACd,CAAC;AAXL,IAAMguC,YAAA,GAANH,aAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAOzjD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBu6C,YAAA,EAAc,CAAC;IACrFx9C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM3O,MAAA,CAAO45C,mBAAmB;IAC9C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAME,oBAAA,GAAN,MAAMA,oBAAA,SAA4BD,YAAA,CAAa;EAC7CrlD,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAClB,KAAKwrB,QAAA,GAAW57B,MAAA,CAAOs1C,QAAQ;IAC/B,KAAK7U,aAAA,GAAgBzgC,MAAA,CAAOstB,aAAa;IACzC,KAAK9zB,OAAA,GAAUwG,MAAA,CAAO6xC,oBAAA,EAAsB;MAC1C3xC,QAAA,EAAU;IACZ,CAAC,KAAK,CAAC;IACP,KAAK65C,4BAAA,GAA+B,KAAKvgD,OAAA,CAAQugD,4BAAA,IAAgC;IACjF,KAAKvE,mBAAA,GAAsBx1C,MAAA,CAAOyzC,mBAAmB;IACrD,KAAKuG,iBAAA,GAAoB,KAAKxgD,OAAA,CAAQwgD,iBAAA,IAAqB;IAC3D,KAAK9D,cAAA,GAAiB,IAAIhqB,OAAA,CAAQ;IAClC,KAAK+tB,UAAA,GAAa,KAAK/D,cAAA;IASvB,KAAKgE,aAAA,GAAgB;IACrB,KAAKC,gBAAA,GAAmB;IACxB,KAAKC,WAAA,GAActhB,gBAAA,CAAiB,IAAI;IACxC,KAAKuhB,YAAA,GAAe,KAAKC,kBAAA,CAAmB;EAC9C;EACAC,kBAAA,EAAoB;IAClB,OAAO,KAAKrE,cAAA;EACd;EACAsE,cAAA,EAAgB;IACd,OAAO,KAAKP,UAAA;EACd;EACA7kB,cAAA,EAAgB;IACd,OAAO,KAAKwG,QAAA,CAAS6e,QAAA,CAAS;EAChC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIC,cAAA,EAAgB;IAClB,IAAI,KAAKX,4BAAA,KAAiC,YAAY;MACpD,OAAO,KAAKG,aAAA;IACd;IACA,OAAO,KAAK9kB,aAAA,CAAc,GAAGulB,aAAA,IAAiB,KAAKT,aAAA;EACrD;EACAU,eAAA,EAAiB;IACf,OAAO,KAAKR,WAAA;EACd;EACAE,mBAAA,EAAqB;IACnB,OAAO;MACLL,UAAA,EAAY,KAAKA,UAAA;MACjB/D,cAAA,EAAgB,KAAKA,cAAA;MACrBkE,WAAA,EAAa,KAAKA;IACpB;EACF;EACAS,4CAA4ChqC,QAAA,EAAU;IACpD,OAAO,KAAK+qB,QAAA,CAAS0D,SAAA,CAAU9gC,KAAA,IAAS;MACtC,IAAIA,KAAA,CAAM,MAAM,MAAM,YAAY;QAChCqS,QAAA,CAASrS,KAAA,CAAM,KAAK,GAAGA,KAAA,CAAMs3B,KAAK;MACpC;IACF,CAAC;EACH;EACAglB,kBAAkBvT,CAAA,EAAG4N,iBAAA,EAAmB;IACtC,IAAI5N,CAAA,YAAarS,eAAA,EAAiB;MAChC,KAAKmlB,YAAA,GAAe,KAAKC,kBAAA,CAAmB;IAC9C,WAAW/S,CAAA,YAAa5R,iBAAA,EAAmB;MACzC,KAAKskB,UAAA,GAAa9E,iBAAA,CAAkB0B,UAAA;IACtC,WAAWtP,CAAA,YAAa1R,gBAAA,EAAkB;MACxC,IAAI,KAAKmkB,iBAAA,KAAsB,SAAS;QACtC,IAAI,CAAC7E,iBAAA,CAAkBkB,MAAA,CAAOqB,kBAAA,EAAoB;UAChD,MAAMtB,MAAA,GAAS,KAAKZ,mBAAA,CAAoB3B,KAAA,CAAMsB,iBAAA,CAAkBoC,QAAA,EAAUpC,iBAAA,CAAkB0B,UAAU;UACtG,KAAKkE,aAAA,CAAc3E,MAAA,EAAQjB,iBAAiB;QAC9C;MACF;IACF,WAAW5N,CAAA,YAAavQ,oBAAA,EAAsB;MAC5C,KAAKkf,cAAA,GAAiBf,iBAAA,CAAkBoC,QAAA;MACxC,KAAK0C,UAAA,GAAa,KAAKzE,mBAAA,CAAoB3B,KAAA,CAAMsB,iBAAA,CAAkBoC,QAAA,EAAUpC,iBAAA,CAAkB0B,UAAU;MACzG,KAAKuD,WAAA,GAAcjF,iBAAA,CAAkBpR,iBAAA;MACrC,IAAI,KAAKiW,iBAAA,KAAsB,YAAY;QACzC,IAAI,CAAC7E,iBAAA,CAAkBkB,MAAA,CAAOqB,kBAAA,EAAoB;UAChD,KAAKqD,aAAA,CAAc,KAAKd,UAAA,EAAY9E,iBAAiB;QACvD;MACF;IACF,WAAW5N,CAAA,YAAa9R,gBAAA,KAAqB8R,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2BgV,aAAA,IAAiBhD,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2B0iB,kBAAA,GAAqB;MAC7J,KAAK+C,cAAA,CAAe7F,iBAAiB;IACvC,WAAW5N,CAAA,YAAa3R,eAAA,EAAiB;MACvC,KAAKolB,cAAA,CAAe7F,iBAAA,EAAmB,IAAI;IAC7C,WAAW5N,CAAA,YAAalS,aAAA,EAAe;MACrC,KAAK8kB,gBAAA,GAAmB5S,CAAA,CAAEztB,EAAA;MAC1B,KAAKogC,aAAA,GAAgB,KAAKQ,aAAA;IAC5B;EACF;EACAK,cAAc3/C,GAAA,EAAKu5C,aAAY;IAC7B,MAAM7rB,IAAA,GAAO,KAAK2X,aAAA,CAAclU,SAAA,CAAUnxB,GAAG;IAC7C,IAAI,KAAKwgC,QAAA,CAASqf,oBAAA,CAAqBnyB,IAAI,KAAK,CAAC,CAAC6rB,YAAW0B,MAAA,CAAOsB,UAAA,EAAY;MAE9E,MAAMuD,oBAAA,GAAuB,KAAKR,aAAA;MAClC,MAAM5kB,SAAQ10B,cAAA,CAAAA,cAAA,KACTuzC,YAAW0B,MAAA,CAAOvgB,KAAA,GAClB,KAAKqlB,qBAAA,CAAsBxG,YAAW76B,EAAA,EAAIohC,oBAAoB;MAEnE,KAAKtf,QAAA,CAASwf,YAAA,CAAatyB,IAAA,EAAM,IAAIgN,MAAK;IAC5C,OAAO;MACL,MAAMA,SAAQ10B,cAAA,CAAAA,cAAA,KACTuzC,YAAW0B,MAAA,CAAOvgB,KAAA,GAClB,KAAKqlB,qBAAA,CAAsBxG,YAAW76B,EAAA,EAAI,KAAK4gC,aAAA,GAAgB,CAAC;MAErE,KAAK9e,QAAA,CAASyf,EAAA,CAAGvyB,IAAA,EAAM,IAAIgN,MAAK;IAClC;EACF;EAAA;AAAA;AAAA;AAAA;EAKAklB,eAAeM,UAAA,EAAYC,wBAAA,GAA2B,OAAO;IAC3D,IAAI,KAAKxB,4BAAA,KAAiC,YAAY;MACpD,MAAMmB,oBAAA,GAAuB,KAAKR,aAAA;MAClC,MAAMc,kBAAA,GAAqB,KAAKtB,aAAA,GAAgBgB,oBAAA;MAChD,IAAIM,kBAAA,KAAuB,GAAG;QAC5B,KAAK5f,QAAA,CAAS6f,SAAA,CAAUD,kBAAkB;MAC5C,WAAW,KAAKtF,cAAA,KAAmBoF,UAAA,CAAW/D,QAAA,IAAYiE,kBAAA,KAAuB,GAAG;QAIlF,KAAKE,UAAA,CAAWJ,UAAU;QAC1B,KAAKK,wBAAA,CAAyB;MAChC,OAAO,CAGP;IACF,WAAW,KAAK5B,4BAAA,KAAiC,WAAW;MAK1D,IAAIwB,wBAAA,EAA0B;QAC5B,KAAKG,UAAA,CAAWJ,UAAU;MAC5B;MACA,KAAKK,wBAAA,CAAyB;IAChC;EACF;EACAD,WAAWJ,UAAA,EAAY;IACrB,KAAKlB,WAAA,GAAc,KAAKC,YAAA,CAAaD,WAAA;IACrC,KAAKlE,cAAA,GAAiB,KAAKmE,YAAA,CAAanE,cAAA;IAMxC,KAAK+D,UAAA,GAAa,KAAKzE,mBAAA,CAAoB3B,KAAA,CAAM,KAAKqC,cAAA,EAAgBoF,UAAA,CAAW/D,QAAA,IAAY,KAAK0C,UAAU;EAC9G;EACA0B,yBAAA,EAA2B;IACzB,KAAK/f,QAAA,CAASwf,YAAA,CAAa,KAAK3a,aAAA,CAAclU,SAAA,CAAU,KAAK0tB,UAAU,GAAG,IAAI,KAAKkB,qBAAA,CAAsB,KAAKhB,gBAAA,EAAkB,KAAKD,aAAa,CAAC;EACrJ;EACAiB,sBAAsBlG,YAAA,EAAc2G,YAAA,EAAc;IAChD,IAAI,KAAK7B,4BAAA,KAAiC,YAAY;MACpD,OAAO;QACL9E,YAAA;QACA0F,aAAA,EAAeiB;MACjB;IACF;IACA,OAAO;MACL3G;IACF;EACF;AAgBF;AAdI6E,oBAAA,CAAK/6C,IAAA,GAAuB,sBAAM;EAChC,IAAI88C,gCAAA;EACJ,OAAO,SAASC,4BAA4B1iD,CAAA,EAAG;IAC7C,QAAQyiD,gCAAA,KAAqCA,gCAAA,GAAsCpC,qBAAA,CAAsBK,oBAAmB,IAAI1gD,CAAA,IAAK0gD,oBAAmB;EAC1J;AACF,GAAG;AAGHA,oBAAA,CAAK56C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOw/C,oBAAA;EACP16C,OAAA,EAAS06C,oBAAA,CAAoB/6C,IAAA;EAC7B8M,UAAA,EAAY;AACd,CAAC;AAnLL,IAAM+tC,mBAAA,GAANE,oBAAA;AAAA,CAsLC,MAAM;EACL,CAAC,OAAO7jD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBs6C,mBAAA,EAAqB,CAAC;IAC5Fv9C,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAIkwC,gBAAA;AAAA,CACH,UAAUA,mBAAkB;EAC3BA,kBAAiBA,kBAAiB,UAAU,IAAI,CAAC,IAAI;EACrDA,kBAAiBA,kBAAiB,QAAQ,IAAI,CAAC,IAAI;EACnDA,kBAAiBA,kBAAiB,aAAa,IAAI,CAAC,IAAI;AAC1D,GAAGA,gBAAA,KAAqBA,gBAAA,GAAmB,CAAC,EAAE;AAU9C,SAASC,oBAAoBjG,MAAA,EAAQkG,MAAA,EAAQ;EAC3ClG,MAAA,CAAOxxB,MAAA,CAAOnmB,IAAA,CAAK5G,MAAA,CAAO+vC,CAAA,IAAKA,CAAA,YAAalS,aAAA,IAAiBkS,CAAA,YAAa9R,gBAAA,IAAoB8R,CAAA,YAAa3R,eAAA,IAAmB2R,CAAA,YAAa5R,iBAAiB,GAAGh+B,GAAA,CAAI4vC,CAAA,IAAK;IACtK,IAAIA,CAAA,YAAalS,aAAA,IAAiBkS,CAAA,YAAa5R,iBAAA,EAAmB;MAChE,OAAOomB,gBAAA,CAAiBG,QAAA;IAC1B;IACA,MAAMC,WAAA,GAAc5U,CAAA,YAAa9R,gBAAA,GAAmB8R,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2BuL,QAAA,IAAYyG,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2BqhB,yBAAA,GAA4B;IACxK,OAAOuF,WAAA,GAAcJ,gBAAA,CAAiBK,WAAA,GAAcL,gBAAA,CAAiBM,MAAA;EACvE,CAAC,GAAG7kD,MAAA,CAAOwnB,MAAA,IAAUA,MAAA,KAAW+8B,gBAAA,CAAiBK,WAAW,GAAGxU,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU,MAAM;IACtF2c,MAAA,CAAO;EACT,CAAC;AACH;AACA,SAASK,oBAAoB5+C,KAAA,EAAO;EAClC,MAAMA,KAAA;AACR;AAKA,IAAM6+C,iBAAA,GAAoB;EACxBpxB,KAAA,EAAO;EACPI,QAAA,EAAU;EACVF,YAAA,EAAc;EACdC,WAAA,EAAa;AACf;AAKA,IAAMkxB,kBAAA,GAAqB;EACzBrxB,KAAA,EAAO;EACPI,QAAA,EAAU;EACVF,YAAA,EAAc;EACdC,WAAA,EAAa;AACf;AAaA,IAAMmxB,OAAA,GAAN,MAAMA,OAAA,CAAO;EACX,IAAIvG,eAAA,EAAiB;IACnB,OAAO,KAAKwG,YAAA,CAAanC,iBAAA,CAAkB;EAC7C;EACA,IAAIN,WAAA,EAAa;IACf,OAAO,KAAKyC,YAAA,CAAalC,aAAA,CAAc;EACzC;EAAA;AAAA;AAAA;EAIA,IAAIj2B,OAAA,EAAS;IAKX,OAAO,KAAKo4B,OAAA;EACd;EAAA;AAAA;AAAA;EAIA,IAAIvC,YAAA,EAAc;IAChB,OAAO,KAAKsC,YAAA,CAAa9B,cAAA,CAAe;EAC1C;EACApmD,YAAA,EAAc;IACZ,KAAKooD,QAAA,GAAW;IAChB,KAAKC,eAAA,GAAkB;IACvB,KAAK53B,OAAA,GAAUjlB,MAAA,CAAOgG,OAAQ;IAC9B,KAAK02C,YAAA,GAAe18C,MAAA,CAAO65C,YAAY;IACvC,KAAKrgD,OAAA,GAAUwG,MAAA,CAAO6xC,oBAAA,EAAsB;MAC1C3xC,QAAA,EAAU;IACZ,CAAC,KAAK,CAAC;IACP,KAAKiF,YAAA,GAAenF,MAAA,CAAOoF,YAAa;IACxC,KAAK40C,iBAAA,GAAoB,KAAKxgD,OAAA,CAAQwgD,iBAAA,IAAqB;IAC3D,KAAK8C,qBAAA,GAAwB98C,MAAA,CAAO84C,qBAAqB;IACzD,KAAKrY,aAAA,GAAgBzgC,MAAA,CAAOstB,aAAa;IACzC,KAAKsO,QAAA,GAAW57B,MAAA,CAAOs1C,QAAQ;IAC/B,KAAKE,mBAAA,GAAsBx1C,MAAA,CAAOyzC,mBAAmB;IAMrD,KAAKkJ,OAAA,GAAU,IAAIjK,OAAA,CAAQ;IAQ3B,KAAKvyB,YAAA,GAAe,KAAK3mB,OAAA,CAAQ2mB,YAAA,IAAgBm8B,mBAAA;IAKjD,KAAKrF,SAAA,GAAY;IAOjB,KAAKnX,kBAAA,GAAqB9/B,MAAA,CAAOm5C,kBAAkB;IAUnD,KAAK/B,mBAAA,GAAsB,KAAK59C,OAAA,CAAQ49C,mBAAA,IAAuB;IAC/D,KAAKjc,MAAA,GAASn7B,MAAA,CAAO8xC,MAAA,EAAQ;MAC3B5xC,QAAA,EAAU;IACZ,CAAC,GAAGwwC,IAAA,CAAK,KAAK,EAAC;IAOf,KAAKqM,4BAAA,GAA+B,CAAC,CAAC/8C,MAAA,CAAOk8B,YAAA,EAAc;MACzDh8B,QAAA,EAAU;IACZ,CAAC;IACD,KAAK88C,kBAAA,GAAqB,IAAIC,YAAA,CAAa;IAC3C,KAAKJ,eAAA,GAAkB78C,MAAA,CAAOO,MAAM,aAAaA,MAAA,IAAUA,MAAA,CAAO28C,eAAA,CAAgB;IAClF,KAAKC,WAAA,CAAY,KAAKhiB,MAAM;IAC5B,KAAK2hB,qBAAA,CAAsBhH,gBAAA,CAAiB,MAAM,KAAKI,cAAA,EAAgB,KAAKkE,WAAW,EAAE9a,SAAA,CAAU;MACjG5hC,KAAA,EAAO6pC,CAAA,IAAK;QACV,KAAKtiB,OAAA,CAAQhf,IAAA,CAAKhQ,SAAA,GAAY,+BAA+BsxC,CAAC,KAAKA,CAAC;MACtE;IACF,CAAC;IACD,KAAK6V,2BAAA,CAA4B;EACnC;EACAA,4BAAA,EAA8B;IAC5B,MAAMC,YAAA,GAAe,KAAKP,qBAAA,CAAsBv4B,MAAA,CAAO+a,SAAA,CAAUiI,CAAA,IAAK;MACpE,IAAI;QACF,MAAM4N,iBAAA,GAAoB,KAAK2H,qBAAA,CAAsB3H,iBAAA;QACrD,MAAMD,iBAAA,GAAoB,KAAK4H,qBAAA,CAAsB5H,iBAAA;QACrD,IAAIC,iBAAA,KAAsB,QAAQD,iBAAA,KAAsB,MAAM;UAC5D,KAAKwH,YAAA,CAAa5B,iBAAA,CAAkBvT,CAAA,EAAG2N,iBAAiB;UACxD,IAAI3N,CAAA,YAAa9R,gBAAA,IAAoB8R,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2BuL,QAAA,IAAYyG,CAAA,CAAEnoB,IAAA,KAASmW,0BAAA,CAA2BqhB,yBAAA,EAA2B;YAItJ,KAAKK,SAAA,GAAY;UACnB,WAAW1P,CAAA,YAAalS,aAAA,EAAe;YACrC,KAAK4hB,SAAA,GAAY;UACnB,WAAW1P,CAAA,YAAatQ,eAAA,EAAiB;YACvC,MAAMqmB,UAAA,GAAa,KAAK9H,mBAAA,CAAoB3B,KAAA,CAAMtM,CAAA,CAAEnsC,GAAA,EAAK+5C,iBAAA,CAAkBgB,aAAa;YACxF,MAAME,MAAA,GAAS;cAAA;cAEbkH,IAAA,EAAMpI,iBAAA,CAAkBkB,MAAA,CAAOkH,IAAA;cAC/B7F,kBAAA,EAAoBvC,iBAAA,CAAkBkB,MAAA,CAAOqB,kBAAA;cAAA;cAAA;cAAA;cAAA;cAK7CC,UAAA,EAAY,KAAKqC,iBAAA,KAAsB,WAAWjB,4BAAA,CAA6B5D,iBAAA,CAAkBprC,MAAM;YACzG;YACA,KAAKyzC,kBAAA,CAAmBF,UAAA,EAAYvoB,qBAAA,EAAuB,MAAMshB,MAAA,EAAQ;cACvE9uC,OAAA,EAAS4tC,iBAAA,CAAkB5tC,OAAA;cAC3B+uC,MAAA,EAAQnB,iBAAA,CAAkBmB,MAAA;cAC1BzyC,OAAA,EAASsxC,iBAAA,CAAkBtxC;YAC7B,CAAC;UACH;QACF;QAIA,IAAI45C,mBAAA,CAAoBlW,CAAC,GAAG;UAC1B,KAAKoV,OAAA,CAAQr7C,IAAA,CAAKimC,CAAC;QACrB;MACF,SAASA,IAAG;QACV,KAAKuV,qBAAA,CAAsBzH,sBAAA,CAAuB/zC,IAAA,CAAKimC,EAAC;MAC1D;IACF,CAAC;IACD,KAAKyV,kBAAA,CAAmB13C,GAAA,CAAI+3C,YAAY;EAC1C;EAAA;EAEAK,uBAAuB9Q,iBAAA,EAAmB;IAGxC,KAAKwN,WAAA,CAAYhvB,IAAA,CAAKlO,SAAA,GAAY0vB,iBAAA;IAClC,KAAKkQ,qBAAA,CAAsBlQ,iBAAA,GAAoBA,iBAAA;EACjD;EAAA;AAAA;AAAA;EAIA+Q,kBAAA,EAAoB;IAClB,KAAKC,2BAAA,CAA4B;IACjC,IAAI,CAAC,KAAKd,qBAAA,CAAsB9H,sBAAA,EAAwB;MACtD,KAAK6I,yBAAA,CAA0B,KAAKjiB,QAAA,CAAS9S,IAAA,CAAK,IAAI,GAAGiM,qBAAA,EAAuB,KAAK2nB,YAAA,CAAatnB,aAAA,CAAc,CAAC;IACnH;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAwoB,4BAAA,EAA8B;IAI5B,KAAKE,uCAAA,KAA4C,KAAKpB,YAAA,CAAa7B,2CAAA,CAA4C,CAACz/C,GAAA,EAAK06B,WAAU;MAG7H0e,UAAA,CAAW,MAAM;QACf,KAAKqJ,yBAAA,CAA0BziD,GAAA,EAAK,YAAY06B,MAAK;MACvD,GAAG,CAAC;IACN,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA+nB,0BAA0BziD,GAAA,EAAK2O,MAAA,EAAQ+rB,QAAO;IAC5C,MAAMugB,MAAA,GAAS;MACbsB,UAAA,EAAY;IACd;IAQA,MAAMviB,aAAA,GAAgBU,QAAOmf,YAAA,GAAenf,SAAQ;IAGpD,IAAIA,QAAO;MACT,MAAMioB,SAAA,GAAY38C,cAAA,KACb00B;MAEL,OAAOioB,SAAA,CAAU9I,YAAA;MACjB,OAAO8I,SAAA,CAAUpD,aAAA;MACjB,IAAIxkD,MAAA,CAAOI,IAAA,CAAKwnD,SAAS,EAAEznD,MAAA,KAAW,GAAG;QACvC+/C,MAAA,CAAOvgB,KAAA,GAAQioB,SAAA;MACjB;IACF;IACA,MAAM7T,OAAA,GAAU,KAAK8T,QAAA,CAAS5iD,GAAG;IACjC,KAAKoiD,kBAAA,CAAmBtT,OAAA,EAASngC,MAAA,EAAQqrB,aAAA,EAAeihB,MAAM;EAChE;EAAA;EAEA,IAAIj7C,IAAA,EAAM;IACR,OAAO,KAAK6iD,YAAA,CAAa,KAAK/H,cAAc;EAC9C;EAAA;AAAA;AAAA;AAAA;EAKAgI,qBAAA,EAAuB;IACrB,OAAO,KAAKpB,qBAAA,CAAsB5H,iBAAA;EACpC;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIE,yBAAA,EAA2B;IAC7B,OAAO,KAAK0H,qBAAA,CAAsB1H,wBAAA;EACpC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiBA+H,YAAYhiB,MAAA,EAAQ;IAClB,CAAC,OAAOllC,SAAA,KAAc,eAAeA,SAAA,KAAcmsC,cAAA,CAAejH,MAAM;IACxE,KAAKA,MAAA,GAASA,MAAA,CAAOxjC,GAAA,CAAIurC,iBAAiB;IAC1C,KAAK+T,SAAA,GAAY;EACnB;EAAA;EAEA3gC,YAAA,EAAc;IACZ,KAAK6nC,OAAA,CAAQ;EACf;EAAA;EAEAA,QAAA,EAAU;IACR,KAAKrB,qBAAA,CAAsB95C,QAAA,CAAS;IACpC,IAAI,KAAK86C,uCAAA,EAAyC;MAChD,KAAKA,uCAAA,CAAwC3e,WAAA,CAAY;MACzD,KAAK2e,uCAAA,GAA0C;IACjD;IACA,KAAKlB,QAAA,GAAW;IAChB,KAAKI,kBAAA,CAAmB7d,WAAA,CAAY;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiDAif,cAAcrtB,QAAA,EAAUstB,gBAAA,GAAmB,CAAC,GAAG;IAC7C,MAAM;MACJvtB,UAAA;MACAxF,WAAA;MACAC,QAAA;MACA+yB,mBAAA;MACAC;IACF,IAAIF,gBAAA;IACJ,MAAMvwC,CAAA,GAAIywC,gBAAA,GAAmB,KAAKrI,cAAA,CAAe3qB,QAAA,GAAWA,QAAA;IAC5D,IAAIizB,CAAA,GAAI;IACR,QAAQF,mBAAA;MACN,KAAK;QACHE,CAAA,GAAIp9C,cAAA,CAAAA,cAAA,KACC,KAAK80C,cAAA,CAAe5qB,WAAA,GACpBA,WAAA;QAEL;MACF,KAAK;QACHkzB,CAAA,GAAI,KAAKtI,cAAA,CAAe5qB,WAAA;QACxB;MACF;QACEkzB,CAAA,GAAIlzB,WAAA,IAAe;IACvB;IACA,IAAIkzB,CAAA,KAAM,MAAM;MACdA,CAAA,GAAI,KAAKC,gBAAA,CAAiBD,CAAC;IAC7B;IACA,IAAIxtB,yBAAA;IACJ,IAAI;MACF,MAAM0tB,kBAAA,GAAqB5tB,UAAA,GAAaA,UAAA,CAAWyF,QAAA,GAAW,KAAK6jB,WAAA,CAAY7jB,QAAA,CAASnL,IAAA;MACxF4F,yBAAA,GAA4BC,2BAAA,CAA4BytB,kBAAkB;IAC5E,SAASnX,CAAA,EAAG;MAMV,IAAI,OAAOxW,QAAA,CAAS,CAAC,MAAM,YAAY,CAACA,QAAA,CAAS,CAAC,EAAE/jB,UAAA,CAAW,GAAG,GAAG;QAQnE+jB,QAAA,GAAW,EAAC;MACd;MACAC,yBAAA,GAA4B,KAAKklB,cAAA,CAAe9qB,IAAA;IAClD;IACA,OAAO8F,6BAAA,CAA8BF,yBAAA,EAA2BD,QAAA,EAAUytB,CAAA,EAAG1wC,CAAA,IAAK,IAAI;EACxF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAyBA6wC,cAAcvjD,GAAA,EAAKi7C,MAAA,GAAS;IAC1BqB,kBAAA,EAAoB;EACtB,GAAG;IACD,IAAI,OAAOzhD,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,KAAK4mD,eAAA,IAAmB,CAACt8C,MAAA,CAAO28C,eAAA,CAAgB,GAAG;QACrD,KAAKj4B,OAAA,CAAQhf,IAAA,CAAK,mFAAmF;MACvG;IACF;IACA,MAAMikC,OAAA,GAAUtZ,SAAA,CAAUx1B,GAAG,IAAIA,GAAA,GAAM,KAAK4iD,QAAA,CAAS5iD,GAAG;IACxD,MAAMkiD,UAAA,GAAa,KAAK9H,mBAAA,CAAoB3B,KAAA,CAAM3J,OAAA,EAAS,KAAK+P,UAAU;IAC1E,OAAO,KAAKuD,kBAAA,CAAmBF,UAAA,EAAYvoB,qBAAA,EAAuB,MAAMshB,MAAM;EAChF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+BAuI,SAAS7tB,QAAA,EAAUslB,MAAA,GAAS;IAC1BqB,kBAAA,EAAoB;EACtB,GAAG;IACDmH,gBAAA,CAAiB9tB,QAAQ;IACzB,OAAO,KAAK4tB,aAAA,CAAc,KAAKP,aAAA,CAAcrtB,QAAA,EAAUslB,MAAM,GAAGA,MAAM;EACxE;EAAA;EAEA4H,aAAa7iD,GAAA,EAAK;IAChB,OAAO,KAAKqlC,aAAA,CAAclU,SAAA,CAAUnxB,GAAG;EACzC;EAAA;EAEA4iD,SAAS5iD,GAAA,EAAK;IACZ,IAAI;MACF,OAAO,KAAKqlC,aAAA,CAAct9B,KAAA,CAAM/H,GAAG;IACrC,QAAQ;MACN,OAAO,KAAKqlC,aAAA,CAAct9B,KAAA,CAAM,GAAG;IACrC;EACF;EACA27C,SAAS1jD,GAAA,EAAK2jD,YAAA,EAAc;IAC1B,IAAIvlD,OAAA;IACJ,IAAIulD,YAAA,KAAiB,MAAM;MACzBvlD,OAAA,GAAU4H,cAAA,KACLm7C,iBAAA;IAEP,WAAWwC,YAAA,KAAiB,OAAO;MACjCvlD,OAAA,GAAU4H,cAAA,KACLo7C,kBAAA;IAEP,OAAO;MACLhjD,OAAA,GAAUulD,YAAA;IACZ;IACA,IAAInuB,SAAA,CAAUx1B,GAAG,GAAG;MAClB,OAAO4vB,YAAA,CAAa,KAAKkrB,cAAA,EAAgB96C,GAAA,EAAK5B,OAAO;IACvD;IACA,MAAM0wC,OAAA,GAAU,KAAK8T,QAAA,CAAS5iD,GAAG;IACjC,OAAO4vB,YAAA,CAAa,KAAKkrB,cAAA,EAAgBhM,OAAA,EAAS1wC,OAAO;EAC3D;EACAilD,iBAAiBhmD,MAAA,EAAQ;IACvB,OAAOtC,MAAA,CAAOC,OAAA,CAAQqC,MAAM,EAAE8D,MAAA,CAAO,CAACyiB,MAAA,EAAQ,CAAC3pB,GAAA,EAAKE,KAAK,MAAM;MAC7D,IAAIA,KAAA,KAAU,QAAQA,KAAA,KAAU,QAAW;QACzCypB,MAAA,CAAO3pB,GAAG,IAAIE,KAAA;MAChB;MACA,OAAOypB,MAAA;IACT,GAAG,CAAC,CAAC;EACP;EACAw+B,mBAAmBpH,MAAA,EAAQrsC,MAAA,EAAQqrB,aAAA,EAAeihB,MAAA,EAAQ2I,YAAA,EAAc;IACtE,IAAI,KAAKpC,QAAA,EAAU;MACjB,OAAOt1C,OAAA,CAAQC,OAAA,CAAQ,KAAK;IAC9B;IACA,IAAIA,OAAA;IACJ,IAAI+uC,MAAA;IACJ,IAAIzyC,OAAA;IACJ,IAAIm7C,YAAA,EAAc;MAChBz3C,OAAA,GAAUy3C,YAAA,CAAaz3C,OAAA;MACvB+uC,MAAA,GAAS0I,YAAA,CAAa1I,MAAA;MACtBzyC,OAAA,GAAUm7C,YAAA,CAAan7C,OAAA;IACzB,OAAO;MACLA,OAAA,GAAU,IAAIyD,OAAA,CAAQ,CAACxN,GAAA,EAAKmlD,GAAA,KAAQ;QAClC13C,OAAA,GAAUzN,GAAA;QACVw8C,MAAA,GAAS2I,GAAA;MACX,CAAC;IACH;IAEA,MAAM55C,MAAA,GAAS,KAAKF,YAAA,CAAaG,GAAA,CAAI;IACrC02C,mBAAA,CAAoB,MAAM,MAAM;MAG9BkD,cAAA,CAAe,MAAM,KAAK/5C,YAAA,CAAaK,MAAA,CAAOH,MAAM,CAAC;IACvD,CAAC;IACD,KAAKy3C,qBAAA,CAAsBjH,uBAAA,CAAwB;MACjD9rC,MAAA;MACAqrB,aAAA;MACA8gB,cAAA,EAAgB,KAAKA,cAAA;MACrBC,aAAA,EAAe,KAAKD,cAAA;MACpBE,MAAA;MACAC,MAAA;MACA9uC,OAAA;MACA+uC,MAAA;MACAzyC,OAAA;MACAi3B,eAAA,EAAiB,KAAKsf,WAAA,CAAY7jB,QAAA;MAClCyN,kBAAA,EAAoB,KAAKoW;IAC3B,CAAC;IAGD,OAAOv2C,OAAA,CAAQ2hB,KAAA,CAAM+hB,CAAA,IAAK;MACxB,OAAOjgC,OAAA,CAAQgvC,MAAA,CAAO/O,CAAC;IACzB,CAAC;EACH;AAaF;AAXIkV,OAAA,CAAK19C,IAAA,GAAO,SAASogD,eAAe/lD,CAAA,EAAG;EACrC,OAAO,KAAKA,CAAA,IAAKqjD,OAAA,EAAQ;AAC3B;AAGAA,OAAA,CAAKv9C,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOmiD,OAAA;EACPr9C,OAAA,EAASq9C,OAAA,CAAO19C,IAAA;EAChB8M,UAAA,EAAY;AACd,CAAC;AA1gBL,IAAMuzC,MAAA,GAAN3C,OAAA;AAAA,CA6gBC,MAAM;EACL,CAAC,OAAOxmD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8/C,MAAA,EAAQ,CAAC;IAC/E/iD,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,EAAC,EAAG,IAAI;AACpB,GAAG;AACH,SAASgzC,iBAAiB9tB,QAAA,EAAU;EAClC,SAASrH,CAAA,GAAI,GAAGA,CAAA,GAAIqH,QAAA,CAASz6B,MAAA,EAAQozB,CAAA,IAAK;IACxC,MAAMwJ,GAAA,GAAMnC,QAAA,CAASrH,CAAC;IACtB,IAAIwJ,GAAA,IAAO,MAAM;MACf,MAAM,IAAIppB,YAAA,CAAc,OAA8C,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,+BAA+Bi9B,GAAG,qBAAqBxJ,CAAC,EAAE;IACpL;EACF;AACF;AACA,SAAS+zB,oBAAoBlW,CAAA,EAAG;EAC9B,OAAO,EAAEA,CAAA,YAAavQ,oBAAA,KAAyB,EAAEuQ,CAAA,YAAatQ,eAAA;AAChE;AAmGA,IAAMooB,WAAA,GAAN,MAAMA,WAAA,CAAW;EACf7qD,YAAYuhD,MAAA,EAAQltB,KAAA,EAAOy2B,iBAAA,EAAmB9lC,QAAA,EAAU7I,EAAA,EAAI4uC,gBAAA,EAAkB;IAC5E,KAAKxJ,MAAA,GAASA,MAAA;IACd,KAAKltB,KAAA,GAAQA,KAAA;IACb,KAAKy2B,iBAAA,GAAoBA,iBAAA;IACzB,KAAK9lC,QAAA,GAAWA,QAAA;IAChB,KAAK7I,EAAA,GAAKA,EAAA;IACV,KAAK4uC,gBAAA,GAAmBA,gBAAA;IAKxB,KAAK5tC,IAAA,GAAO;IACZ,KAAKof,QAAA,GAAW;IAEhB,KAAKyuB,SAAA,GAAY,IAAI9M,OAAA,CAAQ;IAO7B,KAAK6L,gBAAA,GAAmB;IAOxB,KAAK7G,kBAAA,GAAqB;IAO1B,KAAKC,UAAA,GAAa;IAClB,MAAM5mC,OAAA,GAAUJ,EAAA,CAAG8uC,aAAA,CAAc1uC,OAAA,EAASzb,WAAA,CAAY;IACtD,KAAKoqD,eAAA,GAAkB3uC,OAAA,KAAY,OAAOA,OAAA,KAAY;IACtD,IAAI,KAAK2uC,eAAA,EAAiB;MACxB,KAAKrC,YAAA,GAAetH,MAAA,CAAOxxB,MAAA,CAAO+a,SAAA,CAAUnmC,CAAA,IAAK;QAC/C,IAAIA,CAAA,YAAak8B,aAAA,EAAe;UAC9B,KAAKsqB,UAAA,CAAW;QAClB;MACF,CAAC;IACH,OAAO;MACL,KAAKC,0BAAA,CAA2B,GAAG;IACrC;EACF;EAAA;AAAA;AAAA;AAAA;EAKAA,2BAA2BC,WAAA,EAAa;IACtC,IAAI,KAAKP,iBAAA,IAAqB,QAA0C,KAAKI,eAAA,EAAiB;MAC5F;IACF;IACA,KAAKI,mBAAA,CAAoB,YAAYD,WAAW;EAClD;EAAA;EAEAxjB,YAAYC,OAAA,EAAS;IACnB,IAAI,KAAKojB,eAAA,EAAiB;MACxB,KAAKC,UAAA,CAAW;IAClB;IAGA,KAAKH,SAAA,CAAUl+C,IAAA,CAAK,IAAI;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA,IAAIy+C,WAAWhvB,QAAA,EAAU;IACvB,IAAIA,QAAA,IAAY,MAAM;MACpB,KAAKA,QAAA,GAAWv6B,KAAA,CAAMkB,OAAA,CAAQq5B,QAAQ,IAAIA,QAAA,GAAW,CAACA,QAAQ;MAC9D,KAAK6uB,0BAAA,CAA2B,GAAG;IACrC,OAAO;MACL,KAAK7uB,QAAA,GAAW;MAChB,KAAK6uB,0BAAA,CAA2B,IAAI;IACtC;EACF;EAAA;EAEAI,QAAQC,MAAA,EAAQjiC,OAAA,EAASE,QAAA,EAAUH,MAAA,EAAQE,OAAA,EAAS;IAClD,MAAMisB,OAAA,GAAU,KAAKA,OAAA;IACrB,IAAIA,OAAA,KAAY,MAAM;MACpB,OAAO;IACT;IACA,IAAI,KAAKwV,eAAA,EAAiB;MACxB,IAAIO,MAAA,KAAW,KAAKjiC,OAAA,IAAWE,QAAA,IAAYH,MAAA,IAAUE,OAAA,EAAS;QAC5D,OAAO;MACT;MACA,IAAI,OAAO,KAAKxM,MAAA,KAAW,YAAY,KAAKA,MAAA,IAAU,SAAS;QAC7D,OAAO;MACT;IACF;IACA,MAAM4kC,MAAA,GAAS;MACbqB,kBAAA,EAAoB,KAAKA,kBAAA;MACzBC,UAAA,EAAY,KAAKA,UAAA;MACjB7hB,KAAA,EAAO,KAAKA,KAAA;MACZynB,IAAA,EAAM,KAAKA;IACb;IACA,KAAKxH,MAAA,CAAO4I,aAAA,CAAczU,OAAA,EAASmM,MAAM;IAIzC,OAAO,CAAC,KAAKqJ,eAAA;EACf;EAAA;EAEAppC,YAAA,EAAc;IACZ,KAAK+mC,YAAA,EAAcle,WAAA,CAAY;EACjC;EACAwgB,WAAA,EAAa;IACX,MAAMzV,OAAA,GAAU,KAAKA,OAAA;IACrB,KAAKv4B,IAAA,GAAOu4B,OAAA,KAAY,QAAQ,KAAKqV,gBAAA,GAAmB,KAAKA,gBAAA,EAAkBW,kBAAA,CAAmB,KAAKnK,MAAA,CAAOkI,YAAA,CAAa/T,OAAO,CAAC,IAAI;IACvI,MAAMiW,cAAA,GAAiB,KAAKxuC,IAAA,KAAS,OAAO;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAW5CyuC,0BAAA,CAA2B,KAAKzuC,IAAA,EAAM,KAAKhB,EAAA,CAAG8uC,aAAA,CAAc1uC,OAAA,CAAQzb,WAAA,CAAY,GAAG,MAAM;IACzF,KAAKwqD,mBAAA,CAAoB,QAAQK,cAAc;EACjD;EACAL,oBAAoBO,QAAA,EAAUC,SAAA,EAAW;IACvC,MAAM9mC,QAAA,GAAW,KAAKA,QAAA;IACtB,MAAMimC,aAAA,GAAgB,KAAK9uC,EAAA,CAAG8uC,aAAA;IAC9B,IAAIa,SAAA,KAAc,MAAM;MACtB9mC,QAAA,CAASjC,YAAA,CAAakoC,aAAA,EAAeY,QAAA,EAAUC,SAAS;IAC1D,OAAO;MACL9mC,QAAA,CAASlC,eAAA,CAAgBmoC,aAAA,EAAeY,QAAQ;IAClD;EACF;EACA,IAAInW,QAAA,EAAU;IACZ,IAAI,KAAKnZ,QAAA,KAAa,MAAM;MAC1B,OAAO;IACT;IACA,OAAO,KAAKglB,MAAA,CAAOqI,aAAA,CAAc,KAAKrtB,QAAA,EAAU;MAAA;MAAA;MAG9CD,UAAA,EAAY,KAAKA,UAAA,KAAe,SAAY,KAAKA,UAAA,GAAa,KAAKjI,KAAA;MACnEyC,WAAA,EAAa,KAAKA,WAAA;MAClBC,QAAA,EAAU,KAAKA,QAAA;MACf+yB,mBAAA,EAAqB,KAAKA,mBAAA;MAC1BC,gBAAA,EAAkB,KAAKA;IACzB,CAAC;EACH;AAsCF;AApCIc,WAAA,CAAKtgD,IAAA,GAAO,SAASwhD,mBAAmBnnD,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKimD,WAAA,EAAemB,iBAAA,CAAkBpB,MAAM,GAAMoB,iBAAA,CAAkBlnB,cAAc,GAAMmnB,iBAAA,CAAkB,UAAU,GAAMD,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBI,gBAAgB,CAAC;AACvP;AAGAvB,WAAA,CAAKrhB,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMgjD,WAAA;EACNnhB,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;EAClC2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASC,wBAAwBpf,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASC,oCAAoCC,MAAA,EAAQ;QAC1E,OAAOz6B,GAAA,CAAIu5B,OAAA,CAAQkB,MAAA,CAAOjB,MAAA,EAAQiB,MAAA,CAAOljC,OAAA,EAASkjC,MAAA,CAAOhjC,QAAA,EAAUgjC,MAAA,CAAOnjC,MAAA,EAAQmjC,MAAA,CAAOjjC,OAAO;MAClG,CAAC;IACH;IACA,IAAI0jB,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,UAAU16B,GAAA,CAAIhV,MAAM;IACrC;EACF;EACA0sB,MAAA,EAAQ;IACN1sB,MAAA,EAAQ;IACR6Z,WAAA,EAAa;IACbC,QAAA,EAAU;IACV+yB,mBAAA,EAAqB;IACrBxoB,KAAA,EAAO;IACPynB,IAAA,EAAM;IACNzsB,UAAA,EAAY;IACZytB,gBAAA,EAAkB,CAAI6C,UAAA,CAAaC,0BAAA,EAA4B,oBAAoB,oBAAoBC,gBAAgB;IACvH5J,kBAAA,EAAoB,CAAI0J,UAAA,CAAaC,0BAAA,EAA4B,sBAAsB,sBAAsBC,gBAAgB;IAC7H3J,UAAA,EAAY,CAAIyJ,UAAA,CAAaC,0BAAA,EAA4B,cAAc,cAAcC,gBAAgB;IACrGvB,UAAA,EAAY;EACd;EACAzhB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BhjB,oBAAoB;AACjE,CAAC;AA7LL,IAAMijB,UAAA,GAANnC,WAAA;AAAA,CAgMC,MAAM;EACL,CAAC,OAAOppD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkiD,UAAA,EAAY,CAAC;IACnFnlD,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM+iD;EACR,GAAG;IACD/iD,IAAA,EAAMi9B;EACR,GAAG;IACDj9B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;EACH,GAAG;IACD3M,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASukD;EACX,CAAC,GAAG;IACFnvC,MAAA,EAAQ,CAAC;MACPpV,IAAA,EAAMqlD,WAAA;MACN14C,IAAA,EAAM,CAAC,aAAa;IACtB,GAAG;MACD3M,IAAA,EAAMqiC;IACR,CAAC;IACDpT,WAAA,EAAa,CAAC;MACZjvB,IAAA,EAAMqiC;IACR,CAAC;IACDnT,QAAA,EAAU,CAAC;MACTlvB,IAAA,EAAMqiC;IACR,CAAC;IACD4f,mBAAA,EAAqB,CAAC;MACpBjiD,IAAA,EAAMqiC;IACR,CAAC;IACD5I,KAAA,EAAO,CAAC;MACNz5B,IAAA,EAAMqiC;IACR,CAAC;IACD6e,IAAA,EAAM,CAAC;MACLlhD,IAAA,EAAMqiC;IACR,CAAC;IACD5N,UAAA,EAAY,CAAC;MACXz0B,IAAA,EAAMqiC;IACR,CAAC;IACD6f,gBAAA,EAAkB,CAAC;MACjBliD,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD5J,kBAAA,EAAoB,CAAC;MACnBr7C,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD3J,UAAA,EAAY,CAAC;MACXt7C,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDvB,UAAA,EAAY,CAAC;MACX1jD,IAAA,EAAMqiC;IACR,CAAC;IACDshB,OAAA,EAAS,CAAC;MACR3jD,IAAA,EAAMulD,YAAA;MACN54C,IAAA,EAAM,CAAC,SAAS,CAAC,iBAAiB,kBAAkB,mBAAmB,iBAAiB,gBAAgB,CAAC;IAC3G,CAAC;EACH,CAAC;AACH,GAAG;AAuEH,IAAM64C,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrB,IAAI/C,SAAA,EAAW;IACb,OAAO,KAAKgD,SAAA;EACd;EACAttD,YAAYuhD,MAAA,EAAQthC,OAAA,EAAS+E,QAAA,EAAUuoC,GAAA,EAAKC,IAAA,EAAM;IAChD,KAAKjM,MAAA,GAASA,MAAA;IACd,KAAKthC,OAAA,GAAUA,OAAA;IACf,KAAK+E,QAAA,GAAWA,QAAA;IAChB,KAAKuoC,GAAA,GAAMA,GAAA;IACX,KAAKC,IAAA,GAAOA,IAAA;IACZ,KAAKC,OAAA,GAAU,EAAC;IAChB,KAAKH,SAAA,GAAY;IAQjB,KAAKI,uBAAA,GAA0B;MAC7BC,KAAA,EAAO;IACT;IAiBA,KAAKC,cAAA,GAAiB,IAAI7mB,YAAA,CAAa;IACvC,KAAK8mB,wBAAA,GAA2BtM,MAAA,CAAOxxB,MAAA,CAAO+a,SAAA,CAAUnmC,CAAA,IAAK;MAC3D,IAAIA,CAAA,YAAak8B,aAAA,EAAe;QAC9B,KAAKp+B,MAAA,CAAO;MACd;IACF,CAAC;EACH;EAAA;EAEAqrD,mBAAA,EAAqB;IAEnBnkD,EAAA,CAAG,KAAKokD,KAAA,CAAMjmB,OAAA,EAASn+B,EAAA,CAAG,IAAI,CAAC,EAAEC,IAAA,CAAKokD,QAAA,CAAS,CAAC,EAAEljB,SAAA,CAAU8J,CAAA,IAAK;MAC/D,KAAKnyC,MAAA,CAAO;MACZ,KAAKwrD,4BAAA,CAA6B;IACpC,CAAC;EACH;EACAA,6BAAA,EAA+B;IAC7B,KAAKC,4BAAA,EAA8BvjB,WAAA,CAAY;IAC/C,MAAMwjB,cAAA,GAAiB,CAAC,GAAG,KAAKJ,KAAA,CAAMK,OAAA,CAAQ,GAAG,KAAKZ,IAAI,EAAExqD,MAAA,CAAOwqD,IAAA,IAAQ,CAAC,CAACA,IAAI,EAAErqD,GAAA,CAAIqqD,IAAA,IAAQA,IAAA,CAAKxC,SAAS;IAC7G,KAAKkD,4BAAA,GAA+BjsD,IAAA,CAAKksD,cAAc,EAAEvkD,IAAA,CAAKokD,QAAA,CAAS,CAAC,EAAEljB,SAAA,CAAU0iB,IAAA,IAAQ;MAC1F,IAAI,KAAKF,SAAA,KAAc,KAAKe,YAAA,CAAa,KAAK9M,MAAM,EAAEiM,IAAI,GAAG;QAC3D,KAAK/qD,MAAA,CAAO;MACd;IACF,CAAC;EACH;EACA,IAAI6rD,iBAAiBh7C,IAAA,EAAM;IACzB,MAAMm6C,OAAA,GAAUzrD,KAAA,CAAMkB,OAAA,CAAQoQ,IAAI,IAAIA,IAAA,GAAOA,IAAA,CAAKhT,KAAA,CAAM,GAAG;IAC3D,KAAKmtD,OAAA,GAAUA,OAAA,CAAQzqD,MAAA,CAAOm0B,CAAA,IAAK,CAAC,CAACA,CAAC;EACxC;EAAA;EAEA0Q,YAAYC,OAAA,EAAS;IACnB,KAAKrlC,MAAA,CAAO;EACd;EAAA;EAEAqf,YAAA,EAAc;IACZ,KAAK+rC,wBAAA,CAAyBljB,WAAA,CAAY;IAC1C,KAAKujB,4BAAA,EAA8BvjB,WAAA,CAAY;EACjD;EACAloC,OAAA,EAAS;IACP,IAAI,CAAC,KAAKsrD,KAAA,IAAS,CAAC,KAAKxM,MAAA,CAAOkB,SAAA,EAAW;IAC3CiI,cAAA,CAAe,MAAM;MACnB,MAAM6D,cAAA,GAAiB,KAAKA,cAAA,CAAe;MAC3C,KAAKd,OAAA,CAAQltD,OAAA,CAAQ42B,CAAA,IAAK;QACxB,IAAIo3B,cAAA,EAAgB;UAClB,KAAKvpC,QAAA,CAASkC,QAAA,CAAS,KAAKjH,OAAA,CAAQgrC,aAAA,EAAe9zB,CAAC;QACtD,OAAO;UACL,KAAKnS,QAAA,CAASoC,WAAA,CAAY,KAAKnH,OAAA,CAAQgrC,aAAA,EAAe9zB,CAAC;QACzD;MACF,CAAC;MACD,IAAIo3B,cAAA,IAAkB,KAAKC,qBAAA,KAA0B,QAAW;QAC9D,KAAKxpC,QAAA,CAASjC,YAAA,CAAa,KAAK9C,OAAA,CAAQgrC,aAAA,EAAe,gBAAgB,KAAKuD,qBAAA,CAAsBprD,QAAA,CAAS,CAAC;MAC9G,OAAO;QACL,KAAK4hB,QAAA,CAASlC,eAAA,CAAgB,KAAK7C,OAAA,CAAQgrC,aAAA,EAAe,cAAc;MAC1E;MAEA,IAAI,KAAKqC,SAAA,KAAciB,cAAA,EAAgB;QACrC,KAAKjB,SAAA,GAAYiB,cAAA;QACjB,KAAKhB,GAAA,CAAIjkB,YAAA,CAAa;QAEtB,KAAKskB,cAAA,CAAe9kB,IAAA,CAAKylB,cAAc;MACzC;IACF,CAAC;EACH;EACAF,aAAa9M,MAAA,EAAQ;IACnB,MAAMv8C,OAAA,GAAUypD,oBAAA,CAAqB,KAAKf,uBAAuB,IAAI,KAAKA,uBAAA;IAAA;IAE1E,KAAKA,uBAAA,CAAwBC,KAAA,IAAS;IACtC,OAAOH,IAAA,IAAQ;MACb,MAAM9X,OAAA,GAAU8X,IAAA,CAAK9X,OAAA;MACrB,OAAOA,OAAA,GAAU6L,MAAA,CAAO+I,QAAA,CAAS5U,OAAA,EAAS1wC,OAAO,IAAI;IACvD;EACF;EACAupD,eAAA,EAAiB;IACf,MAAMG,eAAA,GAAkB,KAAKL,YAAA,CAAa,KAAK9M,MAAM;IACrD,OAAO,KAAKiM,IAAA,IAAQkB,eAAA,CAAgB,KAAKlB,IAAI,KAAK,KAAKO,KAAA,CAAMjuB,IAAA,CAAK4uB,eAAe;EACnF;AAgCF;AA9BIrB,iBAAA,CAAK9iD,IAAA,GAAO,SAASokD,yBAAyB/pD,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKyoD,iBAAA,EAAqBrB,iBAAA,CAAkBpB,MAAM,GAAMoB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAkBgB,UAAA,EAAY,CAAC,CAAC;AAC3N;AAGAK,iBAAA,CAAK7jB,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwlD,iBAAA;EACN3jB,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxCklB,cAAA,EAAgB,SAASC,gCAAgC1hB,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IAC1E,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAU9B,UAAA,EAAY,CAAC;IAC3C;IACA,IAAI7f,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI87B,KAAA,GAAQiB,EAAA;IAC3D;EACF;EACArlB,MAAA,EAAQ;IACN+jB,uBAAA,EAAyB;IACzBc,qBAAA,EAAuB;IACvBF,gBAAA,EAAkB;EACpB;EACA1kB,OAAA,EAAS;IACPgkB,cAAA,EAAgB;EAClB;EACA/jB,QAAA,EAAU,CAAC,kBAAkB;EAC7BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2wB,oBAAoB;AACpC,CAAC;AA9IL,IAAMolB,gBAAA,GAAN9B,iBAAA;AAAA,CAiJC,MAAM;EACL,CAAC,OAAO5rD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqkD,gBAAA,EAAkB,CAAC;IACzFtnD,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM+iD;EACR,GAAG;IACD/iD,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAAMmlD,UAAA;IACN14C,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACFyqC,KAAA,EAAO,CAAC;MACNlmD,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACw4C,UAAA,EAAY;QACjB/Q,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACDyR,uBAAA,EAAyB,CAAC;MACxB7lD,IAAA,EAAMqiC;IACR,CAAC;IACDskB,qBAAA,EAAuB,CAAC;MACtB3mD,IAAA,EAAMqiC;IACR,CAAC;IACD0jB,cAAA,EAAgB,CAAC;MACf/lD,IAAA,EAAMsiC;IACR,CAAC;IACDmkB,gBAAA,EAAkB,CAAC;MACjBzmD,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAIH,SAASukB,qBAAqBzpD,OAAA,EAAS;EACrC,OAAO,CAAC,CAACA,OAAA,CAAQ2xB,KAAA;AACnB;AASA,IAAM04B,kBAAA,GAAN,MAAyB,EAAC;AAY1B,IAAMC,kBAAA,GAAN,MAAMA,kBAAA,CAAkB;EACtBC,QAAQl7B,KAAA,EAAOhxB,EAAA,EAAI;IACjB,OAAOA,EAAA,CAAG,EAAEuG,IAAA,CAAKsvC,UAAA,CAAW,MAAMvvC,EAAA,CAAG,IAAI,CAAC,CAAC;EAC7C;AAaF;AAXI2lD,kBAAA,CAAK/kD,IAAA,GAAO,SAASilD,0BAA0B5qD,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAK0qD,kBAAA,EAAmB;AACtC;AAGAA,kBAAA,CAAK5kD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOwpD,kBAAA;EACP1kD,OAAA,EAAS0kD,kBAAA,CAAkB/kD,IAAA;EAC3B8M,UAAA,EAAY;AACd,CAAC;AAdL,IAAMo4C,iBAAA,GAANH,kBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO7tD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2kD,iBAAA,EAAmB,CAAC;IAC1F5nD,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAMq4C,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjBH,QAAQl7B,KAAA,EAAOhxB,EAAA,EAAI;IACjB,OAAOsG,EAAA,CAAG,IAAI;EAChB;AAaF;AAXI+lD,aAAA,CAAKnlD,IAAA,GAAO,SAASolD,qBAAqB/qD,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK8qD,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKhlD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4pD,aAAA;EACP9kD,OAAA,EAAS8kD,aAAA,CAAanlD,IAAA;EACtB8M,UAAA,EAAY;AACd,CAAC;AAdL,IAAMu4C,YAAA,GAANF,aAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOjuD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8kD,YAAA,EAAc,CAAC;IACrF/nD,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAaH,IAAMw4C,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpB7vD,YAAYuhD,MAAA,EAAQ5D,QAAA,EAAU3tC,QAAA,EAAU8/C,kBAAA,EAAoBp/B,MAAA,EAAQ;IAClE,KAAK6wB,MAAA,GAASA,MAAA;IACd,KAAKvxC,QAAA,GAAWA,QAAA;IAChB,KAAK8/C,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKp/B,MAAA,GAASA,MAAA;EAChB;EACAq/B,gBAAA,EAAkB;IAChB,KAAKlH,YAAA,GAAe,KAAKtH,MAAA,CAAOxxB,MAAA,CAAOnmB,IAAA,CAAK5G,MAAA,CAAO+vC,CAAA,IAAKA,CAAA,YAAalS,aAAa,GAAGh3B,SAAA,CAAU,MAAM,KAAK0lD,OAAA,CAAQ,CAAC,CAAC,EAAEzkB,SAAA,CAAU,MAAM,CAAC,CAAC;EAC1I;EACAykB,QAAA,EAAU;IACR,OAAO,KAAKS,aAAA,CAAc,KAAKhgD,QAAA,EAAU,KAAKuxC,MAAA,CAAO5a,MAAM;EAC7D;EAAA;EAEA7kB,YAAA,EAAc;IACZ,IAAI,KAAK+mC,YAAA,EAAc;MACrB,KAAKA,YAAA,CAAale,WAAA,CAAY;IAChC;EACF;EACAqlB,cAAchgD,QAAA,EAAU6+B,SAAQ;IAC9B,MAAMvpC,GAAA,GAAM,EAAC;IACb,WAAW+uB,KAAA,IAASwa,SAAQ;MAC1B,IAAIxa,KAAA,CAAMrb,SAAA,IAAa,CAACqb,KAAA,CAAMqZ,SAAA,EAAW;QACvCrZ,KAAA,CAAMqZ,SAAA,GAAYC,yBAAA,CAA0BtZ,KAAA,CAAMrb,SAAA,EAAWhJ,QAAA,EAAU,UAAUqkB,KAAA,CAAMC,IAAI,EAAE;MAC/F;MACA,MAAM27B,uBAAA,GAA0B57B,KAAA,CAAMqZ,SAAA,IAAa19B,QAAA;MACnD,MAAMkgD,mBAAA,GAAsB77B,KAAA,CAAM2a,eAAA,IAAmBihB,uBAAA;MASrD,IAAI57B,KAAA,CAAMga,YAAA,IAAgB,CAACha,KAAA,CAAMomB,aAAA,IAAiBpmB,KAAA,CAAMke,OAAA,KAAY,UAAale,KAAA,CAAM0R,aAAA,IAAiB,CAAC1R,KAAA,CAAMimB,gBAAA,EAAkB;QAC/Hh1C,GAAA,CAAIlE,IAAA,CAAK,KAAK+uD,aAAA,CAAcF,uBAAA,EAAyB57B,KAAK,CAAC;MAC7D;MACA,IAAIA,KAAA,CAAM+C,QAAA,IAAY/C,KAAA,CAAMomB,aAAA,EAAe;QACzCn1C,GAAA,CAAIlE,IAAA,CAAK,KAAK4uD,aAAA,CAAcE,mBAAA,EAAqB77B,KAAA,CAAM+C,QAAA,IAAY/C,KAAA,CAAMomB,aAAa,CAAC;MACzF;IACF;IACA,OAAOx4C,IAAA,CAAKqD,GAAG,EAAEsE,IAAA,CAAKokD,QAAA,CAAS,CAAC;EAClC;EACAmC,cAAcngD,QAAA,EAAUqkB,KAAA,EAAO;IAC7B,OAAO,KAAKy7B,kBAAA,CAAmBP,OAAA,CAAQl7B,KAAA,EAAO,MAAM;MAClD,IAAI+7B,eAAA;MACJ,IAAI/7B,KAAA,CAAMga,YAAA,IAAgBha,KAAA,CAAMke,OAAA,KAAY,QAAW;QACrD6d,eAAA,GAAkB,KAAK1/B,MAAA,CAAO2d,YAAA,CAAar+B,QAAA,EAAUqkB,KAAK;MAC5D,OAAO;QACL+7B,eAAA,GAAkBzmD,EAAA,CAAG,IAAI;MAC3B;MACA,MAAM0mD,sBAAA,GAAyBD,eAAA,CAAgBxmD,IAAA,CAAK6pC,QAAA,CAAS9M,MAAA,IAAU;QACrE,IAAIA,MAAA,KAAW,MAAM;UACnB,OAAOh9B,EAAA,CAAG,MAAM;QAClB;QACA0qB,KAAA,CAAMomB,aAAA,GAAgB9T,MAAA,CAAOkI,MAAA;QAC7Bxa,KAAA,CAAM2a,eAAA,GAAkBrI,MAAA,CAAO32B,QAAA;QAG/B,OAAO,KAAKggD,aAAA,CAAcrpB,MAAA,CAAO32B,QAAA,IAAYA,QAAA,EAAU22B,MAAA,CAAOkI,MAAM;MACtE,CAAC,CAAC;MACF,IAAIxa,KAAA,CAAM0R,aAAA,IAAiB,CAAC1R,KAAA,CAAMimB,gBAAA,EAAkB;QAClD,MAAMgW,cAAA,GAAiB,KAAK5/B,MAAA,CAAOqV,aAAA,CAAc1R,KAAK;QACtD,OAAOpyB,IAAA,CAAK,CAACouD,sBAAA,EAAwBC,cAAc,CAAC,EAAE1mD,IAAA,CAAKokD,QAAA,CAAS,CAAC;MACvE,OAAO;QACL,OAAOqC,sBAAA;MACT;IACF,CAAC;EACH;AAaF;AAXIR,gBAAA,CAAKtlD,IAAA,GAAO,SAASgmD,wBAAwB3rD,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKirD,gBAAA,EAAoBplD,QAAA,CAASmgD,MAAM,GAAMngD,QAAA,CAAYmzC,QAAQ,GAAMnzC,QAAA,CAAYsH,mBAAmB,GAAMtH,QAAA,CAAS4kD,kBAAkB,GAAM5kD,QAAA,CAAS6zC,kBAAkB,CAAC;AACxL;AAGAuR,gBAAA,CAAKnlD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO+pD,gBAAA;EACPjlD,OAAA,EAASilD,gBAAA,CAAgBtlD,IAAA;EACzB8M,UAAA,EAAY;AACd,CAAC;AAhFL,IAAMm5C,eAAA,GAANX,gBAAA;AAAA,CAmFC,MAAM;EACL,CAAC,OAAOpuD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0lD,eAAA,EAAiB,CAAC;IACxF3oD,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM+iD;EACR,GAAG;IACD/iD,IAAA,EAAS+1C;EACX,GAAG;IACD/1C,IAAA,EAASkK;EACX,GAAG;IACDlK,IAAA,EAAMwnD;EACR,GAAG;IACDxnD,IAAA,EAAMy2C;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMmS,eAAA,GAAkB,IAAItgD,cAAA,CAAe,EAAE;AAC7C,IAAMugD,eAAA,GAAN,MAAMA,eAAA,CAAe;EAAA;EAEnB1wD,YAAYisC,aAAA,EAAemV,WAAA,EAAauP,gBAAA,EAAkB7lC,IAAA,EAAM9lB,OAAA,GAAU,CAAC,GAAG;IAC5E,KAAKinC,aAAA,GAAgBA,aAAA;IACrB,KAAKmV,WAAA,GAAcA,WAAA;IACnB,KAAKuP,gBAAA,GAAmBA,gBAAA;IACxB,KAAK7lC,IAAA,GAAOA,IAAA;IACZ,KAAK9lB,OAAA,GAAUA,OAAA;IACf,KAAK4rD,MAAA,GAAS;IACd,KAAKC,UAAA,GAAa;IAClB,KAAKC,UAAA,GAAa;IAClB,KAAKjgB,KAAA,GAAQ,CAAC;IACd,KAAKrJ,mBAAA,GAAsBh8B,MAAA,CAAOuG,mBAAmB;IAErD/M,OAAA,CAAQ+rD,yBAAA,KAA8B;IACtC/rD,OAAA,CAAQgsD,eAAA,KAAoB;EAC9B;EACAnvD,KAAA,EAAO;IAIL,IAAI,KAAKmD,OAAA,CAAQ+rD,yBAAA,KAA8B,YAAY;MACzD,KAAKJ,gBAAA,CAAiBM,2BAAA,CAA4B,QAAQ;IAC5D;IACA,KAAKpD,wBAAA,GAA2B,KAAKqD,kBAAA,CAAmB;IACxD,KAAKC,wBAAA,GAA2B,KAAKC,mBAAA,CAAoB;EAC3D;EACAF,mBAAA,EAAqB;IACnB,OAAO,KAAK9P,WAAA,CAAYrxB,MAAA,CAAO+a,SAAA,CAAUiI,CAAA,IAAK;MAC5C,IAAIA,CAAA,YAAarS,eAAA,EAAiB;QAEhC,KAAKmQ,KAAA,CAAM,KAAK+f,MAAM,IAAI,KAAKD,gBAAA,CAAiBU,iBAAA,CAAkB;QAClE,KAAKR,UAAA,GAAa9d,CAAA,CAAEpS,iBAAA;QACpB,KAAKmwB,UAAA,GAAa/d,CAAA,CAAEnS,aAAA,GAAgBmS,CAAA,CAAEnS,aAAA,CAAc6f,YAAA,GAAe;MACrE,WAAW1N,CAAA,YAAalS,aAAA,EAAe;QACrC,KAAK+vB,MAAA,GAAS7d,CAAA,CAAEztB,EAAA;QAChB,KAAKgsC,mBAAA,CAAoBve,CAAA,EAAG,KAAK9G,aAAA,CAAct9B,KAAA,CAAMokC,CAAA,CAAEjS,iBAAiB,EAAE/J,QAAQ;MACpF,WAAWgc,CAAA,YAAa5R,iBAAA,IAAqB4R,CAAA,CAAEnoB,IAAA,KAASoW,qBAAA,CAAsB6hB,wBAAA,EAA0B;QACtG,KAAKgO,UAAA,GAAa;QAClB,KAAKC,UAAA,GAAa;QAClB,KAAKQ,mBAAA,CAAoBve,CAAA,EAAG,KAAK9G,aAAA,CAAct9B,KAAA,CAAMokC,CAAA,CAAEnsC,GAAG,EAAEmwB,QAAQ;MACtE;IACF,CAAC;EACH;EACAq6B,oBAAA,EAAsB;IACpB,OAAO,KAAKhQ,WAAA,CAAYrxB,MAAA,CAAO+a,SAAA,CAAUiI,CAAA,IAAK;MAC5C,IAAI,EAAEA,CAAA,YAAa3Q,MAAA,GAAS;MAE5B,IAAI2Q,CAAA,CAAE9jC,QAAA,EAAU;QACd,IAAI,KAAKjK,OAAA,CAAQ+rD,yBAAA,KAA8B,OAAO;UACpD,KAAKJ,gBAAA,CAAiBY,gBAAA,CAAiB,CAAC,GAAG,CAAC,CAAC;QAC/C,WAAW,KAAKvsD,OAAA,CAAQ+rD,yBAAA,KAA8B,WAAW;UAC/D,KAAKJ,gBAAA,CAAiBY,gBAAA,CAAiBxe,CAAA,CAAE9jC,QAAQ;QACnD;MAEF,OAAO;QACL,IAAI8jC,CAAA,CAAEzQ,MAAA,IAAU,KAAKt9B,OAAA,CAAQgsD,eAAA,KAAoB,WAAW;UAC1D,KAAKL,gBAAA,CAAiBa,cAAA,CAAeze,CAAA,CAAEzQ,MAAM;QAC/C,WAAW,KAAKt9B,OAAA,CAAQ+rD,yBAAA,KAA8B,YAAY;UAChE,KAAKJ,gBAAA,CAAiBY,gBAAA,CAAiB,CAAC,GAAG,CAAC,CAAC;QAC/C;MACF;IACF,CAAC;EACH;EACAD,oBAAoBjvB,WAAA,EAAaC,MAAA,EAAQ;IACvC,KAAKxX,IAAA,CAAKpd,iBAAA,CAAkB,MAAYjB,OAAA;MAItC,MAAM,IAAIqG,OAAA,CAAQC,OAAA,IAAW;QAE3BitC,UAAA,CAAW,MAAM;UACfjtC,OAAA,CAAQ;QACV,CAAC;QACDutC,eAAA,CAAgB,MAAM;UACpBvtC,OAAA,CAAQ;QACV,GAAG;UACD/C,QAAA,EAAU,KAAKw3B;QACjB,CAAC;MACH,CAAC;MACD,KAAK1c,IAAA,CAAK3c,GAAA,CAAI,MAAM;QAClB,KAAKizC,WAAA,CAAYrxB,MAAA,CAAOjjB,IAAA,CAAK,IAAIs1B,MAAA,CAAOC,WAAA,EAAa,KAAKwuB,UAAA,KAAe,aAAa,KAAKhgB,KAAA,CAAM,KAAKigB,UAAU,IAAI,MAAMxuB,MAAM,CAAC;MACnI,CAAC;IACH,EAAC;EACH;EAAA;EAEAxgB,YAAA,EAAc;IACZ,KAAK+rC,wBAAA,EAA0BljB,WAAA,CAAY;IAC3C,KAAKwmB,wBAAA,EAA0BxmB,WAAA,CAAY;EAC7C;AAYF;AAVI+lB,eAAA,CAAKnmD,IAAA,GAAO,SAASknD,uBAAuB7sD,CAAA,EAAG;EAC1C8sD,gBAAA,CAAiB;AACtB;AAGAhB,eAAA,CAAKhmD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4qD,eAAA;EACP9lD,OAAA,EAAS8lD,eAAA,CAAenmD;AAC1B,CAAC;AAnGL,IAAMonD,cAAA,GAANjB,eAAA;AAAA,CAsGC,MAAM;EACL,CAAC,OAAOjvD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6mD,cAAA,EAAgB,CAAC;IACvF9pD,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAMixB;EACR,GAAG;IACDjxB,IAAA,EAAMy8C;EACR,GAAG;IACDz8C,IAAA,EAAS+pD;EACX,GAAG;IACD/pD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AAsCH,SAASgqD,cAAchjB,YAAWz1B,QAAA,EAAU;EAC1C,OAAOW,wBAAA,CAAyB,CAAC;IAC/BN,OAAA,EAAS6jC,MAAA;IACT1jC,KAAA,EAAO;IACPD,QAAA,EAAUk1B;EACZ,GAAG,OAAOptC,SAAA,KAAc,eAAeA,SAAA,GAAY;IACjDgY,OAAA,EAASq4C,kBAAA;IACTn4C,QAAA,EAAU;EACZ,IAAI,EAAC,EAAG;IACNF,OAAA,EAASqrB,cAAA;IACT3qB,UAAA,EAAY43C,SAAA;IACZ9lC,IAAA,EAAM,CAAC2+B,MAAM;EACf,GAAG;IACDnxC,OAAA,EAASu4C,sBAAA;IACTp4C,KAAA,EAAO;IACPO,UAAA,EAAY83C;EACd,GAAG74C,QAAA,CAASjW,GAAA,CAAI2W,OAAA,IAAWA,OAAA,CAAQZ,UAAU,CAAC,CAAC;AACjD;AACA,SAAS64C,UAAUxQ,MAAA,EAAQ;EACzB,OAAOA,MAAA,CAAOqE,WAAA,CAAYhvB,IAAA;AAC5B;AAIA,SAASs7B,cAAcn5C,IAAA,EAAMC,SAAA,EAAW;EACtC,OAAO;IACLC,KAAA,EAAOF,IAAA;IACPG,UAAA,EAAYF;EACd;AACF;AAKA,IAAM84C,kBAAA,GAAqB,IAAI3hD,cAAA,CAAe,IAAI;EAChDkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;AACjB,CAAC;AA0ED,SAASqnD,qBAAA,EAAuB;EAC9B,MAAMjiD,QAAA,GAAWxE,MAAA,CAAO2mD,QAAQ;EAChC,OAAOC,wBAAA,IAA4B;IACjC,MAAMrpB,GAAA,GAAM/4B,QAAA,CAAS7O,GAAA,CAAIkxD,cAAc;IACvC,IAAID,wBAAA,KAA6BrpB,GAAA,CAAIupB,UAAA,CAAW,CAAC,GAAG;MAClD;IACF;IACA,MAAM/Q,MAAA,GAASvxC,QAAA,CAAS7O,GAAA,CAAIypD,MAAM;IAClC,MAAM2H,aAAA,GAAgBviD,QAAA,CAAS7O,GAAA,CAAIqxD,cAAc;IACjD,IAAIxiD,QAAA,CAAS7O,GAAA,CAAIsxD,kBAAkB,MAAM,GAA8C;MACrFlR,MAAA,CAAO4H,iBAAA,CAAkB;IAC3B;IACAn5C,QAAA,CAAS7O,GAAA,CAAIuxD,gBAAA,EAAkB,MAAMC,WAAA,CAAYrvC,QAAQ,GAAGysC,eAAA,CAAgB;IAC5E//C,QAAA,CAAS7O,GAAA,CAAIsvD,eAAA,EAAiB,MAAMkC,WAAA,CAAYrvC,QAAQ,GAAGzhB,IAAA,CAAK;IAChE0/C,MAAA,CAAO2H,sBAAA,CAAuBngB,GAAA,CAAI6pB,cAAA,CAAe,CAAC,CAAC;IACnD,IAAI,CAACL,aAAA,CAAcM,MAAA,EAAQ;MACzBN,aAAA,CAAczlD,IAAA,CAAK;MACnBylD,aAAA,CAAc/jD,QAAA,CAAS;MACvB+jD,aAAA,CAAc5nB,WAAA,CAAY;IAC5B;EACF;AACF;AAMA,IAAM6nB,cAAA,GAAiB,IAAIriD,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,6BAA6B,IAAI;EACzHmJ,OAAA,EAASA,CAAA,KAAM;IACb,OAAO,IAAIszC,OAAA,CAAQ;EACrB;AACF,CAAC;AACD,IAAMuU,kBAAA,GAAqB,IAAItiD,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,uBAAuB,IAAI;EACvH4V,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;EAAA;AACjB,CAAC;AA0BD,SAASkoD,qCAAA,EAAuC;EAC9C,MAAM95C,SAAA,GAAY,CAAC;IACjBS,OAAA,EAASg5C,kBAAA;IACT94C,QAAA,EAAU;IAAA;EACZ,GAAG;IACDF,OAAA,EAASs5C,eAAA;IACTn5C,KAAA,EAAO;IACPqS,IAAA,EAAM,CAACkmC,QAAQ;IACfh4C,UAAA,EAAYnK,QAAA,IAAY;MACtB,MAAMgjD,mBAAA,GAAsBhjD,QAAA,CAAS7O,GAAA,CAAI8xD,oBAAA,EAAsBngD,OAAA,CAAQC,OAAA,CAAQ,CAAC;MAChF,OAAO,MAAM;QACX,OAAOigD,mBAAA,CAAoB1mD,IAAA,CAAK,MAAM;UACpC,OAAO,IAAIwG,OAAA,CAAQC,OAAA,IAAW;YAC5B,MAAMwuC,MAAA,GAASvxC,QAAA,CAAS7O,GAAA,CAAIypD,MAAM;YAClC,MAAM2H,aAAA,GAAgBviD,QAAA,CAAS7O,GAAA,CAAIqxD,cAAc;YACjDhL,mBAAA,CAAoBjG,MAAA,EAAQ,MAAM;cAGhCxuC,OAAA,CAAQ,IAAI;YACd,CAAC;YACD/C,QAAA,CAAS7O,GAAA,CAAImjD,qBAAqB,EAAErD,kBAAA,GAAqB,MAAM;cAI7DluC,OAAA,CAAQ,IAAI;cACZ,OAAOw/C,aAAA,CAAcM,MAAA,GAASlpD,EAAA,CAAG,MAAM,IAAI4oD,aAAA;YAC7C;YACAhR,MAAA,CAAO4H,iBAAA,CAAkB;UAC3B,CAAC;QACH,CAAC;MACH;IACF;EACF,CAAC;EACD,OAAO+I,aAAA,CAAc,GAAmEl5C,SAAS;AACnG;AA2BA,SAASk6C,8BAAA,EAAgC;EACvC,MAAMl6C,SAAA,GAAY,CAAC;IACjBS,OAAA,EAASs5C,eAAA;IACTn5C,KAAA,EAAO;IACPO,UAAA,EAAYA,CAAA,KAAM;MAChB,MAAMonC,MAAA,GAAS/1C,MAAA,CAAOo/C,MAAM;MAC5B,OAAO,MAAM;QACXrJ,MAAA,CAAO6H,2BAAA,CAA4B;MACrC;IACF;EACF,GAAG;IACD3vC,OAAA,EAASg5C,kBAAA;IACT94C,QAAA,EAAU;IAAA;EACZ,CAAC;EACD,OAAOu4C,aAAA,CAAc,GAA4Dl5C,SAAS;AAC5F;AAyBA,SAASm6C,iBAAA,EAAmB;EAC1B,IAAIn6C,SAAA,GAAY,EAAC;EACjB,IAAI,OAAOvX,SAAA,KAAc,eAAeA,SAAA,EAAW;IACjDuX,SAAA,GAAY,CAAC;MACXS,OAAA,EAAS25C,uBAAA;MACTx5C,KAAA,EAAO;MACPO,UAAA,EAAYA,CAAA,KAAM;QAChB,MAAMonC,MAAA,GAAS/1C,MAAA,CAAOo/C,MAAM;QAC5B,OAAO,MAAMrJ,MAAA,CAAOxxB,MAAA,CAAO+a,SAAA,CAAUiI,CAAA,IAAK;UAExCtiB,OAAA,CAAQyO,KAAA,GAAQ,iBAAiB6T,CAAA,CAAE/yC,WAAA,CAAYW,IAAI,EAAE;UACrD8vB,OAAA,CAAQ4iC,GAAA,CAAI3wB,cAAA,CAAeqQ,CAAC,CAAC;UAC7BtiB,OAAA,CAAQ4iC,GAAA,CAAItgB,CAAC;UACbtiB,OAAA,CAAQ6iC,QAAA,GAAW;QAErB,CAAC;MACH;IACF,CAAC;EACH,OAAO;IACLt6C,SAAA,GAAY,EAAC;EACf;EACA,OAAOk5C,aAAA,CAAc,GAA+Cl5C,SAAS;AAC/E;AACA,IAAM05C,gBAAA,GAAmB,IAAIviD,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,qBAAqB,EAAE;AA2BnH,SAAS8xD,eAAezD,kBAAA,EAAoB;EAC1C,MAAM92C,SAAA,GAAY,CAAC;IACjBS,OAAA,EAASi5C,gBAAA;IACTh5C,WAAA,EAAa82C;EACf,GAAG;IACD/2C,OAAA,EAAS41C,kBAAA;IACT31C,WAAA,EAAao2C;EACf,CAAC;EACD,OAAOoC,aAAA,CAAc,GAA6Cl5C,SAAS;AAC7E;AAmIA,SAASw6C,0BAAA,EAA4B;EACnC,MAAMx6C,SAAA,GAAY,CAACoyB,0BAAA,EAA4B;IAC7C3xB,OAAA,EAASiuB,YAAA;IACThuB,WAAA,EAAa0xB;EACf,CAAC;EACD,OAAO8mB,aAAA,CAAc,GAAwDl5C,SAAS;AACxF;AA4BA,SAASy6C,oBAAoBzuD,OAAA,EAAS;EACpC,MAAMgU,SAAA,GAAY,CAAC;IACjBS,OAAA,EAASgmC,sBAAA;IACT9lC,QAAA,EAAUgmC;EACZ,GAAG;IACDlmC,OAAA,EAASimC,uBAAA;IACT/lC,QAAA,EAAU/M,cAAA;MACRmzC,kBAAA,EAAoB,CAAC,CAAC/6C,OAAA,EAAS0uD;IAAA,GAC5B1uD,OAAA;EAEP,CAAC;EACD,OAAOktD,aAAA,CAAc,GAAkDl5C,SAAS;AAClF;AAKA,IAAM26C,iBAAA,GAAoB,CAAC3pB,YAAA,EAAcgjB,UAAA,EAAYmC,gBAAA,EAAkB7hB,qBAAqB;AAI5F,IAAMsmB,oBAAA,GAAuB,IAAIzjD,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,mCAAmC,sBAAsB;AAKzJ,IAAMoyD,gBAAA,GAAmB,CAAC/S,QAAA,EAAU;EAClCrnC,OAAA,EAASqf,aAAA;EACTjf,QAAA,EAAUgf;AACZ,GAAG+xB,MAAA,EAAQhoB,sBAAA,EAAwB;EACjCnpB,OAAA,EAASqrB,cAAA;EACT3qB,UAAA,EAAY43C,SAAA;EACZ9lC,IAAA,EAAM,CAAC2+B,MAAM;AACf,GAAGtM,kBAAA;AAAA;AAAA;AAGH,OAAO78C,SAAA,KAAc,eAAeA,SAAA,GAAY;EAC9CgY,OAAA,EAASq4C,kBAAA;EACTn4C,QAAA,EAAU;AACZ,IAAI,EAAC,CAAC;AAsBN,IAAMm6C,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjB9zD,YAAYsyC,KAAA,EAAO,CAAC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAmBpB,OAAOyhB,QAAQllB,SAAQlI,MAAA,EAAQ;IAC7B,OAAO;MACLjsB,QAAA,EAAUo5C,aAAA;MACV96C,SAAA,EAAW,CAAC66C,gBAAA,EAAkB,OAAOpyD,SAAA,KAAc,eAAeA,SAAA,GAAYklC,MAAA,EAAQqtB,aAAA,GAAgBb,gBAAA,CAAiB,EAAEj6C,UAAA,GAAa,EAAC,GAAI,EAAC,EAAG;QAC7IO,OAAA,EAAS6jC,MAAA;QACT1jC,KAAA,EAAO;QACPD,QAAA,EAAUk1B;MACZ,GAAG;QACDp1B,OAAA,EAASm6C,oBAAA;QACTz5C,UAAA,EAAY85C,mBAAA;QACZhoC,IAAA,EAAM,CAAC,CAAC2+B,MAAA,EAAQ,IAAItnC,QAAA,CAAS,GAAG,IAAIgK,QAAA,CAAS,CAAC,CAAC;MACjD,GAAG;QACD7T,OAAA,EAAS4jC,oBAAA;QACT1jC,QAAA,EAAUgtB,MAAA,GAASA,MAAA,GAAS,CAAC;MAC/B,GAAGA,MAAA,EAAQutB,OAAA,GAAUC,2BAAA,CAA4B,IAAIC,2BAAA,CAA4B,GAAGC,qBAAA,CAAsB,GAAG1tB,MAAA,EAAQmpB,kBAAA,GAAqByD,cAAA,CAAe5sB,MAAA,CAAOmpB,kBAAkB,EAAE52C,UAAA,GAAa,EAAC,EAAGytB,MAAA,EAAQwiB,iBAAA,GAAoBmL,wBAAA,CAAyB3tB,MAAM,IAAI,EAAC,EAAGA,MAAA,EAAQ4tB,qBAAA,GAAwBf,yBAAA,CAA0B,EAAEt6C,UAAA,GAAa,EAAC,EAAGytB,MAAA,EAAQ6tB,qBAAA,GAAwBf,mBAAA,CAAoB,EAAEv6C,UAAA,GAAa,EAAC,EAAGu7C,wBAAA,CAAyB,CAAC;IACxb;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiBA,OAAOC,SAAS7lB,SAAQ;IACtB,OAAO;MACLn0B,QAAA,EAAUo5C,aAAA;MACV96C,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS6jC,MAAA;QACT1jC,KAAA,EAAO;QACPD,QAAA,EAAUk1B;MACZ,CAAC;IACH;EACF;AAcF;AAZIilB,aAAA,CAAKvpD,IAAA,GAAO,SAASoqD,qBAAqB/vD,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKkvD,aAAA,EAAiBrpD,QAAA,CAASmpD,oBAAA,EAAsB,CAAC,CAAC;AACrE;AAGAE,aAAA,CAAKj5C,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMisD;AACR,CAAC;AAGDA,aAAA,CAAK/4C,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AA1ErD,IAAM45C,YAAA,GAANd,aAAA;AAAA,CA6EC,MAAM;EACL,CAAC,OAAOryD,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8pD,YAAA,EAAc,CAAC;IACrF/sD,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS0mC,iBAAA;MACTtmC,OAAA,EAASsmC;IACX,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT9rD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACo/C,oBAAoB;IAC7B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,SAASS,sBAAA,EAAwB;EAC/B,OAAO;IACL56C,OAAA,EAASg3C,eAAA;IACTt2C,UAAA,EAAYA,CAAA,KAAM;MAChB,MAAMw2C,gBAAA,GAAmBnlD,MAAA,CAAOomD,gBAAgB;MAChD,MAAM9mC,IAAA,GAAOtf,MAAA,CAAOO,MAAM;MAC1B,MAAM46B,MAAA,GAASn7B,MAAA,CAAO6xC,oBAAoB;MAC1C,MAAM+D,WAAA,GAAc51C,MAAA,CAAO84C,qBAAqB;MAChD,MAAMrY,aAAA,GAAgBzgC,MAAA,CAAOstB,aAAa;MAC1C,IAAI6N,MAAA,CAAOkuB,YAAA,EAAc;QACvBlE,gBAAA,CAAiBmE,SAAA,CAAUnuB,MAAA,CAAOkuB,YAAY;MAChD;MACA,OAAO,IAAIlD,cAAA,CAAe1lB,aAAA,EAAemV,WAAA,EAAauP,gBAAA,EAAkB7lC,IAAA,EAAM6b,MAAM;IACtF;EACF;AACF;AAGA,SAASwtB,4BAAA,EAA8B;EACrC,OAAO;IACL16C,OAAA,EAAS2yC,gBAAA;IACTvyC,QAAA,EAAUk7C;EACZ;AACF;AAGA,SAASX,4BAAA,EAA8B;EACrC,OAAO;IACL36C,OAAA,EAAS2yC,gBAAA;IACTvyC,QAAA,EAAUm7C;EACZ;AACF;AACA,SAASf,oBAAoB1S,MAAA,EAAQ;EACnC,KAAK,OAAO9/C,SAAA,KAAc,eAAeA,SAAA,KAAc8/C,MAAA,EAAQ;IAC7D,MAAM,IAAIjsC,YAAA,CAAc,MAAmD,4KAAiL;EAC9P;EACA,OAAO;AACT;AAGA,SAASg/C,yBAAyB3tB,MAAA,EAAQ;EACxC,OAAO,CAACA,MAAA,CAAOwiB,iBAAA,KAAsB,aAAa+J,6BAAA,CAA8B,EAAEh6C,UAAA,GAAa,EAAC,EAAGytB,MAAA,CAAOwiB,iBAAA,KAAsB,oBAAoB2J,oCAAA,CAAqC,EAAE55C,UAAA,GAAa,EAAE;AAC5M;AAQA,IAAM+7C,kBAAA,GAAqB,IAAI9kD,cAAA,CAAe,OAAO1O,SAAA,KAAc,eAAeA,SAAA,GAAY,uBAAuB,EAAE;AACvH,SAASgzD,yBAAA,EAA2B;EAClC,OAAO;EAAA;EAAA;EAGP;IACEh7C,OAAA,EAASw7C,kBAAA;IACT96C,UAAA,EAAY83C;EACd,GAAG;IACDx4C,OAAA,EAASu4C,sBAAA;IACTp4C,KAAA,EAAO;IACPF,WAAA,EAAau7C;EACf,EAAC;AACH;AAuEA,IAAMvhC,WAAU,IAAIC,OAAA,CAAQ,SAAS;;;ACp5OrC,IAAYuhC,SAAA;CAAZ,UAAYA,YAAS;EACpBA,WAAA;AACD,GAFYA,SAAA,KAAAA,SAAA,GAAS;AAIrB,IAAYC,gBAAA;CAAZ,UAAYA,mBAAgB;EAC3BA,kBAAA;EACAA,kBAAA;EACAA,kBAAA;AACD,GAJYA,gBAAA,KAAAA,gBAAA,GAAgB;AAMrB,IAAMC,qBAAA,GAAwC,CACpD;EAAEv0D,GAAA,EAAK,GAAGq0D,SAAA,CAAUG,MAAM,IAAIF,gBAAA,CAAiBG,IAAI;EAAIv0D,KAAA;AAA+C;;;ACThG,IAAMw0D,iBAAA,GAAiD;EAC7D,CAAC,IAAI,OAAG;EACR,CAAC,YAAY,WAAG;EAChB,CAAC,WAAW,aAAG;EACf,CAAC,WAAW,uBAAG;EACf,CAAC,YAAY,wBAAG;EAChB,CAAC,iBAAiB,sBAAG;EACrB,CAAC,QAAQ,cAAG;EACZ,CAAC,YAAY,gBAAG;EAChB,CAAC,kBAAkB;;AAGb,IAAMC,iCAAA,GAA8E;EAC1F,CAAC,QAAQ,eAAG;EACZ,CAAC,QAAQ;;AAGH,IAAMC,uBAAA,GAA0D;EACtE,CAAC,QAAQ,UAAG;EACZ,CAAC,gBAAgB,iBAAG;EACpB,CAAC,cAAc,kBAAG;EAClB,CAAC,aAAa,iBAAG;EACjB,CAAC,eAAe;;AAGV,IAAMC,4BAAA,GAAoE;EAChF,CAAC,UAAU,eAAG;EACd,CAAC,gBAAgB,wBAAG;EACpB,CAAC,OAAO,UAAG;EACX,CAAC,gBAAgB;;;;AC3BlB,IAAIC,kBAAA;AAMJ,IAAI;EACFA,kBAAA,GAAqB,OAAOC,IAAA,KAAS,eAAeA,IAAA,CAAKC,eAAA;AAC3D,QAAQ;EACNF,kBAAA,GAAqB;AACvB;AAKA,IAAMG,SAAA,GAAN,MAAMA,SAAA,CAAS;EACb91D,YAAY+1D,WAAA,EAAa;IACvB,KAAKA,WAAA,GAAcA,WAAA;IAKnB,KAAKC,SAAA,GAAY,KAAKD,WAAA,GAAcE,iBAAA,CAAkB,KAAKF,WAAW,IAAI,OAAOnjD,QAAA,KAAa,YAAY,CAAC,CAACA,QAAA;IAE5G,KAAKsjD,IAAA,GAAO,KAAKF,SAAA,IAAa,UAAU/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS;IAEhE,KAAKy4C,OAAA,GAAU,KAAKH,SAAA,IAAa,kBAAkB/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS;IAG3E,KAAK04C,KAAA,GAAQ,KAAKJ,SAAA,IAAa,CAAC,EAAEvjD,MAAA,CAAO4jD,MAAA,IAAUV,kBAAA,KAAuB,OAAOW,GAAA,KAAQ,eAAe,CAAC,KAAKJ,IAAA,IAAQ,CAAC,KAAKC,OAAA;IAI5H,KAAKI,MAAA,GAAS,KAAKP,SAAA,IAAa,eAAe/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS,KAAK,CAAC,KAAK04C,KAAA,IAAS,CAAC,KAAKF,IAAA,IAAQ,CAAC,KAAKC,OAAA;IAE/G,KAAKK,GAAA,GAAM,KAAKR,SAAA,IAAa,mBAAmB/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS,KAAK,EAAE,cAAcjL,MAAA;IAM7F,KAAKgkD,OAAA,GAAU,KAAKT,SAAA,IAAa,uBAAuB/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS;IAGhF,KAAKg5C,OAAA,GAAU,KAAKV,SAAA,IAAa,WAAW/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS,KAAK,CAAC,KAAKy4C,OAAA;IAK/E,KAAKQ,MAAA,GAAS,KAAKX,SAAA,IAAa,UAAU/gD,IAAA,CAAKwI,SAAA,CAAUC,SAAS,KAAK,KAAK64C,MAAA;EAC9E;AAaF;AAXIT,SAAA,CAAKvrD,IAAA,GAAO,SAASqsD,iBAAiBhyD,CAAA,EAAG;EACvC,OAAO,KAAKA,CAAA,IAAKkxD,SAAA,EAAarrD,QAAA,CAAS8G,WAAW,CAAC;AACrD;AAGAukD,SAAA,CAAKprD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOgwD,SAAA;EACPlrD,OAAA,EAASkrD,SAAA,CAASvrD,IAAA;EAClB8M,UAAA,EAAY;AACd,CAAC;AA9CL,IAAMw/C,QAAA,GAANf,SAAA;AAAA,CAiDC,MAAM;EACL,CAAC,OAAOr0D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+rD,QAAA,EAAU,CAAC;IACjFhvD,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAMlG,MAAA;IACN2S,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACjD,WAAW;IACpB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMulD,eAAA,GAAN,MAAMA,eAAA,CAAe,EAcrB;AAZIA,eAAA,CAAKvsD,IAAA,GAAO,SAASwsD,uBAAuBnyD,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKkyD,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAKj8C,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMivD;AACR,CAAC;AAGDA,eAAA,CAAK/7C,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAMg8C,cAAA,GAANF,eAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOr1D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBksD,cAAA,EAAgB,CAAC;IACvFnvD,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC,CAAC,CAAC;EACX,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAIyiD,mBAAA;AAEJ,IAAMC,mBAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAK5B,SAAS,UAAU,YAAY,QAAQ,kBAAkB,SAAS,QAAQ,UAAU,SAAS,SAAS,UAAU,YAAY,SAAS,SAAS,SAAS,UAAU,UAAU,OAAO,QAAQ,QAAQ,OAAO,OAAM;AAE/M,SAASC,uBAAA,EAAyB;EAEhC,IAAIF,mBAAA,EAAqB;IACvB,OAAOA,mBAAA;EACT;EAIA,IAAI,OAAOrkD,QAAA,KAAa,YAAY,CAACA,QAAA,EAAU;IAC7CqkD,mBAAA,GAAsB,IAAIrlD,GAAA,CAAIslD,mBAAmB;IACjD,OAAOD,mBAAA;EACT;EACA,IAAIG,gBAAA,GAAmBxkD,QAAA,CAASO,aAAA,CAAc,OAAO;EACrD8jD,mBAAA,GAAsB,IAAIrlD,GAAA,CAAIslD,mBAAA,CAAoBl0D,MAAA,CAAOjC,KAAA,IAAS;IAChEq2D,gBAAA,CAAiBr0C,YAAA,CAAa,QAAQhiB,KAAK;IAC3C,OAAOq2D,gBAAA,CAAiBvvD,IAAA,KAAS9G,KAAA;EACnC,CAAC,CAAC;EACF,OAAOk2D,mBAAA;AACT;AAGA,IAAII,qBAAA;AAKJ,SAASC,8BAAA,EAAgC;EACvC,IAAID,qBAAA,IAAyB,QAAQ,OAAO5kD,MAAA,KAAW,aAAa;IAClE,IAAI;MACFA,MAAA,CAAOmB,gBAAA,CAAiB,QAAQ,MAAMjS,MAAA,CAAO41D,cAAA,CAAe,CAAC,GAAG,WAAW;QACzEp2D,GAAA,EAAKA,CAAA,KAAMk2D,qBAAA,GAAwB;MACrC,CAAC,CAAC;IACJ,UAAE;MACAA,qBAAA,GAAwBA,qBAAA,IAAyB;IACnD;EACF;EACA,OAAOA,qBAAA;AACT;AAOA,SAASG,gCAAgCxyD,OAAA,EAAS;EAChD,OAAOsyD,6BAAA,CAA8B,IAAItyD,OAAA,GAAU,CAAC,CAACA,OAAA,CAAQk2B,OAAA;AAC/D;AAGA,IAAIu8B,iBAAA;AAAA,CACH,UAAUA,oBAAmB;EAK5BA,mBAAkBA,mBAAkB,QAAQ,IAAI,CAAC,IAAI;EAKrDA,mBAAkBA,mBAAkB,SAAS,IAAI,CAAC,IAAI;EAKtDA,mBAAkBA,mBAAkB,UAAU,IAAI,CAAC,IAAI;AACzD,GAAGA,iBAAA,KAAsBA,iBAAA,GAAoB,CAAC,EAAE;AAEhD,IAAIC,iBAAA;AAEJ,IAAIC,uBAAA;AAEJ,SAASC,uBAAA,EAAyB;EAChC,IAAID,uBAAA,IAA2B,MAAM;IAGnC,IAAI,OAAO/kD,QAAA,KAAa,YAAY,CAACA,QAAA,IAAY,OAAOilD,OAAA,KAAY,cAAc,CAACA,OAAA,EAAS;MAC1FF,uBAAA,GAA0B;MAC1B,OAAOA,uBAAA;IACT;IAEA,IAAI,oBAAoB/kD,QAAA,CAASklD,eAAA,CAAgBt2C,KAAA,EAAO;MACtDm2C,uBAAA,GAA0B;IAC5B,OAAO;MAGL,MAAMI,gBAAA,GAAmBF,OAAA,CAAQ7jC,SAAA,CAAUgkC,QAAA;MAC3C,IAAID,gBAAA,EAAkB;QAKpBJ,uBAAA,GAA0B,CAAC,4BAA4B1iD,IAAA,CAAK8iD,gBAAA,CAAiB30D,QAAA,CAAS,CAAC;MACzF,OAAO;QACLu0D,uBAAA,GAA0B;MAC5B;IACF;EACF;EACA,OAAOA,uBAAA;AACT;AAKA,SAASM,qBAAA,EAAuB;EAE9B,IAAI,OAAOrlD,QAAA,KAAa,YAAY,CAACA,QAAA,EAAU;IAC7C,OAAO6kD,iBAAA,CAAkBS,MAAA;EAC3B;EACA,IAAIR,iBAAA,IAAqB,MAAM;IAE7B,MAAMS,eAAA,GAAkBvlD,QAAA,CAASO,aAAA,CAAc,KAAK;IACpD,MAAMilD,cAAA,GAAiBD,eAAA,CAAgB32C,KAAA;IACvC22C,eAAA,CAAgBE,GAAA,GAAM;IACtBD,cAAA,CAAeE,KAAA,GAAQ;IACvBF,cAAA,CAAeG,QAAA,GAAW;IAC1BH,cAAA,CAAeI,UAAA,GAAa;IAC5BJ,cAAA,CAAeK,aAAA,GAAgB;IAC/BL,cAAA,CAAenpD,QAAA,GAAW;IAC1B,MAAMsX,OAAA,GAAU3T,QAAA,CAASO,aAAA,CAAc,KAAK;IAC5C,MAAMulD,YAAA,GAAenyC,OAAA,CAAQ/E,KAAA;IAC7Bk3C,YAAA,CAAaJ,KAAA,GAAQ;IACrBI,YAAA,CAAaC,MAAA,GAAS;IACtBR,eAAA,CAAgBtkD,WAAA,CAAY0S,OAAO;IACnC3T,QAAA,CAAS7L,IAAA,CAAK8M,WAAA,CAAYskD,eAAe;IACzCT,iBAAA,GAAoBD,iBAAA,CAAkBS,MAAA;IAItC,IAAIC,eAAA,CAAgBS,UAAA,KAAe,GAAG;MAKpCT,eAAA,CAAgBS,UAAA,GAAa;MAC7BlB,iBAAA,GAAoBS,eAAA,CAAgBS,UAAA,KAAe,IAAInB,iBAAA,CAAkBoB,OAAA,GAAUpB,iBAAA,CAAkBqB,QAAA;IACvG;IACAX,eAAA,CAAgBnnD,MAAA,CAAO;EACzB;EACA,OAAO0mD,iBAAA;AACT;AACA,IAAIqB,oBAAA;AAEJ,SAASC,mBAAA,EAAqB;EAC5B,IAAID,oBAAA,IAAwB,MAAM;IAChC,MAAM9uD,IAAA,GAAO,OAAO2I,QAAA,KAAa,cAAcA,QAAA,CAAS3I,IAAA,GAAO;IAC/D8uD,oBAAA,GAAuB,CAAC,EAAE9uD,IAAA,KAASA,IAAA,CAAKgvD,gBAAA,IAAoBhvD,IAAA,CAAK2e,YAAA;EACnE;EACA,OAAOmwC,oBAAA;AACT;AAEA,SAASG,eAAej5C,OAAA,EAAS;EAC/B,IAAI+4C,kBAAA,CAAmB,GAAG;IACxB,MAAMngB,QAAA,GAAW54B,OAAA,CAAQk5C,WAAA,GAAcl5C,OAAA,CAAQk5C,WAAA,CAAY,IAAI;IAG/D,IAAI,OAAOC,UAAA,KAAe,eAAeA,UAAA,IAAcvgB,QAAA,YAAoBugB,UAAA,EAAY;MACrF,OAAOvgB,QAAA;IACT;EACF;EACA,OAAO;AACT;AAKA,SAASwgB,kCAAA,EAAoC;EAC3C,IAAIC,aAAA,GAAgB,OAAO1mD,QAAA,KAAa,eAAeA,QAAA,GAAWA,QAAA,CAAS0mD,aAAA,GAAgB;EAC3F,OAAOA,aAAA,IAAiBA,aAAA,CAAc3wC,UAAA,EAAY;IAChD,MAAM4wC,gBAAA,GAAmBD,aAAA,CAAc3wC,UAAA,CAAW2wC,aAAA;IAClD,IAAIC,gBAAA,KAAqBD,aAAA,EAAe;MACtC;IACF,OAAO;MACLA,aAAA,GAAgBC,gBAAA;IAClB;EACF;EACA,OAAOD,aAAA;AACT;AAEA,SAASE,gBAAgBxvD,KAAA,EAAO;EAG9B,OAAOA,KAAA,CAAMyvD,YAAA,GAAezvD,KAAA,CAAMyvD,YAAA,CAAa,EAAE,CAAC,IAAIzvD,KAAA,CAAMiT,MAAA;AAC9D;AAGA,SAASy8C,mBAAA,EAAqB;EAK5B;IAAA;IAEE,OAAOC,SAAA,KAAc,eAAe,CAAC,CAACA,SAAA;IAAA;IAEtC,OAAOC,OAAA,KAAY,eAAe,CAAC,CAACA,OAAA;IAAA;IAEpC,OAAOC,IAAA,KAAS,eAAe,CAAC,CAACA,IAAA;IAAA;IAEjC,OAAOC,KAAA,KAAU,eAAe,CAAC,CAACA;EAAA;AAEtC;;;AC3TA,IAAMC,GAAA,GAAM;AAEZ,IAAMC,KAAA,GAAQ;AACd,IAAMC,KAAA,GAAQ;AACd,IAAMC,OAAA,GAAU;AAChB,IAAMC,GAAA,GAAM;AAGZ,IAAMC,MAAA,GAAS;AACf,IAAMC,KAAA,GAAQ;AACd,IAAMC,OAAA,GAAU;AAChB,IAAMC,SAAA,GAAY;AAClB,IAAMC,GAAA,GAAM;AACZ,IAAMC,IAAA,GAAO;AACb,IAAMC,UAAA,GAAa;AACnB,IAAMC,QAAA,GAAW;AACjB,IAAMC,WAAA,GAAc;AACpB,IAAMC,UAAA,GAAa;AAKnB,IAAMC,IAAA,GAAO;AASb,IAAMC,IAAA,GAAO;AAKb,IAAMC,CAAA,GAAI;AAyBV,IAAMC,CAAA,GAAI;AACV,IAAMC,IAAA,GAAO;AAsDb,IAAMC,QAAA,GAAW;AAMjB,SAASC,eAAepxD,KAAA,KAAUqxD,SAAA,EAAW;EACzC,IAAIA,SAAA,CAAUv5D,MAAA,EAAQ;IAClB,OAAOu5D,SAAA,CAAUv7B,IAAA,CAAKd,QAAA,IAAYh1B,KAAA,CAAMg1B,QAAQ,CAAC;EACrD;EACA,OAAOh1B,KAAA,CAAMuf,MAAA,IAAUvf,KAAA,CAAM0f,QAAA,IAAY1f,KAAA,CAAMwf,OAAA,IAAWxf,KAAA,CAAMyf,OAAA;AACpE;;;AC9HA,SAAS6xC,sBAAsBv6D,KAAA,EAAO;EAClC,OAAOA,KAAA,IAAS,QAAQ,GAAGA,KAAK,OAAO;AAC3C;AAEA,SAASw6D,qBAAqBx6D,KAAA,EAAOy6D,aAAA,GAAgB,GAAG;EACpD,OAAOC,cAAA,CAAe16D,KAAK,IAAI26D,MAAA,CAAO36D,KAAK,IAAIy6D,aAAA;AACnD;AAKA,SAASC,eAAe16D,KAAA,EAAO;EAI3B,OAAO,CAAC46D,KAAA,CAAMC,UAAA,CAAW76D,KAAK,CAAC,KAAK,CAAC46D,KAAA,CAAMD,MAAA,CAAO36D,KAAK,CAAC;AAC5D;AAEA,SAAS86D,YAAY96D,KAAA,EAAO;EACxB,OAAOiB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,IAAIA,KAAA,GAAQ,CAACA,KAAK;AAChD;AAGA,SAAS+6D,oBAAoB/6D,KAAA,EAAO;EAChC,IAAIA,KAAA,IAAS,MAAM;IACf,OAAO;EACX;EACA,OAAO,OAAOA,KAAA,KAAU,WAAWA,KAAA,GAAQ,GAAGA,KAAK;AACvD;AAMA,SAASg7D,cAAcC,YAAA,EAAc;EACjC,OAAOA,YAAA,YAAwB7P,UAAA,GAAa6P,YAAA,CAAa/Q,aAAA,GAAgB+Q,YAAA;AAC7E;;;AC7BA,SAASC,mBAAmBC,MAAA,EAAQ;EAElC,IAAIA,MAAA,CAAOr0D,IAAA,KAAS,mBAAmBq0D,MAAA,CAAOj/C,MAAA,YAAkBk/C,OAAA,EAAS;IACvE,OAAO;EACT;EAEA,IAAID,MAAA,CAAOr0D,IAAA,KAAS,aAAa;IAC/B,SAASqtB,CAAA,GAAI,GAAGA,CAAA,GAAIgnC,MAAA,CAAOE,UAAA,CAAWt6D,MAAA,EAAQozB,CAAA,IAAK;MACjD,IAAI,EAAEgnC,MAAA,CAAOE,UAAA,CAAWlnC,CAAC,aAAainC,OAAA,GAAU;QAC9C,OAAO;MACT;IACF;IACA,SAASjnC,CAAA,GAAI,GAAGA,CAAA,GAAIgnC,MAAA,CAAOG,YAAA,CAAav6D,MAAA,EAAQozB,CAAA,IAAK;MACnD,IAAI,EAAEgnC,MAAA,CAAOG,YAAA,CAAannC,CAAC,aAAainC,OAAA,GAAU;QAChD,OAAO;MACT;IACF;IACA,OAAO;EACT;EAEA,OAAO;AACT;AAKA,IAAMG,wBAAA,GAAN,MAAMA,wBAAA,CAAwB;EAC5B52C,OAAOzS,QAAA,EAAU;IACf,OAAO,OAAOspD,gBAAA,KAAqB,cAAc,OAAO,IAAIA,gBAAA,CAAiBtpD,QAAQ;EACvF;AAaF;AAXIqpD,wBAAA,CAAK/xD,IAAA,GAAO,SAASiyD,gCAAgC53D,CAAA,EAAG;EACtD,OAAO,KAAKA,CAAA,IAAK03D,wBAAA,EAAyB;AAC5C;AAGAA,wBAAA,CAAK5xD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOw2D,wBAAA;EACP1xD,OAAA,EAAS0xD,wBAAA,CAAwB/xD,IAAA;EACjC8M,UAAA,EAAY;AACd,CAAC;AAdL,IAAMolD,uBAAA,GAANH,wBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO76D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2xD,uBAAA,EAAyB,CAAC;IAChG50D,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMqlD,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpB18D,YAAY28D,wBAAA,EAA0B;IACpC,KAAKA,wBAAA,GAA2BA,wBAAA;IAEhC,KAAKC,iBAAA,GAAoB,mBAAIz8D,GAAA,CAAI;EACnC;EACA2hB,YAAA,EAAc;IACZ,KAAK86C,iBAAA,CAAkBr8D,OAAA,CAAQ,CAACq0C,CAAA,EAAG30B,OAAA,KAAY,KAAK48C,gBAAA,CAAiB58C,OAAO,CAAC;EAC/E;EACA7W,QAAQ4yD,YAAA,EAAc;IACpB,MAAM/7C,OAAA,GAAU87C,aAAA,CAAcC,YAAY;IAC1C,OAAO,IAAIhwD,UAAA,CAAWC,QAAA,IAAY;MAChC,MAAM8B,MAAA,GAAS,KAAK+uD,eAAA,CAAgB78C,OAAO;MAC3C,MAAM4oC,YAAA,GAAe96C,MAAA,CAAOnE,IAAA,CAAKzG,GAAA,CAAI45D,OAAA,IAAWA,OAAA,CAAQ/5D,MAAA,CAAOk5D,MAAA,IAAU,CAACD,kBAAA,CAAmBC,MAAM,CAAC,CAAC,GAAGl5D,MAAA,CAAO+5D,OAAA,IAAW,CAAC,CAACA,OAAA,CAAQj7D,MAAM,CAAC,EAAEgpC,SAAA,CAAU7+B,QAAQ;MAC/J,OAAO,MAAM;QACX48C,YAAA,CAAale,WAAA,CAAY;QACzB,KAAKqyB,iBAAA,CAAkB/8C,OAAO;MAChC;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKA68C,gBAAgB78C,OAAA,EAAS;IACvB,IAAI,CAAC,KAAK28C,iBAAA,CAAkB17D,GAAA,CAAI+e,OAAO,GAAG;MACxC,MAAMlS,MAAA,GAAS,IAAImwC,OAAA,CAAQ;MAC3B,MAAMjyC,QAAA,GAAW,KAAK0wD,wBAAA,CAAyBj3C,MAAA,CAAOu3C,SAAA,IAAalvD,MAAA,CAAOjB,IAAA,CAAKmwD,SAAS,CAAC;MACzF,IAAIhxD,QAAA,EAAU;QACZA,QAAA,CAAS7C,OAAA,CAAQ6W,OAAA,EAAS;UACxBi9C,aAAA,EAAe;UACfC,SAAA,EAAW;UACXC,OAAA,EAAS;QACX,CAAC;MACH;MACA,KAAKR,iBAAA,CAAkBv7D,GAAA,CAAI4e,OAAA,EAAS;QAClChU,QAAA;QACA8B,MAAA;QACA8Q,KAAA,EAAO;MACT,CAAC;IACH,OAAO;MACL,KAAK+9C,iBAAA,CAAkBz7D,GAAA,CAAI8e,OAAO,EAAEpB,KAAA;IACtC;IACA,OAAO,KAAK+9C,iBAAA,CAAkBz7D,GAAA,CAAI8e,OAAO,EAAElS,MAAA;EAC7C;EAAA;AAAA;AAAA;AAAA;EAKAivD,kBAAkB/8C,OAAA,EAAS;IACzB,IAAI,KAAK28C,iBAAA,CAAkB17D,GAAA,CAAI+e,OAAO,GAAG;MACvC,KAAK28C,iBAAA,CAAkBz7D,GAAA,CAAI8e,OAAO,EAAEpB,KAAA;MACpC,IAAI,CAAC,KAAK+9C,iBAAA,CAAkBz7D,GAAA,CAAI8e,OAAO,EAAEpB,KAAA,EAAO;QAC9C,KAAKg+C,gBAAA,CAAiB58C,OAAO;MAC/B;IACF;EACF;EAAA;EAEA48C,iBAAiB58C,OAAA,EAAS;IACxB,IAAI,KAAK28C,iBAAA,CAAkB17D,GAAA,CAAI+e,OAAO,GAAG;MACvC,MAAM;QACJhU,QAAA;QACA8B;MACF,IAAI,KAAK6uD,iBAAA,CAAkBz7D,GAAA,CAAI8e,OAAO;MACtC,IAAIhU,QAAA,EAAU;QACZA,QAAA,CAASoxD,UAAA,CAAW;MACtB;MACAtvD,MAAA,CAAOS,QAAA,CAAS;MAChB,KAAKouD,iBAAA,CAAkBt6D,MAAA,CAAO2d,OAAO;IACvC;EACF;AAaF;AAXIy8C,gBAAA,CAAKnyD,IAAA,GAAO,SAAS+yD,wBAAwB14D,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK83D,gBAAA,EAAoBjyD,QAAA,CAASgyD,uBAAuB,CAAC;AACxE;AAGAC,gBAAA,CAAKhyD,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO42D,gBAAA;EACP9xD,OAAA,EAAS8xD,gBAAA,CAAgBnyD,IAAA;EACzB8M,UAAA,EAAY;AACd,CAAC;AAjFL,IAAMkmD,eAAA,GAANb,gBAAA;AAAA,CAoFC,MAAM;EACL,CAAC,OAAOj7D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByyD,eAAA,EAAiB,CAAC;IACxF11D,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM40D;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMe,kBAAA,GAAN,MAAMA,kBAAA,CAAkB;EAAA;AAAA;AAAA;AAAA;EAKtB,IAAIC,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,KAAK28D,SAAA,GAAY38D,KAAA;IACjB,KAAK28D,SAAA,GAAY,KAAKC,YAAA,CAAa,IAAI,KAAKC,UAAA,CAAW;EACzD;EAAA;EAEA,IAAIC,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS98D,KAAA,EAAO;IAClB,KAAK+8D,SAAA,GAAYvC,oBAAA,CAAqBx6D,KAAK;IAC3C,KAAK68D,UAAA,CAAW;EAClB;EACA59D,YAAY+9D,gBAAA,EAAkBC,WAAA,EAAaC,OAAA,EAAS;IAClD,KAAKF,gBAAA,GAAmBA,gBAAA;IACxB,KAAKC,WAAA,GAAcA,WAAA;IACnB,KAAKC,OAAA,GAAUA,OAAA;IAEf,KAAKj0D,KAAA,GAAQ,IAAI+8B,YAAA,CAAa;IAC9B,KAAK22B,SAAA,GAAY;IACjB,KAAKQ,oBAAA,GAAuB;EAC9B;EACApQ,mBAAA,EAAqB;IACnB,IAAI,CAAC,KAAKoQ,oBAAA,IAAwB,CAAC,KAAKT,QAAA,EAAU;MAChD,KAAKG,UAAA,CAAW;IAClB;EACF;EACA97C,YAAA,EAAc;IACZ,KAAK67C,YAAA,CAAa;EACpB;EACAC,WAAA,EAAa;IACX,KAAKD,YAAA,CAAa;IAClB,MAAM5vD,MAAA,GAAS,KAAKgwD,gBAAA,CAAiB30D,OAAA,CAAQ,KAAK40D,WAAW;IAK7D,KAAKC,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,KAAKwwD,oBAAA,IAAwB,KAAKL,QAAA,GAAW9vD,MAAA,CAAOnE,IAAA,CAAKu0D,YAAA,CAAa,KAAKN,QAAQ,CAAC,IAAI9vD,MAAA,EAAQ+8B,SAAA,CAAU,KAAK9gC,KAAK;IACtH,CAAC;EACH;EACA2zD,aAAA,EAAe;IACb,KAAKO,oBAAA,EAAsBvzB,WAAA,CAAY;EACzC;AAsBF;AApBI6yB,kBAAA,CAAKjzD,IAAA,GAAO,SAAS6zD,0BAA0Bx5D,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAK44D,kBAAA,EAAsBxR,iBAAA,CAAkBuR,eAAe,GAAMvR,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBjgD,MAAM,CAAC;AACjJ;AAGAyxD,kBAAA,CAAKh0B,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM21D,kBAAA;EACN9zB,SAAA,EAAW,CAAC,CAAC,IAAI,qBAAqB,EAAE,CAAC;EACzCC,MAAA,EAAQ;IACN8zB,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,6BAA6B,YAAYC,gBAAgB;IAChH+Q,QAAA,EAAU;EACZ;EACAj0B,OAAA,EAAS;IACP5/B,KAAA,EAAO;EACT;EACA6/B,QAAA,EAAU,CAAC,mBAAmB;EAC9BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAwB;AACxC,CAAC;AAtEL,IAAMsR,iBAAA,GAANb,kBAAA;AAAA,CAyEC,MAAM;EACL,CAAC,OAAO/7D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuzD,iBAAA,EAAmB,CAAC;IAC1Fx2D,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM01D;EACR,GAAG;IACD11D,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASkE;EACX,CAAC,GAAG;IACF/B,KAAA,EAAO,CAAC;MACNnC,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,mBAAmB;IAC5B,CAAC;IACDipD,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD+Q,QAAA,EAAU,CAAC;MACTh2D,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMq0B,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAgBtB;AAdIA,gBAAA,CAAKh0D,IAAA,GAAO,SAASi0D,wBAAwB55D,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK25D,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAK1jD,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM02D;AACR,CAAC;AAGDA,gBAAA,CAAKxjD,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACyjD,uBAAuB;AACrC,CAAC;AAdL,IAAMgC,eAAA,GAANF,gBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO98D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2zD,eAAA,EAAiB,CAAC;IACxF52D,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACoxC,iBAAiB;MAC3BhxC,OAAA,EAAS,CAACgxC,iBAAiB;MAC3BrlD,SAAA,EAAW,CAACyjD,uBAAuB;IACrC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC5RH,IAAMiC,aAAA,GAAN,MAAMA,aAAA,CAAa,EAcnB;AAZIA,aAAA,CAAKn0D,IAAA,GAAO,SAASo0D,qBAAqB/5D,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK85D,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAK7jD,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM62D;AACR,CAAC;AAGDA,aAAA,CAAK3jD,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAM4jD,YAAA,GAANF,aAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOj9D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8zD,YAAA,EAAc,CAAC;IACrF/2D,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC,CAAC,CAAC;EACX,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAMqqD,kCAAA,GAAqC,mBAAIjtD,GAAA,CAAI;AAEnD,IAAIktD,mBAAA;AAEJ,IAAMC,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjB/+D,YAAYg/D,SAAA,EAAWC,MAAA,EAAQ;IAC7B,KAAKD,SAAA,GAAYA,SAAA;IACjB,KAAKC,MAAA,GAASA,MAAA;IACd,KAAKC,WAAA,GAAc,KAAKF,SAAA,CAAUhJ,SAAA,IAAavjD,MAAA,CAAO0sD,UAAA;IAAA;IAAA;IAGtD1sD,MAAA,CAAO0sD,UAAA,CAAWvzD,IAAA,CAAK6G,MAAM,IAAI2sD,cAAA;EACnC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAD,WAAW7lC,QAAO;IAChB,IAAI,KAAK0lC,SAAA,CAAUzI,MAAA,IAAU,KAAKyI,SAAA,CAAU5I,KAAA,EAAO;MACjDiJ,oBAAA,CAAqB/lC,QAAO,KAAK2lC,MAAM;IACzC;IACA,OAAO,KAAKC,WAAA,CAAY5lC,MAAK;EAC/B;AAaF;AAXIylC,aAAA,CAAKx0D,IAAA,GAAO,SAAS+0D,qBAAqB16D,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKm6D,aAAA,EAAiBt0D,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAS0Y,SAAA,EAAW,CAAC,CAAC;AACpF;AAGA47C,aAAA,CAAKr0D,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOi5D,aAAA;EACPn0D,OAAA,EAASm0D,aAAA,CAAax0D,IAAA;EACtB8M,UAAA,EAAY;AACd,CAAC;AA/BL,IAAMkoD,YAAA,GAANR,aAAA;AAAA,CAkCC,MAAM;EACL,CAAC,OAAOt9D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBy0D,YAAA,EAAc,CAAC;IACrF13D,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2O,SAAS;IAClB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAUH,SAASk8C,qBAAqB/lC,QAAOxY,KAAA,EAAO;EAC1C,IAAI+9C,kCAAA,CAAmC39D,GAAA,CAAIo4B,MAAK,GAAG;IACjD;EACF;EACA,IAAI;IACF,IAAI,CAACwlC,mBAAA,EAAqB;MACxBA,mBAAA,GAAsBlsD,QAAA,CAASO,aAAA,CAAc,OAAO;MACpD,IAAI2N,KAAA,EAAO;QACTg+C,mBAAA,CAAoB/7C,YAAA,CAAa,SAASjC,KAAK;MACjD;MACAg+C,mBAAA,CAAoB/7C,YAAA,CAAa,QAAQ,UAAU;MACnDnQ,QAAA,CAAS3I,IAAA,CAAK4J,WAAA,CAAYirD,mBAAmB;IAC/C;IACA,IAAIA,mBAAA,CAAoBU,KAAA,EAAO;MAC7BV,mBAAA,CAAoBU,KAAA,CAAMC,UAAA,CAAW,UAAUnmC,MAAK,cAAc,CAAC;MACnEulC,kCAAA,CAAmC/tD,GAAA,CAAIwoB,MAAK;IAC9C;EACF,SAASyZ,CAAA,EAAG;IACVtiB,OAAA,CAAQvnB,KAAA,CAAM6pC,CAAC;EACjB;AACF;AAEA,SAASqsB,eAAe9lC,QAAO;EAG7B,OAAO;IACLomC,OAAA,EAASpmC,WAAU,SAASA,WAAU;IACtCqmC,KAAA,EAAOrmC;IACPsmC,WAAA,EAAaA,CAAA,KAAM,CAAC;IACpBC,cAAA,EAAgBA,CAAA,KAAM,CAAC;EACzB;AACF;AAGA,IAAMC,mBAAA,GAAN,MAAMA,mBAAA,CAAmB;EACvB9/D,YAAY+/D,aAAA,EAAepgD,KAAA,EAAO;IAChC,KAAKogD,aAAA,GAAgBA,aAAA;IACrB,KAAKpgD,KAAA,GAAQA,KAAA;IAEb,KAAKqgD,QAAA,GAAW,mBAAI7/D,GAAA,CAAI;IAExB,KAAK8/D,eAAA,GAAkB,IAAI/hB,OAAA,CAAQ;EACrC;EAAA;EAEAp8B,YAAA,EAAc;IACZ,KAAKm+C,eAAA,CAAgBnzD,IAAA,CAAK;IAC1B,KAAKmzD,eAAA,CAAgBzxD,QAAA,CAAS;EAChC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA0xD,UAAUn/D,KAAA,EAAO;IACf,MAAMo/D,OAAA,GAAUC,YAAA,CAAavE,WAAA,CAAY96D,KAAK,CAAC;IAC/C,OAAOo/D,OAAA,CAAQrgC,IAAA,CAAKugC,UAAA,IAAc,KAAKC,cAAA,CAAeD,UAAU,EAAEE,GAAA,CAAIb,OAAO;EAC/E;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAt2D,QAAQrI,KAAA,EAAO;IACb,MAAMo/D,OAAA,GAAUC,YAAA,CAAavE,WAAA,CAAY96D,KAAK,CAAC;IAC/C,MAAMy/D,WAAA,GAAcL,OAAA,CAAQh9D,GAAA,CAAIm2B,UAAS,KAAKgnC,cAAA,CAAehnC,MAAK,EAAEmnC,UAAU;IAC9E,IAAIC,eAAA,GAAkB71B,aAAA,CAAc21B,WAAW;IAE/CE,eAAA,GAAkB99D,MAAA,CAAO89D,eAAA,CAAgB92D,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC,GAAGstB,eAAA,CAAgB92D,IAAA,CAAK+2D,IAAA,CAAK,CAAC,GAAGxC,YAAA,CAAa,CAAC,CAAC,CAAC;IACtG,OAAOuC,eAAA,CAAgB92D,IAAA,CAAKzG,GAAA,CAAIy9D,gBAAA,IAAoB;MAClD,MAAMz1D,QAAA,GAAW;QACfu0D,OAAA,EAAS;QACTmB,WAAA,EAAa,CAAC;MAChB;MACAD,gBAAA,CAAiBrgE,OAAA,CAAQ,CAAC;QACxBm/D,OAAA;QACApmC,KAAA,EAAAA;MACF,MAAM;QACJnuB,QAAA,CAASu0D,OAAA,GAAUv0D,QAAA,CAASu0D,OAAA,IAAWA,OAAA;QACvCv0D,QAAA,CAAS01D,WAAA,CAAYvnC,MAAK,IAAIomC,OAAA;MAChC,CAAC;MACD,OAAOv0D,QAAA;IACT,CAAC,CAAC;EACJ;EAAA;EAEAm1D,eAAehnC,QAAO;IAEpB,IAAI,KAAK0mC,QAAA,CAAS9+D,GAAA,CAAIo4B,MAAK,GAAG;MAC5B,OAAO,KAAK0mC,QAAA,CAAS7+D,GAAA,CAAIm4B,MAAK;IAChC;IACA,MAAMinC,GAAA,GAAM,KAAKR,aAAA,CAAcZ,UAAA,CAAW7lC,MAAK;IAE/C,MAAMwnC,eAAA,GAAkB,IAAI90D,UAAA,CAAWC,QAAA,IAAY;MAMjD,MAAM3C,OAAA,GAAUypC,CAAA,IAAK,KAAKpzB,KAAA,CAAMxR,GAAA,CAAI,MAAMlC,QAAA,CAASa,IAAA,CAAKimC,CAAC,CAAC;MAC1DwtB,GAAA,CAAIX,WAAA,CAAYt2D,OAAO;MACvB,OAAO,MAAM;QACXi3D,GAAA,CAAIV,cAAA,CAAev2D,OAAO;MAC5B;IACF,CAAC,EAAEM,IAAA,CAAKypC,SAAA,CAAUktB,GAAG,GAAGp9D,GAAA,CAAI,CAAC;MAC3Bu8D;IACF,OAAO;MACLpmC,KAAA,EAAAA;MACAomC;IACF,EAAE,GAAG5b,SAAA,CAAU,KAAKmc,eAAe,CAAC;IAEpC,MAAMc,MAAA,GAAS;MACbN,UAAA,EAAYK,eAAA;MACZP;IACF;IACA,KAAKP,QAAA,CAAS3+D,GAAA,CAAIi4B,QAAOynC,MAAM;IAC/B,OAAOA,MAAA;EACT;AAaF;AAXIjB,mBAAA,CAAKv1D,IAAA,GAAO,SAASy2D,2BAA2Bp8D,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAKk7D,mBAAA,EAAuBr1D,QAAA,CAAS80D,YAAY,GAAM90D,QAAA,CAAYsB,MAAM,CAAC;AACxF;AAGA+zD,mBAAA,CAAKp1D,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg6D,mBAAA;EACPl1D,OAAA,EAASk1D,mBAAA,CAAmBv1D,IAAA;EAC5B8M,UAAA,EAAY;AACd,CAAC;AA7FL,IAAM4pD,kBAAA,GAANnB,mBAAA;AAAA,CAgGC,MAAM;EACL,CAAC,OAAOr+D,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBm2D,kBAAA,EAAoB,CAAC;IAC3Fp5D,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM03D;EACR,GAAG;IACD13D,IAAA,EAASkE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,SAASq0D,aAAaD,OAAA,EAAS;EAC7B,OAAOA,OAAA,CAAQh9D,GAAA,CAAIm2B,UAASA,OAAMh5B,KAAA,CAAM,GAAG,CAAC,EAAEyH,MAAA,CAAO,CAACm5D,EAAA,EAAIC,EAAA,KAAOD,EAAA,CAAGt+D,MAAA,CAAOu+D,EAAE,CAAC,EAAEh+D,GAAA,CAAIm2B,UAASA,OAAMt4B,IAAA,CAAK,CAAC;AAC3G;AAIA,IAAMogE,WAAA,GAAc;EAClBC,MAAA,EAAQ;EACRC,KAAA,EAAO;EACPC,MAAA,EAAQ;EACRC,KAAA,EAAO;EACPC,MAAA,EAAQ;EACRC,OAAA,EAAS;EACTC,MAAA,EAAQ;EACRC,GAAA,EAAK;EACLC,eAAA,EAAiB;EACjBC,cAAA,EAAgB;EAChBC,WAAA,EAAa;EACbC,gBAAA,EAAkB;EAClBC,eAAA,EAAiB;EACjBC,YAAA,EAAc;AAChB;;;ACvPA,IAAMC,YAAA,GAAe;AAKrB,SAASC,oBAAoBjmD,EAAA,EAAI2S,IAAA,EAAMxJ,EAAA,EAAI;EACzC,MAAM+8C,GAAA,GAAMC,mBAAA,CAAoBnmD,EAAA,EAAI2S,IAAI;EACxCxJ,EAAA,GAAKA,EAAA,CAAGtkB,IAAA,CAAK;EACb,IAAIqhE,GAAA,CAAIviC,IAAA,CAAKyiC,UAAA,IAAcA,UAAA,CAAWvhE,IAAA,CAAK,MAAMskB,EAAE,GAAG;IACpD;EACF;EACA+8C,GAAA,CAAIjhE,IAAA,CAAKkkB,EAAE;EACXnJ,EAAA,CAAG4G,YAAA,CAAa+L,IAAA,EAAMuzC,GAAA,CAAI38D,IAAA,CAAKy8D,YAAY,CAAC;AAC9C;AAKA,SAASK,uBAAuBrmD,EAAA,EAAI2S,IAAA,EAAMxJ,EAAA,EAAI;EAC5C,MAAM+8C,GAAA,GAAMC,mBAAA,CAAoBnmD,EAAA,EAAI2S,IAAI;EACxCxJ,EAAA,GAAKA,EAAA,CAAGtkB,IAAA,CAAK;EACb,MAAMyhE,WAAA,GAAcJ,GAAA,CAAIr/D,MAAA,CAAOqB,GAAA,IAAOA,GAAA,KAAQihB,EAAE;EAChD,IAAIm9C,WAAA,CAAY3gE,MAAA,EAAQ;IACtBqa,EAAA,CAAG4G,YAAA,CAAa+L,IAAA,EAAM2zC,WAAA,CAAY/8D,IAAA,CAAKy8D,YAAY,CAAC;EACtD,OAAO;IACLhmD,EAAA,CAAG2G,eAAA,CAAgBgM,IAAI;EACzB;AACF;AAKA,SAASwzC,oBAAoBnmD,EAAA,EAAI2S,IAAA,EAAM;EAErC,MAAMg9B,SAAA,GAAY3vC,EAAA,CAAG0B,YAAA,CAAaiR,IAAI;EACtC,OAAOg9B,SAAA,EAAWzxB,KAAA,CAAM,MAAM,KAAK,EAAC;AACtC;AAaA,IAAMqoC,yBAAA,GAA4B;AAMlC,IAAMC,8BAAA,GAAiC;AAEvC,IAAIC,MAAA,GAAS;AAMb,IAAMC,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClB7iE,YAAY6rB,YAKZmzC,SAAA,EAAW;IACT,KAAKA,SAAA,GAAYA,SAAA;IAEjB,KAAK8D,gBAAA,GAAmB,mBAAI3iE,GAAA,CAAI;IAEhC,KAAK4iE,kBAAA,GAAqB;IAE1B,KAAKC,GAAA,GAAM,GAAGJ,MAAA,EAAQ;IACtB,KAAK/2C,SAAA,GAAYA;IACjB,KAAKm3C,GAAA,GAAMx3D,MAAA,CAAO0X,MAAM,IAAI,MAAM0/C,MAAA;EACpC;EACAK,SAASC,WAAA,EAAaj6D,OAAA,EAASk6D,IAAA,EAAM;IACnC,IAAI,CAAC,KAAKC,eAAA,CAAgBF,WAAA,EAAaj6D,OAAO,GAAG;MAC/C;IACF;IACA,MAAMpI,GAAA,GAAMwiE,MAAA,CAAOp6D,OAAA,EAASk6D,IAAI;IAChC,IAAI,OAAOl6D,OAAA,KAAY,UAAU;MAE/Bq6D,YAAA,CAAar6D,OAAA,EAAS,KAAK+5D,GAAG;MAC9B,KAAKF,gBAAA,CAAiBzhE,GAAA,CAAIR,GAAA,EAAK;QAC7B0iE,cAAA,EAAgBt6D,OAAA;QAChBu6D,cAAA,EAAgB;MAClB,CAAC;IACH,WAAW,CAAC,KAAKV,gBAAA,CAAiB5hE,GAAA,CAAIL,GAAG,GAAG;MAC1C,KAAK4iE,qBAAA,CAAsBx6D,OAAA,EAASk6D,IAAI;IAC1C;IACA,IAAI,CAAC,KAAKO,4BAAA,CAA6BR,WAAA,EAAariE,GAAG,GAAG;MACxD,KAAK8iE,oBAAA,CAAqBT,WAAA,EAAariE,GAAG;IAC5C;EACF;EACA+iE,kBAAkBV,WAAA,EAAaj6D,OAAA,EAASk6D,IAAA,EAAM;IAC5C,IAAI,CAACl6D,OAAA,IAAW,CAAC,KAAK46D,cAAA,CAAeX,WAAW,GAAG;MACjD;IACF;IACA,MAAMriE,GAAA,GAAMwiE,MAAA,CAAOp6D,OAAA,EAASk6D,IAAI;IAChC,IAAI,KAAKO,4BAAA,CAA6BR,WAAA,EAAariE,GAAG,GAAG;MACvD,KAAKijE,uBAAA,CAAwBZ,WAAA,EAAariE,GAAG;IAC/C;IAGA,IAAI,OAAOoI,OAAA,KAAY,UAAU;MAC/B,MAAM86D,iBAAA,GAAoB,KAAKjB,gBAAA,CAAiB3hE,GAAA,CAAIN,GAAG;MACvD,IAAIkjE,iBAAA,IAAqBA,iBAAA,CAAkBP,cAAA,KAAmB,GAAG;QAC/D,KAAKQ,qBAAA,CAAsBnjE,GAAG;MAChC;IACF;IACA,IAAI,KAAKkiE,kBAAA,EAAoBkB,UAAA,CAAWniE,MAAA,KAAW,GAAG;MACpD,KAAKihE,kBAAA,CAAmB/xD,MAAA,CAAO;MAC/B,KAAK+xD,kBAAA,GAAqB;IAC5B;EACF;EAAA;EAEAjhD,YAAA,EAAc;IACZ,MAAMoiD,iBAAA,GAAoB,KAAKr4C,SAAA,CAAUvJ,gBAAA,CAAiB,IAAIqgD,8BAA8B,KAAK,KAAKK,GAAG,IAAI;IAC7G,SAAS9tC,CAAA,GAAI,GAAGA,CAAA,GAAIgvC,iBAAA,CAAkBpiE,MAAA,EAAQozB,CAAA,IAAK;MACjD,KAAKivC,iCAAA,CAAkCD,iBAAA,CAAkBhvC,CAAC,CAAC;MAC3DgvC,iBAAA,CAAkBhvC,CAAC,EAAEpS,eAAA,CAAgB6/C,8BAA8B;IACrE;IACA,KAAKI,kBAAA,EAAoB/xD,MAAA,CAAO;IAChC,KAAK+xD,kBAAA,GAAqB;IAC1B,KAAKD,gBAAA,CAAiB/gD,KAAA,CAAM;EAC9B;EAAA;AAAA;AAAA;AAAA;EAKA0hD,sBAAsBx6D,OAAA,EAASk6D,IAAA,EAAM;IACnC,MAAMI,cAAA,GAAiB,KAAK13C,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IACzDmwD,YAAA,CAAaC,cAAA,EAAgB,KAAKP,GAAG;IACrCO,cAAA,CAAe/gD,WAAA,GAAcvZ,OAAA;IAC7B,IAAIk6D,IAAA,EAAM;MACRI,cAAA,CAAexgD,YAAA,CAAa,QAAQogD,IAAI;IAC1C;IACA,KAAKiB,wBAAA,CAAyB;IAC9B,KAAKrB,kBAAA,CAAmBlvD,WAAA,CAAY0vD,cAAc;IAClD,KAAKT,gBAAA,CAAiBzhE,GAAA,CAAIgiE,MAAA,CAAOp6D,OAAA,EAASk6D,IAAI,GAAG;MAC/CI,cAAA;MACAC,cAAA,EAAgB;IAClB,CAAC;EACH;EAAA;EAEAQ,sBAAsBnjE,GAAA,EAAK;IACzB,KAAKiiE,gBAAA,CAAiB3hE,GAAA,CAAIN,GAAG,GAAG0iE,cAAA,EAAgBvyD,MAAA,CAAO;IACvD,KAAK8xD,gBAAA,CAAiBxgE,MAAA,CAAOzB,GAAG;EAClC;EAAA;EAEAujE,yBAAA,EAA2B;IACzB,IAAI,KAAKrB,kBAAA,EAAoB;MAC3B;IACF;IACA,MAAMsB,kBAAA,GAAqB;IAC3B,MAAMC,gBAAA,GAAmB,KAAKz4C,SAAA,CAAUvJ,gBAAA,CAAiB,IAAI+hD,kBAAkB,qBAAqB;IACpG,SAASnvC,CAAA,GAAI,GAAGA,CAAA,GAAIovC,gBAAA,CAAiBxiE,MAAA,EAAQozB,CAAA,IAAK;MAKhDovC,gBAAA,CAAiBpvC,CAAC,EAAElkB,MAAA,CAAO;IAC7B;IACA,MAAMuzD,iBAAA,GAAoB,KAAK14C,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAK5DoxD,iBAAA,CAAkB/iD,KAAA,CAAMg3C,UAAA,GAAa;IAGrC+L,iBAAA,CAAkBp9C,SAAA,CAAUrW,GAAA,CAAIuzD,kBAAkB;IAClDE,iBAAA,CAAkBp9C,SAAA,CAAUrW,GAAA,CAAI,qBAAqB;IAErD,IAAI,KAAKkuD,SAAA,IAAa,CAAC,KAAKA,SAAA,CAAUhJ,SAAA,EAAW;MAC/CuO,iBAAA,CAAkBxhD,YAAA,CAAa,YAAY,QAAQ;IACrD;IACA,KAAK8I,SAAA,CAAU9kB,IAAA,CAAK8M,WAAA,CAAY0wD,iBAAiB;IACjD,KAAKxB,kBAAA,GAAqBwB,iBAAA;EAC5B;EAAA;EAEAJ,kCAAkClkD,OAAA,EAAS;IAEzC,MAAMukD,oBAAA,GAAuBlC,mBAAA,CAAoBriD,OAAA,EAAS,kBAAkB,EAAEjd,MAAA,CAAOsiB,EAAA,IAAMA,EAAA,CAAG5kB,OAAA,CAAQgiE,yBAAyB,KAAK,CAAC;IACrIziD,OAAA,CAAQ8C,YAAA,CAAa,oBAAoByhD,oBAAA,CAAqB9+D,IAAA,CAAK,GAAG,CAAC;EACzE;EAAA;AAAA;AAAA;AAAA;EAKAi+D,qBAAqB1jD,OAAA,EAASpf,GAAA,EAAK;IACjC,MAAMkjE,iBAAA,GAAoB,KAAKjB,gBAAA,CAAiB3hE,GAAA,CAAIN,GAAG;IAGvDuhE,mBAAA,CAAoBniD,OAAA,EAAS,oBAAoB8jD,iBAAA,CAAkBR,cAAA,CAAej+C,EAAE;IACpFrF,OAAA,CAAQ8C,YAAA,CAAa4/C,8BAAA,EAAgC,KAAKK,GAAG;IAC7De,iBAAA,CAAkBP,cAAA;EACpB;EAAA;AAAA;AAAA;AAAA;EAKAM,wBAAwB7jD,OAAA,EAASpf,GAAA,EAAK;IACpC,MAAMkjE,iBAAA,GAAoB,KAAKjB,gBAAA,CAAiB3hE,GAAA,CAAIN,GAAG;IACvDkjE,iBAAA,CAAkBP,cAAA;IAClBhB,sBAAA,CAAuBviD,OAAA,EAAS,oBAAoB8jD,iBAAA,CAAkBR,cAAA,CAAej+C,EAAE;IACvFrF,OAAA,CAAQ6C,eAAA,CAAgB6/C,8BAA8B;EACxD;EAAA;EAEAe,6BAA6BzjD,OAAA,EAASpf,GAAA,EAAK;IACzC,MAAM4jE,YAAA,GAAenC,mBAAA,CAAoBriD,OAAA,EAAS,kBAAkB;IACpE,MAAM8jD,iBAAA,GAAoB,KAAKjB,gBAAA,CAAiB3hE,GAAA,CAAIN,GAAG;IACvD,MAAM6jE,SAAA,GAAYX,iBAAA,IAAqBA,iBAAA,CAAkBR,cAAA,CAAej+C,EAAA;IACxE,OAAO,CAAC,CAACo/C,SAAA,IAAaD,YAAA,CAAa/jE,OAAA,CAAQgkE,SAAS,KAAK;EAC3D;EAAA;EAEAtB,gBAAgBnjD,OAAA,EAAShX,OAAA,EAAS;IAChC,IAAI,CAAC,KAAK46D,cAAA,CAAe5jD,OAAO,GAAG;MACjC,OAAO;IACT;IACA,IAAIhX,OAAA,IAAW,OAAOA,OAAA,KAAY,UAAU;MAI1C,OAAO;IACT;IACA,MAAM07D,cAAA,GAAiB17D,OAAA,IAAW,OAAO,KAAK,GAAGA,OAAO,GAAGjI,IAAA,CAAK;IAChE,MAAM4jE,SAAA,GAAY3kD,OAAA,CAAQpC,YAAA,CAAa,YAAY;IAGnD,OAAO8mD,cAAA,GAAiB,CAACC,SAAA,IAAaA,SAAA,CAAU5jE,IAAA,CAAK,MAAM2jE,cAAA,GAAiB;EAC9E;EAAA;EAEAd,eAAe5jD,OAAA,EAAS;IACtB,OAAOA,OAAA,CAAQtD,QAAA,KAAa,KAAKkP,SAAA,CAAUhP,YAAA;EAC7C;AAaF;AAXIgmD,cAAA,CAAKt4D,IAAA,GAAO,SAASs6D,sBAAsBjgE,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKi+D,cAAA,EAAkBp4D,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAYosD,QAAQ,CAAC;AACjF;AAGAgM,cAAA,CAAKn4D,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO+8D,cAAA;EACPj4D,OAAA,EAASi4D,cAAA,CAAct4D,IAAA;EACvB8M,UAAA,EAAY;AACd,CAAC;AA5LL,IAAMytD,aAAA,GAANjC,cAAA;AAAA,CA+LC,MAAM;EACL,CAAC,OAAOphE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBg6D,aAAA,EAAe,CAAC;IACtFj9D,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAASgvD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,SAASwM,OAAOp6D,OAAA,EAASk6D,IAAA,EAAM;EAC7B,OAAO,OAAOl6D,OAAA,KAAY,WAAW,GAAGk6D,IAAA,IAAQ,EAAE,IAAIl6D,OAAO,KAAKA,OAAA;AACpE;AAEA,SAASq6D,aAAarjD,OAAA,EAAS8kD,SAAA,EAAW;EACxC,IAAI,CAAC9kD,OAAA,CAAQqF,EAAA,EAAI;IACfrF,OAAA,CAAQqF,EAAA,GAAK,GAAGo9C,yBAAyB,IAAIqC,SAAS,IAAInC,MAAA,EAAQ;EACpE;AACF;AAMA,IAAMoC,cAAA,GAAN,MAAqB;EACnBhlE,YAAYilE,MAAA,EAAQj1D,QAAA,EAAU;IAC5B,KAAKi1D,MAAA,GAASA,MAAA;IACd,KAAKC,gBAAA,GAAmB;IACxB,KAAKC,WAAA,GAAc;IACnB,KAAKC,KAAA,GAAQ;IACb,KAAKC,gBAAA,GAAmB,IAAInnB,OAAA,CAAQ;IACpC,KAAKonB,sBAAA,GAAyB7c,YAAA,CAAazM,KAAA;IAC3C,KAAKupB,SAAA,GAAY;IACjB,KAAKC,oBAAA,GAAuB,EAAC;IAC7B,KAAKC,WAAA,GAAc;IACnB,KAAKC,cAAA,GAAiB;MACpBC,OAAA,EAAS;MACTljD,KAAA,EAAO;IACT;IAKA,KAAKmjD,gBAAA,GAAmBryB,IAAA,IAAQA,IAAA,CAAKkqB,QAAA;IAErC,KAAKoI,eAAA,GAAkB,EAAC;IAKxB,KAAKC,MAAA,GAAS,IAAI5nB,OAAA,CAAQ;IAE1B,KAAK6nB,MAAA,GAAS,IAAI7nB,OAAA,CAAQ;IAI1B,IAAI+mB,MAAA,YAAkBe,SAAA,EAAW;MAC/B,KAAKC,wBAAA,GAA2BhB,MAAA,CAAOn9B,OAAA,CAAQgD,SAAA,CAAUo7B,QAAA,IAAY,KAAKC,aAAA,CAAcD,QAAA,CAAS9X,OAAA,CAAQ,CAAC,CAAC;IAC7G,WAAWgY,QAAA,CAASnB,MAAM,GAAG;MAC3B,IAAI,CAACj1D,QAAA,KAAa,OAAOvO,SAAA,KAAc,eAAeA,SAAA,GAAY;QAChE,MAAM,IAAI6B,KAAA,CAAM,mEAAmE;MACrF;MACA,KAAK+iE,UAAA,GAAaC,MAAA,CAAO,MAAM,KAAKH,aAAA,CAAclB,MAAA,CAAO,CAAC,GAAG;QAC3Dj1D;MACF,CAAC;IACH;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAu2D,cAAcC,SAAA,EAAW;IACvB,KAAKZ,gBAAA,GAAmBY,SAAA;IACxB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAC,SAASC,UAAA,GAAa,MAAM;IAC1B,KAAKtB,KAAA,GAAQsB,UAAA;IACb,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAC,wBAAwBhB,OAAA,GAAU,MAAM;IACtC,KAAKJ,SAAA,GAAYI,OAAA;IACjB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAiB,0BAA0BC,SAAA,EAAW;IACnC,KAAKC,WAAA,GAAcD,SAAA;IACnB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAE,wBAAwBhlE,IAAA,EAAM;IAC5B,KAAKyjE,oBAAA,GAAuBzjE,IAAA;IAC5B,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAilE,cAAcC,gBAAA,GAAmB,KAAK;IACpC,IAAI,OAAOxlE,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,MAAMylE,KAAA,GAAQ,KAAKC,cAAA,CAAe;MAClC,IAAID,KAAA,CAAMplE,MAAA,GAAS,KAAKolE,KAAA,CAAMpnC,IAAA,CAAKyT,IAAA,IAAQ,OAAOA,IAAA,CAAK6zB,QAAA,KAAa,UAAU,GAAG;QAC/E,MAAM9jE,KAAA,CAAM,8EAA8E;MAC5F;IACF;IACA,KAAKgiE,sBAAA,CAAuB36B,WAAA,CAAY;IAIxC,KAAK26B,sBAAA,GAAyB,KAAKD,gBAAA,CAAiBz7D,IAAA,CAAKyrC,GAAA,CAAIgyB,MAAA,IAAU,KAAKxB,eAAA,CAAgBzkE,IAAA,CAAKimE,MAAM,CAAC,GAAGlJ,YAAA,CAAa8I,gBAAgB,GAAGjkE,MAAA,CAAO,MAAM,KAAK6iE,eAAA,CAAgB/jE,MAAA,GAAS,CAAC,GAAGqB,GAAA,CAAI,MAAM,KAAK0iE,eAAA,CAAgBngE,IAAA,CAAK,EAAE,CAAC,CAAC,EAAEolC,SAAA,CAAUw8B,WAAA,IAAe;MAC3P,MAAMJ,KAAA,GAAQ,KAAKC,cAAA,CAAe;MAGlC,SAASjyC,CAAA,GAAI,GAAGA,CAAA,GAAIgyC,KAAA,CAAMplE,MAAA,GAAS,GAAGozB,CAAA,IAAK;QACzC,MAAMz0B,KAAA,IAAS,KAAKykE,gBAAA,GAAmBhwC,CAAA,IAAKgyC,KAAA,CAAMplE,MAAA;QAClD,MAAMyxC,IAAA,GAAO2zB,KAAA,CAAMzmE,KAAK;QACxB,IAAI,CAAC,KAAKmlE,gBAAA,CAAiBryB,IAAI,KAAKA,IAAA,CAAK6zB,QAAA,CAAS,EAAEjgE,WAAA,CAAY,EAAEnG,IAAA,CAAK,EAAEN,OAAA,CAAQ4mE,WAAW,MAAM,GAAG;UACnG,KAAKC,aAAA,CAAc9mE,KAAK;UACxB;QACF;MACF;MACA,KAAKolE,eAAA,GAAkB,EAAC;IAC1B,CAAC;IACD,OAAO;EACT;EAAA;EAEA2B,gBAAA,EAAkB;IAChB,KAAK3B,eAAA,GAAkB,EAAC;IACxB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA4B,eAAe9B,OAAA,GAAU,MAAM;IAC7B,KAAKF,WAAA,GAAcE,OAAA;IACnB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+B,eAAe/B,OAAA,GAAU,MAAMljD,KAAA,GAAQ,IAAI;IACzC,KAAKijD,cAAA,GAAiB;MACpBC,OAAA;MACAljD;IACF;IACA,OAAO;EACT;EACA8kD,cAAch0B,IAAA,EAAM;IAClB,MAAMo0B,kBAAA,GAAqB,KAAKxC,WAAA;IAChC,KAAKyC,gBAAA,CAAiBr0B,IAAI;IAC1B,IAAI,KAAK4xB,WAAA,KAAgBwC,kBAAA,EAAoB;MAC3C,KAAK5B,MAAA,CAAOj5D,IAAA,CAAK,KAAKo4D,gBAAgB;IACxC;EACF;EAAA;AAAA;AAAA;AAAA;EAKA2C,UAAU79D,KAAA,EAAO;IACf,MAAM89D,OAAA,GAAU99D,KAAA,CAAM89D,OAAA;IACtB,MAAMzM,SAAA,GAAY,CAAC,UAAU,WAAW,WAAW,UAAU;IAC7D,MAAM0M,iBAAA,GAAoB1M,SAAA,CAAUtsC,KAAA,CAAMiQ,QAAA,IAAY;MACpD,OAAO,CAACh1B,KAAA,CAAMg1B,QAAQ,KAAK,KAAKwmC,oBAAA,CAAqB9kE,OAAA,CAAQs+B,QAAQ,IAAI;IAC3E,CAAC;IACD,QAAQ8oC,OAAA;MACN,KAAK/N,GAAA;QACH,KAAK+L,MAAA,CAAOh5D,IAAA,CAAK;QACjB;MACF,KAAK+tD,UAAA;QACH,IAAI,KAAK0K,SAAA,IAAawC,iBAAA,EAAmB;UACvC,KAAKC,iBAAA,CAAkB;UACvB;QACF,OAAO;UACL;QACF;MACF,KAAKrN,QAAA;QACH,IAAI,KAAK4K,SAAA,IAAawC,iBAAA,EAAmB;UACvC,KAAKE,qBAAA,CAAsB;UAC3B;QACF,OAAO;UACL;QACF;MACF,KAAKrN,WAAA;QACH,IAAI,KAAKkM,WAAA,IAAeiB,iBAAA,EAAmB;UACzC,KAAKjB,WAAA,KAAgB,QAAQ,KAAKmB,qBAAA,CAAsB,IAAI,KAAKD,iBAAA,CAAkB;UACnF;QACF,OAAO;UACL;QACF;MACF,KAAKtN,UAAA;QACH,IAAI,KAAKoM,WAAA,IAAeiB,iBAAA,EAAmB;UACzC,KAAKjB,WAAA,KAAgB,QAAQ,KAAKkB,iBAAA,CAAkB,IAAI,KAAKC,qBAAA,CAAsB;UACnF;QACF,OAAO;UACL;QACF;MACF,KAAKxN,IAAA;QACH,IAAI,KAAKgL,WAAA,IAAesC,iBAAA,EAAmB;UACzC,KAAKG,kBAAA,CAAmB;UACxB;QACF,OAAO;UACL;QACF;MACF,KAAK1N,GAAA;QACH,IAAI,KAAKiL,WAAA,IAAesC,iBAAA,EAAmB;UACzC,KAAKI,iBAAA,CAAkB;UACvB;QACF,OAAO;UACL;QACF;MACF,KAAK7N,OAAA;QACH,IAAI,KAAKoL,cAAA,CAAeC,OAAA,IAAWoC,iBAAA,EAAmB;UACpD,MAAMK,WAAA,GAAc,KAAKlD,gBAAA,GAAmB,KAAKQ,cAAA,CAAejjD,KAAA;UAChE,KAAK4lD,qBAAA,CAAsBD,WAAA,GAAc,IAAIA,WAAA,GAAc,GAAG,CAAC;UAC/D;QACF,OAAO;UACL;QACF;MACF,KAAK7N,SAAA;QACH,IAAI,KAAKmL,cAAA,CAAeC,OAAA,IAAWoC,iBAAA,EAAmB;UACpD,MAAMK,WAAA,GAAc,KAAKlD,gBAAA,GAAmB,KAAKQ,cAAA,CAAejjD,KAAA;UAChE,MAAM6lD,WAAA,GAAc,KAAKnB,cAAA,CAAe,EAAErlE,MAAA;UAC1C,KAAKumE,qBAAA,CAAsBD,WAAA,GAAcE,WAAA,GAAcF,WAAA,GAAcE,WAAA,GAAc,GAAG,EAAE;UACxF;QACF,OAAO;UACL;QACF;MACF;QACE,IAAIP,iBAAA,IAAqB3M,cAAA,CAAepxD,KAAA,EAAO,UAAU,GAAG;UAG1D,IAAIA,KAAA,CAAMnJ,GAAA,IAAOmJ,KAAA,CAAMnJ,GAAA,CAAIiB,MAAA,KAAW,GAAG;YACvC,KAAKujE,gBAAA,CAAiBv4D,IAAA,CAAK9C,KAAA,CAAMnJ,GAAA,CAAI0nE,iBAAA,CAAkB,CAAC;UAC1D,WAAWT,OAAA,IAAW9M,CAAA,IAAK8M,OAAA,IAAW7M,CAAA,IAAK6M,OAAA,IAAWhN,IAAA,IAAQgN,OAAA,IAAW/M,IAAA,EAAM;YAC7E,KAAKsK,gBAAA,CAAiBv4D,IAAA,CAAK0lB,MAAA,CAAOg2C,YAAA,CAAaV,OAAO,CAAC;UACzD;QACF;QAGA;IACJ;IACA,KAAKjC,eAAA,GAAkB,EAAC;IACxB77D,KAAA,CAAMqe,cAAA,CAAe;EACvB;EAAA;EAEA,IAAIogD,gBAAA,EAAkB;IACpB,OAAO,KAAKvD,gBAAA;EACd;EAAA;EAEA,IAAIwD,WAAA,EAAa;IACf,OAAO,KAAKvD,WAAA;EACd;EAAA;EAEAwD,SAAA,EAAW;IACT,OAAO,KAAK9C,eAAA,CAAgB/jE,MAAA,GAAS;EACvC;EAAA;EAEAomE,mBAAA,EAAqB;IACnB,KAAKG,qBAAA,CAAsB,GAAG,CAAC;EACjC;EAAA;EAEAF,kBAAA,EAAoB;IAClB,KAAKE,qBAAA,CAAsB,KAAKlB,cAAA,CAAe,EAAErlE,MAAA,GAAS,GAAG,EAAE;EACjE;EAAA;EAEAkmE,kBAAA,EAAoB;IAClB,KAAK9C,gBAAA,GAAmB,IAAI,KAAKgD,kBAAA,CAAmB,IAAI,KAAKU,qBAAA,CAAsB,CAAC;EACtF;EAAA;EAEAX,sBAAA,EAAwB;IACtB,KAAK/C,gBAAA,GAAmB,KAAK,KAAKE,KAAA,GAAQ,KAAK+C,iBAAA,CAAkB,IAAI,KAAKS,qBAAA,CAAsB,EAAE;EACpG;EACAhB,iBAAiBr0B,IAAA,EAAM;IACrB,MAAMs1B,SAAA,GAAY,KAAK1B,cAAA,CAAe;IACtC,MAAM1mE,KAAA,GAAQ,OAAO8yC,IAAA,KAAS,WAAWA,IAAA,GAAOs1B,SAAA,CAAUnoE,OAAA,CAAQ6yC,IAAI;IACtE,MAAMm1B,UAAA,GAAaG,SAAA,CAAUpoE,KAAK;IAElC,KAAK0kE,WAAA,GAAcuD,UAAA,IAAc,OAAO,OAAOA,UAAA;IAC/C,KAAKxD,gBAAA,GAAmBzkE,KAAA;EAC1B;EAAA;EAEAolB,QAAA,EAAU;IACR,KAAKy/C,sBAAA,CAAuB36B,WAAA,CAAY;IACxC,KAAKs7B,wBAAA,EAA0Bt7B,WAAA,CAAY;IAC3C,KAAK07B,UAAA,EAAYxgD,OAAA,CAAQ;IACzB,KAAKw/C,gBAAA,CAAiB72D,QAAA,CAAS;IAC/B,KAAKs3D,MAAA,CAAOt3D,QAAA,CAAS;IACrB,KAAKu3D,MAAA,CAAOv3D,QAAA,CAAS;IACrB,KAAKq3D,eAAA,GAAkB,EAAC;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+C,sBAAsBnmD,KAAA,EAAO;IAC3B,KAAK2iD,KAAA,GAAQ,KAAK0D,oBAAA,CAAqBrmD,KAAK,IAAI,KAAKsmD,uBAAA,CAAwBtmD,KAAK;EACpF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAqmD,qBAAqBrmD,KAAA,EAAO;IAC1B,MAAMykD,KAAA,GAAQ,KAAKC,cAAA,CAAe;IAClC,SAASjyC,CAAA,GAAI,GAAGA,CAAA,IAAKgyC,KAAA,CAAMplE,MAAA,EAAQozB,CAAA,IAAK;MACtC,MAAMz0B,KAAA,IAAS,KAAKykE,gBAAA,GAAmBziD,KAAA,GAAQyS,CAAA,GAAIgyC,KAAA,CAAMplE,MAAA,IAAUolE,KAAA,CAAMplE,MAAA;MACzE,MAAMyxC,IAAA,GAAO2zB,KAAA,CAAMzmE,KAAK;MACxB,IAAI,CAAC,KAAKmlE,gBAAA,CAAiBryB,IAAI,GAAG;QAChC,KAAKg0B,aAAA,CAAc9mE,KAAK;QACxB;MACF;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAsoE,wBAAwBtmD,KAAA,EAAO;IAC7B,KAAK4lD,qBAAA,CAAsB,KAAKnD,gBAAA,GAAmBziD,KAAA,EAAOA,KAAK;EACjE;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA4lD,sBAAsB5nE,KAAA,EAAOuoE,aAAA,EAAe;IAC1C,MAAM9B,KAAA,GAAQ,KAAKC,cAAA,CAAe;IAClC,IAAI,CAACD,KAAA,CAAMzmE,KAAK,GAAG;MACjB;IACF;IACA,OAAO,KAAKmlE,gBAAA,CAAiBsB,KAAA,CAAMzmE,KAAK,CAAC,GAAG;MAC1CA,KAAA,IAASuoE,aAAA;MACT,IAAI,CAAC9B,KAAA,CAAMzmE,KAAK,GAAG;QACjB;MACF;IACF;IACA,KAAK8mE,aAAA,CAAc9mE,KAAK;EAC1B;EAAA;EAEA0mE,eAAA,EAAiB;IACf,IAAIf,QAAA,CAAS,KAAKnB,MAAM,GAAG;MACzB,OAAO,KAAKA,MAAA,CAAO;IACrB;IACA,OAAO,KAAKA,MAAA,YAAkBe,SAAA,GAAY,KAAKf,MAAA,CAAO7W,OAAA,CAAQ,IAAI,KAAK6W,MAAA;EACzE;EAAA;EAEAkB,cAAcD,QAAA,EAAU;IACtB,IAAI,KAAKf,WAAA,EAAa;MACpB,MAAM8D,QAAA,GAAW/C,QAAA,CAASxlE,OAAA,CAAQ,KAAKykE,WAAW;MAClD,IAAI8D,QAAA,GAAW,MAAMA,QAAA,KAAa,KAAK/D,gBAAA,EAAkB;QACvD,KAAKA,gBAAA,GAAmB+D,QAAA;MAC1B;IACF;EACF;AACF;AACA,IAAMC,0BAAA,GAAN,cAAyClE,cAAA,CAAe;EACtDuC,cAAc9mE,KAAA,EAAO;IACnB,IAAI,KAAKioE,UAAA,EAAY;MACnB,KAAKA,UAAA,CAAWS,iBAAA,CAAkB;IACpC;IACA,MAAM5B,aAAA,CAAc9mE,KAAK;IACzB,IAAI,KAAKioE,UAAA,EAAY;MACnB,KAAKA,UAAA,CAAWU,eAAA,CAAgB;IAClC;EACF;AACF;AAwCA,IAAMC,qBAAA,GAAN,MAAMA,qBAAA,CAAqB;EACzBrpE,YAAYg/D,SAAA,EAAW;IACrB,KAAKA,SAAA,GAAYA,SAAA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAsK,WAAWrpD,OAAA,EAAS;IAGlB,OAAOA,OAAA,CAAQspD,YAAA,CAAa,UAAU;EACxC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAC,UAAUvpD,OAAA,EAAS;IACjB,OAAOwpD,WAAA,CAAYxpD,OAAO,KAAKypD,gBAAA,CAAiBzpD,OAAO,EAAEu4C,UAAA,KAAe;EAC1E;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAmR,WAAW1pD,OAAA,EAAS;IAElB,IAAI,CAAC,KAAK++C,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,OAAO;IACT;IACA,MAAM4T,YAAA,GAAeC,eAAA,CAAgBC,SAAA,CAAU7pD,OAAO,CAAC;IACvD,IAAI2pD,YAAA,EAAc;MAEhB,IAAIG,gBAAA,CAAiBH,YAAY,MAAM,IAAI;QACzC,OAAO;MACT;MAEA,IAAI,CAAC,KAAKJ,SAAA,CAAUI,YAAY,GAAG;QACjC,OAAO;MACT;IACF;IACA,IAAII,QAAA,GAAW/pD,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY;IAC5C,IAAImpE,aAAA,GAAgBF,gBAAA,CAAiB9pD,OAAO;IAC5C,IAAIA,OAAA,CAAQspD,YAAA,CAAa,iBAAiB,GAAG;MAC3C,OAAOU,aAAA,KAAkB;IAC3B;IACA,IAAID,QAAA,KAAa,YAAYA,QAAA,KAAa,UAAU;MAIlD,OAAO;IACT;IAEA,IAAI,KAAKhL,SAAA,CAAUzI,MAAA,IAAU,KAAKyI,SAAA,CAAUxI,GAAA,IAAO,CAAC0T,wBAAA,CAAyBjqD,OAAO,GAAG;MACrF,OAAO;IACT;IACA,IAAI+pD,QAAA,KAAa,SAAS;MAGxB,IAAI,CAAC/pD,OAAA,CAAQspD,YAAA,CAAa,UAAU,GAAG;QACrC,OAAO;MACT;MAGA,OAAOU,aAAA,KAAkB;IAC3B;IACA,IAAID,QAAA,KAAa,SAAS;MAKxB,IAAIC,aAAA,KAAkB,IAAI;QACxB,OAAO;MACT;MAGA,IAAIA,aAAA,KAAkB,MAAM;QAC1B,OAAO;MACT;MAIA,OAAO,KAAKjL,SAAA,CAAUvI,OAAA,IAAWx2C,OAAA,CAAQspD,YAAA,CAAa,UAAU;IAClE;IACA,OAAOtpD,OAAA,CAAQkqD,QAAA,IAAY;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAC,YAAYnqD,OAAA,EAAS0mB,MAAA,EAAQ;IAG3B,OAAO0jC,sBAAA,CAAuBpqD,OAAO,KAAK,CAAC,KAAKqpD,UAAA,CAAWrpD,OAAO,MAAM0mB,MAAA,EAAQ2jC,gBAAA,IAAoB,KAAKd,SAAA,CAAUvpD,OAAO;EAC5H;AAaF;AAXIopD,qBAAA,CAAK9+D,IAAA,GAAO,SAASggE,6BAA6B3lE,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKykE,qBAAA,EAAyB5+D,QAAA,CAAYosD,QAAQ,CAAC;AACjE;AAGAwS,qBAAA,CAAK3+D,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOujE,qBAAA;EACPz+D,OAAA,EAASy+D,qBAAA,CAAqB9+D,IAAA;EAC9B8M,UAAA,EAAY;AACd,CAAC;AApHL,IAAMmzD,oBAAA,GAANnB,qBAAA;AAAA,CAuHC,MAAM;EACL,CAAC,OAAO5nE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0/D,oBAAA,EAAsB,CAAC;IAC7F3iE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,SAASgT,gBAAgBp3D,SAAQ;EAC/B,IAAI;IACF,OAAOA,QAAOm3D,YAAA;EAChB,QAAQ;IACN,OAAO;EACT;AACF;AAEA,SAASH,YAAYxpD,OAAA,EAAS;EAG5B,OAAO,CAAC,EAAEA,OAAA,CAAQwqD,WAAA,IAAexqD,OAAA,CAAQyqD,YAAA,IAAgB,OAAOzqD,OAAA,CAAQ0qD,cAAA,KAAmB,cAAc1qD,OAAA,CAAQ0qD,cAAA,CAAe,EAAE7oE,MAAA;AACpI;AAEA,SAAS8oE,oBAAoB3qD,OAAA,EAAS;EACpC,IAAI+pD,QAAA,GAAW/pD,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY;EAC5C,OAAOkpE,QAAA,KAAa,WAAWA,QAAA,KAAa,YAAYA,QAAA,KAAa,YAAYA,QAAA,KAAa;AAChG;AAEA,SAASa,cAAc5qD,OAAA,EAAS;EAC9B,OAAO6qD,cAAA,CAAe7qD,OAAO,KAAKA,OAAA,CAAQpY,IAAA,IAAQ;AACpD;AAEA,SAASkjE,iBAAiB9qD,OAAA,EAAS;EACjC,OAAOirC,eAAA,CAAgBjrC,OAAO,KAAKA,OAAA,CAAQspD,YAAA,CAAa,MAAM;AAChE;AAEA,SAASuB,eAAe7qD,OAAA,EAAS;EAC/B,OAAOA,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY,KAAK;AAC3C;AAEA,SAASoqD,gBAAgBjrC,OAAA,EAAS;EAChC,OAAOA,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY,KAAK;AAC3C;AAEA,SAASkqE,iBAAiB/qD,OAAA,EAAS;EACjC,IAAI,CAACA,OAAA,CAAQspD,YAAA,CAAa,UAAU,KAAKtpD,OAAA,CAAQkqD,QAAA,KAAa,QAAW;IACvE,OAAO;EACT;EACA,IAAIA,QAAA,GAAWlqD,OAAA,CAAQpC,YAAA,CAAa,UAAU;EAC9C,OAAO,CAAC,EAAEssD,QAAA,IAAY,CAACxO,KAAA,CAAMsP,QAAA,CAASd,QAAA,EAAU,EAAE,CAAC;AACrD;AAKA,SAASJ,iBAAiB9pD,OAAA,EAAS;EACjC,IAAI,CAAC+qD,gBAAA,CAAiB/qD,OAAO,GAAG;IAC9B,OAAO;EACT;EAEA,MAAMkqD,QAAA,GAAWc,QAAA,CAAShrD,OAAA,CAAQpC,YAAA,CAAa,UAAU,KAAK,IAAI,EAAE;EACpE,OAAO89C,KAAA,CAAMwO,QAAQ,IAAI,KAAKA,QAAA;AAChC;AAEA,SAASD,yBAAyBjqD,OAAA,EAAS;EACzC,IAAI+pD,QAAA,GAAW/pD,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY;EAC5C,IAAIoqE,SAAA,GAAYlB,QAAA,KAAa,WAAW/pD,OAAA,CAAQpY,IAAA;EAChD,OAAOqjE,SAAA,KAAc,UAAUA,SAAA,KAAc,cAAclB,QAAA,KAAa,YAAYA,QAAA,KAAa;AACnG;AAKA,SAASK,uBAAuBpqD,OAAA,EAAS;EAEvC,IAAI4qD,aAAA,CAAc5qD,OAAO,GAAG;IAC1B,OAAO;EACT;EACA,OAAO2qD,mBAAA,CAAoB3qD,OAAO,KAAK8qD,gBAAA,CAAiB9qD,OAAO,KAAKA,OAAA,CAAQspD,YAAA,CAAa,iBAAiB,KAAKyB,gBAAA,CAAiB/qD,OAAO;AACzI;AAEA,SAAS6pD,UAAU52D,IAAA,EAAM;EAEvB,OAAOA,IAAA,CAAKi4D,aAAA,IAAiBj4D,IAAA,CAAKi4D,aAAA,CAAcC,WAAA,IAAe34D,MAAA;AACjE;AASA,IAAM44D,SAAA,GAAN,MAAgB;EAAA;EAEd,IAAI1F,QAAA,EAAU;IACZ,OAAO,KAAK2F,QAAA;EACd;EACA,IAAI3F,QAAQ5kE,KAAA,EAAO;IACjB,KAAKuqE,QAAA,GAAWvqE,KAAA;IAChB,IAAI,KAAKwqE,YAAA,IAAgB,KAAKC,UAAA,EAAY;MACxC,KAAKC,qBAAA,CAAsB1qE,KAAA,EAAO,KAAKwqE,YAAY;MACnD,KAAKE,qBAAA,CAAsB1qE,KAAA,EAAO,KAAKyqE,UAAU;IACnD;EACF;EACAxrE,YAAY0rE,QAAA,EAAUC,QAAA,EAAU1N,OAAA,EAASpyC,YAAW+/C,YAAA,GAAe,OAAO;IACxE,KAAKF,QAAA,GAAWA,QAAA;IAChB,KAAKC,QAAA,GAAWA,QAAA;IAChB,KAAK1N,OAAA,GAAUA,OAAA;IACf,KAAKpyC,SAAA,GAAYA;IACjB,KAAKggD,YAAA,GAAe;IAEpB,KAAKC,mBAAA,GAAsB,MAAM,KAAKC,wBAAA,CAAyB;IAC/D,KAAKC,iBAAA,GAAoB,MAAM,KAAKC,yBAAA,CAA0B;IAC9D,KAAKX,QAAA,GAAW;IAChB,IAAI,CAACM,YAAA,EAAc;MACjB,KAAKM,aAAA,CAAc;IACrB;EACF;EAAA;EAEArmD,QAAA,EAAU;IACR,MAAMsmD,WAAA,GAAc,KAAKZ,YAAA;IACzB,MAAMa,SAAA,GAAY,KAAKZ,UAAA;IACvB,IAAIW,WAAA,EAAa;MACfA,WAAA,CAAYv1D,mBAAA,CAAoB,SAAS,KAAKk1D,mBAAmB;MACjEK,WAAA,CAAYn7D,MAAA,CAAO;IACrB;IACA,IAAIo7D,SAAA,EAAW;MACbA,SAAA,CAAUx1D,mBAAA,CAAoB,SAAS,KAAKo1D,iBAAiB;MAC7DI,SAAA,CAAUp7D,MAAA,CAAO;IACnB;IACA,KAAKu6D,YAAA,GAAe,KAAKC,UAAA,GAAa;IACtC,KAAKK,YAAA,GAAe;EACtB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAK,cAAA,EAAgB;IAEd,IAAI,KAAKL,YAAA,EAAc;MACrB,OAAO;IACT;IACA,KAAK5N,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,IAAI,CAAC,KAAK69D,YAAA,EAAc;QACtB,KAAKA,YAAA,GAAe,KAAKc,aAAA,CAAc;QACvC,KAAKd,YAAA,CAAa33D,gBAAA,CAAiB,SAAS,KAAKk4D,mBAAmB;MACtE;MACA,IAAI,CAAC,KAAKN,UAAA,EAAY;QACpB,KAAKA,UAAA,GAAa,KAAKa,aAAA,CAAc;QACrC,KAAKb,UAAA,CAAW53D,gBAAA,CAAiB,SAAS,KAAKo4D,iBAAiB;MAClE;IACF,CAAC;IACD,IAAI,KAAKN,QAAA,CAASl4D,UAAA,EAAY;MAC5B,KAAKk4D,QAAA,CAASl4D,UAAA,CAAWgT,YAAA,CAAa,KAAK+kD,YAAA,EAAc,KAAKG,QAAQ;MACtE,KAAKA,QAAA,CAASl4D,UAAA,CAAWgT,YAAA,CAAa,KAAKglD,UAAA,EAAY,KAAKE,QAAA,CAAS5kD,WAAW;MAChF,KAAK+kD,YAAA,GAAe;IACtB;IACA,OAAO,KAAKA,YAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAS,6BAA6BtnE,OAAA,EAAS;IACpC,OAAO,IAAI8N,OAAA,CAAQC,OAAA,IAAW;MAC5B,KAAKw5D,gBAAA,CAAiB,MAAMx5D,OAAA,CAAQ,KAAKy5D,mBAAA,CAAoBxnE,OAAO,CAAC,CAAC;IACxE,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAynE,mCAAmCznE,OAAA,EAAS;IAC1C,OAAO,IAAI8N,OAAA,CAAQC,OAAA,IAAW;MAC5B,KAAKw5D,gBAAA,CAAiB,MAAMx5D,OAAA,CAAQ,KAAKk5D,yBAAA,CAA0BjnE,OAAO,CAAC,CAAC;IAC9E,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA0nE,kCAAkC1nE,OAAA,EAAS;IACzC,OAAO,IAAI8N,OAAA,CAAQC,OAAA,IAAW;MAC5B,KAAKw5D,gBAAA,CAAiB,MAAMx5D,OAAA,CAAQ,KAAKg5D,wBAAA,CAAyB/mE,OAAO,CAAC,CAAC;IAC7E,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA2nE,mBAAmBC,KAAA,EAAO;IAExB,MAAMC,OAAA,GAAU,KAAKnB,QAAA,CAASppD,gBAAA,CAAiB,qBAAqBsqD,KAAK,qBAA0BA,KAAK,iBAAsBA,KAAK,GAAG;IACtI,IAAI,OAAOnrE,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,SAASyzB,CAAA,GAAI,GAAGA,CAAA,GAAI23C,OAAA,CAAQ/qE,MAAA,EAAQozB,CAAA,IAAK;QAEvC,IAAI23C,OAAA,CAAQ33C,CAAC,EAAEq0C,YAAA,CAAa,aAAaqD,KAAK,EAAE,GAAG;UACjDn8C,OAAA,CAAQhf,IAAA,CAAK,gDAAgDm7D,KAAK,yBAA8BA,KAAK,iEAAsEC,OAAA,CAAQ33C,CAAC,CAAC;QACvL,WAAW23C,OAAA,CAAQ33C,CAAC,EAAEq0C,YAAA,CAAa,oBAAoBqD,KAAK,EAAE,GAAG;UAC/Dn8C,OAAA,CAAQhf,IAAA,CAAK,uDAAuDm7D,KAAK,yBAA8BA,KAAK,iEAAsEC,OAAA,CAAQ33C,CAAC,CAAC;QAC9L;MACF;IACF;IACA,IAAI03C,KAAA,IAAS,SAAS;MACpB,OAAOC,OAAA,CAAQ/qE,MAAA,GAAS+qE,OAAA,CAAQ,CAAC,IAAI,KAAKC,wBAAA,CAAyB,KAAKpB,QAAQ;IAClF;IACA,OAAOmB,OAAA,CAAQ/qE,MAAA,GAAS+qE,OAAA,CAAQA,OAAA,CAAQ/qE,MAAA,GAAS,CAAC,IAAI,KAAKirE,uBAAA,CAAwB,KAAKrB,QAAQ;EAClG;EAAA;AAAA;AAAA;AAAA;EAKAc,oBAAoBxnE,OAAA,EAAS;IAE3B,MAAMgoE,iBAAA,GAAoB,KAAKtB,QAAA,CAAS9tD,aAAA,CAAc,wCAA6C;IACnG,IAAIovD,iBAAA,EAAmB;MAErB,KAAK,OAAOvrE,SAAA,KAAc,eAAeA,SAAA,KAAcurE,iBAAA,CAAkBzD,YAAA,CAAa,mBAAmB,GAAG;QAC1G94C,OAAA,CAAQhf,IAAA,CAAK,2IAAqJu7D,iBAAiB;MACrL;MAGA,KAAK,OAAOvrE,SAAA,KAAc,eAAeA,SAAA,KAAc,CAAC,KAAKkqE,QAAA,CAASvB,WAAA,CAAY4C,iBAAiB,GAAG;QACpGv8C,OAAA,CAAQhf,IAAA,CAAK,0DAA0Du7D,iBAAiB;MAC1F;MACA,IAAI,CAAC,KAAKrB,QAAA,CAASvB,WAAA,CAAY4C,iBAAiB,GAAG;QACjD,MAAMC,cAAA,GAAiB,KAAKH,wBAAA,CAAyBE,iBAAiB;QACtEC,cAAA,EAAgBC,KAAA,CAAMloE,OAAO;QAC7B,OAAO,CAAC,CAACioE,cAAA;MACX;MACAD,iBAAA,CAAkBE,KAAA,CAAMloE,OAAO;MAC/B,OAAO;IACT;IACA,OAAO,KAAKinE,yBAAA,CAA0BjnE,OAAO;EAC/C;EAAA;AAAA;AAAA;AAAA;EAKAinE,0BAA0BjnE,OAAA,EAAS;IACjC,MAAMgoE,iBAAA,GAAoB,KAAKL,kBAAA,CAAmB,OAAO;IACzD,IAAIK,iBAAA,EAAmB;MACrBA,iBAAA,CAAkBE,KAAA,CAAMloE,OAAO;IACjC;IACA,OAAO,CAAC,CAACgoE,iBAAA;EACX;EAAA;AAAA;AAAA;AAAA;EAKAjB,yBAAyB/mE,OAAA,EAAS;IAChC,MAAMgoE,iBAAA,GAAoB,KAAKL,kBAAA,CAAmB,KAAK;IACvD,IAAIK,iBAAA,EAAmB;MACrBA,iBAAA,CAAkBE,KAAA,CAAMloE,OAAO;IACjC;IACA,OAAO,CAAC,CAACgoE,iBAAA;EACX;EAAA;AAAA;AAAA;EAIAG,YAAA,EAAc;IACZ,OAAO,KAAKtB,YAAA;EACd;EAAA;EAEAiB,yBAAyBl2C,IAAA,EAAM;IAC7B,IAAI,KAAK+0C,QAAA,CAASvB,WAAA,CAAYxzC,IAAI,KAAK,KAAK+0C,QAAA,CAAShC,UAAA,CAAW/yC,IAAI,GAAG;MACrE,OAAOA,IAAA;IACT;IACA,MAAMQ,QAAA,GAAWR,IAAA,CAAKQ,QAAA;IACtB,SAASlC,CAAA,GAAI,GAAGA,CAAA,GAAIkC,QAAA,CAASt1B,MAAA,EAAQozB,CAAA,IAAK;MACxC,MAAMk4C,aAAA,GAAgBh2C,QAAA,CAASlC,CAAC,EAAEvY,QAAA,KAAa,KAAKkP,SAAA,CAAUhP,YAAA,GAAe,KAAKiwD,wBAAA,CAAyB11C,QAAA,CAASlC,CAAC,CAAC,IAAI;MAC1H,IAAIk4C,aAAA,EAAe;QACjB,OAAOA,aAAA;MACT;IACF;IACA,OAAO;EACT;EAAA;EAEAL,wBAAwBn2C,IAAA,EAAM;IAC5B,IAAI,KAAK+0C,QAAA,CAASvB,WAAA,CAAYxzC,IAAI,KAAK,KAAK+0C,QAAA,CAAShC,UAAA,CAAW/yC,IAAI,GAAG;MACrE,OAAOA,IAAA;IACT;IAEA,MAAMQ,QAAA,GAAWR,IAAA,CAAKQ,QAAA;IACtB,SAASlC,CAAA,GAAIkC,QAAA,CAASt1B,MAAA,GAAS,GAAGozB,CAAA,IAAK,GAAGA,CAAA,IAAK;MAC7C,MAAMk4C,aAAA,GAAgBh2C,QAAA,CAASlC,CAAC,EAAEvY,QAAA,KAAa,KAAKkP,SAAA,CAAUhP,YAAA,GAAe,KAAKkwD,uBAAA,CAAwB31C,QAAA,CAASlC,CAAC,CAAC,IAAI;MACzH,IAAIk4C,aAAA,EAAe;QACjB,OAAOA,aAAA;MACT;IACF;IACA,OAAO;EACT;EAAA;EAEAf,cAAA,EAAgB;IACd,MAAM/pC,MAAA,GAAS,KAAKzW,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IACjD,KAAKs4D,qBAAA,CAAsB,KAAKH,QAAA,EAAUhpC,MAAM;IAChDA,MAAA,CAAOnb,SAAA,CAAUrW,GAAA,CAAI,qBAAqB;IAC1CwxB,MAAA,CAAOnb,SAAA,CAAUrW,GAAA,CAAI,uBAAuB;IAC5CwxB,MAAA,CAAOvf,YAAA,CAAa,eAAe,MAAM;IACzC,OAAOuf,MAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAmpC,sBAAsB4B,SAAA,EAAW/qC,MAAA,EAAQ;IAGvC+qC,SAAA,GAAY/qC,MAAA,CAAOvf,YAAA,CAAa,YAAY,GAAG,IAAIuf,MAAA,CAAOxf,eAAA,CAAgB,UAAU;EACtF;EAAA;AAAA;AAAA;AAAA;EAKAwqD,cAAc3H,OAAA,EAAS;IACrB,IAAI,KAAK4F,YAAA,IAAgB,KAAKC,UAAA,EAAY;MACxC,KAAKC,qBAAA,CAAsB9F,OAAA,EAAS,KAAK4F,YAAY;MACrD,KAAKE,qBAAA,CAAsB9F,OAAA,EAAS,KAAK6F,UAAU;IACrD;EACF;EAAA;EAEAe,iBAAiBlpE,EAAA,EAAI;IACnB,IAAI,KAAK46D,OAAA,CAAQsP,QAAA,EAAU;MACzBlqE,EAAA,CAAG;IACL,OAAO;MACL,KAAK46D,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAUznC,EAAE;IAClD;EACF;AACF;AAIA,IAAMoqE,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBztE,YAAY2rE,QAAA,EAAU1N,OAAA,EAASpyC,YAAW;IACxC,KAAK8/C,QAAA,GAAWA,QAAA;IAChB,KAAK1N,OAAA,GAAUA,OAAA;IACf,KAAKpyC,SAAA,GAAYA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAnG,OAAOzF,OAAA,EAASytD,oBAAA,GAAuB,OAAO;IAC5C,OAAO,IAAIrC,SAAA,CAAUprD,OAAA,EAAS,KAAK0rD,QAAA,EAAU,KAAK1N,OAAA,EAAS,KAAKpyC,SAAA,EAAW6hD,oBAAoB;EACjG;AAaF;AAXID,iBAAA,CAAKljE,IAAA,GAAO,SAASojE,yBAAyB/oE,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK6oE,iBAAA,EAAqBhjE,QAAA,CAAS+/D,oBAAoB,GAAM//D,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAQ,CAAC;AACrH;AAGAq5D,iBAAA,CAAK/iE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO2nE,iBAAA;EACP7iE,OAAA,EAAS6iE,iBAAA,CAAiBljE,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AA1BL,IAAMu2D,gBAAA,GAANH,iBAAA;AAAA,CA6BC,MAAM;EACL,CAAC,OAAOhsE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8iE,gBAAA,EAAkB,CAAC;IACzF/lE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM2iE;EACR,GAAG;IACD3iE,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,IAAMy5D,aAAA,GAAN,MAAMA,aAAA,CAAa;EAAA;EAEjB,IAAIlI,QAAA,EAAU;IACZ,OAAO,KAAKmI,SAAA,EAAWnI,OAAA,IAAW;EACpC;EACA,IAAIA,QAAQ5kE,KAAA,EAAO;IACjB,IAAI,KAAK+sE,SAAA,EAAW;MAClB,KAAKA,SAAA,CAAUnI,OAAA,GAAU5kE,KAAA;IAC3B;EACF;EACAf,YAAYg+D,WAAA,EAAa+P,iBAAA,EAKzBliD,YAAW;IACT,KAAKmyC,WAAA,GAAcA,WAAA;IACnB,KAAK+P,iBAAA,GAAoBA,iBAAA;IAEzB,KAAKC,yBAAA,GAA4B;IACjC,MAAMr2D,QAAA,GAAWnM,MAAA,CAAOqrD,QAAQ;IAChC,IAAIl/C,QAAA,CAASq+C,SAAA,EAAW;MACtB,KAAK8X,SAAA,GAAY,KAAKC,iBAAA,CAAkBroD,MAAA,CAAO,KAAKs4C,WAAA,CAAY/S,aAAA,EAAe,IAAI;IACrF;EACF;EACAnpC,YAAA,EAAc;IACZ,KAAKgsD,SAAA,EAAWjoD,OAAA,CAAQ;IAGxB,IAAI,KAAKmoD,yBAAA,EAA2B;MAClC,KAAKA,yBAAA,CAA0Bd,KAAA,CAAM;MACrC,KAAKc,yBAAA,GAA4B;IACnC;EACF;EACAlgB,mBAAA,EAAqB;IACnB,KAAKggB,SAAA,EAAW5B,aAAA,CAAc;IAC9B,IAAI,KAAK+B,WAAA,EAAa;MACpB,KAAKC,aAAA,CAAc;IACrB;EACF;EACAC,UAAA,EAAY;IACV,IAAI,KAAKL,SAAA,IAAa,CAAC,KAAKA,SAAA,CAAUX,WAAA,CAAY,GAAG;MACnD,KAAKW,SAAA,CAAU5B,aAAA,CAAc;IAC/B;EACF;EACArkC,YAAYC,OAAA,EAAS;IACnB,MAAMsmC,iBAAA,GAAoBtmC,OAAA,CAAQ,aAAa;IAC/C,IAAIsmC,iBAAA,IAAqB,CAACA,iBAAA,CAAkBrmC,WAAA,IAAe,KAAKkmC,WAAA,IAAe,KAAKH,SAAA,EAAWX,WAAA,CAAY,GAAG;MAC5G,KAAKe,aAAA,CAAc;IACrB;EACF;EACAA,cAAA,EAAgB;IACd,KAAKF,yBAAA,GAA4B3U,iCAAA,CAAkC;IACnE,KAAKyU,SAAA,EAAWxB,4BAAA,CAA6B;EAC/C;AAmBF;AAjBIuB,aAAA,CAAKtjE,IAAA,GAAO,SAAS8jE,qBAAqBzpE,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKipE,aAAA,EAAiB7hB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB4hB,gBAAgB,GAAM5hB,iBAAA,CAAkB53C,QAAQ,CAAC;AAC5I;AAGAy5D,aAAA,CAAKrkC,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMgmE,aAAA;EACNnkC,SAAA,EAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;EACpCC,MAAA,EAAQ;IACNg8B,OAAA,EAAS,CAAI/Y,UAAA,CAAaC,0BAAA,EAA4B,gBAAgB,WAAWC,gBAAgB;IACjGmhB,WAAA,EAAa,CAAIrhB,UAAA,CAAaC,0BAAA,EAA4B,2BAA2B,eAAeC,gBAAgB;EACtH;EACAjjB,QAAA,EAAU,CAAC,cAAc;EACzBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BhjB,oBAAoB;AACjE,CAAC;AAvEL,IAAMukC,YAAA,GAANT,aAAA;AAAA,CA0EC,MAAM;EACL,CAAC,OAAOpsE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwjE,YAAA,EAAc,CAAC;IACrFzmE,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM+lE;EACR,GAAG;IACD/lE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACFuxD,OAAA,EAAS,CAAC;MACR99D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDmhB,WAAA,EAAa,CAAC;MACZpmE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAQH,IAAMyhB,qBAAA,GAAN,cAAoClD,SAAA,CAAU;EAAA;EAE5C,IAAI1F,QAAA,EAAU;IACZ,OAAO,KAAK2F,QAAA;EACd;EACA,IAAI3F,QAAQ5kE,KAAA,EAAO;IACjB,KAAKuqE,QAAA,GAAWvqE,KAAA;IAChB,IAAI,KAAKuqE,QAAA,EAAU;MACjB,KAAKkD,iBAAA,CAAkBC,QAAA,CAAS,IAAI;IACtC,OAAO;MACL,KAAKD,iBAAA,CAAkBz9C,UAAA,CAAW,IAAI;IACxC;EACF;EACA/wB,YAAY0rE,QAAA,EAAUC,QAAA,EAAU1N,OAAA,EAASpyC,YAAW2iD,iBAAA,EAAmBE,cAAA,EAAgB/nC,MAAA,EAAQ;IAC7F,MAAM+kC,QAAA,EAAUC,QAAA,EAAU1N,OAAA,EAASpyC,YAAW8a,MAAA,CAAO6N,KAAK;IAC1D,KAAKg6B,iBAAA,GAAoBA,iBAAA;IACzB,KAAKE,cAAA,GAAiBA,cAAA;IACtB,KAAKF,iBAAA,CAAkBC,QAAA,CAAS,IAAI;EACtC;EAAA;EAEA5oD,QAAA,EAAU;IACR,KAAK2oD,iBAAA,CAAkBz9C,UAAA,CAAW,IAAI;IACtC,MAAMlL,OAAA,CAAQ;EAChB;EAAA;EAEA8oD,QAAA,EAAU;IACR,KAAKD,cAAA,CAAeE,YAAA,CAAa,IAAI;IACrC,KAAKtB,aAAA,CAAc,IAAI;EACzB;EAAA;EAEAuB,SAAA,EAAW;IACT,KAAKH,cAAA,CAAeI,UAAA,CAAW,IAAI;IACnC,KAAKxB,aAAA,CAAc,KAAK;EAC1B;AACF;AAGA,IAAMyB,yBAAA,GAA4B,IAAI5+D,cAAA,CAAe,2BAA2B;AAMhF,IAAM6+D,mCAAA,GAAN,MAA0C;EACxChvE,YAAA,EAAc;IAEZ,KAAKivE,SAAA,GAAY;EACnB;EAAA;EAEAL,aAAad,SAAA,EAAW;IAEtB,IAAI,KAAKmB,SAAA,EAAW;MAClBnB,SAAA,CAAUjiD,SAAA,CAAUjV,mBAAA,CAAoB,SAAS,KAAKq4D,SAAA,EAAW,IAAI;IACvE;IACA,KAAKA,SAAA,GAAYl8B,CAAA,IAAK,KAAKm8B,UAAA,CAAWpB,SAAA,EAAW/6B,CAAC;IAClD+6B,SAAA,CAAU7P,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACxCogE,SAAA,CAAUjiD,SAAA,CAAUjY,gBAAA,CAAiB,SAAS,KAAKq7D,SAAA,EAAW,IAAI;IACpE,CAAC;EACH;EAAA;EAEAH,WAAWhB,SAAA,EAAW;IACpB,IAAI,CAAC,KAAKmB,SAAA,EAAW;MACnB;IACF;IACAnB,SAAA,CAAUjiD,SAAA,CAAUjV,mBAAA,CAAoB,SAAS,KAAKq4D,SAAA,EAAW,IAAI;IACrE,KAAKA,SAAA,GAAY;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAC,WAAWpB,SAAA,EAAW9jE,KAAA,EAAO;IAC3B,MAAMiT,MAAA,GAASjT,KAAA,CAAMiT,MAAA;IACrB,MAAMkyD,aAAA,GAAgBrB,SAAA,CAAUpC,QAAA;IAGhC,IAAIzuD,MAAA,IAAU,CAACkyD,aAAA,CAAcC,QAAA,CAASnyD,MAAM,KAAK,CAACA,MAAA,CAAOoyD,OAAA,GAAU,sBAAsB,GAAG;MAI1FrvB,UAAA,CAAW,MAAM;QAEf,IAAI8tB,SAAA,CAAUnI,OAAA,IAAW,CAACwJ,aAAA,CAAcC,QAAA,CAAStB,SAAA,CAAUjiD,SAAA,CAAUytC,aAAa,GAAG;UACnFwU,SAAA,CAAU7B,yBAAA,CAA0B;QACtC;MACF,CAAC;IACH;EACF;AACF;AAGA,IAAMqD,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBtvE,YAAA,EAAc;IAGZ,KAAKuvE,eAAA,GAAkB,EAAC;EAC1B;EAAA;AAAA;AAAA;AAAA;EAKAd,SAASX,SAAA,EAAW;IAElB,KAAKyB,eAAA,GAAkB,KAAKA,eAAA,CAAgBvsE,MAAA,CAAOwsE,EAAA,IAAMA,EAAA,KAAO1B,SAAS;IACzE,IAAI2B,KAAA,GAAQ,KAAKF,eAAA;IACjB,IAAIE,KAAA,CAAM3tE,MAAA,EAAQ;MAChB2tE,KAAA,CAAMA,KAAA,CAAM3tE,MAAA,GAAS,CAAC,EAAE+sE,QAAA,CAAS;IACnC;IACAY,KAAA,CAAMruE,IAAA,CAAK0sE,SAAS;IACpBA,SAAA,CAAUa,OAAA,CAAQ;EACpB;EAAA;AAAA;AAAA;AAAA;EAKA59C,WAAW+8C,SAAA,EAAW;IACpBA,SAAA,CAAUe,QAAA,CAAS;IACnB,MAAMY,KAAA,GAAQ,KAAKF,eAAA;IACnB,MAAMr6C,CAAA,GAAIu6C,KAAA,CAAM/uE,OAAA,CAAQotE,SAAS;IACjC,IAAI54C,CAAA,KAAM,IAAI;MACZu6C,KAAA,CAAM7pE,MAAA,CAAOsvB,CAAA,EAAG,CAAC;MACjB,IAAIu6C,KAAA,CAAM3tE,MAAA,EAAQ;QAChB2tE,KAAA,CAAMA,KAAA,CAAM3tE,MAAA,GAAS,CAAC,EAAE6sE,OAAA,CAAQ;MAClC;IACF;EACF;AAaF;AAXIW,iBAAA,CAAK/kE,IAAA,GAAO,SAASmlE,yBAAyB9qE,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK0qE,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAK5kE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOwpE,iBAAA;EACP1kE,OAAA,EAAS0kE,iBAAA,CAAiB/kE,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AA7CL,IAAMs4D,gBAAA,GAANL,iBAAA;AAAA,CAgDC,MAAM;EACL,CAAC,OAAO7tE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6kE,gBAAA,EAAkB,CAAC;IACzF9nE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAMu4D,6BAAA,GAAN,MAAMA,6BAAA,CAA6B;EACjC5vE,YAAY2rE,QAAA,EAAU1N,OAAA,EAASuQ,iBAAA,EAAmB3iD,YAAW6iD,cAAA,EAAgB;IAC3E,KAAK/C,QAAA,GAAWA,QAAA;IAChB,KAAK1N,OAAA,GAAUA,OAAA;IACf,KAAKuQ,iBAAA,GAAoBA,iBAAA;IACzB,KAAK3iD,SAAA,GAAYA;IAEjB,KAAK6iD,cAAA,GAAiBA,cAAA,IAAkB,IAAIM,mCAAA,CAAoC;EAClF;EACAtpD,OAAOzF,OAAA,EAAS0mB,MAAA,GAAS;IACvB6N,KAAA,EAAO;EACT,GAAG;IACD,IAAIq7B,YAAA;IACJ,IAAI,OAAOlpC,MAAA,KAAW,WAAW;MAC/BkpC,YAAA,GAAe;QACbr7B,KAAA,EAAO7N;MACT;IACF,OAAO;MACLkpC,YAAA,GAAelpC,MAAA;IACjB;IACA,OAAO,IAAI4nC,qBAAA,CAAsBtuD,OAAA,EAAS,KAAK0rD,QAAA,EAAU,KAAK1N,OAAA,EAAS,KAAKpyC,SAAA,EAAW,KAAK2iD,iBAAA,EAAmB,KAAKE,cAAA,EAAgBmB,YAAY;EAClJ;AAaF;AAXID,6BAAA,CAAKrlE,IAAA,GAAO,SAASulE,qCAAqClrE,CAAA,EAAG;EAC3D,OAAO,KAAKA,CAAA,IAAKgrE,6BAAA,EAAiCnlE,QAAA,CAAS+/D,oBAAoB,GAAM//D,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAASklE,gBAAgB,GAAMllE,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAASskE,yBAAA,EAA2B,CAAC,CAAC;AAC3M;AAGAa,6BAAA,CAAKllE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO8pE,6BAAA;EACPhlE,OAAA,EAASglE,6BAAA,CAA6BrlE,IAAA;EACtC8M,UAAA,EAAY;AACd,CAAC;AAhCL,IAAM04D,4BAAA,GAANH,6BAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOnuE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBilE,4BAAA,EAA8B,CAAC;IACrGloE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM2iE;EACR,GAAG;IACD3iE,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM8nE;EACR,GAAG;IACD9nE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACu6D,yBAAyB;IAClC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,SAASiB,gCAAgChmE,KAAA,EAAO;EAM9C,OAAOA,KAAA,CAAMimE,OAAA,KAAY,KAAKjmE,KAAA,CAAMkmE,MAAA,KAAW;AACjD;AAEA,SAASC,iCAAiCnmE,KAAA,EAAO;EAC/C,MAAMomE,KAAA,GAAQpmE,KAAA,CAAMqmE,OAAA,IAAWrmE,KAAA,CAAMqmE,OAAA,CAAQ,CAAC,KAAKrmE,KAAA,CAAMsmE,cAAA,IAAkBtmE,KAAA,CAAMsmE,cAAA,CAAe,CAAC;EAKjG,OAAO,CAAC,CAACF,KAAA,IAASA,KAAA,CAAMG,UAAA,KAAe,OAAOH,KAAA,CAAMI,OAAA,IAAW,QAAQJ,KAAA,CAAMI,OAAA,KAAY,OAAOJ,KAAA,CAAMK,OAAA,IAAW,QAAQL,KAAA,CAAMK,OAAA,KAAY;AAC7I;AAMA,IAAMC,+BAAA,GAAkC,IAAIvgE,cAAA,CAAe,qCAAqC;AAiBhG,IAAMwgE,uCAAA,GAA0C;EAC9CC,UAAA,EAAY,CAACzW,GAAA,EAAKD,OAAA,EAASiB,QAAA,EAAUD,IAAA,EAAMjB,KAAK;AAClD;AAQA,IAAM4W,eAAA,GAAkB;AAKxB,IAAMC,4BAAA,GAA+BtZ,+BAAA,CAAgC;EACnEuZ,OAAA,EAAS;EACT71C,OAAA,EAAS;AACX,CAAC;AAeD,IAAM81C,sBAAA,GAAN,MAAMA,sBAAA,CAAsB;EAAA;EAE1B,IAAIC,mBAAA,EAAqB;IACvB,OAAO,KAAKC,SAAA,CAAUnwE,KAAA;EACxB;EACAf,YAAYg/D,SAAA,EAAWlzD,MAAA,EAAQ8G,WAAU5N,OAAA,EAAS;IAChD,KAAKg6D,SAAA,GAAYA,SAAA;IAKjB,KAAKmS,iBAAA,GAAoB;IAEzB,KAAKD,SAAA,GAAY,IAAIzsC,eAAA,CAAgB,IAAI;IAKzC,KAAK2sC,YAAA,GAAe;IAKpB,KAAKC,UAAA,GAAarnE,KAAA,IAAS;MAGzB,IAAI,KAAKsnE,QAAA,EAAUV,UAAA,EAAY9wC,IAAA,CAAKgoC,OAAA,IAAWA,OAAA,KAAY99D,KAAA,CAAM89D,OAAO,GAAG;QACzE;MACF;MACA,KAAKoJ,SAAA,CAAUpkE,IAAA,CAAK,UAAU;MAC9B,KAAKqkE,iBAAA,GAAoB3X,eAAA,CAAgBxvD,KAAK;IAChD;IAKA,KAAKunE,YAAA,GAAevnE,KAAA,IAAS;MAI3B,IAAIwnE,IAAA,CAAKC,GAAA,CAAI,IAAI,KAAKL,YAAA,GAAeP,eAAA,EAAiB;QACpD;MACF;MAGA,KAAKK,SAAA,CAAUpkE,IAAA,CAAKkjE,+BAAA,CAAgChmE,KAAK,IAAI,aAAa,OAAO;MACjF,KAAKmnE,iBAAA,GAAoB3X,eAAA,CAAgBxvD,KAAK;IAChD;IAKA,KAAK0nE,aAAA,GAAgB1nE,KAAA,IAAS;MAG5B,IAAImmE,gCAAA,CAAiCnmE,KAAK,GAAG;QAC3C,KAAKknE,SAAA,CAAUpkE,IAAA,CAAK,UAAU;QAC9B;MACF;MAGA,KAAKskE,YAAA,GAAeI,IAAA,CAAKC,GAAA,CAAI;MAC7B,KAAKP,SAAA,CAAUpkE,IAAA,CAAK,OAAO;MAC3B,KAAKqkE,iBAAA,GAAoB3X,eAAA,CAAgBxvD,KAAK;IAChD;IACA,KAAKsnE,QAAA,GAAW1kE,cAAA,CAAAA,cAAA,KACX+jE,uCAAA,GACA3rE,OAAA;IAGL,KAAK2sE,gBAAA,GAAmB,KAAKT,SAAA,CAAUtnE,IAAA,CAAK+2D,IAAA,CAAK,CAAC,CAAC;IACnD,KAAKiR,eAAA,GAAkB,KAAKD,gBAAA,CAAiB/nE,IAAA,CAAKioE,oBAAA,CAAqB,CAAC;IAGxE,IAAI7S,SAAA,CAAUhJ,SAAA,EAAW;MACvBlqD,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;QAC7BkF,UAASgB,gBAAA,CAAiB,WAAW,KAAKy9D,UAAA,EAAYP,4BAA4B;QAClFl+D,UAASgB,gBAAA,CAAiB,aAAa,KAAK29D,YAAA,EAAcT,4BAA4B;QACtFl+D,UAASgB,gBAAA,CAAiB,cAAc,KAAK89D,aAAA,EAAeZ,4BAA4B;MAC1F,CAAC;IACH;EACF;EACAhvD,YAAA,EAAc;IACZ,KAAKovD,SAAA,CAAU1iE,QAAA,CAAS;IACxB,IAAI,KAAKwwD,SAAA,CAAUhJ,SAAA,EAAW;MAC5BpjD,QAAA,CAASgE,mBAAA,CAAoB,WAAW,KAAKy6D,UAAA,EAAYP,4BAA4B;MACrFl+D,QAAA,CAASgE,mBAAA,CAAoB,aAAa,KAAK26D,YAAA,EAAcT,4BAA4B;MACzFl+D,QAAA,CAASgE,mBAAA,CAAoB,cAAc,KAAK86D,aAAA,EAAeZ,4BAA4B;IAC7F;EACF;AAaF;AAXIE,sBAAA,CAAKzmE,IAAA,GAAO,SAASunE,8BAA8BltE,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAKosE,sBAAA,EAA0BvmE,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAASimE,+BAAA,EAAiC,CAAC,CAAC;AAClK;AAGAM,sBAAA,CAAKtmE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOkrE,sBAAA;EACPpmE,OAAA,EAASomE,sBAAA,CAAsBzmE,IAAA;EAC/B8M,UAAA,EAAY;AACd,CAAC;AApGL,IAAM06D,qBAAA,GAANf,sBAAA;AAAA,CAuGC,MAAM;EACL,CAAC,OAAOvvE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBinE,qBAAA,EAAuB,CAAC;IAC9FlqE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAMwb,QAAA;IACN/O,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACk8D,+BAA+B;IACxC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMsB,4BAAA,GAA+B,IAAI7hE,cAAA,CAAe,wBAAwB;EAC9EkH,UAAA,EAAY;EACZzM,OAAA,EAASqnE;AACX,CAAC;AAED,SAASA,qCAAA,EAAuC;EAC9C,OAAO;AACT;AAEA,IAAMC,8BAAA,GAAiC,IAAI/hE,cAAA,CAAe,gCAAgC;AAC1F,IAAIgiE,SAAA,GAAY;AAChB,IAAMC,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClBpyE,YAAYqyE,YAAA,EAAcpU,OAAA,EAASpyC,YAAWymD,eAAA,EAAiB;IAC7D,KAAKrU,OAAA,GAAUA,OAAA;IACf,KAAKqU,eAAA,GAAkBA,eAAA;IAIvB,KAAKzmD,SAAA,GAAYA;IACjB,KAAK0mD,YAAA,GAAeF,YAAA,IAAgB,KAAKG,kBAAA,CAAmB;EAC9D;EACAC,SAASxpE,OAAA,KAAYuL,IAAA,EAAM;IACzB,MAAMk+D,cAAA,GAAiB,KAAKJ,eAAA;IAC5B,IAAIK,UAAA;IACJ,IAAIC,QAAA;IACJ,IAAIp+D,IAAA,CAAK1S,MAAA,KAAW,KAAK,OAAO0S,IAAA,CAAK,CAAC,MAAM,UAAU;MACpDo+D,QAAA,GAAWp+D,IAAA,CAAK,CAAC;IACnB,OAAO;MACL,CAACm+D,UAAA,EAAYC,QAAQ,IAAIp+D,IAAA;IAC3B;IACA,KAAKuN,KAAA,CAAM;IACX8wD,YAAA,CAAa,KAAKC,gBAAgB;IAClC,IAAI,CAACH,UAAA,EAAY;MACfA,UAAA,GAAaD,cAAA,IAAkBA,cAAA,CAAeC,UAAA,GAAaD,cAAA,CAAeC,UAAA,GAAa;IACzF;IACA,IAAIC,QAAA,IAAY,QAAQF,cAAA,EAAgB;MACtCE,QAAA,GAAWF,cAAA,CAAeE,QAAA;IAC5B;IAEA,KAAKL,YAAA,CAAaxvD,YAAA,CAAa,aAAa4vD,UAAU;IACtD,IAAI,KAAKJ,YAAA,CAAajtD,EAAA,EAAI;MACxB,KAAKytD,wBAAA,CAAyB,KAAKR,YAAA,CAAajtD,EAAE;IACpD;IAMA,OAAO,KAAK24C,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MAC1C,IAAI,CAAC,KAAKslE,eAAA,EAAiB;QACzB,KAAKA,eAAA,GAAkB,IAAIlgE,OAAA,CAAQC,OAAA,IAAW,KAAKkgE,eAAA,GAAkBlgE,OAAO;MAC9E;MACA8/D,YAAA,CAAa,KAAKC,gBAAgB;MAClC,KAAKA,gBAAA,GAAmB9yB,UAAA,CAAW,MAAM;QACvC,KAAKuyB,YAAA,CAAa/vD,WAAA,GAAcvZ,OAAA;QAChC,IAAI,OAAO2pE,QAAA,KAAa,UAAU;UAChC,KAAKE,gBAAA,GAAmB9yB,UAAA,CAAW,MAAM,KAAKj+B,KAAA,CAAM,GAAG6wD,QAAQ;QACjE;QAGA,KAAKK,eAAA,GAAkB;QACvB,KAAKD,eAAA,GAAkB,KAAKC,eAAA,GAAkB;MAChD,GAAG,GAAG;MACN,OAAO,KAAKD,eAAA;IACd,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAjxD,MAAA,EAAQ;IACN,IAAI,KAAKwwD,YAAA,EAAc;MACrB,KAAKA,YAAA,CAAa/vD,WAAA,GAAc;IAClC;EACF;EACAV,YAAA,EAAc;IACZ+wD,YAAA,CAAa,KAAKC,gBAAgB;IAClC,KAAKP,YAAA,EAAcvhE,MAAA,CAAO;IAC1B,KAAKuhE,YAAA,GAAe;IACpB,KAAKU,eAAA,GAAkB;IACvB,KAAKD,eAAA,GAAkB,KAAKC,eAAA,GAAkB;EAChD;EACAT,mBAAA,EAAqB;IACnB,MAAMU,YAAA,GAAe;IACrB,MAAMC,gBAAA,GAAmB,KAAKtnD,SAAA,CAAUunD,sBAAA,CAAuBF,YAAY;IAC3E,MAAMG,MAAA,GAAS,KAAKxnD,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAEjD,SAAS+hB,CAAA,GAAI,GAAGA,CAAA,GAAIi+C,gBAAA,CAAiBrxE,MAAA,EAAQozB,CAAA,IAAK;MAChDi+C,gBAAA,CAAiBj+C,CAAC,EAAElkB,MAAA,CAAO;IAC7B;IACAqiE,MAAA,CAAOlsD,SAAA,CAAUrW,GAAA,CAAIoiE,YAAY;IACjCG,MAAA,CAAOlsD,SAAA,CAAUrW,GAAA,CAAI,qBAAqB;IAC1CuiE,MAAA,CAAOtwD,YAAA,CAAa,eAAe,MAAM;IACzCswD,MAAA,CAAOtwD,YAAA,CAAa,aAAa,QAAQ;IACzCswD,MAAA,CAAO/tD,EAAA,GAAK,sBAAsB6sD,SAAA,EAAW;IAC7C,KAAKtmD,SAAA,CAAU9kB,IAAA,CAAK8M,WAAA,CAAYw/D,MAAM;IACtC,OAAOA,MAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAN,yBAAyBztD,EAAA,EAAI;IAO3B,MAAMguD,MAAA,GAAS,KAAKznD,SAAA,CAAUvJ,gBAAA,CAAiB,mDAAmD;IAClG,SAAS4S,CAAA,GAAI,GAAGA,CAAA,GAAIo+C,MAAA,CAAOxxE,MAAA,EAAQozB,CAAA,IAAK;MACtC,MAAMq+C,KAAA,GAAQD,MAAA,CAAOp+C,CAAC;MACtB,MAAMs+C,QAAA,GAAWD,KAAA,CAAM11D,YAAA,CAAa,WAAW;MAC/C,IAAI,CAAC21D,QAAA,EAAU;QACbD,KAAA,CAAMxwD,YAAA,CAAa,aAAauC,EAAE;MACpC,WAAWkuD,QAAA,CAAS9yE,OAAA,CAAQ4kB,EAAE,MAAM,IAAI;QACtCiuD,KAAA,CAAMxwD,YAAA,CAAa,aAAaywD,QAAA,GAAW,MAAMluD,EAAE;MACrD;IACF;EACF;AAaF;AAXI8sD,cAAA,CAAK7nE,IAAA,GAAO,SAASkpE,sBAAsB7uE,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKwtE,cAAA,EAAkB3nE,QAAA,CAASunE,4BAAA,EAA8B,CAAC,GAAMvnE,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAASynE,8BAAA,EAAgC,CAAC,CAAC;AAC7K;AAGAE,cAAA,CAAK1nE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOssE,cAAA;EACPxnE,OAAA,EAASwnE,cAAA,CAAc7nE,IAAA;EACvB8M,UAAA,EAAY;AACd,CAAC;AAzHL,IAAMq8D,aAAA,GAANtB,cAAA;AAAA,CA4HC,MAAM;EACL,CAAC,OAAO3wE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4oE,aAAA,EAAe,CAAC;IACtF7rE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACw9D,4BAA4B;IACrC,CAAC;EACH,GAAG;IACDnqE,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC09D,8BAA8B;IACvC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMyB,YAAA,GAAN,MAAMA,YAAA,CAAY;EAAA;EAEhB,IAAIhB,WAAA,EAAa;IACf,OAAO,KAAKiB,WAAA;EACd;EACA,IAAIjB,WAAW5xE,KAAA,EAAO;IACpB,KAAK6yE,WAAA,GAAc7yE,KAAA,KAAU,SAASA,KAAA,KAAU,cAAcA,KAAA,GAAQ;IACtE,IAAI,KAAK6yE,WAAA,KAAgB,OAAO;MAC9B,IAAI,KAAKC,aAAA,EAAe;QACtB,KAAKA,aAAA,CAAclpC,WAAA,CAAY;QAC/B,KAAKkpC,aAAA,GAAgB;MACvB;IACF,WAAW,CAAC,KAAKA,aAAA,EAAe;MAC9B,KAAKA,aAAA,GAAgB,KAAK5V,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACxD,OAAO,KAAKqwD,gBAAA,CAAiB30D,OAAA,CAAQ,KAAK40D,WAAW,EAAElzB,SAAA,CAAU,MAAM;UAErE,MAAMgpC,WAAA,GAAc,KAAK9V,WAAA,CAAY/S,aAAA,CAAczoC,WAAA;UAGnD,IAAIsxD,WAAA,KAAgB,KAAKC,sBAAA,EAAwB;YAC/C,KAAKC,cAAA,CAAevB,QAAA,CAASqB,WAAA,EAAa,KAAKF,WAAA,EAAa,KAAKhB,QAAQ;YACzE,KAAKmB,sBAAA,GAAyBD,WAAA;UAChC;QACF,CAAC;MACH,CAAC;IACH;EACF;EACA9zE,YAAYg+D,WAAA,EAAagW,cAAA,EAAgBjW,gBAAA,EAAkBE,OAAA,EAAS;IAClE,KAAKD,WAAA,GAAcA,WAAA;IACnB,KAAKgW,cAAA,GAAiBA,cAAA;IACtB,KAAKjW,gBAAA,GAAmBA,gBAAA;IACxB,KAAKE,OAAA,GAAUA,OAAA;IACf,KAAK2V,WAAA,GAAc;EACrB;EACA9xD,YAAA,EAAc;IACZ,IAAI,KAAK+xD,aAAA,EAAe;MACtB,KAAKA,aAAA,CAAclpC,WAAA,CAAY;IACjC;EACF;AAkBF;AAhBIgpC,YAAA,CAAKppE,IAAA,GAAO,SAAS0pE,oBAAoBrvE,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK+uE,YAAA,EAAgB3nB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB0nB,aAAa,GAAM1nB,iBAAA,CAAuBuR,eAAe,GAAMvR,iBAAA,CAAqBjgD,MAAM,CAAC;AACrL;AAGA4nE,YAAA,CAAKnqC,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM8rE,YAAA;EACNjqC,SAAA,EAAW,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC;EACnCC,MAAA,EAAQ;IACNgpC,UAAA,EAAY,CAAI/lB,UAAA,CAAasnB,IAAA,EAAM,eAAe,YAAY;IAC9DtB,QAAA,EAAU,CAAIhmB,UAAA,CAAasnB,IAAA,EAAM,uBAAuB,UAAU;EACpE;EACArqC,QAAA,EAAU,CAAC,aAAa;EACxBC,UAAA,EAAY;AACd,CAAC;AAtDL,IAAMqqC,WAAA,GAANR,YAAA;AAAA,CAyDC,MAAM;EACL,CAAC,OAAOlyE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqpE,WAAA,EAAa,CAAC;IACpFtsE,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM6rE;EACR,GAAG;IACD7rE,IAAA,EAAW01D;EACb,GAAG;IACD11D,IAAA,EAASkE;EACX,CAAC,GAAG;IACF4mE,UAAA,EAAY,CAAC;MACX9qE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,aAAa;IACtB,CAAC;IACDo+D,QAAA,EAAU,CAAC;MACT/qE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,qBAAqB;IAC9B,CAAC;EACH,CAAC;AACH,GAAG;AAGH,IAAI4/D,yBAAA;AAAA,CACH,UAAUA,4BAA2B;EAMpCA,2BAA0BA,2BAA0B,WAAW,IAAI,CAAC,IAAI;EAKxEA,2BAA0BA,2BAA0B,UAAU,IAAI,CAAC,IAAI;AACzE,GAAGA,yBAAA,KAA8BA,yBAAA,GAA4B,CAAC,EAAE;AAEhE,IAAMC,6BAAA,GAAgC,IAAIlkE,cAAA,CAAe,mCAAmC;AAK5F,IAAMmkE,2BAAA,GAA8B9c,+BAAA,CAAgC;EAClEuZ,OAAA,EAAS;EACT71C,OAAA,EAAS;AACX,CAAC;AAED,IAAMq5C,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjBv0E,YAAYi+D,OAAA,EAASe,SAAA,EAAWwV,sBAAA,EAChC5hE,WAAU5N,OAAA,EAAS;IACjB,KAAKi5D,OAAA,GAAUA,OAAA;IACf,KAAKe,SAAA,GAAYA,SAAA;IACjB,KAAKwV,sBAAA,GAAyBA,sBAAA;IAE9B,KAAKC,OAAA,GAAU;IAEf,KAAKC,cAAA,GAAiB;IAKtB,KAAKC,2BAAA,GAA8B;IAEnC,KAAKC,YAAA,GAAe,mBAAIz0E,GAAA,CAAI;IAE5B,KAAK00E,sBAAA,GAAyB;IAO9B,KAAKC,2BAAA,GAA8B,mBAAI30E,GAAA,CAAI;IAK3C,KAAK40E,oBAAA,GAAuB,MAAM;MAGhC,KAAKL,cAAA,GAAiB;MACtB,KAAKM,qBAAA,GAAwBviE,MAAA,CAAOutC,UAAA,CAAW,MAAM,KAAK00B,cAAA,GAAiB,KAAK;IAClF;IAEA,KAAKO,0BAAA,GAA6B,IAAI/2B,OAAA,CAAQ;IAK9C,KAAKg3B,6BAAA,GAAgClrE,KAAA,IAAS;MAC5C,MAAMiT,MAAA,GAASu8C,eAAA,CAAgBxvD,KAAK;MAEpC,SAASiW,OAAA,GAAUhD,MAAA,EAAQgD,OAAA,EAASA,OAAA,GAAUA,OAAA,CAAQd,aAAA,EAAe;QACnE,IAAInV,KAAA,CAAMnC,IAAA,KAAS,SAAS;UAC1B,KAAKstE,QAAA,CAASnrE,KAAA,EAAOiW,OAAO;QAC9B,OAAO;UACL,KAAKm1D,OAAA,CAAQprE,KAAA,EAAOiW,OAAO;QAC7B;MACF;IACF;IACA,KAAK4L,SAAA,GAAYjZ;IACjB,KAAKyiE,cAAA,GAAiBrwE,OAAA,EAASswE,aAAA,IAAiBlB,yBAAA,CAA0BmB,SAAA;EAC5E;EACAC,QAAQv1D,OAAA,EAASw1D,aAAA,GAAgB,OAAO;IACtC,MAAMxqB,aAAA,GAAgB8Q,aAAA,CAAc97C,OAAO;IAE3C,IAAI,CAAC,KAAK++C,SAAA,CAAUhJ,SAAA,IAAa/K,aAAA,CAActuC,QAAA,KAAa,GAAG;MAE7D,OAAOhT,EAAA,CAAG;IACZ;IAIA,MAAMkvC,QAAA,GAAWqgB,cAAA,CAAejO,aAAa,KAAK,KAAKyqB,YAAA,CAAa;IACpE,MAAMC,UAAA,GAAa,KAAKf,YAAA,CAAazzE,GAAA,CAAI8pD,aAAa;IAEtD,IAAI0qB,UAAA,EAAY;MACd,IAAIF,aAAA,EAAe;QAIjBE,UAAA,CAAWF,aAAA,GAAgB;MAC7B;MACA,OAAOE,UAAA,CAAWC,OAAA;IACpB;IAEA,MAAM7sB,IAAA,GAAO;MACX0sB,aAAA;MACAG,OAAA,EAAS,IAAI13B,OAAA,CAAQ;MACrBrF;IACF;IACA,KAAK+7B,YAAA,CAAavzE,GAAA,CAAI4pD,aAAA,EAAelC,IAAI;IACzC,KAAK8sB,wBAAA,CAAyB9sB,IAAI;IAClC,OAAOA,IAAA,CAAK6sB,OAAA;EACd;EACAE,eAAe71D,OAAA,EAAS;IACtB,MAAMgrC,aAAA,GAAgB8Q,aAAA,CAAc97C,OAAO;IAC3C,MAAM81D,WAAA,GAAc,KAAKnB,YAAA,CAAazzE,GAAA,CAAI8pD,aAAa;IACvD,IAAI8qB,WAAA,EAAa;MACfA,WAAA,CAAYH,OAAA,CAAQpnE,QAAA,CAAS;MAC7B,KAAKwnE,WAAA,CAAY/qB,aAAa;MAC9B,KAAK2pB,YAAA,CAAatyE,MAAA,CAAO2oD,aAAa;MACtC,KAAKgrB,sBAAA,CAAuBF,WAAW;IACzC;EACF;EACAG,SAASj2D,OAAA,EAASk2D,MAAA,EAAQnxE,OAAA,EAAS;IACjC,MAAMimD,aAAA,GAAgB8Q,aAAA,CAAc97C,OAAO;IAC3C,MAAMm2D,cAAA,GAAiB,KAAKV,YAAA,CAAa,EAAEpc,aAAA;IAI3C,IAAIrO,aAAA,KAAkBmrB,cAAA,EAAgB;MACpC,KAAKC,uBAAA,CAAwBprB,aAAa,EAAE1qD,OAAA,CAAQ,CAAC,CAAC+1E,cAAA,EAAgBvtB,IAAI,MAAM,KAAKwtB,cAAA,CAAeD,cAAA,EAAgBH,MAAA,EAAQptB,IAAI,CAAC;IACnI,OAAO;MACL,KAAKytB,UAAA,CAAWL,MAAM;MAEtB,IAAI,OAAOlrB,aAAA,CAAciiB,KAAA,KAAU,YAAY;QAC7CjiB,aAAA,CAAciiB,KAAA,CAAMloE,OAAO;MAC7B;IACF;EACF;EACA8c,YAAA,EAAc;IACZ,KAAK8yD,YAAA,CAAar0E,OAAA,CAAQ,CAACk2E,KAAA,EAAOx2D,OAAA,KAAY,KAAK61D,cAAA,CAAe71D,OAAO,CAAC;EAC5E;EAAA;EAEAy1D,aAAA,EAAe;IACb,OAAO,KAAK7pD,SAAA,IAAajZ,QAAA;EAC3B;EAAA;EAEA8jE,WAAA,EAAa;IACX,MAAMh/D,GAAA,GAAM,KAAKg+D,YAAA,CAAa;IAC9B,OAAOh+D,GAAA,CAAI0zD,WAAA,IAAe34D,MAAA;EAC5B;EACAkkE,gBAAgBC,gBAAA,EAAkB;IAChC,IAAI,KAAKnC,OAAA,EAAS;MAGhB,IAAI,KAAKE,2BAAA,EAA6B;QACpC,OAAO,KAAKkC,0BAAA,CAA2BD,gBAAgB,IAAI,UAAU;MACvE,OAAO;QACL,OAAO,KAAKnC,OAAA;MACd;IACF;IAUA,IAAI,KAAKC,cAAA,IAAkB,KAAKoC,gBAAA,EAAkB;MAChD,OAAO,KAAKA,gBAAA;IACd;IAKA,IAAIF,gBAAA,IAAoB,KAAKG,gCAAA,CAAiCH,gBAAgB,GAAG;MAC/E,OAAO;IACT;IACA,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAC,2BAA2BD,gBAAA,EAAkB;IAW3C,OAAO,KAAKvB,cAAA,KAAmBjB,yBAAA,CAA0B4C,QAAA,IAAY,CAAC,CAACJ,gBAAA,EAAkBxH,QAAA,CAAS,KAAKoF,sBAAA,CAAuBrD,iBAAiB;EACjJ;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6E,YAAY/1D,OAAA,EAASk2D,MAAA,EAAQ;IAC3Bl2D,OAAA,CAAQkH,SAAA,CAAU8vD,MAAA,CAAO,eAAe,CAAC,CAACd,MAAM;IAChDl2D,OAAA,CAAQkH,SAAA,CAAU8vD,MAAA,CAAO,qBAAqBd,MAAA,KAAW,OAAO;IAChEl2D,OAAA,CAAQkH,SAAA,CAAU8vD,MAAA,CAAO,wBAAwBd,MAAA,KAAW,UAAU;IACtEl2D,OAAA,CAAQkH,SAAA,CAAU8vD,MAAA,CAAO,qBAAqBd,MAAA,KAAW,OAAO;IAChEl2D,OAAA,CAAQkH,SAAA,CAAU8vD,MAAA,CAAO,uBAAuBd,MAAA,KAAW,SAAS;EACtE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAK,WAAWL,MAAA,EAAQe,iBAAA,GAAoB,OAAO;IAC5C,KAAKjZ,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,KAAK+mE,OAAA,GAAU0B,MAAA;MACf,KAAKxB,2BAAA,GAA8BwB,MAAA,KAAW,WAAWe,iBAAA;MAMzD,IAAI,KAAK7B,cAAA,KAAmBjB,yBAAA,CAA0BmB,SAAA,EAAW;QAC/D1C,YAAA,CAAa,KAAKsE,gBAAgB;QAClC,MAAMC,EAAA,GAAK,KAAKzC,2BAAA,GAA8B9D,eAAA,GAAkB;QAChE,KAAKsG,gBAAA,GAAmBn3B,UAAA,CAAW,MAAM,KAAKy0B,OAAA,GAAU,MAAM2C,EAAE;MAClE;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAjC,SAASnrE,KAAA,EAAOiW,OAAA,EAAS;IAOvB,MAAM81D,WAAA,GAAc,KAAKnB,YAAA,CAAazzE,GAAA,CAAI8e,OAAO;IACjD,MAAM22D,gBAAA,GAAmBpd,eAAA,CAAgBxvD,KAAK;IAC9C,IAAI,CAAC+rE,WAAA,IAAe,CAACA,WAAA,CAAYN,aAAA,IAAiBx1D,OAAA,KAAY22D,gBAAA,EAAkB;MAC9E;IACF;IACA,KAAKL,cAAA,CAAet2D,OAAA,EAAS,KAAK02D,eAAA,CAAgBC,gBAAgB,GAAGb,WAAW;EAClF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAX,QAAQprE,KAAA,EAAOiW,OAAA,EAAS;IAGtB,MAAM81D,WAAA,GAAc,KAAKnB,YAAA,CAAazzE,GAAA,CAAI8e,OAAO;IACjD,IAAI,CAAC81D,WAAA,IAAeA,WAAA,CAAYN,aAAA,IAAiBzrE,KAAA,CAAMqtE,aAAA,YAAyBz6D,IAAA,IAAQqD,OAAA,CAAQmvD,QAAA,CAASplE,KAAA,CAAMqtE,aAAa,GAAG;MAC7H;IACF;IACA,KAAKrB,WAAA,CAAY/1D,OAAO;IACxB,KAAKq3D,WAAA,CAAYvB,WAAA,EAAa,IAAI;EACpC;EACAuB,YAAYvuB,IAAA,EAAMotB,MAAA,EAAQ;IACxB,IAAIptB,IAAA,CAAK6sB,OAAA,CAAQ2B,SAAA,CAAUz1E,MAAA,EAAQ;MACjC,KAAKm8D,OAAA,CAAQ9vD,GAAA,CAAI,MAAM46C,IAAA,CAAK6sB,OAAA,CAAQ9oE,IAAA,CAAKqpE,MAAM,CAAC;IAClD;EACF;EACAN,yBAAyBE,WAAA,EAAa;IACpC,IAAI,CAAC,KAAK/W,SAAA,CAAUhJ,SAAA,EAAW;MAC7B;IACF;IACA,MAAMnd,QAAA,GAAWk9B,WAAA,CAAYl9B,QAAA;IAC7B,MAAM2+B,sBAAA,GAAyB,KAAK1C,2BAAA,CAA4B3zE,GAAA,CAAI03C,QAAQ,KAAK;IACjF,IAAI,CAAC2+B,sBAAA,EAAwB;MAC3B,KAAKvZ,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnCmrC,QAAA,CAASjlC,gBAAA,CAAiB,SAAS,KAAKshE,6BAAA,EAA+BZ,2BAA2B;QAClGz7B,QAAA,CAASjlC,gBAAA,CAAiB,QAAQ,KAAKshE,6BAAA,EAA+BZ,2BAA2B;MACnG,CAAC;IACH;IACA,KAAKQ,2BAAA,CAA4BzzE,GAAA,CAAIw3C,QAAA,EAAU2+B,sBAAA,GAAyB,CAAC;IAEzE,IAAI,EAAE,KAAK3C,sBAAA,KAA2B,GAAG;MAGvC,KAAK5W,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC,MAAM+E,UAAS,KAAKikE,UAAA,CAAW;QAC/BjkE,QAAOmB,gBAAA,CAAiB,SAAS,KAAKmhE,oBAAoB;MAC5D,CAAC;MAED,KAAKP,sBAAA,CAAuB7C,gBAAA,CAAiB/nE,IAAA,CAAKk6C,SAAA,CAAU,KAAKmxB,0BAA0B,CAAC,EAAEnqC,SAAA,CAAU2sC,QAAA,IAAY;QAClH,KAAKjB,UAAA,CAAWiB,QAAA,EAAU;QAAA,uBAA4B;MACxD,CAAC;IACH;EACF;EACAxB,uBAAuBF,WAAA,EAAa;IAClC,MAAMl9B,QAAA,GAAWk9B,WAAA,CAAYl9B,QAAA;IAC7B,IAAI,KAAKi8B,2BAAA,CAA4B5zE,GAAA,CAAI23C,QAAQ,GAAG;MAClD,MAAM2+B,sBAAA,GAAyB,KAAK1C,2BAAA,CAA4B3zE,GAAA,CAAI03C,QAAQ;MAC5E,IAAI2+B,sBAAA,GAAyB,GAAG;QAC9B,KAAK1C,2BAAA,CAA4BzzE,GAAA,CAAIw3C,QAAA,EAAU2+B,sBAAA,GAAyB,CAAC;MAC3E,OAAO;QACL3+B,QAAA,CAASjiC,mBAAA,CAAoB,SAAS,KAAKs+D,6BAAA,EAA+BZ,2BAA2B;QACrGz7B,QAAA,CAASjiC,mBAAA,CAAoB,QAAQ,KAAKs+D,6BAAA,EAA+BZ,2BAA2B;QACpG,KAAKQ,2BAAA,CAA4BxyE,MAAA,CAAOu2C,QAAQ;MAClD;IACF;IAEA,IAAI,CAAE,GAAE,KAAKg8B,sBAAA,EAAwB;MACnC,MAAMpiE,UAAS,KAAKikE,UAAA,CAAW;MAC/BjkE,QAAOmE,mBAAA,CAAoB,SAAS,KAAKm+D,oBAAoB;MAE7D,KAAKE,0BAAA,CAA2BnoE,IAAA,CAAK;MAErC+lE,YAAA,CAAa,KAAKmC,qBAAqB;MACvCnC,YAAA,CAAa,KAAKsE,gBAAgB;IACpC;EACF;EAAA;EAEAZ,eAAet2D,OAAA,EAASk2D,MAAA,EAAQJ,WAAA,EAAa;IAC3C,KAAKC,WAAA,CAAY/1D,OAAA,EAASk2D,MAAM;IAChC,KAAKmB,WAAA,CAAYvB,WAAA,EAAaI,MAAM;IACpC,KAAKW,gBAAA,GAAmBX,MAAA;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAE,wBAAwBp2D,OAAA,EAAS;IAC/B,MAAMqzB,OAAA,GAAU,EAAC;IACjB,KAAKshC,YAAA,CAAar0E,OAAA,CAAQ,CAACwoD,IAAA,EAAMutB,cAAA,KAAmB;MAClD,IAAIA,cAAA,KAAmBr2D,OAAA,IAAW8oC,IAAA,CAAK0sB,aAAA,IAAiBa,cAAA,CAAelH,QAAA,CAASnvD,OAAO,GAAG;QACxFqzB,OAAA,CAAQlyC,IAAA,CAAK,CAACk1E,cAAA,EAAgBvtB,IAAI,CAAC;MACrC;IACF,CAAC;IACD,OAAOzV,OAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAyjC,iCAAiCH,gBAAA,EAAkB;IACjD,MAAM;MACJzF,iBAAA,EAAmBuG,gBAAA;MACnBzG;IACF,IAAI,KAAKuD,sBAAA;IAIT,IAAIvD,kBAAA,KAAuB,WAAW,CAACyG,gBAAA,IAAoBA,gBAAA,KAAqBd,gBAAA,IAAoBA,gBAAA,CAAiB5M,QAAA,KAAa,WAAW4M,gBAAA,CAAiB5M,QAAA,KAAa,cAAc4M,gBAAA,CAAiBnZ,QAAA,EAAU;MAClN,OAAO;IACT;IACA,MAAMka,MAAA,GAASf,gBAAA,CAAiBe,MAAA;IAChC,IAAIA,MAAA,EAAQ;MACV,SAASziD,CAAA,GAAI,GAAGA,CAAA,GAAIyiD,MAAA,CAAO71E,MAAA,EAAQozB,CAAA,IAAK;QACtC,IAAIyiD,MAAA,CAAOziD,CAAC,EAAEk6C,QAAA,CAASsI,gBAAgB,GAAG;UACxC,OAAO;QACT;MACF;IACF;IACA,OAAO;EACT;AAaF;AAXInD,aAAA,CAAKhqE,IAAA,GAAO,SAASqtE,qBAAqBhzE,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK2vE,aAAA,EAAiB9pE,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAASsnE,qBAAqB,GAAMtnE,QAAA,CAAS2J,QAAA,EAAU,CAAC,GAAM3J,QAAA,CAAS4pE,6BAAA,EAA+B,CAAC,CAAC;AAC9L;AAGAE,aAAA,CAAK7pE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOyuE,aAAA;EACP3pE,OAAA,EAAS2pE,aAAA,CAAahqE,IAAA;EACtB8M,UAAA,EAAY;AACd,CAAC;AAtWL,IAAMwgE,YAAA,GAANtD,aAAA;AAAA,CAyWC,MAAM;EACL,CAAC,OAAO9yE,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+sE,YAAA,EAAc,CAAC;IACrFhwE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAMkqE;EACR,GAAG;IACDlqE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC6/D,6BAA6B;IACtC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAUH,IAAMyD,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpB93E,YAAYg+D,WAAA,EAAa+Z,aAAA,EAAe;IACtC,KAAK/Z,WAAA,GAAcA,WAAA;IACnB,KAAK+Z,aAAA,GAAgBA,aAAA;IACrB,KAAKC,YAAA,GAAe;IACpB,KAAKC,cAAA,GAAiB,IAAIlxC,YAAA,CAAa;EACzC;EACA,IAAImxC,YAAA,EAAc;IAChB,OAAO,KAAKF,YAAA;EACd;EACAG,gBAAA,EAAkB;IAChB,MAAMl4D,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,KAAKmtB,oBAAA,GAAuB,KAAKL,aAAA,CAAcvC,OAAA,CAAQv1D,OAAA,EAASA,OAAA,CAAQtD,QAAA,KAAa,KAAKsD,OAAA,CAAQspD,YAAA,CAAa,wBAAwB,CAAC,EAAEz+B,SAAA,CAAUqrC,MAAA,IAAU;MAC5J,KAAK6B,YAAA,GAAe7B,MAAA;MACpB,KAAK8B,cAAA,CAAenvC,IAAA,CAAKqtC,MAAM;IACjC,CAAC;EACH;EACAr0D,YAAA,EAAc;IACZ,KAAKi2D,aAAA,CAAcjC,cAAA,CAAe,KAAK9X,WAAW;IAClD,IAAI,KAAKoa,oBAAA,EAAsB;MAC7B,KAAKA,oBAAA,CAAqBztC,WAAA,CAAY;IACxC;EACF;AAiBF;AAfImtC,gBAAA,CAAKvtE,IAAA,GAAO,SAAS8tE,wBAAwBzzE,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKkzE,gBAAA,EAAoB9rB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB6rB,YAAY,CAAC;AAC3G;AAGAC,gBAAA,CAAKtuC,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMiwE,gBAAA;EACNpuC,SAAA,EAAW,CAAC,CAAC,IAAI,0BAA0B,EAAE,GAAG,CAAC,IAAI,0BAA0B,EAAE,CAAC;EAClFE,OAAA,EAAS;IACPquC,cAAA,EAAgB;EAClB;EACApuC,QAAA,EAAU,CAAC,iBAAiB;EAC5BC,UAAA,EAAY;AACd,CAAC;AArCL,IAAMwuC,eAAA,GAANR,gBAAA;AAAA,CAwCC,MAAM;EACL,CAAC,OAAOr2E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwtE,eAAA,EAAiB,CAAC;IACxFzwE,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMgwE;EACR,CAAC,GAAG;IACFI,cAAA,EAAgB,CAAC;MACfpwE,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAGH,IAAIouC,gBAAA;AAAA,CACH,UAAUA,mBAAkB;EAC3BA,kBAAiBA,kBAAiB,MAAM,IAAI,CAAC,IAAI;EACjDA,kBAAiBA,kBAAiB,gBAAgB,IAAI,CAAC,IAAI;EAC3DA,kBAAiBA,kBAAiB,gBAAgB,IAAI,CAAC,IAAI;AAC7D,GAAGA,gBAAA,KAAqBA,gBAAA,GAAmB,CAAC,EAAE;AAE9C,IAAMC,wBAAA,GAA2B;AAEjC,IAAMC,wBAAA,GAA2B;AAEjC,IAAMC,mCAAA,GAAsC;AAY5C,IAAMC,yBAAA,GAAN,MAAMA,yBAAA,CAAyB;EAC7B34E,YAAYg/D,SAAA,EAAWpsD,WAAU;IAC/B,KAAKosD,SAAA,GAAYA,SAAA;IACjB,KAAKnzC,SAAA,GAAYjZ;IACjB,KAAKgmE,uBAAA,GAA0BptE,MAAA,CAAOy1D,kBAAkB,EAAE73D,OAAA,CAAQ,yBAAyB,EAAE0hC,SAAA,CAAU,MAAM;MAC3G,IAAI,KAAK+tC,2BAAA,EAA6B;QACpC,KAAKA,2BAAA,GAA8B;QACnC,KAAKC,oCAAA,CAAqC;MAC5C;IACF,CAAC;EACH;EAAA;EAEAC,oBAAA,EAAsB;IACpB,IAAI,CAAC,KAAK/Z,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,OAAOuiB,gBAAA,CAAiBpmD,IAAA;IAC1B;IAIA,MAAM6mD,WAAA,GAAc,KAAKntD,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IACtD6lE,WAAA,CAAYx3D,KAAA,CAAMy3D,eAAA,GAAkB;IACpCD,WAAA,CAAYx3D,KAAA,CAAMvS,QAAA,GAAW;IAC7B,KAAK4c,SAAA,CAAU9kB,IAAA,CAAK8M,WAAA,CAAYmlE,WAAW;IAK3C,MAAME,cAAA,GAAiB,KAAKrtD,SAAA,CAAUu/C,WAAA,IAAe34D,MAAA;IACrD,MAAM0mE,aAAA,GAAgBD,cAAA,IAAkBA,cAAA,CAAexP,gBAAA,GAAmBwP,cAAA,CAAexP,gBAAA,CAAiBsP,WAAW,IAAI;IACzH,MAAMI,aAAA,IAAiBD,aAAA,IAAiBA,aAAA,CAAcF,eAAA,IAAmB,IAAI/0E,OAAA,CAAQ,MAAM,EAAE;IAC7F80E,WAAA,CAAYhoE,MAAA,CAAO;IACnB,QAAQooE,aAAA;MAEN,KAAK;MAEL,KAAK;MACL,KAAK;QACH,OAAOb,gBAAA,CAAiBc,cAAA;MAE1B,KAAK;MAEL,KAAK;QACH,OAAOd,gBAAA,CAAiBe,cAAA;IAC5B;IACA,OAAOf,gBAAA,CAAiBpmD,IAAA;EAC1B;EACArQ,YAAA,EAAc;IACZ,KAAK82D,uBAAA,CAAwBjuC,WAAA,CAAY;EAC3C;EAAA;EAEAmuC,qCAAA,EAAuC;IACrC,IAAI,CAAC,KAAKD,2BAAA,IAA+B,KAAK7Z,SAAA,CAAUhJ,SAAA,IAAa,KAAKnqC,SAAA,CAAU9kB,IAAA,EAAM;MACxF,MAAMwyE,WAAA,GAAc,KAAK1tD,SAAA,CAAU9kB,IAAA,CAAKogB,SAAA;MACxCoyD,WAAA,CAAYvoE,MAAA,CAAO0nE,mCAAA,EAAqCF,wBAAA,EAA0BC,wBAAwB;MAC1G,KAAKI,2BAAA,GAA8B;MACnC,MAAMhwD,IAAA,GAAO,KAAKkwD,mBAAA,CAAoB;MACtC,IAAIlwD,IAAA,KAAS0vD,gBAAA,CAAiBe,cAAA,EAAgB;QAC5CC,WAAA,CAAYzoE,GAAA,CAAI4nE,mCAAA,EAAqCF,wBAAwB;MAC/E,WAAW3vD,IAAA,KAAS0vD,gBAAA,CAAiBc,cAAA,EAAgB;QACnDE,WAAA,CAAYzoE,GAAA,CAAI4nE,mCAAA,EAAqCD,wBAAwB;MAC/E;IACF;EACF;AAaF;AAXIE,yBAAA,CAAKpuE,IAAA,GAAO,SAASivE,iCAAiC50E,CAAA,EAAG;EACvD,OAAO,KAAKA,CAAA,IAAK+zE,yBAAA,EAA6BluE,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAS2J,QAAQ,CAAC;AAC5F;AAGAukE,yBAAA,CAAKjuE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO6yE,yBAAA;EACP/tE,OAAA,EAAS+tE,yBAAA,CAAyBpuE,IAAA;EAClC8M,UAAA,EAAY;AACd,CAAC;AAzEL,IAAMoiE,wBAAA,GAANd,yBAAA;AAAA,CA4EC,MAAM;EACL,CAAC,OAAOl3E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2uE,wBAAA,EAA0B,CAAC;IACjG5xE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMslE,WAAA,GAAN,MAAMA,WAAA,CAAW;EACf15E,YAAY25E,wBAAA,EAA0B;IACpCA,wBAAA,CAAyBb,oCAAA,CAAqC;EAChE;AAgBF;AAdIY,WAAA,CAAKnvE,IAAA,GAAO,SAASqvE,mBAAmBh1E,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAK80E,WAAA,EAAejvE,QAAA,CAASgvE,wBAAwB,CAAC;AACpE;AAGAC,WAAA,CAAK7+D,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM6xE;AACR,CAAC;AAGDA,WAAA,CAAK3+D,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACwxC,eAAe;AAC3B,CAAC;AAjBL,IAAMob,UAAA,GAANH,WAAA;AAAA,CAoBC,MAAM;EACL,CAAC,OAAOj4E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+uE,UAAA,EAAY,CAAC;IACnFhyE,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACwxC,eAAA,EAAiB0V,WAAA,EAAa7F,YAAA,EAAcgK,eAAe;MACrEjrD,OAAA,EAAS,CAAC8mD,WAAA,EAAa7F,YAAA,EAAcgK,eAAe;IACtD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTzwE,IAAA,EAAM4xE;EACR,CAAC,GAAG,IAAI;AACV,GAAG;;;AC5jFH,IAAMK,YAAA,GAAe,IAAI3pE,cAAA,CAAe,eAAe;EACrDkH,UAAA,EAAY;EACZzM,OAAA,EAASmvE;AACX,CAAC;AAED,SAASA,qBAAA,EAAuB;EAC9B,OAAOvuE,MAAA,CAAO4I,QAAQ;AACxB;AAGA,IAAM4lE,kBAAA,GAAqB;AAE3B,SAASC,uBAAuBC,QAAA,EAAU;EACxC,MAAMn5E,KAAA,GAAQm5E,QAAA,EAAUp5E,WAAA,CAAY,KAAK;EACzC,IAAIC,KAAA,KAAU,UAAU,OAAO0c,SAAA,KAAc,eAAeA,SAAA,EAAW08D,QAAA,EAAU;IAC/E,OAAOH,kBAAA,CAAmB/kE,IAAA,CAAKwI,SAAA,CAAU08D,QAAQ,IAAI,QAAQ;EAC/D;EACA,OAAOp5E,KAAA,KAAU,QAAQ,QAAQ;AACnC;AAKA,IAAMq5E,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBp6E,YAAY6rB,YAAW;IAErB,KAAK9qB,KAAA,GAAQ;IAEb,KAAKglE,MAAA,GAAS,IAAIh/B,YAAA,CAAa;IAC/B,IAAIlb,YAAW;MACb,MAAMwuD,OAAA,GAAUxuD,WAAU9kB,IAAA,GAAO8kB,WAAU9kB,IAAA,CAAKsxD,GAAA,GAAM;MACtD,MAAMiiB,OAAA,GAAUzuD,WAAUisC,eAAA,GAAkBjsC,WAAUisC,eAAA,CAAgBO,GAAA,GAAM;MAC5E,KAAKt3D,KAAA,GAAQk5E,sBAAA,CAAuBI,OAAA,IAAWC,OAAA,IAAW,KAAK;IACjE;EACF;EACAx4D,YAAA,EAAc;IACZ,KAAKikD,MAAA,CAAOv3D,QAAA,CAAS;EACvB;AAaF;AAXI4rE,eAAA,CAAK7vE,IAAA,GAAO,SAASgwE,uBAAuB31E,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKw1E,eAAA,EAAmB3vE,QAAA,CAASqvE,YAAA,EAAc,CAAC,CAAC;AAC/D;AAGAM,eAAA,CAAK1vE,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOs0E,eAAA;EACPxvE,OAAA,EAASwvE,eAAA,CAAe7vE,IAAA;EACxB8M,UAAA,EAAY;AACd,CAAC;AAzBL,IAAMmjE,cAAA,GAANJ,eAAA;AAAA,CA4BC,MAAM;EACL,CAAC,OAAO34E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0vE,cAAA,EAAgB,CAAC;IACvF3yE,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACslE,YAAY;IACrB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAQH,IAAMW,IAAA,GAAN,MAAMA,IAAA,CAAI;EACRz6E,YAAA,EAAc;IAEZ,KAAK06E,IAAA,GAAO;IAEZ,KAAKC,cAAA,GAAiB;IAEtB,KAAK5U,MAAA,GAAS,IAAIh/B,YAAA,CAAa;EACjC;EAAA;EAEA,IAAIsxB,IAAA,EAAM;IACR,OAAO,KAAKqiB,IAAA;EACd;EACA,IAAIriB,IAAIt3D,KAAA,EAAO;IACb,MAAMinC,aAAA,GAAgB,KAAK0yC,IAAA;IAI3B,KAAKA,IAAA,GAAOT,sBAAA,CAAuBl5E,KAAK;IACxC,KAAK65E,OAAA,GAAU75E,KAAA;IACf,IAAIinC,aAAA,KAAkB,KAAK0yC,IAAA,IAAQ,KAAKC,cAAA,EAAgB;MACtD,KAAK5U,MAAA,CAAOj9B,IAAA,CAAK,KAAK4xC,IAAI;IAC5B;EACF;EAAA;EAEA,IAAI35E,MAAA,EAAQ;IACV,OAAO,KAAKs3D,GAAA;EACd;EAAA;EAEAvK,mBAAA,EAAqB;IACnB,KAAK6sB,cAAA,GAAiB;EACxB;EACA74D,YAAA,EAAc;IACZ,KAAKikD,MAAA,CAAOv3D,QAAA,CAAS;EACvB;AA8BF;AA5BIisE,IAAA,CAAKlwE,IAAA,GAAO,SAASswE,YAAYj2E,CAAA,EAAG;EAClC,OAAO,KAAKA,CAAA,IAAK61E,IAAA,EAAK;AACxB;AAGAA,IAAA,CAAKjxC,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4yE,IAAA;EACN/wC,SAAA,EAAW,CAAC,CAAC,IAAI,OAAO,EAAE,CAAC;EAC3B2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASwuB,iBAAiB3tC,EAAA,EAAIlb,GAAA,EAAK;IAC/C,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,OAAO16B,GAAA,CAAI2oD,OAAO;IACnC;EACF;EACAjxC,MAAA,EAAQ;IACN0uB,GAAA,EAAK;EACP;EACAzuB,OAAA,EAAS;IACPm8B,MAAA,EAAQ;EACV;EACAl8B,QAAA,EAAU,CAAC,KAAK;EAChBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS+gE,cAAA;IACT9gE,WAAA,EAAa+gE;EACf,CAAC,CAAC,CAAC;AACL,CAAC;AA9DL,IAAMO,GAAA,GAANP,IAAA;AAAA,CAiEC,MAAM;EACL,CAAC,OAAOh5E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkwE,GAAA,EAAK,CAAC;IAC5EnzE,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS+gE,cAAA;QACT9gE,WAAA,EAAashE;MACf,CAAC;MACD97D,IAAA,EAAM;QACJ,cAAc;MAChB;MACA2qB,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACRi8B,MAAA,EAAQ,CAAC;MACPl+D,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,WAAW;IACpB,CAAC;IACD6jD,GAAA,EAAK,CAAC;MACJxwD,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM+wC,WAAA,GAAN,MAAMA,WAAA,CAAW,EAcjB;AAZIA,WAAA,CAAK1wE,IAAA,GAAO,SAAS2wE,mBAAmBt2E,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKq2E,WAAA,EAAY;AAC/B;AAGAA,WAAA,CAAKpgE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMozE;AACR,CAAC;AAGDA,WAAA,CAAKlgE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAMmgE,UAAA,GAANF,WAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOx5E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqwE,UAAA,EAAY,CAAC;IACnFtzE,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC+tD,GAAG;MACb3tD,OAAA,EAAS,CAAC2tD,GAAG;IACf,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC3MH,IAAMtnD,WAAU,IAAIC,OAAA,CAAQ,SAAS;;;ACYrC,IAAMynD,GAAA,GAAM,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,CAAC,cAAc,CAAC,CAAC;AACpD,IAAMC,GAAA,GAAM,CAAC,KAAK,0BAA0B;AAC5C,IAAMC,GAAA,GAAM,CAAC,MAAM;AACnB,IAAMC,GAAA,GAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,GAAG;AAChC,IAAMC,GAAA,GAAM,CAAC,YAAY,GAAG;AAC5B,SAASC,iCAAiCtuC,EAAA,EAAIlb,GAAA,EAAK;EACjD,IAAIkb,EAAA,GAAK,GAAG;IACPC,SAAA,CAAU,GAAG,uBAAuB,CAAC;EAC1C;EACA,IAAID,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BC,UAAA,CAAW,YAAYF,MAAA,CAAOje,QAAQ,EAAE,SAASie,MAAA,CAAOG,QAAA,GAAW,YAAY,WAAW;EAC/F;AACF;AACA,SAASC,iCAAiC3uC,EAAA,EAAIlb,GAAA,EAAK;EACjD,IAAIkb,EAAA,GAAK,GAAG;IACPC,SAAA,CAAU,GAAG,uBAAuB,CAAC;EAC1C;EACA,IAAID,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BC,UAAA,CAAW,YAAYF,MAAA,CAAOje,QAAQ;EAC3C;AACF;AACA,SAASse,iCAAiC5uC,EAAA,EAAIlb,GAAA,EAAK;EACjD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,QAAQ,CAAC;IAC3BC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BQ,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKV,MAAA,CAAOx8C,KAAA,CAAMm9C,KAAA,EAAO,GAAG;EACpD;AACF;AACA,IAAMC,GAAA,GAAM,CAAC,2BAA2B,EAAE;AAC1C,IAAMC,GAAA,GAAM,CAAC,GAAG;AAChB,IAAM7oD,WAAU,IAAIC,OAAA,CAAQ,SAAS;AAGrC,IAAM6oD,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAatB;AAXIA,gBAAA,CAAKC,cAAA,GAAiB;AAGtBD,gBAAA,CAAKE,kBAAA,GAAqB;AAG1BF,gBAAA,CAAKG,kBAAA,GAAqB;AAG1BH,gBAAA,CAAKI,WAAA,GAAc;AAXvB,IAAMC,eAAA,GAANL,gBAAA;AAeA,IAAMM,mBAAA,GAAN,MAAMA,mBAAA,CAAmB,EAUzB;AARIA,mBAAA,CAAKC,OAAA,GAAU;AAGfD,mBAAA,CAAKE,QAAA,GAAW;AAGhBF,mBAAA,CAAKG,OAAA,GAAU;AARnB,IAAMC,kBAAA,GAANJ,mBAAA;AAaA,SAASK,+BAAA,EAAiC;EACxC,OAAO;AACT;AAEA,IAAMC,sBAAA,GAAyB,IAAIjtE,cAAA,CAAe,qBAAqB;EACrEkH,UAAA,EAAY;EACZzM,OAAA,EAASuyE;AACX,CAAC;AAOD,IAAME,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBr9E,YAAY25E,wBAAA,EAA0B2D,aAAA,EAAezxD,YAAW;IAC9D,KAAKyxD,aAAA,GAAgBA,aAAA;IACrB,KAAKzxD,SAAA,GAAYA;IAEjB,KAAK0xD,oBAAA,GAAuB;IAG5B5D,wBAAA,CAAyBb,oCAAA,CAAqC;IAC9D,IAAI,CAAC,KAAKyE,oBAAA,EAAsB;MAC9B,KAAKA,oBAAA,GAAuB;MAC5B,IAAI,OAAO97E,SAAA,KAAc,eAAeA,SAAA,EAAW;QAEjD,MAAMkW,QAAA,GAAWnM,MAAA,CAAOqrD,QAAA,EAAU;UAChCnrD,QAAA,EAAU;QACZ,CAAC;QACD,IAAI,KAAK8xE,eAAA,CAAgB,SAAS,GAAG;UACnCC,sBAAA,CAAuB,KAAK5xD,SAAS;QACvC;QACA,IAAI,KAAK2xD,eAAA,CAAgB,OAAO,GAAG;UACjCE,oBAAA,CAAqB,KAAK7xD,SAAA,EAAW,CAAC,CAAClU,QAAA,EAAUq+C,SAAS;QAC5D;QACA,IAAI,KAAKwnB,eAAA,CAAgB,SAAS,GAAG;UACnCG,qBAAA,CAAsB;QACxB;MACF;IACF;EACF;EAAA;EAEAH,gBAAgB78E,IAAA,EAAM;IACpB,IAAI+4D,kBAAA,CAAmB,GAAG;MACxB,OAAO;IACT;IACA,IAAI,OAAO,KAAK4jB,aAAA,KAAkB,WAAW;MAC3C,OAAO,KAAKA,aAAA;IACd;IACA,OAAO,CAAC,CAAC,KAAKA,aAAA,CAAc38E,IAAI;EAClC;AAgBF;AAdI08E,gBAAA,CAAK9yE,IAAA,GAAO,SAASqzE,wBAAwBh5E,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKy4E,gBAAA,EAAoB5yE,QAAA,CAAYgvE,wBAAwB,GAAMhvE,QAAA,CAAS2yE,sBAAA,EAAwB,CAAC,GAAM3yE,QAAA,CAAS2J,QAAQ,CAAC;AAC3I;AAGAipE,gBAAA,CAAKxiE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMw1E;AACR,CAAC;AAGDA,gBAAA,CAAKtiE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACkuD,UAAA,EAAYA,UAAU;AAClC,CAAC;AAnDL,IAAM0C,eAAA,GAANR,gBAAA;AAAA,CAsDC,MAAM;EACL,CAAC,OAAO57E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+yE,eAAA,EAAiB,CAAC;IACxFh2E,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACkuD,UAAU;MACpB9tD,OAAA,EAAS,CAAC8tD,UAAU;IACtB,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTtzE,IAAA,EAAS4xE;EACX,GAAG;IACD5xE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4oE,sBAAsB;IAC/B,CAAC;EACH,GAAG;IACDv1E,IAAA,EAAMwb,QAAA;IACN/O,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,SAASqpE,uBAAuB/lE,GAAA,EAAK;EACnC,IAAI,CAACA,GAAA,CAAIomE,OAAA,EAAS;IAChBrtD,OAAA,CAAQhf,IAAA,CAAK,sHAA2H;EAC1I;AACF;AAEA,SAASisE,qBAAqBhmE,GAAA,EAAKs+C,SAAA,EAAW;EAG5C,IAAI,CAACt+C,GAAA,CAAI3Q,IAAA,IAAQ,CAACivD,SAAA,EAAW;IAC3B;EACF;EACA,MAAMgjB,WAAA,GAActhE,GAAA,CAAIvE,aAAA,CAAc,KAAK;EAC3C6lE,WAAA,CAAY7xD,SAAA,CAAUrW,GAAA,CAAI,yBAAyB;EACnD4G,GAAA,CAAI3Q,IAAA,CAAK8M,WAAA,CAAYmlE,WAAW;EAChC,MAAMG,aAAA,GAAgBzP,gBAAA,CAAiBsP,WAAW;EAIlD,IAAIG,aAAA,IAAiBA,aAAA,CAAc4E,OAAA,KAAY,QAAQ;IACrDttD,OAAA,CAAQhf,IAAA,CAAK,oLAA8L;EAC7M;EACAunE,WAAA,CAAYhoE,MAAA,CAAO;AACrB;AAEA,SAAS2sE,sBAAA,EAAwB;EAC/B,IAAIjqD,SAAQsqD,IAAA,KAAStqD,SAAUsqD,IAAA,EAAM;IACnCvtD,OAAA,CAAQhf,IAAA,CAAK,mCAAmCiiB,SAAQsqD,IAAA,GAAO,+CAAoDtqD,SAAUsqD,IAAA,GAAO,qEAA0E;EAChN;AACF;AA4EA,IAAMC,kBAAA,GAAN,MAAyB;EACvBj+E,YAAYk+E,eAAA,EAAiBC,SAAA,EAAWC,gBAAA,EAAkBC,WAAA,EAAaC,aAAA,EAAe;IACpF,KAAKJ,eAAA,GAAkBA,eAAA;IACvB,KAAKC,SAAA,GAAYA,SAAA;IACjB,KAAKC,gBAAA,GAAmBA,gBAAA;IACxB,KAAKC,WAAA,GAAcA,WAAA;IACnB,KAAKC,aAAA,GAAgBA,aAAA;IAErB,KAAKC,UAAA,GAAa;EACpB;EAAA;EAEAC,iBAAA,EAAmB;IACjB,MAAMC,QAAA,GAAW,KAAKF,UAAA;IACtB,MAAMp4D,MAAA,GAAS,KAAKi4D,gBAAA,IAAoB,KAAKC,WAAA;IAC7C,MAAM9vC,OAAA,GAAU,KAAKA,OAAA,IAAW,KAAK2vC,eAAA;IACrC,MAAMQ,OAAA,GAAU,KAAKP,SAAA,GAAY,KAAKA,SAAA,CAAUO,OAAA,GAAU;IAC1D,MAAMC,QAAA,GAAWpwC,OAAA,EAASqwC,YAAA,CAAaF,OAAA,EAASv4D,MAAM,KAAK;IAC3D,IAAIw4D,QAAA,KAAaF,QAAA,EAAU;MACzB,KAAKF,UAAA,GAAaI,QAAA;MAClB,KAAKL,aAAA,CAAcxxE,IAAA,CAAK;IAC1B;EACF;AACF;AAsFA,IAAM+xE,eAAA,GAAkB,IAAI1uE,cAAA,CAAe,mBAAmB;EAC5DkH,UAAA,EAAY;EACZzM,OAAA,EAASk0E;AACX,CAAC;AAED,SAASA,wBAAA,EAA0B;EACjC,OAAOtzE,MAAA,CAAOuzE,SAAS;AACzB;AAEA,IAAMC,WAAA,GAAN,MAAkB;EAChBh/E,YAAA,EAAc;IACZ,KAAKi/E,cAAA,GAAiB,IAAI/gC,OAAA,CAAQ;IAElC,KAAKghC,aAAA,GAAgB,KAAKD,cAAA;EAC5B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAE,mBAAmB3pD,GAAA,EAAK;IACtB,OAAO,KAAK4pD,cAAA,CAAe5pD,GAAG,KAAK,KAAK6pD,OAAA,CAAQ7pD,GAAG,IAAIA,GAAA,GAAM;EAC/D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAaA8pD,YAAYv+E,KAAA,EAAO;IACjB,IAAIA,KAAA,IAAS,QAAQ,KAAKq+E,cAAA,CAAer+E,KAAK,KAAK,KAAKs+E,OAAA,CAAQt+E,KAAK,GAAG;MACtE,OAAOA,KAAA;IACT;IACA,OAAO,KAAKw+E,OAAA,CAAQ;EACtB;EAAA;AAAA;AAAA;AAAA;EAKAC,UAAUC,MAAA,EAAQ;IAChB,KAAKA,MAAA,GAASA,MAAA;IACd,KAAKR,cAAA,CAAenyE,IAAA,CAAK;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA4yE,YAAYl2E,QAAOm2E,MAAA,EAAQ;IACzB,OAAO,KAAKC,OAAA,CAAQp2E,MAAK,IAAI,KAAKo2E,OAAA,CAAQD,MAAM,KAAK,KAAKE,QAAA,CAASr2E,MAAK,IAAI,KAAKq2E,QAAA,CAASF,MAAM,KAAK,KAAKG,OAAA,CAAQt2E,MAAK,IAAI,KAAKs2E,OAAA,CAAQH,MAAM;EAChJ;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAI,SAASv2E,QAAOm2E,MAAA,EAAQ;IACtB,IAAIn2E,UAASm2E,MAAA,EAAQ;MACnB,IAAIK,UAAA,GAAa,KAAKX,OAAA,CAAQ71E,MAAK;MACnC,IAAIy2E,WAAA,GAAc,KAAKZ,OAAA,CAAQM,MAAM;MACrC,IAAIK,UAAA,IAAcC,WAAA,EAAa;QAC7B,OAAO,CAAC,KAAKP,WAAA,CAAYl2E,QAAOm2E,MAAM;MACxC;MACA,OAAOK,UAAA,IAAcC,WAAA;IACvB;IACA,OAAOz2E,UAASm2E,MAAA;EAClB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAO,UAAUC,IAAA,EAAMC,GAAA,EAAKC,GAAA,EAAK;IACxB,IAAID,GAAA,IAAO,KAAKV,WAAA,CAAYS,IAAA,EAAMC,GAAG,IAAI,GAAG;MAC1C,OAAOA,GAAA;IACT;IACA,IAAIC,GAAA,IAAO,KAAKX,WAAA,CAAYS,IAAA,EAAME,GAAG,IAAI,GAAG;MAC1C,OAAOA,GAAA;IACT;IACA,OAAOF,IAAA;EACT;AACF;AACA,IAAMG,gBAAA,GAAmB,IAAInwE,cAAA,CAAe,kBAAkB;AAO9D,IAAMowE,cAAA,GAAiB;AAEvB,SAASC,MAAM1+E,MAAA,EAAQ2+E,aAAA,EAAe;EACpC,MAAMC,WAAA,GAAc1+E,KAAA,CAAMF,MAAM;EAChC,SAASozB,CAAA,GAAI,GAAGA,CAAA,GAAIpzB,MAAA,EAAQozB,CAAA,IAAK;IAC/BwrD,WAAA,CAAYxrD,CAAC,IAAIurD,aAAA,CAAcvrD,CAAC;EAClC;EACA,OAAOwrD,WAAA;AACT;AAEA,IAAMC,kBAAA,GAAN,MAAMA,kBAAA,SAA0B3B,WAAA,CAAY;EAC1Ch/E,YAKA4gF,aAAA,EAAe;IACb,MAAM;IAKN,KAAKC,gBAAA,GAAmB;IAExB,KAAKC,cAAA,GAAiBt1E,MAAA,CAAOqzE,eAAA,EAAiB;MAC5CnzE,QAAA,EAAU;IACZ,CAAC;IACD,IAAIk1E,aAAA,KAAkB,QAAW;MAC/B,KAAKE,cAAA,GAAiBF,aAAA;IACxB;IACA,MAAMpB,SAAA,CAAU,KAAKsB,cAAc;EACrC;EACAlB,QAAQO,IAAA,EAAM;IACZ,OAAOA,IAAA,CAAKY,WAAA,CAAY;EAC1B;EACAlB,SAASM,IAAA,EAAM;IACb,OAAOA,IAAA,CAAKN,QAAA,CAAS;EACvB;EACAC,QAAQK,IAAA,EAAM;IACZ,OAAOA,IAAA,CAAKL,OAAA,CAAQ;EACtB;EACAkB,aAAab,IAAA,EAAM;IACjB,OAAOA,IAAA,CAAKc,MAAA,CAAO;EACrB;EACAC,cAAc1/D,QAAO;IACnB,MAAM2/D,GAAA,GAAM,IAAIvrB,IAAA,CAAKwrB,cAAA,CAAe,KAAK3B,MAAA,EAAQ;MAC/C4B,KAAA,EAAO7/D;MACP8/D,QAAA,EAAU;IACZ,CAAC;IACD,OAAOd,KAAA,CAAM,IAAItrD,CAAA,IAAK,KAAKqsD,OAAA,CAAQJ,GAAA,EAAK,IAAI3P,IAAA,CAAK,MAAMt8C,CAAA,EAAG,CAAC,CAAC,CAAC;EAC/D;EACAssD,aAAA,EAAe;IACb,MAAML,GAAA,GAAM,IAAIvrB,IAAA,CAAKwrB,cAAA,CAAe,KAAK3B,MAAA,EAAQ;MAC/CgC,GAAA,EAAK;MACLH,QAAA,EAAU;IACZ,CAAC;IACD,OAAOd,KAAA,CAAM,IAAItrD,CAAA,IAAK,KAAKqsD,OAAA,CAAQJ,GAAA,EAAK,IAAI3P,IAAA,CAAK,MAAM,GAAGt8C,CAAA,GAAI,CAAC,CAAC,CAAC;EACnE;EACAwsD,kBAAkBlgE,QAAO;IACvB,MAAM2/D,GAAA,GAAM,IAAIvrB,IAAA,CAAKwrB,cAAA,CAAe,KAAK3B,MAAA,EAAQ;MAC/CkC,OAAA,EAASngE;MACT8/D,QAAA,EAAU;IACZ,CAAC;IACD,OAAOd,KAAA,CAAM,GAAGtrD,CAAA,IAAK,KAAKqsD,OAAA,CAAQJ,GAAA,EAAK,IAAI3P,IAAA,CAAK,MAAM,GAAGt8C,CAAA,GAAI,CAAC,CAAC,CAAC;EAClE;EACA0sD,YAAYzB,IAAA,EAAM;IAChB,MAAMgB,GAAA,GAAM,IAAIvrB,IAAA,CAAKwrB,cAAA,CAAe,KAAK3B,MAAA,EAAQ;MAC/CoC,IAAA,EAAM;MACNP,QAAA,EAAU;IACZ,CAAC;IACD,OAAO,KAAKC,OAAA,CAAQJ,GAAA,EAAKhB,IAAI;EAC/B;EACA2B,kBAAA,EAAoB;IAElB,OAAO;EACT;EACAC,kBAAkB5B,IAAA,EAAM;IACtB,OAAO,KAAKL,OAAA,CAAQ,KAAKkC,uBAAA,CAAwB,KAAKpC,OAAA,CAAQO,IAAI,GAAG,KAAKN,QAAA,CAASM,IAAI,IAAI,GAAG,CAAC,CAAC;EAClG;EACA/9E,MAAM+9E,IAAA,EAAM;IACV,OAAO,IAAI3O,IAAA,CAAK2O,IAAA,CAAK8B,OAAA,CAAQ,CAAC;EAChC;EACAC,WAAWL,IAAA,EAAMR,KAAA,EAAOlB,IAAA,EAAM;IAC5B,IAAI,OAAO1+E,SAAA,KAAc,eAAeA,SAAA,EAAW;MAGjD,IAAI4/E,KAAA,GAAQ,KAAKA,KAAA,GAAQ,IAAI;QAC3B,MAAM/9E,KAAA,CAAM,wBAAwB+9E,KAAK,4CAA4C;MACvF;MACA,IAAIlB,IAAA,GAAO,GAAG;QACZ,MAAM78E,KAAA,CAAM,iBAAiB68E,IAAI,mCAAmC;MACtE;IACF;IACA,IAAI31D,MAAA,GAAS,KAAKw3D,uBAAA,CAAwBH,IAAA,EAAMR,KAAA,EAAOlB,IAAI;IAE3D,IAAI31D,MAAA,CAAOq1D,QAAA,CAAS,KAAKwB,KAAA,KAAU,OAAO5/E,SAAA,KAAc,eAAeA,SAAA,GAAY;MACjF,MAAM6B,KAAA,CAAM,iBAAiB68E,IAAI,2BAA2BkB,KAAK,IAAI;IACvE;IACA,OAAO72D,MAAA;EACT;EACA23D,MAAA,EAAQ;IACN,OAAO,mBAAI3Q,IAAA,CAAK;EAClB;EACA7iE,MAAM5N,KAAA,EAAOqhF,WAAA,EAAa;IAGxB,IAAI,OAAOrhF,KAAA,IAAS,UAAU;MAC5B,OAAO,IAAIywE,IAAA,CAAKzwE,KAAK;IACvB;IACA,OAAOA,KAAA,GAAQ,IAAIywE,IAAA,CAAKA,IAAA,CAAK7iE,KAAA,CAAM5N,KAAK,CAAC,IAAI;EAC/C;EACAshF,OAAOlC,IAAA,EAAMmC,aAAA,EAAe;IAC1B,IAAI,CAAC,KAAKjD,OAAA,CAAQc,IAAI,GAAG;MACvB,MAAM78E,KAAA,CAAM,gDAAgD;IAC9D;IACA,MAAM69E,GAAA,GAAM,IAAIvrB,IAAA,CAAKwrB,cAAA,CAAe,KAAK3B,MAAA,EAAQ36D,aAAA,CAAAlY,cAAA,KAC5C01E,aAAA,GAD4C;MAE/ChB,QAAA,EAAU;IACZ,EAAC;IACD,OAAO,KAAKC,OAAA,CAAQJ,GAAA,EAAKhB,IAAI;EAC/B;EACAoC,iBAAiBpC,IAAA,EAAMqC,KAAA,EAAO;IAC5B,OAAO,KAAKC,iBAAA,CAAkBtC,IAAA,EAAMqC,KAAA,GAAQ,EAAE;EAChD;EACAC,kBAAkBtC,IAAA,EAAMuC,MAAA,EAAQ;IAC9B,IAAIC,OAAA,GAAU,KAAKX,uBAAA,CAAwB,KAAKpC,OAAA,CAAQO,IAAI,GAAG,KAAKN,QAAA,CAASM,IAAI,IAAIuC,MAAA,EAAQ,KAAK5C,OAAA,CAAQK,IAAI,CAAC;IAK/G,IAAI,KAAKN,QAAA,CAAS8C,OAAO,OAAO,KAAK9C,QAAA,CAASM,IAAI,IAAIuC,MAAA,IAAU,KAAK,MAAM,IAAI;MAC7EC,OAAA,GAAU,KAAKX,uBAAA,CAAwB,KAAKpC,OAAA,CAAQ+C,OAAO,GAAG,KAAK9C,QAAA,CAAS8C,OAAO,GAAG,CAAC;IACzF;IACA,OAAOA,OAAA;EACT;EACAC,gBAAgBzC,IAAA,EAAM0C,IAAA,EAAM;IAC1B,OAAO,KAAKb,uBAAA,CAAwB,KAAKpC,OAAA,CAAQO,IAAI,GAAG,KAAKN,QAAA,CAASM,IAAI,GAAG,KAAKL,OAAA,CAAQK,IAAI,IAAI0C,IAAI;EACxG;EACAC,UAAU3C,IAAA,EAAM;IACd,OAAO,CAACA,IAAA,CAAK4C,cAAA,CAAe,GAAG,KAAKC,OAAA,CAAQ7C,IAAA,CAAK8C,WAAA,CAAY,IAAI,CAAC,GAAG,KAAKD,OAAA,CAAQ7C,IAAA,CAAK+C,UAAA,CAAW,CAAC,CAAC,EAAEx9E,IAAA,CAAK,GAAG;EAChH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA45E,YAAYv+E,KAAA,EAAO;IACjB,IAAI,OAAOA,KAAA,KAAU,UAAU;MAC7B,IAAI,CAACA,KAAA,EAAO;QACV,OAAO;MACT;MAGA,IAAIw/E,cAAA,CAAetrE,IAAA,CAAKlU,KAAK,GAAG;QAC9B,IAAIo/E,IAAA,GAAO,IAAI3O,IAAA,CAAKzwE,KAAK;QACzB,IAAI,KAAKs+E,OAAA,CAAQc,IAAI,GAAG;UACtB,OAAOA,IAAA;QACT;MACF;IACF;IACA,OAAO,MAAMb,WAAA,CAAYv+E,KAAK;EAChC;EACAq+E,eAAe5pD,GAAA,EAAK;IAClB,OAAOA,GAAA,YAAeg8C,IAAA;EACxB;EACA6N,QAAQc,IAAA,EAAM;IACZ,OAAO,CAACxkB,KAAA,CAAMwkB,IAAA,CAAK8B,OAAA,CAAQ,CAAC;EAC9B;EACA1C,QAAA,EAAU;IACR,OAAO,mBAAI/N,IAAA,CAAKzyC,GAAG;EACrB;EAAA;EAEAijD,wBAAwBH,IAAA,EAAMR,KAAA,EAAOlB,IAAA,EAAM;IAGzC,MAAM36C,CAAA,GAAI,mBAAIgsC,IAAA,CAAK;IACnBhsC,CAAA,CAAE29C,WAAA,CAAYtB,IAAA,EAAMR,KAAA,EAAOlB,IAAI;IAC/B36C,CAAA,CAAE49C,QAAA,CAAS,GAAG,GAAG,GAAG,CAAC;IACrB,OAAO59C,CAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAw9C,QAAQr/C,CAAA,EAAG;IACT,QAAQ,OAAOA,CAAA,EAAG/iC,KAAA,CAAM,EAAE;EAC5B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYA2gF,QAAQJ,GAAA,EAAKhB,IAAA,EAAM;IAGjB,MAAM36C,CAAA,GAAI,mBAAIgsC,IAAA,CAAK;IACnBhsC,CAAA,CAAE69C,cAAA,CAAelD,IAAA,CAAKY,WAAA,CAAY,GAAGZ,IAAA,CAAKN,QAAA,CAAS,GAAGM,IAAA,CAAKL,OAAA,CAAQ,CAAC;IACpEt6C,CAAA,CAAE89C,WAAA,CAAYnD,IAAA,CAAKoD,QAAA,CAAS,GAAGpD,IAAA,CAAKqD,UAAA,CAAW,GAAGrD,IAAA,CAAKsD,UAAA,CAAW,GAAGtD,IAAA,CAAKuD,eAAA,CAAgB,CAAC;IAC3F,OAAOvC,GAAA,CAAIkB,MAAA,CAAO78C,CAAC;EACrB;AAYF;AAVIm7C,kBAAA,CAAKp2E,IAAA,GAAO,SAASo5E,0BAA0B/+E,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAK+7E,kBAAA,EAAsBl2E,QAAA,CAASo0E,eAAA,EAAiB,CAAC,CAAC;AACrE;AAGA8B,kBAAA,CAAKj2E,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO66E,kBAAA;EACP/1E,OAAA,EAAS+1E,kBAAA,CAAkBp2E;AAC7B,CAAC;AA9ML,IAAMq5E,iBAAA,GAANjD,kBAAA;AAAA,CAiNC,MAAM;EACL,CAAC,OAAOl/E,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB84E,iBAAA,EAAmB,CAAC;IAC1F/7E,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACqqE,eAAe;IACxB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMgF,uBAAA,GAA0B;EAC9Bl1E,KAAA,EAAO;IACLm1E,SAAA,EAAW;EACb;EACA/F,OAAA,EAAS;IACP+F,SAAA,EAAW;MACTjC,IAAA,EAAM;MACNR,KAAA,EAAO;MACPI,GAAA,EAAK;IACP;IACAsC,cAAA,EAAgB;MACdlC,IAAA,EAAM;MACNR,KAAA,EAAO;IACT;IACA2C,aAAA,EAAe;MACbnC,IAAA,EAAM;MACNR,KAAA,EAAO;MACPI,GAAA,EAAK;IACP;IACAwC,kBAAA,EAAoB;MAClBpC,IAAA,EAAM;MACNR,KAAA,EAAO;IACT;EACF;AACF;AACA,IAAM6C,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAmBvB;AAjBIA,iBAAA,CAAK35E,IAAA,GAAO,SAAS45E,yBAAyBv/E,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKs/E,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAKrpE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMq8E;AACR,CAAC;AAGDA,iBAAA,CAAKnpE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC;IACVS,OAAA,EAASulE,WAAA;IACTnlE,QAAA,EAAU+pE;EACZ,CAAC;AACH,CAAC;AAjBL,IAAMQ,gBAAA,GAANF,iBAAA;AAAA,CAoBC,MAAM;EACL,CAAC,OAAOziF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBs5E,gBAAA,EAAkB,CAAC;IACzFv8E,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAAC;QACVS,OAAA,EAASulE,WAAA;QACTnlE,QAAA,EAAU+pE;MACZ,CAAC;IACH,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMS,oBAAA,GAAN,MAAMA,oBAAA,CAAoB,EAgB1B;AAdIA,oBAAA,CAAK95E,IAAA,GAAO,SAAS+5E,4BAA4B1/E,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKy/E,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKxpE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMw8E;AACR,CAAC;AAGDA,oBAAA,CAAKtpE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACurE,wBAAA,CAAyB,CAAC;AACxC,CAAC;AAdL,IAAMC,mBAAA,GAANH,oBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO5iF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB05E,mBAAA,EAAqB,CAAC;IAC5F38E,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLwE,SAAA,EAAW,CAACurE,wBAAA,CAAyB,CAAC;IACxC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAASA,yBAAyBE,OAAA,GAAUZ,uBAAA,EAAyB;EACnE,OAAO,CAAC;IACNpqE,OAAA,EAASulE,WAAA;IACTnlE,QAAA,EAAU+pE;EACZ,GAAG;IACDnqE,OAAA,EAAS6mE,gBAAA;IACT3mE,QAAA,EAAU8qE;EACZ,CAAC;AACH;AAGA,IAAMC,6BAAA,GAAN,MAAMA,6BAAA,CAA6B;EACjC9F,aAAaF,OAAA,EAASiG,IAAA,EAAM;IAC1B,OAAO,CAAC,EAAEjG,OAAA,IAAWA,OAAA,CAAQa,OAAA,KAAYb,OAAA,CAAQkG,KAAA,IAASD,IAAA,IAAQA,IAAA,CAAKE,SAAA;EACzE;AAYF;AAVIH,6BAAA,CAAKn6E,IAAA,GAAO,SAASu6E,qCAAqClgF,CAAA,EAAG;EAC3D,OAAO,KAAKA,CAAA,IAAK8/E,6BAAA,EAA8B;AACjD;AAGAA,6BAAA,CAAKh6E,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4+E,6BAAA;EACP95E,OAAA,EAAS85E,6BAAA,CAA6Bn6E;AACxC,CAAC;AAbL,IAAMw6E,4BAAA,GAANL,6BAAA;AAAA,CAgBC,MAAM;EACL,CAAC,OAAOjjF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi6E,4BAAA,EAA8B,CAAC;IACrGl9E,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMi6E,kBAAA,GAAN,MAAMA,kBAAA,CAAkB;EACtBpG,aAAaF,OAAA,EAASiG,IAAA,EAAM;IAC1B,OAAO,CAAC,EAAEjG,OAAA,IAAWA,OAAA,CAAQa,OAAA,KAAYb,OAAA,CAAQuG,OAAA,IAAWN,IAAA,IAAQA,IAAA,CAAKE,SAAA;EAC3E;AAaF;AAXIG,kBAAA,CAAKz6E,IAAA,GAAO,SAAS26E,0BAA0BtgF,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAKogF,kBAAA,EAAmB;AACtC;AAGAA,kBAAA,CAAKt6E,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOk/E,kBAAA;EACPp6E,OAAA,EAASo6E,kBAAA,CAAkBz6E,IAAA;EAC3B8M,UAAA,EAAY;AACd,CAAC;AAdL,IAAM8tE,iBAAA,GAANH,kBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOvjF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq6E,iBAAA,EAAmB,CAAC;IAC1Ft9E,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAOH,IAAM+tE,QAAA,GAAN,MAAMA,QAAA,CAAQ,EAcd;AAZIA,QAAA,CAAK76E,IAAA,GAAO,SAAS86E,gBAAgBzgF,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAKwgF,QAAA,EAAS;AAC5B;AAGAA,QAAA,CAAK57C,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMu9E,QAAA;EACN17C,SAAA,EAAW,CAAC,CAAC,IAAI,YAAY,EAAE,GAAG,CAAC,IAAI,WAAW,EAAE,CAAC;EACrD47C,SAAA,EAAW,CAAC,GAAG,UAAU;EACzBx7C,UAAA,EAAY;AACd,CAAC;AAZL,IAAMy7C,OAAA,GAANH,QAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAO3jF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBy6E,OAAA,EAAS,CAAC;IAChF19E,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAyBH,IAAM07C,cAAA,GAAN,MAAMA,cAAA,CAAc,EAgBpB;AAdIA,cAAA,CAAKj7E,IAAA,GAAO,SAASk7E,sBAAsB7gF,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK4gF,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAK3qE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM29E;AACR,CAAC;AAGDA,cAAA,CAAKzqE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiBA,eAAe;AAC5C,CAAC;AAdL,IAAM6H,aAAA,GAANF,cAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO/jF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB46E,aAAA,EAAe,CAAC;IACtF79E,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB0H,OAAO;MAClCl4D,OAAA,EAAS,CAACk4D,OAAA,EAAS1H,eAAe;IACpC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAI8H,WAAA;AAAA,CACH,UAAUA,cAAa;EACtBA,aAAYA,aAAY,WAAW,IAAI,CAAC,IAAI;EAC5CA,aAAYA,aAAY,SAAS,IAAI,CAAC,IAAI;EAC1CA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;EAC7CA,aAAYA,aAAY,QAAQ,IAAI,CAAC,IAAI;AAC3C,GAAGA,WAAA,KAAgBA,WAAA,GAAc,CAAC,EAAE;AAIpC,IAAMC,SAAA,GAAN,MAAgB;EACd5lF,YAAY6lF,SAAA,EACZ5lE,OAAA,EACA0mB,MAAA,EACAm/C,oCAAA,GAAuC,OAAO;IAC5C,KAAKD,SAAA,GAAYA,SAAA;IACjB,KAAK5lE,OAAA,GAAUA,OAAA;IACf,KAAK0mB,MAAA,GAASA,MAAA;IACd,KAAKm/C,oCAAA,GAAuCA,oCAAA;IAE5C,KAAKxkD,KAAA,GAAQqkD,WAAA,CAAYI,MAAA;EAC3B;EAAA;EAEAC,QAAA,EAAU;IACR,KAAKH,SAAA,CAAUI,aAAA,CAAc,IAAI;EACnC;AACF;AAGA,IAAMC,8BAAA,GAAiC1uB,+BAAA,CAAgC;EACrEuZ,OAAA,EAAS;EACT71C,OAAA,EAAS;AACX,CAAC;AAED,IAAMirD,kBAAA,GAAN,MAAyB;EACvBnmF,YAAA,EAAc;IACZ,KAAKmoD,OAAA,GAAU,mBAAIhoD,GAAA,CAAI;IAEvB,KAAKimF,qBAAA,GAAwBp8E,KAAA,IAAS;MACpC,MAAMiT,MAAA,GAASu8C,eAAA,CAAgBxvD,KAAK;MACpC,IAAIiT,MAAA,EAAQ;QACV,KAAKkrC,OAAA,CAAQhnD,GAAA,CAAI6I,KAAA,CAAMnC,IAAI,GAAGtH,OAAA,CAAQ,CAAC8lF,QAAA,EAAUpmE,OAAA,KAAY;UAC3D,IAAIA,OAAA,KAAYhD,MAAA,IAAUgD,OAAA,CAAQmvD,QAAA,CAASnyD,MAAM,GAAG;YAClDopE,QAAA,CAAS9lF,OAAA,CAAQ+I,OAAA,IAAWA,OAAA,CAAQg9E,WAAA,CAAYt8E,KAAK,CAAC;UACxD;QACF,CAAC;MACH;IACF;EACF;EAAA;EAEAu8E,WAAWz6E,MAAA,EAAQnL,IAAA,EAAMsf,OAAA,EAAS3W,OAAA,EAAS;IACzC,MAAMk9E,gBAAA,GAAmB,KAAKr+B,OAAA,CAAQhnD,GAAA,CAAIR,IAAI;IAC9C,IAAI6lF,gBAAA,EAAkB;MACpB,MAAMC,kBAAA,GAAqBD,gBAAA,CAAiBrlF,GAAA,CAAI8e,OAAO;MACvD,IAAIwmE,kBAAA,EAAoB;QACtBA,kBAAA,CAAmB31E,GAAA,CAAIxH,OAAO;MAChC,OAAO;QACLk9E,gBAAA,CAAiBnlF,GAAA,CAAI4e,OAAA,EAAS,mBAAIrO,GAAA,CAAI,CAACtI,OAAO,CAAC,CAAC;MAClD;IACF,OAAO;MACL,KAAK6+C,OAAA,CAAQ9mD,GAAA,CAAIV,IAAA,EAAM,mBAAIR,GAAA,CAAI,CAAC,CAAC8f,OAAA,EAAS,mBAAIrO,GAAA,CAAI,CAACtI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/DwC,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;QAC7BkF,QAAA,CAASgB,gBAAA,CAAiBjT,IAAA,EAAM,KAAKylF,qBAAA,EAAuBF,8BAA8B;MAC5F,CAAC;IACH;EACF;EAAA;EAEAQ,cAAc/lF,IAAA,EAAMsf,OAAA,EAAS3W,OAAA,EAAS;IACpC,MAAMk9E,gBAAA,GAAmB,KAAKr+B,OAAA,CAAQhnD,GAAA,CAAIR,IAAI;IAC9C,IAAI,CAAC6lF,gBAAA,EAAkB;MACrB;IACF;IACA,MAAMC,kBAAA,GAAqBD,gBAAA,CAAiBrlF,GAAA,CAAI8e,OAAO;IACvD,IAAI,CAACwmE,kBAAA,EAAoB;MACvB;IACF;IACAA,kBAAA,CAAmBnkF,MAAA,CAAOgH,OAAO;IACjC,IAAIm9E,kBAAA,CAAmB1qC,IAAA,KAAS,GAAG;MACjCyqC,gBAAA,CAAiBlkF,MAAA,CAAO2d,OAAO;IACjC;IACA,IAAIumE,gBAAA,CAAiBzqC,IAAA,KAAS,GAAG;MAC/B,KAAKoM,OAAA,CAAQ7lD,MAAA,CAAO3B,IAAI;MACxBiS,QAAA,CAASgE,mBAAA,CAAoBjW,IAAA,EAAM,KAAKylF,qBAAA,EAAuBF,8BAA8B;IAC/F;EACF;AACF;AAMA,IAAMS,4BAAA,GAA+B;EACnCC,aAAA,EAAe;EACfC,YAAA,EAAc;AAChB;AAKA,IAAMC,wBAAA,GAA2B;AAEjC,IAAMC,4BAAA,GAA+BvvB,+BAAA,CAAgC;EACnEuZ,OAAA,EAAS;EACT71C,OAAA,EAAS;AACX,CAAC;AAED,IAAM8rD,iBAAA,GAAoB,CAAC,aAAa,YAAY;AAEpD,IAAMC,eAAA,GAAkB,CAAC,WAAW,cAAc,YAAY,aAAa;AAQ3E,IAAMC,eAAA,GAAN,MAAMA,eAAA,CAAe;EAInBlnF,YAAYmnF,OAAA,EAASlpB,OAAA,EAASmpB,mBAAA,EAAqBpoB,SAAA,EAAW;IAC5D,KAAKmoB,OAAA,GAAUA,OAAA;IACf,KAAKlpB,OAAA,GAAUA,OAAA;IACf,KAAKe,SAAA,GAAYA,SAAA;IAEjB,KAAKqoB,cAAA,GAAiB;IAOtB,KAAKC,cAAA,GAAiB,mBAAInnF,GAAA,CAAI;IAE9B,KAAKonF,0BAAA,GAA6B;IAElC,IAAIvoB,SAAA,CAAUhJ,SAAA,EAAW;MACvB,KAAKwxB,iBAAA,GAAoBzrB,aAAA,CAAcqrB,mBAAmB;IAC5D;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAK,aAAa5tC,CAAA,EAAG6tC,CAAA,EAAG/gD,MAAA,GAAS,CAAC,GAAG;IAC9B,MAAMghD,aAAA,GAAgB,KAAKC,cAAA,GAAiB,KAAKA,cAAA,IAAkB,KAAKJ,iBAAA,CAAkBK,qBAAA,CAAsB;IAChH,MAAMC,eAAA,GAAkBl7E,cAAA,CAAAA,cAAA,KACnB+5E,4BAAA,GACAhgD,MAAA,CAAOohD,SAAA;IAEZ,IAAIphD,MAAA,CAAOqhD,QAAA,EAAU;MACnBnuC,CAAA,GAAI8tC,aAAA,CAAcM,IAAA,GAAON,aAAA,CAAcrvB,KAAA,GAAQ;MAC/CovB,CAAA,GAAIC,aAAA,CAAcO,GAAA,GAAMP,aAAA,CAAchvB,MAAA,GAAS;IACjD;IACA,MAAMwvB,MAAA,GAASxhD,MAAA,CAAOwhD,MAAA,IAAUC,wBAAA,CAAyBvuC,CAAA,EAAG6tC,CAAA,EAAGC,aAAa;IAC5E,MAAMU,OAAA,GAAUxuC,CAAA,GAAI8tC,aAAA,CAAcM,IAAA;IAClC,MAAMK,OAAA,GAAUZ,CAAA,GAAIC,aAAA,CAAcO,GAAA;IAClC,MAAMtB,aAAA,GAAgBkB,eAAA,CAAgBlB,aAAA;IACtC,MAAM2B,MAAA,GAAS31E,QAAA,CAASO,aAAA,CAAc,KAAK;IAC3Co1E,MAAA,CAAOphE,SAAA,CAAUrW,GAAA,CAAI,oBAAoB;IACzCy3E,MAAA,CAAO/mE,KAAA,CAAMymE,IAAA,GAAO,GAAGI,OAAA,GAAUF,MAAM;IACvCI,MAAA,CAAO/mE,KAAA,CAAM0mE,GAAA,GAAM,GAAGI,OAAA,GAAUH,MAAM;IACtCI,MAAA,CAAO/mE,KAAA,CAAMm3C,MAAA,GAAS,GAAGwvB,MAAA,GAAS,CAAC;IACnCI,MAAA,CAAO/mE,KAAA,CAAM82C,KAAA,GAAQ,GAAG6vB,MAAA,GAAS,CAAC;IAGlC,IAAIxhD,MAAA,CAAO6hD,KAAA,IAAS,MAAM;MACxBD,MAAA,CAAO/mE,KAAA,CAAMy3D,eAAA,GAAkBtyC,MAAA,CAAO6hD,KAAA;IACxC;IACAD,MAAA,CAAO/mE,KAAA,CAAMinE,kBAAA,GAAqB,GAAG7B,aAAa;IAClD,KAAKY,iBAAA,CAAkB3zE,WAAA,CAAY00E,MAAM;IAKzC,MAAMG,cAAA,GAAiBj2E,MAAA,CAAOi3D,gBAAA,CAAiB6e,MAAM;IACrD,MAAMI,sBAAA,GAAyBD,cAAA,CAAeE,kBAAA;IAC9C,MAAMC,sBAAA,GAAyBH,cAAA,CAAeD,kBAAA;IAM9C,MAAMK,mCAAA,GAAsCH,sBAAA,KAA2B;IAAA;IAAA;IAGvEE,sBAAA,KAA2B,QAAQA,sBAAA,KAA2B;IAAA;IAE9DlB,aAAA,CAAcrvB,KAAA,KAAU,KAAKqvB,aAAA,CAAchvB,MAAA,KAAW;IAEtD,MAAMowB,SAAA,GAAY,IAAInD,SAAA,CAAU,MAAM2C,MAAA,EAAQ5hD,MAAA,EAAQmiD,mCAAmC;IAKzFP,MAAA,CAAO/mE,KAAA,CAAM2rC,SAAA,GAAY;IACzB47B,SAAA,CAAUznD,KAAA,GAAQqkD,WAAA,CAAYqD,SAAA;IAC9B,IAAI,CAACriD,MAAA,CAAOsiD,UAAA,EAAY;MACtB,KAAKC,0BAAA,GAA6BH,SAAA;IACpC;IACA,IAAII,cAAA,GAAiB;IAGrB,IAAI,CAACL,mCAAA,KAAwClC,aAAA,IAAiBkB,eAAA,CAAgBjB,YAAA,GAAe;MAC3F,KAAK5oB,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC,MAAM07E,eAAA,GAAkBA,CAAA,KAAM,KAAKC,uBAAA,CAAwBN,SAAS;QACpE,MAAMO,kBAAA,GAAqBA,CAAA,KAAM,KAAKC,cAAA,CAAeR,SAAS;QAC9DR,MAAA,CAAO30E,gBAAA,CAAiB,iBAAiBw1E,eAAe;QAIxDb,MAAA,CAAO30E,gBAAA,CAAiB,oBAAoB01E,kBAAkB;QAC9DH,cAAA,GAAiB;UACfC,eAAA;UACAE;QACF;MACF,CAAC;IACH;IAEA,KAAKhC,cAAA,CAAejmF,GAAA,CAAI0nF,SAAA,EAAWI,cAAc;IAGjD,IAAIL,mCAAA,IAAuC,CAAClC,aAAA,EAAe;MACzD,KAAKyC,uBAAA,CAAwBN,SAAS;IACxC;IACA,OAAOA,SAAA;EACT;EAAA;EAEA9C,cAAc8C,SAAA,EAAW;IAEvB,IAAIA,SAAA,CAAUznD,KAAA,KAAUqkD,WAAA,CAAY6D,UAAA,IAAcT,SAAA,CAAUznD,KAAA,KAAUqkD,WAAA,CAAYI,MAAA,EAAQ;MACxF;IACF;IACA,MAAM0D,QAAA,GAAWV,SAAA,CAAU9oE,OAAA;IAC3B,MAAM6nE,eAAA,GAAkBl7E,cAAA,CAAAA,cAAA,KACnB+5E,4BAAA,GACAoC,SAAA,CAAUpiD,MAAA,CAAOohD,SAAA;IAItB0B,QAAA,CAASjoE,KAAA,CAAMinE,kBAAA,GAAqB,GAAGX,eAAA,CAAgBjB,YAAY;IACnE4C,QAAA,CAASjoE,KAAA,CAAMkoE,OAAA,GAAU;IACzBX,SAAA,CAAUznD,KAAA,GAAQqkD,WAAA,CAAY6D,UAAA;IAG9B,IAAIT,SAAA,CAAUjD,oCAAA,IAAwC,CAACgC,eAAA,CAAgBjB,YAAA,EAAc;MACnF,KAAKwC,uBAAA,CAAwBN,SAAS;IACxC;EACF;EAAA;EAEAY,WAAA,EAAa;IACX,KAAKC,iBAAA,CAAkB,EAAErpF,OAAA,CAAQgoF,MAAA,IAAUA,MAAA,CAAOvC,OAAA,CAAQ,CAAC;EAC7D;EAAA;EAEA6D,wBAAA,EAA0B;IACxB,KAAKD,iBAAA,CAAkB,EAAErpF,OAAA,CAAQgoF,MAAA,IAAU;MACzC,IAAI,CAACA,MAAA,CAAO5hD,MAAA,CAAOsiD,UAAA,EAAY;QAC7BV,MAAA,CAAOvC,OAAA,CAAQ;MACjB;IACF,CAAC;EACH;EAAA;EAEA8D,mBAAmB1C,mBAAA,EAAqB;IACtC,MAAMnnE,OAAA,GAAU87C,aAAA,CAAcqrB,mBAAmB;IACjD,IAAI,CAAC,KAAKpoB,SAAA,CAAUhJ,SAAA,IAAa,CAAC/1C,OAAA,IAAWA,OAAA,KAAY,KAAK8pE,eAAA,EAAiB;MAC7E;IACF;IAEA,KAAKC,oBAAA,CAAqB;IAC1B,KAAKD,eAAA,GAAkB9pE,OAAA;IAGvB+mE,iBAAA,CAAkBzmF,OAAA,CAAQsH,IAAA,IAAQ;MAChCq/E,eAAA,CAAe+C,aAAA,CAAc1D,UAAA,CAAW,KAAKtoB,OAAA,EAASp2D,IAAA,EAAMoY,OAAA,EAAS,IAAI;IAC3E,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAqmE,YAAYt8E,KAAA,EAAO;IACjB,IAAIA,KAAA,CAAMnC,IAAA,KAAS,aAAa;MAC9B,KAAK0pE,YAAA,CAAavnE,KAAK;IACzB,WAAWA,KAAA,CAAMnC,IAAA,KAAS,cAAc;MACtC,KAAKqiF,aAAA,CAAclgF,KAAK;IAC1B,OAAO;MACL,KAAKmgF,YAAA,CAAa;IACpB;IAIA,IAAI,CAAC,KAAK5C,0BAAA,EAA4B;MAMpC,KAAKtpB,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnCu5E,eAAA,CAAgB1mF,OAAA,CAAQsH,IAAA,IAAQ;UAC9B,KAAKkiF,eAAA,CAAgBn2E,gBAAA,CAAiB/L,IAAA,EAAM,MAAMk/E,4BAA4B;QAChF,CAAC;MACH,CAAC;MACD,KAAKQ,0BAAA,GAA6B;IACpC;EACF;EAAA;EAEA8B,wBAAwBN,SAAA,EAAW;IACjC,IAAIA,SAAA,CAAUznD,KAAA,KAAUqkD,WAAA,CAAYqD,SAAA,EAAW;MAC7C,KAAKoB,uBAAA,CAAwBrB,SAAS;IACxC,WAAWA,SAAA,CAAUznD,KAAA,KAAUqkD,WAAA,CAAY6D,UAAA,EAAY;MACrD,KAAKD,cAAA,CAAeR,SAAS;IAC/B;EACF;EAAA;AAAA;AAAA;AAAA;EAKAqB,wBAAwBrB,SAAA,EAAW;IACjC,MAAMsB,2BAAA,GAA8BtB,SAAA,KAAc,KAAKG,0BAAA;IACvD,MAAM;MACJD;IACF,IAAIF,SAAA,CAAUpiD,MAAA;IACdoiD,SAAA,CAAUznD,KAAA,GAAQqkD,WAAA,CAAY2E,OAAA;IAK9B,IAAI,CAACrB,UAAA,KAAe,CAACoB,2BAAA,IAA+B,CAAC,KAAKhD,cAAA,GAAiB;MACzE0B,SAAA,CAAU/C,OAAA,CAAQ;IACpB;EACF;EAAA;EAEAuD,eAAeR,SAAA,EAAW;IACxB,MAAMI,cAAA,GAAiB,KAAK7B,cAAA,CAAenmF,GAAA,CAAI4nF,SAAS,KAAK;IAC7D,KAAKzB,cAAA,CAAehlF,MAAA,CAAOymF,SAAS;IAEpC,IAAI,CAAC,KAAKzB,cAAA,CAAevrC,IAAA,EAAM;MAC7B,KAAK6rC,cAAA,GAAiB;IACxB;IAGA,IAAImB,SAAA,KAAc,KAAKG,0BAAA,EAA4B;MACjD,KAAKA,0BAAA,GAA6B;IACpC;IACAH,SAAA,CAAUznD,KAAA,GAAQqkD,WAAA,CAAYI,MAAA;IAC9B,IAAIoD,cAAA,KAAmB,MAAM;MAC3BJ,SAAA,CAAU9oE,OAAA,CAAQrJ,mBAAA,CAAoB,iBAAiBuyE,cAAA,CAAeC,eAAe;MACrFL,SAAA,CAAU9oE,OAAA,CAAQrJ,mBAAA,CAAoB,oBAAoBuyE,cAAA,CAAeG,kBAAkB;IAC7F;IACAP,SAAA,CAAU9oE,OAAA,CAAQjP,MAAA,CAAO;EAC3B;EAAA;EAEAugE,aAAavnE,KAAA,EAAO;IAGlB,MAAMugF,eAAA,GAAkBva,+BAAA,CAAgChmE,KAAK;IAC7D,MAAMwgF,gBAAA,GAAmB,KAAKC,oBAAA,IAAwBjZ,IAAA,CAAKC,GAAA,CAAI,IAAI,KAAKgZ,oBAAA,GAAuB3D,wBAAA;IAC/F,IAAI,CAAC,KAAKK,OAAA,CAAQuD,cAAA,IAAkB,CAACH,eAAA,IAAmB,CAACC,gBAAA,EAAkB;MACzE,KAAKnD,cAAA,GAAiB;MACtB,KAAKI,YAAA,CAAaz9E,KAAA,CAAM2gF,OAAA,EAAS3gF,KAAA,CAAM4gF,OAAA,EAAS,KAAKzD,OAAA,CAAQ0D,YAAY;IAC3E;EACF;EAAA;EAEAX,cAAclgF,KAAA,EAAO;IACnB,IAAI,CAAC,KAAKm9E,OAAA,CAAQuD,cAAA,IAAkB,CAACva,gCAAA,CAAiCnmE,KAAK,GAAG;MAI5E,KAAKygF,oBAAA,GAAuBjZ,IAAA,CAAKC,GAAA,CAAI;MACrC,KAAK4V,cAAA,GAAiB;MAGtB,MAAMhX,OAAA,GAAUrmE,KAAA,CAAMsmE,cAAA;MAGtB,IAAID,OAAA,EAAS;QACX,SAASn7C,CAAA,GAAI,GAAGA,CAAA,GAAIm7C,OAAA,CAAQvuE,MAAA,EAAQozB,CAAA,IAAK;UACvC,KAAKuyD,YAAA,CAAapX,OAAA,CAAQn7C,CAAC,EAAEy1D,OAAA,EAASta,OAAA,CAAQn7C,CAAC,EAAE01D,OAAA,EAAS,KAAKzD,OAAA,CAAQ0D,YAAY;QACrF;MACF;IACF;EACF;EAAA;EAEAV,aAAA,EAAe;IACb,IAAI,CAAC,KAAK9C,cAAA,EAAgB;MACxB;IACF;IACA,KAAKA,cAAA,GAAiB;IAEtB,KAAKuC,iBAAA,CAAkB,EAAErpF,OAAA,CAAQgoF,MAAA,IAAU;MAGzC,MAAM/e,SAAA,GAAY+e,MAAA,CAAOjnD,KAAA,KAAUqkD,WAAA,CAAY2E,OAAA,IAAW/B,MAAA,CAAO5hD,MAAA,CAAOmkD,oBAAA,IAAwBvC,MAAA,CAAOjnD,KAAA,KAAUqkD,WAAA,CAAYqD,SAAA;MAC7H,IAAI,CAACT,MAAA,CAAO5hD,MAAA,CAAOsiD,UAAA,IAAczf,SAAA,EAAW;QAC1C+e,MAAA,CAAOvC,OAAA,CAAQ;MACjB;IACF,CAAC;EACH;EACA4D,kBAAA,EAAoB;IAClB,OAAO5nF,KAAA,CAAMC,IAAA,CAAK,KAAKqlF,cAAA,CAAevlF,IAAA,CAAK,CAAC;EAC9C;EAAA;EAEAioF,qBAAA,EAAuB;IACrB,MAAM1nC,WAAU,KAAKynC,eAAA;IACrB,IAAIznC,UAAS;MACX0kC,iBAAA,CAAkBzmF,OAAA,CAAQsH,IAAA,IAAQq/E,eAAA,CAAe+C,aAAA,CAAcvD,aAAA,CAAc7+E,IAAA,EAAMy6C,UAAS,IAAI,CAAC;MACjG,IAAI,KAAKilC,0BAAA,EAA4B;QACnCN,eAAA,CAAgB1mF,OAAA,CAAQsH,IAAA,IAAQy6C,SAAQ1rC,mBAAA,CAAoB/O,IAAA,EAAM,MAAMk/E,4BAA4B,CAAC;QACrG,KAAKQ,0BAAA,GAA6B;MACpC;IACF;EACF;AACF;AAxSIL,eAAA,CAAK+C,aAAA,GAAgB,IAAI9D,kBAAA,CAAmB;AAFhD,IAAM4E,cAAA,GAAN7D,eAAA;AA8SA,SAASkB,yBAAyBvuC,CAAA,EAAG6tC,CAAA,EAAGsD,IAAA,EAAM;EAC5C,MAAMC,KAAA,GAAQC,IAAA,CAAK7K,GAAA,CAAI6K,IAAA,CAAKC,GAAA,CAAItxC,CAAA,GAAImxC,IAAA,CAAK/C,IAAI,GAAGiD,IAAA,CAAKC,GAAA,CAAItxC,CAAA,GAAImxC,IAAA,CAAKI,KAAK,CAAC;EACxE,MAAMC,KAAA,GAAQH,IAAA,CAAK7K,GAAA,CAAI6K,IAAA,CAAKC,GAAA,CAAIzD,CAAA,GAAIsD,IAAA,CAAK9C,GAAG,GAAGgD,IAAA,CAAKC,GAAA,CAAIzD,CAAA,GAAIsD,IAAA,CAAKM,MAAM,CAAC;EACxE,OAAOJ,IAAA,CAAKK,IAAA,CAAKN,KAAA,GAAQA,KAAA,GAAQI,KAAA,GAAQA,KAAK;AAChD;AAGA,IAAMG,yBAAA,GAA4B,IAAIr7E,cAAA,CAAe,2BAA2B;AAChF,IAAMs7E,UAAA,GAAN,MAAMA,UAAA,CAAU;EAAA;AAAA;AAAA;AAAA;EAKd,IAAIhuB,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,IAAIA,KAAA,EAAO;MACT,KAAK8oF,uBAAA,CAAwB;IAC/B;IACA,KAAKnsB,SAAA,GAAY38D,KAAA;IACjB,KAAK2qF,4BAAA,CAA6B;EACpC;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIppC,QAAA,EAAU;IACZ,OAAO,KAAKqpC,QAAA,IAAY,KAAK3tB,WAAA,CAAY/S,aAAA;EAC3C;EACA,IAAI3I,QAAQA,UAAS;IACnB,KAAKqpC,QAAA,GAAWrpC;IAChB,KAAKopC,4BAAA,CAA6B;EACpC;EACA1rF,YAAYg+D,WAAA,EAAalyD,MAAA,EAAQ6L,QAAA,EAAUi0E,aAAA,EAAeC,cAAA,EAAgB;IACxE,KAAK7tB,WAAA,GAAcA,WAAA;IACnB,KAAK6tB,cAAA,GAAiBA,cAAA;IAMtB,KAAK1D,MAAA,GAAS;IACd,KAAKzqB,SAAA,GAAY;IAEjB,KAAKid,cAAA,GAAiB;IACtB,KAAKmR,cAAA,GAAiBF,aAAA,IAAiB,CAAC;IACxC,KAAKG,eAAA,GAAkB,IAAIhB,cAAA,CAAe,MAAMj/E,MAAA,EAAQkyD,WAAA,EAAarmD,QAAQ;EAC/E;EACA0wB,SAAA,EAAW;IACT,KAAKsyC,cAAA,GAAiB;IACtB,KAAK+Q,4BAAA,CAA6B;EACpC;EACA5pE,YAAA,EAAc;IACZ,KAAKiqE,eAAA,CAAgB/B,oBAAA,CAAqB;EAC5C;EAAA;EAEAL,WAAA,EAAa;IACX,KAAKoC,eAAA,CAAgBpC,UAAA,CAAW;EAClC;EAAA;EAEAE,wBAAA,EAA0B;IACxB,KAAKkC,eAAA,CAAgBlC,uBAAA,CAAwB;EAC/C;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIgB,aAAA,EAAe;IACjB,OAAO;MACL7C,QAAA,EAAU,KAAKA,QAAA;MACfG,MAAA,EAAQ,KAAKA,MAAA;MACbK,KAAA,EAAO,KAAKA,KAAA;MACZT,SAAA,EAAWn7E,cAAA,CAAAA,cAAA,CAAAA,cAAA,KACN,KAAKk/E,cAAA,CAAe/D,SAAA,GACnB,KAAK8D,cAAA,KAAmB,mBAAmB;QAC7CjF,aAAA,EAAe;QACfC,YAAA,EAAc;MAChB,IAAI,CAAC,IACF,KAAKkB,SAAA;MAEV+C,oBAAA,EAAsB,KAAKgB,cAAA,CAAehB;IAC5C;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIJ,eAAA,EAAiB;IACnB,OAAO,KAAKjtB,QAAA,IAAY,CAAC,CAAC,KAAKquB,cAAA,CAAeruB,QAAA;EAChD;EAAA;EAEAiuB,6BAAA,EAA+B;IAC7B,IAAI,CAAC,KAAKjuB,QAAA,IAAY,KAAKkd,cAAA,EAAgB;MACzC,KAAKoR,eAAA,CAAgBjC,kBAAA,CAAmB,KAAKxnC,OAAO;IACtD;EACF;EAAA;EAEA0pC,OAAOC,SAAA,EAAWvE,CAAA,GAAI,GAAG/gD,MAAA,EAAQ;IAC/B,IAAI,OAAOslD,SAAA,KAAc,UAAU;MACjC,OAAO,KAAKF,eAAA,CAAgBtE,YAAA,CAAawE,SAAA,EAAWvE,CAAA,EAAG96E,cAAA,CAAAA,cAAA,KAClD,KAAKi+E,YAAA,GACLlkD,MAAA,CACJ;IACH,OAAO;MACL,OAAO,KAAKolD,eAAA,CAAgBtE,YAAA,CAAa,GAAG,GAAG76E,cAAA,CAAAA,cAAA,KAC1C,KAAKi+E,YAAA,GACLoB,SAAA,CACJ;IACH;EACF;AA8BF;AA5BIR,UAAA,CAAKlhF,IAAA,GAAO,SAAS2hF,kBAAkBtnF,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAK6mF,UAAA,EAAcz/B,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAuB6K,QAAQ,GAAM7K,iBAAA,CAAkBw/B,yBAAA,EAA2B,CAAC,GAAMx/B,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AAC3O;AAGAV,UAAA,CAAKjiD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4jF,UAAA;EACN/hD,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,GAAG,CAAC,IAAI,aAAa,EAAE,CAAC;EACzD47C,SAAA,EAAW,CAAC,GAAG,YAAY;EAC3Bj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS8/B,uBAAuBj/C,EAAA,EAAIlb,GAAA,EAAK;IACrD,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,wBAAwBp6D,GAAA,CAAIq6D,SAAS;IACtD;EACF;EACA3iD,MAAA,EAAQ;IACN6+C,KAAA,EAAO,CAAI57B,UAAA,CAAasnB,IAAA,EAAM,kBAAkB,OAAO;IACvDoY,SAAA,EAAW,CAAI1/B,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,WAAW;IACnE8T,QAAA,EAAU,CAAIp7B,UAAA,CAAasnB,IAAA,EAAM,qBAAqB,UAAU;IAChEiU,MAAA,EAAQ,CAAIv7B,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,QAAQ;IAC1D6T,SAAA,EAAW,CAAIn7B,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,WAAW;IACnEzW,QAAA,EAAU,CAAI7Q,UAAA,CAAasnB,IAAA,EAAM,qBAAqB,UAAU;IAChE5xB,OAAA,EAAS,CAAIsK,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,SAAS;EAC/D;EACArqC,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;AACd,CAAC;AAlIL,IAAMyiD,SAAA,GAANd,UAAA;AAAA,CAqIC,MAAM;EACL,CAAC,OAAOhqF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByhF,SAAA,EAAW,CAAC;IAClF1kF,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QACT,gCAAgC;MAClC;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAWgvD;EACb,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACg3E,yBAAyB;IAClC,CAAC;EACH,GAAG;IACD3jF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG;IACF3D,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,gBAAgB;IACzB,CAAC;IACD83E,SAAA,EAAW,CAAC;MACVzkF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDwzE,QAAA,EAAU,CAAC;MACTngF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,mBAAmB;IAC5B,CAAC;IACD2zE,MAAA,EAAQ,CAAC;MACPtgF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACDuzE,SAAA,EAAW,CAAC;MACVlgF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDipD,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,mBAAmB;IAC5B,CAAC;IACD8tC,OAAA,EAAS,CAAC;MACRz6C,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMg4E,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAgBtB;AAdIA,gBAAA,CAAKjiF,IAAA,GAAO,SAASkiF,wBAAwB7nF,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK4nF,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAK3xE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2kF;AACR,CAAC;AAGDA,gBAAA,CAAKzxE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiBA,eAAe;AAC5C,CAAC;AAdL,IAAM6O,eAAA,GAANF,gBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO/qF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4hF,eAAA,EAAiB,CAAC;IACxF7kF,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB0O,SAAS;MACpCl/D,OAAA,EAAS,CAACk/D,SAAA,EAAW1O,eAAe;IACtC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAeH,IAAM8O,kBAAA,GAAN,MAAMA,kBAAA,CAAkB;EACtB3sF,YAAY6rF,cAAA,EAAgB;IAC1B,KAAKA,cAAA,GAAiBA,cAAA;IAEtB,KAAKvqD,KAAA,GAAQ;IAEb,KAAKm8B,QAAA,GAAW;IAKhB,KAAKmvB,UAAA,GAAa;EACpB;AAgCF;AA9BID,kBAAA,CAAKpiF,IAAA,GAAO,SAASsiF,0BAA0BjoF,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAK+nF,kBAAA,EAAsB3gC,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACpF;AAGAQ,kBAAA,CAAK//C,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM8kF,kBAAA;EACNjjD,SAAA,EAAW,CAAC,CAAC,qBAAqB,CAAC;EACnC47C,SAAA,EAAW,CAAC,GAAG,qBAAqB;EACpCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASwgC,+BAA+B3/C,EAAA,EAAIlb,GAAA,EAAK;IAC7D,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,qCAAqCp6D,GAAA,CAAIqP,KAAA,KAAU,eAAe,EAAE,+BAA+BrP,GAAA,CAAIqP,KAAA,KAAU,SAAS,EAAE,gCAAgCrP,GAAA,CAAIwrC,QAAQ,EAAE,+BAA+BxrC,GAAA,CAAI26D,UAAA,KAAe,SAAS,EAAE,4BAA4B36D,GAAA,CAAI26D,UAAA,KAAe,MAAM,EAAE,2BAA2B36D,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB;IACjX;EACF;EACAliD,MAAA,EAAQ;IACNrI,KAAA,EAAO;IACPm8B,QAAA,EAAU;IACVmvB,UAAA,EAAY;EACd;EACA9iD,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,QAAA,EAAU,SAAS8/C,2BAA2B5/C,EAAA,EAAIlb,GAAA,EAAK,CAAC;EACxD1Q,MAAA,EAAQ,CAAC,u9FAAy9F;EACl+FoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA1CL,IAAMC,iBAAA,GAANN,kBAAA;AAAA,CA6CC,MAAM;EACL,CAAC,OAAOlrF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmiF,iBAAA,EAAmB,CAAC;IAC1FplF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACLmQ,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzC/+D,QAAA,EAAU;MACV6e,QAAA,EAAU;MACV/tB,IAAA,EAAM;QACJ,SAAS;QACT,6CAA6C;QAC7C,uCAAuC;QACvC,wCAAwC;QACxC,uCAAuC;QACvC,oCAAoC;QACpC,mCAAmC;MACrC;MACA4qB,UAAA,EAAY;MACZvoB,MAAA,EAAQ,CAAC,u9FAAy9F;IACp+F,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG;IACF7qD,KAAA,EAAO,CAAC;MACNz5B,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC;IACR,CAAC;IACD0iD,UAAA,EAAY,CAAC;MACX/kF,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMkjD,wBAAA,GAAN,MAAMA,wBAAA,CAAwB,EAgB9B;AAdIA,wBAAA,CAAK7iF,IAAA,GAAO,SAAS8iF,gCAAgCzoF,CAAA,EAAG;EACtD,OAAO,KAAKA,CAAA,IAAKwoF,wBAAA,EAAyB;AAC5C;AAGAA,wBAAA,CAAKvyE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMulF;AACR,CAAC;AAGDA,wBAAA,CAAKryE,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAe;AAC3B,CAAC;AAdL,IAAMyP,uBAAA,GAANF,wBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO3rF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwiF,uBAAA,EAAyB,CAAC;IAChGzlF,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiBoP,iBAAiB;MAC5C5/D,OAAA,EAAS,CAAC4/D,iBAAiB;IAC7B,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMM,2BAAA,GAA8B,IAAIp9E,cAAA,CAAe,6BAA6B;AAsBpF,IAAIq9E,wBAAA,GAA2B;AAM/B,IAAMC,YAAA,GAAe,IAAIt9E,cAAA,CAAe,aAAa;AAIrD,IAAMu9E,YAAA,GAAN,MAAMA,YAAA,CAAY;EAChB1tF,YAAYmmB,MAAA,EAAQ;IAElB,KAAKs3C,QAAA,GAAW;IAEhB,KAAKkwB,QAAA,GAAW,sBAAsBH,wBAAA,EAA0B;IAChE,KAAKI,MAAA,GAASznE,MAAA,EAAQ0nE,WAAA,IAAe;EACvC;AAoDF;AAlDIH,YAAA,CAAKnjF,IAAA,GAAO,SAASujF,oBAAoBlpF,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK8oF,YAAA,EAAgB1hC,iBAAA,CAAkBuhC,2BAAA,EAA6B,CAAC,CAAC;AACpF;AAGAG,YAAA,CAAK9gD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM6lF,YAAA;EACNhkD,SAAA,EAAW,CAAC,CAAC,cAAc,CAAC;EAC5B47C,SAAA,EAAW,CAAC,GAAG,kBAAkB;EACjCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASyhC,yBAAyB5gD,EAAA,EAAIlb,GAAA,EAAK;IACvD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,QAAQ16B,GAAA,CAAI27D,MAAA,GAAS,OAAO,OAAO,EAAE,iBAAiB37D,GAAA,CAAI27D,MAAA,GAAS,OAAO37D,GAAA,CAAIwrC,QAAA,CAASr6D,QAAA,CAAS,CAAC,EAAE,mBAAmB6uB,GAAA,CAAI27D,MAAA,GAAS,OAAO37D,GAAA,CAAI07D,QAAQ;IACvK;EACF;EACAhkD,MAAA,EAAQ;IACN0yC,KAAA,EAAO;IACP5e,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAjjB,QAAA,EAAU,CAAC,aAAa;EACxBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASg0E,YAAA;IACT/zE,WAAA,EAAag0E;EACf,CAAC,CAAC,GAAM3gC,wBAAA,EAA6BjgB,mBAAmB;EACxDkhD,kBAAA,EAAoB3S,GAAA;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,QAAQ,gBAAgB,GAAG,0BAA0B,GAAG,IAAI,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC3GhhD,QAAA,EAAU,SAASihD,qBAAqB/gD,EAAA,EAAIlb,GAAA,EAAK;IAC/C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB/S,GAAG;MACnBY,cAAA,CAAe,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;MACzCC,MAAA,CAAO,CAAC;MACRmS,YAAA,CAAa,CAAC;MACdlS,YAAA,CAAa,EAAE;MACfkS,YAAA,CAAa,GAAG,CAAC;IACtB;IACA,IAAIjhD,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ;MACnDme,UAAA,CAAW,MAAM3pD,GAAA,CAAI07D,QAAQ;MAC7BxR,SAAA,CAAU,CAAC;MACXC,kBAAA,CAAmB,IAAInqD,GAAA,CAAIoqD,KAAA,EAAO,GAAG;IAC1C;EACF;EACA96D,MAAA,EAAQ,CAAC,45BAA45B;EACr6BoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAzDL,IAAMqB,WAAA,GAANX,YAAA;AAAA,CA4DC,MAAM;EACL,CAAC,OAAOjsF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBujF,WAAA,EAAa,CAAC;IACpFxmF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCjuE,IAAA,EAAM;QACJ,SAAS;QACT,eAAe;QACf,wBAAwB;QACxB,0BAA0B;MAC5B;MACAlG,SAAA,EAAW,CAAC;QACVS,OAAA,EAASg0E,YAAA;QACT/zE,WAAA,EAAa20E;MACf,CAAC;MACDvkD,UAAA,EAAY;MACZmD,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,45BAA45B;IACv6B,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+4E,2BAA2B;IACpC,GAAG;MACD1lF,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACF+4D,KAAA,EAAO,CAAC;MACNx0E,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAIwhC,gBAAA,GAAmB;AAEvB,IAAMC,wBAAA,GAAN,MAA+B;EAC7BvuF,YACAuV,MAAA,EACAi5E,WAAA,GAAc,OAAO;IACnB,KAAKj5E,MAAA,GAASA,MAAA;IACd,KAAKi5E,WAAA,GAAcA,WAAA;EACrB;AACF;AAIA,IAAMC,UAAA,GAAN,MAAMA,UAAA,CAAU;EAAA;EAEd,IAAIC,SAAA,EAAW;IACb,OAAO,KAAKC,OAAA,IAAW,KAAKA,OAAA,CAAQD,QAAA;EACtC;EAAA;EAEA,IAAI7S,SAAA,EAAW;IACb,OAAO,KAAK+S,SAAA;EACd;EAAA;EAEA,IAAInxB,SAAA,EAAW;IACb,OAAO,KAAKv+B,KAAA,IAAS,KAAKA,KAAA,CAAMu+B,QAAA,IAAY,KAAKC,SAAA;EACnD;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,KAAK28D,SAAA,GAAY38D,KAAA;EACnB;EAAA;EAEA,IAAI8tF,cAAA,EAAgB;IAClB,OAAO,CAAC,EAAE,KAAKF,OAAA,IAAW,KAAKA,OAAA,CAAQE,aAAA;EACzC;EAAA;EAEA,IAAIC,6BAAA,EAA+B;IACjC,OAAO,CAAC,EAAE,KAAKH,OAAA,IAAW,KAAKA,OAAA,CAAQG,4BAAA;EACzC;EACA9uF,YAAY0rE,QAAA,EAAUqjB,kBAAA,EAAoBJ,OAAA,EAASzvD,QAAO;IACxD,KAAKwsC,QAAA,GAAWA,QAAA;IAChB,KAAKqjB,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKJ,OAAA,GAAUA,OAAA;IACf,KAAKzvD,KAAA,GAAQA;IACb,KAAK0vD,SAAA,GAAY;IACjB,KAAKI,OAAA,GAAU;IACf,KAAKtxB,SAAA,GAAY;IACjB,KAAKuxB,oBAAA,GAAuB;IAE5B,KAAK3pE,EAAA,GAAK,cAAcgpE,gBAAA,EAAkB;IAG1C,KAAKY,iBAAA,GAAoB,IAAInoD,YAAA,CAAa;IAE1C,KAAKu3C,aAAA,GAAgB,IAAIpgC,OAAA,CAAQ;EACnC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIixC,OAAA,EAAS;IACX,OAAO,KAAKH,OAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKA,IAAII,UAAA,EAAY;IAEd,QAAQ,KAAKC,KAAA,EAAOpkC,aAAA,CAAczoC,WAAA,IAAe,IAAIxhB,IAAA,CAAK;EAC5D;EAAA;EAEAsuF,OAAOC,SAAA,GAAY,MAAM;IACvB,IAAI,CAAC,KAAKX,SAAA,EAAW;MACnB,KAAKA,SAAA,GAAY;MACjB,KAAKG,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,IAAIimD,SAAA,EAAW;QACb,KAAKC,yBAAA,CAA0B;MACjC;IACF;EACF;EAAA;EAEAC,SAASF,SAAA,GAAY,MAAM;IACzB,IAAI,KAAKX,SAAA,EAAW;MAClB,KAAKA,SAAA,GAAY;MACjB,KAAKG,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,IAAIimD,SAAA,EAAW;QACb,KAAKC,yBAAA,CAA0B;MACjC;IACF;EACF;EAAA;EAEAtiB,MAAMuH,OAAA,EAASzvE,OAAA,EAAS;IAGtB,MAAMib,OAAA,GAAU,KAAKyvE,eAAA,CAAgB;IACrC,IAAI,OAAOzvE,OAAA,CAAQitD,KAAA,KAAU,YAAY;MACvCjtD,OAAA,CAAQitD,KAAA,CAAMloE,OAAO;IACvB;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAokE,gBAAA,EAAkB;IAChB,IAAI,CAAC,KAAK4lB,OAAA,EAAS;MACjB,KAAKA,OAAA,GAAU;MACf,KAAKD,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6/B,kBAAA,EAAoB;IAClB,IAAI,KAAK6lB,OAAA,EAAS;MAChB,KAAKA,OAAA,GAAU;MACf,KAAKD,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC;EACF;EAAA;EAEA89B,SAAA,EAAW;IACT,OAAO,KAAKgoB,SAAA;EACd;EAAA;EAEAO,eAAe3lF,KAAA,EAAO;IACpB,KAAKA,KAAA,CAAM89D,OAAA,KAAY9N,KAAA,IAAShwD,KAAA,CAAM89D,OAAA,KAAYzN,KAAA,KAAU,CAACe,cAAA,CAAepxD,KAAK,GAAG;MAClF,KAAK4lF,qBAAA,CAAsB;MAE3B5lF,KAAA,CAAMqe,cAAA,CAAe;IACvB;EACF;EAAA;AAAA;AAAA;AAAA;EAKAunE,sBAAA,EAAwB;IACtB,IAAI,CAAC,KAAKnyB,QAAA,EAAU;MAClB,KAAKmxB,SAAA,GAAY,KAAKF,QAAA,GAAW,CAAC,KAAKE,SAAA,GAAY;MACnD,KAAKG,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,KAAKkmD,yBAAA,CAA0B,IAAI;IACrC;EACF;EAAA;EAAA;EAAA;EAAA;EAKAK,aAAA,EAAe;IACb,OAAO,KAAKpyB,QAAA,GAAW,OAAO;EAChC;EAAA;EAEAiyB,gBAAA,EAAkB;IAChB,OAAO,KAAKhkB,QAAA,CAASzgB,aAAA;EACvB;EACA6kC,mBAAA,EAAqB;IAMnB,IAAI,KAAKlB,SAAA,EAAW;MAClB,MAAMQ,SAAA,GAAY,KAAKA,SAAA;MACvB,IAAIA,SAAA,KAAc,KAAKH,oBAAA,EAAsB;QAC3C,IAAI,KAAKA,oBAAA,EAAsB;UAC7B,KAAK3Q,aAAA,CAAcxxE,IAAA,CAAK;QAC1B;QACA,KAAKmiF,oBAAA,GAAuBG,SAAA;MAC9B;IACF;EACF;EACAttE,YAAA,EAAc;IACZ,KAAKw8D,aAAA,CAAc9vE,QAAA,CAAS;EAC9B;EAAA;EAEAghF,0BAA0BhB,WAAA,GAAc,OAAO;IAC7C,KAAKU,iBAAA,CAAkBpmD,IAAA,CAAK,IAAIylD,wBAAA,CAAyB,MAAMC,WAAW,CAAC;EAC7E;AA6EF;AA3EIC,UAAA,CAAKlkF,IAAA,GAAO,SAASwlF,kBAAkBnrF,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAK6pF,UAAA,EAAcziC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAkBuhC,2BAAA,EAA6B,CAAC,GAAMvhC,iBAAA,CAAkByhC,YAAA,EAAc,CAAC,CAAC;AAC1M;AAGAgB,UAAA,CAAK7hD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM4mF,UAAA;EACN/kD,SAAA,EAAW,CAAC,CAAC,YAAY,CAAC;EAC1BsmD,SAAA,EAAW,SAASC,gBAAgB9iD,EAAA,EAAIlb,GAAA,EAAK;IAC3C,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY5U,GAAA,EAAK,CAAC;IACvB;IACA,IAAInuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIo9D,KAAA,GAAQrgC,EAAA,CAAGxlD,KAAA;IAC9D;EACF;EACA87E,SAAA,EAAW,CAAC,QAAQ,UAAU,GAAG,kBAAkB,eAAe;EAClEj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS6jC,uBAAuBhjD,EAAA,EAAIlb,GAAA,EAAK;IACrD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAAS4jC,mCAAA,EAAqC;QACnE,OAAOn+D,GAAA,CAAI29D,qBAAA,CAAsB;MACnC,CAAC,EAAE,WAAW,SAASS,qCAAqC3jC,MAAA,EAAQ;QAClE,OAAOz6B,GAAA,CAAI09D,cAAA,CAAejjC,MAAM;MAClC,CAAC;IACH;IACA,IAAIvf,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE;MAC3BqnC,WAAA,CAAY,iBAAiB16B,GAAA,CAAI4pD,QAAQ,EAAE,iBAAiB5pD,GAAA,CAAIwrC,QAAA,CAASr6D,QAAA,CAAS,CAAC;MACnFipF,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAI4pD,QAAQ,EAAE,2BAA2B5pD,GAAA,CAAIy8D,QAAQ,EAAE,yBAAyBz8D,GAAA,CAAIk9D,MAAM,EAAE,2BAA2Bl9D,GAAA,CAAIwrC,QAAQ;IAC/K;EACF;EACA9zB,MAAA,EAAQ;IACN5oC,KAAA,EAAO;IACPukB,EAAA,EAAI;IACJm4C,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAljB,OAAA,EAAS;IACPslD,iBAAA,EAAmB;EACrB;EACArlD,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BjgB,mBAAmB;EAC9DkhD,kBAAA,EAAoBxS,GAAA;EACpBzuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,eAAe,QAAQ,GAAG,kCAAkC,GAAG,YAAY,OAAO,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,SAAS,WAAW,eAAe,QAAQ,cAAc,WAAW,GAAG,kCAAkC,GAAG,UAAU,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,eAAe,QAAQ,cAAc,IAAI,GAAG,yBAAyB,2BAA2B,GAAG,oBAAoB,mBAAmB,CAAC;EACnbhhD,QAAA,EAAU,SAASsjD,mBAAmBpjD,EAAA,EAAIlb,GAAA,EAAK;IAC7C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB5S,GAAG;MACnBiV,UAAA,CAAW,GAAG/U,gCAAA,EAAkC,GAAG,GAAG,uBAAuB,CAAC;MAC9E2S,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,GAAG,CAAC;MAC9BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbsU,UAAA,CAAW,GAAG1U,gCAAA,EAAkC,GAAG,GAAG,uBAAuB,CAAC,EAAE,GAAGC,gCAAA,EAAkC,GAAG,GAAG,QAAQ,CAAC;MACpI3uC,SAAA,CAAU,GAAG,OAAO,CAAC;IAC1B;IACA,IAAID,EAAA,GAAK,GAAG;MACPsjD,aAAA,CAAc,GAAGx+D,GAAA,CAAIy8D,QAAA,GAAW,IAAI,EAAE;MACtCvS,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAG,CAACx+D,GAAA,CAAIy8D,QAAA,IAAYz8D,GAAA,CAAI4pD,QAAA,IAAY,CAAC5pD,GAAA,CAAI68D,4BAAA,GAA+B,IAAI,EAAE;MAC5F3S,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIiN,KAAA,IAASjN,GAAA,CAAIiN,KAAA,CAAM0uD,MAAA,GAAS,IAAI,EAAE;MACvDzR,SAAA,CAAU;MACVP,UAAA,CAAW,oBAAoB3pD,GAAA,CAAIy9D,eAAA,CAAgB,CAAC,EAAE,qBAAqBz9D,GAAA,CAAIwrC,QAAA,IAAYxrC,GAAA,CAAI48D,aAAa;IACjH;EACF;EACAxhD,YAAA,EAAc,CAAC4/C,iBAAA,EAAmBV,SAAS;EAC3ChrE,MAAA,EAAQ,CAAC,6qGAAirG;EAC1rGoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAhPL,IAAM0D,SAAA,GAANjC,UAAA;AAAA,CAmPC,MAAM;EACL,CAAC,OAAOhtF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4lF,SAAA,EAAW,CAAC;IAClF7oF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,QAAQ;QACR,mCAAmC;QACnC,mCAAmC;QACnC,iCAAiC;QACjC,mCAAmC;QACnC,QAAQ;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAUR,wBAAwB;QACxB,wBAAwB;QACxB,WAAW;QACX,aAAa;QACb,SAAS;MACX;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACggE,iBAAA,EAAmBV,SAAS;MACtCt/C,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,6qGAAirG;IAC5rG,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+4E,2BAA2B;IACpC,CAAC;EACH,GAAG;IACD1lF,IAAA,EAAMwmF,WAAA;IACN/5E,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACi5E,YAAY;IACrB,CAAC;EACH,CAAC,GAAG;IACF1sF,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC;IACR,CAAC;IACD5kB,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDoiC,iBAAA,EAAmB,CAAC;MAClBrnF,IAAA,EAAMsiC;IACR,CAAC;IACDklD,KAAA,EAAO,CAAC;MACNxnF,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,QAAQ;QACbo8E,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAQH,SAASC,8BAA8BC,WAAA,EAAa9rF,OAAA,EAAS+rF,YAAA,EAAc;EACzE,IAAIA,YAAA,CAAajvF,MAAA,EAAQ;IACvB,IAAIkvF,YAAA,GAAehsF,OAAA,CAAQopD,OAAA,CAAQ;IACnC,IAAI6iC,MAAA,GAASF,YAAA,CAAa3iC,OAAA,CAAQ;IAClC,IAAI8iC,YAAA,GAAe;IACnB,SAASh8D,CAAA,GAAI,GAAGA,CAAA,GAAI47D,WAAA,GAAc,GAAG57D,CAAA,IAAK;MACxC,IAAI87D,YAAA,CAAa97D,CAAC,EAAEgK,KAAA,IAAS8xD,YAAA,CAAa97D,CAAC,EAAEgK,KAAA,KAAU+xD,MAAA,CAAOC,YAAY,GAAG;QAC3EA,YAAA;MACF;IACF;IACA,OAAOA,YAAA;EACT;EACA,OAAO;AACT;AASA,SAASC,yBAAyBC,YAAA,EAAcC,YAAA,EAAcC,qBAAA,EAAuBC,WAAA,EAAa;EAChG,IAAIH,YAAA,GAAeE,qBAAA,EAAuB;IACxC,OAAOF,YAAA;EACT;EACA,IAAIA,YAAA,GAAeC,YAAA,GAAeC,qBAAA,GAAwBC,WAAA,EAAa;IACrE,OAAOrG,IAAA,CAAK7K,GAAA,CAAI,GAAG+Q,YAAA,GAAeG,WAAA,GAAcF,YAAY;EAC9D;EACA,OAAOC,qBAAA;AACT;AACA,IAAME,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAgBtB;AAdIA,gBAAA,CAAKjnF,IAAA,GAAO,SAASknF,wBAAwB7sF,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK4sF,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAK32E,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2pF;AACR,CAAC;AAGDA,gBAAA,CAAKz2E,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACy/D,eAAA,EAAiB7O,eAAA,EAAiByP,uBAAuB;AACrE,CAAC;AAdL,IAAMoE,eAAA,GAANF,gBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO/vF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4mF,eAAA,EAAiB,CAAC;IACxF7pF,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACy/D,eAAA,EAAiB7O,eAAA,EAAiByP,uBAAA,EAAyBoD,SAAA,EAAWrC,WAAW;MAC3FhhE,OAAA,EAAS,CAACqjE,SAAA,EAAWrC,WAAW;IAClC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAMsD,oBAAA,GAAuB;EAC3Bz2D,OAAA,EAAS;AACX;AAEA,IAAM02D,uBAAA,GAA0B,CAAC,SAAS,SAAS,cAAc,YAAY;AAE7E,IAAMC,sBAAA,GAAyB;AAE/B,IAAMC,kBAAA,GAAqB;AAE3B,IAAMC,iBAAA,GAAoB;AAE1B,IAAMC,iBAAA,GAAoB;AAS1B,IAAMC,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBjyF,YAAA,EAAc;IACZ,KAAK6rB,SAAA,GAAYrgB,MAAA,CAAO4I,QAAA,EAAU;MAChC1I,QAAA,EAAU;IACZ,CAAC;IACD,KAAKmgF,cAAA,GAAiBrgF,MAAA,CAAO2gF,qBAAA,EAAuB;MAClDzgF,QAAA,EAAU;IACZ,CAAC;IACD,KAAKwmF,oBAAA,GAAuB1mF,MAAA,CAAOggF,yBAAA,EAA2B;MAC5D9/E,QAAA,EAAU;IACZ,CAAC;IACD,KAAKszD,SAAA,GAAYxzD,MAAA,CAAOqrD,QAAQ;IAChC,KAAKoH,OAAA,GAAUzyD,MAAA,CAAOO,MAAM;IAC5B,KAAKomF,MAAA,GAAS,mBAAIhyF,GAAA,CAAI;IAEtB,KAAKiyF,cAAA,GAAiBpoF,KAAA,IAAS;MAC7B,IAAI,EAAEA,KAAA,CAAMiT,MAAA,YAAkBo1E,WAAA,GAAc;QAC1C;MACF;MACA,MAAMC,WAAA,GAActoF,KAAA,CAAMiT,MAAA;MAE1B,MAAMgD,OAAA,GAAUqyE,WAAA,CAAYjjB,OAAA,CAAQ,IAAIwiB,sBAAsB,GAAG;MACjE,IAAI5xE,OAAA,EAAS;QACX,KAAKsyE,aAAA,CAActyE,OAAO;MAC5B;IACF;IACA,KAAKg+C,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,WAAW1D,KAAA,IAAS4nF,uBAAA,EAAyB;QAC3C,KAAK/lE,SAAA,EAAWjY,gBAAA,CAAiB5J,KAAA,EAAO,KAAKooF,cAAA,EAAgBT,oBAAoB;MACnF;IACF,CAAC;EACH;EACA7vE,YAAA,EAAc;IACZ,MAAM0wE,KAAA,GAAQ,KAAKL,MAAA,CAAOpwF,IAAA,CAAK;IAC/B,WAAWmd,IAAA,IAAQszE,KAAA,EAAO;MACxB,KAAKC,aAAA,CAAcvzE,IAAI;IACzB;IACA,WAAWlV,KAAA,IAAS4nF,uBAAA,EAAyB;MAC3C,KAAK/lE,SAAA,EAAWjV,mBAAA,CAAoB5M,KAAA,EAAO,KAAKooF,cAAA,EAAgBT,oBAAoB;IACtF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAe,gBAAgBxzE,IAAA,EAAMynB,MAAA,EAAQ;IAE5BznB,IAAA,CAAK6D,YAAA,CAAa8uE,sBAAA,EAAwB,EAAE;IAE5C,IAAIlrD,MAAA,CAAOgsD,SAAA,IAAa,CAACzzE,IAAA,CAAKqqD,YAAA,CAAauoB,kBAAkB,GAAG;MAC9D5yE,IAAA,CAAK6D,YAAA,CAAa+uE,kBAAA,EAAoBnrD,MAAA,CAAOgsD,SAAA,IAAa,EAAE;IAC9D;IAEA,IAAIhsD,MAAA,CAAOqhD,QAAA,EAAU;MACnB9oE,IAAA,CAAK6D,YAAA,CAAagvE,iBAAA,EAAmB,EAAE;IACzC;IACA,IAAIprD,MAAA,CAAO82B,QAAA,EAAU;MACnBv+C,IAAA,CAAK6D,YAAA,CAAaivE,iBAAA,EAAmB,EAAE;IACzC;EACF;EAAA;EAEAY,UAAU1zE,IAAA,EAAM;IACd,MAAMqpE,MAAA,GAAS,KAAK4J,MAAA,CAAOhxF,GAAA,CAAI+d,IAAI;IACnC,OAAOqpE,MAAA,IAAU,KAAKgK,aAAA,CAAcrzE,IAAI;EAC1C;EAAA;EAEA2zE,YAAY3zE,IAAA,EAAMu+C,QAAA,EAAU;IAC1B,MAAM8qB,MAAA,GAAS,KAAK4J,MAAA,CAAOhxF,GAAA,CAAI+d,IAAI;IAEnC,IAAIqpE,MAAA,EAAQ;MACVA,MAAA,CAAO9qB,QAAA,GAAWA,QAAA;MAClB;IACF;IAGA,IAAIA,QAAA,EAAU;MACZv+C,IAAA,CAAK6D,YAAA,CAAaivE,iBAAA,EAAmB,EAAE;IACzC,OAAO;MACL9yE,IAAA,CAAK4D,eAAA,CAAgBkvE,iBAAiB;IACxC;EACF;EAAA;EAEAO,cAAcrzE,IAAA,EAAM;IAClB,IAAI,CAAC,KAAK2M,SAAA,EAAW;MACnB;IACF;IACA,MAAMinE,cAAA,GAAiB,KAAKX,MAAA,CAAOhxF,GAAA,CAAI+d,IAAI;IAC3C,IAAI4zE,cAAA,EAAgB;MAClB,OAAOA,cAAA;IACT;IAEA5zE,IAAA,CAAKtB,aAAA,CAAc,aAAa,GAAG5M,MAAA,CAAO;IAC1C,MAAMy4E,QAAA,GAAW,KAAK59D,SAAA,CAAU1Y,aAAA,CAAc,MAAM;IACpDs2E,QAAA,CAAStiE,SAAA,CAAUrW,GAAA,CAAI,cAAcoO,IAAA,CAAKrB,YAAA,CAAai0E,kBAAkB,CAAC;IAC1E5yE,IAAA,CAAK/c,MAAA,CAAOsnF,QAAQ;IAEpB,MAAMlB,MAAA,GAAS,IAAIgE,SAAA,CAAU,IAAIpgC,UAAA,CAAWs9B,QAAQ,GAAG,KAAKxrB,OAAA,EAAS,KAAKe,SAAA,EAAW,KAAKkzB,oBAAA,GAAuB,KAAKA,oBAAA,GAAuB,QAAW,KAAKrG,cAAA,GAAiB,KAAKA,cAAA,GAAiB,MAAS;IAC7MtD,MAAA,CAAO5N,cAAA,GAAiB;IACxB4N,MAAA,CAAOjmC,OAAA,GAAUpjC,IAAA;IACjBqpE,MAAA,CAAOP,QAAA,GAAW9oE,IAAA,CAAKqqD,YAAA,CAAawoB,iBAAiB;IACrDxJ,MAAA,CAAO9qB,QAAA,GAAWv+C,IAAA,CAAKqqD,YAAA,CAAayoB,iBAAiB;IACrD,KAAKe,YAAA,CAAa7zE,IAAA,EAAMqpE,MAAM;IAC9B,OAAOA,MAAA;EACT;EACAwK,aAAa7zE,IAAA,EAAMqpE,MAAA,EAAQ;IACzBrpE,IAAA,CAAK4D,eAAA,CAAgB+uE,sBAAsB;IAC3C,KAAKM,MAAA,CAAO9wF,GAAA,CAAI6d,IAAA,EAAMqpE,MAAM;EAC9B;EACAkK,cAAcvzE,IAAA,EAAM;IAClB,MAAMqpE,MAAA,GAAS,KAAK4J,MAAA,CAAOhxF,GAAA,CAAI+d,IAAI;IACnC,IAAIqpE,MAAA,EAAQ;MAGVA,MAAA,CAAOzmE,WAAA,CAAY;MACnB,KAAKqwE,MAAA,CAAO7vF,MAAA,CAAO4c,IAAI;IACzB;EACF;AAaF;AAXI+yE,gBAAA,CAAK1nF,IAAA,GAAO,SAASyoF,wBAAwBpuF,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKqtF,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAKvnF,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOmsF,gBAAA;EACPrnF,OAAA,EAASqnF,gBAAA,CAAgB1nF,IAAA;EACzB8M,UAAA,EAAY;AACd,CAAC;AAjIL,IAAM47E,eAAA,GAANhB,gBAAA;AAAA,CAoIC,MAAM;EACL,CAAC,OAAOxwF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmoF,eAAA,EAAiB,CAAC;IACxFprF,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,EAAC,EAAG,IAAI;AACpB,GAAG;AAOH,IAAM67E,sBAAA,GAAN,MAAMA,sBAAA,CAAsB,EAqC5B;AAnCIA,sBAAA,CAAK3oF,IAAA,GAAO,SAAS4oF,8BAA8BvuF,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAKsuF,sBAAA,EAAuB;AAC1C;AAGAA,sBAAA,CAAKtmD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMqrF,sBAAA;EACNxpD,SAAA,EAAW,CAAC,CAAC,OAAO,2BAA2B,EAAE,CAAC;EAClD47C,SAAA,EAAW,CAAC,GAAG,kBAAkB,yBAAyB;EAC1Dj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS8mC,mCAAmCjmD,EAAA,EAAIlb,GAAA,EAAK;IACjE,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,6BAA6Bp6D,GAAA,CAAIohE,aAAA,KAAkB,QAAQ;IAC5E;EACF;EACA1pD,MAAA,EAAQ;IACN0pD,aAAA,EAAe;EACjB;EACAvpD,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCwmD,KAAA,EAAOhX,GAAA;EACP0R,kBAAA,EAAoBzR,GAAA;EACpBxvC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,QAAA,EAAU,SAASsmD,+BAA+BpmD,EAAA,EAAIlb,GAAA,EAAK;IACzD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChBC,YAAA,CAAa,CAAC;IACnB;EACF;EACA7sE,MAAA,EAAQ,CAAC,o7CAAo7C;EAC77CoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAnCL,IAAMwG,qBAAA,GAANN,sBAAA;AAAA,CAsCC,MAAM;EACL,CAAC,OAAOzxF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0oF,qBAAA,EAAuB,CAAC;IAC9F3rF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZmD,QAAA,EAAU;MACVtoB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCjuE,IAAA,EAAM;QACJ,SAAS;QACT,qCAAqC;MACvC;MACAqC,MAAA,EAAQ,CAAC,o7CAAo7C;IAC/7C,CAAC;EACH,CAAC,GAAG,MAAM;IACR8xE,aAAA,EAAe,CAAC;MACdxrF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACLi/E,QAAA,EAAU;MACZ,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;;;ACz7EH,IAAMrY,OAAM,CAAC,cAAc,EAAE;AAC7B,IAAMC,OAAM,CAAC,CAAC,CAAC,IAAI,GAAG,kBAAkB,GAAG,mBAAmB,EAAE,GAAG,CAAC,YAAY,GAAG,mBAAmB,EAAE,GAAG,CAAC,IAAI,iBAAiB,IAAI,GAAG,mBAAmB,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,mBAAmB,IAAI,GAAG,gBAAgB,GAAG,CAAC,YAAY,mBAAmB,EAAE,GAAG,CAAC,IAAI,iBAAiB,IAAI,mBAAmB,EAAE,CAAC,CAAC;AAC/S,IAAMC,OAAM,CAAC,mHAAmH,KAAK,+FAA+F;AACpO,IAAMC,OAAM;AACZ,IAAMC,OAAM;AACZ,IAAMc,OAAM,CAAC,WAAW,EAAE;AAC1B,IAAMC,OAAM,CAAC,gBAAgB,EAAE;AAC/B,IAAMmX,GAAA,GAAM;AACZ,IAAMC,GAAA,GAAM,CAAC,mBAAmB,EAAE;AAClC,IAAMC,GAAA,GAAM,CAAC,GAAG;AAChB,IAAMC,IAAA,GAAO;AACb,IAAMC,iBAAA,GAAoB,IAAI3jF,cAAA,CAAe,mBAAmB;AAEhE,IAAM4jF,eAAA,GAAkB;EACtB,mBAAmB;EACnB,wBAAwB;EACxB,mCAAmC;EACnC,+CAA+C;EAC/C,mCAAmC;EAAA;EAAA;EAAA;EAInC,wBAAwB;EAAA;EAAA;EAGxB,+BAA+B;EAC/B,WAAW;AACb;AAEA,IAAMC,4BAAA,GAA+B,CAAC;EACpCC,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,cAAc,gBAAgB;AAC7C,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,cAAc,0BAA0B,2BAA2B;AAClF,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,cAAc,sBAAsB,uBAAuB;AAC1E,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,cAAc,wBAAwB,yBAAyB;AAC9E,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,WAAW,aAAa;AACvC,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,WAAW,iBAAiB,kBAAkB;AAC7D,GAAG;EACDD,SAAA,EAAW;EACXC,UAAA,EAAY,CAAC,mBAAmB,qBAAqB;AACvD,CAAC;AAED,IAAMC,cAAA,GAAN,MAAMA,cAAA,CAAc;EAAA;AAAA;AAAA;AAAA;AAAA;EAMlB,IAAI5L,OAAA,EAAS;IACX,OAAO,KAAK6L,aAAA,EAAexB,SAAA,CAAU,KAAK50B,WAAA,CAAY/S,aAAa;EACrE;EACA,IAAIs9B,OAAO9jF,CAAA,EAAG;IACZ,KAAK2vF,aAAA,EAAerB,YAAA,CAAa,KAAK/0B,WAAA,CAAY/S,aAAA,EAAexmD,CAAC;EACpE;EAAA;EAEA,IAAIoqF,cAAA,EAAgB;IAClB,OAAO,KAAKwF,cAAA;EACd;EACA,IAAIxF,cAAc9tF,KAAA,EAAO;IACvB,KAAKszF,cAAA,GAAiBtzF,KAAA;IACtB,KAAKuzF,qBAAA,CAAsB;EAC7B;EAAA;EAEA,IAAI72B,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,KAAK28D,SAAA,GAAY38D,KAAA;IACjB,KAAKuzF,qBAAA,CAAsB;EAC7B;EACAt0F,YAAYg+D,WAAA,EAAagB,SAAA,EAAWf,OAAA,EAAS4tB,cAAA,EAAgB;IAC3D,KAAK7tB,WAAA,GAAcA,WAAA;IACnB,KAAKgB,SAAA,GAAYA,SAAA;IACjB,KAAKf,OAAA,GAAUA,OAAA;IACf,KAAK4tB,cAAA,GAAiBA,cAAA;IACtB,KAAK9T,aAAA,GAAgBvsE,MAAA,CAAOqsE,YAAY;IAKxC,KAAKuc,aAAA,GAAgB5oF,MAAA,CAAOynF,eAAe;IAE3C,KAAKsB,MAAA,GAAS;IACd,KAAKF,cAAA,GAAiB;IACtB,KAAK32B,SAAA,GAAY;IACjB,MAAM/2B,MAAA,GAASn7B,MAAA,CAAOsoF,iBAAA,EAAmB;MACvCpoF,QAAA,EAAU;IACZ,CAAC;IACD,MAAMuU,OAAA,GAAU+9C,WAAA,CAAY/S,aAAA;IAC5B,MAAM9jC,SAAA,GAAYlH,OAAA,CAAQkH,SAAA;IAC1B,KAAKqtE,mBAAA,GAAsB7tD,MAAA,EAAQ6tD,mBAAA,IAAuB;IAC1D,KAAKJ,aAAA,EAAe1B,eAAA,CAAgBzyE,OAAA,EAAS;MAC3C0yE,SAAA,EAAW;IACb,CAAC;IAGD,WAAW;MACTsB,SAAA;MACAC;IACF,KAAKF,4BAAA,EAA8B;MACjC,IAAI/zE,OAAA,CAAQspD,YAAA,CAAa0qB,SAAS,GAAG;QACnC9sE,SAAA,CAAUrW,GAAA,CAAI,GAAGojF,UAAU;MAC7B;IACF;EACF;EACA/b,gBAAA,EAAkB;IAChB,KAAKJ,aAAA,CAAcvC,OAAA,CAAQ,KAAKxX,WAAA,EAAa,IAAI;EACnD;EACAl8C,YAAA,EAAc;IACZ,KAAKi2D,aAAA,CAAcjC,cAAA,CAAe,KAAK9X,WAAW;IAClD,KAAKo2B,aAAA,EAAe3B,aAAA,CAAc,KAAKz0B,WAAA,CAAY/S,aAAa;EAClE;EAAA;EAEAiiB,MAAMiJ,MAAA,GAAS,WAAWnxE,OAAA,EAAS;IACjC,IAAImxE,MAAA,EAAQ;MACV,KAAK4B,aAAA,CAAc7B,QAAA,CAAS,KAAKlY,WAAA,CAAY/S,aAAA,EAAekrB,MAAA,EAAQnxE,OAAO;IAC7E,OAAO;MACL,KAAKg5D,WAAA,CAAY/S,aAAA,CAAciiB,KAAA,CAAMloE,OAAO;IAC9C;EACF;EACAyvF,iBAAA,EAAmB;IACjB,IAAI,KAAKC,YAAA,IAAgB,MAAM;MAC7B,OAAO,KAAKA,YAAA;IACd;IACA,OAAO,KAAKj3B,QAAA,IAAY,KAAK+2B,mBAAA,GAAsB,OAAO;EAC5D;EACAG,sBAAA,EAAwB;IACtB,OAAO,KAAKH,mBAAA,IAAuB,CAAC,KAAK/2B,QAAA,GAAW,OAAO;EAC7D;EACA62B,sBAAA,EAAwB;IACtB,KAAKF,aAAA,EAAevB,WAAA,CAAY,KAAK70B,WAAA,CAAY/S,aAAA,EAAe,KAAK4jC,aAAA,IAAiB,KAAKpxB,QAAQ;EACrG;AAmBF;AAjBI02B,cAAA,CAAK5pF,IAAA,GAAO,SAASqqF,sBAAsBhwF,CAAA,EAAG;EACzC8sD,gBAAA,CAAiB;AACtB;AAGAyiC,cAAA,CAAK3qD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMssF,cAAA;EACNxqD,MAAA,EAAQ;IACN6+C,KAAA,EAAO;IACPqG,aAAA,EAAe,CAAIjiC,UAAA,CAAaC,0BAAA,EAA4B,iBAAiB,iBAAiBC,gBAAgB;IAC9G2Q,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F4nC,YAAA,EAAc,CAAI9nC,UAAA,CAAaC,0BAAA,EAA4B,iBAAiB,gBAAgBC,gBAAgB;IAC5G0nC,mBAAA,EAAqB,CAAI5nC,UAAA,CAAaC,0BAAA,EAA4B,uBAAuB,uBAAuBC,gBAAgB;EAClI;EACA1zC,QAAA,EAAU,CAAI2zC,wBAAwB;AACxC,CAAC;AA1GL,IAAM8nC,aAAA,GAANV,cAAA;AAAA,CA6GC,MAAM;EACL,CAAC,OAAO1yF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+pF,aAAA,EAAe,CAAC;IACtFhtF,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,CAAC;IACTpiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;EACR,CAAC,GAAG;IACF2gF,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACD2kD,aAAA,EAAe,CAAC;MACdhnF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD2Q,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD4nC,YAAA,EAAc,CAAC;MACb7sF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL,gBAAA;QACXwR,KAAA,EAAO;MACT,CAAC;IACH,CAAC;IACDk2B,mBAAA,EAAqB,CAAC;MACpB3sF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAEH,IAAMgoC,eAAA,GAAkB;EACtB,mBAAmB;EACnB,mCAAmC;EACnC,+CAA+C;EAC/C,mCAAmC;EAAA;EAAA;EAAA;EAInC,mBAAmB;EACnB,wBAAwB;EAAA;EAAA;EAAA;EAIxB,wBAAwB;EAAA;EAAA;EAGxB,+BAA+B;EAC/B,WAAW;AACb;AAIA,IAAMC,cAAA,GAAN,MAAMA,cAAA,SAAsBF,aAAA,CAAc;EACxC70F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe;IACvD,MAAMD,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAKC,mBAAA,GAAsBlrF,KAAA,IAAS;MAElC,IAAI,KAAKyzD,QAAA,EAAU;QACjBzzD,KAAA,CAAMqe,cAAA,CAAe;QACrBre,KAAA,CAAMmrF,wBAAA,CAAyB;MACjC;IACF;EACF;EACA9sD,SAAA,EAAW;IACT,KAAK41B,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,KAAKswD,WAAA,CAAY/S,aAAA,CAAcr3C,gBAAA,CAAiB,SAAS,KAAKshF,mBAAmB;IACnF,CAAC;EACH;EACApzE,YAAA,EAAc;IACZ,MAAMA,WAAA,CAAY;IAClB,KAAKk8C,WAAA,CAAY/S,aAAA,CAAcr0C,mBAAA,CAAoB,SAAS,KAAKs+E,mBAAmB;EACtF;EACAT,iBAAA,EAAmB;IACjB,OAAO,KAAKC,YAAA,IAAgB,OAAO,KAAKj3B,QAAA,GAAW,KAAKi3B,YAAA;EAC1D;AAiBF;AAfIK,cAAA,CAAKxqF,IAAA,GAAO,SAAS6qF,sBAAsBxwF,CAAA,EAAG;EACzC8sD,gBAAA,CAAiB;AACtB;AAGAqjC,cAAA,CAAKvrD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMktF,cAAA;EACNprD,MAAA,EAAQ;IACNwgC,QAAA,EAAU,CAAIvd,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAY9rD,KAAA,IAAS;MACtF,OAAOA,KAAA,IAAS,OAAO,SAAYs0F,eAAA,CAAgBt0F,KAAK;IAC1D,CAAC;EACH;EACAqY,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BuoC,0BAA0B;AACvE,CAAC;AArCL,IAAMC,aAAA,GAANR,cAAA;AAAA,CAwCC,MAAM;EACL,CAAC,OAAOtzF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByqF,aAAA,EAAe,CAAC;IACtF1tF,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,CAAC;IACTpiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;EACR,CAAC,GAAG;IACFsiE,QAAA,EAAU,CAAC;MACTtiE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWpsD,KAAA,IAAS;UAClB,OAAOA,KAAA,IAAS,OAAO,SAAYs0F,eAAA,CAAgBt0F,KAAK;QAC1D;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAWH,IAAMy0F,UAAA,GAAN,MAAMA,UAAA,SAAkBX,aAAA,CAAc;EACpC70F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe;IACvD,MAAMD,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;EACnD;AA8CF;AA5CIO,UAAA,CAAKjrF,IAAA,GAAO,SAASkrF,kBAAkB7wF,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAK4wF,UAAA,EAAcxpC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACrL;AAGAqJ,UAAA,CAAK5oD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM2tF,UAAA;EACN9rD,SAAA,EAAW,CAAC,CAAC,UAAU,cAAc,EAAE,GAAG,CAAC,UAAU,qBAAqB,EAAE,GAAG,CAAC,UAAU,mBAAmB,EAAE,GAAG,CAAC,UAAU,sBAAsB,EAAE,CAAC;EACtJ2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASopC,uBAAuBvoD,EAAA,EAAIlb,GAAA,EAAK;IACrD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,iBAAiB1iE,GAAA,CAAIwiE,gBAAA,CAAiB,CAAC;MAC5FkB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAOlY;EACP4S,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAAS2oD,mBAAmBzoD,EAAA,EAAIlb,GAAA,EAAK;IAC7C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAAC,6jmBAAmkmB,kXAAkX;EAC97mBoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA/CL,IAAM6I,SAAA,GAANL,UAAA;AAAA,CAkDC,MAAM;EACL,CAAC,OAAO/zF,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+qF,SAAA,EAAW,CAAC;IAClFhuF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;AAAA;AAAA;AAAA;MAIVlP,IAAA,EAAM60E,eAAA;MACNlqD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,6jmBAAmkmB,kXAAkX;IACh8mB,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAWH,IAAM2J,UAAA,GAAN,MAAMA,UAAA,SAAkBP,aAAA,CAAc;EACpCv1F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe;IACvD,MAAMD,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;EACnD;AA8CF;AA5CIa,UAAA,CAAKvrF,IAAA,GAAO,SAASwrF,kBAAkBnxF,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAKkxF,UAAA,EAAc9pC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACrL;AAGA2J,UAAA,CAAKlpD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMiuF,UAAA;EACNpsD,SAAA,EAAW,CAAC,CAAC,KAAK,cAAc,EAAE,GAAG,CAAC,KAAK,qBAAqB,EAAE,GAAG,CAAC,KAAK,mBAAmB,EAAE,GAAG,CAAC,KAAK,sBAAsB,EAAE,CAAC;EAClI2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS0pC,uBAAuB7oD,EAAA,EAAIlb,GAAA,EAAK;IACrD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,YAAY1iE,GAAA,CAAIwrC,QAAA,IAAY,CAACxrC,GAAA,CAAIuiE,mBAAA,GAAsB,KAAKviE,GAAA,CAAIk4C,QAAQ,EAAE,iBAAiBl4C,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC;MAC3KgB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,aAAa,WAAW;EACnCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAOlY;EACP4S,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAASgpD,mBAAmB9oD,EAAA,EAAIlb,GAAA,EAAK;IAC7C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAACg6D,MAAKC,IAAG;EACjB72D,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA/CL,IAAMkJ,SAAA,GAANJ,UAAA;AAAA,CAkDC,MAAM;EACL,CAAC,OAAOr0F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBorF,SAAA,EAAW,CAAC;IAClFruF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM41E,eAAA;MACNnwE,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,6jmBAAmkmB,kXAAkX;IACh8mB,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAMgK,uBAAA,GAA0B,IAAIhmF,cAAA,CAAe,+BAA+B;EAChFkH,UAAA,EAAY;EACZzM,OAAA,EAASwrF;AACX,CAAC;AAED,SAASA,gCAAA,EAAkC;EACzC,OAAO;IAAA;IAEL5N,KAAA,EAAO;EACT;AACF;AAEA,IAAM6N,QAAA,GAAWD,+BAAA,CAAgC;AAQjD,IAAME,aAAA,GAAN,MAAMA,aAAA,SAAqBzB,aAAA,CAAc;EACvC70F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe3jB,QAAA,EAAU;IACjE,MAAM0jB,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAK3jB,QAAA,GAAWA,QAAA;IAChB,KAAKijB,MAAA,GAAS;IACd,KAAKjjB,QAAA,GAAW,KAAKA,QAAA,IAAY+kB,QAAA;IACjC,KAAK7N,KAAA,GAAQ,KAAKlX,QAAA,CAASkX,KAAA,IAAS6N,QAAA,CAAS7N,KAAA;EAC/C;AAiDF;AA/CI8N,aAAA,CAAK/rF,IAAA,GAAO,SAASgsF,qBAAqB3xF,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK0xF,aAAA,EAAiBtqC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkBmqC,uBAAA,EAAyB,CAAC,CAAC;AAC1O;AAGAG,aAAA,CAAK1pD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMyuF,aAAA;EACN5sD,SAAA,EAAW,CAAC,CAAC,UAAU,WAAW,EAAE,CAAC;EACrC2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASkqC,0BAA0BrpD,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,iBAAiB1iE,GAAA,CAAIwiE,gBAAA,CAAiB,CAAC;MAC5FkB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI,EAAE,qBAAqBv2D,GAAA,CAAIwkE,QAAQ,EAAE,wBAAwBxkE,GAAA,CAAIwkE,QAAQ;IAC9T;EACF;EACA9sD,MAAA,EAAQ;IACN8sD,QAAA,EAAU,CAAI7pC,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAjjB,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BuoC,0BAAA,EAA+BxoD,mBAAmB;EAC7FwmD,KAAA,EAAOhX;EACP0R,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAASypD,sBAAsBvpD,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAAC,utYAA+tY;EACxuYoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAtDL,IAAM2J,YAAA,GAANL,aAAA;AAAA,CAyDC,MAAM;EACL,CAAC,OAAO70F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6rF,YAAA,EAAc,CAAC;IACrF9uF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM4F,aAAA,CAAAlY,cAAA,KACDmnF,eAAA,GADC;QAEJ,6BAA6B;QAC7B,gCAAgC;MAClC;MACAlqD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,utYAA+tY;IAC1uY,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2hF,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFM,QAAA,EAAU,CAAC;MACT5uF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAM8pC,iBAAA,GAAN,MAAMA,iBAAA,SAAyB/B,aAAA,CAAc;EAC3C70F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe3jB,QAAA,EAAU;IACjE,MAAM0jB,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAK3jB,QAAA,GAAWA,QAAA;IAChB,KAAKijB,MAAA,GAAS;IACd,KAAKjjB,QAAA,GAAW,KAAKA,QAAA,IAAY+kB,QAAA;IACjC,KAAK7N,KAAA,GAAQ,KAAKlX,QAAA,CAASkX,KAAA,IAAS6N,QAAA,CAAS7N,KAAA;EAC/C;AA8CF;AA5CIoO,iBAAA,CAAKrsF,IAAA,GAAO,SAASssF,yBAAyBjyF,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKgyF,iBAAA,EAAqB5qC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkBmqC,uBAAA,EAAyB,CAAC,CAAC;AAC9O;AAGAS,iBAAA,CAAKhqD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM+uF,iBAAA;EACNltD,SAAA,EAAW,CAAC,CAAC,UAAU,gBAAgB,EAAE,CAAC;EAC1C2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASwqC,8BAA8B3pD,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,iBAAiB1iE,GAAA,CAAIwiE,gBAAA,CAAiB,CAAC;MAC5FkB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAO/W;EACPyR,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAAS8pD,0BAA0B5pD,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAACmyE,GAAG;EACZ/uE,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAnDL,IAAMgK,gBAAA,GAANJ,iBAAA;AAAA,CAsDC,MAAM;EACL,CAAC,OAAOn1F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBksF,gBAAA,EAAkB,CAAC;IACzFnvF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM60E,eAAA;MACNlqD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,utYAA+tY;IAC1uY,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2hF,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAQH,IAAMc,aAAA,GAAN,MAAMA,aAAA,SAAqBf,SAAA,CAAU;EACnCl2F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe3jB,QAAA,EAAU;IACjE,MAAM0jB,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAK3jB,QAAA,GAAWA,QAAA;IAChB,KAAKijB,MAAA,GAAS;IACd,KAAKjjB,QAAA,GAAW,KAAKA,QAAA,IAAY+kB,QAAA;IACjC,KAAK7N,KAAA,GAAQ,KAAKlX,QAAA,CAASkX,KAAA,IAAS6N,QAAA,CAAS7N,KAAA;EAC/C;AAiDF;AA/CIyO,aAAA,CAAK1sF,IAAA,GAAO,SAAS2sF,qBAAqBtyF,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKqyF,aAAA,EAAiBjrC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkBmqC,uBAAA,EAAyB,CAAC,CAAC;AAC1O;AAGAc,aAAA,CAAKrqD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMovF,aAAA;EACNvtD,SAAA,EAAW,CAAC,CAAC,KAAK,WAAW,EAAE,CAAC;EAChC2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS6qC,0BAA0BhqD,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,YAAY1iE,GAAA,CAAIwrC,QAAA,IAAY,CAACxrC,GAAA,CAAIuiE,mBAAA,GAAsB,KAAKviE,GAAA,CAAIk4C,QAAQ,EAAE,iBAAiBl4C,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC;MAC3KgB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI,EAAE,qBAAqBv2D,GAAA,CAAIwkE,QAAQ,EAAE,wBAAwBxkE,GAAA,CAAIwkE,QAAQ;IAC9T;EACF;EACA9sD,MAAA,EAAQ;IACN8sD,QAAA,EAAU,CAAI7pC,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAjjB,QAAA,EAAU,CAAC,aAAa,WAAW;EACnCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BuoC,0BAAA,EAA+BxoD,mBAAmB;EAC7FwmD,KAAA,EAAOhX;EACP0R,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAASmqD,sBAAsBjqD,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAACmyE,GAAG;EACZ/uE,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAtDL,IAAMqK,YAAA,GAANJ,aAAA;AAAA,CAyDC,MAAM;EACL,CAAC,OAAOx1F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBusF,YAAA,EAAc,CAAC;IACrFxvF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM4F,aAAA,CAAAlY,cAAA,KACDkoF,eAAA,GADC;QAEJ,6BAA6B;QAC7B,gCAAgC;MAClC;MACAjrD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,utYAA+tY;IAC1uY,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2hF,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFM,QAAA,EAAU,CAAC;MACT5uF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAMwqC,iBAAA,GAAN,MAAMA,iBAAA,SAAyBpB,SAAA,CAAU;EACvCl2F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe3jB,QAAA,EAAU;IACjE,MAAM0jB,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAK3jB,QAAA,GAAWA,QAAA;IAChB,KAAKijB,MAAA,GAAS;IACd,KAAKjjB,QAAA,GAAW,KAAKA,QAAA,IAAY+kB,QAAA;IACjC,KAAK7N,KAAA,GAAQ,KAAKlX,QAAA,CAASkX,KAAA,IAAS6N,QAAA,CAAS7N,KAAA;EAC/C;AA8CF;AA5CI8O,iBAAA,CAAK/sF,IAAA,GAAO,SAASgtF,yBAAyB3yF,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK0yF,iBAAA,EAAqBtrC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkBmqC,uBAAA,EAAyB,CAAC,CAAC;AAC9O;AAGAmB,iBAAA,CAAK1qD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMyvF,iBAAA;EACN5tD,SAAA,EAAW,CAAC,CAAC,KAAK,gBAAgB,EAAE,CAAC;EACrC2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASkrC,8BAA8BrqD,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,YAAY1iE,GAAA,CAAIwrC,QAAA,IAAY,CAACxrC,GAAA,CAAIuiE,mBAAA,GAAsB,KAAKviE,GAAA,CAAIk4C,QAAQ,EAAE,iBAAiBl4C,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC;MAC3KgB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,aAAa,WAAW;EACnCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAO/W;EACPyR,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC9IhhD,QAAA,EAAU,SAASwqD,0BAA0BtqD,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB9S,IAAG;MACnBjuC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdpS,cAAA,CAAe,GAAG,QAAQ,CAAC;MAC3BoS,YAAA,CAAa,GAAG,CAAC;MACjBlS,YAAA,CAAa;MACbkS,YAAA,CAAa,GAAG,CAAC;MACjBhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;IACA,IAAID,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sBAAsB,CAACp6D,GAAA,CAAIsiE,MAAM,EAAE,mBAAmBtiE,GAAA,CAAIsiE,MAAM;IACjF;EACF;EACAhzE,MAAA,EAAQ,CAACmyE,GAAG;EACZ/uE,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAnDL,IAAM0K,gBAAA,GAANJ,iBAAA;AAAA,CAsDC,MAAM;EACL,CAAC,OAAO71F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4sF,gBAAA,EAAkB,CAAC;IACzF7vF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM41E,eAAA;MACNjrD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,utYAA+tY;IAC1uY,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2hF,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAMwB,cAAA,GAAN,MAAMA,cAAA,SAAsB9C,aAAA,CAAc;EACxC70F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe;IACvD,MAAMD,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;IACjD,KAAKb,aAAA,CAAc1B,eAAA,CAAgB,KAAK10B,WAAA,CAAY/S,aAAA,EAAe;MACjE+8B,QAAA,EAAU;IACZ,CAAC;EACH;AAuCF;AArCI2P,cAAA,CAAKptF,IAAA,GAAO,SAASqtF,sBAAsBhzF,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK+yF,cAAA,EAAkB3rC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACzL;AAGAwL,cAAA,CAAK/qD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM8vF,cAAA;EACNjuD,SAAA,EAAW,CAAC,CAAC,UAAU,mBAAmB,EAAE,CAAC;EAC7C2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASurC,2BAA2B1qD,EAAA,EAAIlb,GAAA,EAAK;IACzD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,iBAAiB1iE,GAAA,CAAIwiE,gBAAA,CAAiB,CAAC;MAC5FkB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAOK,GAAA;EACP3F,kBAAA,EAAoB4F,GAAA;EACpB7mD,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,oCAAoC,yBAAyB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC/IhhD,QAAA,EAAU,SAAS6qD,uBAAuB3qD,EAAA,EAAIlb,GAAA,EAAK;IACjD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChB/gD,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;EACF;EACA7rB,MAAA,EAAQ,CAAC,q7JAA27Ji6D,IAAG;EACv8J72D,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA3CL,IAAM+K,aAAA,GAANJ,cAAA;AAAA,CA8CC,MAAM;EACL,CAAC,OAAOl2F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBitF,aAAA,EAAe,CAAC;IACtFlwF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM60E,eAAA;MACNlqD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,q7JAA27J,kXAAkX;IACxzK,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAM6L,cAAA,GAAN,MAAMA,cAAA,SAAsBzC,aAAA,CAAc;EACxCv1F,YAAYg1F,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAA,EAAe;IACvD,MAAMD,UAAA,EAAYr9E,QAAA,EAAU7L,MAAA,EAAQmpF,aAAa;EACnD;AAuCF;AArCI+C,cAAA,CAAKztF,IAAA,GAAO,SAAS0tF,sBAAsBrzF,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKozF,cAAA,EAAkBhsC,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACzL;AAGA6L,cAAA,CAAKprD,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMmwF,cAAA;EACNtuD,SAAA,EAAW,CAAC,CAAC,KAAK,mBAAmB,EAAE,CAAC;EACxC2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS4rC,2BAA2B/qD,EAAA,EAAIlb,GAAA,EAAK;IACzD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC,EAAE,YAAY1iE,GAAA,CAAIwrC,QAAA,IAAY,CAACxrC,GAAA,CAAIuiE,mBAAA,GAAsB,KAAKviE,GAAA,CAAIk4C,QAAQ,EAAE,iBAAiBl4C,GAAA,CAAI0iE,qBAAA,CAAsB,CAAC;MAC3KgB,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,uCAAuCxrC,GAAA,CAAIuiE,mBAAmB,EAAE,2BAA2BviE,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,gBAAgB,CAAC55D,GAAA,CAAIu2D,KAAK,EAAE,uBAAuB,IAAI;IACrP;EACF;EACA3+C,QAAA,EAAU,CAAC,aAAa,WAAW;EACnCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEwmD,KAAA,EAAOK,GAAA;EACP3F,kBAAA,EAAoB4F,GAAA;EACpB7mD,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,oCAAoC,yBAAyB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,CAAC;EAC/IhhD,QAAA,EAAU,SAASkrD,uBAAuBhrD,EAAA,EAAIlb,GAAA,EAAK;IACjD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChB/gD,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtBghD,YAAA,CAAa,CAAC;MACdhhD,SAAA,CAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzC;EACF;EACA7rB,MAAA,EAAQ,CAACsyE,IAAA,EAAMrY,IAAG;EAClB72D,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAxCL,IAAMoL,aAAA,GAANJ,cAAA;AAAA,CA2CC,MAAM;EACL,CAAC,OAAOv2F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBstF,aAAA,EAAe,CAAC;IACtFvwF,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM41E,eAAA;MACNjrD,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,q7JAA27J,kXAAkX;IACxzK,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMkM,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAgBtB;AAdIA,gBAAA,CAAK9tF,IAAA,GAAO,SAAS+tF,wBAAwB1zF,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKyzF,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAKx9E,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMwwF;AACR,CAAC;AAGDA,gBAAA,CAAKt9E,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiB6O,eAAA,EAAiB7O,eAAe;AAC7D,CAAC;AAdL,IAAM0a,eAAA,GAANF,gBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO52F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBytF,eAAA,EAAiB,CAAC;IACxF1wF,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB6O,eAAA,EAAiBwJ,SAAA,EAAWL,SAAA,EAAWuC,aAAA,EAAeV,gBAAA,EAAkBV,gBAAA,EAAkBe,aAAA,EAAeV,YAAA,EAAcV,YAAY;MAC9JtpE,OAAA,EAAS,CAAC6oE,SAAA,EAAWL,SAAA,EAAWuC,aAAA,EAAeL,aAAA,EAAeL,gBAAA,EAAkBV,gBAAA,EAAkBK,YAAA,EAAcV,YAAA,EAAc9Y,eAAe;IAC/I,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC/jCH,IAAM2a,UAAA,GAAN,MAAiB,EAAC;AAElB,SAASC,aAAa13F,KAAA,EAAO;EAK3B,OAAOA,KAAA,IAAS,OAAOA,KAAA,CAAM23F,OAAA,KAAY,cAAc,EAAE33F,KAAA,YAAiBk9C,qBAAA;AAC5E;AAGA,IAAM06C,eAAA,GAAN,cAA8BH,UAAA,CAAW;EACvCx4F,YAAY44F,KAAA,EAAO;IACjB,MAAM;IACN,KAAKA,KAAA,GAAQA,KAAA;EACf;EACAF,QAAA,EAAU;IACR,OAAO3iE,YAAA,CAAa,KAAK6iE,KAAK,IAAI,KAAKA,KAAA,GAAQjvF,EAAA,CAAG,KAAKivF,KAAK;EAC9D;EACAv7B,WAAA,EAAa,CAAC;AAChB;AAGA,IAAIw7B,sBAAA;AAAA,CACH,UAAUA,yBAAwB;EAEjCA,wBAAuBA,wBAAuB,UAAU,IAAI,CAAC,IAAI;EAEjEA,wBAAuBA,wBAAuB,UAAU,IAAI,CAAC,IAAI;EAEjEA,wBAAuBA,wBAAuB,OAAO,IAAI,CAAC,IAAI;EAE9DA,wBAAuBA,wBAAuB,SAAS,IAAI,CAAC,IAAI;AAClE,GAAGA,sBAAA,KAA2BA,sBAAA,GAAyB,CAAC,EAAE;AAK1D,IAAMC,uBAAA,GAA0B,IAAI3oF,cAAA,CAAe,eAAe;AAWlE,IAAM4oF,4BAAA,GAAN,MAAmC;EACjCC,aAAalxD,OAAA,EAASmxD,gBAAA,EAAkBC,kBAAA,EAAoBC,iBAAA,EAAmBC,eAAA,EAAiB;IAC9FtxD,OAAA,CAAQuxD,gBAAA,CAAiB,CAACn9B,MAAA,EAAQo9B,qBAAA,EAAuBC,YAAA,KAAiB;MACxE,IAAIC,IAAA;MACJ,IAAIC,SAAA;MACJ,IAAIv9B,MAAA,CAAOw9B,aAAA,IAAiB,MAAM;QAChC,MAAMC,aAAA,GAAgBT,kBAAA,CAAmBh9B,MAAA,EAAQo9B,qBAAA,EAAuBC,YAAY;QACpFC,IAAA,GAAOP,gBAAA,CAAiBW,kBAAA,CAAmBD,aAAA,CAAcE,WAAA,EAAaF,aAAA,CAAcvyF,OAAA,EAASuyF,aAAA,CAAcl5F,KAAK;QAChHg5F,SAAA,GAAYZ,sBAAA,CAAuBiB,QAAA;MACrC,WAAWP,YAAA,IAAgB,MAAM;QAC/BN,gBAAA,CAAiBjoF,MAAA,CAAOsoF,qBAAqB;QAC7CG,SAAA,GAAYZ,sBAAA,CAAuBkB,OAAA;MACrC,OAAO;QACLP,IAAA,GAAOP,gBAAA,CAAiB93F,GAAA,CAAIm4F,qBAAqB;QACjDL,gBAAA,CAAiBe,IAAA,CAAKR,IAAA,EAAMD,YAAY;QACxCE,SAAA,GAAYZ,sBAAA,CAAuBoB,KAAA;MACrC;MACA,IAAIb,eAAA,EAAiB;QACnBA,eAAA,CAAgB;UACdhyF,OAAA,EAASoyF,IAAA,EAAMpyF,OAAA;UACfqyF,SAAA;UACAv9B;QACF,CAAC;MACH;IACF,CAAC;EACH;EACAtzB,OAAA,EAAS,CAAC;AACZ;AAaA,IAAMsxD,4BAAA,GAAN,MAAmC;EACjCl6F,YAAA,EAAc;IAKZ,KAAKm6F,aAAA,GAAgB;IAQrB,KAAKC,UAAA,GAAa,EAAC;EACrB;EAAA;EAEApB,aAAalxD,OAAA,EAASmxD,gBAAA,EAAkBC,kBAAA,EAAoBC,iBAAA,EAAmBC,eAAA,EAAiB;IAE9FtxD,OAAA,CAAQuxD,gBAAA,CAAiB,CAACn9B,MAAA,EAAQo9B,qBAAA,EAAuBC,YAAA,KAAiB;MACxE,IAAIC,IAAA;MACJ,IAAIC,SAAA;MACJ,IAAIv9B,MAAA,CAAOw9B,aAAA,IAAiB,MAAM;QAEhC,MAAMW,eAAA,GAAkBA,CAAA,KAAMnB,kBAAA,CAAmBh9B,MAAA,EAAQo9B,qBAAA,EAAuBC,YAAY;QAC5FC,IAAA,GAAO,KAAKc,WAAA,CAAYD,eAAA,EAAiBd,YAAA,EAAcN,gBAAA,EAAkBE,iBAAA,CAAkBj9B,MAAM,CAAC;QAClGu9B,SAAA,GAAYD,IAAA,GAAOX,sBAAA,CAAuBiB,QAAA,GAAWjB,sBAAA,CAAuB0B,QAAA;MAC9E,WAAWhB,YAAA,IAAgB,MAAM;QAE/B,KAAKiB,mBAAA,CAAoBlB,qBAAA,EAAuBL,gBAAgB;QAChEQ,SAAA,GAAYZ,sBAAA,CAAuBkB,OAAA;MACrC,OAAO;QAELP,IAAA,GAAO,KAAKiB,SAAA,CAAUnB,qBAAA,EAAuBC,YAAA,EAAcN,gBAAA,EAAkBE,iBAAA,CAAkBj9B,MAAM,CAAC;QACtGu9B,SAAA,GAAYZ,sBAAA,CAAuBoB,KAAA;MACrC;MACA,IAAIb,eAAA,EAAiB;QACnBA,eAAA,CAAgB;UACdhyF,OAAA,EAASoyF,IAAA,EAAMpyF,OAAA;UACfqyF,SAAA;UACAv9B;QACF,CAAC;MACH;IACF,CAAC;EACH;EACAtzB,OAAA,EAAS;IACP,WAAW4wD,IAAA,IAAQ,KAAKY,UAAA,EAAY;MAClCZ,IAAA,CAAK3zE,OAAA,CAAQ;IACf;IACA,KAAKu0E,UAAA,GAAa,EAAC;EACrB;EAAA;AAAA;AAAA;AAAA;EAKAE,YAAYD,eAAA,EAAiBd,YAAA,EAAcN,gBAAA,EAAkBl4F,KAAA,EAAO;IAClE,MAAM25F,UAAA,GAAa,KAAKC,oBAAA,CAAqBpB,YAAA,EAAcN,gBAAgB;IAC3E,IAAIyB,UAAA,EAAY;MACdA,UAAA,CAAWtzF,OAAA,CAAQwzF,SAAA,GAAY75F,KAAA;MAC/B,OAAO;IACT;IACA,MAAM85F,QAAA,GAAWR,eAAA,CAAgB;IACjC,OAAOpB,gBAAA,CAAiBW,kBAAA,CAAmBiB,QAAA,CAAShB,WAAA,EAAagB,QAAA,CAASzzF,OAAA,EAASyzF,QAAA,CAASp6F,KAAK;EACnG;EAAA;EAEA+5F,oBAAoB/5F,KAAA,EAAOw4F,gBAAA,EAAkB;IAC3C,MAAM6B,YAAA,GAAe7B,gBAAA,CAAiBrwD,MAAA,CAAOnoC,KAAK;IAClD,KAAKs6F,eAAA,CAAgBD,YAAA,EAAc7B,gBAAgB;EACrD;EAAA;EAEAwB,UAAUnB,qBAAA,EAAuBC,YAAA,EAAcN,gBAAA,EAAkBl4F,KAAA,EAAO;IACtE,MAAMy4F,IAAA,GAAOP,gBAAA,CAAiB93F,GAAA,CAAIm4F,qBAAqB;IACvDL,gBAAA,CAAiBe,IAAA,CAAKR,IAAA,EAAMD,YAAY;IACxCC,IAAA,CAAKpyF,OAAA,CAAQwzF,SAAA,GAAY75F,KAAA;IACzB,OAAOy4F,IAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKAuB,gBAAgBvB,IAAA,EAAMP,gBAAA,EAAkB;IACtC,IAAI,KAAKmB,UAAA,CAAWt4F,MAAA,GAAS,KAAKq4F,aAAA,EAAe;MAC/C,KAAKC,UAAA,CAAWh5F,IAAA,CAAKo4F,IAAI;IAC3B,OAAO;MACL,MAAM/4F,KAAA,GAAQw4F,gBAAA,CAAiBv4F,OAAA,CAAQ84F,IAAI;MAK3C,IAAI/4F,KAAA,KAAU,IAAI;QAChB+4F,IAAA,CAAK3zE,OAAA,CAAQ;MACf,OAAO;QACLozE,gBAAA,CAAiBjoF,MAAA,CAAOvQ,KAAK;MAC/B;IACF;EACF;EAAA;EAEAk6F,qBAAqBl6F,KAAA,EAAOw4F,gBAAA,EAAkB;IAC5C,MAAMyB,UAAA,GAAa,KAAKN,UAAA,CAAWhwE,GAAA,CAAI;IACvC,IAAIswE,UAAA,EAAY;MACdzB,gBAAA,CAAiBjwD,MAAA,CAAO0xD,UAAA,EAAYj6F,KAAK;IAC3C;IACA,OAAOi6F,UAAA,IAAc;EACvB;AACF;AAKA,IAAMM,cAAA,GAAN,MAAqB;EAAA;EAEnB,IAAInf,SAAA,EAAW;IACb,IAAI,CAAC,KAAK+S,SAAA,EAAW;MACnB,KAAKA,SAAA,GAAY5sF,KAAA,CAAMC,IAAA,CAAK,KAAKg5F,UAAA,CAAW15F,MAAA,CAAO,CAAC;IACtD;IACA,OAAO,KAAKqtF,SAAA;EACd;EACA5uF,YAAYk7F,SAAA,GAAY,OAAOC,uBAAA,EAAyBC,YAAA,GAAe,MAAMC,WAAA,EAAa;IACxF,KAAKH,SAAA,GAAYA,SAAA;IACjB,KAAKE,YAAA,GAAeA,YAAA;IACpB,KAAKC,WAAA,GAAcA,WAAA;IAEnB,KAAKJ,UAAA,GAAa,mBAAIrpF,GAAA,CAAI;IAE1B,KAAK0pF,iBAAA,GAAoB,EAAC;IAE1B,KAAKC,eAAA,GAAkB,EAAC;IAExB,KAAKC,OAAA,GAAU,IAAIt9C,OAAA,CAAQ;IAC3B,IAAIi9C,uBAAA,IAA2BA,uBAAA,CAAwBr5F,MAAA,EAAQ;MAC7D,IAAIo5F,SAAA,EAAW;QACbC,uBAAA,CAAwB56F,OAAA,CAAQQ,KAAA,IAAS,KAAK06F,aAAA,CAAc16F,KAAK,CAAC;MACpE,OAAO;QACL,KAAK06F,aAAA,CAAcN,uBAAA,CAAwB,CAAC,CAAC;MAC/C;MAEA,KAAKI,eAAA,CAAgBz5F,MAAA,GAAS;IAChC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAwtF,OAAA,GAAU/tF,MAAA,EAAQ;IAChB,KAAKm6F,sBAAA,CAAuBn6F,MAAM;IAClCA,MAAA,CAAOhB,OAAA,CAAQQ,KAAA,IAAS,KAAK06F,aAAA,CAAc16F,KAAK,CAAC;IACjD,MAAMy6F,OAAA,GAAU,KAAKG,iBAAA,CAAkB;IACvC,KAAKC,gBAAA,CAAiB;IACtB,OAAOJ,OAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA/L,SAAA,GAAYluF,MAAA,EAAQ;IAClB,KAAKm6F,sBAAA,CAAuBn6F,MAAM;IAClCA,MAAA,CAAOhB,OAAA,CAAQQ,KAAA,IAAS,KAAK86F,eAAA,CAAgB96F,KAAK,CAAC;IACnD,MAAMy6F,OAAA,GAAU,KAAKG,iBAAA,CAAkB;IACvC,KAAKC,gBAAA,CAAiB;IACtB,OAAOJ,OAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAM,aAAA,GAAgBv6F,MAAA,EAAQ;IACtB,KAAKm6F,sBAAA,CAAuBn6F,MAAM;IAClC,MAAMw6F,SAAA,GAAY,KAAKlgB,QAAA;IACvB,MAAMmgB,cAAA,GAAiB,IAAIpqF,GAAA,CAAIrQ,MAAM;IACrCA,MAAA,CAAOhB,OAAA,CAAQQ,KAAA,IAAS,KAAK06F,aAAA,CAAc16F,KAAK,CAAC;IACjDg7F,SAAA,CAAU/4F,MAAA,CAAOjC,KAAA,IAAS,CAACi7F,cAAA,CAAe96F,GAAA,CAAI,KAAK+6F,iBAAA,CAAkBl7F,KAAA,EAAOi7F,cAAc,CAAC,CAAC,EAAEz7F,OAAA,CAAQQ,KAAA,IAAS,KAAK86F,eAAA,CAAgB96F,KAAK,CAAC;IAC1I,MAAMy6F,OAAA,GAAU,KAAKG,iBAAA,CAAkB;IACvC,KAAKC,gBAAA,CAAiB;IACtB,OAAOJ,OAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAvkB,OAAOl2E,KAAA,EAAO;IACZ,OAAO,KAAKm7F,UAAA,CAAWn7F,KAAK,IAAI,KAAK0uF,QAAA,CAAS1uF,KAAK,IAAI,KAAKuuF,MAAA,CAAOvuF,KAAK;EAC1E;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAghB,MAAMo6E,UAAA,GAAa,MAAM;IACvB,KAAKC,UAAA,CAAW;IAChB,MAAMZ,OAAA,GAAU,KAAKG,iBAAA,CAAkB;IACvC,IAAIQ,UAAA,EAAY;MACd,KAAKP,gBAAA,CAAiB;IACxB;IACA,OAAOJ,OAAA;EACT;EAAA;AAAA;AAAA;EAIAU,WAAWn7F,KAAA,EAAO;IAChB,OAAO,KAAKk6F,UAAA,CAAW/5F,GAAA,CAAI,KAAK+6F,iBAAA,CAAkBl7F,KAAK,CAAC;EAC1D;EAAA;AAAA;AAAA;EAIAs7F,QAAA,EAAU;IACR,OAAO,KAAKpB,UAAA,CAAWl/C,IAAA,KAAS;EAClC;EAAA;AAAA;AAAA;EAIAugD,SAAA,EAAW;IACT,OAAO,CAAC,KAAKD,OAAA,CAAQ;EACvB;EAAA;AAAA;AAAA;EAIA1mE,KAAK6wC,SAAA,EAAW;IACd,IAAI,KAAK00B,SAAA,IAAa,KAAKrf,QAAA,EAAU;MACnC,KAAK+S,SAAA,CAAUj5D,IAAA,CAAK6wC,SAAS;IAC/B;EACF;EAAA;AAAA;AAAA;EAIA+1B,oBAAA,EAAsB;IACpB,OAAO,KAAKrB,SAAA;EACd;EAAA;EAEAU,iBAAA,EAAmB;IAEjB,KAAKhN,SAAA,GAAY;IACjB,IAAI,KAAK2M,eAAA,CAAgBz5F,MAAA,IAAU,KAAKw5F,iBAAA,CAAkBx5F,MAAA,EAAQ;MAChE,KAAK05F,OAAA,CAAQ1uF,IAAA,CAAK;QAChByI,MAAA,EAAQ;QACRinF,KAAA,EAAO,KAAKjB,eAAA;QACZkB,OAAA,EAAS,KAAKnB;MAChB,CAAC;MACD,KAAKA,iBAAA,GAAoB,EAAC;MAC1B,KAAKC,eAAA,GAAkB,EAAC;IAC1B;EACF;EAAA;EAEAE,cAAc16F,KAAA,EAAO;IACnBA,KAAA,GAAQ,KAAKk7F,iBAAA,CAAkBl7F,KAAK;IACpC,IAAI,CAAC,KAAKm7F,UAAA,CAAWn7F,KAAK,GAAG;MAC3B,IAAI,CAAC,KAAKm6F,SAAA,EAAW;QACnB,KAAKkB,UAAA,CAAW;MAClB;MACA,IAAI,CAAC,KAAKF,UAAA,CAAWn7F,KAAK,GAAG;QAC3B,KAAKk6F,UAAA,CAAWnqF,GAAA,CAAI/P,KAAK;MAC3B;MACA,IAAI,KAAKq6F,YAAA,EAAc;QACrB,KAAKG,eAAA,CAAgBn6F,IAAA,CAAKL,KAAK;MACjC;IACF;EACF;EAAA;EAEA86F,gBAAgB96F,KAAA,EAAO;IACrBA,KAAA,GAAQ,KAAKk7F,iBAAA,CAAkBl7F,KAAK;IACpC,IAAI,KAAKm7F,UAAA,CAAWn7F,KAAK,GAAG;MAC1B,KAAKk6F,UAAA,CAAW34F,MAAA,CAAOvB,KAAK;MAC5B,IAAI,KAAKq6F,YAAA,EAAc;QACrB,KAAKE,iBAAA,CAAkBl6F,IAAA,CAAKL,KAAK;MACnC;IACF;EACF;EAAA;EAEAq7F,WAAA,EAAa;IACX,IAAI,CAAC,KAAKC,OAAA,CAAQ,GAAG;MACnB,KAAKpB,UAAA,CAAW16F,OAAA,CAAQQ,KAAA,IAAS,KAAK86F,eAAA,CAAgB96F,KAAK,CAAC;IAC9D;EACF;EAAA;AAAA;AAAA;AAAA;EAKA26F,uBAAuBn6F,MAAA,EAAQ;IAC7B,IAAIA,MAAA,CAAOO,MAAA,GAAS,KAAK,CAAC,KAAKo5F,SAAA,KAAc,OAAOz5F,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC3F,MAAMi7F,uCAAA,CAAwC;IAChD;EACF;EAAA;EAEAf,kBAAA,EAAoB;IAClB,OAAO,CAAC,EAAE,KAAKL,iBAAA,CAAkBx5F,MAAA,IAAU,KAAKy5F,eAAA,CAAgBz5F,MAAA;EAClE;EAAA;EAEAm6F,kBAAkBU,UAAA,EAAYC,SAAA,EAAW;IACvC,IAAI,CAAC,KAAKvB,WAAA,EAAa;MACrB,OAAOsB,UAAA;IACT,OAAO;MACLC,SAAA,GAAYA,SAAA,IAAa,KAAK3B,UAAA;MAC9B,SAAS4B,aAAA,IAAiBD,SAAA,EAAW;QACnC,IAAI,KAAKvB,WAAA,CAAYsB,UAAA,EAAYE,aAAa,GAAG;UAC/C,OAAOA,aAAA;QACT;MACF;MACA,OAAOF,UAAA;IACT;EACF;AACF;AAMA,SAASD,wCAAA,EAA0C;EACjD,OAAOp5F,KAAA,CAAM,yEAAyE;AACxF;AAWA,IAAMw5F,0BAAA,GAAN,MAAMA,0BAAA,CAA0B;EAC9B98F,YAAA,EAAc;IACZ,KAAK+8F,UAAA,GAAa,EAAC;EACrB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAC,OAAO13E,EAAA,EAAI3kB,IAAA,EAAM;IACf,SAAS0b,QAAA,IAAY,KAAK0gF,UAAA,EAAY;MACpC1gF,QAAA,CAASiJ,EAAA,EAAI3kB,IAAI;IACnB;EACF;EAAA;AAAA;AAAA;AAAA;EAKAqnB,OAAO3L,QAAA,EAAU;IACf,KAAK0gF,UAAA,CAAW37F,IAAA,CAAKib,QAAQ;IAC7B,OAAO,MAAM;MACX,KAAK0gF,UAAA,GAAa,KAAKA,UAAA,CAAW/5F,MAAA,CAAOi6F,UAAA,IAAc;QACrD,OAAO5gF,QAAA,KAAa4gF,UAAA;MACtB,CAAC;IACH;EACF;EACAn7E,YAAA,EAAc;IACZ,KAAKi7E,UAAA,GAAa,EAAC;EACrB;AAaF;AAXID,0BAAA,CAAKvyF,IAAA,GAAO,SAAS2yF,kCAAkCt4F,CAAA,EAAG;EACxD,OAAO,KAAKA,CAAA,IAAKk4F,0BAAA,EAA2B;AAC9C;AAGAA,0BAAA,CAAKpyF,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg3F,0BAAA;EACPlyF,OAAA,EAASkyF,0BAAA,CAA0BvyF,IAAA;EACnC8M,UAAA,EAAY;AACd,CAAC;AAvCL,IAAM8lF,yBAAA,GAANL,0BAAA;AAAA,CA0CC,MAAM;EACL,CAAC,OAAOr7F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqyF,yBAAA,EAA2B,CAAC;IAClGt1F,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACvcH,IAAM+jE,OAAM,CAAC,gBAAgB;AAC7B,IAAMC,OAAM,CAAC,GAAG;AAChB,IAAM+hB,uBAAA,GAA0B,IAAIjtF,cAAA,CAAe,yBAAyB;AAG5E,IAAMktF,8BAAA,GAAN,MAAqC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMnCr9F,YAAYs9F,QAAA,EAAUC,WAAA,EAAaC,WAAA,EAAa;IAC9C,KAAKC,oBAAA,GAAuB,IAAIv/C,OAAA,CAAQ;IAExC,KAAKw/C,mBAAA,GAAsB,KAAKD,oBAAA,CAAqB7zF,IAAA,CAAKioE,oBAAA,CAAqB,CAAC;IAEhF,KAAK8rB,SAAA,GAAY;IACjB,KAAKC,SAAA,GAAYN,QAAA;IACjB,KAAKO,YAAA,GAAeN,WAAA;IACpB,KAAKO,YAAA,GAAeN,WAAA;EACtB;EAAA;AAAA;AAAA;AAAA;EAKAl1D,OAAOy1D,QAAA,EAAU;IACf,KAAKJ,SAAA,GAAYI,QAAA;IACjB,KAAKC,uBAAA,CAAwB;IAC7B,KAAKC,oBAAA,CAAqB;EAC5B;EAAA;EAEAr1D,OAAA,EAAS;IACP,KAAK60D,oBAAA,CAAqBjvF,QAAA,CAAS;IACnC,KAAKmvF,SAAA,GAAY;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAO,wBAAwBZ,QAAA,EAAUC,WAAA,EAAaC,WAAA,EAAa;IAC1D,IAAIA,WAAA,GAAcD,WAAA,KAAgB,OAAO97F,SAAA,KAAc,eAAeA,SAAA,GAAY;MAChF,MAAM6B,KAAA,CAAM,8EAA8E;IAC5F;IACA,KAAKs6F,SAAA,GAAYN,QAAA;IACjB,KAAKO,YAAA,GAAeN,WAAA;IACpB,KAAKO,YAAA,GAAeN,WAAA;IACpB,KAAKQ,uBAAA,CAAwB;IAC7B,KAAKC,oBAAA,CAAqB;EAC5B;EAAA;EAEAE,kBAAA,EAAoB;IAClB,KAAKF,oBAAA,CAAqB;EAC5B;EAAA;EAEAG,oBAAA,EAAsB;IACpB,KAAKJ,uBAAA,CAAwB;IAC7B,KAAKC,oBAAA,CAAqB;EAC5B;EAAA;EAEAI,kBAAA,EAAoB,CAEpB;EAAA;EAEAC,wBAAA,EAA0B,CAE1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAC,cAAc99F,KAAA,EAAO+9F,QAAA,EAAU;IAC7B,IAAI,KAAKb,SAAA,EAAW;MAClB,KAAKA,SAAA,CAAUc,cAAA,CAAeh+F,KAAA,GAAQ,KAAKm9F,SAAA,EAAWY,QAAQ;IAChE;EACF;EAAA;EAEAR,wBAAA,EAA0B;IACxB,IAAI,CAAC,KAAKL,SAAA,EAAW;MACnB;IACF;IACA,KAAKA,SAAA,CAAUe,mBAAA,CAAoB,KAAKf,SAAA,CAAUgB,aAAA,CAAc,IAAI,KAAKf,SAAS;EACpF;EAAA;EAEAK,qBAAA,EAAuB;IACrB,IAAI,CAAC,KAAKN,SAAA,EAAW;MACnB;IACF;IACA,MAAMiB,aAAA,GAAgB,KAAKjB,SAAA,CAAUkB,gBAAA,CAAiB;IACtD,MAAMC,QAAA,GAAW;MACfC,KAAA,EAAOH,aAAA,CAAcG,KAAA;MACrBC,GAAA,EAAKJ,aAAA,CAAcI;IACrB;IACA,MAAMC,YAAA,GAAe,KAAKtB,SAAA,CAAUuB,eAAA,CAAgB;IACpD,MAAMC,UAAA,GAAa,KAAKxB,SAAA,CAAUgB,aAAA,CAAc;IAChD,IAAI9pC,YAAA,GAAe,KAAK8oC,SAAA,CAAUyB,mBAAA,CAAoB;IAEtD,IAAIC,iBAAA,GAAoB,KAAKzB,SAAA,GAAY,IAAI/oC,YAAA,GAAe,KAAK+oC,SAAA,GAAY;IAE7E,IAAIkB,QAAA,CAASE,GAAA,GAAMG,UAAA,EAAY;MAE7B,MAAMG,eAAA,GAAkBpU,IAAA,CAAKqU,IAAA,CAAKN,YAAA,GAAe,KAAKrB,SAAS;MAC/D,MAAM4B,eAAA,GAAkBtU,IAAA,CAAK7K,GAAA,CAAI,GAAG6K,IAAA,CAAK9K,GAAA,CAAIif,iBAAA,EAAmBF,UAAA,GAAaG,eAAe,CAAC;MAG7F,IAAID,iBAAA,IAAqBG,eAAA,EAAiB;QACxCH,iBAAA,GAAoBG,eAAA;QACpB3qC,YAAA,GAAe2qC,eAAA,GAAkB,KAAK5B,SAAA;QACtCkB,QAAA,CAASC,KAAA,GAAQ7T,IAAA,CAAKuU,KAAA,CAAMJ,iBAAiB;MAC/C;MACAP,QAAA,CAASE,GAAA,GAAM9T,IAAA,CAAK7K,GAAA,CAAI,GAAG6K,IAAA,CAAK9K,GAAA,CAAI+e,UAAA,EAAYL,QAAA,CAASC,KAAA,GAAQO,eAAe,CAAC;IACnF;IACA,MAAMI,WAAA,GAAc7qC,YAAA,GAAeiqC,QAAA,CAASC,KAAA,GAAQ,KAAKnB,SAAA;IACzD,IAAI8B,WAAA,GAAc,KAAK7B,YAAA,IAAgBiB,QAAA,CAASC,KAAA,IAAS,GAAG;MAC1D,MAAMY,WAAA,GAAczU,IAAA,CAAKqU,IAAA,EAAM,KAAKzB,YAAA,GAAe4B,WAAA,IAAe,KAAK9B,SAAS;MAChFkB,QAAA,CAASC,KAAA,GAAQ7T,IAAA,CAAK7K,GAAA,CAAI,GAAGye,QAAA,CAASC,KAAA,GAAQY,WAAW;MACzDb,QAAA,CAASE,GAAA,GAAM9T,IAAA,CAAK9K,GAAA,CAAI+e,UAAA,EAAYjU,IAAA,CAAKqU,IAAA,CAAKF,iBAAA,IAAqBJ,YAAA,GAAe,KAAKpB,YAAA,IAAgB,KAAKD,SAAS,CAAC;IACxH,OAAO;MACL,MAAMgC,SAAA,GAAYd,QAAA,CAASE,GAAA,GAAM,KAAKpB,SAAA,IAAa/oC,YAAA,GAAeoqC,YAAA;MAClE,IAAIW,SAAA,GAAY,KAAK/B,YAAA,IAAgBiB,QAAA,CAASE,GAAA,IAAOG,UAAA,EAAY;QAC/D,MAAMU,SAAA,GAAY3U,IAAA,CAAKqU,IAAA,EAAM,KAAKzB,YAAA,GAAe8B,SAAA,IAAa,KAAKhC,SAAS;QAC5E,IAAIiC,SAAA,GAAY,GAAG;UACjBf,QAAA,CAASE,GAAA,GAAM9T,IAAA,CAAK9K,GAAA,CAAI+e,UAAA,EAAYL,QAAA,CAASE,GAAA,GAAMa,SAAS;UAC5Df,QAAA,CAASC,KAAA,GAAQ7T,IAAA,CAAK7K,GAAA,CAAI,GAAG6K,IAAA,CAAKuU,KAAA,CAAMJ,iBAAA,GAAoB,KAAKxB,YAAA,GAAe,KAAKD,SAAS,CAAC;QACjG;MACF;IACF;IACA,KAAKD,SAAA,CAAUmC,gBAAA,CAAiBhB,QAAQ;IACxC,KAAKnB,SAAA,CAAUoC,wBAAA,CAAyB,KAAKnC,SAAA,GAAYkB,QAAA,CAASC,KAAK;IACvE,KAAKtB,oBAAA,CAAqB3wF,IAAA,CAAKo+E,IAAA,CAAKuU,KAAA,CAAMJ,iBAAiB,CAAC;EAC9D;AACF;AAOA,SAASW,uCAAuCC,YAAA,EAAc;EAC5D,OAAOA,YAAA,CAAaC,eAAA;AACtB;AAEA,IAAMC,0BAAA,GAAN,MAAMA,0BAAA,CAA0B;EAC9BngG,YAAA,EAAc;IACZ,KAAK49F,SAAA,GAAY;IACjB,KAAKC,YAAA,GAAe;IACpB,KAAKC,YAAA,GAAe;IAEpB,KAAKoC,eAAA,GAAkB,IAAI7C,8BAAA,CAA+B,KAAKC,QAAA,EAAU,KAAKC,WAAA,EAAa,KAAKC,WAAW;EAC7G;EAAA;EAEA,IAAIF,SAAA,EAAW;IACb,OAAO,KAAKM,SAAA;EACd;EACA,IAAIN,SAASv8F,KAAA,EAAO;IAClB,KAAK68F,SAAA,GAAYriC,oBAAA,CAAqBx6D,KAAK;EAC7C;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIw8F,YAAA,EAAc;IAChB,OAAO,KAAKM,YAAA;EACd;EACA,IAAIN,YAAYx8F,KAAA,EAAO;IACrB,KAAK88F,YAAA,GAAetiC,oBAAA,CAAqBx6D,KAAK;EAChD;EAAA;AAAA;AAAA;EAIA,IAAIy8F,YAAA,EAAc;IAChB,OAAO,KAAKM,YAAA;EACd;EACA,IAAIN,YAAYz8F,KAAA,EAAO;IACrB,KAAK+8F,YAAA,GAAeviC,oBAAA,CAAqBx6D,KAAK;EAChD;EACA8mC,YAAA,EAAc;IACZ,KAAKq4D,eAAA,CAAgBhC,uBAAA,CAAwB,KAAKZ,QAAA,EAAU,KAAKC,WAAA,EAAa,KAAKC,WAAW;EAChG;AAuBF;AArBI2C,0BAAA,CAAK51F,IAAA,GAAO,SAAS61F,kCAAkCx7F,CAAA,EAAG;EACxD,OAAO,KAAKA,CAAA,IAAKu7F,0BAAA,EAA2B;AAC9C;AAGAA,0BAAA,CAAK32D,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMs4F,0BAAA;EACNz2D,SAAA,EAAW,CAAC,CAAC,+BAA+B,YAAY,EAAE,CAAC;EAC3DC,MAAA,EAAQ;IACN2zD,QAAA,EAAU;IACVC,WAAA,EAAa;IACbC,WAAA,EAAa;EACf;EACA1zD,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS2jF,uBAAA;IACTjjF,UAAA,EAAY6lF,sCAAA;IACZ/zE,IAAA,EAAM,CAAC6F,UAAA,CAAW,MAAMquE,0BAAyB,CAAC;EACpD,CAAC,CAAC,GAAMp2D,oBAAoB;AAC9B,CAAC;AAzDL,IAAMs2D,yBAAA,GAANF,0BAAA;AAAA,CA4DC,MAAM;EACL,CAAC,OAAO1+F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBu1F,yBAAA,EAA2B,CAAC;IAClGx4F,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZ9wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS2jF,uBAAA;QACTjjF,UAAA,EAAY6lF,sCAAA;QACZ/zE,IAAA,EAAM,CAAC6F,UAAA,CAAW,MAAMuuE,yBAAyB,CAAC;MACpD,CAAC;IACH,CAAC;EACH,CAAC,GAAG,MAAM;IACR/C,QAAA,EAAU,CAAC;MACTz1F,IAAA,EAAMqiC;IACR,CAAC;IACDqzD,WAAA,EAAa,CAAC;MACZ11F,IAAA,EAAMqiC;IACR,CAAC;IACDszD,WAAA,EAAa,CAAC;MACZ31F,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAGH,IAAMo2D,mBAAA,GAAsB;AAK5B,IAAMC,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBvgG,YAAYi+D,OAAA,EAASe,SAAA,EAAWpsD,WAAU;IACxC,KAAKqrD,OAAA,GAAUA,OAAA;IACf,KAAKe,SAAA,GAAYA,SAAA;IAEjB,KAAKwhC,SAAA,GAAY,IAAItiD,OAAA,CAAQ;IAE7B,KAAKuiD,mBAAA,GAAsB;IAE3B,KAAKC,cAAA,GAAiB;IAKtB,KAAKC,gBAAA,GAAmB,mBAAIxgG,GAAA,CAAI;IAChC,KAAK0rB,SAAA,GAAYjZ;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA67D,SAASmyB,UAAA,EAAY;IACnB,IAAI,CAAC,KAAKD,gBAAA,CAAiBz/F,GAAA,CAAI0/F,UAAU,GAAG;MAC1C,KAAKD,gBAAA,CAAiBt/F,GAAA,CAAIu/F,UAAA,EAAYA,UAAA,CAAWC,eAAA,CAAgB,EAAE/1D,SAAA,CAAU,MAAM,KAAK01D,SAAA,CAAU1zF,IAAA,CAAK8zF,UAAU,CAAC,CAAC;IACrH;EACF;EAAA;AAAA;AAAA;AAAA;EAKA7vE,WAAW6vE,UAAA,EAAY;IACrB,MAAME,mBAAA,GAAsB,KAAKH,gBAAA,CAAiBx/F,GAAA,CAAIy/F,UAAU;IAChE,IAAIE,mBAAA,EAAqB;MACvBA,mBAAA,CAAoBn2D,WAAA,CAAY;MAChC,KAAKg2D,gBAAA,CAAiBr+F,MAAA,CAAOs+F,UAAU;IACzC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAG,SAASC,aAAA,GAAgBV,mBAAA,EAAqB;IAC5C,IAAI,CAAC,KAAKthC,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,OAAOrsD,EAAA,CAAG;IACZ;IACA,OAAO,IAAIqC,UAAA,CAAWC,QAAA,IAAY;MAChC,IAAI,CAAC,KAAKw0F,mBAAA,EAAqB;QAC7B,KAAKQ,kBAAA,CAAmB;MAC1B;MAGA,MAAMp4C,YAAA,GAAem4C,aAAA,GAAgB,IAAI,KAAKR,SAAA,CAAU52F,IAAA,CAAKs3F,SAAA,CAAUF,aAAa,CAAC,EAAEl2D,SAAA,CAAU7+B,QAAQ,IAAI,KAAKu0F,SAAA,CAAU11D,SAAA,CAAU7+B,QAAQ;MAC9I,KAAKy0F,cAAA;MACL,OAAO,MAAM;QACX73C,YAAA,CAAale,WAAA,CAAY;QACzB,KAAK+1D,cAAA;QACL,IAAI,CAAC,KAAKA,cAAA,EAAgB;UACxB,KAAKS,qBAAA,CAAsB;QAC7B;MACF;IACF,CAAC;EACH;EACAr/E,YAAA,EAAc;IACZ,KAAKq/E,qBAAA,CAAsB;IAC3B,KAAKR,gBAAA,CAAiBpgG,OAAA,CAAQ,CAACq0C,CAAA,EAAGne,SAAA,KAAc,KAAK1F,UAAA,CAAW0F,SAAS,CAAC;IAC1E,KAAK+pE,SAAA,CAAUhyF,QAAA,CAAS;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA4yF,iBAAiBha,mBAAA,EAAqB4Z,aAAA,EAAe;IACnD,MAAMK,SAAA,GAAY,KAAKC,2BAAA,CAA4Bla,mBAAmB;IACtE,OAAO,KAAK2Z,QAAA,CAASC,aAAa,EAAEp3F,IAAA,CAAK5G,MAAA,CAAOia,MAAA,IAAU;MACxD,OAAO,CAACA,MAAA,IAAUokF,SAAA,CAAU3gG,OAAA,CAAQuc,MAAM,IAAI;IAChD,CAAC,CAAC;EACJ;EAAA;EAEAqkF,4BAA4Bla,mBAAA,EAAqB;IAC/C,MAAMma,mBAAA,GAAsB,EAAC;IAC7B,KAAKZ,gBAAA,CAAiBpgG,OAAA,CAAQ,CAACszE,aAAA,EAAe+sB,UAAA,KAAe;MAC3D,IAAI,KAAKY,0BAAA,CAA2BZ,UAAA,EAAYxZ,mBAAmB,GAAG;QACpEma,mBAAA,CAAoBngG,IAAA,CAAKw/F,UAAU;MACrC;IACF,CAAC;IACD,OAAOW,mBAAA;EACT;EAAA;EAEA7qB,WAAA,EAAa;IACX,OAAO,KAAK7qD,SAAA,CAAUu/C,WAAA,IAAe34D,MAAA;EACvC;EAAA;EAEA+uF,2BAA2BZ,UAAA,EAAYxZ,mBAAA,EAAqB;IAC1D,IAAInnE,OAAA,GAAU87C,aAAA,CAAcqrB,mBAAmB;IAC/C,IAAIqa,iBAAA,GAAoBb,UAAA,CAAWc,aAAA,CAAc,EAAEz2C,aAAA;IAGnD,GAAG;MACD,IAAIhrC,OAAA,IAAWwhF,iBAAA,EAAmB;QAChC,OAAO;MACT;IACF,SAASxhF,OAAA,GAAUA,OAAA,CAAQd,aAAA;IAC3B,OAAO;EACT;EAAA;EAEA8hF,mBAAA,EAAqB;IACnB,KAAKR,mBAAA,GAAsB,KAAKxiC,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MAC9D,MAAM+E,UAAS,KAAKikE,UAAA,CAAW;MAC/B,OAAOirB,SAAA,CAAUlvF,QAAOG,QAAA,EAAU,QAAQ,EAAEk4B,SAAA,CAAU,MAAM,KAAK01D,SAAA,CAAU1zF,IAAA,CAAK,CAAC;IACnF,CAAC;EACH;EAAA;EAEAq0F,sBAAA,EAAwB;IACtB,IAAI,KAAKV,mBAAA,EAAqB;MAC5B,KAAKA,mBAAA,CAAoB91D,WAAA,CAAY;MACrC,KAAK81D,mBAAA,GAAsB;IAC7B;EACF;AAaF;AAXIF,iBAAA,CAAKh2F,IAAA,GAAO,SAASq3F,yBAAyBh9F,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK27F,iBAAA,EAAqB91F,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAS2J,QAAA,EAAU,CAAC,CAAC;AAC/G;AAGAmsF,iBAAA,CAAK71F,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOy6F,iBAAA;EACP31F,OAAA,EAAS21F,iBAAA,CAAiBh2F,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AAzIL,IAAMwqF,gBAAA,GAANtB,iBAAA;AAAA,CA4IC,MAAM;EACL,CAAC,OAAO9+F,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+2F,gBAAA,EAAkB,CAAC;IACzFh6F,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAM0tF,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClB9hG,YAAYg1F,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAA,EAAK;IACrD,KAAK28B,UAAA,GAAaA,UAAA;IAClB,KAAK+M,gBAAA,GAAmBA,gBAAA;IACxB,KAAKj2F,MAAA,GAASA,MAAA;IACd,KAAKusD,GAAA,GAAMA,GAAA;IACX,KAAK2pC,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAC9B,KAAK+jD,gBAAA,GAAmB,IAAIj2F,UAAA,CAAWC,QAAA,IAAY,KAAKH,MAAA,CAAO4B,iBAAA,CAAkB,MAAMi0F,SAAA,CAAU,KAAK3M,UAAA,CAAW/pC,aAAA,EAAe,QAAQ,EAAErhD,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU7+B,QAAQ,CAAC,CAAC;EACjM;EACAo8B,SAAA,EAAW;IACT,KAAK05D,gBAAA,CAAiBtzB,QAAA,CAAS,IAAI;EACrC;EACA3sD,YAAA,EAAc;IACZ,KAAKigF,gBAAA,CAAiBhxE,UAAA,CAAW,IAAI;IACrC,KAAKixE,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;EAC3B;EAAA;EAEAqyF,gBAAA,EAAkB;IAChB,OAAO,KAAKoB,gBAAA;EACd;EAAA;EAEAP,cAAA,EAAgB;IACd,OAAO,KAAK1M,UAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAh9B,SAAShzD,OAAA,EAAS;IAChB,MAAMmX,EAAA,GAAK,KAAK64E,UAAA,CAAW/pC,aAAA;IAC3B,MAAMi3C,KAAA,GAAQ,KAAK7pC,GAAA,IAAO,KAAKA,GAAA,CAAIt3D,KAAA,IAAS;IAE5C,IAAIiE,OAAA,CAAQijF,IAAA,IAAQ,MAAM;MACxBjjF,OAAA,CAAQijF,IAAA,GAAOia,KAAA,GAAQl9F,OAAA,CAAQg6F,GAAA,GAAMh6F,OAAA,CAAQ+5F,KAAA;IAC/C;IACA,IAAI/5F,OAAA,CAAQomF,KAAA,IAAS,MAAM;MACzBpmF,OAAA,CAAQomF,KAAA,GAAQ8W,KAAA,GAAQl9F,OAAA,CAAQ+5F,KAAA,GAAQ/5F,OAAA,CAAQg6F,GAAA;IAClD;IAEA,IAAIh6F,OAAA,CAAQsmF,MAAA,IAAU,MAAM;MAC1BtmF,OAAA,CAAQkjF,GAAA,GAAM/rE,EAAA,CAAGgmF,YAAA,GAAehmF,EAAA,CAAGimF,YAAA,GAAep9F,OAAA,CAAQsmF,MAAA;IAC5D;IAEA,IAAI4W,KAAA,IAASjqC,oBAAA,CAAqB,KAAKR,iBAAA,CAAkBS,MAAA,EAAQ;MAC/D,IAAIlzD,OAAA,CAAQijF,IAAA,IAAQ,MAAM;QACxBjjF,OAAA,CAAQomF,KAAA,GAAQjvE,EAAA,CAAGkmF,WAAA,GAAclmF,EAAA,CAAGmmF,WAAA,GAAct9F,OAAA,CAAQijF,IAAA;MAC5D;MACA,IAAIhwB,oBAAA,CAAqB,KAAKR,iBAAA,CAAkBqB,QAAA,EAAU;QACxD9zD,OAAA,CAAQijF,IAAA,GAAOjjF,OAAA,CAAQomF,KAAA;MACzB,WAAWnzB,oBAAA,CAAqB,KAAKR,iBAAA,CAAkBoB,OAAA,EAAS;QAC9D7zD,OAAA,CAAQijF,IAAA,GAAOjjF,OAAA,CAAQomF,KAAA,GAAQ,CAACpmF,OAAA,CAAQomF,KAAA,GAAQpmF,OAAA,CAAQomF,KAAA;MAC1D;IACF,OAAO;MACL,IAAIpmF,OAAA,CAAQomF,KAAA,IAAS,MAAM;QACzBpmF,OAAA,CAAQijF,IAAA,GAAO9rE,EAAA,CAAGkmF,WAAA,GAAclmF,EAAA,CAAGmmF,WAAA,GAAct9F,OAAA,CAAQomF,KAAA;MAC3D;IACF;IACA,KAAKmX,qBAAA,CAAsBv9F,OAAO;EACpC;EACAu9F,sBAAsBv9F,OAAA,EAAS;IAC7B,MAAMmX,EAAA,GAAK,KAAK64E,UAAA,CAAW/pC,aAAA;IAC3B,IAAI2M,sBAAA,CAAuB,GAAG;MAC5Bz7C,EAAA,CAAG67C,QAAA,CAAShzD,OAAO;IACrB,OAAO;MACL,IAAIA,OAAA,CAAQkjF,GAAA,IAAO,MAAM;QACvB/rE,EAAA,CAAGqmF,SAAA,GAAYx9F,OAAA,CAAQkjF,GAAA;MACzB;MACA,IAAIljF,OAAA,CAAQijF,IAAA,IAAQ,MAAM;QACxB9rE,EAAA,CAAGy8C,UAAA,GAAa5zD,OAAA,CAAQijF,IAAA;MAC1B;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUAmX,oBAAoBn9F,OAAM;IACxB,MAAMwgG,IAAA,GAAO;IACb,MAAMC,KAAA,GAAQ;IACd,MAAMvmF,EAAA,GAAK,KAAK64E,UAAA,CAAW/pC,aAAA;IAC3B,IAAIhpD,SAAQ,OAAO;MACjB,OAAOka,EAAA,CAAGqmF,SAAA;IACZ;IACA,IAAIvgG,SAAQ,UAAU;MACpB,OAAOka,EAAA,CAAGgmF,YAAA,GAAehmF,EAAA,CAAGimF,YAAA,GAAejmF,EAAA,CAAGqmF,SAAA;IAChD;IAEA,MAAMN,KAAA,GAAQ,KAAK7pC,GAAA,IAAO,KAAKA,GAAA,CAAIt3D,KAAA,IAAS;IAC5C,IAAIkB,SAAQ,SAAS;MACnBA,QAAOigG,KAAA,GAAQQ,KAAA,GAAQD,IAAA;IACzB,WAAWxgG,SAAQ,OAAO;MACxBA,QAAOigG,KAAA,GAAQO,IAAA,GAAOC,KAAA;IACxB;IACA,IAAIR,KAAA,IAASjqC,oBAAA,CAAqB,KAAKR,iBAAA,CAAkBqB,QAAA,EAAU;MAGjE,IAAI72D,SAAQwgG,IAAA,EAAM;QAChB,OAAOtmF,EAAA,CAAGkmF,WAAA,GAAclmF,EAAA,CAAGmmF,WAAA,GAAcnmF,EAAA,CAAGy8C,UAAA;MAC9C,OAAO;QACL,OAAOz8C,EAAA,CAAGy8C,UAAA;MACZ;IACF,WAAWspC,KAAA,IAASjqC,oBAAA,CAAqB,KAAKR,iBAAA,CAAkBoB,OAAA,EAAS;MAGvE,IAAI52D,SAAQwgG,IAAA,EAAM;QAChB,OAAOtmF,EAAA,CAAGy8C,UAAA,GAAaz8C,EAAA,CAAGkmF,WAAA,GAAclmF,EAAA,CAAGmmF,WAAA;MAC7C,OAAO;QACL,OAAO,CAACnmF,EAAA,CAAGy8C,UAAA;MACb;IACF,OAAO;MAGL,IAAI32D,SAAQwgG,IAAA,EAAM;QAChB,OAAOtmF,EAAA,CAAGy8C,UAAA;MACZ,OAAO;QACL,OAAOz8C,EAAA,CAAGkmF,WAAA,GAAclmF,EAAA,CAAGmmF,WAAA,GAAcnmF,EAAA,CAAGy8C,UAAA;MAC9C;IACF;EACF;AAaF;AAXIkpC,cAAA,CAAKv3F,IAAA,GAAO,SAASo4F,sBAAsB/9F,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKk9F,cAAA,EAAkB91C,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB61C,gBAAgB,GAAM71C,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,CAAC;AAC1L;AAGAsnB,cAAA,CAAKt4D,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMi6F,cAAA;EACNp4D,SAAA,EAAW,CAAC,CAAC,IAAI,kBAAkB,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACjEI,UAAA,EAAY;AACd,CAAC;AA3IL,IAAM84D,aAAA,GAANd,cAAA;AAAA,CA8IC,MAAM;EACL,CAAC,OAAOrgG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB83F,aAAA,EAAe,CAAC;IACtF/6F,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMg6F;EACR,GAAG;IACDh6F,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAMu/E,mBAAA,GAAsB;AAK5B,IAAMC,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClB9iG,YAAYg/D,SAAA,EAAWlzD,MAAA,EAAQ8G,WAAU;IACvC,KAAKosD,SAAA,GAAYA,SAAA;IAEjB,KAAK+jC,OAAA,GAAU,IAAI7kD,OAAA,CAAQ;IAE3B,KAAK8kD,eAAA,GAAkBh5F,KAAA,IAAS;MAC9B,KAAK+4F,OAAA,CAAQj2F,IAAA,CAAK9C,KAAK;IACzB;IACA,KAAK6hB,SAAA,GAAYjZ;IACjB9G,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;MAC7B,IAAIsxD,SAAA,CAAUhJ,SAAA,EAAW;QACvB,MAAMvjD,UAAS,KAAKikE,UAAA,CAAW;QAG/BjkE,QAAOmB,gBAAA,CAAiB,UAAU,KAAKovF,eAAe;QACtDvwF,QAAOmB,gBAAA,CAAiB,qBAAqB,KAAKovF,eAAe;MACnE;MAGA,KAAKj9B,MAAA,CAAO,EAAEj7B,SAAA,CAAU,MAAM,KAAKm4D,aAAA,GAAgB,IAAI;IACzD,CAAC;EACH;EACAnhF,YAAA,EAAc;IACZ,IAAI,KAAKk9C,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,MAAMvjD,UAAS,KAAKikE,UAAA,CAAW;MAC/BjkE,QAAOmE,mBAAA,CAAoB,UAAU,KAAKosF,eAAe;MACzDvwF,QAAOmE,mBAAA,CAAoB,qBAAqB,KAAKosF,eAAe;IACtE;IACA,KAAKD,OAAA,CAAQv0F,QAAA,CAAS;EACxB;EAAA;EAEA0wF,gBAAA,EAAkB;IAChB,IAAI,CAAC,KAAK+D,aAAA,EAAe;MACvB,KAAKC,mBAAA,CAAoB;IAC3B;IACA,MAAMniC,MAAA,GAAS;MACbzI,KAAA,EAAO,KAAK2qC,aAAA,CAAc3qC,KAAA;MAC1BK,MAAA,EAAQ,KAAKsqC,aAAA,CAActqC;IAC7B;IAEA,IAAI,CAAC,KAAKqG,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,KAAKitC,aAAA,GAAgB;IACvB;IACA,OAAOliC,MAAA;EACT;EAAA;EAEAoiC,gBAAA,EAAkB;IAUhB,MAAMC,cAAA,GAAiB,KAAKC,yBAAA,CAA0B;IACtD,MAAM;MACJ/qC,KAAA;MACAK;IACF,IAAI,KAAKumC,eAAA,CAAgB;IACzB,OAAO;MACLhX,GAAA,EAAKkb,cAAA,CAAelb,GAAA;MACpBD,IAAA,EAAMmb,cAAA,CAAenb,IAAA;MACrBqD,MAAA,EAAQ8X,cAAA,CAAelb,GAAA,GAAMvvB,MAAA;MAC7ByyB,KAAA,EAAOgY,cAAA,CAAenb,IAAA,GAAO3vB,KAAA;MAC7BK,MAAA;MACAL;IACF;EACF;EAAA;EAEA+qC,0BAAA,EAA4B;IAG1B,IAAI,CAAC,KAAKrkC,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,OAAO;QACLkyB,GAAA,EAAK;QACLD,IAAA,EAAM;MACR;IACF;IAOA,MAAMr1E,YAAW,KAAKiZ,SAAA;IACtB,MAAMpZ,UAAS,KAAKikE,UAAA,CAAW;IAC/B,MAAM5e,eAAA,GAAkBllD,UAASklD,eAAA;IACjC,MAAMwrC,YAAA,GAAexrC,eAAA,CAAgB+vB,qBAAA,CAAsB;IAC3D,MAAMK,GAAA,GAAM,CAACob,YAAA,CAAapb,GAAA,IAAOt1E,UAAS7L,IAAA,CAAKy7F,SAAA,IAAa/vF,QAAO8wF,OAAA,IAAWzrC,eAAA,CAAgB0qC,SAAA,IAAa;IAC3G,MAAMva,IAAA,GAAO,CAACqb,YAAA,CAAarb,IAAA,IAAQr1E,UAAS7L,IAAA,CAAK6xD,UAAA,IAAcnmD,QAAO+wF,OAAA,IAAW1rC,eAAA,CAAgBc,UAAA,IAAc;IAC/G,OAAO;MACLsvB,GAAA;MACAD;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAliB,OAAO09B,YAAA,GAAeZ,mBAAA,EAAqB;IACzC,OAAOY,YAAA,GAAe,IAAI,KAAKV,OAAA,CAAQn5F,IAAA,CAAKs3F,SAAA,CAAUuC,YAAY,CAAC,IAAI,KAAKV,OAAA;EAC9E;EAAA;EAEArsB,WAAA,EAAa;IACX,OAAO,KAAK7qD,SAAA,CAAUu/C,WAAA,IAAe34D,MAAA;EACvC;EAAA;EAEAywF,oBAAA,EAAsB;IACpB,MAAMzwF,UAAS,KAAKikE,UAAA,CAAW;IAC/B,KAAKusB,aAAA,GAAgB,KAAKjkC,SAAA,CAAUhJ,SAAA,GAAY;MAC9CsC,KAAA,EAAO7lD,QAAOixF,UAAA;MACd/qC,MAAA,EAAQlmD,QAAOkxF;IACjB,IAAI;MACFrrC,KAAA,EAAO;MACPK,MAAA,EAAQ;IACV;EACF;AAaF;AAXImqC,cAAA,CAAKv4F,IAAA,GAAO,SAASq5F,sBAAsBh/F,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKk+F,cAAA,EAAkBr4F,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAA,EAAU,CAAC,CAAC;AAC5G;AAGA0uF,cAAA,CAAKp4F,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOg9F,cAAA;EACPl4F,OAAA,EAASk4F,cAAA,CAAcv4F,IAAA;EACvB8M,UAAA,EAAY;AACd,CAAC;AAnIL,IAAMwsF,aAAA,GAANf,cAAA;AAAA,CAsIC,MAAM;EACL,CAAC,OAAOrhG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+4F,aAAA,EAAe,CAAC;IACtFh8F,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM0vF,kBAAA,GAAqB,IAAI3zF,cAAA,CAAe,oBAAoB;AAIlE,IAAM4zF,qBAAA,GAAN,MAAMA,qBAAA,SAA6BnB,aAAA,CAAc;EAC/C5iG,YAAYg1F,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAA,EAAK;IACrD,MAAM28B,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAG;EACjD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA2rC,oBAAoBC,WAAA,EAAa;IAC/B,MAAMC,UAAA,GAAa,KAAKlP,UAAA,CAAW/pC,aAAA;IACnC,OAAOg5C,WAAA,KAAgB,eAAeC,UAAA,CAAW5B,WAAA,GAAc4B,UAAA,CAAW9B,YAAA;EAC5E;AAYF;AAVI2B,qBAAA,CAAKx5F,IAAA,GAAO,SAAS45F,6BAA6Bv/F,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKm/F,qBAAA,EAAyB/3C,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB61C,gBAAgB,GAAM71C,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,CAAC;AACjM;AAGAupB,qBAAA,CAAKv6D,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMk8F,qBAAA;EACN3qF,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAtBL,IAAM8O,oBAAA,GAANL,qBAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOtiG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBs5F,oBAAA,EAAsB,CAAC;IAC7Fv8F,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,CAAC;IACTpiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMg6F;EACR,GAAG;IACDh6F,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,SAAS+gF,YAAYC,EAAA,EAAIC,EAAA,EAAI;EAC3B,OAAOD,EAAA,CAAGvF,KAAA,IAASwF,EAAA,CAAGxF,KAAA,IAASuF,EAAA,CAAGtF,GAAA,IAAOuF,EAAA,CAAGvF,GAAA;AAC9C;AAMA,IAAMwF,gBAAA,GAAmB,OAAOC,qBAAA,KAA0B,cAAcC,uBAAA,GAA0BC,aAAA;AAElG,IAAMC,yBAAA,GAAN,MAAMA,yBAAA,SAAiCR,oBAAA,CAAqB;EAAA;EAE1D,IAAIH,YAAA,EAAc;IAChB,OAAO,KAAKY,YAAA;EACd;EACA,IAAIZ,YAAYA,WAAA,EAAa;IAC3B,IAAI,KAAKY,YAAA,KAAiBZ,WAAA,EAAa;MACrC,KAAKY,YAAA,GAAeZ,WAAA;MACpB,KAAKa,oBAAA,CAAqB;IAC5B;EACF;EACA9kG,YAAYg1F,UAAA,EAAYjG,kBAAA,EAAoBjjF,MAAA,EAAQo0F,eAAA,EAAiB7nC,GAAA,EAAK0pC,gBAAA,EAAkBgD,aAAA,EAAenE,UAAA,EAAY;IACrH,MAAM5L,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAG;IAC/C,KAAK28B,UAAA,GAAaA,UAAA;IAClB,KAAKjG,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKmR,eAAA,GAAkBA,eAAA;IACvB,KAAKU,UAAA,GAAaA,UAAA;IAClB,KAAK5hC,SAAA,GAAYxzD,MAAA,CAAOqrD,QAAQ;IAEhC,KAAKmuC,gBAAA,GAAmB,IAAI9mD,OAAA,CAAQ;IAEpC,KAAK+mD,qBAAA,GAAwB,IAAI/mD,OAAA,CAAQ;IACzC,KAAK2mD,YAAA,GAAe;IAKpB,KAAKK,UAAA,GAAa;IAMlB,KAAKxH,mBAAA,GAAsB,IAAI1xF,UAAA,CAAWC,QAAA,IAAY,KAAKi0F,eAAA,CAAgBxC,mBAAA,CAAoB5yD,SAAA,CAAUrqC,KAAA,IAASqS,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM,KAAKR,MAAA,CAAOqC,GAAA,CAAI,MAAMlC,QAAA,CAASa,IAAA,CAAKrM,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5L,KAAK0kG,mBAAA,GAAsB,KAAKF,qBAAA;IAIhC,KAAKG,iBAAA,GAAoB;IAEzB,KAAKC,kBAAA,GAAqB;IAE1B,KAAKC,mBAAA,GAAsB;IAE3B,KAAKC,cAAA,GAAiB;MACpBxG,KAAA,EAAO;MACPC,GAAA,EAAK;IACP;IAEA,KAAKwG,WAAA,GAAc;IAEnB,KAAKvC,aAAA,GAAgB;IAErB,KAAKwC,sBAAA,GAAyB;IAK9B,KAAKC,kCAAA,GAAqC;IAE1C,KAAKC,yBAAA,GAA4B;IAEjC,KAAKC,wBAAA,GAA2B,EAAC;IAEjC,KAAKC,gBAAA,GAAmBp9C,YAAA,CAAazM,KAAA;IACrC,IAAI,CAACkkD,eAAA,KAAoB,OAAOz+F,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvE,MAAM6B,KAAA,CAAM,gFAAgF;IAC9F;IACA,KAAKuiG,gBAAA,GAAmBd,aAAA,CAAch/B,MAAA,CAAO,EAAEj7B,SAAA,CAAU,MAAM;MAC7D,KAAKg7D,iBAAA,CAAkB;IACzB,CAAC;IACD,IAAI,CAAC,KAAKlF,UAAA,EAAY;MAEpB,KAAK5L,UAAA,CAAW/pC,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,wBAAwB;MACpE,KAAK8vF,UAAA,GAAa;IACpB;EACF;EACAv4D,SAAA,EAAW;IAET,IAAI,CAAC,KAAK22B,SAAA,CAAUhJ,SAAA,EAAW;MAC7B;IACF;IACA,IAAI,KAAK4qC,UAAA,KAAe,MAAM;MAC5B,MAAMv4D,QAAA,CAAS;IACjB;IAKA,KAAKv8B,MAAA,CAAO4B,iBAAA,CAAkB,MAAMoF,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;MAC/D,KAAKy5F,oBAAA,CAAqB;MAC1B,KAAK7F,eAAA,CAAgB53D,MAAA,CAAO,IAAI;MAChC,KAAKs4D,UAAA,CAAWC,eAAA,CAAgB,EAAEj3F,IAAA;MAAA;MAElCypC,SAAA,CAAU,IAAI;MAAA;MAAA;MAAA;MAId6tD,SAAA,CAAU,GAAGsD,gBAAgB;MAAA;MAAA;MAAA;MAI7B1gD,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAKo1D,eAAA,CAAgB/B,iBAAA,CAAkB,CAAC;MACpF,KAAK6H,0BAAA,CAA2B;IAClC,CAAC,CAAC;EACJ;EACAlkF,YAAA,EAAc;IACZ,KAAK8mB,MAAA,CAAO;IACZ,KAAKs3D,eAAA,CAAgBt3D,MAAA,CAAO;IAE5B,KAAKq8D,qBAAA,CAAsBz2F,QAAA,CAAS;IACpC,KAAKw2F,gBAAA,CAAiBx2F,QAAA,CAAS;IAC/B,KAAKq3F,gBAAA,CAAiBl7D,WAAA,CAAY;IAClC,MAAM7oB,WAAA,CAAY;EACpB;EAAA;EAEAwmB,OAAO29D,KAAA,EAAO;IACZ,IAAI,KAAKC,MAAA,KAAW,OAAOzkG,SAAA,KAAc,eAAeA,SAAA,GAAY;MAClE,MAAM6B,KAAA,CAAM,+CAA+C;IAC7D;IAIA,KAAKwI,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;MAClC,KAAKw4F,MAAA,GAASD,KAAA;MACd,KAAKC,MAAA,CAAOC,UAAA,CAAWv8F,IAAA,CAAKk6C,SAAA,CAAU,KAAKkhD,gBAAgB,CAAC,EAAEl6D,SAAA,CAAUx3B,IAAA,IAAQ;QAC9E,MAAM8yF,SAAA,GAAY9yF,IAAA,CAAKxR,MAAA;QACvB,IAAIskG,SAAA,KAAc,KAAKZ,WAAA,EAAa;UAClC,KAAKA,WAAA,GAAcY,SAAA;UACnB,KAAKlG,eAAA,CAAgB9B,mBAAA,CAAoB;QAC3C;QACA,KAAKiI,kBAAA,CAAmB;MAC1B,CAAC;IACH,CAAC;EACH;EAAA;EAEAz9D,OAAA,EAAS;IACP,KAAKs9D,MAAA,GAAS;IACd,KAAKlB,gBAAA,CAAiBl4F,IAAA,CAAK;EAC7B;EAAA;EAEA6xF,cAAA,EAAgB;IACd,OAAO,KAAK6G,WAAA;EACd;EAAA;EAEAtG,gBAAA,EAAkB;IAChB,OAAO,KAAK+D,aAAA;EACd;EAAA;EAAA;EAAA;EAAA;EAAA;EAMApE,iBAAA,EAAmB;IACjB,OAAO,KAAK0G,cAAA;EACd;EACAe,0CAA0CrkG,OAAM;IAC9C,OAAO,KAAKy/F,aAAA,CAAc,EAAEz2C,aAAA,CAAc48B,qBAAA,CAAsB,EAAE5lF,KAAI;EACxE;EAAA;AAAA;AAAA;AAAA;EAKAy8F,oBAAoB3iD,IAAA,EAAM;IACxB,IAAI,KAAKqpD,iBAAA,KAAsBrpD,IAAA,EAAM;MACnC,KAAKqpD,iBAAA,GAAoBrpD,IAAA;MACzB,KAAK+oD,oBAAA,CAAqB;MAC1B,KAAKkB,0BAAA,CAA2B;IAClC;EACF;EAAA;EAEAlG,iBAAiBtf,QAAO;IACtB,IAAI,CAAC6jB,WAAA,CAAY,KAAKkB,cAAA,EAAgB/kB,MAAK,GAAG;MAC5C,IAAI,KAAK0kB,UAAA,EAAY;QACnB1kB,SAAQ;UACNue,KAAA,EAAO;UACPC,GAAA,EAAK9T,IAAA,CAAK7K,GAAA,CAAI,KAAKklB,cAAA,CAAevG,GAAA,EAAKxe,OAAMwe,GAAG;QAClD;MACF;MACA,KAAKiG,qBAAA,CAAsBn4F,IAAA,CAAK,KAAKy4F,cAAA,GAAiB/kB,MAAK;MAC3D,KAAKwlB,0BAAA,CAA2B,MAAM,KAAK9F,eAAA,CAAgB7B,iBAAA,CAAkB,CAAC;IAChF;EACF;EAAA;AAAA;AAAA;EAIAkI,gCAAA,EAAkC;IAChC,OAAO,KAAKb,kCAAA,GAAqC,OAAO,KAAKD,sBAAA;EAC/D;EAAA;AAAA;AAAA;AAAA;EAKA1F,yBAAyByG,MAAA,EAAQ5mD,EAAA,GAAK,YAAY;IAEhD4mD,MAAA,GAAS,KAAKtB,UAAA,IAActlD,EAAA,KAAO,aAAa,IAAI4mD,MAAA;IAGpD,MAAMtE,KAAA,GAAQ,KAAK7pC,GAAA,IAAO,KAAKA,GAAA,CAAIt3D,KAAA,IAAS;IAC5C,MAAM0lG,YAAA,GAAe,KAAKxC,WAAA,IAAe;IACzC,MAAMyC,IAAA,GAAOD,YAAA,GAAe,MAAM;IAClC,MAAME,aAAA,GAAgBF,YAAA,IAAgBvE,KAAA,GAAQ,KAAK;IACnD,IAAI/0C,SAAA,GAAY,YAAYu5C,IAAI,IAAIhrC,MAAA,CAAOirC,aAAA,GAAgBH,MAAM,CAAC;IAClE,KAAKf,sBAAA,GAAyBe,MAAA;IAC9B,IAAI5mD,EAAA,KAAO,UAAU;MACnBuN,SAAA,IAAa,aAAau5C,IAAI;MAI9B,KAAKhB,kCAAA,GAAqC;IAC5C;IACA,IAAI,KAAKkB,yBAAA,IAA6Bz5C,SAAA,EAAW;MAG/C,KAAKy5C,yBAAA,GAA4Bz5C,SAAA;MACjC,KAAK64C,0BAAA,CAA2B,MAAM;QACpC,IAAI,KAAKN,kCAAA,EAAoC;UAC3C,KAAKD,sBAAA,IAA0B,KAAKoB,0BAAA,CAA2B;UAC/D,KAAKnB,kCAAA,GAAqC;UAC1C,KAAK3F,wBAAA,CAAyB,KAAK0F,sBAAsB;QAC3D,OAAO;UACL,KAAKvF,eAAA,CAAgB5B,uBAAA,CAAwB;QAC/C;MACF,CAAC;IACH;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAG,eAAe+H,MAAA,EAAQhI,QAAA,GAAW,QAAQ;IACxC,MAAMx5F,OAAA,GAAU;MACdw5F;IACF;IACA,IAAI,KAAKyF,WAAA,KAAgB,cAAc;MACrCj/F,OAAA,CAAQ+5F,KAAA,GAAQyH,MAAA;IAClB,OAAO;MACLxhG,OAAA,CAAQkjF,GAAA,GAAMse,MAAA;IAChB;IACA,KAAK5F,UAAA,CAAW5oC,QAAA,CAAShzD,OAAO;EAClC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAu5F,cAAc99F,KAAA,EAAO+9F,QAAA,GAAW,QAAQ;IACtC,KAAK0B,eAAA,CAAgB3B,aAAA,CAAc99F,KAAA,EAAO+9F,QAAQ;EACpD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAY,oBAAoBn9F,OAAM;IAExB,IAAIm9F,mBAAA;IACJ,IAAI,KAAKwB,UAAA,IAAc,MAAM;MAC3BxB,mBAAA,GAAsB0H,KAAA,IAAS,MAAM1H,mBAAA,CAAoB0H,KAAK;IAChE,OAAO;MACL1H,mBAAA,GAAsB0H,KAAA,IAAS,KAAKlG,UAAA,CAAWxB,mBAAA,CAAoB0H,KAAK;IAC1E;IACA,OAAO5b,IAAA,CAAK7K,GAAA,CAAI,GAAG+e,mBAAA,CAAoBn9F,UAAS,KAAKgiG,WAAA,KAAgB,eAAe,UAAU,MAAM,IAAI,KAAK8C,qBAAA,CAAsB,CAAC;EACtI;EAAA;AAAA;AAAA;AAAA;EAKAA,sBAAsB9kG,OAAM;IAC1B,IAAI+kG,QAAA;IACJ,MAAMvE,IAAA,GAAO;IACb,MAAMC,KAAA,GAAQ;IACd,MAAMR,KAAA,GAAQ,KAAK7pC,GAAA,EAAKt3D,KAAA,IAAS;IACjC,IAAIkB,SAAQ,SAAS;MACnB+kG,QAAA,GAAW9E,KAAA,GAAQQ,KAAA,GAAQD,IAAA;IAC7B,WAAWxgG,SAAQ,OAAO;MACxB+kG,QAAA,GAAW9E,KAAA,GAAQO,IAAA,GAAOC,KAAA;IAC5B,WAAWzgG,OAAM;MACf+kG,QAAA,GAAW/kG;IACb,OAAO;MACL+kG,QAAA,GAAW,KAAK/C,WAAA,KAAgB,eAAe,SAAS;IAC1D;IACA,MAAMgD,kBAAA,GAAqB,KAAKrG,UAAA,CAAW0F,yCAAA,CAA0CU,QAAQ;IAC7F,MAAME,kBAAA,GAAqB,KAAKlS,UAAA,CAAW/pC,aAAA,CAAc48B,qBAAA,CAAsB,EAAEmf,QAAQ;IACzF,OAAOE,kBAAA,GAAqBD,kBAAA;EAC9B;EAAA;EAEAJ,2BAAA,EAA6B;IAC3B,MAAMM,SAAA,GAAY,KAAKC,eAAA,CAAgBn8C,aAAA;IACvC,OAAO,KAAKg5C,WAAA,KAAgB,eAAekD,SAAA,CAAU18B,WAAA,GAAc08B,SAAA,CAAUz8B,YAAA;EAC/E;EAAA;AAAA;AAAA;AAAA;EAKA28B,iBAAiB7mB,QAAO;IACtB,IAAI,CAAC,KAAK0lB,MAAA,EAAQ;MAChB,OAAO;IACT;IACA,OAAO,KAAKA,MAAA,CAAOmB,gBAAA,CAAiB7mB,QAAO,KAAKyjB,WAAW;EAC7D;EAAA;EAEA6B,kBAAA,EAAoB;IAElB,KAAKC,oBAAA,CAAqB;IAC1B,KAAK7F,eAAA,CAAgB9B,mBAAA,CAAoB;EAC3C;EAAA;EAEA2H,qBAAA,EAAuB;IACrB,KAAK9C,aAAA,GAAgB,KAAKrC,UAAA,CAAWoD,mBAAA,CAAoB,KAAKC,WAAW;EAC3E;EAAA;EAEA+B,2BAA2BsB,QAAA,EAAU;IACnC,IAAIA,QAAA,EAAU;MACZ,KAAK1B,wBAAA,CAAyBxkG,IAAA,CAAKkmG,QAAQ;IAC7C;IAGA,IAAI,CAAC,KAAK3B,yBAAA,EAA2B;MACnC,KAAKA,yBAAA,GAA4B;MACjC,KAAK75F,MAAA,CAAO4B,iBAAA,CAAkB,MAAMoF,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;QAC/D,KAAK+5F,kBAAA,CAAmB;MAC1B,CAAC,CAAC;IACJ;EACF;EAAA;EAEAA,mBAAA,EAAqB;IACnB,KAAKV,yBAAA,GAA4B;IAKjC,KAAKyB,eAAA,CAAgBn8C,aAAA,CAAczpC,KAAA,CAAM2rC,SAAA,GAAY,KAAKy5C,yBAAA;IAI1D,KAAK96F,MAAA,CAAOqC,GAAA,CAAI,MAAM,KAAK4gF,kBAAA,CAAmBzlD,YAAA,CAAa,CAAC;IAC5D,MAAMi+D,uBAAA,GAA0B,KAAK3B,wBAAA;IACrC,KAAKA,wBAAA,GAA2B,EAAC;IACjC,WAAWviG,EAAA,IAAMkkG,uBAAA,EAAyB;MACxClkG,EAAA,CAAG;IACL;EACF;EAAA;EAEAyhG,qBAAA,EAAuB;IACrB,KAAKQ,mBAAA,GAAsB,KAAKrB,WAAA,KAAgB,eAAe,KAAK,GAAG,KAAKmB,iBAAiB;IAC7F,KAAKC,kBAAA,GAAqB,KAAKpB,WAAA,KAAgB,eAAe,GAAG,KAAKmB,iBAAiB,OAAO;EAChG;AA6DF;AA3DIR,yBAAA,CAAKr6F,IAAA,GAAO,SAASi9F,iCAAiC5iG,CAAA,EAAG;EACvD,OAAO,KAAKA,CAAA,IAAKggG,yBAAA,EAA6B54C,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkBoxC,uBAAA,EAAyB,CAAC,GAAMpxC,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,GAAMxuB,iBAAA,CAAkB61C,gBAAgB,GAAM71C,iBAAA,CAAkB63C,aAAa,GAAM73C,iBAAA,CAAkB83C,kBAAA,EAAoB,CAAC,CAAC;AACrX;AAGAc,yBAAA,CAAKh4D,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM+8F,yBAAA;EACNl7D,SAAA,EAAW,CAAC,CAAC,6BAA6B,CAAC;EAC3CsmD,SAAA,EAAW,SAASyX,+BAA+Bt6D,EAAA,EAAIlb,GAAA,EAAK;IAC1D,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,MAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIm1E,eAAA,GAAkBp4C,EAAA,CAAGxlD,KAAA;IACxE;EACF;EACA87E,SAAA,EAAW,CAAC,GAAG,6BAA6B;EAC5Cj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASo7C,sCAAsCv6D,EAAA,EAAIlb,GAAA,EAAK;IACpE,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,6CAA6Cp6D,GAAA,CAAIgyE,WAAA,KAAgB,YAAY,EAAE,2CAA2ChyE,GAAA,CAAIgyE,WAAA,KAAgB,YAAY;IAC3K;EACF;EACAt6D,MAAA,EAAQ;IACNs6D,WAAA,EAAa;IACbiB,UAAA,EAAY,CAAIt4C,UAAA,CAAaC,0BAAA,EAA4B,cAAc,cAAcC,gBAAgB;EACvG;EACAljB,OAAA,EAAS;IACP8zD,mBAAA,EAAqB;EACvB;EACA5zD,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASmpF,aAAA;IACTzoF,UAAA,EAAYA,CAACwtF,iBAAA,EAAmB5J,QAAA,KAAa4J,iBAAA,IAAqB5J,QAAA;IAClE9xE,IAAA,EAAM,CAAC,CAAC,IAAI3I,QAAA,CAAS,GAAG,IAAI/O,MAAA,CAAOuvF,kBAAkB,CAAC,GAAGc,yBAAwB;EACnF,CAAC,CAAC,GAAM73C,wBAAA,EAA6BuoC,0BAAA,EAA+BxoD,mBAAmB;EACvFkhD,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,GAAG,oCAAoC,GAAG,CAAC,GAAG,2BAA2B,CAAC;EAC5GhhD,QAAA,EAAU,SAAS26D,kCAAkCz6D,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChBnS,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7BoS,YAAA,CAAa,CAAC;MACdlS,YAAA,CAAa;MACb9uC,SAAA,CAAU,GAAG,OAAO,CAAC;IAC1B;IACA,IAAID,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU,CAAC;MACX0rB,WAAA,CAAY,SAAS51E,GAAA,CAAIozE,kBAAkB,EAAE,UAAUpzE,GAAA,CAAIqzE,mBAAmB;IACnF;EACF;EACA/jF,MAAA,EAAQ,CAAC,srDAAsrD;EAC/rDoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA1ZL,IAAM8a,wBAAA,GAANlD,yBAAA;AAAA,CA6ZC,MAAM;EACL,CAAC,OAAOnjG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBg9F,wBAAA,EAA0B,CAAC;IACjGjgG,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,qDAAqD;QACrD,mDAAmD;MACrD;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZ9wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAASmpF,aAAA;QACTzoF,UAAA,EAAYA,CAACwtF,iBAAA,EAAmB5J,QAAA,KAAa4J,iBAAA,IAAqB5J,QAAA;QAClE9xE,IAAA,EAAM,CAAC,CAAC,IAAI3I,QAAA,CAAS,GAAG,IAAI/O,MAAA,CAAOuvF,kBAAkB,CAAC,GAAGgE,wBAAwB;MACnF,CAAC;MACD76D,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,srDAAsrD;IACjsD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4oF,uBAAuB;IAChC,CAAC;EACH,GAAG;IACDv1F,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAMg6F;EACR,GAAG;IACDh6F,IAAA,EAAMg8F;EACR,GAAG;IACDh8F,IAAA,EAAMu8F,oBAAA;IACN9vF,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACsvF,kBAAkB;IAC3B,CAAC;EACH,CAAC,GAAG;IACFG,WAAA,EAAa,CAAC;MACZp8F,IAAA,EAAMqiC;IACR,CAAC;IACDg7D,UAAA,EAAY,CAAC;MACXr9F,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD4wC,mBAAA,EAAqB,CAAC;MACpB71F,IAAA,EAAMsiC;IACR,CAAC;IACDi9D,eAAA,EAAiB,CAAC;MAChBv/F,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,kBAAkB;QACvBo8E,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAGH,SAASmX,UAAU9D,WAAA,EAAap9B,SAAA,EAAW3zD,IAAA,EAAM;EAC/C,MAAMiJ,EAAA,GAAKjJ,IAAA;EACX,IAAI,CAACiJ,EAAA,CAAG0rE,qBAAA,EAAuB;IAC7B,OAAO;EACT;EACA,MAAMmD,IAAA,GAAO7uE,EAAA,CAAG0rE,qBAAA,CAAsB;EACtC,IAAIoc,WAAA,KAAgB,cAAc;IAChC,OAAOp9B,SAAA,KAAc,UAAUmkB,IAAA,CAAK/C,IAAA,GAAO+C,IAAA,CAAKI,KAAA;EAClD;EACA,OAAOvkB,SAAA,KAAc,UAAUmkB,IAAA,CAAK9C,GAAA,GAAM8C,IAAA,CAAKM,MAAA;AACjD;AAKA,IAAM0c,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EAAA;EAEpB,IAAIC,gBAAA,EAAkB;IACpB,OAAO,KAAKC,gBAAA;EACd;EACA,IAAID,gBAAgBlnG,KAAA,EAAO;IACzB,KAAKmnG,gBAAA,GAAmBnnG,KAAA;IACxB,IAAI03F,YAAA,CAAa13F,KAAK,GAAG;MACvB,KAAKonG,kBAAA,CAAmBr7F,IAAA,CAAK/L,KAAK;IACpC,OAAO;MAEL,KAAKonG,kBAAA,CAAmBr7F,IAAA,CAAK,IAAI6rF,eAAA,CAAgB5iE,YAAA,CAAah1B,KAAK,IAAIA,KAAA,GAAQiB,KAAA,CAAMC,IAAA,CAAKlB,KAAA,IAAS,EAAE,CAAC,CAAC;IACzG;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIqnG,qBAAA,EAAuB;IACzB,OAAO,KAAKC,qBAAA;EACd;EACA,IAAID,qBAAqB/kG,EAAA,EAAI;IAC3B,KAAKilG,YAAA,GAAe;IACpB,KAAKD,qBAAA,GAAwBhlG,EAAA,GAAK,CAAC5C,KAAA,EAAO8yC,IAAA,KAASlwC,EAAA,CAAG5C,KAAA,IAAS,KAAK8kG,cAAA,GAAiB,KAAKA,cAAA,CAAexG,KAAA,GAAQ,IAAIxrD,IAAI,IAAI;EAC/H;EAAA;EAEA,IAAIg1D,sBAAsBxnG,KAAA,EAAO;IAC/B,IAAIA,KAAA,EAAO;MACT,KAAKunG,YAAA,GAAe;MACpB,KAAKE,SAAA,GAAYznG,KAAA;IACnB;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI0nG,+BAAA,EAAiC;IACnC,OAAO,KAAKC,aAAA,CAAcvO,aAAA;EAC5B;EACA,IAAIsO,+BAA+B1sD,IAAA,EAAM;IACvC,KAAK2sD,aAAA,CAAcvO,aAAA,GAAgB5+B,oBAAA,CAAqBxf,IAAI;EAC9D;EACA/7C,YACA2oG,iBAAA,EACAH,SAAA,EACAI,QAAA,EACAF,aAAA,EACA/K,SAAA,EAAW7xF,MAAA,EAAQ;IACjB,KAAK68F,iBAAA,GAAoBA,iBAAA;IACzB,KAAKH,SAAA,GAAYA,SAAA;IACjB,KAAKI,QAAA,GAAWA,QAAA;IAChB,KAAKF,aAAA,GAAgBA,aAAA;IACrB,KAAK/K,SAAA,GAAYA,SAAA;IAEjB,KAAKkL,UAAA,GAAa,IAAI3qD,OAAA,CAAQ;IAE9B,KAAKiqD,kBAAA,GAAqB,IAAIjqD,OAAA,CAAQ;IAEtC,KAAKioD,UAAA,GAAa,KAAKgC,kBAAA,CAAmBv+F,IAAA;IAAA;IAE1CypC,SAAA,CAAU,IAAI;IAAA;IAEdy1D,QAAA,CAAS;IAAA;IAAA;IAAA;IAITrzF,SAAA,CAAU,CAAC,CAACszF,IAAA,EAAMC,GAAG,MAAM,KAAKC,iBAAA,CAAkBF,IAAA,EAAMC,GAAG,CAAC;IAAA;IAE5DE,WAAA,CAAY,CAAC,CAAC;IAEd,KAAKC,OAAA,GAAU;IAEf,KAAKb,YAAA,GAAe;IACpB,KAAKtG,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAC9B,KAAKioD,UAAA,CAAWr7D,SAAA,CAAUx3B,IAAA,IAAQ;MAChC,KAAKslF,KAAA,GAAQtlF,IAAA;MACb,KAAK81F,qBAAA,CAAsB;IAC7B,CAAC;IACD,KAAKzL,SAAA,CAAUwH,mBAAA,CAAoBv7F,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU01C,UAAS;MACrF,KAAK+kB,cAAA,GAAiB/kB;MACtB,IAAI,KAAKqoB,UAAA,CAAWtxB,SAAA,CAAUz1E,MAAA,EAAQ;QACpCgK,MAAA,CAAOqC,GAAA,CAAI,MAAM,KAAK06F,UAAA,CAAW/7F,IAAA,CAAK,KAAKy4F,cAAc,CAAC;MAC5D;MACA,KAAK6D,qBAAA,CAAsB;IAC7B,CAAC;IACD,KAAKzL,SAAA,CAAUr1D,MAAA,CAAO,IAAI;EAC5B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA++D,iBAAiB7mB,QAAOyjB,WAAA,EAAa;IACnC,IAAIzjB,OAAMue,KAAA,IAASve,OAAMwe,GAAA,EAAK;MAC5B,OAAO;IACT;IACA,KAAKxe,OAAMue,KAAA,GAAQ,KAAKwG,cAAA,CAAexG,KAAA,IAASve,OAAMwe,GAAA,GAAM,KAAKuG,cAAA,CAAevG,GAAA,MAAS,OAAOv9F,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvI,MAAM6B,KAAA,CAAM,0DAA0D;IACxE;IAEA,MAAM+lG,kBAAA,GAAqB7oB,OAAMue,KAAA,GAAQ,KAAKwG,cAAA,CAAexG,KAAA;IAE7D,MAAMuK,QAAA,GAAW9oB,OAAMwe,GAAA,GAAMxe,OAAMue,KAAA;IAGnC,IAAIwK,SAAA;IACJ,IAAIC,QAAA;IAEJ,SAASt0E,CAAA,GAAI,GAAGA,CAAA,GAAIo0E,QAAA,EAAUp0E,CAAA,IAAK;MACjC,MAAMskE,IAAA,GAAO,KAAKmP,iBAAA,CAAkBxnG,GAAA,CAAI+zB,CAAA,GAAIm0E,kBAAkB;MAC9D,IAAI7P,IAAA,IAAQA,IAAA,CAAKiQ,SAAA,CAAU3nG,MAAA,EAAQ;QACjCynG,SAAA,GAAYC,QAAA,GAAWhQ,IAAA,CAAKiQ,SAAA,CAAU,CAAC;QACvC;MACF;IACF;IAEA,SAASv0E,CAAA,GAAIo0E,QAAA,GAAW,GAAGp0E,CAAA,GAAI,IAAIA,CAAA,IAAK;MACtC,MAAMskE,IAAA,GAAO,KAAKmP,iBAAA,CAAkBxnG,GAAA,CAAI+zB,CAAA,GAAIm0E,kBAAkB;MAC9D,IAAI7P,IAAA,IAAQA,IAAA,CAAKiQ,SAAA,CAAU3nG,MAAA,EAAQ;QACjC0nG,QAAA,GAAWhQ,IAAA,CAAKiQ,SAAA,CAAUjQ,IAAA,CAAKiQ,SAAA,CAAU3nG,MAAA,GAAS,CAAC;QACnD;MACF;IACF;IACA,OAAOynG,SAAA,IAAaC,QAAA,GAAWzB,SAAA,CAAU9D,WAAA,EAAa,OAAOuF,QAAQ,IAAIzB,SAAA,CAAU9D,WAAA,EAAa,SAASsF,SAAS,IAAI;EACxH;EACAp7B,UAAA,EAAY;IACV,IAAI,KAAKg7B,OAAA,IAAW,KAAKb,YAAA,EAAc;MAIrC,MAAMxgE,OAAA,GAAU,KAAKqhE,OAAA,CAAQO,IAAA,CAAK,KAAKC,cAAc;MACrD,IAAI,CAAC7hE,OAAA,EAAS;QACZ,KAAK8hE,cAAA,CAAe;MACtB,OAAO;QACL,KAAKC,aAAA,CAAc/hE,OAAO;MAC5B;MACA,KAAKwgE,YAAA,GAAe;IACtB;EACF;EACAxmF,YAAA,EAAc;IACZ,KAAK67E,SAAA,CAAU/0D,MAAA,CAAO;IACtB,KAAKu/D,kBAAA,CAAmBr7F,IAAA,CAAK,MAAS;IACtC,KAAKq7F,kBAAA,CAAmB35F,QAAA,CAAS;IACjC,KAAKq6F,UAAA,CAAWr6F,QAAA,CAAS;IACzB,KAAKwzF,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;IACzB,KAAKk6F,aAAA,CAAc9/D,MAAA,CAAO;EAC5B;EAAA;EAEAwgE,sBAAA,EAAwB;IACtB,IAAI,CAAC,KAAK7D,cAAA,EAAgB;MACxB;IACF;IACA,KAAKoE,cAAA,GAAiB,KAAK/Q,KAAA,CAAMh4F,KAAA,CAAM,KAAK2kG,cAAA,CAAexG,KAAA,EAAO,KAAKwG,cAAA,CAAevG,GAAG;IACzF,IAAI,CAAC,KAAKmK,OAAA,EAAS;MAGjB,KAAKA,OAAA,GAAU,KAAKP,QAAA,CAASvoF,IAAA,CAAK,KAAKspF,cAAc,EAAEjkF,MAAA,CAAO,CAACjlB,KAAA,EAAO8yC,IAAA,KAAS;QAC7E,OAAO,KAAK60D,oBAAA,GAAuB,KAAKA,oBAAA,CAAqB3nG,KAAA,EAAO8yC,IAAI,IAAIA,IAAA;MAC9E,CAAC;IACH;IACA,KAAK+0D,YAAA,GAAe;EACtB;EAAA;EAEAW,kBAAkBa,KAAA,EAAOC,KAAA,EAAO;IAC9B,IAAID,KAAA,EAAO;MACTA,KAAA,CAAMzsC,UAAA,CAAW,IAAI;IACvB;IACA,KAAKirC,YAAA,GAAe;IACpB,OAAOyB,KAAA,GAAQA,KAAA,CAAMrR,OAAA,CAAQ,IAAI,IAAI/uF,EAAA,CAAG;EAC1C;EAAA;EAEAigG,eAAA,EAAiB;IACf,MAAM/qF,KAAA,GAAQ,KAAK+5E,KAAA,CAAM92F,MAAA;IACzB,IAAIozB,CAAA,GAAI,KAAKyzE,iBAAA,CAAkB7mG,MAAA;IAC/B,OAAOozB,CAAA,IAAK;MACV,MAAMskE,IAAA,GAAO,KAAKmP,iBAAA,CAAkBxnG,GAAA,CAAI+zB,CAAC;MACzCskE,IAAA,CAAKpyF,OAAA,CAAQ3G,KAAA,GAAQ,KAAK8kG,cAAA,CAAexG,KAAA,GAAQ7pE,CAAA;MACjDskE,IAAA,CAAKpyF,OAAA,CAAQyX,KAAA,GAAQA,KAAA;MACrB,KAAKmrF,gCAAA,CAAiCxQ,IAAA,CAAKpyF,OAAO;MAClDoyF,IAAA,CAAKyQ,aAAA,CAAc;IACrB;EACF;EAAA;EAEAJ,cAAc/hE,OAAA,EAAS;IACrB,KAAK4gE,aAAA,CAAc1P,YAAA,CAAalxD,OAAA,EAAS,KAAK6gE,iBAAA,EAAmB,CAACzsC,MAAA,EAAQguC,sBAAA,EAAwB3Q,YAAA,KAAiB,KAAK4Q,oBAAA,CAAqBjuC,MAAA,EAAQq9B,YAAY,GAAGr9B,MAAA,IAAUA,MAAA,CAAO3oB,IAAI;IAEzLzL,OAAA,CAAQsiE,qBAAA,CAAsBluC,MAAA,IAAU;MACtC,MAAMs9B,IAAA,GAAO,KAAKmP,iBAAA,CAAkBxnG,GAAA,CAAI+6D,MAAA,CAAOq9B,YAAY;MAC3DC,IAAA,CAAKpyF,OAAA,CAAQwzF,SAAA,GAAY1+B,MAAA,CAAO3oB,IAAA;IAClC,CAAC;IAED,MAAM10B,KAAA,GAAQ,KAAK+5E,KAAA,CAAM92F,MAAA;IACzB,IAAIozB,CAAA,GAAI,KAAKyzE,iBAAA,CAAkB7mG,MAAA;IAC/B,OAAOozB,CAAA,IAAK;MACV,MAAMskE,IAAA,GAAO,KAAKmP,iBAAA,CAAkBxnG,GAAA,CAAI+zB,CAAC;MACzCskE,IAAA,CAAKpyF,OAAA,CAAQ3G,KAAA,GAAQ,KAAK8kG,cAAA,CAAexG,KAAA,GAAQ7pE,CAAA;MACjDskE,IAAA,CAAKpyF,OAAA,CAAQyX,KAAA,GAAQA,KAAA;MACrB,KAAKmrF,gCAAA,CAAiCxQ,IAAA,CAAKpyF,OAAO;IACpD;EACF;EAAA;EAEA4iG,iCAAiC5iG,OAAA,EAAS;IACxCA,OAAA,CAAQoC,KAAA,GAAQpC,OAAA,CAAQ3G,KAAA,KAAU;IAClC2G,OAAA,CAAQyuB,IAAA,GAAOzuB,OAAA,CAAQ3G,KAAA,KAAU2G,OAAA,CAAQyX,KAAA,GAAQ;IACjDzX,OAAA,CAAQijG,IAAA,GAAOjjG,OAAA,CAAQ3G,KAAA,GAAQ,MAAM;IACrC2G,OAAA,CAAQkjG,GAAA,GAAM,CAACljG,OAAA,CAAQijG,IAAA;EACzB;EACAF,qBAAqBjuC,MAAA,EAAQz7D,KAAA,EAAO;IAKlC,OAAO;MACLo5F,WAAA,EAAa,KAAK2O,SAAA;MAClBphG,OAAA,EAAS;QACPwzF,SAAA,EAAW1+B,MAAA,CAAO3oB,IAAA;QAAA;QAAA;QAGlB00D,eAAA,EAAiB,KAAKC,gBAAA;QACtBznG,KAAA,EAAO;QACPoe,KAAA,EAAO;QACPrV,KAAA,EAAO;QACPqsB,IAAA,EAAM;QACNy0E,GAAA,EAAK;QACLD,IAAA,EAAM;MACR;MACA5pG;IACF;EACF;AAuBF;AArBIunG,gBAAA,CAAKz9F,IAAA,GAAO,SAASggG,wBAAwB3lG,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKojG,gBAAA,EAAoBh8C,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqBy+C,eAAe,GAAMz+C,iBAAA,CAAkB8sC,uBAAuB,GAAM9sC,iBAAA,CAAkB87C,wBAAA,EAA0B,CAAC,GAAM97C,iBAAA,CAAqBjgD,MAAM,CAAC;AAChS;AAGAi8F,gBAAA,CAAKx+D,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmgG,gBAAA;EACNt+D,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,IAAI,mBAAmB,EAAE,CAAC;EAC5DC,MAAA,EAAQ;IACNs+D,eAAA,EAAiB;IACjBG,oBAAA,EAAsB;IACtBG,qBAAA,EAAuB;IACvBE,8BAAA,EAAgC;EAClC;EACA3+D,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq/E,uBAAA;IACTj/E,QAAA,EAAUqgF;EACZ,CAAC,CAAC,CAAC;AACL,CAAC;AA1PL,IAAMwQ,eAAA,GAAN1C,gBAAA;AAAA,CA6PC,MAAM;EACL,CAAC,OAAOvmG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4/F,eAAA,EAAiB,CAAC;IACxF7iG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq/E,uBAAA;QACTj/E,QAAA,EAAUqgF;MACZ,CAAC;MACDpwD,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAAS4iG;EACX,GAAG;IACD5iG,IAAA,EAAWqyF,4BAAA;IACX5lF,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACskF,uBAAuB;IAChC,CAAC;EACH,GAAG;IACDjxF,IAAA,EAAMigG,wBAAA;IACNxzF,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAASkE;EACX,CAAC,GAAG;IACFk8F,eAAA,EAAiB,CAAC;MAChBpgG,IAAA,EAAMqiC;IACR,CAAC;IACDk+D,oBAAA,EAAsB,CAAC;MACrBvgG,IAAA,EAAMqiC;IACR,CAAC;IACDq+D,qBAAA,EAAuB,CAAC;MACtB1gG,IAAA,EAAMqiC;IACR,CAAC;IACDu+D,8BAAA,EAAgC,CAAC;MAC/B5gG,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMygE,4BAAA,GAAN,MAAMA,4BAAA,SAAoCvG,oBAAA,CAAqB;EAC7DpkG,YAAYg1F,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAA,EAAK;IACrD,MAAM28B,UAAA,EAAY+M,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAG;EACjD;EACAiuC,0CAA0CrkG,OAAM;IAC9C,OAAO,KAAKy/F,aAAA,CAAc,EAAEz2C,aAAA,CAAc48B,qBAAA,CAAsB,EAAE5lF,KAAI,IAAI,KAAKm9F,mBAAA,CAAoBn9F,KAAI;EACzG;AAkBF;AAhBI0oG,4BAAA,CAAKpgG,IAAA,GAAO,SAASqgG,oCAAoChmG,CAAA,EAAG;EAC1D,OAAO,KAAKA,CAAA,IAAK+lG,4BAAA,EAAgC3+C,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB61C,gBAAgB,GAAM71C,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,CAAC;AACxM;AAGAmwB,4BAAA,CAAKnhE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM8iG,4BAAA;EACNjhE,SAAA,EAAW,CAAC,CAAC,IAAI,8BAA8B,EAAE,CAAC;EAClD47C,SAAA,EAAW,CAAC,GAAG,wBAAwB;EACvCx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASqqF,kBAAA;IACTpqF,WAAA,EAAaixF;EACf,CAAC,CAAC,GAAMrV,0BAA0B;AACpC,CAAC;AAtBL,IAAMuV,2BAAA,GAANF,4BAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOlpG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+/F,2BAAA,EAA6B,CAAC;IACpGhjG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASqqF,kBAAA;QACTpqF,WAAA,EAAamxF;MACf,CAAC;MACD/gE,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;MACX;IACF,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTrX,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMg6F;EACR,GAAG;IACDh6F,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMwnF,2BAAA,GAAN,MAAMA,2BAAA,SAAmC1G,oBAAA,CAAqB;EAC5DpkG,YAAY+hG,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAA,EAAK;IACzC,MAAM,IAAIlM,UAAA,CAAWv5C,QAAA,CAASklD,eAAe,GAAGiqC,gBAAA,EAAkBj2F,MAAA,EAAQusD,GAAG;IAC7E,KAAK4pC,gBAAA,GAAmB,IAAIj2F,UAAA,CAAWC,QAAA,IAAY,KAAKH,MAAA,CAAO4B,iBAAA,CAAkB,MAAMi0F,SAAA,CAAU/uF,QAAA,EAAU,QAAQ,EAAEhJ,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU7+B,QAAQ,CAAC,CAAC;EAC5K;EACAq6F,0CAA0CrkG,OAAM;IAC9C,OAAO,KAAKy/F,aAAA,CAAc,EAAEz2C,aAAA,CAAc48B,qBAAA,CAAsB,EAAE5lF,KAAI;EACxE;AAiBF;AAfI6oG,2BAAA,CAAKvgG,IAAA,GAAO,SAASwgG,mCAAmCnmG,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAKkmG,2BAAA,EAA+B9+C,iBAAA,CAAkB61C,gBAAgB,GAAM71C,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,CAAC;AAClK;AAGAswB,2BAAA,CAAKthE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMijG,2BAAA;EACNphE,SAAA,EAAW,CAAC,CAAC,+BAA+B,gBAAgB,EAAE,CAAC;EAC/DI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASqqF,kBAAA;IACTpqF,WAAA,EAAaoxF;EACf,CAAC,CAAC,GAAMxV,0BAA0B;AACpC,CAAC;AAtBL,IAAM0V,0BAAA,GAANF,2BAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOrpG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkgG,0BAAA,EAA4B,CAAC;IACnGnjG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASqqF,kBAAA;QACTpqF,WAAA,EAAasxF;MACf,CAAC;MACDlhE,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAMg6F;EACR,GAAG;IACDh6F,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM2nF,oBAAA,GAAN,MAAMA,oBAAA,CAAoB,EAc1B;AAZIA,oBAAA,CAAK1gG,IAAA,GAAO,SAAS2gG,4BAA4BtmG,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKqmG,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKpwF,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMojG;AACR,CAAC;AAGDA,oBAAA,CAAKlwF,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAMmwF,mBAAA,GAANF,oBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOxpG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqgG,mBAAA,EAAqB,CAAC;IAC5FtjG,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACL6Y,OAAA,EAAS,CAACu1E,aAAa;MACvB31E,OAAA,EAAS,CAAC21E,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAIH,IAAMwI,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAgBtB;AAdIA,gBAAA,CAAK7gG,IAAA,GAAO,SAAS8gG,wBAAwBzmG,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKwmG,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAKvwF,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMujG;AACR,CAAC;AAGDA,gBAAA,CAAKrwF,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACkuD,UAAA,EAAYgwB,mBAAA,EAAqBhwB,UAAA,EAAYgwB,mBAAmB;AAC5E,CAAC;AAdL,IAAMG,eAAA,GAANF,gBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO3pG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwgG,eAAA,EAAiB,CAAC;IACxFzjG,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACkuD,UAAA,EAAYgwB,mBAAA,EAAqBrD,wBAAA,EAA0BzH,yBAAA,EAA2BqK,eAAA,EAAiBM,0BAAA,EAA4BH,2BAA2B;MACxKx9E,OAAA,EAAS,CAAC8tD,UAAA,EAAYgwB,mBAAA,EAAqB9K,yBAAA,EAA2BqK,eAAA,EAAiB5C,wBAAA,EAA0BkD,0BAAA,EAA4BH,2BAA2B;IAC1K,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACntDH,SAASU,qBAAA,EAAuB;EAC9B,MAAMjoG,KAAA,CAAM,iCAAiC;AAC/C;AAKA,SAASkoG,gCAAA,EAAkC;EACzC,MAAMloG,KAAA,CAAM,oCAAoC;AAClD;AAKA,SAASmoG,sCAAA,EAAwC;EAC/C,MAAMnoG,KAAA,CAAM,6CAA6C;AAC3D;AAKA,SAASooG,4BAAA,EAA8B;EACrC,MAAMpoG,KAAA,CAAM,qHAA0H;AACxI;AAKA,SAASqoG,2BAAA,EAA6B;EACpC,MAAMroG,KAAA,CAAM,sDAAsD;AACpE;AAKA,SAASsoG,2BAAA,EAA6B;EACpC,MAAMtoG,KAAA,CAAM,8DAA8D;AAC5E;AAMA,IAAMuoG,MAAA,GAAN,MAAa;EAAA;EAEXvjE,OAAOppB,IAAA,EAAM;IACX,IAAI,OAAOzd,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAIyd,IAAA,IAAQ,MAAM;QAChBysF,0BAAA,CAA2B;MAC7B;MACA,IAAIzsF,IAAA,CAAKiuD,WAAA,CAAY,GAAG;QACtBq+B,+BAAA,CAAgC;MAClC;IACF;IACA,KAAKM,aAAA,GAAgB5sF,IAAA;IACrB,OAAOA,IAAA,CAAKopB,MAAA,CAAO,IAAI;EACzB;EAAA;EAEAM,OAAA,EAAS;IACP,IAAI1pB,IAAA,GAAO,KAAK4sF,aAAA;IAChB,IAAI5sF,IAAA,IAAQ,MAAM;MAChB,KAAK4sF,aAAA,GAAgB;MACrB5sF,IAAA,CAAK0pB,MAAA,CAAO;IACd,WAAW,OAAOnnC,SAAA,KAAc,eAAeA,SAAA,EAAW;MACxDmqG,0BAAA,CAA2B;IAC7B;EACF;EAAA;EAEA,IAAIG,WAAA,EAAa;IACf,OAAO,KAAKD,aAAA,IAAiB;EAC/B;EAAA;AAAA;AAAA;AAAA;EAKAE,gBAAgB9sF,IAAA,EAAM;IACpB,KAAK4sF,aAAA,GAAgB5sF,IAAA;EACvB;AACF;AAIA,IAAM+sF,eAAA,GAAN,cAA8BJ,MAAA,CAAO;EACnC7rG,YAAY0oB,SAAA,EAAWuwE,gBAAA,EAAkBjpF,QAAA,EAAUk8F,wBAAA,EAA0BC,gBAAA,EAAkB;IAC7F,MAAM;IACN,KAAKzjF,SAAA,GAAYA,SAAA;IACjB,KAAKuwE,gBAAA,GAAmBA,gBAAA;IACxB,KAAKjpF,QAAA,GAAWA,QAAA;IAChB,KAAKk8F,wBAAA,GAA2BA,wBAAA;IAChC,KAAKC,gBAAA,GAAmBA,gBAAA;EAC1B;AACF;AAIA,IAAMC,cAAA,GAAN,cAA6BP,MAAA,CAAO;EAClC7rG,YACA65F,WAAA,EACAZ,gBAAA,EACA7xF,OAAA,EACA4I,QAAA,EAAU;IACR,MAAM;IACN,KAAK6pF,WAAA,GAAcA,WAAA;IACnB,KAAKZ,gBAAA,GAAmBA,gBAAA;IACxB,KAAK7xF,OAAA,GAAUA,OAAA;IACf,KAAK4I,QAAA,GAAWA,QAAA;EAClB;EACA,IAAImmE,OAAA,EAAS;IACX,OAAO,KAAK0jB,WAAA,CAAY7E,UAAA;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA1sD,OAAOppB,IAAA,EAAM9X,OAAA,GAAU,KAAKA,OAAA,EAAS;IACnC,KAAKA,OAAA,GAAUA,OAAA;IACf,OAAO,MAAMkhC,MAAA,CAAOppB,IAAI;EAC1B;EACA0pB,OAAA,EAAS;IACP,KAAKxhC,OAAA,GAAU;IACf,OAAO,MAAMwhC,MAAA,CAAO;EACtB;AACF;AAMA,IAAMyjE,SAAA,GAAN,cAAwBR,MAAA,CAAO;EAC7B7rG,YAAYigB,OAAA,EAAS;IACnB,MAAM;IACN,KAAKA,OAAA,GAAUA,OAAA,YAAmBksC,UAAA,GAAalsC,OAAA,CAAQgrC,aAAA,GAAgBhrC,OAAA;EACzE;AACF;AAKA,IAAMqsF,gBAAA,GAAN,MAAuB;EACrBtsG,YAAA,EAAc;IAEZ,KAAKusG,WAAA,GAAc;IAEnB,KAAKC,eAAA,GAAkB;EACzB;EAAA;EAEAr/B,YAAA,EAAc;IACZ,OAAO,CAAC,CAAC,KAAKs/B,eAAA;EAChB;EAAA;EAEAnkE,OAAOokE,MAAA,EAAQ;IACb,IAAI,OAAOjrG,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,CAACirG,MAAA,EAAQ;QACXnB,oBAAA,CAAqB;MACvB;MACA,IAAI,KAAKp+B,WAAA,CAAY,GAAG;QACtBq+B,+BAAA,CAAgC;MAClC;MACA,IAAI,KAAKe,WAAA,EAAa;QACpBd,qCAAA,CAAsC;MACxC;IACF;IACA,IAAIiB,MAAA,YAAkBT,eAAA,EAAiB;MACrC,KAAKQ,eAAA,GAAkBC,MAAA;MACvB,OAAO,KAAKC,qBAAA,CAAsBD,MAAM;IAC1C,WAAWA,MAAA,YAAkBN,cAAA,EAAgB;MAC3C,KAAKK,eAAA,GAAkBC,MAAA;MACvB,OAAO,KAAKE,oBAAA,CAAqBF,MAAM;IAEzC,WAAW,KAAKF,eAAA,IAAmBE,MAAA,YAAkBL,SAAA,EAAW;MAC9D,KAAKI,eAAA,GAAkBC,MAAA;MACvB,OAAO,KAAKF,eAAA,CAAgBE,MAAM;IACpC;IACA,IAAI,OAAOjrG,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjDiqG,2BAAA,CAA4B;IAC9B;EACF;EAAA;EAEA9iE,OAAA,EAAS;IACP,IAAI,KAAK6jE,eAAA,EAAiB;MACxB,KAAKA,eAAA,CAAgBT,eAAA,CAAgB,IAAI;MACzC,KAAKS,eAAA,GAAkB;IACzB;IACA,KAAKI,gBAAA,CAAiB;EACxB;EAAA;EAEAljD,QAAA,EAAU;IACR,IAAI,KAAKwjB,WAAA,CAAY,GAAG;MACtB,KAAKvkC,MAAA,CAAO;IACd;IACA,KAAKikE,gBAAA,CAAiB;IACtB,KAAKN,WAAA,GAAc;EACrB;EAAA;EAEAO,aAAazpG,EAAA,EAAI;IACf,KAAK0pG,UAAA,GAAa1pG,EAAA;EACpB;EACAwpG,iBAAA,EAAmB;IACjB,IAAI,KAAKE,UAAA,EAAY;MACnB,KAAKA,UAAA,CAAW;MAChB,KAAKA,UAAA,GAAa;IACpB;EACF;AACF;AAWA,IAAMC,eAAA,GAAN,cAA8BV,gBAAA,CAAiB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAY7CtsG,YACAitG,aAAA,EAAeC,yBAAA,EAA2BC,OAAA,EAASC,gBAAA,EAKnDvhF,YAAW;IACT,MAAM;IACN,KAAKohF,aAAA,GAAgBA,aAAA;IACrB,KAAKC,yBAAA,GAA4BA,yBAAA;IACjC,KAAKC,OAAA,GAAUA,OAAA;IACf,KAAKC,gBAAA,GAAmBA,gBAAA;IAOxB,KAAKZ,eAAA,GAAkBE,MAAA,IAAU;MAG/B,IAAI,CAAC,KAAK7gF,SAAA,KAAc,OAAOpqB,SAAA,KAAc,eAAeA,SAAA,GAAY;QACtE,MAAM6B,KAAA,CAAM,kEAAkE;MAChF;MACA,MAAM2c,OAAA,GAAUysF,MAAA,CAAOzsF,OAAA;MACvB,IAAI,CAACA,OAAA,CAAQzM,UAAA,KAAe,OAAO/R,SAAA,KAAc,eAAeA,SAAA,GAAY;QAC1E,MAAM6B,KAAA,CAAM,uDAAuD;MACrE;MAGA,MAAM+pG,UAAA,GAAa,KAAKxhF,SAAA,CAAU7F,aAAA,CAAc,YAAY;MAC5D/F,OAAA,CAAQzM,UAAA,CAAWgT,YAAA,CAAa6mF,UAAA,EAAYptF,OAAO;MACnD,KAAKgtF,aAAA,CAAcp5F,WAAA,CAAYoM,OAAO;MACtC,KAAKwsF,eAAA,GAAkBC,MAAA;MACvB,MAAMI,YAAA,CAAa,MAAM;QAEvB,IAAIO,UAAA,CAAW75F,UAAA,EAAY;UACzB65F,UAAA,CAAW75F,UAAA,CAAW85F,YAAA,CAAartF,OAAA,EAASotF,UAAU;QACxD;MACF,CAAC;IACH;IACA,KAAKxhF,SAAA,GAAYA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA8gF,sBAAsBD,MAAA,EAAQ;IAC5B,MAAMnwD,QAAA,GAAWmwD,MAAA,CAAOR,wBAAA,IAA4B,KAAKgB,yBAAA;IACzD,KAAK,OAAOzrG,SAAA,KAAc,eAAeA,SAAA,KAAc,CAAC86C,QAAA,EAAU;MAChE,MAAMj5C,KAAA,CAAM,8EAA8E;IAC5F;IACA,MAAMiqG,gBAAA,GAAmBhxD,QAAA,CAASixD,uBAAA,CAAwBd,MAAA,CAAOhkF,SAAS;IAC1E,IAAIkoB,YAAA;IAKJ,IAAI87D,MAAA,CAAOzT,gBAAA,EAAkB;MAC3BroD,YAAA,GAAe87D,MAAA,CAAOzT,gBAAA,CAAiB5vD,eAAA,CAAgBkkE,gBAAA,EAAkBb,MAAA,CAAOzT,gBAAA,CAAiBn3F,MAAA,EAAQ4qG,MAAA,CAAO18F,QAAA,IAAY08F,MAAA,CAAOzT,gBAAA,CAAiBjpF,QAAA,EAAU08F,MAAA,CAAOP,gBAAA,IAAoB,MAAS;MAClM,KAAKW,YAAA,CAAa,MAAMl8D,YAAA,CAAa/qB,OAAA,CAAQ,CAAC;IAChD,OAAO;MACL,KAAK,OAAOpkB,SAAA,KAAc,eAAeA,SAAA,KAAc,CAAC,KAAK0rG,OAAA,EAAS;QACpE,MAAM7pG,KAAA,CAAM,qEAAqE;MACnF;MACAstC,YAAA,GAAe28D,gBAAA,CAAiB7nF,MAAA,CAAOgnF,MAAA,CAAO18F,QAAA,IAAY,KAAKo9F,gBAAA,IAAoBj7C,QAAA,CAASs7C,IAAI;MAChG,KAAKN,OAAA,CAAQO,UAAA,CAAW98D,YAAA,CAAa3H,QAAQ;MAC7C,KAAK6jE,YAAA,CAAa,MAAM;QAGtB,IAAI,KAAKK,OAAA,CAAQQ,SAAA,GAAY,GAAG;UAC9B,KAAKR,OAAA,CAAQS,UAAA,CAAWh9D,YAAA,CAAa3H,QAAQ;QAC/C;QACA2H,YAAA,CAAa/qB,OAAA,CAAQ;MACvB,CAAC;IACH;IAGA,KAAKonF,aAAA,CAAcp5F,WAAA,CAAY,KAAKg6F,qBAAA,CAAsBj9D,YAAY,CAAC;IACvE,KAAK67D,eAAA,GAAkBC,MAAA;IACvB,OAAO97D,YAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAg8D,qBAAqBF,MAAA,EAAQ;IAC3B,IAAIoB,aAAA,GAAgBpB,MAAA,CAAOzT,gBAAA;IAC3B,IAAI8U,OAAA,GAAUD,aAAA,CAAclU,kBAAA,CAAmB8S,MAAA,CAAO7S,WAAA,EAAa6S,MAAA,CAAOtlG,OAAA,EAAS;MACjF4I,QAAA,EAAU08F,MAAA,CAAO18F;IACnB,CAAC;IAKD+9F,OAAA,CAAQtE,SAAA,CAAUlpG,OAAA,CAAQs4C,QAAA,IAAY,KAAKo0D,aAAA,CAAcp5F,WAAA,CAAYglC,QAAQ,CAAC;IAI9Ek1D,OAAA,CAAQ9D,aAAA,CAAc;IACtB,KAAK6C,YAAA,CAAa,MAAM;MACtB,IAAIrsG,KAAA,GAAQqtG,aAAA,CAAcptG,OAAA,CAAQqtG,OAAO;MACzC,IAAIttG,KAAA,KAAU,IAAI;QAChBqtG,aAAA,CAAc98F,MAAA,CAAOvQ,KAAK;MAC5B;IACF,CAAC;IACD,KAAKgsG,eAAA,GAAkBC,MAAA;IAEvB,OAAOqB,OAAA;EACT;EAAA;AAAA;AAAA;EAIApkD,QAAA,EAAU;IACR,MAAMA,OAAA,CAAQ;IACd,KAAKsjD,aAAA,CAAcj8F,MAAA,CAAO;EAC5B;EAAA;EAEA68F,sBAAsBj9D,YAAA,EAAc;IAClC,OAAOA,YAAA,CAAa3H,QAAA,CAASwgE,SAAA,CAAU,CAAC;EAC1C;AACF;AAWA,IAAMuE,UAAA,GAAN,MAAMA,UAAA,SAAkB5B,cAAA,CAAe;EACrCpsG,YAAY65F,WAAA,EAAaZ,gBAAA,EAAkB;IACzC,MAAMY,WAAA,EAAaZ,gBAAgB;EACrC;AAeF;AAbI+U,UAAA,CAAKzjG,IAAA,GAAO,SAAS0jG,kBAAkBrpG,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAKopG,UAAA,EAAchiD,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqB3kB,gBAAgB,CAAC;AAC7G;AAGA2mE,UAAA,CAAKxkE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmmG,UAAA;EACNtkE,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;EACjCG,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAhBL,IAAM4Y,SAAA,GAANF,UAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOvsG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBojG,SAAA,EAAW,CAAC;IAClFrmG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAASw/B;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM8mE,wBAAA,GAAN,MAAMA,wBAAA,SAAgCD,SAAA,CAAU,EAqBhD;AAnBIC,wBAAA,CAAK5jG,IAAA,GAAuB,sBAAM;EAChC,IAAI6jG,oCAAA;EACJ,OAAO,SAASC,gCAAgCzpG,CAAA,EAAG;IACjD,QAAQwpG,oCAAA,KAAyCA,oCAAA,GAA0CnpD,qBAAA,CAAsBkpD,wBAAuB,IAAIvpG,CAAA,IAAKupG,wBAAuB;EAC1K;AACF,GAAG;AAGHA,wBAAA,CAAK3kE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMsmG,wBAAA;EACNzkE,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;EACtDG,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASy0F,SAAA;IACTx0F,WAAA,EAAay0F;EACf,CAAC,CAAC,GAAM7Y,0BAA0B;AACpC,CAAC;AAnBL,IAAMgZ,uBAAA,GAANH,wBAAA;AAAA,CAsBC,MAAM;EACL,CAAC,OAAO1sG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwjG,uBAAA,EAAyB,CAAC;IAChGzmG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV7wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAASy0F,SAAA;QACTx0F,WAAA,EAAa40F;MACf,CAAC;MACDxkE,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAQH,IAAMykE,gBAAA,GAAN,MAAMA,gBAAA,SAAwBjC,gBAAA,CAAiB;EAC7CtsG,YAAYktG,yBAAA,EAA2BvE,iBAAA,EAKvC98E,YAAW;IACT,MAAM;IACN,KAAKqhF,yBAAA,GAA4BA,yBAAA;IACjC,KAAKvE,iBAAA,GAAoBA,iBAAA;IAEzB,KAAKhuB,cAAA,GAAiB;IAEtB,KAAK6zB,QAAA,GAAW,IAAIznE,YAAA,CAAa;IAOjC,KAAKylE,eAAA,GAAkBE,MAAA,IAAU;MAG/B,IAAI,CAAC,KAAK7gF,SAAA,KAAc,OAAOpqB,SAAA,KAAc,eAAeA,SAAA,GAAY;QACtE,MAAM6B,KAAA,CAAM,kEAAkE;MAChF;MACA,MAAM2c,OAAA,GAAUysF,MAAA,CAAOzsF,OAAA;MACvB,IAAI,CAACA,OAAA,CAAQzM,UAAA,KAAe,OAAO/R,SAAA,KAAc,eAAeA,SAAA,GAAY;QAC1E,MAAM6B,KAAA,CAAM,uDAAuD;MACrE;MAGA,MAAM+pG,UAAA,GAAa,KAAKxhF,SAAA,CAAU7F,aAAA,CAAc,YAAY;MAC5D0mF,MAAA,CAAOV,eAAA,CAAgB,IAAI;MAC3B/rF,OAAA,CAAQzM,UAAA,CAAWgT,YAAA,CAAa6mF,UAAA,EAAYptF,OAAO;MACnD,KAAKwuF,YAAA,CAAa,EAAE56F,WAAA,CAAYoM,OAAO;MACvC,KAAKwsF,eAAA,GAAkBC,MAAA;MACvB,MAAMI,YAAA,CAAa,MAAM;QACvB,IAAIO,UAAA,CAAW75F,UAAA,EAAY;UACzB65F,UAAA,CAAW75F,UAAA,CAAW85F,YAAA,CAAartF,OAAA,EAASotF,UAAU;QACxD;MACF,CAAC;IACH;IACA,KAAKxhF,SAAA,GAAYA;EACnB;EAAA;EAEA,IAAI6gF,OAAA,EAAS;IACX,OAAO,KAAKD,eAAA;EACd;EACA,IAAIC,OAAOA,MAAA,EAAQ;IAKjB,IAAI,KAAKv/B,WAAA,CAAY,KAAK,CAACu/B,MAAA,IAAU,CAAC,KAAK/xB,cAAA,EAAgB;MACzD;IACF;IACA,IAAI,KAAKxN,WAAA,CAAY,GAAG;MACtB,MAAMvkC,MAAA,CAAO;IACf;IACA,IAAI8jE,MAAA,EAAQ;MACV,MAAMpkE,MAAA,CAAOokE,MAAM;IACrB;IACA,KAAKD,eAAA,GAAkBC,MAAA,IAAU;EACnC;EAAA;EAEA,IAAIgC,YAAA,EAAc;IAChB,OAAO,KAAKC,YAAA;EACd;EACAtmE,SAAA,EAAW;IACT,KAAKsyC,cAAA,GAAiB;EACxB;EACA74D,YAAA,EAAc;IACZ,MAAM6nC,OAAA,CAAQ;IACd,KAAKglD,YAAA,GAAe,KAAKlC,eAAA,GAAkB;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAE,sBAAsBD,MAAA,EAAQ;IAC5BA,MAAA,CAAOV,eAAA,CAAgB,IAAI;IAG3B,MAAM/S,gBAAA,GAAmByT,MAAA,CAAOzT,gBAAA,IAAoB,OAAOyT,MAAA,CAAOzT,gBAAA,GAAmB,KAAK0P,iBAAA;IAC1F,MAAMpsD,QAAA,GAAWmwD,MAAA,CAAOR,wBAAA,IAA4B,KAAKgB,yBAAA;IACzD,MAAMK,gBAAA,GAAmBhxD,QAAA,CAASixD,uBAAA,CAAwBd,MAAA,CAAOhkF,SAAS;IAC1E,MAAMqgB,GAAA,GAAMkwD,gBAAA,CAAiB5vD,eAAA,CAAgBkkE,gBAAA,EAAkBtU,gBAAA,CAAiBn3F,MAAA,EAAQ4qG,MAAA,CAAO18F,QAAA,IAAYipF,gBAAA,CAAiBjpF,QAAA,EAAU08F,MAAA,CAAOP,gBAAA,IAAoB,MAAS;IAI1K,IAAIlT,gBAAA,KAAqB,KAAK0P,iBAAA,EAAmB;MAC/C,KAAK8F,YAAA,CAAa,EAAE56F,WAAA,CAAYk1B,GAAA,CAAIE,QAAA,CAASwgE,SAAA,CAAU,CAAC,CAAC;IAC3D;IACA,MAAMqD,YAAA,CAAa,MAAM/jE,GAAA,CAAIljB,OAAA,CAAQ,CAAC;IACtC,KAAK4mF,eAAA,GAAkBC,MAAA;IACvB,KAAKiC,YAAA,GAAe5lE,GAAA;IACpB,KAAKylE,QAAA,CAAS1lE,IAAA,CAAKC,GAAG;IACtB,OAAOA,GAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6jE,qBAAqBF,MAAA,EAAQ;IAC3BA,MAAA,CAAOV,eAAA,CAAgB,IAAI;IAC3B,MAAM+B,OAAA,GAAU,KAAKpF,iBAAA,CAAkB/O,kBAAA,CAAmB8S,MAAA,CAAO7S,WAAA,EAAa6S,MAAA,CAAOtlG,OAAA,EAAS;MAC5F4I,QAAA,EAAU08F,MAAA,CAAO18F;IACnB,CAAC;IACD,MAAM88F,YAAA,CAAa,MAAM,KAAKnE,iBAAA,CAAkB5mF,KAAA,CAAM,CAAC;IACvD,KAAK0qF,eAAA,GAAkBC,MAAA;IACvB,KAAKiC,YAAA,GAAeZ,OAAA;IACpB,KAAKS,QAAA,CAAS1lE,IAAA,CAAKilE,OAAO;IAC1B,OAAOA,OAAA;EACT;EAAA;EAEAU,aAAA,EAAe;IACb,MAAMxjD,aAAA,GAAgB,KAAK09C,iBAAA,CAAkB1oF,OAAA,CAAQgrC,aAAA;IAGrD,OAAOA,aAAA,CAActuC,QAAA,KAAasuC,aAAA,CAAcpuC,YAAA,GAAeouC,aAAA,GAAgBA,aAAA,CAAcz3C,UAAA;EAC/F;AAqBF;AAnBI+6F,gBAAA,CAAKhkG,IAAA,GAAO,SAASqkG,wBAAwBhqG,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK2pG,gBAAA,EAAoBviD,iBAAA,CAAqB6iD,0BAAwB,GAAM7iD,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAkB53C,QAAQ,CAAC;AAChK;AAGAm6F,gBAAA,CAAK/kE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0mG,gBAAA;EACN7kE,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACN+iE,MAAA,EAAQ,CAAI9/C,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,QAAQ;EAC5D;EACAtqC,OAAA,EAAS;IACP4kE,QAAA,EAAU;EACZ;EACA3kE,QAAA,EAAU,CAAC,iBAAiB;EAC5BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AA/IL,IAAMwZ,eAAA,GAANP,gBAAA;AAAA,CAkJC,MAAM;EACL,CAAC,OAAO9sG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgkG,eAAA,EAAiB,CAAC;IACxFjnG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASgnG;EACX,GAAG;IACDhnG,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACFs4F,MAAA,EAAQ,CAAC;MACP7kG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACDg6F,QAAA,EAAU,CAAC;MACT3mG,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAM4kE,oBAAA,GAAN,MAAMA,oBAAA,SAA4BD,eAAA,CAAgB,EAwBlD;AAtBIC,oBAAA,CAAKxkG,IAAA,GAAuB,sBAAM;EAChC,IAAIykG,gCAAA;EACJ,OAAO,SAASC,4BAA4BrqG,CAAA,EAAG;IAC7C,QAAQoqG,gCAAA,KAAqCA,gCAAA,GAAsC/pD,qBAAA,CAAsB8pD,oBAAmB,IAAInqG,CAAA,IAAKmqG,oBAAmB;EAC1J;AACF,GAAG;AAGHA,oBAAA,CAAKvlE,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMknG,oBAAA;EACNrlE,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC;EAC7DC,MAAA,EAAQ;IACN+iE,MAAA,EAAQ,CAAI9/C,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,QAAQ;EAC1D;EACArqC,QAAA,EAAU,CAAC,eAAe;EAC1BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq1F,eAAA;IACTp1F,WAAA,EAAaq1F;EACf,CAAC,CAAC,GAAMzZ,0BAA0B;AACpC,CAAC;AAtBL,IAAM4Z,mBAAA,GAANH,oBAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOttG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBokG,mBAAA,EAAqB,CAAC;IAC5FrnG,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVF,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,CAAC;MACDtlD,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq1F,eAAA;QACTp1F,WAAA,EAAaw1F;MACf,CAAC;MACDplE,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMqlE,aAAA,GAAN,MAAMA,aAAA,CAAa,EAcnB;AAZIA,aAAA,CAAK5kG,IAAA,GAAO,SAAS6kG,qBAAqBxqG,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKuqG,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKt0F,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMsnG;AACR,CAAC;AAGDA,aAAA,CAAKp0F,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAMq0F,YAAA,GAANF,aAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAO1tG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBukG,YAAA,EAAc,CAAC;IACrFxnG,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACihF,SAAA,EAAWY,eAAA,EAAiBR,uBAAA,EAAyBY,mBAAmB;MAClF7hF,OAAA,EAAS,CAAC6gF,SAAA,EAAWY,eAAA,EAAiBR,uBAAA,EAAyBY,mBAAmB;IACpF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACrqBH,IAAMv3C,2BAA0BC,sBAAA,CAAuB;AAIvD,IAAM03C,mBAAA,GAAN,MAA0B;EACxBtvG,YAAYuvG,cAAA,EAAgB38F,WAAU;IACpC,KAAK28F,cAAA,GAAiBA,cAAA;IACtB,KAAKC,mBAAA,GAAsB;MACzBtnB,GAAA,EAAK;MACLD,IAAA,EAAM;IACR;IACA,KAAKwnB,UAAA,GAAa;IAClB,KAAK5jF,SAAA,GAAYjZ;EACnB;EAAA;EAEA01B,OAAA,EAAS,CAAC;EAAA;EAEVlY,OAAA,EAAS;IACP,IAAI,KAAKs/E,aAAA,CAAc,GAAG;MACxB,MAAM94E,IAAA,GAAO,KAAK/K,SAAA,CAAUisC,eAAA;MAC5B,KAAK63C,uBAAA,GAA0B,KAAKJ,cAAA,CAAelM,yBAAA,CAA0B;MAE7E,KAAKmM,mBAAA,CAAoBvnB,IAAA,GAAOrxD,IAAA,CAAKpV,KAAA,CAAMymE,IAAA,IAAQ;MACnD,KAAKunB,mBAAA,CAAoBtnB,GAAA,GAAMtxD,IAAA,CAAKpV,KAAA,CAAM0mE,GAAA,IAAO;MAGjDtxD,IAAA,CAAKpV,KAAA,CAAMymE,IAAA,GAAOnsB,mBAAA,CAAoB,CAAC,KAAK6zC,uBAAA,CAAwB1nB,IAAI;MACxErxD,IAAA,CAAKpV,KAAA,CAAM0mE,GAAA,GAAMpsB,mBAAA,CAAoB,CAAC,KAAK6zC,uBAAA,CAAwBznB,GAAG;MACtEtxD,IAAA,CAAKzP,SAAA,CAAUrW,GAAA,CAAI,wBAAwB;MAC3C,KAAK2+F,UAAA,GAAa;IACpB;EACF;EAAA;EAEAh1F,QAAA,EAAU;IACR,IAAI,KAAKg1F,UAAA,EAAY;MACnB,MAAMG,IAAA,GAAO,KAAK/jF,SAAA,CAAUisC,eAAA;MAC5B,MAAM/wD,IAAA,GAAO,KAAK8kB,SAAA,CAAU9kB,IAAA;MAC5B,MAAM8oG,SAAA,GAAYD,IAAA,CAAKpuF,KAAA;MACvB,MAAMsuF,SAAA,GAAY/oG,IAAA,CAAKya,KAAA;MACvB,MAAMuuF,0BAAA,GAA6BF,SAAA,CAAUG,cAAA,IAAkB;MAC/D,MAAMC,0BAAA,GAA6BH,SAAA,CAAUE,cAAA,IAAkB;MAC/D,KAAKP,UAAA,GAAa;MAClBI,SAAA,CAAU5nB,IAAA,GAAO,KAAKunB,mBAAA,CAAoBvnB,IAAA;MAC1C4nB,SAAA,CAAU3nB,GAAA,GAAM,KAAKsnB,mBAAA,CAAoBtnB,GAAA;MACzC0nB,IAAA,CAAKzoF,SAAA,CAAUnW,MAAA,CAAO,wBAAwB;MAM9C,IAAI2mD,0BAAyB;QAC3Bk4C,SAAA,CAAUG,cAAA,GAAiBF,SAAA,CAAUE,cAAA,GAAiB;MACxD;MACAv9F,MAAA,CAAOy9F,MAAA,CAAO,KAAKP,uBAAA,CAAwB1nB,IAAA,EAAM,KAAK0nB,uBAAA,CAAwBznB,GAAG;MACjF,IAAIvwB,0BAAyB;QAC3Bk4C,SAAA,CAAUG,cAAA,GAAiBD,0BAAA;QAC3BD,SAAA,CAAUE,cAAA,GAAiBC,0BAAA;MAC7B;IACF;EACF;EACAP,cAAA,EAAgB;IAId,MAAME,IAAA,GAAO,KAAK/jF,SAAA,CAAUisC,eAAA;IAC5B,IAAI83C,IAAA,CAAKzoF,SAAA,CAAUioD,QAAA,CAAS,wBAAwB,KAAK,KAAKqgC,UAAA,EAAY;MACxE,OAAO;IACT;IACA,MAAM1oG,IAAA,GAAO,KAAK8kB,SAAA,CAAU9kB,IAAA;IAC5B,MAAMg3F,QAAA,GAAW,KAAKwR,cAAA,CAAerQ,eAAA,CAAgB;IACrD,OAAOn4F,IAAA,CAAKo7F,YAAA,GAAepE,QAAA,CAASplC,MAAA,IAAU5xD,IAAA,CAAKs7F,WAAA,GAActE,QAAA,CAASzlC,KAAA;EAC5E;AACF;AAKA,SAAS63C,yCAAA,EAA2C;EAClD,OAAO7sG,KAAA,CAAM,4CAA4C;AAC3D;AAKA,IAAM8sG,mBAAA,GAAN,MAA0B;EACxBpwG,YAAYqwG,iBAAA,EAAmBpyC,OAAA,EAASsxC,cAAA,EAAgB/+E,OAAA,EAAS;IAC/D,KAAK6/E,iBAAA,GAAoBA,iBAAA;IACzB,KAAKpyC,OAAA,GAAUA,OAAA;IACf,KAAKsxC,cAAA,GAAiBA,cAAA;IACtB,KAAK/+E,OAAA,GAAUA,OAAA;IACf,KAAK8/E,mBAAA,GAAsB;IAE3B,KAAKC,OAAA,GAAU,MAAM;MACnB,KAAK91F,OAAA,CAAQ;MACb,IAAI,KAAK+1F,WAAA,CAAYrjC,WAAA,CAAY,GAAG;QAClC,KAAKlP,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAKqiG,WAAA,CAAY5nE,MAAA,CAAO,CAAC;MAClD;IACF;EACF;EAAA;EAEAN,OAAOmoE,UAAA,EAAY;IACjB,IAAI,KAAKD,WAAA,KAAgB,OAAO/uG,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvE,MAAM0uG,wCAAA,CAAyC;IACjD;IACA,KAAKK,WAAA,GAAcC,UAAA;EACrB;EAAA;EAEArgF,OAAA,EAAS;IACP,IAAI,KAAKkgF,mBAAA,EAAqB;MAC5B;IACF;IACA,MAAMviG,MAAA,GAAS,KAAKsiG,iBAAA,CAAkBtP,QAAA,CAAS,CAAC,EAAEn3F,IAAA,CAAK5G,MAAA,CAAO49F,UAAA,IAAc;MAC1E,OAAO,CAACA,UAAA,IAAc,CAAC,KAAK4P,WAAA,CAAYE,cAAA,CAAethC,QAAA,CAASwxB,UAAA,CAAWc,aAAA,CAAc,EAAEz2C,aAAa;IAC1G,CAAC,CAAC;IACF,IAAI,KAAKz6B,OAAA,IAAW,KAAKA,OAAA,CAAQmgF,SAAA,IAAa,KAAKngF,OAAA,CAAQmgF,SAAA,GAAY,GAAG;MACxE,KAAKC,sBAAA,GAAyB,KAAKrB,cAAA,CAAelM,yBAAA,CAA0B,EAAEnb,GAAA;MAC9E,KAAKooB,mBAAA,GAAsBviG,MAAA,CAAO+8B,SAAA,CAAU,MAAM;QAChD,MAAMs4D,cAAA,GAAiB,KAAKmM,cAAA,CAAelM,yBAAA,CAA0B,EAAEnb,GAAA;QACvE,IAAIgD,IAAA,CAAKC,GAAA,CAAIiY,cAAA,GAAiB,KAAKwN,sBAAsB,IAAI,KAAKpgF,OAAA,CAAQmgF,SAAA,EAAW;UACnF,KAAKJ,OAAA,CAAQ;QACf,OAAO;UACL,KAAKC,WAAA,CAAYK,cAAA,CAAe;QAClC;MACF,CAAC;IACH,OAAO;MACL,KAAKP,mBAAA,GAAsBviG,MAAA,CAAO+8B,SAAA,CAAU,KAAKylE,OAAO;IAC1D;EACF;EAAA;EAEA91F,QAAA,EAAU;IACR,IAAI,KAAK61F,mBAAA,EAAqB;MAC5B,KAAKA,mBAAA,CAAoB3lE,WAAA,CAAY;MACrC,KAAK2lE,mBAAA,GAAsB;IAC7B;EACF;EACA1nE,OAAA,EAAS;IACP,KAAKnuB,OAAA,CAAQ;IACb,KAAK+1F,WAAA,GAAc;EACrB;AACF;AAGA,IAAMM,kBAAA,GAAN,MAAyB;EAAA;EAEvB1gF,OAAA,EAAS,CAAC;EAAA;EAEV3V,QAAA,EAAU,CAAC;EAAA;EAEX6tB,OAAA,EAAS,CAAC;AACZ;AASA,SAASyoE,6BAA6B9wF,OAAA,EAAS0gF,gBAAA,EAAkB;EAC/D,OAAOA,gBAAA,CAAiB7gE,IAAA,CAAKkxE,eAAA,IAAmB;IAC9C,MAAMC,YAAA,GAAehxF,OAAA,CAAQqrE,MAAA,GAAS0lB,eAAA,CAAgB9oB,GAAA;IACtD,MAAMgpB,YAAA,GAAejxF,OAAA,CAAQioE,GAAA,GAAM8oB,eAAA,CAAgB1lB,MAAA;IACnD,MAAM6lB,WAAA,GAAclxF,OAAA,CAAQmrE,KAAA,GAAQ4lB,eAAA,CAAgB/oB,IAAA;IACpD,MAAMmpB,YAAA,GAAenxF,OAAA,CAAQgoE,IAAA,GAAO+oB,eAAA,CAAgB5lB,KAAA;IACpD,OAAO6lB,YAAA,IAAgBC,YAAA,IAAgBC,WAAA,IAAeC,YAAA;EACxD,CAAC;AACH;AAQA,SAASC,4BAA4BpxF,OAAA,EAAS0gF,gBAAA,EAAkB;EAC9D,OAAOA,gBAAA,CAAiB7gE,IAAA,CAAKwxE,mBAAA,IAAuB;IAClD,MAAMC,YAAA,GAAetxF,OAAA,CAAQioE,GAAA,GAAMopB,mBAAA,CAAoBppB,GAAA;IACvD,MAAMspB,YAAA,GAAevxF,OAAA,CAAQqrE,MAAA,GAASgmB,mBAAA,CAAoBhmB,MAAA;IAC1D,MAAMmmB,WAAA,GAAcxxF,OAAA,CAAQgoE,IAAA,GAAOqpB,mBAAA,CAAoBrpB,IAAA;IACvD,MAAMypB,YAAA,GAAezxF,OAAA,CAAQmrE,KAAA,GAAQkmB,mBAAA,CAAoBlmB,KAAA;IACzD,OAAOmmB,YAAA,IAAgBC,YAAA,IAAgBC,WAAA,IAAeC,YAAA;EACxD,CAAC;AACH;AAKA,IAAMC,wBAAA,GAAN,MAA+B;EAC7B3xG,YAAYqwG,iBAAA,EAAmBd,cAAA,EAAgBtxC,OAAA,EAASztC,OAAA,EAAS;IAC/D,KAAK6/E,iBAAA,GAAoBA,iBAAA;IACzB,KAAKd,cAAA,GAAiBA,cAAA;IACtB,KAAKtxC,OAAA,GAAUA,OAAA;IACf,KAAKztC,OAAA,GAAUA,OAAA;IACf,KAAK8/E,mBAAA,GAAsB;EAC7B;EAAA;EAEAhoE,OAAOmoE,UAAA,EAAY;IACjB,IAAI,KAAKD,WAAA,KAAgB,OAAO/uG,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvE,MAAM0uG,wCAAA,CAAyC;IACjD;IACA,KAAKK,WAAA,GAAcC,UAAA;EACrB;EAAA;EAEArgF,OAAA,EAAS;IACP,IAAI,CAAC,KAAKkgF,mBAAA,EAAqB;MAC7B,MAAMsB,QAAA,GAAW,KAAKphF,OAAA,GAAU,KAAKA,OAAA,CAAQqhF,cAAA,GAAiB;MAC9D,KAAKvB,mBAAA,GAAsB,KAAKD,iBAAA,CAAkBtP,QAAA,CAAS6Q,QAAQ,EAAE9mE,SAAA,CAAU,MAAM;QACnF,KAAK0lE,WAAA,CAAYK,cAAA,CAAe;QAEhC,IAAI,KAAKrgF,OAAA,IAAW,KAAKA,OAAA,CAAQshF,SAAA,EAAW;UAC1C,MAAMC,WAAA,GAAc,KAAKvB,WAAA,CAAYE,cAAA,CAAe7oB,qBAAA,CAAsB;UAC1E,MAAM;YACJvvB,KAAA;YACAK;UACF,IAAI,KAAK42C,cAAA,CAAerQ,eAAA,CAAgB;UAGxC,MAAM8S,WAAA,GAAc,CAAC;YACnB15C,KAAA;YACAK,MAAA;YACA2yB,MAAA,EAAQ3yB,MAAA;YACRyyB,KAAA,EAAO9yB,KAAA;YACP4vB,GAAA,EAAK;YACLD,IAAA,EAAM;UACR,CAAC;UACD,IAAI8oB,4BAAA,CAA6BgB,WAAA,EAAaC,WAAW,GAAG;YAC1D,KAAKv3F,OAAA,CAAQ;YACb,KAAKwjD,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAKqiG,WAAA,CAAY5nE,MAAA,CAAO,CAAC;UAClD;QACF;MACF,CAAC;IACH;EACF;EAAA;EAEAnuB,QAAA,EAAU;IACR,IAAI,KAAK61F,mBAAA,EAAqB;MAC5B,KAAKA,mBAAA,CAAoB3lE,WAAA,CAAY;MACrC,KAAK2lE,mBAAA,GAAsB;IAC7B;EACF;EACA1nE,OAAA,EAAS;IACP,KAAKnuB,OAAA,CAAQ;IACb,KAAK+1F,WAAA,GAAc;EACrB;AACF;AAQA,IAAMyB,sBAAA,GAAN,MAAMA,sBAAA,CAAsB;EAC1BjyG,YAAYqwG,iBAAA,EAAmBd,cAAA,EAAgBtxC,OAAA,EAASrrD,WAAU;IAChE,KAAKy9F,iBAAA,GAAoBA,iBAAA;IACzB,KAAKd,cAAA,GAAiBA,cAAA;IACtB,KAAKtxC,OAAA,GAAUA,OAAA;IAEf,KAAK1xD,IAAA,GAAO,MAAM,IAAIukG,kBAAA,CAAmB;IAKzC,KAAKoB,KAAA,GAAQvrE,MAAA,IAAU,IAAIypE,mBAAA,CAAoB,KAAKC,iBAAA,EAAmB,KAAKpyC,OAAA,EAAS,KAAKsxC,cAAA,EAAgB5oE,MAAM;IAEhH,KAAKwrE,KAAA,GAAQ,MAAM,IAAI7C,mBAAA,CAAoB,KAAKC,cAAA,EAAgB,KAAK1jF,SAAS;IAM9E,KAAKumF,UAAA,GAAazrE,MAAA,IAAU,IAAIgrE,wBAAA,CAAyB,KAAKtB,iBAAA,EAAmB,KAAKd,cAAA,EAAgB,KAAKtxC,OAAA,EAASt3B,MAAM;IAC1H,KAAK9a,SAAA,GAAYjZ;EACnB;AAaF;AAXIq/F,sBAAA,CAAK1nG,IAAA,GAAO,SAAS8nG,8BAA8BztG,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAKqtG,sBAAA,EAA0BxnG,QAAA,CAAYo3F,gBAAgB,GAAMp3F,QAAA,CAAYo5F,aAAa,GAAMp5F,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAQ,CAAC;AACxJ;AAGA69F,sBAAA,CAAKvnG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOmsG,sBAAA;EACPrnG,OAAA,EAASqnG,sBAAA,CAAsB1nG,IAAA;EAC/B8M,UAAA,EAAY;AACd,CAAC;AAhCL,IAAMi7F,qBAAA,GAANL,sBAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOxwG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwnG,qBAAA,EAAuB,CAAC;IAC9FzqG,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASg6F;EACX,GAAG;IACDh6F,IAAA,EAASg8F;EACX,GAAG;IACDh8F,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAMm+F,aAAA,GAAN,MAAoB;EAClBvyG,YAAY2mC,MAAA,EAAQ;IAElB,KAAK6rE,cAAA,GAAiB,IAAI1B,kBAAA,CAAmB;IAE7C,KAAK2B,UAAA,GAAa;IAElB,KAAKC,WAAA,GAAc;IAEnB,KAAKC,aAAA,GAAgB;IAMrB,KAAKC,mBAAA,GAAsB;IAC3B,IAAIjsE,MAAA,EAAQ;MAIV,MAAMksE,UAAA,GAAalxG,MAAA,CAAOI,IAAA,CAAK4kC,MAAM;MACrC,WAAW9lC,GAAA,IAAOgyG,UAAA,EAAY;QAC5B,IAAIlsE,MAAA,CAAO9lC,GAAG,MAAM,QAAW;UAO7B,KAAKA,GAAG,IAAI8lC,MAAA,CAAO9lC,GAAG;QACxB;MACF;IACF;EACF;AACF;AA4CA,IAAMiyG,8BAAA,GAAN,MAAqC;EACnC9yG,YACA+yG,cAAA,EACAC,wBAAA,EAA0B;IACxB,KAAKD,cAAA,GAAiBA,cAAA;IACtB,KAAKC,wBAAA,GAA2BA,wBAAA;EAClC;AACF;AAOA,SAASC,yBAAyBC,QAAA,EAAUnyG,KAAA,EAAO;EACjD,IAAIA,KAAA,KAAU,SAASA,KAAA,KAAU,YAAYA,KAAA,KAAU,UAAU;IAC/D,MAAMuC,KAAA,CAAM,8BAA8B4vG,QAAQ,KAAKnyG,KAAK,0CAA+C;EAC7G;AACF;AAOA,SAASoyG,2BAA2BD,QAAA,EAAUnyG,KAAA,EAAO;EACnD,IAAIA,KAAA,KAAU,WAAWA,KAAA,KAAU,SAASA,KAAA,KAAU,UAAU;IAC9D,MAAMuC,KAAA,CAAM,8BAA8B4vG,QAAQ,KAAKnyG,KAAK,yCAA8C;EAC5G;AACF;AAOA,IAAMqyG,sBAAA,GAAN,MAAMA,sBAAA,CAAsB;EAC1BpzG,YAAY4S,WAAU;IAEpB,KAAKygG,iBAAA,GAAoB,EAAC;IAC1B,KAAKxnF,SAAA,GAAYjZ;EACnB;EACAkP,YAAA,EAAc;IACZ,KAAK8mB,MAAA,CAAO;EACd;EAAA;EAEA93B,IAAI2/F,UAAA,EAAY;IAEd,KAAKz/F,MAAA,CAAOy/F,UAAU;IACtB,KAAK4C,iBAAA,CAAkBjyG,IAAA,CAAKqvG,UAAU;EACxC;EAAA;EAEAz/F,OAAOy/F,UAAA,EAAY;IACjB,MAAMhwG,KAAA,GAAQ,KAAK4yG,iBAAA,CAAkB3yG,OAAA,CAAQ+vG,UAAU;IACvD,IAAIhwG,KAAA,GAAQ,IAAI;MACd,KAAK4yG,iBAAA,CAAkBztG,MAAA,CAAOnF,KAAA,EAAO,CAAC;IACxC;IAEA,IAAI,KAAK4yG,iBAAA,CAAkBvxG,MAAA,KAAW,GAAG;MACvC,KAAK8mC,MAAA,CAAO;IACd;EACF;AAaF;AAXIwqE,sBAAA,CAAK7oG,IAAA,GAAO,SAAS+oG,8BAA8B1uG,CAAA,EAAG;EACpD,OAAO,KAAKA,CAAA,IAAKwuG,sBAAA,EAA0B3oG,QAAA,CAAS2J,QAAQ,CAAC;AAC/D;AAGAg/F,sBAAA,CAAK1oG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOstG,sBAAA;EACPxoG,OAAA,EAASwoG,sBAAA,CAAsB7oG,IAAA;EAC/B8M,UAAA,EAAY;AACd,CAAC;AApCL,IAAMk8F,qBAAA,GAANH,sBAAA;AAAA,CAuCC,MAAM;EACL,CAAC,OAAO3xG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByoG,qBAAA,EAAuB,CAAC;IAC9F1rG,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAMo/F,0BAAA,GAAN,MAAMA,0BAAA,SAAkCD,qBAAA,CAAsB;EAC5DvzG,YAAY4S,WACZqrD,OAAA,EAAS;IACP,MAAMrrD,SAAQ;IACd,KAAKqrD,OAAA,GAAUA,OAAA;IAEf,KAAKw1C,gBAAA,GAAmBzpG,KAAA,IAAS;MAC/B,MAAM0pG,QAAA,GAAW,KAAKL,iBAAA;MACtB,SAASn+E,CAAA,GAAIw+E,QAAA,CAAS5xG,MAAA,GAAS,GAAGozB,CAAA,GAAI,IAAIA,CAAA,IAAK;QAO7C,IAAIw+E,QAAA,CAASx+E,CAAC,EAAEy+E,cAAA,CAAep8B,SAAA,CAAUz1E,MAAA,GAAS,GAAG;UACnD,MAAM8xG,aAAA,GAAgBF,QAAA,CAASx+E,CAAC,EAAEy+E,cAAA;UAElC,IAAI,KAAK11C,OAAA,EAAS;YAChB,KAAKA,OAAA,CAAQ9vD,GAAA,CAAI,MAAMylG,aAAA,CAAc9mG,IAAA,CAAK9C,KAAK,CAAC;UAClD,OAAO;YACL4pG,aAAA,CAAc9mG,IAAA,CAAK9C,KAAK;UAC1B;UACA;QACF;MACF;IACF;EACF;EAAA;EAEA8G,IAAI2/F,UAAA,EAAY;IACd,MAAM3/F,GAAA,CAAI2/F,UAAU;IAEpB,IAAI,CAAC,KAAKoD,WAAA,EAAa;MAErB,IAAI,KAAK51C,OAAA,EAAS;QAChB,KAAKA,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM,KAAKme,SAAA,CAAU9kB,IAAA,CAAK6M,gBAAA,CAAiB,WAAW,KAAK6/F,gBAAgB,CAAC;MAC7G,OAAO;QACL,KAAK5nF,SAAA,CAAU9kB,IAAA,CAAK6M,gBAAA,CAAiB,WAAW,KAAK6/F,gBAAgB;MACvE;MACA,KAAKI,WAAA,GAAc;IACrB;EACF;EAAA;EAEAjrE,OAAA,EAAS;IACP,IAAI,KAAKirE,WAAA,EAAa;MACpB,KAAKhoF,SAAA,CAAU9kB,IAAA,CAAK6P,mBAAA,CAAoB,WAAW,KAAK68F,gBAAgB;MACxE,KAAKI,WAAA,GAAc;IACrB;EACF;AAaF;AAXIL,0BAAA,CAAKjpG,IAAA,GAAO,SAASupG,kCAAkClvG,CAAA,EAAG;EACxD,OAAO,KAAKA,CAAA,IAAK4uG,0BAAA,EAA8B/oG,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAYsB,MAAA,EAAQ,CAAC,CAAC;AAC9F;AAGAynG,0BAAA,CAAK9oG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO0tG,0BAAA;EACP5oG,OAAA,EAAS4oG,0BAAA,CAA0BjpG,IAAA;EACnC8M,UAAA,EAAY;AACd,CAAC;AA3DL,IAAM08F,yBAAA,GAANP,0BAAA;AAAA,CA8DC,MAAM;EACL,CAAC,OAAO/xG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBipG,yBAAA,EAA2B,CAAC;IAClGlsG,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAASkE,MAAA;IACTuI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAM0wF,8BAAA,GAAN,MAAMA,8BAAA,SAAsCT,qBAAA,CAAsB;EAChEvzG,YAAY4S,WAAUosD,SAAA,EACtBf,OAAA,EAAS;IACP,MAAMrrD,SAAQ;IACd,KAAKosD,SAAA,GAAYA,SAAA;IACjB,KAAKf,OAAA,GAAUA,OAAA;IACf,KAAKg2C,iBAAA,GAAoB;IAEzB,KAAKC,oBAAA,GAAuBlqG,KAAA,IAAS;MACnC,KAAKmqG,uBAAA,GAA0B36C,eAAA,CAAgBxvD,KAAK;IACtD;IAEA,KAAKoqG,cAAA,GAAiBpqG,KAAA,IAAS;MAC7B,MAAMiT,MAAA,GAASu8C,eAAA,CAAgBxvD,KAAK;MAOpC,MAAMmsE,MAAA,GAASnsE,KAAA,CAAMnC,IAAA,KAAS,WAAW,KAAKssG,uBAAA,GAA0B,KAAKA,uBAAA,GAA0Bl3F,MAAA;MAGvG,KAAKk3F,uBAAA,GAA0B;MAI/B,MAAMT,QAAA,GAAW,KAAKL,iBAAA,CAAkBzyG,KAAA,CAAM;MAK9C,SAASs0B,CAAA,GAAIw+E,QAAA,CAAS5xG,MAAA,GAAS,GAAGozB,CAAA,GAAI,IAAIA,CAAA,IAAK;QAC7C,MAAMu7E,UAAA,GAAaiD,QAAA,CAASx+E,CAAC;QAC7B,IAAIu7E,UAAA,CAAW4D,qBAAA,CAAsB98B,SAAA,CAAUz1E,MAAA,GAAS,KAAK,CAAC2uG,UAAA,CAAWtjC,WAAA,CAAY,GAAG;UACtF;QACF;QAIA,IAAIsjC,UAAA,CAAWC,cAAA,CAAethC,QAAA,CAASnyD,MAAM,KAAKwzF,UAAA,CAAWC,cAAA,CAAethC,QAAA,CAAS+G,MAAM,GAAG;UAC5F;QACF;QACA,MAAMm+B,oBAAA,GAAuB7D,UAAA,CAAW4D,qBAAA;QAExC,IAAI,KAAKp2C,OAAA,EAAS;UAChB,KAAKA,OAAA,CAAQ9vD,GAAA,CAAI,MAAMmmG,oBAAA,CAAqBxnG,IAAA,CAAK9C,KAAK,CAAC;QACzD,OAAO;UACLsqG,oBAAA,CAAqBxnG,IAAA,CAAK9C,KAAK;QACjC;MACF;IACF;EACF;EAAA;EAEA8G,IAAI2/F,UAAA,EAAY;IACd,MAAM3/F,GAAA,CAAI2/F,UAAU;IAOpB,IAAI,CAAC,KAAKoD,WAAA,EAAa;MACrB,MAAM9sG,IAAA,GAAO,KAAK8kB,SAAA,CAAU9kB,IAAA;MAE5B,IAAI,KAAKk3D,OAAA,EAAS;QAChB,KAAKA,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM,KAAK6mG,kBAAA,CAAmBxtG,IAAI,CAAC;MACpE,OAAO;QACL,KAAKwtG,kBAAA,CAAmBxtG,IAAI;MAC9B;MAGA,IAAI,KAAKi4D,SAAA,CAAUxI,GAAA,IAAO,CAAC,KAAKy9C,iBAAA,EAAmB;QACjD,KAAKO,oBAAA,GAAuBztG,IAAA,CAAKya,KAAA,CAAMizF,MAAA;QACvC1tG,IAAA,CAAKya,KAAA,CAAMizF,MAAA,GAAS;QACpB,KAAKR,iBAAA,GAAoB;MAC3B;MACA,KAAKJ,WAAA,GAAc;IACrB;EACF;EAAA;EAEAjrE,OAAA,EAAS;IACP,IAAI,KAAKirE,WAAA,EAAa;MACpB,MAAM9sG,IAAA,GAAO,KAAK8kB,SAAA,CAAU9kB,IAAA;MAC5BA,IAAA,CAAK6P,mBAAA,CAAoB,eAAe,KAAKs9F,oBAAA,EAAsB,IAAI;MACvEntG,IAAA,CAAK6P,mBAAA,CAAoB,SAAS,KAAKw9F,cAAA,EAAgB,IAAI;MAC3DrtG,IAAA,CAAK6P,mBAAA,CAAoB,YAAY,KAAKw9F,cAAA,EAAgB,IAAI;MAC9DrtG,IAAA,CAAK6P,mBAAA,CAAoB,eAAe,KAAKw9F,cAAA,EAAgB,IAAI;MACjE,IAAI,KAAKp1C,SAAA,CAAUxI,GAAA,IAAO,KAAKy9C,iBAAA,EAAmB;QAChDltG,IAAA,CAAKya,KAAA,CAAMizF,MAAA,GAAS,KAAKD,oBAAA;QACzB,KAAKP,iBAAA,GAAoB;MAC3B;MACA,KAAKJ,WAAA,GAAc;IACrB;EACF;EACAU,mBAAmBxtG,IAAA,EAAM;IACvBA,IAAA,CAAK6M,gBAAA,CAAiB,eAAe,KAAKsgG,oBAAA,EAAsB,IAAI;IACpEntG,IAAA,CAAK6M,gBAAA,CAAiB,SAAS,KAAKwgG,cAAA,EAAgB,IAAI;IACxDrtG,IAAA,CAAK6M,gBAAA,CAAiB,YAAY,KAAKwgG,cAAA,EAAgB,IAAI;IAC3DrtG,IAAA,CAAK6M,gBAAA,CAAiB,eAAe,KAAKwgG,cAAA,EAAgB,IAAI;EAChE;AAaF;AAXIJ,8BAAA,CAAKzpG,IAAA,GAAO,SAASmqG,sCAAsC9vG,CAAA,EAAG;EAC5D,OAAO,KAAKA,CAAA,IAAKovG,8BAAA,EAAkCvpG,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAcosD,QAAQ,GAAMpsD,QAAA,CAAYsB,MAAA,EAAQ,CAAC,CAAC;AAC9H;AAGAioG,8BAAA,CAAKtpG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOkuG,8BAAA;EACPppG,OAAA,EAASopG,8BAAA,CAA8BzpG,IAAA;EACvC8M,UAAA,EAAY;AACd,CAAC;AA/GL,IAAMs9F,6BAAA,GAANX,8BAAA;AAAA,CAkHC,MAAM;EACL,CAAC,OAAOvyG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6pG,6BAAA,EAA+B,CAAC;IACtG9sG,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAWgvD;EACb,GAAG;IACDhvD,IAAA,EAASkE,MAAA;IACTuI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAMsxF,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrB50G,YAAY4S,WAAUosD,SAAA,EAAW;IAC/B,KAAKA,SAAA,GAAYA,SAAA;IACjB,KAAKnzC,SAAA,GAAYjZ;EACnB;EACAkP,YAAA,EAAc;IACZ,KAAK0lE,iBAAA,EAAmBx2E,MAAA,CAAO;EACjC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA6jG,oBAAA,EAAsB;IACpB,IAAI,CAAC,KAAKrtB,iBAAA,EAAmB;MAC3B,KAAKstB,gBAAA,CAAiB;IACxB;IACA,OAAO,KAAKttB,iBAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKAstB,iBAAA,EAAmB;IACjB,MAAMC,cAAA,GAAiB;IAIvB,IAAI,KAAK/1C,SAAA,CAAUhJ,SAAA,IAAa0D,kBAAA,CAAmB,GAAG;MACpD,MAAMs7C,0BAAA,GAA6B,KAAKnpF,SAAA,CAAUvJ,gBAAA,CAAiB,IAAIyyF,cAAc,yBAA8BA,cAAc,mBAAmB;MAGpJ,SAAS7/E,CAAA,GAAI,GAAGA,CAAA,GAAI8/E,0BAAA,CAA2BlzG,MAAA,EAAQozB,CAAA,IAAK;QAC1D8/E,0BAAA,CAA2B9/E,CAAC,EAAElkB,MAAA,CAAO;MACvC;IACF;IACA,MAAMylB,SAAA,GAAY,KAAK5K,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IACpDsjB,SAAA,CAAUtP,SAAA,CAAUrW,GAAA,CAAIikG,cAAc;IAUtC,IAAIr7C,kBAAA,CAAmB,GAAG;MACxBjjC,SAAA,CAAU1T,YAAA,CAAa,YAAY,MAAM;IAC3C,WAAW,CAAC,KAAKi8C,SAAA,CAAUhJ,SAAA,EAAW;MACpCv/B,SAAA,CAAU1T,YAAA,CAAa,YAAY,QAAQ;IAC7C;IACA,KAAK8I,SAAA,CAAU9kB,IAAA,CAAK8M,WAAA,CAAY4iB,SAAS;IACzC,KAAK+wD,iBAAA,GAAoB/wD,SAAA;EAC3B;AAaF;AAXIm+E,iBAAA,CAAKrqG,IAAA,GAAO,SAAS0qG,yBAAyBrwG,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKgwG,iBAAA,EAAqBnqG,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAcosD,QAAQ,CAAC;AACtF;AAGA+9C,iBAAA,CAAKlqG,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO8uG,iBAAA;EACPhqG,OAAA,EAASgqG,iBAAA,CAAiBrqG,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AAlEL,IAAM69F,gBAAA,GAANN,iBAAA;AAAA,CAqEC,MAAM;EACL,CAAC,OAAOnzG,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBoqG,gBAAA,EAAkB,CAAC;IACzFrtG,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAWgvD;EACb,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMs+C,UAAA,GAAN,MAAiB;EACfn1G,YAAYo1G,aAAA,EAAeC,KAAA,EAAOC,KAAA,EAAO9kF,OAAA,EAASytC,OAAA,EAASs3C,mBAAA,EAAqB1pF,YAAW2pF,SAAA,EAAWC,uBAAA,EAAyBC,mBAAA,GAAsB,OAAO;IAC1J,KAAKN,aAAA,GAAgBA,aAAA;IACrB,KAAKC,KAAA,GAAQA,KAAA;IACb,KAAKC,KAAA,GAAQA,KAAA;IACb,KAAK9kF,OAAA,GAAUA,OAAA;IACf,KAAKytC,OAAA,GAAUA,OAAA;IACf,KAAKs3C,mBAAA,GAAsBA,mBAAA;IAC3B,KAAK1pF,SAAA,GAAYA;IACjB,KAAK2pF,SAAA,GAAYA,SAAA;IACjB,KAAKC,uBAAA,GAA0BA,uBAAA;IAC/B,KAAKC,mBAAA,GAAsBA,mBAAA;IAC3B,KAAKC,gBAAA,GAAmB;IACxB,KAAKC,cAAA,GAAiB,IAAI13D,OAAA,CAAQ;IAClC,KAAK23D,YAAA,GAAe,IAAI33D,OAAA,CAAQ;IAChC,KAAK43D,YAAA,GAAe,IAAI53D,OAAA,CAAQ;IAChC,KAAK63D,gBAAA,GAAmBttD,YAAA,CAAazM,KAAA;IACrC,KAAKg6D,qBAAA,GAAwBhsG,KAAA,IAAS,KAAK4rG,cAAA,CAAe9oG,IAAA,CAAK9C,KAAK;IACpE,KAAKisG,6BAAA,GAAgCjsG,KAAA,IAAS;MAC5C,KAAKksG,gBAAA,CAAiBlsG,KAAA,CAAMiT,MAAM;IACpC;IAEA,KAAK02F,cAAA,GAAiB,IAAIz1D,OAAA,CAAQ;IAElC,KAAKm2D,qBAAA,GAAwB,IAAIn2D,OAAA,CAAQ;IACzC,IAAI1tB,OAAA,CAAQgiF,cAAA,EAAgB;MAC1B,KAAKtS,eAAA,GAAkB1vE,OAAA,CAAQgiF,cAAA;MAC/B,KAAKtS,eAAA,CAAgB53D,MAAA,CAAO,IAAI;IAClC;IACA,KAAK6tE,iBAAA,GAAoB3lF,OAAA,CAAQ4lF,gBAAA;EACnC;EAAA;EAEA,IAAI1F,eAAA,EAAiB;IACnB,OAAO,KAAK4E,KAAA;EACd;EAAA;EAEA,IAAIe,gBAAA,EAAkB;IACpB,OAAO,KAAKV,gBAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIzyC,YAAA,EAAc;IAChB,OAAO,KAAKmyC,KAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA/sE,OAAOokE,MAAA,EAAQ;IAGb,IAAI,CAAC,KAAK2I,KAAA,CAAMl2F,aAAA,IAAiB,KAAKm3F,mBAAA,EAAqB;MACzD,KAAKA,mBAAA,CAAoBziG,WAAA,CAAY,KAAKwhG,KAAK;IACjD;IACA,MAAMkB,YAAA,GAAe,KAAKnB,aAAA,CAAc9sE,MAAA,CAAOokE,MAAM;IACrD,IAAI,KAAKyJ,iBAAA,EAAmB;MAC1B,KAAKA,iBAAA,CAAkB7tE,MAAA,CAAO,IAAI;IACpC;IACA,KAAKkuE,oBAAA,CAAqB;IAC1B,KAAKC,kBAAA,CAAmB;IACxB,KAAKC,uBAAA,CAAwB;IAC7B,IAAI,KAAKxW,eAAA,EAAiB;MACxB,KAAKA,eAAA,CAAgB9vE,MAAA,CAAO;IAC9B;IAIA,KAAK6tC,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU,MAAM;MAElD,IAAI,KAAKqiC,WAAA,CAAY,GAAG;QACtB,KAAK0jC,cAAA,CAAe;MACtB;IACF,CAAC;IAED,KAAK8F,oBAAA,CAAqB,IAAI;IAC9B,IAAI,KAAKnmF,OAAA,CAAQkiF,WAAA,EAAa;MAC5B,KAAKkE,eAAA,CAAgB;IACvB;IACA,IAAI,KAAKpmF,OAAA,CAAQiiF,UAAA,EAAY;MAC3B,KAAKoE,cAAA,CAAe,KAAKvB,KAAA,EAAO,KAAK9kF,OAAA,CAAQiiF,UAAA,EAAY,IAAI;IAC/D;IAEA,KAAKoD,YAAA,CAAa/oG,IAAA,CAAK;IAEvB,KAAKyoG,mBAAA,CAAoBzkG,GAAA,CAAI,IAAI;IACjC,IAAI,KAAK0f,OAAA,CAAQoiF,mBAAA,EAAqB;MACpC,KAAKmD,gBAAA,GAAmB,KAAKP,SAAA,CAAU1qE,SAAA,CAAU,MAAM,KAAK6e,OAAA,CAAQ,CAAC;IACvE;IACA,KAAK8rD,uBAAA,CAAwB3kG,GAAA,CAAI,IAAI;IAIrC,IAAI,OAAOylG,YAAA,EAAcO,SAAA,KAAc,YAAY;MAMjDP,YAAA,CAAaO,SAAA,CAAU,MAAM;QAC3B,IAAI,KAAK3pC,WAAA,CAAY,GAAG;UAItB,KAAKlP,OAAA,CAAQvwD,iBAAA,CAAkB,MAAMoF,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM,KAAKs8B,MAAA,CAAO,CAAC,CAAC;QAClF;MACF,CAAC;IACH;IACA,OAAO2tE,YAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKA3tE,OAAA,EAAS;IACP,IAAI,CAAC,KAAKukC,WAAA,CAAY,GAAG;MACvB;IACF;IACA,KAAK4pC,cAAA,CAAe;IAIpB,KAAKJ,oBAAA,CAAqB,KAAK;IAC/B,IAAI,KAAKR,iBAAA,IAAqB,KAAKA,iBAAA,CAAkBvtE,MAAA,EAAQ;MAC3D,KAAKutE,iBAAA,CAAkBvtE,MAAA,CAAO;IAChC;IACA,IAAI,KAAKs3D,eAAA,EAAiB;MACxB,KAAKA,eAAA,CAAgBzlF,OAAA,CAAQ;IAC/B;IACA,MAAMu8F,gBAAA,GAAmB,KAAK5B,aAAA,CAAcxsE,MAAA,CAAO;IAEnD,KAAKktE,YAAA,CAAahpG,IAAA,CAAK;IAEvB,KAAKyoG,mBAAA,CAAoBvkG,MAAA,CAAO,IAAI;IAGpC,KAAKimG,wBAAA,CAAyB;IAC9B,KAAKlB,gBAAA,CAAiBprE,WAAA,CAAY;IAClC,KAAK8qE,uBAAA,CAAwBzkG,MAAA,CAAO,IAAI;IACxC,OAAOgmG,gBAAA;EACT;EAAA;EAEArtD,QAAA,EAAU;IACR,MAAMoiD,UAAA,GAAa,KAAK5+B,WAAA,CAAY;IACpC,IAAI,KAAKgpC,iBAAA,EAAmB;MAC1B,KAAKA,iBAAA,CAAkBxsD,OAAA,CAAQ;IACjC;IACA,KAAKutD,sBAAA,CAAuB;IAC5B,KAAKhB,gBAAA,CAAiB,KAAKP,gBAAgB;IAC3C,KAAKI,gBAAA,CAAiBprE,WAAA,CAAY;IAClC,KAAK4qE,mBAAA,CAAoBvkG,MAAA,CAAO,IAAI;IACpC,KAAKokG,aAAA,CAAczrD,OAAA,CAAQ;IAC3B,KAAKksD,YAAA,CAAarnG,QAAA,CAAS;IAC3B,KAAKonG,cAAA,CAAepnG,QAAA,CAAS;IAC7B,KAAKmlG,cAAA,CAAenlG,QAAA,CAAS;IAC7B,KAAK6lG,qBAAA,CAAsB7lG,QAAA,CAAS;IACpC,KAAKinG,uBAAA,CAAwBzkG,MAAA,CAAO,IAAI;IACxC,KAAKqkG,KAAA,EAAOrkG,MAAA,CAAO;IACnB,KAAKslG,mBAAA,GAAsB,KAAKhB,KAAA,GAAQ,KAAKD,KAAA,GAAQ;IACrD,IAAItJ,UAAA,EAAY;MACd,KAAK+J,YAAA,CAAahpG,IAAA,CAAK;IACzB;IACA,KAAKgpG,YAAA,CAAatnG,QAAA,CAAS;EAC7B;EAAA;EAEA2+D,YAAA,EAAc;IACZ,OAAO,KAAKioC,aAAA,CAAcjoC,WAAA,CAAY;EACxC;EAAA;EAEAgqC,cAAA,EAAgB;IACd,OAAO,KAAKvB,cAAA;EACd;EAAA;EAEAwB,YAAA,EAAc;IACZ,OAAO,KAAKvB,YAAA;EACd;EAAA;EAEAwB,YAAA,EAAc;IACZ,OAAO,KAAKvB,YAAA;EACd;EAAA;EAEAlC,cAAA,EAAgB;IACd,OAAO,KAAKD,cAAA;EACd;EAAA;EAEAW,qBAAA,EAAuB;IACrB,OAAO,KAAKD,qBAAA;EACd;EAAA;EAEAiD,UAAA,EAAY;IACV,OAAO,KAAK9mF,OAAA;EACd;EAAA;EAEAqgF,eAAA,EAAiB;IACf,IAAI,KAAKsF,iBAAA,EAAmB;MAC1B,KAAKA,iBAAA,CAAkBoB,KAAA,CAAM;IAC/B;EACF;EAAA;EAEAC,uBAAuBC,QAAA,EAAU;IAC/B,IAAIA,QAAA,KAAa,KAAKtB,iBAAA,EAAmB;MACvC;IACF;IACA,IAAI,KAAKA,iBAAA,EAAmB;MAC1B,KAAKA,iBAAA,CAAkBxsD,OAAA,CAAQ;IACjC;IACA,KAAKwsD,iBAAA,GAAoBsB,QAAA;IACzB,IAAI,KAAKtqC,WAAA,CAAY,GAAG;MACtBsqC,QAAA,CAASnvE,MAAA,CAAO,IAAI;MACpB,KAAKuoE,cAAA,CAAe;IACtB;EACF;EAAA;EAEA6G,WAAWC,UAAA,EAAY;IACrB,KAAKnnF,OAAA,GAAU5jB,cAAA,CAAAA,cAAA,KACV,KAAK4jB,OAAA,GACLmnF,UAAA;IAEL,KAAKlB,kBAAA,CAAmB;EAC1B;EAAA;EAEAmB,aAAav/C,GAAA,EAAK;IAChB,KAAK7nC,OAAA,GAAU1L,aAAA,CAAAlY,cAAA,KACV,KAAK4jB,OAAA,GADK;MAEbq2C,SAAA,EAAWxO;IACb;IACA,KAAKq+C,uBAAA,CAAwB;EAC/B;EAAA;EAEAmB,cAAcpqD,OAAA,EAAS;IACrB,IAAI,KAAK6nD,KAAA,EAAO;MACd,KAAKuB,cAAA,CAAe,KAAKvB,KAAA,EAAO7nD,OAAA,EAAS,IAAI;IAC/C;EACF;EAAA;EAEAqqD,iBAAiBrqD,OAAA,EAAS;IACxB,IAAI,KAAK6nD,KAAA,EAAO;MACd,KAAKuB,cAAA,CAAe,KAAKvB,KAAA,EAAO7nD,OAAA,EAAS,KAAK;IAChD;EACF;EAAA;AAAA;AAAA;EAIAsqD,aAAA,EAAe;IACb,MAAMlxC,SAAA,GAAY,KAAKr2C,OAAA,CAAQq2C,SAAA;IAC/B,IAAI,CAACA,SAAA,EAAW;MACd,OAAO;IACT;IACA,OAAO,OAAOA,SAAA,KAAc,WAAWA,SAAA,GAAYA,SAAA,CAAU9lE,KAAA;EAC/D;EAAA;EAEAi3G,qBAAqBP,QAAA,EAAU;IAC7B,IAAIA,QAAA,KAAa,KAAKvX,eAAA,EAAiB;MACrC;IACF;IACA,KAAKgX,sBAAA,CAAuB;IAC5B,KAAKhX,eAAA,GAAkBuX,QAAA;IACvB,IAAI,KAAKtqC,WAAA,CAAY,GAAG;MACtBsqC,QAAA,CAASnvE,MAAA,CAAO,IAAI;MACpBmvE,QAAA,CAASrnF,MAAA,CAAO;IAClB;EACF;EAAA;EAEAsmF,wBAAA,EAA0B;IACxB,KAAKrB,KAAA,CAAMtyF,YAAA,CAAa,OAAO,KAAKg1F,YAAA,CAAa,CAAC;EACpD;EAAA;EAEAtB,mBAAA,EAAqB;IACnB,IAAI,CAAC,KAAKnB,KAAA,EAAO;MACf;IACF;IACA,MAAM9zF,SAAQ,KAAK8zF,KAAA,CAAM9zF,KAAA;IACzBA,OAAM82C,KAAA,GAAQwD,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQ8nC,KAAK;IACpD92C,OAAMm3C,MAAA,GAASmD,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQmoC,MAAM;IACtDn3C,OAAMy2F,QAAA,GAAWn8C,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQynF,QAAQ;IAC1Dz2F,OAAM02F,SAAA,GAAYp8C,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQ0nF,SAAS;IAC5D12F,OAAM22F,QAAA,GAAWr8C,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQ2nF,QAAQ;IAC1D32F,OAAM42F,SAAA,GAAYt8C,mBAAA,CAAoB,KAAKtrC,OAAA,CAAQ4nF,SAAS;EAC9D;EAAA;EAEAzB,qBAAqB0B,aAAA,EAAe;IAClC,KAAK/C,KAAA,CAAM9zF,KAAA,CAAMi3C,aAAA,GAAgB4/C,aAAA,GAAgB,KAAK;EACxD;EAAA;EAEAzB,gBAAA,EAAkB;IAChB,MAAM0B,YAAA,GAAe;IACrB,KAAK3C,gBAAA,GAAmB,KAAK9pF,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAC1D,KAAKwiG,gBAAA,CAAiBxuF,SAAA,CAAUrW,GAAA,CAAI,sBAAsB;IAC1D,IAAI,KAAK4kG,mBAAA,EAAqB;MAC5B,KAAKC,gBAAA,CAAiBxuF,SAAA,CAAUrW,GAAA,CAAI,qCAAqC;IAC3E;IACA,IAAI,KAAK0f,OAAA,CAAQmiF,aAAA,EAAe;MAC9B,KAAKkE,cAAA,CAAe,KAAKlB,gBAAA,EAAkB,KAAKnlF,OAAA,CAAQmiF,aAAA,EAAe,IAAI;IAC7E;IAGA,KAAK0C,KAAA,CAAMl2F,aAAA,CAAcqH,YAAA,CAAa,KAAKmvF,gBAAA,EAAkB,KAAKN,KAAK;IAGvE,KAAKM,gBAAA,CAAiB/hG,gBAAA,CAAiB,SAAS,KAAKoiG,qBAAqB;IAE1E,IAAI,CAAC,KAAKN,mBAAA,IAAuB,OAAOjR,qBAAA,KAA0B,aAAa;MAC7E,KAAKxmC,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC+2F,qBAAA,CAAsB,MAAM;UAC1B,IAAI,KAAKkR,gBAAA,EAAkB;YACzB,KAAKA,gBAAA,CAAiBxuF,SAAA,CAAUrW,GAAA,CAAIwnG,YAAY;UAClD;QACF,CAAC;MACH,CAAC;IACH,OAAO;MACL,KAAK3C,gBAAA,CAAiBxuF,SAAA,CAAUrW,GAAA,CAAIwnG,YAAY;IAClD;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA9B,qBAAA,EAAuB;IACrB,IAAI,KAAKnB,KAAA,CAAMvuF,WAAA,EAAa;MAC1B,KAAKuuF,KAAA,CAAM7hG,UAAA,CAAWK,WAAA,CAAY,KAAKwhG,KAAK;IAC9C;EACF;EAAA;EAEA0B,eAAA,EAAiB;IACf,MAAMwB,gBAAA,GAAmB,KAAK5C,gBAAA;IAC9B,IAAI,CAAC4C,gBAAA,EAAkB;MACrB;IACF;IACA,IAAI,KAAK7C,mBAAA,EAAqB;MAC5B,KAAKQ,gBAAA,CAAiBqC,gBAAgB;MACtC;IACF;IACAA,gBAAA,CAAiBpxF,SAAA,CAAUnW,MAAA,CAAO,8BAA8B;IAChE,KAAKitD,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC6qG,gBAAA,CAAiB3kG,gBAAA,CAAiB,iBAAiB,KAAKqiG,6BAA6B;IACvF,CAAC;IAGDsC,gBAAA,CAAiB/2F,KAAA,CAAMi3C,aAAA,GAAgB;IAIvC,KAAK+/C,gBAAA,GAAmB,KAAKv6C,OAAA,CAAQvwD,iBAAA,CAAkB,MAAMsyC,UAAA,CAAW,MAAM;MAC5E,KAAKk2D,gBAAA,CAAiBqC,gBAAgB;IACxC,GAAG,GAAG,CAAC;EACT;EAAA;EAEA1B,eAAe52F,OAAA,EAASw4F,UAAA,EAAYC,KAAA,EAAO;IACzC,MAAMjrD,OAAA,GAAUoO,WAAA,CAAY48C,UAAA,IAAc,EAAE,EAAEz1G,MAAA,CAAOm0B,CAAA,IAAK,CAAC,CAACA,CAAC;IAC7D,IAAIs2B,OAAA,CAAQ3rD,MAAA,EAAQ;MAClB42G,KAAA,GAAQz4F,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI,GAAG28C,OAAO,IAAIxtC,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO,GAAGy8C,OAAO;IACjF;EACF;EAAA;EAEAwpD,yBAAA,EAA2B;IAIzB,KAAKh5C,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MAInC,MAAMm7C,YAAA,GAAe,KAAKoV,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKk6C,SAAA,CAAUzE,KAAA,CAAM,KAAKw2D,YAAA,EAAc,KAAKC,YAAY,CAAC,CAAC,EAAEhrE,SAAA,CAAU,MAAM;QAGtH,IAAI,CAAC,KAAKwqE,KAAA,IAAS,CAAC,KAAKD,KAAA,IAAS,KAAKC,KAAA,CAAMl+E,QAAA,CAASt1B,MAAA,KAAW,GAAG;UAClE,IAAI,KAAKwzG,KAAA,IAAS,KAAK9kF,OAAA,CAAQiiF,UAAA,EAAY;YACzC,KAAKoE,cAAA,CAAe,KAAKvB,KAAA,EAAO,KAAK9kF,OAAA,CAAQiiF,UAAA,EAAY,KAAK;UAChE;UACA,IAAI,KAAK4C,KAAA,IAAS,KAAKA,KAAA,CAAMl2F,aAAA,EAAe;YAC1C,KAAKm3F,mBAAA,GAAsB,KAAKjB,KAAA,CAAMl2F,aAAA;YACtC,KAAKk2F,KAAA,CAAMrkG,MAAA,CAAO;UACpB;UACA63C,YAAA,CAAale,WAAA,CAAY;QAC3B;MACF,CAAC;IACH,CAAC;EACH;EAAA;EAEAusE,uBAAA,EAAyB;IACvB,MAAM1E,cAAA,GAAiB,KAAKtS,eAAA;IAC5B,IAAIsS,cAAA,EAAgB;MAClBA,cAAA,CAAe/3F,OAAA,CAAQ;MACvB,IAAI+3F,cAAA,CAAe5pE,MAAA,EAAQ;QACzB4pE,cAAA,CAAe5pE,MAAA,CAAO;MACxB;IACF;EACF;EAAA;EAEAstE,iBAAiByC,QAAA,EAAU;IACzB,IAAIA,QAAA,EAAU;MACZA,QAAA,CAAS/hG,mBAAA,CAAoB,SAAS,KAAKo/F,qBAAqB;MAChE2C,QAAA,CAAS/hG,mBAAA,CAAoB,iBAAiB,KAAKq/F,6BAA6B;MAChF0C,QAAA,CAAS3nG,MAAA,CAAO;MAIhB,IAAI,KAAK2kG,gBAAA,KAAqBgD,QAAA,EAAU;QACtC,KAAKhD,gBAAA,GAAmB;MAC1B;IACF;IACA,IAAI,KAAK6C,gBAAA,EAAkB;MACzB3lC,YAAA,CAAa,KAAK2lC,gBAAgB;MAClC,KAAKA,gBAAA,GAAmB;IAC1B;EACF;AACF;AAKA,IAAMI,gBAAA,GAAmB;AAEzB,IAAMC,cAAA,GAAiB;AAQvB,IAAMC,iCAAA,GAAN,MAAwC;EAAA;EAEtC,IAAIC,UAAA,EAAY;IACd,OAAO,KAAKC,mBAAA;EACd;EACAh5G,YAAYi5G,WAAA,EAAa1J,cAAA,EAAgB1jF,YAAWmzC,SAAA,EAAWk6C,iBAAA,EAAmB;IAChF,KAAK3J,cAAA,GAAiBA,cAAA;IACtB,KAAK1jF,SAAA,GAAYA;IACjB,KAAKmzC,SAAA,GAAYA,SAAA;IACjB,KAAKk6C,iBAAA,GAAoBA,iBAAA;IAEzB,KAAKC,oBAAA,GAAuB;MAC1B7gD,KAAA,EAAO;MACPK,MAAA,EAAQ;IACV;IAEA,KAAKygD,SAAA,GAAY;IAEjB,KAAKC,QAAA,GAAW;IAEhB,KAAKC,cAAA,GAAiB;IAEtB,KAAKC,sBAAA,GAAyB;IAE9B,KAAKC,eAAA,GAAkB;IAEvB,KAAKC,eAAA,GAAkB;IAEvB,KAAKC,YAAA,GAAe,EAAC;IAErB,KAAKV,mBAAA,GAAsB,EAAC;IAE5B,KAAKW,gBAAA,GAAmB,IAAIz7D,OAAA,CAAQ;IAEpC,KAAK07D,mBAAA,GAAsBnxD,YAAA,CAAazM,KAAA;IAExC,KAAK69D,QAAA,GAAW;IAEhB,KAAKC,QAAA,GAAW;IAEhB,KAAKC,oBAAA,GAAuB,EAAC;IAE7B,KAAKC,eAAA,GAAkB,KAAKL,gBAAA;IAC5B,KAAKM,SAAA,CAAUhB,WAAW;EAC5B;EAAA;EAEA3wE,OAAOmoE,UAAA,EAAY;IACjB,IAAI,KAAKD,WAAA,IAAeC,UAAA,KAAe,KAAKD,WAAA,KAAgB,OAAO/uG,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC1G,MAAM6B,KAAA,CAAM,0DAA0D;IACxE;IACA,KAAK42G,kBAAA,CAAmB;IACxBzJ,UAAA,CAAWvtC,WAAA,CAAY/7C,SAAA,CAAUrW,GAAA,CAAI8nG,gBAAgB;IACrD,KAAKpI,WAAA,GAAcC,UAAA;IACnB,KAAK0J,YAAA,GAAe1J,UAAA,CAAWvtC,WAAA;IAC/B,KAAKoyC,KAAA,GAAQ7E,UAAA,CAAWC,cAAA;IACxB,KAAKnE,WAAA,GAAc;IACnB,KAAK6N,gBAAA,GAAmB;IACxB,KAAKC,aAAA,GAAgB;IACrB,KAAKT,mBAAA,CAAoBjvE,WAAA,CAAY;IACrC,KAAKivE,mBAAA,GAAsB,KAAKrK,cAAA,CAAexpC,MAAA,CAAO,EAAEj7B,SAAA,CAAU,MAAM;MAItE,KAAKsvE,gBAAA,GAAmB;MACxB,KAAK7C,KAAA,CAAM;IACb,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAeAA,MAAA,EAAQ;IAEN,IAAI,KAAKhL,WAAA,IAAe,CAAC,KAAKvtC,SAAA,CAAUhJ,SAAA,EAAW;MACjD;IACF;IAIA,IAAI,CAAC,KAAKokD,gBAAA,IAAoB,KAAKZ,eAAA,IAAmB,KAAKa,aAAA,EAAe;MACxE,KAAKC,mBAAA,CAAoB;MACzB;IACF;IACA,KAAKC,kBAAA,CAAmB;IACxB,KAAKC,0BAAA,CAA2B;IAChC,KAAKC,uBAAA,CAAwB;IAI7B,KAAKC,aAAA,GAAgB,KAAKC,wBAAA,CAAyB;IACnD,KAAKC,WAAA,GAAc,KAAKC,cAAA,CAAe;IACvC,KAAKC,YAAA,GAAe,KAAKxF,KAAA,CAAMztB,qBAAA,CAAsB;IACrD,KAAKD,cAAA,GAAiB,KAAKsxB,iBAAA,CAAkBrE,mBAAA,CAAoB,EAAEhtB,qBAAA,CAAsB;IACzF,MAAMkzB,UAAA,GAAa,KAAKH,WAAA;IACxB,MAAM7I,WAAA,GAAc,KAAK+I,YAAA;IACzB,MAAME,YAAA,GAAe,KAAKN,aAAA;IAC1B,MAAM/yB,aAAA,GAAgB,KAAKC,cAAA;IAE3B,MAAMqzB,YAAA,GAAe,EAAC;IAEtB,IAAIC,QAAA;IAGJ,SAAS34E,GAAA,IAAO,KAAKy2E,mBAAA,EAAqB;MAExC,IAAImC,WAAA,GAAc,KAAKC,eAAA,CAAgBL,UAAA,EAAYpzB,aAAA,EAAeplD,GAAG;MAIrE,IAAI84E,YAAA,GAAe,KAAKC,gBAAA,CAAiBH,WAAA,EAAapJ,WAAA,EAAaxvE,GAAG;MAEtE,IAAIg5E,UAAA,GAAa,KAAKC,cAAA,CAAeH,YAAA,EAActJ,WAAA,EAAaiJ,YAAA,EAAcz4E,GAAG;MAEjF,IAAIg5E,UAAA,CAAWE,0BAAA,EAA4B;QACzC,KAAKrC,SAAA,GAAY;QACjB,KAAKsC,cAAA,CAAen5E,GAAA,EAAK44E,WAAW;QACpC;MACF;MAGA,IAAI,KAAKQ,6BAAA,CAA8BJ,UAAA,EAAYF,YAAA,EAAcL,YAAY,GAAG;QAG9EC,YAAA,CAAa75G,IAAA,CAAK;UAChB6N,QAAA,EAAUszB,GAAA;UACV4zC,MAAA,EAAQglC,WAAA;UACRpJ,WAAA;UACA6J,eAAA,EAAiB,KAAKC,yBAAA,CAA0BV,WAAA,EAAa54E,GAAG;QAClE,CAAC;QACD;MACF;MAIA,IAAI,CAAC24E,QAAA,IAAYA,QAAA,CAASK,UAAA,CAAWO,WAAA,GAAcP,UAAA,CAAWO,WAAA,EAAa;QACzEZ,QAAA,GAAW;UACTK,UAAA;UACAF,YAAA;UACAF,WAAA;UACAlsG,QAAA,EAAUszB,GAAA;UACVwvE;QACF;MACF;IACF;IAGA,IAAIkJ,YAAA,CAAan5G,MAAA,EAAQ;MACvB,IAAIi6G,OAAA,GAAU;MACd,IAAIC,SAAA,GAAY;MAChB,WAAWC,GAAA,IAAOhB,YAAA,EAAc;QAC9B,MAAMiB,KAAA,GAAQD,GAAA,CAAIL,eAAA,CAAgBtjD,KAAA,GAAQ2jD,GAAA,CAAIL,eAAA,CAAgBjjD,MAAA,IAAUsjD,GAAA,CAAIhtG,QAAA,CAASktG,MAAA,IAAU;QAC/F,IAAID,KAAA,GAAQF,SAAA,EAAW;UACrBA,SAAA,GAAYE,KAAA;UACZH,OAAA,GAAUE,GAAA;QACZ;MACF;MACA,KAAK7C,SAAA,GAAY;MACjB,KAAKsC,cAAA,CAAeK,OAAA,CAAQ9sG,QAAA,EAAU8sG,OAAA,CAAQ5lC,MAAM;MACpD;IACF;IAGA,IAAI,KAAKkjC,QAAA,EAAU;MAEjB,KAAKD,SAAA,GAAY;MACjB,KAAKsC,cAAA,CAAeR,QAAA,CAASjsG,QAAA,EAAUisG,QAAA,CAASC,WAAW;MAC3D;IACF;IAGA,KAAKO,cAAA,CAAeR,QAAA,CAASjsG,QAAA,EAAUisG,QAAA,CAASC,WAAW;EAC7D;EACAvyE,OAAA,EAAS;IACP,KAAK2xE,kBAAA,CAAmB;IACxB,KAAKF,aAAA,GAAgB;IACrB,KAAK+B,mBAAA,GAAsB;IAC3B,KAAKxC,mBAAA,CAAoBjvE,WAAA,CAAY;EACvC;EAAA;EAEAgf,QAAA,EAAU;IACR,IAAI,KAAK4iD,WAAA,EAAa;MACpB;IACF;IAGA,IAAI,KAAK4N,YAAA,EAAc;MACrBkC,YAAA,CAAa,KAAKlC,YAAA,CAAa34F,KAAA,EAAO;QACpC0mE,GAAA,EAAK;QACLD,IAAA,EAAM;QACNmD,KAAA,EAAO;QACPE,MAAA,EAAQ;QACR3yB,MAAA,EAAQ;QACRL,KAAA,EAAO;QACPgkD,UAAA,EAAY;QACZC,cAAA,EAAgB;MAClB,CAAC;IACH;IACA,IAAI,KAAKjH,KAAA,EAAO;MACd,KAAKkF,0BAAA,CAA2B;IAClC;IACA,IAAI,KAAKhK,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAYttC,WAAA,CAAY/7C,SAAA,CAAUnW,MAAA,CAAO4nG,gBAAgB;IAChE;IACA,KAAKhwE,MAAA,CAAO;IACZ,KAAK+wE,gBAAA,CAAiBnrG,QAAA,CAAS;IAC/B,KAAKgiG,WAAA,GAAc,KAAK2J,YAAA,GAAe;IACvC,KAAK5N,WAAA,GAAc;EACrB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+N,oBAAA,EAAsB;IACpB,IAAI,KAAK/N,WAAA,IAAe,CAAC,KAAKvtC,SAAA,CAAUhJ,SAAA,EAAW;MACjD;IACF;IACA,MAAMwmD,YAAA,GAAe,KAAKnC,aAAA;IAC1B,IAAImC,YAAA,EAAc;MAChB,KAAK5B,WAAA,GAAc,KAAKC,cAAA,CAAe;MACvC,KAAKC,YAAA,GAAe,KAAKxF,KAAA,CAAMztB,qBAAA,CAAsB;MACrD,KAAK6yB,aAAA,GAAgB,KAAKC,wBAAA,CAAyB;MACnD,KAAK/yB,cAAA,GAAiB,KAAKsxB,iBAAA,CAAkBrE,mBAAA,CAAoB,EAAEhtB,qBAAA,CAAsB;MACzF,MAAMszB,WAAA,GAAc,KAAKC,eAAA,CAAgB,KAAKR,WAAA,EAAa,KAAKhzB,cAAA,EAAgB40B,YAAY;MAC5F,KAAKd,cAAA,CAAec,YAAA,EAAcrB,WAAW;IAC/C,OAAO;MACL,KAAK5D,KAAA,CAAM;IACb;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAkF,yBAAyBC,WAAA,EAAa;IACpC,KAAKhD,YAAA,GAAegD,WAAA;IACpB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAC,cAAc5D,SAAA,EAAW;IACvB,KAAKC,mBAAA,GAAsBD,SAAA;IAG3B,IAAIA,SAAA,CAAUr4G,OAAA,CAAQ,KAAK25G,aAAa,MAAM,IAAI;MAChD,KAAKA,aAAA,GAAgB;IACvB;IACA,KAAKH,kBAAA,CAAmB;IACxB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA0C,mBAAmBC,MAAA,EAAQ;IACzB,KAAKpD,eAAA,GAAkBoD,MAAA;IACvB,OAAO;EACT;EAAA;EAEAC,uBAAuBC,kBAAA,GAAqB,MAAM;IAChD,KAAKxD,sBAAA,GAAyBwD,kBAAA;IAC9B,OAAO;EACT;EAAA;EAEAC,kBAAkBC,aAAA,GAAgB,MAAM;IACtC,KAAK3D,cAAA,GAAiB2D,aAAA;IACtB,OAAO;EACT;EAAA;EAEAC,SAASC,OAAA,GAAU,MAAM;IACvB,KAAK9D,QAAA,GAAW8D,OAAA;IAChB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAC,mBAAmBC,QAAA,GAAW,MAAM;IAClC,KAAK7D,eAAA,GAAkB6D,QAAA;IACvB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQApD,UAAU9jC,MAAA,EAAQ;IAChB,KAAK1B,OAAA,GAAU0B,MAAA;IACf,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAmnC,mBAAmB9W,MAAA,EAAQ;IACzB,KAAKqT,QAAA,GAAWrT,MAAA;IAChB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA+W,mBAAmB/W,MAAA,EAAQ;IACzB,KAAKsT,QAAA,GAAWtT,MAAA;IAChB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAgX,sBAAsBpvF,QAAA,EAAU;IAC9B,KAAKqvF,wBAAA,GAA2BrvF,QAAA;IAChC,OAAO;EACT;EAAA;AAAA;AAAA;EAIAgtF,gBAAgBL,UAAA,EAAYpzB,aAAA,EAAeplD,GAAA,EAAK;IAC9C,IAAIsX,CAAA;IACJ,IAAItX,GAAA,CAAIm7E,OAAA,IAAW,UAAU;MAG3B7jE,CAAA,GAAIkhE,UAAA,CAAW9yB,IAAA,GAAO8yB,UAAA,CAAWziD,KAAA,GAAQ;IAC3C,OAAO;MACL,MAAMqlD,MAAA,GAAS,KAAKC,MAAA,CAAO,IAAI7C,UAAA,CAAW3vB,KAAA,GAAQ2vB,UAAA,CAAW9yB,IAAA;MAC7D,MAAM41B,IAAA,GAAO,KAAKD,MAAA,CAAO,IAAI7C,UAAA,CAAW9yB,IAAA,GAAO8yB,UAAA,CAAW3vB,KAAA;MAC1DvxC,CAAA,GAAItX,GAAA,CAAIm7E,OAAA,IAAW,UAAUC,MAAA,GAASE,IAAA;IACxC;IAGA,IAAIl2B,aAAA,CAAcM,IAAA,GAAO,GAAG;MAC1BpuC,CAAA,IAAK8tC,aAAA,CAAcM,IAAA;IACrB;IACA,IAAIP,CAAA;IACJ,IAAInlD,GAAA,CAAIu7E,OAAA,IAAW,UAAU;MAC3Bp2B,CAAA,GAAIqzB,UAAA,CAAW7yB,GAAA,GAAM6yB,UAAA,CAAWpiD,MAAA,GAAS;IAC3C,OAAO;MACL+uB,CAAA,GAAInlD,GAAA,CAAIu7E,OAAA,IAAW,QAAQ/C,UAAA,CAAW7yB,GAAA,GAAM6yB,UAAA,CAAWzvB,MAAA;IACzD;IAMA,IAAI3D,aAAA,CAAcO,GAAA,GAAM,GAAG;MACzBR,CAAA,IAAKC,aAAA,CAAcO,GAAA;IACrB;IACA,OAAO;MACLruC,CAAA;MACA6tC;IACF;EACF;EAAA;AAAA;AAAA;AAAA;EAKA4zB,iBAAiBH,WAAA,EAAapJ,WAAA,EAAaxvE,GAAA,EAAK;IAG9C,IAAIw7E,aAAA;IACJ,IAAIx7E,GAAA,CAAIy7E,QAAA,IAAY,UAAU;MAC5BD,aAAA,GAAgB,CAAChM,WAAA,CAAYz5C,KAAA,GAAQ;IACvC,WAAW/1B,GAAA,CAAIy7E,QAAA,KAAa,SAAS;MACnCD,aAAA,GAAgB,KAAKH,MAAA,CAAO,IAAI,CAAC7L,WAAA,CAAYz5C,KAAA,GAAQ;IACvD,OAAO;MACLylD,aAAA,GAAgB,KAAKH,MAAA,CAAO,IAAI,IAAI,CAAC7L,WAAA,CAAYz5C,KAAA;IACnD;IACA,IAAI2lD,aAAA;IACJ,IAAI17E,GAAA,CAAI27E,QAAA,IAAY,UAAU;MAC5BD,aAAA,GAAgB,CAAClM,WAAA,CAAYp5C,MAAA,GAAS;IACxC,OAAO;MACLslD,aAAA,GAAgB17E,GAAA,CAAI27E,QAAA,IAAY,QAAQ,IAAI,CAACnM,WAAA,CAAYp5C,MAAA;IAC3D;IAEA,OAAO;MACL9e,CAAA,EAAGshE,WAAA,CAAYthE,CAAA,GAAIkkE,aAAA;MACnBr2B,CAAA,EAAGyzB,WAAA,CAAYzzB,CAAA,GAAIu2B;IACrB;EACF;EAAA;EAEAzC,eAAe2C,KAAA,EAAOC,cAAA,EAAgBrgB,QAAA,EAAU9uF,QAAA,EAAU;IAGxD,MAAMovG,OAAA,GAAUC,4BAAA,CAA6BF,cAAc;IAC3D,IAAI;MACFvkE,CAAA;MACA6tC;IACF,IAAIy2B,KAAA;IACJ,IAAI91B,OAAA,GAAU,KAAKk2B,UAAA,CAAWtvG,QAAA,EAAU,GAAG;IAC3C,IAAIq5E,OAAA,GAAU,KAAKi2B,UAAA,CAAWtvG,QAAA,EAAU,GAAG;IAE3C,IAAIo5E,OAAA,EAAS;MACXxuC,CAAA,IAAKwuC,OAAA;IACP;IACA,IAAIC,OAAA,EAAS;MACXZ,CAAA,IAAKY,OAAA;IACP;IAEA,IAAIk2B,YAAA,GAAe,IAAI3kE,CAAA;IACvB,IAAI4kE,aAAA,GAAgB5kE,CAAA,GAAIwkE,OAAA,CAAQ/lD,KAAA,GAAQylC,QAAA,CAASzlC,KAAA;IACjD,IAAIomD,WAAA,GAAc,IAAIh3B,CAAA;IACtB,IAAIi3B,cAAA,GAAiBj3B,CAAA,GAAI22B,OAAA,CAAQ1lD,MAAA,GAASolC,QAAA,CAASplC,MAAA;IAEnD,IAAIimD,YAAA,GAAe,KAAKC,kBAAA,CAAmBR,OAAA,CAAQ/lD,KAAA,EAAOkmD,YAAA,EAAcC,aAAa;IACrF,IAAIK,aAAA,GAAgB,KAAKD,kBAAA,CAAmBR,OAAA,CAAQ1lD,MAAA,EAAQ+lD,WAAA,EAAaC,cAAc;IACvF,IAAI7C,WAAA,GAAc8C,YAAA,GAAeE,aAAA;IACjC,OAAO;MACLhD,WAAA;MACAL,0BAAA,EAA4B4C,OAAA,CAAQ/lD,KAAA,GAAQ+lD,OAAA,CAAQ1lD,MAAA,KAAWmjD,WAAA;MAC/DiD,wBAAA,EAA0BD,aAAA,KAAkBT,OAAA,CAAQ1lD,MAAA;MACpDqmD,0BAAA,EAA4BJ,YAAA,IAAgBP,OAAA,CAAQ/lD;IACtD;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAqjD,8BAA8BM,GAAA,EAAKkC,KAAA,EAAOpgB,QAAA,EAAU;IAClD,IAAI,KAAKwb,sBAAA,EAAwB;MAC/B,MAAM0F,eAAA,GAAkBlhB,QAAA,CAASzS,MAAA,GAAS6yB,KAAA,CAAMz2B,CAAA;MAChD,MAAMw3B,cAAA,GAAiBnhB,QAAA,CAAS3S,KAAA,GAAQ+yB,KAAA,CAAMtkE,CAAA;MAC9C,MAAMq+D,SAAA,GAAYiH,aAAA,CAAc,KAAK3O,WAAA,CAAY8G,SAAA,CAAU,EAAEY,SAAS;MACtE,MAAMD,QAAA,GAAWkH,aAAA,CAAc,KAAK3O,WAAA,CAAY8G,SAAA,CAAU,EAAEW,QAAQ;MACpE,MAAMmH,WAAA,GAAcnD,GAAA,CAAI8C,wBAAA,IAA4B7G,SAAA,IAAa,QAAQA,SAAA,IAAa+G,eAAA;MACtF,MAAMI,aAAA,GAAgBpD,GAAA,CAAI+C,0BAAA,IAA8B/G,QAAA,IAAY,QAAQA,QAAA,IAAYiH,cAAA;MACxF,OAAOE,WAAA,IAAeC,aAAA;IACxB;IACA,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAC,qBAAqBvgB,KAAA,EAAOqf,cAAA,EAAgBhb,cAAA,EAAgB;IAI1D,IAAI,KAAKgZ,mBAAA,IAAuB,KAAK5C,eAAA,EAAiB;MACpD,OAAO;QACL3/D,CAAA,EAAGklD,KAAA,CAAMllD,CAAA,GAAI,KAAKuiE,mBAAA,CAAoBviE,CAAA;QACtC6tC,CAAA,EAAGqX,KAAA,CAAMrX,CAAA,GAAI,KAAK00B,mBAAA,CAAoB10B;MACxC;IACF;IAGA,MAAM22B,OAAA,GAAUC,4BAAA,CAA6BF,cAAc;IAC3D,MAAMrgB,QAAA,GAAW,KAAK2c,aAAA;IAGtB,MAAM6E,aAAA,GAAgBr0B,IAAA,CAAK7K,GAAA,CAAI0e,KAAA,CAAMllD,CAAA,GAAIwkE,OAAA,CAAQ/lD,KAAA,GAAQylC,QAAA,CAASzlC,KAAA,EAAO,CAAC;IAC1E,MAAMknD,cAAA,GAAiBt0B,IAAA,CAAK7K,GAAA,CAAI0e,KAAA,CAAMrX,CAAA,GAAI22B,OAAA,CAAQ1lD,MAAA,GAASolC,QAAA,CAASplC,MAAA,EAAQ,CAAC;IAC7E,MAAM8mD,WAAA,GAAcv0B,IAAA,CAAK7K,GAAA,CAAI0d,QAAA,CAAS7V,GAAA,GAAMkb,cAAA,CAAelb,GAAA,GAAM6W,KAAA,CAAMrX,CAAA,EAAG,CAAC;IAC3E,MAAMg4B,YAAA,GAAex0B,IAAA,CAAK7K,GAAA,CAAI0d,QAAA,CAAS9V,IAAA,GAAOmb,cAAA,CAAenb,IAAA,GAAO8W,KAAA,CAAMllD,CAAA,EAAG,CAAC;IAE9E,IAAI8lE,KAAA,GAAQ;IACZ,IAAIC,KAAA,GAAQ;IAIZ,IAAIvB,OAAA,CAAQ/lD,KAAA,IAASylC,QAAA,CAASzlC,KAAA,EAAO;MACnCqnD,KAAA,GAAQD,YAAA,IAAgB,CAACH,aAAA;IAC3B,OAAO;MACLI,KAAA,GAAQ5gB,KAAA,CAAMllD,CAAA,GAAI,KAAK4/D,eAAA,GAAkB1b,QAAA,CAAS9V,IAAA,GAAOmb,cAAA,CAAenb,IAAA,GAAO8W,KAAA,CAAMllD,CAAA,GAAI;IAC3F;IACA,IAAIwkE,OAAA,CAAQ1lD,MAAA,IAAUolC,QAAA,CAASplC,MAAA,EAAQ;MACrCinD,KAAA,GAAQH,WAAA,IAAe,CAACD,cAAA;IAC1B,OAAO;MACLI,KAAA,GAAQ7gB,KAAA,CAAMrX,CAAA,GAAI,KAAK+xB,eAAA,GAAkB1b,QAAA,CAAS7V,GAAA,GAAMkb,cAAA,CAAelb,GAAA,GAAM6W,KAAA,CAAMrX,CAAA,GAAI;IACzF;IACA,KAAK00B,mBAAA,GAAsB;MACzBviE,CAAA,EAAG8lE,KAAA;MACHj4B,CAAA,EAAGk4B;IACL;IACA,OAAO;MACL/lE,CAAA,EAAGklD,KAAA,CAAMllD,CAAA,GAAI8lE,KAAA;MACbj4B,CAAA,EAAGqX,KAAA,CAAMrX,CAAA,GAAIk4B;IACf;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAlE,eAAezsG,QAAA,EAAUksG,WAAA,EAAa;IACpC,KAAK0E,mBAAA,CAAoB5wG,QAAQ;IACjC,KAAK6wG,wBAAA,CAAyB3E,WAAA,EAAalsG,QAAQ;IACnD,KAAK8wG,qBAAA,CAAsB5E,WAAA,EAAalsG,QAAQ;IAChD,IAAIA,QAAA,CAASwjG,UAAA,EAAY;MACvB,KAAKuN,gBAAA,CAAiB/wG,QAAA,CAASwjG,UAAU;IAC3C;IAIA,IAAI,KAAKkH,gBAAA,CAAiBpiC,SAAA,CAAUz1E,MAAA,EAAQ;MAC1C,MAAMm+G,gBAAA,GAAmB,KAAKC,oBAAA,CAAqB;MAGnD,IAAIjxG,QAAA,KAAa,KAAKorG,aAAA,IAAiB,CAAC,KAAK8F,qBAAA,IAAyB,CAACC,uBAAA,CAAwB,KAAKD,qBAAA,EAAuBF,gBAAgB,GAAG;QAC5I,MAAMI,WAAA,GAAc,IAAIvN,8BAAA,CAA+B7jG,QAAA,EAAUgxG,gBAAgB;QACjF,KAAKtG,gBAAA,CAAiB7sG,IAAA,CAAKuzG,WAAW;MACxC;MACA,KAAKF,qBAAA,GAAwBF,gBAAA;IAC/B;IAEA,KAAK5F,aAAA,GAAgBprG,QAAA;IACrB,KAAKmrG,gBAAA,GAAmB;EAC1B;EAAA;EAEAyF,oBAAoB5wG,QAAA,EAAU;IAC5B,IAAI,CAAC,KAAKwuG,wBAAA,EAA0B;MAClC;IACF;IACA,MAAMp7F,QAAA,GAAW,KAAK83F,YAAA,CAAa73F,gBAAA,CAAiB,KAAKm7F,wBAAwB;IACjF,IAAI6C,OAAA;IACJ,IAAIC,OAAA,GAAUtxG,QAAA,CAASivG,QAAA;IACvB,IAAIjvG,QAAA,CAAS+uG,QAAA,KAAa,UAAU;MAClCsC,OAAA,GAAU;IACZ,WAAW,KAAK1C,MAAA,CAAO,GAAG;MACxB0C,OAAA,GAAUrxG,QAAA,CAAS+uG,QAAA,KAAa,UAAU,UAAU;IACtD,OAAO;MACLsC,OAAA,GAAUrxG,QAAA,CAAS+uG,QAAA,KAAa,UAAU,SAAS;IACrD;IACA,SAAS9oF,CAAA,GAAI,GAAGA,CAAA,GAAI7S,QAAA,CAASvgB,MAAA,EAAQozB,CAAA,IAAK;MACxC7S,QAAA,CAAS6S,CAAC,EAAE1T,KAAA,CAAMg/F,eAAA,GAAkB,GAAGF,OAAO,IAAIC,OAAO;IAC3D;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA1E,0BAA0B1lC,MAAA,EAAQlnE,QAAA,EAAU;IAC1C,MAAM8uF,QAAA,GAAW,KAAK2c,aAAA;IACtB,MAAMxY,KAAA,GAAQ,KAAK0b,MAAA,CAAO;IAC1B,IAAIjlD,MAAA,EAAQuvB,GAAA,EAAKoD,MAAA;IACjB,IAAIr8E,QAAA,CAASivG,QAAA,KAAa,OAAO;MAE/Bh2B,GAAA,GAAM/R,MAAA,CAAOuR,CAAA;MACb/uB,MAAA,GAASolC,QAAA,CAASplC,MAAA,GAASuvB,GAAA,GAAM,KAAKuxB,eAAA;IACxC,WAAWxqG,QAAA,CAASivG,QAAA,KAAa,UAAU;MAIzC5yB,MAAA,GAASyS,QAAA,CAASplC,MAAA,GAASwd,MAAA,CAAOuR,CAAA,GAAI,KAAK+xB,eAAA,GAAkB;MAC7D9gD,MAAA,GAASolC,QAAA,CAASplC,MAAA,GAAS2yB,MAAA,GAAS,KAAKmuB,eAAA;IAC3C,OAAO;MAKL,MAAMgH,8BAAA,GAAiCv1B,IAAA,CAAK9K,GAAA,CAAI2d,QAAA,CAASzS,MAAA,GAASnV,MAAA,CAAOuR,CAAA,GAAIqW,QAAA,CAAS7V,GAAA,EAAK/R,MAAA,CAAOuR,CAAC;MACnG,MAAMg5B,cAAA,GAAiB,KAAKvH,oBAAA,CAAqBxgD,MAAA;MACjDA,MAAA,GAAS8nD,8BAAA,GAAiC;MAC1Cv4B,GAAA,GAAM/R,MAAA,CAAOuR,CAAA,GAAI+4B,8BAAA;MACjB,IAAI9nD,MAAA,GAAS+nD,cAAA,IAAkB,CAAC,KAAKtG,gBAAA,IAAoB,CAAC,KAAKd,cAAA,EAAgB;QAC7EpxB,GAAA,GAAM/R,MAAA,CAAOuR,CAAA,GAAIg5B,cAAA,GAAiB;MACpC;IACF;IAEA,MAAMC,4BAAA,GAA+B1xG,QAAA,CAAS+uG,QAAA,KAAa,WAAW,CAAC9b,KAAA,IAASjzF,QAAA,CAAS+uG,QAAA,KAAa,SAAS9b,KAAA;IAE/G,MAAM0e,2BAAA,GAA8B3xG,QAAA,CAAS+uG,QAAA,KAAa,SAAS,CAAC9b,KAAA,IAASjzF,QAAA,CAAS+uG,QAAA,KAAa,WAAW9b,KAAA;IAC9G,IAAI5pC,KAAA,EAAO2vB,IAAA,EAAMmD,KAAA;IACjB,IAAIw1B,2BAAA,EAA6B;MAC/Bx1B,KAAA,GAAQ2S,QAAA,CAASzlC,KAAA,GAAQ6d,MAAA,CAAOt8B,CAAA,GAAI,KAAK4/D,eAAA,GAAkB;MAC3DnhD,KAAA,GAAQ6d,MAAA,CAAOt8B,CAAA,GAAI,KAAK4/D,eAAA;IAC1B,WAAWkH,4BAAA,EAA8B;MACvC14B,IAAA,GAAO9R,MAAA,CAAOt8B,CAAA;MACdye,KAAA,GAAQylC,QAAA,CAAS3S,KAAA,GAAQjV,MAAA,CAAOt8B,CAAA;IAClC,OAAO;MAKL,MAAM4mE,8BAAA,GAAiCv1B,IAAA,CAAK9K,GAAA,CAAI2d,QAAA,CAAS3S,KAAA,GAAQjV,MAAA,CAAOt8B,CAAA,GAAIkkD,QAAA,CAAS9V,IAAA,EAAM9R,MAAA,CAAOt8B,CAAC;MACnG,MAAMgnE,aAAA,GAAgB,KAAK1H,oBAAA,CAAqB7gD,KAAA;MAChDA,KAAA,GAAQmoD,8BAAA,GAAiC;MACzCx4B,IAAA,GAAO9R,MAAA,CAAOt8B,CAAA,GAAI4mE,8BAAA;MAClB,IAAInoD,KAAA,GAAQuoD,aAAA,IAAiB,CAAC,KAAKzG,gBAAA,IAAoB,CAAC,KAAKd,cAAA,EAAgB;QAC3ErxB,IAAA,GAAO9R,MAAA,CAAOt8B,CAAA,GAAIgnE,aAAA,GAAgB;MACpC;IACF;IACA,OAAO;MACL34B,GAAA;MACAD,IAAA;MACAqD,MAAA;MACAF,KAAA;MACA9yB,KAAA;MACAK;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAonD,sBAAsB5pC,MAAA,EAAQlnE,QAAA,EAAU;IACtC,MAAM2sG,eAAA,GAAkB,KAAKC,yBAAA,CAA0B1lC,MAAA,EAAQlnE,QAAQ;IAGvE,IAAI,CAAC,KAAKmrG,gBAAA,IAAoB,CAAC,KAAKd,cAAA,EAAgB;MAClDsC,eAAA,CAAgBjjD,MAAA,GAASuyB,IAAA,CAAK9K,GAAA,CAAIw7B,eAAA,CAAgBjjD,MAAA,EAAQ,KAAKwgD,oBAAA,CAAqBxgD,MAAM;MAC1FijD,eAAA,CAAgBtjD,KAAA,GAAQ4yB,IAAA,CAAK9K,GAAA,CAAIw7B,eAAA,CAAgBtjD,KAAA,EAAO,KAAK6gD,oBAAA,CAAqB7gD,KAAK;IACzF;IACA,MAAM/2C,MAAA,GAAS,CAAC;IAChB,IAAI,KAAKu/F,iBAAA,CAAkB,GAAG;MAC5Bv/F,MAAA,CAAO2mE,GAAA,GAAM3mE,MAAA,CAAO0mE,IAAA,GAAO;MAC3B1mE,MAAA,CAAO+pE,MAAA,GAAS/pE,MAAA,CAAO6pE,KAAA,GAAQ7pE,MAAA,CAAO62F,SAAA,GAAY72F,MAAA,CAAO42F,QAAA,GAAW;MACpE52F,MAAA,CAAO+2C,KAAA,GAAQ/2C,MAAA,CAAOo3C,MAAA,GAAS;IACjC,OAAO;MACL,MAAMy/C,SAAA,GAAY,KAAK5H,WAAA,CAAY8G,SAAA,CAAU,EAAEc,SAAA;MAC/C,MAAMD,QAAA,GAAW,KAAK3H,WAAA,CAAY8G,SAAA,CAAU,EAAEa,QAAA;MAC9C52F,MAAA,CAAOo3C,MAAA,GAASmD,mBAAA,CAAoB8/C,eAAA,CAAgBjjD,MAAM;MAC1Dp3C,MAAA,CAAO2mE,GAAA,GAAMpsB,mBAAA,CAAoB8/C,eAAA,CAAgB1zB,GAAG;MACpD3mE,MAAA,CAAO+pE,MAAA,GAASxvB,mBAAA,CAAoB8/C,eAAA,CAAgBtwB,MAAM;MAC1D/pE,MAAA,CAAO+2C,KAAA,GAAQwD,mBAAA,CAAoB8/C,eAAA,CAAgBtjD,KAAK;MACxD/2C,MAAA,CAAO0mE,IAAA,GAAOnsB,mBAAA,CAAoB8/C,eAAA,CAAgB3zB,IAAI;MACtD1mE,MAAA,CAAO6pE,KAAA,GAAQtvB,mBAAA,CAAoB8/C,eAAA,CAAgBxwB,KAAK;MAExD,IAAIn8E,QAAA,CAAS+uG,QAAA,KAAa,UAAU;QAClCz8F,MAAA,CAAO+6F,UAAA,GAAa;MACtB,OAAO;QACL/6F,MAAA,CAAO+6F,UAAA,GAAartG,QAAA,CAAS+uG,QAAA,KAAa,QAAQ,aAAa;MACjE;MACA,IAAI/uG,QAAA,CAASivG,QAAA,KAAa,UAAU;QAClC38F,MAAA,CAAOg7F,cAAA,GAAiB;MAC1B,OAAO;QACLh7F,MAAA,CAAOg7F,cAAA,GAAiBttG,QAAA,CAASivG,QAAA,KAAa,WAAW,aAAa;MACxE;MACA,IAAI9F,SAAA,EAAW;QACb72F,MAAA,CAAO62F,SAAA,GAAYt8C,mBAAA,CAAoBs8C,SAAS;MAClD;MACA,IAAID,QAAA,EAAU;QACZ52F,MAAA,CAAO42F,QAAA,GAAWr8C,mBAAA,CAAoBq8C,QAAQ;MAChD;IACF;IACA,KAAKgB,oBAAA,GAAuByC,eAAA;IAC5BS,YAAA,CAAa,KAAKlC,YAAA,CAAa34F,KAAA,EAAOD,MAAM;EAC9C;EAAA;EAEAk5F,wBAAA,EAA0B;IACxB4B,YAAA,CAAa,KAAKlC,YAAA,CAAa34F,KAAA,EAAO;MACpC0mE,GAAA,EAAK;MACLD,IAAA,EAAM;MACNmD,KAAA,EAAO;MACPE,MAAA,EAAQ;MACR3yB,MAAA,EAAQ;MACRL,KAAA,EAAO;MACPgkD,UAAA,EAAY;MACZC,cAAA,EAAgB;IAClB,CAAC;EACH;EAAA;EAEA/B,2BAAA,EAA6B;IAC3B6B,YAAA,CAAa,KAAK/G,KAAA,CAAM9zF,KAAA,EAAO;MAC7B0mE,GAAA,EAAK;MACLD,IAAA,EAAM;MACNqD,MAAA,EAAQ;MACRF,KAAA,EAAO;MACPn8E,QAAA,EAAU;MACVk+C,SAAA,EAAW;IACb,CAAC;EACH;EAAA;EAEA2yD,yBAAyB3E,WAAA,EAAalsG,QAAA,EAAU;IAC9C,MAAMsS,MAAA,GAAS,CAAC;IAChB,MAAMw/F,gBAAA,GAAmB,KAAKD,iBAAA,CAAkB;IAChD,MAAME,qBAAA,GAAwB,KAAKzH,sBAAA;IACnC,MAAM5yE,MAAA,GAAS,KAAK6pE,WAAA,CAAY8G,SAAA,CAAU;IAC1C,IAAIyJ,gBAAA,EAAkB;MACpB,MAAM3d,cAAA,GAAiB,KAAKmM,cAAA,CAAelM,yBAAA,CAA0B;MACrEgZ,YAAA,CAAa96F,MAAA,EAAQ,KAAK0/F,iBAAA,CAAkBhyG,QAAA,EAAUksG,WAAA,EAAa/X,cAAc,CAAC;MAClFiZ,YAAA,CAAa96F,MAAA,EAAQ,KAAK2/F,iBAAA,CAAkBjyG,QAAA,EAAUksG,WAAA,EAAa/X,cAAc,CAAC;IACpF,OAAO;MACL7hF,MAAA,CAAOtS,QAAA,GAAW;IACpB;IAMA,IAAIkyG,eAAA,GAAkB;IACtB,IAAI94B,OAAA,GAAU,KAAKk2B,UAAA,CAAWtvG,QAAA,EAAU,GAAG;IAC3C,IAAIq5E,OAAA,GAAU,KAAKi2B,UAAA,CAAWtvG,QAAA,EAAU,GAAG;IAC3C,IAAIo5E,OAAA,EAAS;MACX84B,eAAA,IAAmB,cAAc94B,OAAO;IAC1C;IACA,IAAIC,OAAA,EAAS;MACX64B,eAAA,IAAmB,cAAc74B,OAAO;IAC1C;IACA/mE,MAAA,CAAO4rC,SAAA,GAAYg0D,eAAA,CAAgBngH,IAAA,CAAK;IAMxC,IAAI2lC,MAAA,CAAOyxE,SAAA,EAAW;MACpB,IAAI2I,gBAAA,EAAkB;QACpBx/F,MAAA,CAAO62F,SAAA,GAAYt8C,mBAAA,CAAoBn1B,MAAA,CAAOyxE,SAAS;MACzD,WAAW4I,qBAAA,EAAuB;QAChCz/F,MAAA,CAAO62F,SAAA,GAAY;MACrB;IACF;IACA,IAAIzxE,MAAA,CAAOwxE,QAAA,EAAU;MACnB,IAAI4I,gBAAA,EAAkB;QACpBx/F,MAAA,CAAO42F,QAAA,GAAWr8C,mBAAA,CAAoBn1B,MAAA,CAAOwxE,QAAQ;MACvD,WAAW6I,qBAAA,EAAuB;QAChCz/F,MAAA,CAAO42F,QAAA,GAAW;MACpB;IACF;IACAkE,YAAA,CAAa,KAAK/G,KAAA,CAAM9zF,KAAA,EAAOD,MAAM;EACvC;EAAA;EAEA0/F,kBAAkBhyG,QAAA,EAAUksG,WAAA,EAAa/X,cAAA,EAAgB;IAGvD,IAAI7hF,MAAA,GAAS;MACX2mE,GAAA,EAAK;MACLoD,MAAA,EAAQ;IACV;IACA,IAAI+vB,YAAA,GAAe,KAAKC,gBAAA,CAAiBH,WAAA,EAAa,KAAKL,YAAA,EAAc7rG,QAAQ;IACjF,IAAI,KAAKmqG,SAAA,EAAW;MAClBiC,YAAA,GAAe,KAAKiE,oBAAA,CAAqBjE,YAAA,EAAc,KAAKP,YAAA,EAAc1X,cAAc;IAC1F;IAGA,IAAIn0F,QAAA,CAASivG,QAAA,KAAa,UAAU;MAGlC,MAAMkD,cAAA,GAAiB,KAAKv1F,SAAA,CAAUisC,eAAA,CAAgBsqC,YAAA;MACtD7gF,MAAA,CAAO+pE,MAAA,GAAS,GAAG81B,cAAA,IAAkB/F,YAAA,CAAa3zB,CAAA,GAAI,KAAKozB,YAAA,CAAaniD,MAAA,CAAO;IACjF,OAAO;MACLp3C,MAAA,CAAO2mE,GAAA,GAAMpsB,mBAAA,CAAoBu/C,YAAA,CAAa3zB,CAAC;IACjD;IACA,OAAOnmE,MAAA;EACT;EAAA;EAEA2/F,kBAAkBjyG,QAAA,EAAUksG,WAAA,EAAa/X,cAAA,EAAgB;IAGvD,IAAI7hF,MAAA,GAAS;MACX0mE,IAAA,EAAM;MACNmD,KAAA,EAAO;IACT;IACA,IAAIiwB,YAAA,GAAe,KAAKC,gBAAA,CAAiBH,WAAA,EAAa,KAAKL,YAAA,EAAc7rG,QAAQ;IACjF,IAAI,KAAKmqG,SAAA,EAAW;MAClBiC,YAAA,GAAe,KAAKiE,oBAAA,CAAqBjE,YAAA,EAAc,KAAKP,YAAA,EAAc1X,cAAc;IAC1F;IAKA,IAAIie,uBAAA;IACJ,IAAI,KAAKzD,MAAA,CAAO,GAAG;MACjByD,uBAAA,GAA0BpyG,QAAA,CAAS+uG,QAAA,KAAa,QAAQ,SAAS;IACnE,OAAO;MACLqD,uBAAA,GAA0BpyG,QAAA,CAAS+uG,QAAA,KAAa,QAAQ,UAAU;IACpE;IAGA,IAAIqD,uBAAA,KAA4B,SAAS;MACvC,MAAMC,aAAA,GAAgB,KAAKz1F,SAAA,CAAUisC,eAAA,CAAgBwqC,WAAA;MACrD/gF,MAAA,CAAO6pE,KAAA,GAAQ,GAAGk2B,aAAA,IAAiBjG,YAAA,CAAaxhE,CAAA,GAAI,KAAKihE,YAAA,CAAaxiD,KAAA,CAAM;IAC9E,OAAO;MACL/2C,MAAA,CAAO0mE,IAAA,GAAOnsB,mBAAA,CAAoBu/C,YAAA,CAAaxhE,CAAC;IAClD;IACA,OAAOt4B,MAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKA2+F,qBAAA,EAAuB;IAErB,MAAMqB,YAAA,GAAe,KAAK1G,cAAA,CAAe;IACzC,MAAM2G,aAAA,GAAgB,KAAKlM,KAAA,CAAMztB,qBAAA,CAAsB;IAIvD,MAAM45B,qBAAA,GAAwB,KAAK/H,YAAA,CAAav2G,GAAA,CAAIy9F,UAAA,IAAc;MAChE,OAAOA,UAAA,CAAWc,aAAA,CAAc,EAAEz2C,aAAA,CAAc48B,qBAAA,CAAsB;IACxE,CAAC;IACD,OAAO;MACL65B,eAAA,EAAiBrQ,2BAAA,CAA4BkQ,YAAA,EAAcE,qBAAqB;MAChFE,mBAAA,EAAqB5Q,4BAAA,CAA6BwQ,YAAA,EAAcE,qBAAqB;MACrFG,gBAAA,EAAkBvQ,2BAAA,CAA4BmQ,aAAA,EAAeC,qBAAqB;MAClFI,oBAAA,EAAsB9Q,4BAAA,CAA6ByQ,aAAA,EAAeC,qBAAqB;IACzF;EACF;EAAA;EAEA5C,mBAAmB/8G,MAAA,KAAWggH,SAAA,EAAW;IACvC,OAAOA,SAAA,CAAU/5G,MAAA,CAAO,CAACg6G,YAAA,EAAcC,eAAA,KAAoB;MACzD,OAAOD,YAAA,GAAe72B,IAAA,CAAK7K,GAAA,CAAI2hC,eAAA,EAAiB,CAAC;IACnD,GAAGlgH,MAAM;EACX;EAAA;EAEA64G,yBAAA,EAA2B;IAMzB,MAAMriD,KAAA,GAAQ,KAAKzsC,SAAA,CAAUisC,eAAA,CAAgBwqC,WAAA;IAC7C,MAAM3pC,MAAA,GAAS,KAAK9sC,SAAA,CAAUisC,eAAA,CAAgBsqC,YAAA;IAC9C,MAAMgB,cAAA,GAAiB,KAAKmM,cAAA,CAAelM,yBAAA,CAA0B;IACrE,OAAO;MACLnb,GAAA,EAAKkb,cAAA,CAAelb,GAAA,GAAM,KAAKuxB,eAAA;MAC/BxxB,IAAA,EAAMmb,cAAA,CAAenb,IAAA,GAAO,KAAKwxB,eAAA;MACjCruB,KAAA,EAAOgY,cAAA,CAAenb,IAAA,GAAO3vB,KAAA,GAAQ,KAAKmhD,eAAA;MAC1CnuB,MAAA,EAAQ8X,cAAA,CAAelb,GAAA,GAAMvvB,MAAA,GAAS,KAAK8gD,eAAA;MAC3CnhD,KAAA,EAAOA,KAAA,GAAQ,IAAI,KAAKmhD,eAAA;MACxB9gD,MAAA,EAAQA,MAAA,GAAS,IAAI,KAAK8gD;IAC5B;EACF;EAAA;EAEAmE,OAAA,EAAS;IACP,OAAO,KAAKpN,WAAA,CAAYuH,YAAA,CAAa,MAAM;EAC7C;EAAA;EAEA+I,kBAAA,EAAoB;IAClB,OAAO,CAAC,KAAKvH,sBAAA,IAA0B,KAAKH,SAAA;EAC9C;EAAA;EAEAmF,WAAWtvG,QAAA,EAAUy3F,IAAA,EAAM;IACzB,IAAIA,IAAA,KAAS,KAAK;MAGhB,OAAOz3F,QAAA,CAASo5E,OAAA,IAAW,OAAO,KAAKwxB,QAAA,GAAW5qG,QAAA,CAASo5E,OAAA;IAC7D;IACA,OAAOp5E,QAAA,CAASq5E,OAAA,IAAW,OAAO,KAAKwxB,QAAA,GAAW7qG,QAAA,CAASq5E,OAAA;EAC7D;EAAA;EAEA4xB,mBAAA,EAAqB;IACnB,IAAI,OAAOz4G,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,CAAC,KAAKu3G,mBAAA,CAAoBl3G,MAAA,EAAQ;QACpC,MAAMwB,KAAA,CAAM,uEAAuE;MACrF;MAGA,KAAK01G,mBAAA,CAAoBz4G,OAAA,CAAQ0hH,IAAA,IAAQ;QACvC9O,0BAAA,CAA2B,WAAW8O,IAAA,CAAKvE,OAAO;QAClDzK,wBAAA,CAAyB,WAAWgP,IAAA,CAAKnE,OAAO;QAChD3K,0BAAA,CAA2B,YAAY8O,IAAA,CAAKjE,QAAQ;QACpD/K,wBAAA,CAAyB,YAAYgP,IAAA,CAAK/D,QAAQ;MACpD,CAAC;IACH;EACF;EAAA;EAEA8B,iBAAiBvH,UAAA,EAAY;IAC3B,IAAI,KAAKnD,KAAA,EAAO;MACdz5C,WAAA,CAAY48C,UAAU,EAAEl4G,OAAA,CAAQ2hH,QAAA,IAAY;QAC1C,IAAIA,QAAA,KAAa,MAAM,KAAKnI,oBAAA,CAAqBr5G,OAAA,CAAQwhH,QAAQ,MAAM,IAAI;UACzE,KAAKnI,oBAAA,CAAqB34G,IAAA,CAAK8gH,QAAQ;UACvC,KAAK5M,KAAA,CAAMnuF,SAAA,CAAUrW,GAAA,CAAIoxG,QAAQ;QACnC;MACF,CAAC;IACH;EACF;EAAA;EAEA3H,mBAAA,EAAqB;IACnB,IAAI,KAAKjF,KAAA,EAAO;MACd,KAAKyE,oBAAA,CAAqBx5G,OAAA,CAAQ2hH,QAAA,IAAY;QAC5C,KAAK5M,KAAA,CAAMnuF,SAAA,CAAUnW,MAAA,CAAOkxG,QAAQ;MACtC,CAAC;MACD,KAAKnI,oBAAA,GAAuB,EAAC;IAC/B;EACF;EAAA;EAEAc,eAAA,EAAiB;IACf,MAAM1kC,MAAA,GAAS,KAAK1B,OAAA;IACpB,IAAI0B,MAAA,YAAkBhqB,UAAA,EAAY;MAChC,OAAOgqB,MAAA,CAAOlrB,aAAA,CAAc48B,qBAAA,CAAsB;IACpD;IAEA,IAAI1R,MAAA,YAAkBte,OAAA,EAAS;MAC7B,OAAOse,MAAA,CAAO0R,qBAAA,CAAsB;IACtC;IACA,MAAMvvB,KAAA,GAAQ6d,MAAA,CAAO7d,KAAA,IAAS;IAC9B,MAAMK,MAAA,GAASwd,MAAA,CAAOxd,MAAA,IAAU;IAEhC,OAAO;MACLuvB,GAAA,EAAK/R,MAAA,CAAOuR,CAAA;MACZ4D,MAAA,EAAQnV,MAAA,CAAOuR,CAAA,GAAI/uB,MAAA;MACnBsvB,IAAA,EAAM9R,MAAA,CAAOt8B,CAAA;MACbuxC,KAAA,EAAOjV,MAAA,CAAOt8B,CAAA,GAAIye,KAAA;MAClBK,MAAA;MACAL;IACF;EACF;AACF;AAEA,SAAS+jD,aAAa8F,WAAA,EAAa5sG,MAAA,EAAQ;EACzC,SAAS1U,GAAA,IAAO0U,MAAA,EAAQ;IACtB,IAAIA,MAAA,CAAOqb,cAAA,CAAe/vB,GAAG,GAAG;MAC9BshH,WAAA,CAAYthH,GAAG,IAAI0U,MAAA,CAAO1U,GAAG;IAC/B;EACF;EACA,OAAOshH,WAAA;AACT;AAKA,SAAShD,cAActgE,KAAA,EAAO;EAC5B,IAAI,OAAOA,KAAA,KAAU,YAAYA,KAAA,IAAS,MAAM;IAC9C,MAAM,CAAC99C,KAAA,EAAOqhH,KAAK,IAAIvjE,KAAA,CAAMv+C,KAAA,CAAMu4G,cAAc;IACjD,OAAO,CAACuJ,KAAA,IAASA,KAAA,KAAU,OAAOxmD,UAAA,CAAW76D,KAAK,IAAI;EACxD;EACA,OAAO89C,KAAA,IAAS;AAClB;AAOA,SAASy/D,6BAA6B+D,UAAA,EAAY;EAChD,OAAO;IACLn6B,GAAA,EAAKgD,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAWn6B,GAAG;IAC9BkD,KAAA,EAAOF,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAWj3B,KAAK;IAClCE,MAAA,EAAQJ,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAW/2B,MAAM;IACpCrD,IAAA,EAAMiD,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAWp6B,IAAI;IAChC3vB,KAAA,EAAO4yB,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAW/pD,KAAK;IAClCK,MAAA,EAAQuyB,IAAA,CAAKuU,KAAA,CAAM4iB,UAAA,CAAW1pD,MAAM;EACtC;AACF;AAEA,SAASynD,wBAAwBprF,CAAA,EAAGC,CAAA,EAAG;EACrC,IAAID,CAAA,KAAMC,CAAA,EAAG;IACX,OAAO;EACT;EACA,OAAOD,CAAA,CAAE0sF,eAAA,KAAoBzsF,CAAA,CAAEysF,eAAA,IAAmB1sF,CAAA,CAAE2sF,mBAAA,KAAwB1sF,CAAA,CAAE0sF,mBAAA,IAAuB3sF,CAAA,CAAE4sF,gBAAA,KAAqB3sF,CAAA,CAAE2sF,gBAAA,IAAoB5sF,CAAA,CAAE6sF,oBAAA,KAAyB5sF,CAAA,CAAE4sF,oBAAA;AACjL;AA6CA,IAAMS,YAAA,GAAe;AAOrB,IAAMC,sBAAA,GAAN,MAA6B;EAC3BviH,YAAA,EAAc;IACZ,KAAKwiH,YAAA,GAAe;IACpB,KAAKC,UAAA,GAAa;IAClB,KAAKC,aAAA,GAAgB;IACrB,KAAKC,WAAA,GAAc;IACnB,KAAKC,UAAA,GAAa;IAClB,KAAKC,QAAA,GAAW;IAChB,KAAKC,MAAA,GAAS;IACd,KAAKC,OAAA,GAAU;IACf,KAAKxW,WAAA,GAAc;EACrB;EACAjkE,OAAOmoE,UAAA,EAAY;IACjB,MAAM9pE,MAAA,GAAS8pE,UAAA,CAAW6G,SAAA,CAAU;IACpC,KAAK9G,WAAA,GAAcC,UAAA;IACnB,IAAI,KAAKqS,MAAA,IAAU,CAACn8E,MAAA,CAAO2xB,KAAA,EAAO;MAChCm4C,UAAA,CAAWiH,UAAA,CAAW;QACpBp/C,KAAA,EAAO,KAAKwqD;MACd,CAAC;IACH;IACA,IAAI,KAAKC,OAAA,IAAW,CAACp8E,MAAA,CAAOgyB,MAAA,EAAQ;MAClC83C,UAAA,CAAWiH,UAAA,CAAW;QACpB/+C,MAAA,EAAQ,KAAKoqD;MACf,CAAC;IACH;IACAtS,UAAA,CAAWvtC,WAAA,CAAY/7C,SAAA,CAAUrW,GAAA,CAAIwxG,YAAY;IACjD,KAAK/V,WAAA,GAAc;EACrB;EAAA;AAAA;AAAA;AAAA;EAKArkB,IAAInnF,KAAA,GAAQ,IAAI;IACd,KAAK2hH,aAAA,GAAgB;IACrB,KAAKD,UAAA,GAAa1hH,KAAA;IAClB,KAAK4hH,WAAA,GAAc;IACnB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA16B,KAAKlnF,KAAA,GAAQ,IAAI;IACf,KAAK8hH,QAAA,GAAW9hH,KAAA;IAChB,KAAK6hH,UAAA,GAAa;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAt3B,OAAOvqF,KAAA,GAAQ,IAAI;IACjB,KAAK0hH,UAAA,GAAa;IAClB,KAAKC,aAAA,GAAgB3hH,KAAA;IACrB,KAAK4hH,WAAA,GAAc;IACnB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAv3B,MAAMrqF,KAAA,GAAQ,IAAI;IAChB,KAAK8hH,QAAA,GAAW9hH,KAAA;IAChB,KAAK6hH,UAAA,GAAa;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA7jB,MAAMh+F,KAAA,GAAQ,IAAI;IAChB,KAAK8hH,QAAA,GAAW9hH,KAAA;IAChB,KAAK6hH,UAAA,GAAa;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA5jB,IAAIj+F,KAAA,GAAQ,IAAI;IACd,KAAK8hH,QAAA,GAAW9hH,KAAA;IAChB,KAAK6hH,UAAA,GAAa;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAtqD,MAAMv3D,KAAA,GAAQ,IAAI;IAChB,IAAI,KAAKyvG,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAYkH,UAAA,CAAW;QAC1Bp/C,KAAA,EAAOv3D;MACT,CAAC;IACH,OAAO;MACL,KAAK+hH,MAAA,GAAS/hH,KAAA;IAChB;IACA,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA43D,OAAO53D,KAAA,GAAQ,IAAI;IACjB,IAAI,KAAKyvG,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAYkH,UAAA,CAAW;QAC1B/+C,MAAA,EAAQ53D;MACV,CAAC;IACH,OAAO;MACL,KAAKgiH,OAAA,GAAUhiH,KAAA;IACjB;IACA,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAiiH,mBAAmBxc,MAAA,GAAS,IAAI;IAC9B,KAAKve,IAAA,CAAKue,MAAM;IAChB,KAAKoc,UAAA,GAAa;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAK,iBAAiBzc,MAAA,GAAS,IAAI;IAC5B,KAAKte,GAAA,CAAIse,MAAM;IACf,KAAKmc,WAAA,GAAc;IACnB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKApL,MAAA,EAAQ;IAIN,IAAI,CAAC,KAAK/G,WAAA,IAAe,CAAC,KAAKA,WAAA,CAAYrjC,WAAA,CAAY,GAAG;MACxD;IACF;IACA,MAAM5rD,MAAA,GAAS,KAAKivF,WAAA,CAAYE,cAAA,CAAelvF,KAAA;IAC/C,MAAM0hG,YAAA,GAAe,KAAK1S,WAAA,CAAYttC,WAAA,CAAY1hD,KAAA;IAClD,MAAMmlB,MAAA,GAAS,KAAK6pE,WAAA,CAAY8G,SAAA,CAAU;IAC1C,MAAM;MACJh/C,KAAA;MACAK,MAAA;MACAw/C,QAAA;MACAC;IACF,IAAIzxE,MAAA;IACJ,MAAMw8E,yBAAA,IAA6B7qD,KAAA,KAAU,UAAUA,KAAA,KAAU,aAAa,CAAC6/C,QAAA,IAAYA,QAAA,KAAa,UAAUA,QAAA,KAAa;IAC/H,MAAMiL,uBAAA,IAA2BzqD,MAAA,KAAW,UAAUA,MAAA,KAAW,aAAa,CAACy/C,SAAA,IAAaA,SAAA,KAAc,UAAUA,SAAA,KAAc;IAClI,MAAMiL,SAAA,GAAY,KAAKT,UAAA;IACvB,MAAMU,OAAA,GAAU,KAAKT,QAAA;IACrB,MAAM3gB,KAAA,GAAQ,KAAKsO,WAAA,CAAY8G,SAAA,CAAU,EAAEzwC,SAAA,KAAc;IACzD,IAAI08C,UAAA,GAAa;IACjB,IAAIC,WAAA,GAAc;IAClB,IAAIjH,cAAA,GAAiB;IACrB,IAAI4G,yBAAA,EAA2B;MAC7B5G,cAAA,GAAiB;IACnB,WAAW8G,SAAA,KAAc,UAAU;MACjC9G,cAAA,GAAiB;MACjB,IAAIra,KAAA,EAAO;QACTshB,WAAA,GAAcF,OAAA;MAChB,OAAO;QACLC,UAAA,GAAaD,OAAA;MACf;IACF,WAAWphB,KAAA,EAAO;MAChB,IAAImhB,SAAA,KAAc,UAAUA,SAAA,KAAc,OAAO;QAC/C9G,cAAA,GAAiB;QACjBgH,UAAA,GAAaD,OAAA;MACf,WAAWD,SAAA,KAAc,WAAWA,SAAA,KAAc,SAAS;QACzD9G,cAAA,GAAiB;QACjBiH,WAAA,GAAcF,OAAA;MAChB;IACF,WAAWD,SAAA,KAAc,UAAUA,SAAA,KAAc,SAAS;MACxD9G,cAAA,GAAiB;MACjBgH,UAAA,GAAaD,OAAA;IACf,WAAWD,SAAA,KAAc,WAAWA,SAAA,KAAc,OAAO;MACvD9G,cAAA,GAAiB;MACjBiH,WAAA,GAAcF,OAAA;IAChB;IACA/hG,MAAA,CAAOtS,QAAA,GAAW,KAAKuzG,YAAA;IACvBjhG,MAAA,CAAOgiG,UAAA,GAAaJ,yBAAA,GAA4B,MAAMI,UAAA;IACtDhiG,MAAA,CAAOkiG,SAAA,GAAYL,uBAAA,GAA0B,MAAM,KAAKX,UAAA;IACxDlhG,MAAA,CAAOmiG,YAAA,GAAe,KAAKhB,aAAA;IAC3BnhG,MAAA,CAAOiiG,WAAA,GAAcL,yBAAA,GAA4B,MAAMK,WAAA;IACvDN,YAAA,CAAa3G,cAAA,GAAiBA,cAAA;IAC9B2G,YAAA,CAAa5G,UAAA,GAAa8G,uBAAA,GAA0B,eAAe,KAAKT,WAAA;EAC1E;EAAA;AAAA;AAAA;AAAA;EAKAh5D,QAAA,EAAU;IACR,IAAI,KAAK4iD,WAAA,IAAe,CAAC,KAAKiE,WAAA,EAAa;MACzC;IACF;IACA,MAAMjvF,MAAA,GAAS,KAAKivF,WAAA,CAAYE,cAAA,CAAelvF,KAAA;IAC/C,MAAM2E,MAAA,GAAS,KAAKqqF,WAAA,CAAYttC,WAAA;IAChC,MAAMggD,YAAA,GAAe/8F,MAAA,CAAO3E,KAAA;IAC5B2E,MAAA,CAAOgB,SAAA,CAAUnW,MAAA,CAAOsxG,YAAY;IACpCY,YAAA,CAAa3G,cAAA,GAAiB2G,YAAA,CAAa5G,UAAA,GAAa/6F,MAAA,CAAOkiG,SAAA,GAAYliG,MAAA,CAAOmiG,YAAA,GAAeniG,MAAA,CAAOgiG,UAAA,GAAahiG,MAAA,CAAOiiG,WAAA,GAAcjiG,MAAA,CAAOtS,QAAA,GAAW;IAC5J,KAAKuhG,WAAA,GAAc;IACnB,KAAKjE,WAAA,GAAc;EACrB;AACF;AAGA,IAAMoX,uBAAA,GAAN,MAAMA,uBAAA,CAAuB;EAC3B3jH,YAAYuvG,cAAA,EAAgB1jF,YAAWmzC,SAAA,EAAWk6C,iBAAA,EAAmB;IACnE,KAAK3J,cAAA,GAAiBA,cAAA;IACtB,KAAK1jF,SAAA,GAAYA;IACjB,KAAKmzC,SAAA,GAAYA,SAAA;IACjB,KAAKk6C,iBAAA,GAAoBA,iBAAA;EAC3B;EAAA;AAAA;AAAA;EAIA0K,OAAA,EAAS;IACP,OAAO,IAAIrB,sBAAA,CAAuB;EACpC;EAAA;AAAA;AAAA;AAAA;EAKAsB,oBAAoB1tC,MAAA,EAAQ;IAC1B,OAAO,IAAI2iC,iCAAA,CAAkC3iC,MAAA,EAAQ,KAAKo5B,cAAA,EAAgB,KAAK1jF,SAAA,EAAW,KAAKmzC,SAAA,EAAW,KAAKk6C,iBAAiB;EAClI;AAaF;AAXIyK,uBAAA,CAAKp5G,IAAA,GAAO,SAASu5G,+BAA+Bl/G,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAK++G,uBAAA,EAA2Bl5G,QAAA,CAAYo5F,aAAa,GAAMp5F,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAcosD,QAAQ,GAAMpsD,QAAA,CAASyqG,gBAAgB,CAAC;AAC1J;AAGAyO,uBAAA,CAAKj5G,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO69G,uBAAA;EACP/4G,OAAA,EAAS+4G,uBAAA,CAAuBp5G,IAAA;EAChC8M,UAAA,EAAY;AACd,CAAC;AA9BL,IAAM0sG,sBAAA,GAANJ,uBAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOliH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi5G,sBAAA,EAAwB,CAAC;IAC/Fl8G,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASg8F;EACX,GAAG;IACDh8F,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAWgvD;EACb,GAAG;IACDhvD,IAAA,EAAMqtG;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAI8O,YAAA,GAAe;AAWnB,IAAMC,QAAA,GAAN,MAAMA,QAAA,CAAQ;EACZjkH,YACAkkH,gBAAA,EAAkBhL,iBAAA,EAAmBhM,yBAAA,EAA2BiX,gBAAA,EAAkB5O,mBAAA,EAAqB7nE,SAAA,EAAWuwB,OAAA,EAASpyC,YAAWu4F,eAAA,EAAiB5O,SAAA,EAAWC,uBAAA,EAAyB4O,qBAAA,EAAuB;IAChN,KAAKH,gBAAA,GAAmBA,gBAAA;IACxB,KAAKhL,iBAAA,GAAoBA,iBAAA;IACzB,KAAKhM,yBAAA,GAA4BA,yBAAA;IACjC,KAAKiX,gBAAA,GAAmBA,gBAAA;IACxB,KAAK5O,mBAAA,GAAsBA,mBAAA;IAC3B,KAAK7nE,SAAA,GAAYA,SAAA;IACjB,KAAKuwB,OAAA,GAAUA,OAAA;IACf,KAAKpyC,SAAA,GAAYA;IACjB,KAAKu4F,eAAA,GAAkBA,eAAA;IACvB,KAAK5O,SAAA,GAAYA,SAAA;IACjB,KAAKC,uBAAA,GAA0BA,uBAAA;IAC/B,KAAK4O,qBAAA,GAAwBA,qBAAA;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA3+F,OAAOihB,MAAA,EAAQ;IACb,MAAMznB,IAAA,GAAO,KAAKolG,kBAAA,CAAmB;IACrC,MAAMC,IAAA,GAAO,KAAKC,kBAAA,CAAmBtlG,IAAI;IACzC,MAAMulG,YAAA,GAAe,KAAKC,mBAAA,CAAoBH,IAAI;IAClD,MAAMI,aAAA,GAAgB,IAAIpS,aAAA,CAAc5rE,MAAM;IAC9Cg+E,aAAA,CAAc99C,SAAA,GAAY89C,aAAA,CAAc99C,SAAA,IAAa,KAAKu9C,eAAA,CAAgBrjH,KAAA;IAC1E,OAAO,IAAIo0G,UAAA,CAAWsP,YAAA,EAAcvlG,IAAA,EAAMqlG,IAAA,EAAMI,aAAA,EAAe,KAAK1mD,OAAA,EAAS,KAAKs3C,mBAAA,EAAqB,KAAK1pF,SAAA,EAAW,KAAK2pF,SAAA,EAAW,KAAKC,uBAAA,EAAyB,KAAK4O,qBAAA,KAA0B,gBAAgB;EACtN;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAp1G,SAAA,EAAW;IACT,OAAO,KAAKk1G,gBAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKAK,mBAAmBtlG,IAAA,EAAM;IACvB,MAAMqlG,IAAA,GAAO,KAAK14F,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAC/CoxG,IAAA,CAAKj/F,EAAA,GAAK,eAAe0+F,YAAA,EAAc;IACvCO,IAAA,CAAKp9F,SAAA,CAAUrW,GAAA,CAAI,kBAAkB;IACrCoO,IAAA,CAAKrL,WAAA,CAAY0wG,IAAI;IACrB,OAAOA,IAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAD,mBAAA,EAAqB;IACnB,MAAMplG,IAAA,GAAO,KAAK2M,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAC/C,KAAK+lG,iBAAA,CAAkBrE,mBAAA,CAAoB,EAAEhhG,WAAA,CAAYqL,IAAI;IAC7D,OAAOA,IAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAwlG,oBAAoBH,IAAA,EAAM;IAGxB,IAAI,CAAC,KAAKpX,OAAA,EAAS;MACjB,KAAKA,OAAA,GAAU,KAAKz/D,SAAA,CAAUvsC,GAAA,CAAIkxD,cAAc;IAClD;IACA,OAAO,IAAI26C,eAAA,CAAgBuX,IAAA,EAAM,KAAKrX,yBAAA,EAA2B,KAAKC,OAAA,EAAS,KAAKz/D,SAAA,EAAW,KAAK7hB,SAAS;EAC/G;AAaF;AAXIo4F,QAAA,CAAK15G,IAAA,GAAO,SAASq6G,gBAAgBhgH,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAKq/G,QAAA,EAAYx5G,QAAA,CAAS6nG,qBAAqB,GAAM7nG,QAAA,CAASyqG,gBAAgB,GAAMzqG,QAAA,CAAYokG,0BAAwB,GAAMpkG,QAAA,CAASs5G,sBAAsB,GAAMt5G,QAAA,CAASspG,yBAAyB,GAAMtpG,QAAA,CAAY0nD,QAAQ,GAAM1nD,QAAA,CAAYsB,MAAM,GAAMtB,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAY+vE,cAAc,GAAM/vE,QAAA,CAAYq2C,QAAQ,GAAMr2C,QAAA,CAASkqG,6BAA6B,GAAMlqG,QAAA,CAAS0hF,qBAAA,EAAuB,CAAC,CAAC;AAC1a;AAGA83B,QAAA,CAAKv5G,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOm+G,QAAA;EACPr5G,OAAA,EAASq5G,QAAA,CAAQ15G,IAAA;EACjB8M,UAAA,EAAY;AACd,CAAC;AAjFL,IAAMwtG,OAAA,GAANZ,QAAA;AAAA,CAoFC,MAAM;EACL,CAAC,OAAOxiH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+5G,OAAA,EAAS,CAAC;IAChFh9G,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAMyqG;EACR,GAAG;IACDzqG,IAAA,EAAMqtG;EACR,GAAG;IACDrtG,IAAA,EAASgnG;EACX,GAAG;IACDhnG,IAAA,EAAMk8G;EACR,GAAG;IACDl8G,IAAA,EAAMksG;EACR,GAAG;IACDlsG,IAAA,EAASsqD;EACX,GAAG;IACDtqD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAS2yE;EACX,GAAG;IACD3yE,IAAA,EAASi5C;EACX,GAAG;IACDj5C,IAAA,EAAM8sG;EACR,GAAG;IACD9sG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,GAAG;MACDtkF,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAMwhG,mBAAA,GAAsB,CAAC;EAC3BpH,OAAA,EAAS;EACTI,OAAA,EAAS;EACTE,QAAA,EAAU;EACVE,QAAA,EAAU;AACZ,GAAG;EACDR,OAAA,EAAS;EACTI,OAAA,EAAS;EACTE,QAAA,EAAU;EACVE,QAAA,EAAU;AACZ,GAAG;EACDR,OAAA,EAAS;EACTI,OAAA,EAAS;EACTE,QAAA,EAAU;EACVE,QAAA,EAAU;AACZ,GAAG;EACDR,OAAA,EAAS;EACTI,OAAA,EAAS;EACTE,QAAA,EAAU;EACVE,QAAA,EAAU;AACZ,CAAC;AAED,IAAM6G,qCAAA,GAAwC,IAAI50G,cAAA,CAAe,yCAAyC;EACxGkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;IACb,MAAMyzG,OAAA,GAAU7yG,MAAA,CAAOq5G,OAAO;IAC9B,OAAO,MAAMxG,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;EACnD;AACF,CAAC;AAKD,IAAM4S,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBhlH,YACAg1F,UAAA,EAAY;IACV,KAAKA,UAAA,GAAaA,UAAA;EACpB;AAcF;AAZIgwB,iBAAA,CAAKz6G,IAAA,GAAO,SAAS06G,yBAAyBrgH,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKogH,iBAAA,EAAqBh5D,iBAAA,CAAqBG,UAAU,CAAC;AACxE;AAGA64D,iBAAA,CAAKx7E,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMm9G,iBAAA;EACNt7E,SAAA,EAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,GAAG,CAAC,IAAI,kBAAkB,EAAE,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACpGG,QAAA,EAAU,CAAC,kBAAkB;EAC7BC,UAAA,EAAY;AACd,CAAC;AAhBL,IAAMo7E,gBAAA,GAANF,iBAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOvjH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBo6G,gBAAA,EAAkB,CAAC;IACzFr9G,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMg5D,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EAAA;EAExB,IAAI98B,QAAA,EAAU;IACZ,OAAO,KAAKwxB,QAAA;EACd;EACA,IAAIxxB,QAAQA,OAAA,EAAS;IACnB,KAAKwxB,QAAA,GAAWxxB,OAAA;IAChB,IAAI,KAAK+8B,SAAA,EAAW;MAClB,KAAKC,uBAAA,CAAwB,KAAKD,SAAS;IAC7C;EACF;EAAA;EAEA,IAAI98B,QAAA,EAAU;IACZ,OAAO,KAAKwxB,QAAA;EACd;EACA,IAAIxxB,QAAQA,OAAA,EAAS;IACnB,KAAKwxB,QAAA,GAAWxxB,OAAA;IAChB,IAAI,KAAK88B,SAAA,EAAW;MAClB,KAAKC,uBAAA,CAAwB,KAAKD,SAAS;IAC7C;EACF;EAAA;EAEA,IAAIxS,oBAAA,EAAsB;IACxB,OAAO,KAAK0S,oBAAA;EACd;EACA,IAAI1S,oBAAoB7xG,KAAA,EAAO;IAC7B,KAAKukH,oBAAA,GAAuBvkH,KAAA;EAC9B;EAAA;EAEAf,YAAYulH,QAAA,EAAU1rB,WAAA,EAAaZ,gBAAA,EAAkBusB,qBAAA,EAAuB9qC,IAAA,EAAM;IAChF,KAAK6qC,QAAA,GAAWA,QAAA;IAChB,KAAK7qC,IAAA,GAAOA,IAAA;IACZ,KAAK+qC,qBAAA,GAAwBh9D,YAAA,CAAazM,KAAA;IAC1C,KAAK0pE,mBAAA,GAAsBj9D,YAAA,CAAazM,KAAA;IACxC,KAAK2pE,mBAAA,GAAsBl9D,YAAA,CAAazM,KAAA;IACxC,KAAK4pE,qBAAA,GAAwBn9D,YAAA,CAAazM,KAAA;IAC1C,KAAKspE,oBAAA,GAAuB;IAC5B,KAAKrnD,OAAA,GAAUzyD,MAAA,CAAOO,MAAM;IAE5B,KAAK85G,cAAA,GAAiB;IAEtB,KAAKlwG,IAAA,GAAO;IAEZ,KAAKmwG,YAAA,GAAe;IAEpB,KAAKpT,WAAA,GAAc;IAEnB,KAAKqT,YAAA,GAAe;IAEpB,KAAKhJ,kBAAA,GAAqB;IAE1B,KAAKE,aAAA,GAAgB;IAErB,KAAK77G,IAAA,GAAO;IAEZ,KAAK+1G,aAAA,GAAgB,IAAIpwE,YAAA,CAAa;IAEtC,KAAKi/E,cAAA,GAAiB,IAAIj/E,YAAA,CAAa;IAEvC,KAAKuB,MAAA,GAAS,IAAIvB,YAAA,CAAa;IAE/B,KAAK6B,MAAA,GAAS,IAAI7B,YAAA,CAAa;IAE/B,KAAKk/E,cAAA,GAAiB,IAAIl/E,YAAA,CAAa;IAEvC,KAAKm/E,mBAAA,GAAsB,IAAIn/E,YAAA,CAAa;IAC5C,KAAKo/E,eAAA,GAAkB,IAAI/Z,cAAA,CAAevS,WAAA,EAAaZ,gBAAgB;IACvE,KAAKmtB,sBAAA,GAAyBZ,qBAAA;IAC9B,KAAKhT,cAAA,GAAiB,KAAK4T,sBAAA,CAAuB;EACpD;EAAA;EAEA,IAAI3V,WAAA,EAAa;IACf,OAAO,KAAKD,WAAA;EACd;EAAA;EAEA,IAAIn4C,IAAA,EAAM;IACR,OAAO,KAAKqiB,IAAA,GAAO,KAAKA,IAAA,CAAK35E,KAAA,GAAQ;EACvC;EACA+gB,YAAA,EAAc;IACZ,KAAK4jG,mBAAA,CAAoB/6E,WAAA,CAAY;IACrC,KAAKg7E,mBAAA,CAAoBh7E,WAAA,CAAY;IACrC,KAAK86E,qBAAA,CAAsB96E,WAAA,CAAY;IACvC,KAAKi7E,qBAAA,CAAsBj7E,WAAA,CAAY;IACvC,IAAI,KAAK6lE,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAY7mD,OAAA,CAAQ;IAC3B;EACF;EACA9hB,YAAYC,OAAA,EAAS;IACnB,IAAI,KAAKs9E,SAAA,EAAW;MAClB,KAAKC,uBAAA,CAAwB,KAAKD,SAAS;MAC3C,KAAK5U,WAAA,CAAYkH,UAAA,CAAW;QAC1Bp/C,KAAA,EAAO,KAAKA,KAAA;QACZ2/C,QAAA,EAAU,KAAKA,QAAA;QACft/C,MAAA,EAAQ,KAAKA,MAAA;QACbu/C,SAAA,EAAW,KAAKA;MAClB,CAAC;MACD,IAAIpwE,OAAA,CAAQ,QAAQ,KAAK,KAAKnyB,IAAA,EAAM;QAClC,KAAKyvG,SAAA,CAAU7N,KAAA,CAAM;MACvB;IACF;IACA,IAAIzvE,OAAA,CAAQ,MAAM,GAAG;MACnB,KAAKnyB,IAAA,GAAO,KAAK0wG,cAAA,CAAe,IAAI,KAAKC,cAAA,CAAe;IAC1D;EACF;EAAA;EAEAC,eAAA,EAAiB;IACf,IAAI,CAAC,KAAKxN,SAAA,IAAa,CAAC,KAAKA,SAAA,CAAUj3G,MAAA,EAAQ;MAC7C,KAAKi3G,SAAA,GAAY+L,mBAAA;IACnB;IACA,MAAMrU,UAAA,GAAa,KAAKD,WAAA,GAAc,KAAK+U,QAAA,CAAS7/F,MAAA,CAAO,KAAK8gG,YAAA,CAAa,CAAC;IAC9E,KAAKd,mBAAA,GAAsBjV,UAAA,CAAW2G,WAAA,CAAY,EAAEtsE,SAAA,CAAU,MAAM,KAAKxC,MAAA,CAAOQ,IAAA,CAAK,CAAC;IACtF,KAAK68E,mBAAA,GAAsBlV,UAAA,CAAW4G,WAAA,CAAY,EAAEvsE,SAAA,CAAU,MAAM,KAAKlC,MAAA,CAAOE,IAAA,CAAK,CAAC;IACtF2nE,UAAA,CAAWmD,aAAA,CAAc,EAAE9oE,SAAA,CAAU9gC,KAAA,IAAS;MAC5C,KAAKi8G,cAAA,CAAen5G,IAAA,CAAK9C,KAAK;MAC9B,IAAIA,KAAA,CAAM89D,OAAA,KAAY1N,MAAA,IAAU,CAAC,KAAK0rD,YAAA,IAAgB,CAAC1qD,cAAA,CAAepxD,KAAK,GAAG;QAC5EA,KAAA,CAAMqe,cAAA,CAAe;QACrB,KAAKi+F,cAAA,CAAe;MACtB;IACF,CAAC;IACD,KAAK9V,WAAA,CAAY8D,oBAAA,CAAqB,EAAExpE,SAAA,CAAU9gC,KAAA,IAAS;MACzD,MAAMmsE,MAAA,GAAS,KAAKswC,iBAAA,CAAkB;MACtC,MAAMxpG,MAAA,GAASu8C,eAAA,CAAgBxvD,KAAK;MACpC,IAAI,CAACmsE,MAAA,IAAUA,MAAA,KAAWl5D,MAAA,IAAU,CAACk5D,MAAA,CAAO/G,QAAA,CAASnyD,MAAM,GAAG;QAC5D,KAAKipG,mBAAA,CAAoBp5G,IAAA,CAAK9C,KAAK;MACrC;IACF,CAAC;EACH;EAAA;EAEAw8G,aAAA,EAAe;IACb,MAAMpQ,gBAAA,GAAmB,KAAKgP,SAAA,GAAY,KAAKhP,gBAAA,IAAoB,KAAKsQ,uBAAA,CAAwB;IAChG,MAAM/B,aAAA,GAAgB,IAAIpS,aAAA,CAAc;MACtC1rC,SAAA,EAAW,KAAK6T,IAAA;MAChB07B,gBAAA;MACA5D,cAAA,EAAgB,KAAKA,cAAA;MACrBE,WAAA,EAAa,KAAKA,WAAA;MAClBE,mBAAA,EAAqB,KAAKA;IAC5B,CAAC;IACD,IAAI,KAAKt6C,KAAA,IAAS,KAAKA,KAAA,KAAU,GAAG;MAClCqsD,aAAA,CAAcrsD,KAAA,GAAQ,KAAKA,KAAA;IAC7B;IACA,IAAI,KAAKK,MAAA,IAAU,KAAKA,MAAA,KAAW,GAAG;MACpCgsD,aAAA,CAAchsD,MAAA,GAAS,KAAKA,MAAA;IAC9B;IACA,IAAI,KAAKs/C,QAAA,IAAY,KAAKA,QAAA,KAAa,GAAG;MACxC0M,aAAA,CAAc1M,QAAA,GAAW,KAAKA,QAAA;IAChC;IACA,IAAI,KAAKC,SAAA,IAAa,KAAKA,SAAA,KAAc,GAAG;MAC1CyM,aAAA,CAAczM,SAAA,GAAY,KAAKA,SAAA;IACjC;IACA,IAAI,KAAKvF,aAAA,EAAe;MACtBgS,aAAA,CAAchS,aAAA,GAAgB,KAAKA,aAAA;IACrC;IACA,IAAI,KAAKF,UAAA,EAAY;MACnBkS,aAAA,CAAclS,UAAA,GAAa,KAAKA,UAAA;IAClC;IACA,OAAOkS,aAAA;EACT;EAAA;EAEAU,wBAAwBjP,gBAAA,EAAkB;IACxC,MAAM2C,SAAA,GAAY,KAAKA,SAAA,CAAU51G,GAAA,CAAIwjH,eAAA,KAAoB;MACvDjJ,OAAA,EAASiJ,eAAA,CAAgBjJ,OAAA;MACzBI,OAAA,EAAS6I,eAAA,CAAgB7I,OAAA;MACzBE,QAAA,EAAU2I,eAAA,CAAgB3I,QAAA;MAC1BE,QAAA,EAAUyI,eAAA,CAAgBzI,QAAA;MAC1B71B,OAAA,EAASs+B,eAAA,CAAgBt+B,OAAA,IAAW,KAAKA,OAAA;MACzCC,OAAA,EAASq+B,eAAA,CAAgBr+B,OAAA,IAAW,KAAKA,OAAA;MACzCmqB,UAAA,EAAYkU,eAAA,CAAgBlU,UAAA,IAAc;IAC5C,EAAE;IACF,OAAO2D,gBAAA,CAAiB6D,SAAA,CAAU,KAAK2M,UAAA,CAAW,CAAC,EAAEjK,aAAA,CAAc5D,SAAS,EAAE+D,sBAAA,CAAuB,KAAKC,kBAAkB,EAAEG,QAAA,CAAS,KAAK97G,IAAI,EAAE47G,iBAAA,CAAkB,KAAKC,aAAa,EAAEL,kBAAA,CAAmB,KAAKiJ,cAAc,EAAEzI,kBAAA,CAAmB,KAAK2I,YAAY,EAAEvI,qBAAA,CAAsB,KAAKqJ,uBAAuB;EAC1T;EAAA;EAEAH,wBAAA,EAA0B;IACxB,MAAMjP,QAAA,GAAW,KAAK8N,QAAA,CAASt2G,QAAA,CAAS,EAAE40G,mBAAA,CAAoB,KAAK+C,UAAA,CAAW,CAAC;IAC/E,KAAKvB,uBAAA,CAAwB5N,QAAQ;IACrC,OAAOA,QAAA;EACT;EACAmP,WAAA,EAAa;IACX,IAAI,KAAKzwC,MAAA,YAAkB+uC,gBAAA,EAAkB;MAC3C,OAAO,KAAK/uC,MAAA,CAAO6e,UAAA;IACrB,OAAO;MACL,OAAO,KAAK7e,MAAA;IACd;EACF;EACAswC,kBAAA,EAAoB;IAClB,IAAI,KAAKtwC,MAAA,YAAkB+uC,gBAAA,EAAkB;MAC3C,OAAO,KAAK/uC,MAAA,CAAO6e,UAAA,CAAW/pC,aAAA;IAChC;IACA,IAAI,KAAKkrB,MAAA,YAAkBhqB,UAAA,EAAY;MACrC,OAAO,KAAKgqB,MAAA,CAAOlrB,aAAA;IACrB;IACA,IAAI,OAAO4M,OAAA,KAAY,eAAe,KAAKse,MAAA,YAAkBte,OAAA,EAAS;MACpE,OAAO,KAAKse,MAAA;IACd;IACA,OAAO;EACT;EAAA;EAEAkwC,eAAA,EAAiB;IACf,IAAI,CAAC,KAAK7V,WAAA,EAAa;MACrB,KAAK+V,cAAA,CAAe;IACtB,OAAO;MAEL,KAAK/V,WAAA,CAAY8G,SAAA,CAAU,EAAE5E,WAAA,GAAc,KAAKA,WAAA;IAClD;IACA,IAAI,CAAC,KAAKlC,WAAA,CAAYrjC,WAAA,CAAY,GAAG;MACnC,KAAKqjC,WAAA,CAAYloE,MAAA,CAAO,KAAK69E,eAAe;IAC9C;IACA,IAAI,KAAKzT,WAAA,EAAa;MACpB,KAAK+S,qBAAA,GAAwB,KAAKjV,WAAA,CAAY2G,aAAA,CAAc,EAAErsE,SAAA,CAAU9gC,KAAA,IAAS;QAC/E,KAAKmtG,aAAA,CAAcruE,IAAA,CAAK9+B,KAAK;MAC/B,CAAC;IACH,OAAO;MACL,KAAKy7G,qBAAA,CAAsB96E,WAAA,CAAY;IACzC;IACA,KAAKi7E,qBAAA,CAAsBj7E,WAAA,CAAY;IAGvC,IAAI,KAAKq7E,cAAA,CAAezuC,SAAA,CAAUz1E,MAAA,GAAS,GAAG;MAC5C,KAAK8jH,qBAAA,GAAwB,KAAKR,SAAA,CAAUpL,eAAA,CAAgBpwG,IAAA,CAAKk9G,SAAA,CAAU,MAAM,KAAKd,cAAA,CAAezuC,SAAA,CAAUz1E,MAAA,GAAS,CAAC,CAAC,EAAEgpC,SAAA,CAAU77B,QAAA,IAAY;QAChJ,KAAKgvD,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAK63G,cAAA,CAAel9E,IAAA,CAAK75B,QAAQ,CAAC;QACzD,IAAI,KAAK+2G,cAAA,CAAezuC,SAAA,CAAUz1E,MAAA,KAAW,GAAG;UAC9C,KAAK8jH,qBAAA,CAAsBj7E,WAAA,CAAY;QACzC;MACF,CAAC;IACH;EACF;EAAA;EAEA27E,eAAA,EAAiB;IACf,IAAI,KAAK9V,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAY5nE,MAAA,CAAO;IAC1B;IACA,KAAK68E,qBAAA,CAAsB96E,WAAA,CAAY;IACvC,KAAKi7E,qBAAA,CAAsBj7E,WAAA,CAAY;EACzC;AA+CF;AA7CIw6E,oBAAA,CAAK56G,IAAA,GAAO,SAASw8G,4BAA4BniH,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKugH,oBAAA,EAAwBn5D,iBAAA,CAAkB64D,OAAO,GAAM74D,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAkB+4D,qCAAqC,GAAM/4D,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,CAAC;AAC/P;AAGA2qC,oBAAA,CAAK37E,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMs9G,oBAAA;EACNz7E,SAAA,EAAW,CAAC,CAAC,IAAI,yBAAyB,EAAE,GAAG,CAAC,IAAI,qBAAqB,EAAE,GAAG,CAAC,IAAI,uBAAuB,EAAE,CAAC;EAC7GC,MAAA,EAAQ;IACNwsC,MAAA,EAAQ,CAAIvpB,UAAA,CAAasnB,IAAA,EAAM,6BAA6B,QAAQ;IACpE6kC,SAAA,EAAW,CAAInsD,UAAA,CAAasnB,IAAA,EAAM,gCAAgC,WAAW;IAC7EkiC,gBAAA,EAAkB,CAAIxpD,UAAA,CAAasnB,IAAA,EAAM,uCAAuC,kBAAkB;IAClGmU,OAAA,EAAS,CAAIz7B,UAAA,CAAasnB,IAAA,EAAM,8BAA8B,SAAS;IACvEoU,OAAA,EAAS,CAAI17B,UAAA,CAAasnB,IAAA,EAAM,8BAA8B,SAAS;IACvE5b,KAAA,EAAO,CAAI1L,UAAA,CAAasnB,IAAA,EAAM,4BAA4B,OAAO;IACjEvb,MAAA,EAAQ,CAAI/L,UAAA,CAAasnB,IAAA,EAAM,6BAA6B,QAAQ;IACpE+jC,QAAA,EAAU,CAAIrrD,UAAA,CAAasnB,IAAA,EAAM,+BAA+B,UAAU;IAC1EgkC,SAAA,EAAW,CAAItrD,UAAA,CAAasnB,IAAA,EAAM,gCAAgC,WAAW;IAC7Ey+B,aAAA,EAAe,CAAI/lD,UAAA,CAAasnB,IAAA,EAAM,oCAAoC,eAAe;IACzFu+B,UAAA,EAAY,CAAI7lD,UAAA,CAAasnB,IAAA,EAAM,iCAAiC,YAAY;IAChF2xC,cAAA,EAAgB,CAAIj5D,UAAA,CAAasnB,IAAA,EAAM,qCAAqC,gBAAgB;IAC5Fs+B,cAAA,EAAgB,CAAI5lD,UAAA,CAAasnB,IAAA,EAAM,qCAAqC,gBAAgB;IAC5Fv+D,IAAA,EAAM,CAAIi3C,UAAA,CAAasnB,IAAA,EAAM,2BAA2B,MAAM;IAC9D4xC,YAAA,EAAc,CAAIl5D,UAAA,CAAasnB,IAAA,EAAM,mCAAmC,cAAc;IACtF2yC,uBAAA,EAAyB,CAAIj6D,UAAA,CAAasnB,IAAA,EAAM,wCAAwC,yBAAyB;IACjHw+B,WAAA,EAAa,CAAI9lD,UAAA,CAAaC,0BAAA,EAA4B,kCAAkC,eAAeC,gBAAgB;IAC3Hi5D,YAAA,EAAc,CAAIn5D,UAAA,CAAaC,0BAAA,EAA4B,mCAAmC,gBAAgBC,gBAAgB;IAC9HiwD,kBAAA,EAAoB,CAAInwD,UAAA,CAAaC,0BAAA,EAA4B,yCAAyC,sBAAsBC,gBAAgB;IAChJmwD,aAAA,EAAe,CAAIrwD,UAAA,CAAaC,0BAAA,EAA4B,oCAAoC,iBAAiBC,gBAAgB;IACjI1rD,IAAA,EAAM,CAAIwrD,UAAA,CAAaC,0BAAA,EAA4B,2BAA2B,QAAQC,gBAAgB;IACtG8lD,mBAAA,EAAqB,CAAIhmD,UAAA,CAAaC,0BAAA,EAA4B,0CAA0C,uBAAuBC,gBAAgB;EACrJ;EACAljB,OAAA,EAAS;IACPutE,aAAA,EAAe;IACf6O,cAAA,EAAgB;IAChB19E,MAAA,EAAQ;IACRM,MAAA,EAAQ;IACRq9E,cAAA,EAAgB;IAChBC,mBAAA,EAAqB;EACvB;EACAr8E,QAAA,EAAU,CAAC,qBAAqB;EAChCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BhjB,oBAAoB;AACjE,CAAC;AArRL,IAAMi9E,mBAAA,GAAN7B,oBAAA;AAAA,CAwRC,MAAM;EACL,CAAC,OAAO1jH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBk8G,mBAAA,EAAqB,CAAC;IAC5Fn/G,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAMg9G;EACR,GAAG;IACDh9G,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACuwG,qCAAqC;IAC9C,CAAC;EACH,GAAG;IACDl9G,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACF6yD,MAAA,EAAQ,CAAC;MACPtuE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,2BAA2B;IACpC,CAAC;IACDukG,SAAA,EAAW,CAAC;MACVlxG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,8BAA8B;IACvC,CAAC;IACD4hG,gBAAA,EAAkB,CAAC;MACjBvuG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,qCAAqC;IAC9C,CAAC;IACD6zE,OAAA,EAAS,CAAC;MACRxgF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,4BAA4B;IACrC,CAAC;IACD8zE,OAAA,EAAS,CAAC;MACRzgF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,4BAA4B;IACrC,CAAC;IACD8jD,KAAA,EAAO,CAAC;MACNzwD,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,0BAA0B;IACnC,CAAC;IACDmkD,MAAA,EAAQ,CAAC;MACP9wD,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,2BAA2B;IACpC,CAAC;IACDyjG,QAAA,EAAU,CAAC;MACTpwG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,6BAA6B;IACtC,CAAC;IACD0jG,SAAA,EAAW,CAAC;MACVrwG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,8BAA8B;IACvC,CAAC;IACDm+F,aAAA,EAAe,CAAC;MACd9qG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kCAAkC;IAC3C,CAAC;IACDi+F,UAAA,EAAY,CAAC;MACX5qG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,+BAA+B;IACxC,CAAC;IACDqxG,cAAA,EAAgB,CAAC;MACfh+G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,mCAAmC;IAC5C,CAAC;IACDg+F,cAAA,EAAgB,CAAC;MACf3qG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,mCAAmC;IAC5C,CAAC;IACDmB,IAAA,EAAM,CAAC;MACL9N,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,yBAAyB;IAClC,CAAC;IACDsxG,YAAA,EAAc,CAAC;MACbj+G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iCAAiC;IAC1C,CAAC;IACDqyG,uBAAA,EAAyB,CAAC;MACxBh/G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,sCAAsC;IAC/C,CAAC;IACDk+F,WAAA,EAAa,CAAC;MACZ7qG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDi5D,YAAA,EAAc,CAAC;MACbl+G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDiwD,kBAAA,EAAoB,CAAC;MACnBl1G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDmwD,aAAA,EAAe,CAAC;MACdp1G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD1rD,IAAA,EAAM,CAAC;MACLyG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD8lD,mBAAA,EAAqB,CAAC;MACpB/qG,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDqqD,aAAA,EAAe,CAAC;MACdtvG,IAAA,EAAMsiC;IACR,CAAC;IACD67E,cAAA,EAAgB,CAAC;MACfn+G,IAAA,EAAMsiC;IACR,CAAC;IACD7B,MAAA,EAAQ,CAAC;MACPzgC,IAAA,EAAMsiC;IACR,CAAC;IACDvB,MAAA,EAAQ,CAAC;MACP/gC,IAAA,EAAMsiC;IACR,CAAC;IACD87E,cAAA,EAAgB,CAAC;MACfp+G,IAAA,EAAMsiC;IACR,CAAC;IACD+7E,mBAAA,EAAqB,CAAC;MACpBr+G,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAEH,SAAS88E,uDAAuD5I,OAAA,EAAS;EACvE,OAAO,MAAMA,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;AACnD;AAEA,IAAM8U,8CAAA,GAAiD;EACrDztG,OAAA,EAASsrG,qCAAA;EACT94F,IAAA,EAAM,CAAC44F,OAAO;EACd1qG,UAAA,EAAY8sG;AACd;AACA,IAAME,cAAA,GAAN,MAAMA,cAAA,CAAc,EAiBpB;AAfIA,cAAA,CAAK58G,IAAA,GAAO,SAAS68G,sBAAsBxiH,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKuiH,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKtsG,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMs/G;AACR,CAAC;AAGDA,cAAA,CAAKpsG,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC6rG,OAAA,EAASqC,8CAA8C;EACnEj6F,OAAA,EAAS,CAACkuD,UAAA,EAAYk0B,YAAA,EAAc/D,eAAA,EAAiBA,eAAe;AACtE,CAAC;AAfL,IAAM+b,aAAA,GAANF,cAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAO1lH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBu8G,aAAA,EAAe,CAAC;IACtFx/G,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACkuD,UAAA,EAAYk0B,YAAA,EAAc/D,eAAA,EAAiB0b,mBAAA,EAAqB9B,gBAAgB;MAC1F73F,OAAA,EAAS,CAAC25F,mBAAA,EAAqB9B,gBAAA,EAAkB5Z,eAAe;MAChEtyF,SAAA,EAAW,CAAC6rG,OAAA,EAASqC,8CAA8C;IACrE,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AASH,IAAMI,2BAAA,GAAN,MAAMA,2BAAA,SAAmCpS,gBAAA,CAAiB;EACxDl1G,YAAY6rB,YAAWlU,QAAA,EAAU;IAC/B,MAAMkU,YAAWlU,QAAQ;EAC3B;EACAmK,YAAA,EAAc;IACZ,MAAMA,WAAA,CAAY;IAClB,IAAI,KAAKylG,oBAAA,IAAwB,KAAKC,mBAAA,EAAqB;MACzD,KAAK37F,SAAA,CAAUjV,mBAAA,CAAoB,KAAK2wG,oBAAA,EAAsB,KAAKC,mBAAmB;IACxF;EACF;EACA1S,iBAAA,EAAmB;IACjB,MAAMA,gBAAA,CAAiB;IACvB,KAAK2S,gCAAA,CAAiC;IACtC,KAAKC,4BAAA,CAA6B,MAAM,KAAKD,gCAAA,CAAiC,CAAC;EACjF;EACAA,iCAAA,EAAmC;IACjC,IAAI,CAAC,KAAKjgC,iBAAA,EAAmB;MAC3B;IACF;IACA,MAAMmgC,iBAAA,GAAoB,KAAKC,oBAAA,CAAqB;IACpD,MAAMzhG,MAAA,GAASwhG,iBAAA,IAAqB,KAAK97F,SAAA,CAAU9kB,IAAA;IACnDof,MAAA,CAAOtS,WAAA,CAAY,KAAK2zE,iBAAiB;EAC3C;EACAkgC,6BAA6BrkH,EAAA,EAAI;IAC/B,MAAM6c,SAAA,GAAY,KAAK2nG,aAAA,CAAc;IACrC,IAAI3nG,SAAA,EAAW;MACb,IAAI,KAAKsnG,mBAAA,EAAqB;QAC5B,KAAK37F,SAAA,CAAUjV,mBAAA,CAAoBsJ,SAAA,EAAW,KAAKsnG,mBAAmB;MACxE;MACA,KAAK37F,SAAA,CAAUjY,gBAAA,CAAiBsM,SAAA,EAAW7c,EAAE;MAC7C,KAAKmkH,mBAAA,GAAsBnkH,EAAA;IAC7B;EACF;EACAwkH,cAAA,EAAgB;IACd,IAAI,CAAC,KAAKN,oBAAA,EAAsB;MAC9B,MAAM17F,aAAY,KAAKA,SAAA;MACvB,IAAIA,WAAUi8F,iBAAA,EAAmB;QAC/B,KAAKP,oBAAA,GAAuB;MAC9B,WAAW17F,WAAUk8F,uBAAA,EAAyB;QAC5C,KAAKR,oBAAA,GAAuB;MAC9B,WAAW17F,WAAUm8F,oBAAA,EAAsB;QACzC,KAAKT,oBAAA,GAAuB;MAC9B,WAAW17F,WAAUo8F,mBAAA,EAAqB;QACxC,KAAKV,oBAAA,GAAuB;MAC9B;IACF;IACA,OAAO,KAAKA,oBAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKAK,qBAAA,EAAuB;IACrB,MAAM/7F,aAAY,KAAKA,SAAA;IACvB,OAAOA,WAAU87F,iBAAA,IAAqB97F,WAAUq8F,uBAAA,IAA2Br8F,WAAUs8F,oBAAA,IAAwBt8F,WAAUu8F,mBAAA,IAAuB;EAChJ;AAaF;AAXId,2BAAA,CAAK/8G,IAAA,GAAO,SAAS89G,mCAAmCzjH,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAK0iH,2BAAA,EAA+B78G,QAAA,CAAS2J,QAAQ,GAAM3J,QAAA,CAAcosD,QAAQ,CAAC;AAChG;AAGAywD,2BAAA,CAAK58G,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOwhH,2BAAA;EACP18G,OAAA,EAAS08G,2BAAA,CAA2B/8G,IAAA;EACpC8M,UAAA,EAAY;AACd,CAAC;AAlEL,IAAMixG,0BAAA,GAANhB,2BAAA;AAAA,CAqEC,MAAM;EACL,CAAC,OAAO7lH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw9G,0BAAA,EAA4B,CAAC;IACnGzgH,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAWgvD;EACb,CAAC,GAAG,IAAI;AACV,GAAG;;;ACrtGH,SAAS0xD,0CAA0Cp7E,EAAA,EAAIlb,GAAA,EAAK,CAAC;AAC7D,IAAMu2F,YAAA,GAAN,MAAmB;EACjBxoH,YAAA,EAAc;IAEZ,KAAKmjE,IAAA,GAAO;IAEZ,KAAKsvC,UAAA,GAAa;IAElB,KAAKC,WAAA,GAAc;IAEnB,KAAKC,aAAA,GAAgB;IAErB,KAAKmT,YAAA,GAAe;IAEpB,KAAKxtD,KAAA,GAAQ;IAEb,KAAKK,MAAA,GAAS;IAEd,KAAKrlD,IAAA,GAAO;IAEZ,KAAKm1G,eAAA,GAAkB;IAEvB,KAAKC,cAAA,GAAiB;IAEtB,KAAK9jD,SAAA,GAAY;IAEjB,KAAK+jD,SAAA,GAAY;IAMjB,KAAKC,SAAA,GAAY;IASjB,KAAKC,YAAA,GAAe;IAMpB,KAAKC,iBAAA,GAAoB;IAKzB,KAAKC,cAAA,GAAiB;IAOtB,KAAKC,yBAAA,GAA4B;EACnC;AACF;AACA,SAASC,uCAAA,EAAyC;EAChD,MAAM3lH,KAAA,CAAM,uEAAuE;AACrF;AAKA,IAAM4lH,mBAAA,GAAN,MAAMA,mBAAA,SAA2B5c,gBAAA,CAAiB;EAChDtsG,YAAYg+D,WAAA,EAAa+P,iBAAA,EAAmBliD,YAAW2E,OAAA,EAAS24F,qBAAA,EAAuBlrD,OAAA,EAASuyC,WAAA,EAAaz4B,aAAA,EAAe;IAC1H,MAAM;IACN,KAAK/Z,WAAA,GAAcA,WAAA;IACnB,KAAK+P,iBAAA,GAAoBA,iBAAA;IACzB,KAAKv9C,OAAA,GAAUA,OAAA;IACf,KAAK24F,qBAAA,GAAwBA,qBAAA;IAC7B,KAAKlrD,OAAA,GAAUA,OAAA;IACf,KAAKuyC,WAAA,GAAcA,WAAA;IACnB,KAAKz4B,aAAA,GAAgBA,aAAA;IACrB,KAAK/Y,SAAA,GAAYxzD,MAAA,CAAOqrD,QAAQ;IAEhC,KAAKuyD,UAAA,GAAa;IAElB,KAAKC,oCAAA,GAAuC;IAM5C,KAAKC,qBAAA,GAAwB;IAO7B,KAAKC,oBAAA,GAAuB,EAAC;IAC7B,KAAKx6B,kBAAA,GAAqBvjF,MAAA,CAAO+7B,iBAAiB;IAOlD,KAAKilE,eAAA,GAAkBE,MAAA,IAAU;MAC/B,IAAI,KAAK0I,aAAA,CAAcjoC,WAAA,CAAY,MAAM,OAAO1rE,SAAA,KAAc,eAAeA,SAAA,GAAY;QACvFwnH,sCAAA,CAAuC;MACzC;MACA,MAAMz+F,MAAA,GAAS,KAAK4qF,aAAA,CAAc5I,eAAA,CAAgBE,MAAM;MACxD,KAAK8c,gBAAA,CAAiB;MACtB,OAAOh/F,MAAA;IACT;IACA,KAAKqB,SAAA,GAAYA;IACjB,IAAI,KAAK2E,OAAA,CAAQk4F,cAAA,EAAgB;MAC/B,KAAKa,oBAAA,CAAqBnoH,IAAA,CAAK,KAAKovB,OAAA,CAAQk4F,cAAc;IAC5D;EACF;EACAe,mBAAmBnkG,EAAA,EAAI;IACrB,KAAKikG,oBAAA,CAAqBnoH,IAAA,CAAKkkB,EAAE;IACjC,KAAKypE,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EACAogF,sBAAsBpkG,EAAA,EAAI;IACxB,MAAM7kB,KAAA,GAAQ,KAAK8oH,oBAAA,CAAqB7oH,OAAA,CAAQ4kB,EAAE;IAClD,IAAI7kB,KAAA,GAAQ,IAAI;MACd,KAAK8oH,oBAAA,CAAqB3jH,MAAA,CAAOnF,KAAA,EAAO,CAAC;MACzC,KAAKsuF,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC;EACF;EACAkgF,iBAAA,EAAmB;IACjB,KAAKG,oBAAA,CAAqB;IAC1B,KAAKC,qBAAA,CAAsB;IAC3B,KAAKC,oBAAA,CAAqB;EAC5B;EAAA;AAAA;AAAA;AAAA;EAKAA,qBAAA,EAAuB;IACrB,KAAK36C,UAAA,CAAW;EAClB;EACAptD,YAAA,EAAc;IACZ,KAAKgoG,aAAA,CAAc;EACrB;EAAA;AAAA;AAAA;AAAA;EAKAnd,sBAAsBD,MAAA,EAAQ;IAC5B,IAAI,KAAK0I,aAAA,CAAcjoC,WAAA,CAAY,MAAM,OAAO1rE,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvFwnH,sCAAA,CAAuC;IACzC;IACA,MAAMz+F,MAAA,GAAS,KAAK4qF,aAAA,CAAczI,qBAAA,CAAsBD,MAAM;IAC9D,KAAK8c,gBAAA,CAAiB;IACtB,OAAOh/F,MAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKAoiF,qBAAqBF,MAAA,EAAQ;IAC3B,IAAI,KAAK0I,aAAA,CAAcjoC,WAAA,CAAY,MAAM,OAAO1rE,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvFwnH,sCAAA,CAAuC;IACzC;IACA,MAAMz+F,MAAA,GAAS,KAAK4qF,aAAA,CAAcxI,oBAAA,CAAqBF,MAAM;IAC7D,KAAK8c,gBAAA,CAAiB;IACtB,OAAOh/F,MAAA;EACT;EAAA;EAAA;EAGAu/F,gBAAA,EAAkB;IAChB,IAAI,CAAC,KAAKC,cAAA,CAAe,GAAG;MAC1B,KAAK96C,UAAA,CAAW;IAClB;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+6C,YAAYhqG,OAAA,EAASjb,OAAA,EAAS;IAC5B,IAAI,CAAC,KAAKmkH,qBAAA,CAAsB/+C,WAAA,CAAYnqD,OAAO,GAAG;MACpDA,OAAA,CAAQkqD,QAAA,GAAW;MAEnB,KAAKlM,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC,MAAMuF,QAAA,GAAWA,CAAA,KAAM;UACrBgN,OAAA,CAAQrJ,mBAAA,CAAoB,QAAQ3D,QAAQ;UAC5CgN,OAAA,CAAQrJ,mBAAA,CAAoB,aAAa3D,QAAQ;UACjDgN,OAAA,CAAQ6C,eAAA,CAAgB,UAAU;QACpC;QACA7C,OAAA,CAAQrM,gBAAA,CAAiB,QAAQX,QAAQ;QACzCgN,OAAA,CAAQrM,gBAAA,CAAiB,aAAaX,QAAQ;MAChD,CAAC;IACH;IACAgN,OAAA,CAAQitD,KAAA,CAAMloE,OAAO;EACvB;EAAA;AAAA;AAAA;AAAA;EAKAklH,oBAAoB97F,QAAA,EAAUppB,OAAA,EAAS;IACrC,IAAImlH,cAAA,GAAiB,KAAKnsD,WAAA,CAAY/S,aAAA,CAAcrtC,aAAA,CAAcwQ,QAAQ;IAC1E,IAAI+7F,cAAA,EAAgB;MAClB,KAAKF,WAAA,CAAYE,cAAA,EAAgBnlH,OAAO;IAC1C;EACF;EAAA;AAAA;AAAA;AAAA;EAKAkqE,WAAA,EAAa;IACX,MAAMjvD,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IAMjC,QAAQ,KAAKz6B,OAAA,CAAQo4F,SAAA;MACnB,KAAK;MACL,KAAK;QAMH,IAAI,CAAC,KAAKoB,cAAA,CAAe,GAAG;UAC1B/pG,OAAA,CAAQitD,KAAA,CAAM;QAChB;QACA;MACF,KAAK;MACL,KAAK;QACH,KAAKk8C,UAAA,EAAY98C,4BAAA,CAA6B,EAAEhgE,IAAA,CAAK89G,mBAAA,IAAuB;UAG1E,IAAI,CAACA,mBAAA,EAAqB;YACxB,KAAKC,qBAAA,CAAsB;UAC7B;QACF,CAAC;QACD;MACF,KAAK;QACH,KAAKH,mBAAA,CAAoB,0CAA0C;QACnE;MACF;QACE,KAAKA,mBAAA,CAAoB,KAAK15F,OAAA,CAAQo4F,SAAS;QAC/C;IACJ;EACF;EAAA;EAEAkB,cAAA,EAAgB;IACd,MAAMQ,WAAA,GAAc,KAAK95F,OAAA,CAAQq4F,YAAA;IACjC,IAAI0B,kBAAA,GAAqB;IACzB,IAAI,OAAOD,WAAA,KAAgB,UAAU;MACnCC,kBAAA,GAAqB,KAAK1+F,SAAA,CAAUjO,aAAA,CAAc0sG,WAAW;IAC/D,WAAW,OAAOA,WAAA,KAAgB,WAAW;MAC3CC,kBAAA,GAAqBD,WAAA,GAAc,KAAKjB,oCAAA,GAAuC;IACjF,WAAWiB,WAAA,EAAa;MACtBC,kBAAA,GAAqBD,WAAA;IACvB;IAEA,IAAI,KAAK95F,OAAA,CAAQq4F,YAAA,IAAgB0B,kBAAA,IAAsB,OAAOA,kBAAA,CAAmBr9C,KAAA,KAAU,YAAY;MACrG,MAAM5T,aAAA,GAAgBD,iCAAA,CAAkC;MACxD,MAAMp5C,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;MAKjC,IAAI,CAACqO,aAAA,IAAiBA,aAAA,KAAkB,KAAKztC,SAAA,CAAU9kB,IAAA,IAAQuyD,aAAA,KAAkBr5C,OAAA,IAAWA,OAAA,CAAQmvD,QAAA,CAAS9V,aAAa,GAAG;QAC3H,IAAI,KAAKye,aAAA,EAAe;UACtB,KAAKA,aAAA,CAAc7B,QAAA,CAASq0C,kBAAA,EAAoB,KAAKjB,qBAAqB;UAC1E,KAAKA,qBAAA,GAAwB;QAC/B,OAAO;UACLiB,kBAAA,CAAmBr9C,KAAA,CAAM;QAC3B;MACF;IACF;IACA,IAAI,KAAKk8C,UAAA,EAAY;MACnB,KAAKA,UAAA,CAAWvjG,OAAA,CAAQ;IAC1B;EACF;EAAA;EAEAwkG,sBAAA,EAAwB;IAEtB,IAAI,KAAKrsD,WAAA,CAAY/S,aAAA,CAAciiB,KAAA,EAAO;MACxC,KAAKlP,WAAA,CAAY/S,aAAA,CAAciiB,KAAA,CAAM;IACvC;EACF;EAAA;EAEA88C,eAAA,EAAiB;IACf,MAAM/pG,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,MAAMqO,aAAA,GAAgBD,iCAAA,CAAkC;IACxD,OAAOp5C,OAAA,KAAYq5C,aAAA,IAAiBr5C,OAAA,CAAQmvD,QAAA,CAAS9V,aAAa;EACpE;EAAA;EAEAqwD,qBAAA,EAAuB;IACrB,IAAI,KAAK3qD,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,KAAKozD,UAAA,GAAa,KAAKr7C,iBAAA,CAAkBroD,MAAA,CAAO,KAAKs4C,WAAA,CAAY/S,aAAa;MAG9E,IAAI,KAAKp/B,SAAA,EAAW;QAClB,KAAKw9F,oCAAA,GAAuChwD,iCAAA,CAAkC;MAChF;IACF;EACF;EAAA;EAEAuwD,sBAAA,EAAwB;IAGtB,KAAKpZ,WAAA,CAAY2G,aAAA,CAAc,EAAErsE,SAAA,CAAU,MAAM;MAC/C,IAAI,KAAKta,OAAA,CAAQs1F,YAAA,EAAc;QAC7B,KAAKiE,eAAA,CAAgB;MACvB;IACF,CAAC;EACH;AAyCF;AAvCIb,mBAAA,CAAK3+G,IAAA,GAAO,SAASigH,2BAA2B5lH,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAKskH,mBAAA,EAAuBl9D,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB4hB,gBAAgB,GAAM5hB,iBAAA,CAAkB53C,QAAA,EAAU,CAAC,GAAM43C,iBAAA,CAAkBw8D,YAAY,GAAMx8D,iBAAA,CAAqBwe,oBAAoB,GAAMxe,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAuBmpD,UAAU,GAAMnpD,iBAAA,CAAqB6rB,YAAY,CAAC;AAC1V;AAGAqxC,mBAAA,CAAKt8E,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMqhH,mBAAA;EACNx/E,SAAA,EAAW,CAAC,CAAC,sBAAsB,CAAC;EACpCsmD,SAAA,EAAW,SAASy6B,yBAAyBt9E,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY4e,eAAA,EAAiB,CAAC;IACnC;IACA,IAAI3hE,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAImjF,aAAA,GAAgBpmD,EAAA,CAAGxlD,KAAA;IACtE;EACF;EACA87E,SAAA,EAAW,CAAC,YAAY,MAAM,GAAG,sBAAsB;EACvDj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASo+D,gCAAgCv9E,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,MAAM16B,GAAA,CAAIzB,OAAA,CAAQlL,EAAA,IAAM,IAAI,EAAE,QAAQ2M,GAAA,CAAIzB,OAAA,CAAQ2yC,IAAI,EAAE,cAAclxC,GAAA,CAAIzB,OAAA,CAAQm4F,SAAS,EAAE,mBAAmB12F,GAAA,CAAIzB,OAAA,CAAQo0C,SAAA,GAAY,OAAO3yC,GAAA,CAAIs3F,oBAAA,CAAqB,CAAC,CAAC,EAAE,cAAct3F,GAAA,CAAIzB,OAAA,CAAQo0C,SAAS,EAAE,oBAAoB3yC,GAAA,CAAIzB,OAAA,CAAQi4F,eAAA,IAAmB,IAAI;IACzR;EACF;EACA3+E,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,mBAAmB,EAAE,CAAC;EAChChhD,QAAA,EAAU,SAAS09E,4BAA4Bx9E,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACPqjD,UAAA,CAAW,GAAG+3B,yCAAA,EAA2C,GAAG,GAAG,eAAe,CAAC;IACpF;EACF;EACAl7E,YAAA,EAAc,CAACyhE,eAAe;EAC9BvtF,MAAA,EAAQ,CAAC,mGAAmG;EAC5GoD,aAAA,EAAe;AACjB,CAAC;AAzRL,IAAMimG,kBAAA,GAAN1B,mBAAA;AAAA,CA4RC,MAAM;EACL,CAAC,OAAOznH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8/G,kBAAA,EAAoB,CAAC;IAC3F/iH,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVzJ,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC/gF,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC6hF,eAAe;MACzB5vF,IAAA,EAAM;QACJ,SAAS;QACT,YAAY;QACZ,aAAa;QACb,eAAe;QACf,qBAAqB;QACrB,0BAA0B;QAC1B,qBAAqB;QACrB,2BAA2B;MAC7B;MACA+tB,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,mGAAmG;IAC9G,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS+lE;EACX,GAAG;IACD/lE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACg0G,YAAY;IACrB,CAAC;EACH,GAAG;IACD3gH,IAAA,EAAS2iE;EACX,GAAG;IACD3iE,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAWstG;EACb,GAAG;IACDttG,IAAA,EAASgwE;EACX,CAAC,GAAG;IACFu9B,aAAA,EAAe,CAAC;MACdvtG,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACs6F,eAAA,EAAiB;QACtBle,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMk6B,SAAA,GAAN,MAAgB;EACd9qH,YAAYywG,UAAA,EAAY9pE,MAAA,EAAQ;IAC9B,KAAK8pE,UAAA,GAAaA,UAAA;IAClB,KAAK9pE,MAAA,GAASA,MAAA;IAEd,KAAKksB,MAAA,GAAS,IAAI3U,OAAA,CAAQ;IAC1B,KAAK4nE,YAAA,GAAen/E,MAAA,CAAOm/E,YAAA;IAC3B,KAAK3O,aAAA,GAAgB1G,UAAA,CAAW0G,aAAA,CAAc;IAC9C,KAAKvD,aAAA,GAAgBnD,UAAA,CAAWmD,aAAA,CAAc;IAC9C,KAAKU,oBAAA,GAAuB7D,UAAA,CAAW6D,oBAAA,CAAqB;IAC5D,KAAKhvF,EAAA,GAAKqhB,MAAA,CAAOrhB,EAAA;IACjB,KAAKsuF,aAAA,CAAc9oE,SAAA,CAAU9gC,KAAA,IAAS;MACpC,IAAIA,KAAA,CAAM89D,OAAA,KAAY1N,MAAA,IAAU,CAAC,KAAK0rD,YAAA,IAAgB,CAAC1qD,cAAA,CAAepxD,KAAK,GAAG;QAC5EA,KAAA,CAAMqe,cAAA,CAAe;QACrB,KAAK6pF,KAAA,CAAM,QAAW;UACpBh6B,WAAA,EAAa;QACf,CAAC;MACH;IACF,CAAC;IACD,KAAKi/B,aAAA,CAAcrsE,SAAA,CAAU,MAAM;MACjC,IAAI,CAAC,KAAKg7E,YAAA,EAAc;QACtB,KAAK5T,KAAA,CAAM,QAAW;UACpBh6B,WAAA,EAAa;QACf,CAAC;MACH;IACF,CAAC;IACD,KAAKytC,mBAAA,GAAsBlV,UAAA,CAAW4G,WAAA,CAAY,EAAEvsE,SAAA,CAAU,MAAM;MAElE,IAAInE,MAAA,CAAOqiF,yBAAA,KAA8B,OAAO;QAC9C,KAAK9W,KAAA,CAAM;MACb;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAA,MAAM1nF,MAAA,EAAQxlB,OAAA,EAAS;IACrB,IAAI,KAAK+lH,iBAAA,EAAmB;MAC1B,MAAMC,aAAA,GAAgB,KAAKn4D,MAAA;MAC3B,KAAKk4D,iBAAA,CAAkBzB,qBAAA,GAAwBtkH,OAAA,EAASkzE,WAAA,IAAe;MAGvE,KAAKytC,mBAAA,CAAoBh7E,WAAA,CAAY;MACrC,KAAK8lE,UAAA,CAAW9mD,OAAA,CAAQ;MACxBqhE,aAAA,CAAcl+G,IAAA,CAAK0d,MAAM;MACzBwgG,aAAA,CAAcx8G,QAAA,CAAS;MACvB,KAAKy8G,iBAAA,GAAoB,KAAKF,iBAAA,GAAoB;IACpD;EACF;EAAA;EAEAla,eAAA,EAAiB;IACf,KAAKJ,UAAA,CAAWI,cAAA,CAAe;IAC/B,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6G,WAAWp/C,KAAA,GAAQ,IAAIK,MAAA,GAAS,IAAI;IAClC,KAAK83C,UAAA,CAAWiH,UAAA,CAAW;MACzBp/C,KAAA;MACAK;IACF,CAAC;IACD,OAAO;EACT;EAAA;EAEAk/C,cAAcpqD,OAAA,EAAS;IACrB,KAAKgjD,UAAA,CAAWoH,aAAA,CAAcpqD,OAAO;IACrC,OAAO;EACT;EAAA;EAEAqqD,iBAAiBrqD,OAAA,EAAS;IACxB,KAAKgjD,UAAA,CAAWqH,gBAAA,CAAiBrqD,OAAO;IACxC,OAAO;EACT;AACF;AAGA,IAAMy9D,sBAAA,GAAyB,IAAI/6G,cAAA,CAAe,wBAAwB;EACxEkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;IACb,MAAMyzG,OAAA,GAAU7yG,MAAA,CAAOq5G,OAAO;IAC9B,OAAO,MAAMxG,OAAA,CAAQ6F,gBAAA,CAAiB/R,KAAA,CAAM;EAC9C;AACF,CAAC;AAED,IAAMgZ,WAAA,GAAc,IAAIh7G,cAAA,CAAe,YAAY;AAEnD,IAAMi7G,qBAAA,GAAwB,IAAIj7G,cAAA,CAAe,qBAAqB;AAqBtE,IAAIk7G,QAAA,GAAW;AACf,IAAMC,OAAA,GAAN,MAAMA,OAAA,CAAO;EAAA;EAEX,IAAIC,YAAA,EAAc;IAChB,OAAO,KAAKC,aAAA,GAAgB,KAAKA,aAAA,CAAcD,WAAA,GAAc,KAAKE,uBAAA;EACpE;EAAA;EAEA,IAAIC,YAAA,EAAc;IAChB,OAAO,KAAKF,aAAA,GAAgB,KAAKA,aAAA,CAAcE,WAAA,GAAc,KAAKC,uBAAA;EACpE;EACA3rH,YAAYulH,QAAA,EAAU73E,SAAA,EAAW4kC,eAAA,EAAiBk5C,aAAA,EAAetS,iBAAA,EAAmB1G,cAAA,EAAgB;IAClG,KAAK+S,QAAA,GAAWA,QAAA;IAChB,KAAK73E,SAAA,GAAYA,SAAA;IACjB,KAAK4kC,eAAA,GAAkBA,eAAA;IACvB,KAAKk5C,aAAA,GAAgBA,aAAA;IACrB,KAAKtS,iBAAA,GAAoBA,iBAAA;IACzB,KAAKuS,uBAAA,GAA0B,EAAC;IAChC,KAAKG,0BAAA,GAA6B,IAAI1tE,OAAA,CAAQ;IAC9C,KAAKytE,uBAAA,GAA0B,IAAIztE,OAAA,CAAQ;IAC3C,KAAK2tE,mBAAA,GAAsB,mBAAI1rH,GAAA,CAAI;IAKnC,KAAK2rH,cAAA,GAAiBt3E,KAAA,CAAM,MAAM,KAAK+2E,WAAA,CAAYzpH,MAAA,GAAS,KAAKiqH,kBAAA,CAAmB,IAAI,KAAKA,kBAAA,CAAmB,EAAEniH,IAAA,CAAKypC,SAAA,CAAU,MAAS,CAAC,CAAC;IAC5I,KAAK6sD,eAAA,GAAkBsS,cAAA;EACzB;EACA78F,KAAKq2G,sBAAA,EAAwBrlF,MAAA,EAAQ;IACnC,MAAM0vD,YAAW,KAAK/jB,eAAA,IAAmB,IAAIk2C,YAAA,CAAa;IAC1D7hF,MAAA,GAAS/5B,cAAA,CAAAA,cAAA,KACJypF,YACA1vD,MAAA;IAELA,MAAA,CAAOrhB,EAAA,GAAKqhB,MAAA,CAAOrhB,EAAA,IAAM,cAAc+lG,QAAA,EAAU;IACjD,IAAI1kF,MAAA,CAAOrhB,EAAA,IAAM,KAAK2mG,aAAA,CAActlF,MAAA,CAAOrhB,EAAE,MAAM,OAAO7jB,SAAA,KAAc,eAAeA,SAAA,GAAY;MACjG,MAAM6B,KAAA,CAAM,mBAAmBqjC,MAAA,CAAOrhB,EAAE,iDAAiD;IAC3F;IACA,MAAMq/F,aAAA,GAAgB,KAAKuH,iBAAA,CAAkBvlF,MAAM;IACnD,MAAM8pE,UAAA,GAAa,KAAK8U,QAAA,CAAS7/F,MAAA,CAAOi/F,aAAa;IACrD,MAAMwH,SAAA,GAAY,IAAIrB,SAAA,CAAUra,UAAA,EAAY9pE,MAAM;IAClD,MAAMylF,eAAA,GAAkB,KAAKC,gBAAA,CAAiB5b,UAAA,EAAY0b,SAAA,EAAWxlF,MAAM;IAC3EwlF,SAAA,CAAUpB,iBAAA,GAAoBqB,eAAA;IAC9B,KAAKE,oBAAA,CAAqBN,sBAAA,EAAwBG,SAAA,EAAWC,eAAA,EAAiBzlF,MAAM;IAEpF,IAAI,CAAC,KAAK4kF,WAAA,CAAYzpH,MAAA,EAAQ;MAC5B,KAAKyqH,4CAAA,CAA6C;IACpD;IACA,KAAKhB,WAAA,CAAYnqH,IAAA,CAAK+qH,SAAS;IAC/BA,SAAA,CAAUt5D,MAAA,CAAO/nB,SAAA,CAAU,MAAM,KAAK0hF,iBAAA,CAAkBL,SAAA,EAAW,IAAI,CAAC;IACxE,KAAKT,WAAA,CAAY5+G,IAAA,CAAKq/G,SAAS;IAC/B,OAAOA,SAAA;EACT;EAAA;AAAA;AAAA;EAIAM,SAAA,EAAW;IACTC,cAAA,CAAe,KAAKnB,WAAA,EAAaoB,MAAA,IAAUA,MAAA,CAAOza,KAAA,CAAM,CAAC;EAC3D;EAAA;AAAA;AAAA;AAAA;EAKA+Z,cAAc3mG,EAAA,EAAI;IAChB,OAAO,KAAKimG,WAAA,CAAYlrG,IAAA,CAAKssG,MAAA,IAAUA,MAAA,CAAOrnG,EAAA,KAAOA,EAAE;EACzD;EACAxD,YAAA,EAAc;IAIZ4qG,cAAA,CAAe,KAAKjB,uBAAA,EAAyBkB,MAAA,IAAU;MAErD,IAAIA,MAAA,CAAOhmF,MAAA,CAAOoiF,cAAA,KAAmB,OAAO;QAC1C,KAAKyD,iBAAA,CAAkBG,MAAA,EAAQ,KAAK;MACtC;IACF,CAAC;IAIDD,cAAA,CAAe,KAAKjB,uBAAA,EAAyBkB,MAAA,IAAUA,MAAA,CAAOza,KAAA,CAAM,CAAC;IACrE,KAAK0Z,0BAAA,CAA2Bp9G,QAAA,CAAS;IACzC,KAAKm9G,uBAAA,CAAwBn9G,QAAA,CAAS;IACtC,KAAKi9G,uBAAA,GAA0B,EAAC;EAClC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAS,kBAAkBvlF,MAAA,EAAQ;IACxB,MAAMrF,SAAQ,IAAIixE,aAAA,CAAc;MAC9B6D,gBAAA,EAAkBzvE,MAAA,CAAOyvE,gBAAA,IAAoB,KAAKmP,QAAA,CAASt2G,QAAA,CAAS,EAAE20G,MAAA,CAAO,EAAEZ,kBAAA,CAAmB,EAAEC,gBAAA,CAAiB;MACrHzQ,cAAA,EAAgB7rE,MAAA,CAAO6rE,cAAA,IAAkB,KAAKtS,eAAA,CAAgB;MAC9DuS,UAAA,EAAY9rE,MAAA,CAAO8rE,UAAA;MACnBC,WAAA,EAAa/rE,MAAA,CAAO+rE,WAAA;MACpB7rC,SAAA,EAAWlgC,MAAA,CAAOkgC,SAAA;MAClBoxC,QAAA,EAAUtxE,MAAA,CAAOsxE,QAAA;MACjBC,SAAA,EAAWvxE,MAAA,CAAOuxE,SAAA;MAClBC,QAAA,EAAUxxE,MAAA,CAAOwxE,QAAA;MACjBC,SAAA,EAAWzxE,MAAA,CAAOyxE,SAAA;MAClB9/C,KAAA,EAAO3xB,MAAA,CAAO2xB,KAAA;MACdK,MAAA,EAAQhyB,MAAA,CAAOgyB,MAAA;MACfi6C,mBAAA,EAAqBjsE,MAAA,CAAOmiF;IAC9B,CAAC;IACD,IAAIniF,MAAA,CAAOgsE,aAAA,EAAe;MACxBrxE,OAAMqxE,aAAA,GAAgBhsE,MAAA,CAAOgsE,aAAA;IAC/B;IACA,OAAOrxE;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+qF,iBAAiBhO,OAAA,EAAS8N,SAAA,EAAWxlF,MAAA,EAAQ;IAC3C,MAAMimF,YAAA,GAAejmF,MAAA,CAAO32B,QAAA,IAAY22B,MAAA,CAAOsyD,gBAAA,EAAkBjpF,QAAA;IACjE,MAAMgJ,SAAA,GAAY,CAAC;MACjBS,OAAA,EAAS+uG,YAAA;MACT7uG,QAAA,EAAUgtB;IACZ,GAAG;MACDltB,OAAA,EAASqxG,SAAA;MACTnxG,QAAA,EAAUwyG;IACZ,GAAG;MACD1yG,OAAA,EAAS07F,UAAA;MACTx7F,QAAA,EAAU0kG;IACZ,CAAC;IACD,IAAIwO,aAAA;IACJ,IAAIlmF,MAAA,CAAOlQ,SAAA,EAAW;MACpB,IAAI,OAAOkQ,MAAA,CAAOlQ,SAAA,KAAc,YAAY;QAC1Co2F,aAAA,GAAgBlmF,MAAA,CAAOlQ,SAAA;MACzB,OAAO;QACLo2F,aAAA,GAAgBlmF,MAAA,CAAOlQ,SAAA,CAAU5uB,IAAA;QACjCmR,SAAA,CAAU5X,IAAA,CAAK,GAAGulC,MAAA,CAAOlQ,SAAA,CAAUzd,SAAA,CAAU2tB,MAAM,CAAC;MACtD;IACF,OAAO;MACLkmF,aAAA,GAAgBjC,kBAAA;IAClB;IACA,MAAMkC,eAAA,GAAkB,IAAI7gB,eAAA,CAAgB4gB,aAAA,EAAelmF,MAAA,CAAOsyD,gBAAA,EAAkB9mC,QAAA,CAASzsC,MAAA,CAAO;MAClGS,MAAA,EAAQymG,YAAA,IAAgB,KAAKl/E,SAAA;MAC7B10B;IACF,CAAC,GAAG2tB,MAAA,CAAOulE,wBAAwB;IACnC,MAAM6gB,YAAA,GAAe1O,OAAA,CAAQ/1E,MAAA,CAAOwkF,eAAe;IACnD,OAAOC,YAAA,CAAatkF,QAAA;EACtB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA6jF,qBAAqBN,sBAAA,EAAwBG,SAAA,EAAWC,eAAA,EAAiBzlF,MAAA,EAAQ;IAC/E,IAAIqlF,sBAAA,YAAkCxhB,WAAA,EAAa;MACjD,MAAMx6F,QAAA,GAAW,KAAKg9G,eAAA,CAAgBrmF,MAAA,EAAQwlF,SAAA,EAAWC,eAAA,EAAiB,MAAS;MACnF,IAAIhlH,OAAA,GAAU;QACZwzF,SAAA,EAAWj0D,MAAA,CAAOrzB,IAAA;QAClB64G;MACF;MACA,IAAIxlF,MAAA,CAAOsmF,eAAA,EAAiB;QAC1B7lH,OAAA,GAAUwF,cAAA,CAAAA,cAAA,KACLxF,OAAA,GACC,OAAOu/B,MAAA,CAAOsmF,eAAA,KAAoB,aAAatmF,MAAA,CAAOsmF,eAAA,CAAgB,IAAItmF,MAAA,CAAOsmF,eAAA;MAEzF;MACAb,eAAA,CAAgBxf,oBAAA,CAAqB,IAAIR,cAAA,CAAe4f,sBAAA,EAAwB,MAAM5kH,OAAA,EAAS4I,QAAQ,CAAC;IAC1G,OAAO;MACL,MAAMA,QAAA,GAAW,KAAKg9G,eAAA,CAAgBrmF,MAAA,EAAQwlF,SAAA,EAAWC,eAAA,EAAiB,KAAK1+E,SAAS;MACxF,MAAMw/E,UAAA,GAAad,eAAA,CAAgBzf,qBAAA,CAAsB,IAAIV,eAAA,CAAgB+f,sBAAA,EAAwBrlF,MAAA,CAAOsyD,gBAAA,EAAkBjpF,QAAA,EAAU22B,MAAA,CAAOulE,wBAAwB,CAAC;MACxKigB,SAAA,CAAUv7E,YAAA,GAAes8E,UAAA;MACzBf,SAAA,CAAUlB,iBAAA,GAAoBiC,UAAA,CAAWzkF,QAAA;IAC3C;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAukF,gBAAgBrmF,MAAA,EAAQwlF,SAAA,EAAWC,eAAA,EAAiBe,gBAAA,EAAkB;IACpE,MAAMP,YAAA,GAAejmF,MAAA,CAAO32B,QAAA,IAAY22B,MAAA,CAAOsyD,gBAAA,EAAkBjpF,QAAA;IACjE,MAAMgJ,SAAA,GAAY,CAAC;MACjBS,OAAA,EAAS0xG,WAAA;MACTxxG,QAAA,EAAUgtB,MAAA,CAAOrzB;IACnB,GAAG;MACDmG,OAAA,EAASqxG,SAAA;MACTnxG,QAAA,EAAUwyG;IACZ,CAAC;IACD,IAAIxlF,MAAA,CAAO3tB,SAAA,EAAW;MACpB,IAAI,OAAO2tB,MAAA,CAAO3tB,SAAA,KAAc,YAAY;QAC1CA,SAAA,CAAU5X,IAAA,CAAK,GAAGulC,MAAA,CAAO3tB,SAAA,CAAUmzG,SAAA,EAAWxlF,MAAA,EAAQylF,eAAe,CAAC;MACxE,OAAO;QACLpzG,SAAA,CAAU5X,IAAA,CAAK,GAAGulC,MAAA,CAAO3tB,SAAS;MACpC;IACF;IACA,IAAI2tB,MAAA,CAAOkgC,SAAA,KAAc,CAAC+lD,YAAA,IAAgB,CAACA,YAAA,CAAazrH,GAAA,CAAIq5E,cAAA,EAAgB,MAAM;MAChF9uE,QAAA,EAAU;IACZ,CAAC,IAAI;MACHsN,SAAA,CAAU5X,IAAA,CAAK;QACbqY,OAAA,EAAS+gE,cAAA;QACT7gE,QAAA,EAAU;UACR5Y,KAAA,EAAO4lC,MAAA,CAAOkgC,SAAA;UACdd,MAAA,EAAQp8D,EAAA,CAAG;QACb;MACF,CAAC;IACH;IACA,OAAOwoD,QAAA,CAASzsC,MAAA,CAAO;MACrBS,MAAA,EAAQymG,YAAA,IAAgBO,gBAAA;MACxBn0G;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAwzG,kBAAkBL,SAAA,EAAW58B,SAAA,EAAW;IACtC,MAAM9uF,KAAA,GAAQ,KAAK8qH,WAAA,CAAY7qH,OAAA,CAAQyrH,SAAS;IAChD,IAAI1rH,KAAA,GAAQ,IAAI;MACd,KAAK8qH,WAAA,CAAY3lH,MAAA,CAAOnF,KAAA,EAAO,CAAC;MAGhC,IAAI,CAAC,KAAK8qH,WAAA,CAAYzpH,MAAA,EAAQ;QAC5B,KAAK+pH,mBAAA,CAAoBtrH,OAAA,CAAQ,CAACynC,aAAA,EAAe/nB,OAAA,KAAY;UAC3D,IAAI+nB,aAAA,EAAe;YACjB/nB,OAAA,CAAQ8C,YAAA,CAAa,eAAeilB,aAAa;UACnD,OAAO;YACL/nB,OAAA,CAAQ6C,eAAA,CAAgB,aAAa;UACvC;QACF,CAAC;QACD,KAAK+oG,mBAAA,CAAoB9pG,KAAA,CAAM;QAC/B,IAAIwtE,SAAA,EAAW;UACb,KAAKw8B,kBAAA,CAAmB,EAAEj/G,IAAA,CAAK;QACjC;MACF;IACF;EACF;EAAA;EAEAy/G,6CAAA,EAA+C;IAC7C,MAAMa,gBAAA,GAAmB,KAAKlU,iBAAA,CAAkBrE,mBAAA,CAAoB;IAEpE,IAAIuY,gBAAA,CAAiBjuG,aAAA,EAAe;MAClC,MAAM2kB,QAAA,GAAWspF,gBAAA,CAAiBjuG,aAAA,CAAciY,QAAA;MAChD,SAASlC,CAAA,GAAI4O,QAAA,CAAShiC,MAAA,GAAS,GAAGozB,CAAA,GAAI,IAAIA,CAAA,IAAK;QAC7C,MAAMm4F,OAAA,GAAUvpF,QAAA,CAAS5O,CAAC;QAC1B,IAAIm4F,OAAA,KAAYD,gBAAA,IAAoBC,OAAA,CAAQrjD,QAAA,KAAa,YAAYqjD,OAAA,CAAQrjD,QAAA,KAAa,WAAW,CAACqjD,OAAA,CAAQ9jD,YAAA,CAAa,WAAW,GAAG;UACvI,KAAKsiD,mBAAA,CAAoBxqH,GAAA,CAAIgsH,OAAA,EAASA,OAAA,CAAQxvG,YAAA,CAAa,aAAa,CAAC;UACzEwvG,OAAA,CAAQtqG,YAAA,CAAa,eAAe,MAAM;QAC5C;MACF;IACF;EACF;EACAgpG,mBAAA,EAAqB;IACnB,MAAM5lG,MAAA,GAAS,KAAKqlG,aAAA;IACpB,OAAOrlG,MAAA,GAASA,MAAA,CAAO4lG,kBAAA,CAAmB,IAAI,KAAKH,0BAAA;EACrD;AAaF;AAXIN,OAAA,CAAK/gH,IAAA,GAAO,SAAS+iH,eAAe1oH,CAAA,EAAG;EACrC,OAAO,KAAKA,CAAA,IAAK0mH,OAAA,EAAW7gH,QAAA,CAAco6G,OAAO,GAAMp6G,QAAA,CAAY0nD,QAAQ,GAAM1nD,QAAA,CAAS2gH,qBAAA,EAAuB,CAAC,GAAM3gH,QAAA,CAAS6gH,OAAA,EAAQ,EAAE,GAAM7gH,QAAA,CAAcyqG,gBAAgB,GAAMzqG,QAAA,CAASygH,sBAAsB,CAAC;AACvN;AAGAI,OAAA,CAAK5gH,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOwlH,OAAA;EACP1gH,OAAA,EAAS0gH,OAAA,CAAO/gH,IAAA;EAChB8M,UAAA,EAAY;AACd,CAAC;AA7QL,IAAMk2G,MAAA,GAANjC,OAAA;AAAA,CAgRC,MAAM;EACL,CAAC,OAAO7pH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByiH,MAAA,EAAQ,CAAC;IAC/E1lH,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAWg9G;EACb,GAAG;IACDh9G,IAAA,EAASsqD;EACX,GAAG;IACDtqD,IAAA,EAAM2gH,YAAA;IACNl0G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC42G,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDvjH,IAAA,EAAM0lH,MAAA;IACNj5G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAWqtG;EACb,GAAG;IACDrtG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC02G,sBAAsB;IAC/B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,SAASwB,eAAexlD,KAAA,EAAOj0D,QAAA,EAAU;EACvC,IAAIiiB,CAAA,GAAIgyC,KAAA,CAAMplE,MAAA;EACd,OAAOozB,CAAA,IAAK;IACVjiB,QAAA,CAASi0D,KAAA,CAAMhyC,CAAC,CAAC;EACnB;AACF;AACA,IAAMs4F,aAAA,GAAN,MAAMA,aAAA,CAAa,EAoBnB;AAlBIA,aAAA,CAAKjjH,IAAA,GAAO,SAASkjH,qBAAqB7oH,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK4oH,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAK3yG,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2lH;AACR,CAAC;AAGDA,aAAA,CAAKzyG,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACu0G,MAAM;EAClBtgG,OAAA,EAAS,CAACo6F,aAAA,EAAehY,YAAA,EAAcx1B,UAAA;EAAA;EAAA;EAGvCw1B,YAAA;AACF,CAAC;AAlBL,IAAMqe,YAAA,GAANF,aAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAO/rH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4iH,YAAA,EAAc,CAAC;IACrF7lH,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACo6F,aAAA,EAAehY,YAAA,EAAcx1B,UAAA,EAAY+wC,kBAAkB;MACrEv9F,OAAA,EAAS;MAAA;MAAA;MAGTgiF,YAAA,EAAcub,kBAAA,CAAkB;MAChC5xG,SAAA,EAAW,CAACu0G,MAAM;IACpB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACz2BH,SAASI,0CAA0CxgF,EAAA,EAAIlb,GAAA,EAAK,CAAC;AAC7D,IAAM27F,eAAA,GAAN,MAAsB;EACpB5tH,YAAA,EAAc;IAEZ,KAAKmjE,IAAA,GAAO;IAEZ,KAAKsvC,UAAA,GAAa;IAElB,KAAKC,WAAA,GAAc;IAEnB,KAAKC,aAAA,GAAgB;IAErB,KAAKmT,YAAA,GAAe;IAEpB,KAAKxtD,KAAA,GAAQ;IAEb,KAAKK,MAAA,GAAS;IAEd,KAAKrlD,IAAA,GAAO;IAEZ,KAAKm1G,eAAA,GAAkB;IAEvB,KAAKC,cAAA,GAAiB;IAEtB,KAAK9jD,SAAA,GAAY;IAEjB,KAAK+jD,SAAA,GAAY;IAMjB,KAAKC,SAAA,GAAY;IAKjB,KAAKC,YAAA,GAAe;IAEpB,KAAKgF,cAAA,GAAiB;IAMtB,KAAK/E,iBAAA,GAAoB;EAE3B;AACF;AAGA,IAAMgF,UAAA,GAAa;AAEnB,IAAMC,aAAA,GAAgB;AAEtB,IAAMC,aAAA,GAAgB;AAEtB,IAAMC,uBAAA,GAA0B;AAEhC,IAAMC,wBAAA,GAA2B;AACjC,IAAMC,mBAAA,GAAN,MAAMA,mBAAA,SAA2BvD,kBAAA,CAAmB;EAClD5qH,YAAYg1F,UAAA,EAAYo5B,gBAAA,EAAkBviG,YAAWwiG,YAAA,EAAcC,oBAAA,EAAsBxiH,MAAA,EAAQ2kG,UAAA,EAAY5kB,cAAA,EAAgB0iC,YAAA,EAAc;IACzI,MAAMv5B,UAAA,EAAYo5B,gBAAA,EAAkBviG,YAAWwiG,YAAA,EAAcC,oBAAA,EAAsBxiH,MAAA,EAAQ2kG,UAAA,EAAY8d,YAAY;IACnH,KAAK1iC,cAAA,GAAiBA,cAAA;IAEtB,KAAK2iC,sBAAA,GAAyB,IAAIznF,YAAA,CAAa;IAE/C,KAAK0nF,kBAAA,GAAqB,KAAK5iC,cAAA,KAAmB;IAElD,KAAK6iC,mBAAA,GAAsB;IAE3B,KAAKC,YAAA,GAAe,KAAK3wD,WAAA,CAAY/S,aAAA;IAErC,KAAK2jE,uBAAA,GAA0B,KAAKH,kBAAA,GAAqBI,YAAA,CAAa,KAAKr+F,OAAA,CAAQs+F,sBAAsB,KAAKb,uBAAA,GAA0B;IAExI,KAAKc,sBAAA,GAAyB,KAAKN,kBAAA,GAAqBI,YAAA,CAAa,KAAKr+F,OAAA,CAAQw+F,qBAAqB,KAAKd,wBAAA,GAA2B;IAEvI,KAAKe,eAAA,GAAkB;IAKvB,KAAKC,iBAAA,GAAoB,MAAM;MAC7B,KAAKC,sBAAA,CAAuB;MAC5B,KAAKC,kBAAA,CAAmB,KAAKR,uBAAuB;IACtD;IAKA,KAAKS,kBAAA,GAAqB,MAAM;MAC9B,KAAKF,sBAAA,CAAuB;MAC5B,KAAKX,sBAAA,CAAuB1lF,IAAA,CAAK;QAC/BxH,KAAA,EAAO;QACPguF,SAAA,EAAW,KAAKP;MAClB,CAAC;IACH;EACF;EACAvF,iBAAA,EAAmB;IAGjB,MAAMA,gBAAA,CAAiB;IAUvB,KAAK+F,mBAAA,CAAoB;EAC3B;EAAA;EAEAA,oBAAA,EAAsB;IACpB,KAAKf,sBAAA,CAAuB1lF,IAAA,CAAK;MAC/BxH,KAAA,EAAO;MACPguF,SAAA,EAAW,KAAKV;IAClB,CAAC;IACD,IAAI,KAAKH,kBAAA,EAAoB;MAC3B,KAAKE,YAAA,CAAantG,KAAA,CAAMkG,WAAA,CAAY8nG,4BAAA,EAA8B,GAAG,KAAKZ,uBAAuB,IAAI;MAIrG,KAAKa,sBAAA,CAAuB,MAAM,KAAKd,YAAA,CAAaxnG,SAAA,CAAUrW,GAAA,CAAIi9G,aAAA,EAAeD,UAAU,CAAC;MAC5F,KAAK4B,2BAAA,CAA4B,KAAKd,uBAAA,EAAyB,KAAKM,iBAAiB;IACvF,OAAO;MACL,KAAKP,YAAA,CAAaxnG,SAAA,CAAUrW,GAAA,CAAIg9G,UAAU;MAK1Ch7G,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM,KAAK4iH,iBAAA,CAAkB,CAAC;IACvD;EACF;EAAA;AAAA;AAAA;AAAA;EAKAS,oBAAA,EAAsB;IACpB,KAAKnB,sBAAA,CAAuB1lF,IAAA,CAAK;MAC/BxH,KAAA,EAAO;MACPguF,SAAA,EAAW,KAAKP;IAClB,CAAC;IACD,KAAKJ,YAAA,CAAaxnG,SAAA,CAAUnW,MAAA,CAAO88G,UAAU;IAC7C,IAAI,KAAKW,kBAAA,EAAoB;MAC3B,KAAKE,YAAA,CAAantG,KAAA,CAAMkG,WAAA,CAAY8nG,4BAAA,EAA8B,GAAG,KAAKT,sBAAsB,IAAI;MAEpG,KAAKU,sBAAA,CAAuB,MAAM,KAAKd,YAAA,CAAaxnG,SAAA,CAAUrW,GAAA,CAAIk9G,aAAa,CAAC;MAChF,KAAK0B,2BAAA,CAA4B,KAAKX,sBAAA,EAAwB,KAAKM,kBAAkB;IACvF,OAAO;MAkBLv8G,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM,KAAK+iH,kBAAA,CAAmB,CAAC;IACxD;EACF;EAAA;AAAA;AAAA;AAAA;EAKAO,0BAA0BntG,KAAA,EAAO;IAC/B,KAAKisG,mBAAA,IAAuBjsG,KAAA;IAC5B,KAAKssE,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEA6lF,uBAAA,EAAyB;IACvB,KAAKR,YAAA,CAAaxnG,SAAA,CAAUnW,MAAA,CAAO+8G,aAAA,EAAeC,aAAa;EACjE;EACA0B,4BAA4B98C,QAAA,EAAU3/D,QAAA,EAAU;IAC9C,IAAI,KAAKg8G,eAAA,KAAoB,MAAM;MACjCp8C,YAAA,CAAa,KAAKo8C,eAAe;IACnC;IAGA,KAAKA,eAAA,GAAkBjvE,UAAA,CAAW/sC,QAAA,EAAU2/D,QAAQ;EACtD;EAAA;EAEA68C,uBAAuBx8G,QAAA,EAAU;IAC/B,KAAKgrD,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,IAAI,OAAO+2F,qBAAA,KAA0B,YAAY;QAC/CA,qBAAA,CAAsBxxF,QAAQ;MAChC,OAAO;QACLA,QAAA,CAAS;MACX;IACF,CAAC;EACH;EACA42G,qBAAA,EAAuB;IACrB,IAAI,CAAC,KAAKr5F,OAAA,CAAQq9F,cAAA,EAAgB;MAChC,KAAK3+C,UAAA,CAAW;IAClB;EACF;EAAA;AAAA;AAAA;AAAA;EAKAkgD,mBAAmBE,SAAA,EAAW;IAC5B,IAAI,KAAK9+F,OAAA,CAAQq9F,cAAA,EAAgB;MAC/B,KAAK3+C,UAAA,CAAW;IAClB;IACA,KAAKs/C,sBAAA,CAAuB1hH,IAAA,CAAK;MAC/Bw0B,KAAA,EAAO;MACPguF;IACF,CAAC;EACH;EACAxtG,YAAA,EAAc;IACZ,MAAMA,WAAA,CAAY;IAClB,IAAI,KAAKmtG,eAAA,KAAoB,MAAM;MACjCp8C,YAAA,CAAa,KAAKo8C,eAAe;IACnC;EACF;EACAtiB,sBAAsBD,MAAA,EAAQ;IAS5B,MAAM3jE,GAAA,GAAM,MAAM4jE,qBAAA,CAAsBD,MAAM;IAC9C3jE,GAAA,CAAI3B,QAAA,CAAS6jB,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,+BAA+B;IACxE,OAAOi4B,GAAA;EACT;AAoCF;AAlCIolF,mBAAA,CAAK5jH,IAAA,GAAO,SAASslH,2BAA2BjrH,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAKupH,mBAAA,EAAuBniE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB4hB,gBAAgB,GAAM5hB,iBAAA,CAAkB53C,QAAA,EAAU,CAAC,GAAM43C,iBAAA,CAAkB4hE,eAAe,GAAM5hE,iBAAA,CAAqBwe,oBAAoB,GAAMxe,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAuBmpD,UAAU,GAAMnpD,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAqB6rB,YAAY,CAAC;AAC7Y;AAGAs2C,mBAAA,CAAKvhF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMsmH,mBAAA;EACNzkF,SAAA,EAAW,CAAC,CAAC,sBAAsB,CAAC;EACpC47C,SAAA,EAAW,CAAC,YAAY,MAAM,GAAG,4BAA4B,YAAY;EACzEj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASwjE,gCAAgC3iF,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAIzB,OAAA,CAAQlL,EAAE;MACnCqnC,WAAA,CAAY,cAAc16B,GAAA,CAAIzB,OAAA,CAAQm4F,SAAS,EAAE,QAAQ12F,GAAA,CAAIzB,OAAA,CAAQ2yC,IAAI,EAAE,mBAAmBlxC,GAAA,CAAIzB,OAAA,CAAQo0C,SAAA,GAAY,OAAO3yC,GAAA,CAAIs3F,oBAAA,CAAqB,CAAC,CAAC,EAAE,cAAct3F,GAAA,CAAIzB,OAAA,CAAQo0C,SAAS,EAAE,oBAAoB3yC,GAAA,CAAIzB,OAAA,CAAQi4F,eAAA,IAAmB,IAAI;MACtPp8B,WAAA,CAAY,2BAA2B,CAACp6D,GAAA,CAAIw8F,kBAAkB,EAAE,yCAAyCx8F,GAAA,CAAIy8F,mBAAA,GAAsB,CAAC;IACzI;EACF;EACA5kF,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,0BAA0B,qBAAqB,GAAG,CAAC,mBAAmB,EAAE,CAAC;EACpHhhD,QAAA,EAAU,SAAS8iF,4BAA4B5iF,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACvCwU,UAAA,CAAW,GAAGm9B,yCAAA,EAA2C,GAAG,GAAG,eAAe,CAAC;MAC/EzxC,YAAA,CAAa,EAAE;IACpB;EACF;EACA7uC,YAAA,EAAc,CAACyhE,eAAe;EAC9BvtF,MAAA,EAAQ,CAAC,0hXAA8hX;EACviXoD,aAAA,EAAe;AACjB,CAAC;AAnNL,IAAMqrG,kBAAA,GAAN7B,mBAAA;AAAA,CAsNC,MAAM;EACL,CAAC,OAAO1sH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBklH,kBAAA,EAAoB,CAAC;IAC3FnoH,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVzJ,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC/gF,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC6hF,eAAe;MACzB5vF,IAAA,EAAM;QACJ,SAAS;QACT,YAAY;QACZ,qBAAqB;QACrB,QAAQ;QACR,eAAe;QACf,0BAA0B;QAC1B,qBAAqB;QACrB,2BAA2B;QAC3B,mCAAmC;QACnC,iDAAiD;MACnD;MACA+tB,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,0hXAA8hX;IACziX,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS+lE;EACX,GAAG;IACD/lE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAM+lH;EACR,GAAG;IACD/lH,IAAA,EAAS2iE;EACX,GAAG;IACD3iE,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAWstG;EACb,GAAG;IACDttG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAASgwE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM23C,4BAAA,GAA+B;AAOrC,SAASX,aAAaoB,IAAA,EAAM;EAC1B,IAAIA,IAAA,IAAQ,MAAM;IAChB,OAAO;EACT;EACA,IAAI,OAAOA,IAAA,KAAS,UAAU;IAC5B,OAAOA,IAAA;EACT;EACA,IAAIA,IAAA,CAAKC,QAAA,CAAS,IAAI,GAAG;IACvB,OAAO30D,oBAAA,CAAqB00D,IAAA,CAAKp7F,SAAA,CAAU,GAAGo7F,IAAA,CAAKnuH,MAAA,GAAS,CAAC,CAAC;EAChE;EACA,IAAImuH,IAAA,CAAKC,QAAA,CAAS,GAAG,GAAG;IACtB,OAAO30D,oBAAA,CAAqB00D,IAAA,CAAKp7F,SAAA,CAAU,GAAGo7F,IAAA,CAAKnuH,MAAA,GAAS,CAAC,CAAC,IAAI;EACpE;EACA,IAAImuH,IAAA,KAAS,KAAK;IAChB,OAAO;EACT;EACA,OAAO;AACT;AACA,IAAIE,cAAA;AAAA,CACH,UAAUA,iBAAgB;EACzBA,gBAAeA,gBAAe,MAAM,IAAI,CAAC,IAAI;EAC7CA,gBAAeA,gBAAe,SAAS,IAAI,CAAC,IAAI;EAChDA,gBAAeA,gBAAe,QAAQ,IAAI,CAAC,IAAI;AACjD,GAAGA,cAAA,KAAmBA,cAAA,GAAiB,CAAC,EAAE;AAI1C,IAAMC,YAAA,GAAN,MAAmB;EACjBpwH,YAAYqwH,IAAA,EAAM1pF,MAAA,EAAQ2pF,kBAAA,EAAoB;IAC5C,KAAKD,IAAA,GAAOA,IAAA;IACZ,KAAKC,kBAAA,GAAqBA,kBAAA;IAE1B,KAAKC,YAAA,GAAe,IAAIryE,OAAA,CAAQ;IAEhC,KAAKsyE,aAAA,GAAgB,IAAItyE,OAAA,CAAQ;IAEjC,KAAKuyE,MAAA,GAASN,cAAA,CAAeO,IAAA;IAC7B,KAAK5K,YAAA,GAAen/E,MAAA,CAAOm/E,YAAA;IAC3B,KAAKxgG,EAAA,GAAK+qG,IAAA,CAAK/qG,EAAA;IAEf+qG,IAAA,CAAKxY,aAAA,CAAc,sBAAsB;IAEzCyY,kBAAA,CAAmB9B,sBAAA,CAAuB5kH,IAAA,CAAK5G,MAAA,CAAOgH,KAAA,IAASA,KAAA,CAAMs3B,KAAA,KAAU,QAAQ,GAAG8R,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU,MAAM;MACjH,KAAKylF,YAAA,CAAazjH,IAAA,CAAK;MACvB,KAAKyjH,YAAA,CAAa/hH,QAAA,CAAS;IAC7B,CAAC;IAED8hH,kBAAA,CAAmB9B,sBAAA,CAAuB5kH,IAAA,CAAK5G,MAAA,CAAOgH,KAAA,IAASA,KAAA,CAAMs3B,KAAA,KAAU,QAAQ,GAAG8R,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU,MAAM;MACjH+nC,YAAA,CAAa,KAAK89C,qBAAqB;MACvC,KAAKtB,kBAAA,CAAmB;IAC1B,CAAC;IACDgB,IAAA,CAAK5f,UAAA,CAAW4G,WAAA,CAAY,EAAEvsE,SAAA,CAAU,MAAM;MAC5C,KAAK0lF,aAAA,CAAc1jH,IAAA,CAAK,KAAK8jH,OAAO;MACpC,KAAKJ,aAAA,CAAchiH,QAAA,CAAS;MAC5B,KAAK6gH,kBAAA,CAAmB;IAC1B,CAAC;IACDhwE,KAAA,CAAM,KAAK83D,aAAA,CAAc,GAAG,KAAKvD,aAAA,CAAc,EAAEhqG,IAAA,CAAK5G,MAAA,CAAOgH,KAAA,IAASA,KAAA,CAAM89D,OAAA,KAAY1N,MAAA,IAAU,CAAC,KAAK0rD,YAAA,IAAgB,CAAC1qD,cAAA,CAAepxD,KAAK,CAAC,CAAC,CAAC,EAAE8gC,SAAA,CAAU9gC,KAAA,IAAS;MACnK,IAAI,CAAC,KAAK87G,YAAA,EAAc;QACtB97G,KAAA,CAAMqe,cAAA,CAAe;QACrBwoG,eAAA,CAAgB,MAAM7mH,KAAA,CAAMnC,IAAA,KAAS,YAAY,aAAa,OAAO;MACvE;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAqqG,MAAM4e,YAAA,EAAc;IAClB,KAAKF,OAAA,GAAUE,YAAA;IAEf,KAAKR,kBAAA,CAAmB9B,sBAAA,CAAuB5kH,IAAA,CAAK5G,MAAA,CAAOgH,KAAA,IAASA,KAAA,CAAMs3B,KAAA,KAAU,SAAS,GAAG8R,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU9gC,KAAA,IAAS;MAC1H,KAAKwmH,aAAA,CAAc1jH,IAAA,CAAKgkH,YAAY;MACpC,KAAKN,aAAA,CAAchiH,QAAA,CAAS;MAC5B,KAAK6hH,IAAA,CAAK5f,UAAA,CAAWsG,cAAA,CAAe;MAMpC,KAAK4Z,qBAAA,GAAwB3wE,UAAA,CAAW,MAAM,KAAKqvE,kBAAA,CAAmB,GAAGrlH,KAAA,CAAMslH,SAAA,GAAY,GAAG;IAChG,CAAC;IACD,KAAKmB,MAAA,GAASN,cAAA,CAAeY,OAAA;IAC7B,KAAKT,kBAAA,CAAmBX,mBAAA,CAAoB;EAC9C;EAAA;AAAA;AAAA;EAIAjE,YAAA,EAAc;IACZ,OAAO,KAAK6E,YAAA;EACd;EAAA;AAAA;AAAA;EAIAS,YAAA,EAAc;IACZ,OAAO,KAAKX,IAAA,CAAKx9D,MAAA;EACnB;EAAA;AAAA;AAAA;EAIAo+D,aAAA,EAAe;IACb,OAAO,KAAKT,aAAA;EACd;EAAA;AAAA;AAAA;EAIArZ,cAAA,EAAgB;IACd,OAAO,KAAKkZ,IAAA,CAAKlZ,aAAA;EACnB;EAAA;AAAA;AAAA;EAIAvD,cAAA,EAAgB;IACd,OAAO,KAAKyc,IAAA,CAAKzc,aAAA;EACnB;EAAA;AAAA;AAAA;AAAA;EAKA/C,eAAe5hG,QAAA,EAAU;IACvB,IAAIwoG,QAAA,GAAW,KAAK4Y,IAAA,CAAK1pF,MAAA,CAAOyvE,gBAAA;IAChC,IAAInnG,QAAA,KAAaA,QAAA,CAASg5E,IAAA,IAAQh5E,QAAA,CAASm8E,KAAA,GAAQ;MACjDn8E,QAAA,CAASg5E,IAAA,GAAOwvB,QAAA,CAASxvB,IAAA,CAAKh5E,QAAA,CAASg5E,IAAI,IAAIwvB,QAAA,CAASrsB,KAAA,CAAMn8E,QAAA,CAASm8E,KAAK;IAC9E,OAAO;MACLqsB,QAAA,CAASuL,kBAAA,CAAmB;IAC9B;IACA,IAAI/zG,QAAA,KAAaA,QAAA,CAASi5E,GAAA,IAAOj5E,QAAA,CAASq8E,MAAA,GAAS;MACjDr8E,QAAA,CAASi5E,GAAA,GAAMuvB,QAAA,CAASvvB,GAAA,CAAIj5E,QAAA,CAASi5E,GAAG,IAAIuvB,QAAA,CAASnsB,MAAA,CAAOr8E,QAAA,CAASq8E,MAAM;IAC7E,OAAO;MACLmsB,QAAA,CAASwL,gBAAA,CAAiB;IAC5B;IACA,KAAKoN,IAAA,CAAKxf,cAAA,CAAe;IACzB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6G,WAAWp/C,KAAA,GAAQ,IAAIK,MAAA,GAAS,IAAI;IAClC,KAAK03D,IAAA,CAAK3Y,UAAA,CAAWp/C,KAAA,EAAOK,MAAM;IAClC,OAAO;EACT;EAAA;EAEAk/C,cAAcpqD,OAAA,EAAS;IACrB,KAAK4iE,IAAA,CAAKxY,aAAA,CAAcpqD,OAAO;IAC/B,OAAO;EACT;EAAA;EAEAqqD,iBAAiBrqD,OAAA,EAAS;IACxB,KAAK4iE,IAAA,CAAKvY,gBAAA,CAAiBrqD,OAAO;IAClC,OAAO;EACT;EAAA;EAEAxH,SAAA,EAAW;IACT,OAAO,KAAKwqE,MAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKApB,mBAAA,EAAqB;IACnB,KAAKoB,MAAA,GAASN,cAAA,CAAee,MAAA;IAC7B,KAAKb,IAAA,CAAKne,KAAA,CAAM,KAAK0e,OAAA,EAAS;MAC5B14C,WAAA,EAAa,KAAKoxC;IACpB,CAAC;IACD,KAAK2B,iBAAA,GAAoB;EAC3B;AACF;AAOA,SAAS4F,gBAAgB9nF,GAAA,EAAKooF,eAAA,EAAiB3mG,MAAA,EAAQ;EACrDue,GAAA,CAAIugF,qBAAA,GAAwB6H,eAAA;EAC5B,OAAOpoF,GAAA,CAAImpE,KAAA,CAAM1nF,MAAM;AACzB;AAGA,IAAM4mG,eAAA,GAAkB,IAAIjhH,cAAA,CAAe,kBAAkB;AAE7D,IAAMkhH,0BAAA,GAA6B,IAAIlhH,cAAA,CAAe,gCAAgC;AAEtF,IAAMmhH,0BAAA,GAA6B,IAAInhH,cAAA,CAAe,kCAAkC;EACtFkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;IACb,MAAMyzG,OAAA,GAAU7yG,MAAA,CAAOq5G,OAAO;IAC9B,OAAO,MAAMxG,OAAA,CAAQ6F,gBAAA,CAAiB/R,KAAA,CAAM;EAC9C;AACF,CAAC;AAoBD,IAAIkZ,YAAW;AAIf,IAAMkG,UAAA,GAAN,MAAMA,UAAA,CAAU;EAAA;EAEd,IAAIhG,YAAA,EAAc;IAChB,OAAO,KAAKC,aAAA,GAAgB,KAAKA,aAAA,CAAcD,WAAA,GAAc,KAAKE,uBAAA;EACpE;EAAA;EAEA,IAAIC,YAAA,EAAc;IAChB,OAAO,KAAKF,aAAA,GAAgB,KAAKA,aAAA,CAAcE,WAAA,GAAc,KAAKC,uBAAA;EACpE;EACAI,mBAAA,EAAqB;IACnB,MAAM5lG,MAAA,GAAS,KAAKqlG,aAAA;IACpB,OAAOrlG,MAAA,GAASA,MAAA,CAAO4lG,kBAAA,CAAmB,IAAI,KAAKH,0BAAA;EACrD;EACA5rH,YAAYulH,QAAA,EAAUv1G,QAAA,EAKtBo3B,QAAA,EAAUkrC,eAAA,EAAiB4tB,eAAA,EAAiBsrB,aAAA,EAK5CtS,iBAAA,EAKArtB,cAAA,EAAgB;IACd,KAAK05B,QAAA,GAAWA,QAAA;IAChB,KAAKjzC,eAAA,GAAkBA,eAAA;IACvB,KAAK4tB,eAAA,GAAkBA,eAAA;IACvB,KAAKsrB,aAAA,GAAgBA,aAAA;IACrB,KAAKC,uBAAA,GAA0B,EAAC;IAChC,KAAKG,0BAAA,GAA6B,IAAI1tE,OAAA,CAAQ;IAC9C,KAAKytE,uBAAA,GAA0B,IAAIztE,OAAA,CAAQ;IAC3C,KAAKszE,iBAAA,GAAoB5D,eAAA;IAKzB,KAAK9B,cAAA,GAAiBt3E,KAAA,CAAM,MAAM,KAAK+2E,WAAA,CAAYzpH,MAAA,GAAS,KAAKiqH,kBAAA,CAAmB,IAAI,KAAKA,kBAAA,CAAmB,EAAEniH,IAAA,CAAKypC,SAAA,CAAU,MAAS,CAAC,CAAC;IAC5I,KAAKo+E,OAAA,GAAUzhH,QAAA,CAAS7O,GAAA,CAAIosH,MAAM;IAClC,KAAKmE,qBAAA,GAAwBtB,YAAA;IAC7B,KAAKuB,oBAAA,GAAuB3B,kBAAA;IAC5B,KAAK4B,gBAAA,GAAmBR,eAAA;EAC1B;EACAz7G,KAAKq2G,sBAAA,EAAwBrlF,MAAA,EAAQ;IACnC,IAAIwlF,SAAA;IACJxlF,MAAA,GAAS/5B,cAAA,CAAAA,cAAA,KACH,KAAK0lE,eAAA,IAAmB,IAAIs7C,eAAA,CAAgB,IAC7CjnF,MAAA;IAELA,MAAA,CAAOrhB,EAAA,GAAKqhB,MAAA,CAAOrhB,EAAA,IAAM,kBAAkB+lG,WAAU;IACrD1kF,MAAA,CAAO6rE,cAAA,GAAiB7rE,MAAA,CAAO6rE,cAAA,IAAkB,KAAKtS,eAAA,CAAgB;IACtE,MAAM2xB,MAAA,GAAS,KAAKJ,OAAA,CAAQ97G,IAAA,CAAKq2G,sBAAA,EAAwBlnG,aAAA,CAAAlY,cAAA,KACpD+5B,MAAA,GADoD;MAEvDyvE,gBAAA,EAAkB,KAAKmP,QAAA,CAASt2G,QAAA,CAAS,EAAE20G,MAAA,CAAO,EAAEZ,kBAAA,CAAmB,EAAEC,gBAAA,CAAiB;MAAA;MAE1F6C,YAAA,EAAc;MAAA;MAAA;MAAA;MAIdiD,cAAA,EAAgB;MAAA;MAAA;MAGhBC,yBAAA,EAA2B;MAC3BvyF,SAAA,EAAW;QACT5uB,IAAA,EAAM,KAAK8pH,oBAAA;QACX34G,SAAA,EAAWA,CAAA,KAAM;QAAA;QAAA;QAAA;QAIjB;UACES,OAAA,EAAS,KAAK+3G,iBAAA;UACd73G,QAAA,EAAUgtB;QACZ,GAAG;UACDltB,OAAA,EAAS+uG,YAAA;UACT7uG,QAAA,EAAUgtB;QACZ;MACF;MACAsmF,eAAA,EAAiBA,CAAA,MAAO;QACtBd;MACF;MACAnzG,SAAA,EAAWA,CAAC+vB,GAAA,EAAK+oF,SAAA,EAAW1F,eAAA,KAAoB;QAC9CD,SAAA,GAAY,IAAI,KAAKuF,qBAAA,CAAsB3oF,GAAA,EAAKpC,MAAA,EAAQylF,eAAe;QACvED,SAAA,CAAUtb,cAAA,CAAelqE,MAAA,EAAQ13B,QAAQ;QACzC,OAAO,CAAC;UACNwK,OAAA,EAAS,KAAKk4G,oBAAA;UACdh4G,QAAA,EAAUyyG;QACZ,GAAG;UACD3yG,OAAA,EAAS,KAAKm4G,gBAAA;UACdj4G,QAAA,EAAUm4G,SAAA,CAAUx+G;QACtB,GAAG;UACDmG,OAAA,EAAS,KAAKi4G,qBAAA;UACd/3G,QAAA,EAAUwyG;QACZ,CAAC;MACH;IACF,EAAC;IAGDA,SAAA,CAAUv7E,YAAA,GAAeihF,MAAA,CAAOjhF,YAAA;IAChCu7E,SAAA,CAAUlB,iBAAA,GAAoB4G,MAAA,CAAO5G,iBAAA;IACrC,KAAKM,WAAA,CAAYnqH,IAAA,CAAK+qH,SAAS;IAC/B,KAAKT,WAAA,CAAY5+G,IAAA,CAAKq/G,SAAS;IAC/BA,SAAA,CAAU6E,WAAA,CAAY,EAAElmF,SAAA,CAAU,MAAM;MACtC,MAAMrqC,KAAA,GAAQ,KAAK8qH,WAAA,CAAY7qH,OAAA,CAAQyrH,SAAS;MAChD,IAAI1rH,KAAA,GAAQ,IAAI;QACd,KAAK8qH,WAAA,CAAY3lH,MAAA,CAAOnF,KAAA,EAAO,CAAC;QAChC,IAAI,CAAC,KAAK8qH,WAAA,CAAYzpH,MAAA,EAAQ;UAC5B,KAAKiqH,kBAAA,CAAmB,EAAEj/G,IAAA,CAAK;QACjC;MACF;IACF,CAAC;IACD,OAAOq/G,SAAA;EACT;EAAA;AAAA;AAAA;EAIAM,SAAA,EAAW;IACT,KAAKsF,aAAA,CAAc,KAAKxG,WAAW;EACrC;EAAA;AAAA;AAAA;AAAA;EAKAU,cAAc3mG,EAAA,EAAI;IAChB,OAAO,KAAKimG,WAAA,CAAYlrG,IAAA,CAAKssG,MAAA,IAAUA,MAAA,CAAOrnG,EAAA,KAAOA,EAAE;EACzD;EACAxD,YAAA,EAAc;IAGZ,KAAKiwG,aAAA,CAAc,KAAKtG,uBAAuB;IAC/C,KAAKG,0BAAA,CAA2Bp9G,QAAA,CAAS;IACzC,KAAKm9G,uBAAA,CAAwBn9G,QAAA,CAAS;EACxC;EACAujH,cAAcC,OAAA,EAAS;IACrB,IAAI98F,CAAA,GAAI88F,OAAA,CAAQlwH,MAAA;IAChB,OAAOozB,CAAA,IAAK;MACV88F,OAAA,CAAQ98F,CAAC,EAAEg9E,KAAA,CAAM;IACnB;EACF;AAaF;AAXIqf,UAAA,CAAKhnH,IAAA,GAAO,SAAS0nH,kBAAkBrtH,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAK2sH,UAAA,EAAc9mH,QAAA,CAAco6G,OAAO,GAAMp6G,QAAA,CAAY0nD,QAAQ,GAAM1nD,QAAA,CAAYq2C,QAAA,EAAU,CAAC,GAAMr2C,QAAA,CAAS4mH,0BAAA,EAA4B,CAAC,GAAM5mH,QAAA,CAAS6mH,0BAA0B,GAAM7mH,QAAA,CAAS8mH,UAAA,EAAW,EAAE,GAAM9mH,QAAA,CAAcyqG,gBAAgB,GAAMzqG,QAAA,CAAS0hF,qBAAA,EAAuB,CAAC,CAAC;AAC1S;AAGAolC,UAAA,CAAK7mH,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOyrH,UAAA;EACP3mH,OAAA,EAAS2mH,UAAA,CAAUhnH,IAAA;EACnB8M,UAAA,EAAY;AACd,CAAC;AAxJL,IAAM66G,SAAA,GAANX,UAAA;AAAA,CA2JC,MAAM;EACL,CAAC,OAAO9vH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBonH,SAAA,EAAW,CAAC;IAClFrqH,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAWg9G;EACb,GAAG;IACDh9G,IAAA,EAASsqD;EACX,GAAG;IACDtqD,IAAA,EAASi5C,QAAA;IACTxsC,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM+lH,eAAA;IACNt5G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68G,0BAA0B;IACnC,CAAC;EACH,GAAG;IACDxpH,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88G,0BAA0B;IACnC,CAAC;EACH,GAAG;IACDzpH,IAAA,EAAMqqH,SAAA;IACN59G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAWqtG;EACb,GAAG;IACDrtG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAGH,IAAIgmC,gBAAA,GAAmB;AAIvB,IAAMC,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBpyH,YAGAmsH,SAAA,EAAWnuD,WAAA,EAAayzD,OAAA,EAAS;IAC/B,KAAKtF,SAAA,GAAYA,SAAA;IACjB,KAAKnuD,WAAA,GAAcA,WAAA;IACnB,KAAKyzD,OAAA,GAAUA,OAAA;IAEf,KAAK5pH,IAAA,GAAO;EACd;EACAwgC,SAAA,EAAW;IACT,IAAI,CAAC,KAAK8jF,SAAA,EAAW;MAMnB,KAAKA,SAAA,GAAYkG,gBAAA,CAAiB,KAAKr0D,WAAA,EAAa,KAAKyzD,OAAA,CAAQlG,WAAW;IAC9E;EACF;EACA1jF,YAAYC,OAAA,EAAS;IACnB,MAAMwqF,aAAA,GAAgBxqF,OAAA,CAAQ,iBAAiB,KAAKA,OAAA,CAAQ,uBAAuB;IACnF,IAAIwqF,aAAA,EAAe;MACjB,KAAKxB,YAAA,GAAewB,aAAA,CAAcvQ,YAAA;IACpC;EACF;EACAwQ,eAAevoH,KAAA,EAAO;IAKpB6mH,eAAA,CAAgB,KAAK1E,SAAA,EAAWniH,KAAA,CAAMwoH,OAAA,KAAY,KAAKxoH,KAAA,CAAMyoH,OAAA,KAAY,IAAI,aAAa,SAAS,KAAK3B,YAAY;EACtH;AAgCF;AA9BIsB,eAAA,CAAK7nH,IAAA,GAAO,SAASmoH,uBAAuB9tH,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKwtH,eAAA,EAAmBpmE,iBAAA,CAAkBokE,YAAA,EAAc,CAAC,GAAMpkE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBkmE,SAAS,CAAC;AAC9I;AAGAE,eAAA,CAAK5oF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMuqH,eAAA;EACN1oF,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC;EACpE2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASqmE,4BAA4BxlF,EAAA,EAAIlb,GAAA,EAAK;IAC1D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASomE,wCAAwClmE,MAAA,EAAQ;QAC9E,OAAOz6B,GAAA,CAAIsgG,cAAA,CAAe7lE,MAAM;MAClC,CAAC;IACH;IACA,IAAIvf,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,cAAc16B,GAAA,CAAI2yC,SAAA,IAAa,IAAI,EAAE,QAAQ3yC,GAAA,CAAIpqB,IAAI;IACtE;EACF;EACA8hC,MAAA,EAAQ;IACNi7B,SAAA,EAAW,CAAIhY,UAAA,CAAasnB,IAAA,EAAM,cAAc,WAAW;IAC3DrsE,IAAA,EAAM;IACNipH,YAAA,EAAc,CAAIlkE,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,cAAc;IACvE2+C,eAAA,EAAiB,CAAIjmE,UAAA,CAAasnB,IAAA,EAAM,kBAAkB,iBAAiB;EAC7E;EACArqC,QAAA,EAAU,CAAC,gBAAgB;EAC3BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2wB,oBAAoB;AACpC,CAAC;AA/DL,IAAM+oF,cAAA,GAANV,eAAA;AAAA,CAkEC,MAAM;EACL,CAAC,OAAO3wH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgoH,cAAA,EAAgB,CAAC;IACvFjrH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,WAAW;QACX,qBAAqB;QACrB,eAAe;MACjB;IACF,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTrX,IAAA,EAAMuoH,YAAA;IACN97G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMqqH;EACR,CAAC,GAAG;IACFttD,SAAA,EAAW,CAAC;MACV/8D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,YAAY;IACrB,CAAC;IACD3M,IAAA,EAAM,CAAC;MACLA,IAAA,EAAMqiC;IACR,CAAC;IACD4mF,YAAA,EAAc,CAAC;MACbjpH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;IACDq+G,eAAA,EAAiB,CAAC;MAChBhrH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,gBAAgB;IACzB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMu+G,uBAAA,GAAN,MAAMA,uBAAA,CAAuB;EAC3B/yH,YAGAgzH,UAAA,EAAYh1D,WAAA,EAAayzD,OAAA,EAAS;IAChC,KAAKuB,UAAA,GAAaA,UAAA;IAClB,KAAKh1D,WAAA,GAAcA,WAAA;IACnB,KAAKyzD,OAAA,GAAUA,OAAA;EACjB;EACAppF,SAAA,EAAW;IACT,IAAI,CAAC,KAAK2qF,UAAA,EAAY;MACpB,KAAKA,UAAA,GAAaX,gBAAA,CAAiB,KAAKr0D,WAAA,EAAa,KAAKyzD,OAAA,CAAQlG,WAAW;IAC/E;IACA,IAAI,KAAKyH,UAAA,EAAY;MACnBlgH,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;QAC3B,KAAK2mH,MAAA,CAAO;MACd,CAAC;IACH;EACF;EACAnxG,YAAA,EAAc;IAGZ,MAAM2mB,QAAA,GAAW,KAAKuqF,UAAA,EAAY1C,kBAAA;IAClC,IAAI7nF,QAAA,EAAU;MACZ31B,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;QAC3B,KAAK4mH,SAAA,CAAU;MACjB,CAAC;IACH;EACF;AAYF;AAVIH,uBAAA,CAAKxoH,IAAA,GAAO,SAAS4oH,+BAA+BvuH,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAKmuH,uBAAA,EAA2B/mE,iBAAA,CAAkBokE,YAAA,EAAc,CAAC,GAAMpkE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBkmE,SAAS,CAAC;AACtJ;AAGAa,uBAAA,CAAKvpF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMkrH,uBAAA;EACNjpF,UAAA,EAAY;AACd,CAAC;AAtCL,IAAMspF,sBAAA,GAANL,uBAAA;AAAA,CAyCC,MAAM;EACL,CAAC,OAAOtxH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsoH,sBAAA,EAAwB,CAAC;IAC/FvrH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACLs1B,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAMuoH,YAAA;IACN97G,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMqqH;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AAIH,IAAMmB,eAAA,GAAN,MAAMA,eAAA,SAAuBD,sBAAA,CAAuB;EAClDpzH,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAClB,KAAK0J,EAAA,GAAK,wBAAwB6sG,gBAAA,EAAkB;EACtD;EACAc,OAAA,EAAS;IAGP,KAAKD,UAAA,CAAW1C,kBAAA,EAAoB7G,kBAAA,GAAqB,KAAKnkG,EAAE;EAClE;EACA4tG,UAAA,EAAY;IACV,KAAKF,UAAA,EAAY1C,kBAAA,EAAoB5G,qBAAA,GAAwB,KAAKpkG,EAAE;EACtE;AA4BF;AA1BI+tG,eAAA,CAAK9oH,IAAA,GAAuB,sBAAM;EAChC,IAAI+oH,2BAAA;EACJ,OAAO,SAASC,uBAAuB3uH,CAAA,EAAG;IACxC,QAAQ0uH,2BAAA,KAAgCA,2BAAA,GAAiCruE,qBAAA,CAAsBouE,eAAc,IAAIzuH,CAAA,IAAKyuH,eAAc;EACtI;AACF,GAAG;AAGHA,eAAA,CAAK7pF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwrH,eAAA;EACN3pF,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC;EACpE47C,SAAA,EAAW,CAAC,GAAG,wBAAwB,mBAAmB;EAC1Dj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASknE,4BAA4BrmF,EAAA,EAAIlb,GAAA,EAAK;IAC1D,IAAIkb,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE;IAChC;EACF;EACAqkB,MAAA,EAAQ;IACNrkB,EAAA,EAAI;EACN;EACAukB,QAAA,EAAU,CAAC,gBAAgB;EAC3BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAtCL,IAAMm+B,cAAA,GAANJ,eAAA;AAAA,CAyCC,MAAM;EACL,CAAC,OAAO5xH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2oH,cAAA,EAAgB,CAAC;IACvF5rH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVC,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRoG,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAIH,IAAMwpF,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAcvB;AAZIA,iBAAA,CAAKnpH,IAAA,GAAO,SAASopH,yBAAyB/uH,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK8uH,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAKlqF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6rH,iBAAA;EACNhqF,SAAA,EAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,GAAG,CAAC,oBAAoB,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;EAChG47C,SAAA,EAAW,CAAC,GAAG,0BAA0B,qBAAqB;EAC9Dx7C,UAAA,EAAY;AACd,CAAC;AAZL,IAAM8pF,gBAAA,GAANF,iBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOjyH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8oH,gBAAA,EAAkB,CAAC;IACzF/rH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAM+pF,iBAAA,GAAN,MAAMA,iBAAA,SAAyBT,sBAAA,CAAuB;EACpDH,OAAA,EAAS;IACP,KAAKD,UAAA,CAAW1C,kBAAA,EAAoBV,yBAAA,GAA4B,CAAC;EACnE;EACAsD,UAAA,EAAY;IACV,KAAKF,UAAA,CAAW1C,kBAAA,EAAoBV,yBAAA,GAA4B,EAAE;EACpE;AA2BF;AAzBIiE,iBAAA,CAAKtpH,IAAA,GAAuB,sBAAM;EAChC,IAAIupH,6BAAA;EACJ,OAAO,SAASC,yBAAyBnvH,CAAA,EAAG;IAC1C,QAAQkvH,6BAAA,KAAkCA,6BAAA,GAAmC7uE,qBAAA,CAAsB4uE,iBAAgB,IAAIjvH,CAAA,IAAKivH,iBAAgB;EAC9I;AACF,GAAG;AAGHA,iBAAA,CAAKrqF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMgsH,iBAAA;EACNnqF,SAAA,EAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,GAAG,CAAC,oBAAoB,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;EAChG47C,SAAA,EAAW,CAAC,GAAG,0BAA0B,qBAAqB;EAC9Dj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS0nE,8BAA8B7mF,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,sCAAsCp6D,GAAA,CAAIgiG,KAAA,KAAU,OAAO,EAAE,uCAAuChiG,GAAA,CAAIgiG,KAAA,KAAU,QAAQ,EAAE,oCAAoChiG,GAAA,CAAIgiG,KAAA,KAAU,KAAK;IACpM;EACF;EACAtqF,MAAA,EAAQ;IACNsqF,KAAA,EAAO;EACT;EACAnqF,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AA/BL,IAAM4+B,gBAAA,GAANL,iBAAA;AAAA,CAkCC,MAAM;EACL,CAAC,OAAOpyH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBopH,gBAAA,EAAkB,CAAC;IACzFrsH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;QACT,8CAA8C;QAC9C,+CAA+C;QAC/C,4CAA4C;MAC9C;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACR+0G,KAAA,EAAO,CAAC;MACNpsH,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAMH,SAASmoF,iBAAiBpyG,OAAA,EAASsrG,WAAA,EAAa;EAC9C,IAAIplG,MAAA,GAASlG,OAAA,CAAQgrC,aAAA,CAAc9rC,aAAA;EACnC,OAAOgH,MAAA,IAAU,CAACA,MAAA,CAAOgB,SAAA,CAAUioD,QAAA,CAAS,0BAA0B,GAAG;IACvEjpD,MAAA,GAASA,MAAA,CAAOhH,aAAA;EAClB;EACA,OAAOgH,MAAA,GAASolG,WAAA,CAAYlrG,IAAA,CAAKssG,MAAA,IAAUA,MAAA,CAAOrnG,EAAA,KAAOa,MAAA,CAAOb,EAAE,IAAI;AACxE;AACA,IAAM6uG,UAAA,GAAa,CAACnE,kBAAA,EAAoB8C,cAAA,EAAgBW,cAAA,EAAgBS,gBAAA,EAAkBN,gBAAgB;AAC1G,IAAMQ,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAiBtB;AAfIA,gBAAA,CAAK7pH,IAAA,GAAO,SAAS8pH,wBAAwBzvH,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKwvH,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAKv5G,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMusH;AACR,CAAC;AAGDA,gBAAA,CAAKr5G,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACk5G,SAAS;EACrBjlG,OAAA,EAAS,CAACygG,YAAA,EAAcrG,aAAA,EAAehY,YAAA,EAAcxxB,eAAA,EAAiBA,eAAe;AACvF,CAAC;AAfL,IAAMy2C,eAAA,GAANF,gBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAO3yH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwpH,eAAA,EAAiB,CAAC;IACxFzsH,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACygG,YAAA,EAAcrG,aAAA,EAAehY,YAAA,EAAcxxB,eAAA,EAAiB,GAAGs2C,UAAU;MACnF9mG,OAAA,EAAS,CAACwwD,eAAA,EAAiB,GAAGs2C,UAAU;MACxCn7G,SAAA,EAAW,CAACk5G,SAAS;IACvB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAMqC,cAAA,GAAiB;EACrBtwH,MAAA,EAAQ;IACN6qH,sBAAA,EAAwB;IACxBE,qBAAA,EAAuB;EACzB;AACF;AAKA,IAAMwF,mBAAA,GAAsB;EAAA;EAE1BpI,eAAA,EAAiB9pE,OAAA,CAAQ,mBAAmB;EAAA;EAAA;EAAA;EAI5ChhB,KAAA,CAAM,cAAc9f,KAAA,CAAM;IACxBkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,SAAS9f,KAAA,CAAM;IACxB2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,cAAcjhB,KAAA,CAAM,CAACu1F,OAAA,CAAQ,yDAAyDjzG,KAAA,CAAM;IAC1G2rC,SAAA,EAAW;IACXu8B,OAAA,EAAS;EACX,CAAC,CAAC,GAAGpwD,KAAA,CAAM,MAAMo7F,YAAA,CAAa,GAAG;IAC/BhpH,QAAA,EAAU;EACZ,CAAC,CAAC,CAAC,GAAG6oH,cAAc,GAAGp0E,UAAA,CAAW,wBAAwBjhB,KAAA,CAAM,CAACu1F,OAAA,CAAQ,4DAA4DjzG,KAAA,CAAM;IACzIkoE,OAAA,EAAS;EACX,CAAC,CAAC,GAAGpwD,KAAA,CAAM,MAAMo7F,YAAA,CAAa,GAAG;IAC/BhpH,QAAA,EAAU;EACZ,CAAC,CAAC,CAAC,GAAG6oH,cAAc,EAAE;AACxB;;;ACvoCA,IAAMI,6BAAA,GAAgC5hF,CAAA,IAAK;EACzC,IAAIA,CAAA,YAAa6hF,UAAA,IAAc7hF,CAAA,CAAE9pC,OAAA,KAAY,sCAAsC;IACjFwnB,OAAA,CAAQvnB,KAAA,CAAM,GAAG6pC,CAAA,CAAE9pC,OAAO,8IAA8I;EAC1K;AACF;AAKA,IAAM4rH,6BAAA,GAAN,MAAoC;EAClC70H,YACA80H,IAAA,EAAM;IACJ,KAAKA,IAAA,GAAOA,IAAA;IAEZ,KAAK9yB,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAE9B,KAAK62E,cAAA,GAAiB,IAAI72E,OAAA,CAAQ;IAElC,KAAK82E,mBAAA,GAAsB,mBAAI70H,GAAA,CAAI;IACnC,IAAI,OAAO80H,cAAA,KAAmB,aAAa;MACzC,KAAKC,eAAA,GAAkB,IAAID,cAAA,CAAerzH,OAAA,IAAW,KAAKmzH,cAAA,CAAejoH,IAAA,CAAKlL,OAAO,CAAC;IACxF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAwH,QAAQ6T,MAAA,EAAQ;IACd,IAAI,CAAC,KAAK+3G,mBAAA,CAAoB9zH,GAAA,CAAI+b,MAAM,GAAG;MACzC,KAAK+3G,mBAAA,CAAoB3zH,GAAA,CAAI4b,MAAA,EAAQ,IAAIjR,UAAA,CAAWC,QAAA,IAAY;QAC9D,MAAM48C,YAAA,GAAe,KAAKksE,cAAA,CAAejqF,SAAA,CAAU7+B,QAAQ;QAC3D,KAAKipH,eAAA,EAAiB9rH,OAAA,CAAQ6T,MAAA,EAAQ;UACpCk4G,GAAA,EAAK,KAAKL;QACZ,CAAC;QACD,OAAO,MAAM;UACX,KAAKI,eAAA,EAAiBE,SAAA,CAAUn4G,MAAM;UACtC4rC,YAAA,CAAale,WAAA,CAAY;UACzB,KAAKqqF,mBAAA,CAAoB1yH,MAAA,CAAO2a,MAAM;QACxC;MACF,CAAC,EAAErT,IAAA,CAAK5G,MAAA,CAAOpB,OAAA,IAAWA,OAAA,CAAQk+B,IAAA,CAAKu1F,KAAA,IAASA,KAAA,CAAMp4G,MAAA,KAAWA,MAAM,CAAC;MAAA;MAAA;MAAA;MAIxEisF,WAAA,CAAY;QACVosB,UAAA,EAAY;QACZn3E,QAAA,EAAU;MACZ,CAAC,GAAG2F,SAAA,CAAU,KAAKk+C,UAAU,CAAC,CAAC;IACjC;IACA,OAAO,KAAKgzB,mBAAA,CAAoB7zH,GAAA,CAAI8b,MAAM;EAC5C;EAAA;EAEA4I,QAAA,EAAU;IACR,KAAKm8E,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;IACzB,KAAKumH,cAAA,CAAevmH,QAAA,CAAS;IAC7B,KAAKwmH,mBAAA,CAAoBjzG,KAAA,CAAM;EACjC;AACF;AAWA,IAAMwzG,qBAAA,GAAN,MAAMA,qBAAA,CAAqB;EACzBv1H,YAAA,EAAc;IAEZ,KAAKw1H,UAAA,GAAa,mBAAIr1H,GAAA,CAAI;IAE1B,KAAK89D,OAAA,GAAUzyD,MAAA,CAAOO,MAAM;IAC5B,IAAI,OAAOkpH,cAAA,KAAmB,gBAAgB,OAAOxzH,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC5F,KAAKw8D,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC+E,MAAA,CAAOmB,gBAAA,CAAiB,SAAS+gH,6BAA6B;MAChE,CAAC;IACH;EACF;EACA7yG,YAAA,EAAc;IACZ,WAAW,GAAG7V,QAAQ,KAAK,KAAKupH,UAAA,EAAY;MAC1CvpH,QAAA,CAAS4Z,OAAA,CAAQ;IACnB;IACA,KAAK2vG,UAAA,CAAWzzG,KAAA,CAAM;IACtB,IAAI,OAAOkzG,cAAA,KAAmB,gBAAgB,OAAOxzH,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC5FgR,MAAA,CAAOmE,mBAAA,CAAoB,SAAS+9G,6BAA6B;IACnE;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAvrH,QAAQ6T,MAAA,EAAQjY,OAAA,EAAS;IACvB,MAAMmwH,GAAA,GAAMnwH,OAAA,EAASmwH,GAAA,IAAO;IAC5B,IAAI,CAAC,KAAKK,UAAA,CAAWt0H,GAAA,CAAIi0H,GAAG,GAAG;MAC7B,KAAKK,UAAA,CAAWn0H,GAAA,CAAI8zH,GAAA,EAAK,IAAIN,6BAAA,CAA8BM,GAAG,CAAC;IACjE;IACA,OAAO,KAAKK,UAAA,CAAWr0H,GAAA,CAAIg0H,GAAG,EAAE/rH,OAAA,CAAQ6T,MAAM;EAChD;AAaF;AAXIs4G,qBAAA,CAAKhrH,IAAA,GAAO,SAASkrH,6BAA6B7wH,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAK2wH,qBAAA,EAAsB;AACzC;AAGAA,qBAAA,CAAK7qH,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOyvH,qBAAA;EACP3qH,OAAA,EAAS2qH,qBAAA,CAAqBhrH,IAAA;EAC9B8M,UAAA,EAAY;AACd,CAAC;AA5CL,IAAMq+G,oBAAA,GAANH,qBAAA;AAAA,CA+CC,MAAM;EACL,CAAC,OAAO9zH,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4qH,oBAAA,EAAsB,CAAC;IAC7F7tH,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,EAAC,EAAG,IAAI;AACpB,GAAG;;;ACvHH,IAAM+jE,OAAM,CAAC,OAAO;AACpB,IAAMC,OAAM,CAAC,8BAA8B,EAAE;AAC7C,IAAMC,OAAM,CAAC,GAAG;AAChB,IAAMC,OAAM,CAAC,WAAW;AACxB,IAAMC,OAAM,CAAC,qBAAqB;AAClC,IAAMc,OAAM,CAAC,qBAAqB;AAClC,IAAMC,OAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,SAAS,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,SAAS,KAAK,CAAC,CAAC;AAC7S,IAAMmX,OAAM,CAAC,KAAK,aAAa,gCAAgC,mBAAmB,mBAAmB,gCAAgC,yBAAyB,+BAA+B,uBAAuB;AACpN,SAASiiC,gEAAgExoF,EAAA,EAAIlb,GAAA,EAAK;EAChF,IAAIkb,EAAA,GAAK,GAAG;IACPC,SAAA,CAAU,GAAG,QAAQ,EAAE;EAC5B;AACF;AACA,SAASwoF,kDAAkDzoF,EAAA,EAAIlb,GAAA,EAAK;EAClE,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,SAAS,EAAE;IAC7BoS,YAAA,CAAa,GAAG,CAAC;IACjBoC,UAAA,CAAW,GAAGmlC,+DAAA,EAAiE,GAAG,GAAG,QAAQ,EAAE;IAC/Fz5C,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc,CAAC;IAC9BC,UAAA,CAAW,YAAYi6C,MAAA,CAAOC,iBAAA,CAAkB,CAAC,EAAE,iBAAiBD,MAAA,CAAOE,WAAA,CAAY,CAAC,EAAE,MAAMF,MAAA,CAAOloC,QAAQ;IAC/GhhC,WAAA,CAAY,OAAOkpE,MAAA,CAAOG,QAAA,CAASC,wBAAA,GAA2B,OAAOJ,MAAA,CAAOG,QAAA,CAAS1wG,EAAE;IACvF62D,SAAA,CAAU,CAAC;IACXsU,aAAA,CAAc,GAAG,CAAColC,MAAA,CAAOK,kBAAA,IAAsBL,MAAA,CAAOG,QAAA,CAASviC,QAAA,GAAW,IAAI,EAAE;EACrF;AACF;AACA,SAAS0iC,oCAAoChpF,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACPqjD,UAAA,CAAW,GAAGolC,iDAAA,EAAmD,GAAG,GAAG,SAAS,EAAE;EACvF;EACA,IAAIzoF,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7B8U,aAAA,CAAc,GAAGolC,MAAA,CAAOO,iBAAA,CAAkB,IAAI,IAAI,EAAE;EACzD;AACF;AACA,SAASC,oCAAoClpF,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACPC,SAAA,CAAU,GAAG,OAAO,CAAC;EAC1B;AACF;AACA,SAASkpF,gEAAgEnpF,EAAA,EAAIlb,GAAA,EAAK,CAAC;AACnF,SAASskG,kDAAkDppF,EAAA,EAAIlb,GAAA,EAAK;EAClE,IAAIkb,EAAA,GAAK,GAAG;IACPqjD,UAAA,CAAW,GAAG8lC,+DAAA,EAAiE,GAAG,GAAG,eAAe,EAAE;EAC3G;EACA,IAAInpF,EAAA,GAAK,GAAG;IACPwuC,aAAA,CAAc,CAAC;IAClB,MAAM66C,gBAAA,GAAsBC,WAAA,CAAY,CAAC;IACtC76C,UAAA,CAAW,oBAAoB46C,gBAAgB;EACpD;AACF;AACA,SAASE,oCAAoCvpF,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC;IAC1BwU,UAAA,CAAW,GAAG+lC,iDAAA,EAAmD,GAAG,GAAG,MAAM,EAAE;IAC/Er6C,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,kCAAkCi6C,MAAA,CAAOC,iBAAA,CAAkB,CAAC;IACvE35C,SAAA,CAAU;IACVsU,aAAA,CAAc,GAAG,CAAColC,MAAA,CAAOc,uBAAA,CAAwB,IAAI,IAAI,EAAE;EAChE;AACF;AACA,SAASC,oCAAoCzpF,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;IAC7BoS,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;AACF;AACA,SAAS26C,oCAAoC1pF,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;IAC7BoS,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;AACF;AACA,SAAS46C,mDAAmD3pF,EAAA,EAAIlb,GAAA,EAAK,CAAC;AACtE,SAAS8kG,qCAAqC5pF,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACPqjD,UAAA,CAAW,GAAGsmC,kDAAA,EAAoD,GAAG,GAAG,eAAe,EAAE;EAC9F;EACA,IAAI3pF,EAAA,GAAK,GAAG;IACPwuC,aAAA,CAAc;IACjB,MAAM66C,gBAAA,GAAsBC,WAAA,CAAY,CAAC;IACtC76C,UAAA,CAAW,oBAAoB46C,gBAAgB;EACpD;AACF;AACA,SAASQ,qCAAqC7pF,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3BoS,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;AACF;AACA,SAAS+6C,qCAAqC9pF,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3BoS,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;AACF;AACA,SAASg7C,qCAAqC/pF,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACPC,SAAA,CAAU,GAAG,OAAO,EAAE;EAC3B;AACF;AACA,SAAS+pF,8BAA8BhqF,EAAA,EAAIlb,GAAA,EAAK;EAC9C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3BoS,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,uBAAuBi6C,MAAA,CAAOuB,wBAAwB;EACtE;AACF;AACA,SAASC,4CAA4ClqF,EAAA,EAAIlb,GAAA,EAAK;EAC5D,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,YAAY,EAAE;IAChCC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc,CAAC;IAC9BC,UAAA,CAAW,MAAMi6C,MAAA,CAAOyB,YAAY;IACpCn7C,SAAA,CAAU;IACVo7C,iBAAA,CAAkB1B,MAAA,CAAO2B,SAAS;EACvC;AACF;AACA,SAASC,8BAA8BtqF,EAAA,EAAIlb,GAAA,EAAK;EAC9C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3BwU,UAAA,CAAW,GAAG6mC,2CAAA,EAA6C,GAAG,GAAG,YAAY,EAAE;IAC/EjpC,YAAA,CAAa,GAAG,CAAC;IACjBhhD,SAAA,CAAU,GAAG,OAAO,EAAE;IACtBghD,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,uBAAuBi6C,MAAA,CAAOuB,wBAAwB;IACjEj7C,SAAA,CAAU;IACVsU,aAAA,CAAc,GAAGolC,MAAA,CAAO2B,SAAA,GAAY,IAAI,EAAE;EAC/C;AACF;AACA,IAAME,SAAA,GAAN,MAAMA,SAAA,CAAS,EAaf;AAXIA,SAAA,CAAKntH,IAAA,GAAO,SAASotH,iBAAiB/yH,CAAA,EAAG;EACvC,OAAO,KAAKA,CAAA,IAAK8yH,SAAA,EAAU;AAC7B;AAGAA,SAAA,CAAKluF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6vH,SAAA;EACNhuF,SAAA,EAAW,CAAC,CAAC,WAAW,CAAC;EACzBI,UAAA,EAAY;AACd,CAAC;AAXL,IAAM8tF,QAAA,GAANF,SAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAOj2H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8sH,QAAA,EAAU,CAAC;IACjF/vH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAI+tF,cAAA,GAAiB;AAMrB,IAAMC,SAAA,GAAY,IAAI3nH,cAAA,CAAe,UAAU;AAE/C,IAAM4nH,SAAA,GAAN,MAAMA,SAAA,CAAS;EACb/3H,YAAYg4H,QAAA,EAAUhjC,UAAA,EAAY;IAChC,KAAK1vE,EAAA,GAAK,iBAAiBuyG,cAAA,EAAgB;IAG3C,IAAI,CAACG,QAAA,EAAU;MACbhjC,UAAA,CAAW/pC,aAAA,CAAcloC,YAAA,CAAa,aAAa,QAAQ;IAC7D;EACF;AA2BF;AAzBIg1G,SAAA,CAAKxtH,IAAA,GAAO,SAAS0tH,iBAAiBrzH,CAAA,EAAG;EACvC,OAAO,KAAKA,CAAA,IAAKmzH,SAAA,EAAa9rE,iBAAA,CAAkB,WAAW,GAAMD,iBAAA,CAAqBG,UAAU,CAAC;AACnG;AAGA4rE,SAAA,CAAKvuF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMkwH,SAAA;EACNruF,SAAA,EAAW,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,YAAY,EAAE,CAAC;EAC/C47C,SAAA,EAAW,CAAC,eAAe,QAAQ,GAAG,4BAA4B,iCAAiC;EACnGj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS4rE,sBAAsB/qF,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE;IAChC;EACF;EACAqkB,MAAA,EAAQ;IACNrkB,EAAA,EAAI;EACN;EACAwkB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq+G,SAAA;IACTp+G,WAAA,EAAaq+G;EACf,CAAC,CAAC,CAAC;AACL,CAAC;AAjCL,IAAMI,QAAA,GAANJ,SAAA;AAAA,CAoCC,MAAM;EACL,CAAC,OAAOt2H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqtH,QAAA,EAAU,CAAC;IACjFtwH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,eAAe;QACf,QAAQ;MACV;MACAlG,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq+G,SAAA;QACTp+G,WAAA,EAAay+G;MACf,CAAC;MACDruF,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,WAAW;IACpB,CAAC;EACH,GAAG;IACD3M,IAAA,EAASskD;EACX,CAAC,GAAG;IACF7mC,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAIkuF,cAAA,GAAiB;AAErB,IAAMC,QAAA,GAAN,MAAMA,QAAA,CAAQ;EACZr4H,YAAA,EAAc;IAEZ,KAAKi0H,KAAA,GAAQ;IAEb,KAAK3uG,EAAA,GAAK,gBAAgB8yG,cAAA,EAAgB;EAC5C;AA0BF;AAxBIC,QAAA,CAAK9tH,IAAA,GAAO,SAAS+tH,gBAAgB1zH,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAKyzH,QAAA,EAAS;AAC5B;AAGAA,QAAA,CAAK7uF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwwH,QAAA;EACN3uF,SAAA,EAAW,CAAC,CAAC,UAAU,CAAC;EACxB47C,SAAA,EAAW,CAAC,GAAG,2BAA2B,iCAAiC;EAC3Ej5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASisE,qBAAqBprF,EAAA,EAAIlb,GAAA,EAAK;IACnD,IAAIkb,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE;MAC3BqnC,WAAA,CAAY,SAAS,IAAI;MACzB0/B,WAAA,CAAY,+BAA+Bp6D,GAAA,CAAIgiG,KAAA,KAAU,KAAK;IACnE;EACF;EACAtqF,MAAA,EAAQ;IACNsqF,KAAA,EAAO;IACP3uG,EAAA,EAAI;EACN;EACAwkB,UAAA,EAAY;AACd,CAAC;AA9BL,IAAM0uF,OAAA,GAANH,QAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAO52H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0tH,OAAA,EAAS,CAAC;IAChF3wH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,uCAAuC;QACvC,QAAQ;QAAA;QAER,gBAAgB;MAClB;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACRmqF,KAAA,EAAO,CAAC;MACNpsH,IAAA,EAAMqiC;IACR,CAAC;IACD5kB,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAOH,IAAMuuF,UAAA,GAAa,IAAItoH,cAAA,CAAe,WAAW;AAEjD,IAAMuoH,UAAA,GAAN,MAAMA,UAAA,CAAU;EACd14H,YAAA,EAAc;IACZ,KAAK24H,OAAA,GAAU;EACjB;EACA,IAAIC,gBAAgB73H,KAAA,EAAO;IACzB,KAAK43H,OAAA,GAAU;EACjB;AAoBF;AAlBID,UAAA,CAAKnuH,IAAA,GAAO,SAASsuH,kBAAkBj0H,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAK8zH,UAAA,EAAW;AAC9B;AAGAA,UAAA,CAAKlvF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6wH,UAAA;EACNhvF,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACvFC,MAAA,EAAQ;IACNivF,eAAA,EAAiB,CAAIhsE,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,iBAAiB;EAC5E;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASg/G,UAAA;IACT/+G,WAAA,EAAag/G;EACf,CAAC,CAAC,CAAC;AACL,CAAC;AAxBL,IAAMI,SAAA,GAANJ,UAAA;AAAA,CA2BC,MAAM;EACL,CAAC,OAAOj3H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBguH,SAAA,EAAW,CAAC;IAClFjxH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASg/G,UAAA;QACT/+G,WAAA,EAAao/G;MACf,CAAC;MACDhvF,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACR8uF,eAAA,EAAiB,CAAC;MAChB/wH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AAOH,IAAMukH,UAAA,GAAa,IAAI5oH,cAAA,CAAe,WAAW;AAEjD,IAAM6oH,UAAA,GAAN,MAAMA,UAAA,CAAU;EACdh5H,YAAA,EAAc;IACZ,KAAK24H,OAAA,GAAU;EACjB;EACA,IAAIC,gBAAgB73H,KAAA,EAAO;IACzB,KAAK43H,OAAA,GAAU;EACjB;AAoBF;AAlBIK,UAAA,CAAKzuH,IAAA,GAAO,SAAS0uH,kBAAkBr0H,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAKo0H,UAAA,EAAW;AAC9B;AAGAA,UAAA,CAAKxvF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmxH,UAAA;EACNtvF,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACvFC,MAAA,EAAQ;IACNivF,eAAA,EAAiB,CAAIhsE,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,iBAAiB;EAC5E;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASs/G,UAAA;IACTr/G,WAAA,EAAas/G;EACf,CAAC,CAAC,CAAC;AACL,CAAC;AAxBL,IAAME,SAAA,GAANF,UAAA;AAAA,CA2BC,MAAM;EACL,CAAC,OAAOv3H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBouH,SAAA,EAAW,CAAC;IAClFrxH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASs/G,UAAA;QACTr/G,WAAA,EAAaw/G;MACf,CAAC;MACDpvF,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACR8uF,eAAA,EAAiB,CAAC;MAChB/wH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AAGH,IAAM2kH,qBAAA,GAAwB,IAAIhpH,cAAA,CAAe,qBAAqB;AActE,IAAMipH,0BAAA,GAAN,MAAMA,0BAAA,CAA0B;EAAA;EAE9B,IAAIC,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAASt4H,KAAA,EAAO;IAClB,KAAKu4H,SAAA,GAAYv4H,KAAA;IACjB,IAAI,KAAKw4H,aAAA,EAAe;MACtB,KAAKC,aAAA,CAAc;IACrB;EACF;EAAA;EAEA,IAAID,cAAA,EAAgB;IAClB,OAAO,KAAKE,cAAA;EACd;EACA,IAAIF,cAAcx4H,KAAA,EAAO;IACvB,KAAK04H,cAAA,GAAiB14H,KAAA;IACtB,IAAI,KAAK04H,cAAA,EAAgB;MACvB,KAAKC,kBAAA,CAAmB;IAC1B,OAAO;MACL,KAAK9f,mBAAA,CAAoBjvE,WAAA,CAAY;IACvC;EACF;EACA3qC,YAAYg+D,WAAA,EAAa;IACvB,KAAKA,WAAA,GAAcA,WAAA;IACnB,KAAKs7D,SAAA,GAAY;IACjB,KAAKG,cAAA,GAAiB;IAEtB,KAAKvE,eAAA,GAAkB1pH,MAAA,CAAOkqH,oBAAoB;IAElD,KAAKz3D,OAAA,GAAUzyD,MAAA,CAAOO,MAAM;IAE5B,KAAK4iF,OAAA,GAAUnjF,MAAA,CAAO2tH,qBAAqB;IAE3C,KAAKvf,mBAAA,GAAsB,IAAInxD,YAAA,CAAa;EAC9C;EACA3mC,YAAA,EAAc;IACZ,KAAK83F,mBAAA,CAAoBjvE,WAAA,CAAY;EACvC;EAAA;EAEAgvF,SAAA,EAAW;IACT,OAAOC,mBAAA,CAAoB,KAAK57D,WAAA,CAAY/S,aAAa;EAC3D;EAAA;EAEA,IAAIhrC,QAAA,EAAU;IACZ,OAAO,KAAK+9C,WAAA,CAAY/S,aAAA;EAC1B;EAAA;EAEAuuE,cAAA,EAAgB;IASdx5E,UAAA,CAAW,MAAM,KAAK2uC,OAAA,CAAQkrC,mBAAA,CAAoB,CAAC;EACrD;EAAA;EAEAH,mBAAA,EAAqB;IACnB,KAAK9f,mBAAA,CAAoBjvE,WAAA,CAAY;IACrC,KAAKszB,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,KAAKksG,mBAAA,GAAsB,KAAKsb,eAAA,CAAgB9rH,OAAA,CAAQ,KAAK40D,WAAA,CAAY/S,aAAA,EAAe;QACtFkqE,GAAA,EAAK;MACP,CAAC,EAAErqF,SAAA,CAAU,MAAM,KAAK0uF,aAAA,CAAc,CAAC;IACzC,CAAC;EACH;AAwBF;AAtBIJ,0BAAA,CAAK7uH,IAAA,GAAO,SAASuvH,kCAAkCl1H,CAAA,EAAG;EACxD,OAAO,KAAKA,CAAA,IAAKw0H,0BAAA,EAA8BptE,iBAAA,CAAqBG,UAAU,CAAC;AACjF;AAGAitE,0BAAA,CAAK5vF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMuxH,0BAAA;EACN1vF,SAAA,EAAW,CAAC,CAAC,SAAS,6BAA6B,EAAE,CAAC;EACtD47C,SAAA,EAAW,CAAC,GAAG,sBAAsB,wBAAwB;EAC7Dj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASytE,uCAAuC5sF,EAAA,EAAIlb,GAAA,EAAK;IACrE,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,mCAAmCp6D,GAAA,CAAIonG,QAAQ;IAChE;EACF;EACA1vF,MAAA,EAAQ;IACN0vF,QAAA,EAAU;IACVE,aAAA,EAAe;EACjB;EACAzvF,UAAA,EAAY;AACd,CAAC;AAzFL,IAAMkwF,yBAAA,GAANZ,0BAAA;AAAA,CA4FC,MAAM;EACL,CAAC,OAAO33H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkvH,yBAAA,EAA2B,CAAC;IAClGnyH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,2CAA2C;MAC7C;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,CAAC,GAAG;IACFktE,QAAA,EAAU,CAAC;MACTxxH,IAAA,EAAMqiC;IACR,CAAC;IACDqvF,aAAA,EAAe,CAAC;MACd1xH,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,SAAS0vF,oBAAoB35G,OAAA,EAAS;EAKpC,MAAMg6G,MAAA,GAASh6G,OAAA;EACf,IAAIg6G,MAAA,CAAOC,YAAA,KAAiB,MAAM;IAChC,OAAOD,MAAA,CAAO53B,WAAA;EAChB;EACA,MAAMjgG,KAAA,GAAQ63H,MAAA,CAAOE,SAAA,CAAU,IAAI;EACnC/3H,KAAA,CAAMof,KAAA,CAAMkG,WAAA,CAAY,YAAY,UAAU;EAC9CtlB,KAAA,CAAMof,KAAA,CAAMkG,WAAA,CAAY,aAAa,6BAA6B;EAClE9U,QAAA,CAASklD,eAAA,CAAgBjkD,WAAA,CAAYzR,KAAK;EAC1C,MAAMigG,WAAA,GAAcjgG,KAAA,CAAMigG,WAAA;EAC1BjgG,KAAA,CAAM4O,MAAA,CAAO;EACb,OAAOqxF,WAAA;AACT;AAGA,IAAM+3B,cAAA,GAAiB;AAEvB,IAAMC,kBAAA,GAAqB;AAS3B,IAAMC,uBAAA,GAAN,MAAMA,uBAAA,CAAuB;EAC3Bt6H,YAAYg+D,WAAA,EAAalyD,MAAA,EAAQ;IAC/B,KAAKkyD,WAAA,GAAcA,WAAA;IACnB,KAAKu8D,oBAAA,GAAuBvwH,KAAA,IAAS;MACnC,MAAMmd,SAAA,GAAY,KAAK62C,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA;MACjD,MAAMqzG,cAAA,GAAiBrzG,SAAA,CAAUioD,QAAA,CAASirD,kBAAkB;MAC5D,IAAIrwH,KAAA,CAAMywH,YAAA,KAAiB,aAAaD,cAAA,EAAgB;QACtDrzG,SAAA,CAAUnW,MAAA,CAAOopH,cAAA,EAAgBC,kBAAkB;MACrD;IACF;IACAvuH,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;MAC7BswD,WAAA,CAAY/S,aAAA,CAAcr3C,gBAAA,CAAiB,iBAAiB,KAAK2mH,oBAAoB;IACvF,CAAC;EACH;EACA9qF,SAAA,EAAW;IACT,MAAMtoB,SAAA,GAAY,KAAK62C,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA;IACjDA,SAAA,CAAUnW,MAAA,CAAOqpH,kBAAkB;IACnClzG,SAAA,CAAUrW,GAAA,CAAIspH,cAAc;EAC9B;EACAlyF,WAAA,EAAa;IACX,KAAK81B,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAIupH,kBAAkB;EACjE;EACAv4G,YAAA,EAAc;IACZ,KAAKk8C,WAAA,CAAY/S,aAAA,CAAcr0C,mBAAA,CAAoB,iBAAiB,KAAK2jH,oBAAoB;EAC/F;AAcF;AAZID,uBAAA,CAAK/vH,IAAA,GAAO,SAASmwH,+BAA+B91H,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAK01H,uBAAA,EAA2BtuE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBjgD,MAAM,CAAC;AAC/G;AAGAuuH,uBAAA,CAAK9wF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMyyH,uBAAA;EACN5wF,SAAA,EAAW,CAAC,CAAC,OAAO,0BAA0B,EAAE,CAAC;EACjD47C,SAAA,EAAW,CAAC,GAAG,iBAAiB;EAChCx7C,UAAA,EAAY;AACd,CAAC;AApCL,IAAM6wF,sBAAA,GAANL,uBAAA;AAAA,CAuCC,MAAM;EACL,CAAC,OAAO74H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6vH,sBAAA,EAAwB,CAAC;IAC/F9yH,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASkE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAQH,IAAM6uH,2BAAA,GAAN,MAAMA,2BAAA,CAA2B;EAC/B56H,YAAYg+D,WAAA,EAAaC,OAAA,EAAS;IAChC,KAAKD,WAAA,GAAcA,WAAA;IACnB,KAAKC,OAAA,GAAUA,OAAA;IAEf,KAAKtoD,IAAA,GAAO;EACd;EACAwiE,gBAAA,EAAkB;IAChB,MAAMkE,KAAA,GAAQ,KAAKre,WAAA,CAAY/S,aAAA,CAAcrtC,aAAA,CAAc,qBAAqB;IAChF,IAAIy+D,KAAA,EAAO;MACT,KAAKre,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,+BAA+B;MAC5E,IAAI,OAAO2zF,qBAAA,KAA0B,YAAY;QAC/CpoB,KAAA,CAAM76D,KAAA,CAAMinE,kBAAA,GAAqB;QACjC,KAAKxqB,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;UACnC+2F,qBAAA,CAAsB,MAAMpoB,KAAA,CAAM76D,KAAA,CAAMinE,kBAAA,GAAqB,EAAE;QACjE,CAAC;MACH;IACF,OAAO;MACL,KAAKzqB,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,+BAA+B;IAC9E;EACF;EACA+pH,eAAeC,UAAA,EAAY;IACzB,IAAI,CAAC,KAAKnlH,IAAA,IAAQ,CAACmlH,UAAA,EAAY;MAC7B,KAAKC,MAAA,CAAO9vE,aAAA,CAAczpC,KAAA,CAAM82C,KAAA,GAAQ;IAC1C,OAAO;MACL,MAAM0iE,qBAAA,GAAwB;MAC9B,MAAMC,oBAAA,GAAuB;MAC7B,KAAKF,MAAA,CAAO9vE,aAAA,CAAczpC,KAAA,CAAM82C,KAAA,GAAQ,QAAQwiE,UAAU,+DAA+DE,qBAAA,GAAwBC,oBAAoB;IACvK;EACF;AAkDF;AAhDIL,2BAAA,CAAKrwH,IAAA,GAAO,SAAS2wH,mCAAmCt2H,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAKg2H,2BAAA,EAA+B5uE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBjgD,MAAM,CAAC;AACnH;AAGA6uH,2BAAA,CAAKhuF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM+yH,2BAAA;EACNlxF,SAAA,EAAW,CAAC,CAAC,OAAO,8BAA8B,EAAE,CAAC;EACrDsmD,SAAA,EAAW,SAASmrC,iCAAiChuF,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,MAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI8oG,MAAA,GAAS/rE,EAAA,CAAGxlD,KAAA;IAC/D;EACF;EACA87E,SAAA,EAAW,CAAC,GAAG,qBAAqB;EACpCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS8uE,wCAAwCjuF,EAAA,EAAIlb,GAAA,EAAK;IACtE,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,gCAAgCp6D,GAAA,CAAItc,IAAI;IACzD;EACF;EACAg0B,MAAA,EAAQ;IACNh0B,IAAA,EAAM,CAAIi3C,UAAA,CAAasnB,IAAA,EAAM,kCAAkC,MAAM;EACvE;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCwmD,KAAA,EAAOjY;EACP2S,kBAAA,EAAoB1S;EACpBvuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,8BAA8B,GAAG,CAAC,GAAG,4BAA4B,GAAG,CAAC,GAAG,+BAA+B,CAAC;EACpIhhD,QAAA,EAAU,SAASouF,oCAAoCluF,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChB/gD,SAAA,CAAU,GAAG,OAAO,CAAC;MACrB4uC,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7BoS,YAAA,CAAa,CAAC;MACdlS,YAAA,CAAa;MACb9uC,SAAA,CAAU,GAAG,OAAO,CAAC;IAC1B;EACF;EACAzoB,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA7EL,IAAMsuC,0BAAA,GAANV,2BAAA;AAAA,CAgFC,MAAM;EACL,CAAC,OAAOn5H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwwH,0BAAA,EAA4B,CAAC;IACnGzzH,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QAAA;QAAA;QAGT,wCAAwC;MAC1C;MACA8tE,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCxoE,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZmD,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTplC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASkE;EACX,CAAC,GAAG;IACF4J,IAAA,EAAM,CAAC;MACL9N,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,gCAAgC;IACzC,CAAC;IACDumH,MAAA,EAAQ,CAAC;MACPlzH,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,OAAO;IAChB,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAM+mH,sBAAA,GAAyB;EAAA;EAE7BC,kBAAA,EAAoBl5E,OAAA,CAAQ,sBAAsB;EAAA;EAElDhhB,KAAA,CAAM,SAAS9f,KAAA,CAAM;IACnBkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,iBAAiB,CAAC3+B,KAAA,CAAM;IACtCkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,GAAGsnE,OAAA,CAAQ,wCAAwC,CAAC,CAAC,EAAE;AAC1D;AAGA,IAAMgH,oBAAA,GAAN,MAAMA,oBAAA,CAAoB,EAW1B;AATIA,oBAAA,CAAKlxH,IAAA,GAAO,SAASmxH,4BAA4B92H,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAK62H,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKjyF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4zH;AACR,CAAC;AATL,IAAME,mBAAA,GAANF,oBAAA;AAAA,CAYC,MAAM;EACL,CAAC,OAAOh6H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB6wH,mBAAA,EAAqB,CAAC;IAC5F9zH,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAOH,SAAS2xF,mCAAmC3H,KAAA,EAAO;EACjD,OAAO3wH,KAAA,CAAM,2CAA2C2wH,KAAK,KAAK;AACpE;AAEA,SAAS4H,mCAAA,EAAqC;EAC5C,OAAOv4H,KAAA,CAAM,oDAAoD;AACnE;AAOA,IAAMw4H,cAAA,GAAiB,IAAI3rH,cAAA,CAAe,cAAc;AAKxD,IAAM4rH,8BAAA,GAAiC,IAAI5rH,cAAA,CAAe,gCAAgC;AAC1F,IAAI6zG,gBAAe;AAEnB,IAAMgY,kBAAA,GAAqB;AAK3B,IAAMC,mBAAA,GAAsB;AAE5B,IAAMC,wBAAA,GAA2B;AAMjC,IAAMC,uCAAA,GAA0C;AAEhD,IAAMC,aAAA,GAAN,MAAMA,aAAA,CAAa;EAAA;EAEjB,IAAIlG,mBAAA,EAAqB;IACvB,OAAO,KAAKmG,mBAAA;EACd;EACA,IAAInG,mBAAmBn1H,KAAA,EAAO;IAC5B,KAAKs7H,mBAAA,GAAsB/gE,qBAAA,CAAsBv6D,KAAK;EACxD;EAAA;EAEA,IAAIu7H,WAAA,EAAa;IACf,OAAO,KAAKC,WAAA,IAAe,KAAKC,SAAA,EAAWF,UAAA,IAAcL,mBAAA;EAC3D;EACA,IAAIK,WAAWv7H,KAAA,EAAO;IACpB,IAAIA,KAAA,KAAU,KAAKw7H,WAAA,EAAa;MAC9B,KAAKA,WAAA,GAAcx7H,KAAA;MAKnB,KAAKguF,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC;EACF;EAAA;EAEA,IAAIsjD,WAAA,EAAa;IACf,OAAO,KAAK6vC,WAAA;EACd;EACA,IAAI7vC,WAAW7rF,KAAA,EAAO;IACpB,MAAM27H,QAAA,GAAW,KAAKD,WAAA;IACtB,MAAME,aAAA,GAAgB57H,KAAA,IAAS,KAAKy7H,SAAA,EAAW5vC,UAAA,IAAcovC,kBAAA;IAC7D,IAAI,OAAOv6H,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAIk7H,aAAA,KAAkB,UAAUA,aAAA,KAAkB,WAAW;QAC3D,MAAM,IAAIr5H,KAAA,CAAM,qCAAqCq5H,aAAa,0CAA0C;MAC9G;IACF;IACA,KAAKF,WAAA,GAAcE,aAAA;IACnB,IAAI,KAAKF,WAAA,KAAgB,aAAa,KAAKA,WAAA,KAAgBC,QAAA,EAAU;MAInE,KAAKE,sCAAA,GAAyC;IAChD;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIC,gBAAA,EAAkB;IACpB,OAAO,KAAKC,gBAAA,IAAoB,KAAKN,SAAA,EAAWK,eAAA,IAAmBX,wBAAA;EACrE;EACA,IAAIW,gBAAgB97H,KAAA,EAAO;IACzB,KAAK+7H,gBAAA,GAAmB/7H,KAAA,IAAS,KAAKy7H,SAAA,EAAWK,eAAA,IAAmBX,wBAAA;EACtE;EAAA;EAEA,IAAI1E,UAAA,EAAY;IACd,OAAO,KAAKuF,UAAA;EACd;EACA,IAAIvF,UAAUz2H,KAAA,EAAO;IACnB,KAAKg8H,UAAA,GAAah8H,KAAA;IAClB,KAAKi8H,aAAA,CAAc;EACrB;EAAA;EAEA,IAAIhH,SAAA,EAAW;IACb,OAAO,KAAKiH,yBAAA,IAA6B,KAAKC,iBAAA;EAChD;EACA,IAAIlH,SAASj1H,KAAA,EAAO;IAClB,KAAKk8H,yBAAA,GAA4Bl8H,KAAA;EACnC;EACAf,YAAYg+D,WAAA,EAAa+wB,kBAAA,EAAoB9wB,OAAA,EAASyc,IAAA,EAAM1b,SAAA,EAAWw9D,SAAA,EAAW3wC,cAAA,EAKlFsxC,eAAA,EAAiB;IACf,KAAKn/D,WAAA,GAAcA,WAAA;IACnB,KAAK+wB,kBAAA,GAAqBA,kBAAA;IAC1B,KAAK9wB,OAAA,GAAUA,OAAA;IACf,KAAKyc,IAAA,GAAOA,IAAA;IACZ,KAAK1b,SAAA,GAAYA,SAAA;IACjB,KAAKw9D,SAAA,GAAYA,SAAA;IACjB,KAAK3wC,cAAA,GAAiBA,cAAA;IACtB,KAAKwwC,mBAAA,GAAsB;IAE3B,KAAK7zC,KAAA,GAAQ;IACb,KAAKi0C,WAAA,GAAcT,kBAAA;IACnB,KAAKc,gBAAA,GAAmB;IACxB,KAAKC,UAAA,GAAa;IAClB,KAAKK,cAAA,GAAiB;IACtB,KAAKC,cAAA,GAAiB;IACtB,KAAKC,cAAA,GAAiB;IACtB,KAAKC,cAAA,GAAiB;IAEtB,KAAK5vC,QAAA,GAAW,4BAA4Bq2B,eAAc;IAE1D,KAAKsT,YAAA,GAAe,gBAAgBtT,eAAc;IAElD,KAAKoT,wBAAA,GAA2B;IAChC,KAAKp1B,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAC9B,KAAKs/E,UAAA,GAAa;IAClB,KAAKZ,sCAAA,GAAyC;IAC9C,IAAIJ,SAAA,EAAW;MACb,IAAIA,SAAA,CAAU5vC,UAAA,EAAY;QACxB,KAAKA,UAAA,GAAa4vC,SAAA,CAAU5vC,UAAA;MAC9B;MACA,KAAKyvC,mBAAA,GAAsBoB,OAAA,CAAQjB,SAAA,EAAWtG,kBAAkB;MAChE,IAAIsG,SAAA,CAAUh0C,KAAA,EAAO;QACnB,KAAKA,KAAA,GAAQg0C,SAAA,CAAUh0C,KAAA;MACzB;IACF;EACF;EACArQ,gBAAA,EAAkB;IAGhB,KAAKulD,iBAAA,CAAkB;IAEvB,KAAKtG,wBAAA,GAA2B;IAGhC,KAAKroC,kBAAA,CAAmBkb,aAAA,CAAc;EACxC;EACAn8C,mBAAA,EAAqB;IACnB,KAAK6vE,uBAAA,CAAwB;IAC7B,KAAKC,kBAAA,CAAmB;IACxB,KAAKC,oBAAA,CAAqB;IAC1B,KAAKC,0BAAA,CAA2B;IAChC,KAAKC,0CAAA,CAA2C;EAClD;EACAC,sBAAA,EAAwB;IACtB,KAAKL,uBAAA,CAAwB;EAC/B;EACA77G,YAAA,EAAc;IACZ,KAAKkgF,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;EAC3B;EAAA;AAAA;AAAA;EAIAyvH,WAAA,EAAa;IACX,OAAO,KAAK7H,iBAAA,CAAkB,IAAI,KAAKzoC,QAAA,GAAW;EACpD;EAAA;AAAA;AAAA;AAAA;EAKAuwC,0BAAA,EAA4B;IAC1B,OAAO,KAAKC,UAAA,IAAc,KAAKngE,WAAA;EACjC;EAAA;EAEAogE,qBAAA,EAAuB;IASrB,IAAI,KAAKhI,iBAAA,CAAkB,GAAG;MAC5B,KAAKkG,UAAA,GAAa;IACpB;EACF;EAAA;EAEAsB,mBAAA,EAAqB;IACnB,MAAMl/C,OAAA,GAAU,KAAKs3C,QAAA;IACrB,IAAIt3C,OAAA,CAAQ2/C,WAAA,EAAa;MACvB,KAAKrgE,WAAA,CAAY/S,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,2BAA2B4tE,OAAA,CAAQ2/C,WAAW,EAAE;IAC/F;IAEA3/C,OAAA,CAAQ4/C,YAAA,CAAaxzF,SAAA,CAAU,MAAM;MACnC,KAAK4yF,iBAAA,CAAkB;MACvB,KAAKa,mBAAA,CAAoB;MACzB,KAAKxvC,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC,CAAC;IAED,IAAIo1C,OAAA,CAAQP,SAAA,IAAaO,OAAA,CAAQP,SAAA,CAAUqgD,YAAA,EAAc;MACvD9/C,OAAA,CAAQP,SAAA,CAAUqgD,YAAA,CAAa50H,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAKikD,kBAAA,CAAmBzlD,YAAA,CAAa,CAAC;IACxH;EACF;EACAm1F,2BAAA,EAA6B;IAC3B,KAAKrB,cAAA,GAAiB,CAAC,CAAC,KAAKsB,eAAA,CAAgBr+G,IAAA,CAAK0Y,CAAA,IAAK,CAACA,CAAA,CAAE4/F,OAAO;IACjE,KAAK0E,cAAA,GAAiB,CAAC,CAAC,KAAKqB,eAAA,CAAgBr+G,IAAA,CAAK0Y,CAAA,IAAKA,CAAA,CAAE4/F,OAAO;IAChE,KAAK2E,cAAA,GAAiB,CAAC,CAAC,KAAKqB,eAAA,CAAgBt+G,IAAA,CAAK1b,CAAA,IAAK,CAACA,CAAA,CAAEg0H,OAAO;IACjE,KAAK4E,cAAA,GAAiB,CAAC,CAAC,KAAKoB,eAAA,CAAgBt+G,IAAA,CAAK1b,CAAA,IAAKA,CAAA,CAAEg0H,OAAO;EAClE;EAAA;EAEAmF,2BAAA,EAA6B;IAC3B,KAAKW,0BAAA,CAA2B;IAIhCp/E,KAAA,CAAM,KAAKq/E,eAAA,CAAgB52F,OAAA,EAAS,KAAK62F,eAAA,CAAgB72F,OAAO,EAAEgD,SAAA,CAAU,MAAM;MAChF,KAAK2zF,0BAAA,CAA2B;MAChC,KAAK1vC,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAu0F,qBAAA,EAAuB;IAErB,KAAKe,aAAA,CAAc92F,OAAA,CAAQgD,SAAA,CAAU,MAAM;MACzC,KAAKkyF,aAAA,CAAc;MACnB,KAAKjuC,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC,CAAC;IAED,KAAKu1F,cAAA,CAAe/2F,OAAA,CAAQgD,SAAA,CAAU,MAAM;MAC1C,KAAKyzF,mBAAA,CAAoB;MACzB,KAAKxvC,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC,CAAC;IAED,KAAKw1F,cAAA,CAAe;IACpB,KAAKP,mBAAA,CAAoB;EAC3B;EAAA;EAEAZ,wBAAA,EAA0B;IACxB,IAAI,CAAC,KAAK3H,QAAA,KAAa,OAAOv0H,SAAA,KAAc,eAAeA,SAAA,GAAY;MACrE,MAAMo6H,kCAAA,CAAmC;IAC3C;EACF;EACA6B,kBAAA,EAAoB;IAMlB,IAAI,KAAK1H,QAAA,CAAS+I,OAAA,IAAW,CAAC,KAAKvB,UAAA,EAAY;MAC7C,KAAKA,UAAA,GAAa;MAClB,KAAKwB,WAAA,EAAavvF,QAAA,CAAS;IAC7B,WAAW,CAAC,KAAKumF,QAAA,CAAS+I,OAAA,KAAY,KAAKvB,UAAA,IAAc,KAAKA,UAAA,KAAe,OAAO;MAClF,KAAKA,UAAA,GAAa;MAClB,KAAKwB,WAAA,EAAa92F,UAAA,CAAW;IAC/B;IACA,KAAKi2F,UAAA,EAAYlzE,aAAA,CAAc9jC,SAAA,CAAU8vD,MAAA,CAAO,2BAA2B,KAAK++C,QAAA,CAAS+I,OAAO;EAClG;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAhB,2CAAA,EAA6C;IAE3C,KAAKW,eAAA,CAAgB52F,OAAA,CAAQgD,SAAA,CAAU,MAAM,KAAK8xF,sCAAA,GAAyC,IAAI;IAG/F,KAAK3+D,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,KAAKuwD,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM;QACrE,IAAI,KAAK8xF,sCAAA,EAAwC;UAC/C,KAAKA,sCAAA,GAAyC;UAC9C,KAAKqC,yBAAA,CAA0B;QACjC;MACF,CAAC;IACH,CAAC;IACD,KAAKvkD,IAAA,CAAK3U,MAAA,CAAOn8D,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAK8xF,sCAAA,GAAyC,IAAI;EACtH;EAAA;EAEAsC,mBAAA,EAAqB;IACnB,OAAO,KAAK5C,UAAA,KAAe;EAC7B;EACAvG,YAAA,EAAc;IACZ,OAAO,KAAKnpC,UAAA,KAAe;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA+pC,wBAAA,EAA0B;IACxB,OAAO,CAAC,KAAK33D,SAAA,CAAUhJ,SAAA,IAAa,KAAK0oE,eAAA,CAAgB58H,MAAA,IAAU,CAAC,KAAKg0H,iBAAA,CAAkB;EAC7F;EACAM,kBAAA,EAAoB;IAClB,OAAO,CAAC,CAAC,KAAK+I,oBAAA,IAAwB,CAAC,CAAC,KAAKC,iBAAA;EAC/C;EACAtJ,kBAAA,EAAoB;IAClB,OAAO,KAAKE,QAAA,CAASqJ,gBAAA,IAAoB,KAAKH,kBAAA,CAAmB;EACnE;EAAA;AAAA;AAAA;AAAA;EAKAI,eAAe1wG,IAAA,EAAM;IACnB,MAAM8vD,OAAA,GAAU,KAAKs3C,QAAA,GAAW,KAAKA,QAAA,CAAS73C,SAAA,GAAY;IAC1D,OAAOO,OAAA,IAAWA,OAAA,CAAQ9vD,IAAI;EAChC;EAAA;EAEA2wG,sBAAA,EAAwB;IACtB,OAAO,KAAKV,cAAA,IAAkB,KAAKA,cAAA,CAAe/8H,MAAA,GAAS,KAAK,KAAKk0H,QAAA,CAASz3C,UAAA,GAAa,UAAU;EACvG;EAAA;EAEAs7C,oBAAA,EAAsB;IACpB,KAAK2F,yBAAA,CAA0B;EACjC;EAAA;EAEAA,0BAAA,EAA4B;IAC1B,IAAI,CAAC,KAAKzJ,WAAA,CAAY,KAAK,CAAC,KAAK0J,cAAA,IAAkB,CAAC,KAAK3J,iBAAA,CAAkB,GAAG;MAC5E,KAAK4J,eAAA,EAAiB7E,cAAA,CAAe,CAAC;IACxC,OAAO;MACL,KAAK6E,eAAA,EAAiB7E,cAAA,CAAe,KAAK4E,cAAA,CAAe9F,QAAA,CAAS,CAAC;IACrE;EACF;EAAA;EAEAqD,cAAA,EAAgB;IACd,KAAK8B,cAAA,CAAe;IACpB,KAAKP,mBAAA,CAAoB;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAO,eAAA,EAAiB;IACf,IAAI,KAAKF,aAAA,KAAkB,OAAOn9H,SAAA,KAAc,eAAeA,SAAA,GAAY;MACzE,IAAIk+H,SAAA;MACJ,IAAIC,OAAA;MACJ,KAAKhB,aAAA,CAAcr+H,OAAA,CAAQs/H,IAAA,IAAQ;QACjC,IAAIA,IAAA,CAAK5L,KAAA,KAAU,SAAS;UAC1B,IAAI0L,SAAA,IAAa,KAAKnI,SAAA,EAAW;YAC/B,MAAMoE,kCAAA,CAAmC,OAAO;UAClD;UACA+D,SAAA,GAAYE,IAAA;QACd,WAAWA,IAAA,CAAK5L,KAAA,KAAU,OAAO;UAC/B,IAAI2L,OAAA,EAAS;YACX,MAAMhE,kCAAA,CAAmC,KAAK;UAChD;UACAgE,OAAA,GAAUC,IAAA;QACZ;MACF,CAAC;IACH;EACF;EAAA;AAAA;AAAA;AAAA;EAKAtB,oBAAA,EAAsB;IACpB,IAAI,KAAKvI,QAAA,EAAU;MACjB,IAAI3zD,GAAA,GAAM,EAAC;MAEX,IAAI,KAAK2zD,QAAA,CAAS8J,mBAAA,IAAuB,OAAO,KAAK9J,QAAA,CAAS8J,mBAAA,KAAwB,UAAU;QAC9Fz9D,GAAA,CAAIjhE,IAAA,CAAK,GAAG,KAAK40H,QAAA,CAAS8J,mBAAA,CAAoBx/H,KAAA,CAAM,GAAG,CAAC;MAC1D;MACA,IAAI,KAAKi/H,qBAAA,CAAsB,MAAM,QAAQ;QAC3C,MAAMI,SAAA,GAAY,KAAKf,aAAA,GAAgB,KAAKA,aAAA,CAAcv+G,IAAA,CAAKw/G,IAAA,IAAQA,IAAA,CAAK5L,KAAA,KAAU,OAAO,IAAI;QACjG,MAAM2L,OAAA,GAAU,KAAKhB,aAAA,GAAgB,KAAKA,aAAA,CAAcv+G,IAAA,CAAKw/G,IAAA,IAAQA,IAAA,CAAK5L,KAAA,KAAU,KAAK,IAAI;QAC7F,IAAI0L,SAAA,EAAW;UACbt9D,GAAA,CAAIjhE,IAAA,CAAKu+H,SAAA,CAAUr6G,EAAE;QACvB,WAAW,KAAKy3G,UAAA,EAAY;UAC1B16D,GAAA,CAAIjhE,IAAA,CAAK,KAAKk2H,YAAY;QAC5B;QACA,IAAIsI,OAAA,EAAS;UACXv9D,GAAA,CAAIjhE,IAAA,CAAKw+H,OAAA,CAAQt6G,EAAE;QACrB;MACF,WAAW,KAAKu5G,cAAA,EAAgB;QAC9Bx8D,GAAA,CAAIjhE,IAAA,CAAK,GAAG,KAAKy9H,cAAA,CAAe17H,GAAA,CAAI+F,KAAA,IAASA,KAAA,CAAMoc,EAAE,CAAC;MACxD;MACA,KAAK0wG,QAAA,CAAS+J,iBAAA,CAAkB19D,GAAG;IACrC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUA48D,0BAAA,EAA4B;IAC1B,IAAI,CAAC,KAAKjgE,SAAA,CAAUhJ,SAAA,IAAa,CAAC,KAAK+/D,WAAA,CAAY,KAAK,CAAC,KAAK0J,cAAA,EAAgB;MAC5E;IACF;IACA,MAAMO,aAAA,GAAgB,KAAKP,cAAA,CAAex/G,OAAA;IAG1C,IAAI,EAAE,KAAKggH,oBAAA,IAAwB,KAAKC,oBAAA,GAAuB;MAC7DF,aAAA,CAAcx+G,KAAA,CAAM2rC,SAAA,GAAY;MAChC;IACF;IAGA,IAAI,CAAC,KAAKgzE,gBAAA,CAAiB,GAAG;MAC5B,KAAKvD,sCAAA,GAAyC;MAC9C;IACF;IACA,MAAMwD,mBAAA,GAAsB,KAAKH,oBAAA,EAAsBh1E,aAAA;IACvD,MAAMo1E,mBAAA,GAAsB,KAAKH,oBAAA,EAAsBj1E,aAAA;IACvD,MAAMq1E,wBAAA,GAA2BF,mBAAA,EAAqBv4C,qBAAA,CAAsB,EAAEvvB,KAAA,IAAS;IACvF,MAAMioE,wBAAA,GAA2BF,mBAAA,EAAqBx4C,qBAAA,CAAsB,EAAEvvB,KAAA,IAAS;IAGvF,MAAMkoE,MAAA,GAAS,KAAK9lD,IAAA,CAAK35E,KAAA,KAAU,QAAQ,OAAO;IAClD,MAAM0/H,WAAA,GAAc,GAAGH,wBAAA,GAA2BC,wBAAwB;IAC1E,MAAMG,WAAA,GAAc;IACpB,MAAMC,qBAAA,GAAwB,QAAQH,MAAM,OAAOC,WAAW,MAAMC,WAAW;IAI/EV,aAAA,CAAcx+G,KAAA,CAAM2rC,SAAA,GAAY;AAAA;AAAA,UAE1BgvE,uCAAuC,eAAewE,qBAAqB;AAAA;EAEnF;EAAA;EAEAR,iBAAA,EAAmB;IACjB,MAAMlgH,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,IAAIhrC,OAAA,CAAQk5C,WAAA,EAAa;MACvB,MAAMtgB,QAAA,GAAW54B,OAAA,CAAQk5C,WAAA,CAAY;MAGrC,OAAOtgB,QAAA,IAAYA,QAAA,KAAa54B,OAAA;IAClC;IAGA,OAAOrN,QAAA,CAASklD,eAAA,CAAgBsX,QAAA,CAASnvD,OAAO;EAClD;AA0IF;AAxIIm8G,aAAA,CAAK7xH,IAAA,GAAO,SAASq2H,qBAAqBh8H,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKw3H,aAAA,EAAiBpwE,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBwuB,cAAc,GAAMxuB,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAkB+vE,8BAAA,EAAgC,CAAC,GAAM/vE,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkB53C,QAAQ,CAAC;AACtW;AAGAgoH,aAAA,CAAKxvF,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMu0H,aAAA;EACN1yF,SAAA,EAAW,CAAC,CAAC,gBAAgB,CAAC;EAC9BklB,cAAA,EAAgB,SAASiyE,4BAA4B1zF,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IACtE,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAU8oE,QAAA,EAAU,CAAC;MACpC7oE,cAAA,CAAeD,QAAA,EAAU8oE,QAAA,EAAU,CAAC;MACpC7oE,cAAA,CAAeD,QAAA,EAAU6sE,mBAAA,EAAqB,CAAC;MAC/C5sE,cAAA,CAAeD,QAAA,EAAU2pE,UAAA,EAAY,CAAC;MACtC1pE,cAAA,CAAeD,QAAA,EAAUiqE,UAAA,EAAY,CAAC;MACtChqE,cAAA,CAAeD,QAAA,EAAUgpE,SAAA,EAAW,CAAC;MACrC/oE,cAAA,CAAeD,QAAA,EAAU0pE,OAAA,EAAS,CAAC;IACxC;IACA,IAAIrrF,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIktG,oBAAA,GAAuBnwE,EAAA,CAAGxlD,KAAA;MACxEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAImtG,iBAAA,GAAoBpwE,EAAA,CAAGxlD,KAAA;MACrEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIirG,iBAAA,GAAoBluE,EAAA,CAAGxlD,KAAA;MACrEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIysG,eAAA,GAAkB1vE,EAAA;MAChEC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI0sG,eAAA,GAAkB3vE,EAAA;MAChEC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI4sG,cAAA,GAAiB7vE,EAAA;MAC/DC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI2sG,aAAA,GAAgB5vE,EAAA;IACnE;EACF;EACAghC,SAAA,EAAW,SAAS8wC,mBAAmB3zF,EAAA,EAAIlb,GAAA,EAAK;IAC9C,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY3U,MAAK,CAAC;MAClB2U,WAAA,CAAY1U,MAAK,CAAC;MAClB0U,WAAA,CAAY5T,MAAK,CAAC;MAClB4T,WAAA,CAAY8pC,yBAAA,EAA2B,CAAC;MACxC9pC,WAAA,CAAYorC,0BAAA,EAA4B,CAAC;MACzCprC,WAAA,CAAYyqC,sBAAA,EAAwB,CAAC;IAC1C;IACA,IAAIxtF,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIksG,UAAA,GAAanvE,EAAA,CAAGxlD,KAAA;MAC9DylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIguG,oBAAA,GAAuBjxE,EAAA,CAAGxlD,KAAA;MACxEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIiuG,oBAAA,GAAuBlxE,EAAA,CAAGxlD,KAAA;MACxEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIwtG,cAAA,GAAiBzwE,EAAA,CAAGxlD,KAAA;MAClEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIytG,eAAA,GAAkB1wE,EAAA,CAAGxlD,KAAA;MACnEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI+sG,WAAA,GAAchwE,EAAA,CAAGxlD,KAAA;IACpE;EACF;EACA87E,SAAA,EAAW,CAAC,GAAG,oBAAoB;EACnCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASy0E,0BAA0B5zF,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,yCAAyCp6D,GAAA,CAAIitG,kBAAA,CAAmB,CAAC,EAAE,sCAAsCjtG,GAAA,CAAImrG,cAAc,EAAE,sCAAsCnrG,GAAA,CAAIqrG,cAAc,EAAE,0BAA0BrrG,GAAA,CAAI+jG,QAAA,CAASz3C,UAAU,EAAE,2BAA2BtsD,GAAA,CAAI+jG,QAAA,CAASv4D,QAAQ,EAAE,6BAA6BxrC,GAAA,CAAI+jG,QAAA,CAASgL,UAAU,EAAE,gCAAgC/uG,GAAA,CAAI45D,cAAA,KAAmB,gBAAgB,EAAE,kCAAkC55D,GAAA,CAAI26D,UAAA,IAAc,MAAM,EAAE,qCAAqC36D,GAAA,CAAI26D,UAAA,IAAc,SAAS,EAAE,mCAAmC36D,GAAA,CAAImkG,iBAAA,CAAkB,KAAK,CAACnkG,GAAA,CAAI6jG,iBAAA,CAAkB,CAAC,EAAE,eAAe7jG,GAAA,CAAI+jG,QAAA,CAAS+I,OAAO,EAAE,eAAe9sG,GAAA,CAAIu2D,KAAA,KAAU,YAAYv2D,GAAA,CAAIu2D,KAAA,KAAU,MAAM,EAAE,cAAcv2D,GAAA,CAAIu2D,KAAA,KAAU,QAAQ,EAAE,YAAYv2D,GAAA,CAAIu2D,KAAA,KAAU,MAAM,EAAE,gBAAgBv2D,GAAA,CAAIqtG,cAAA,CAAe,WAAW,CAAC,EAAE,cAAcrtG,GAAA,CAAIqtG,cAAA,CAAe,SAAS,CAAC,EAAE,eAAertG,GAAA,CAAIqtG,cAAA,CAAe,UAAU,CAAC,EAAE,YAAYrtG,GAAA,CAAIqtG,cAAA,CAAe,OAAO,CAAC,EAAE,YAAYrtG,GAAA,CAAIqtG,cAAA,CAAe,OAAO,CAAC,EAAE,cAAcrtG,GAAA,CAAIqtG,cAAA,CAAe,SAAS,CAAC,EAAE,cAAcrtG,GAAA,CAAIqtG,cAAA,CAAe,SAAS,CAAC;IACrmC;EACF;EACA31F,MAAA,EAAQ;IACNusF,kBAAA,EAAoB;IACpB1tC,KAAA,EAAO;IACP8zC,UAAA,EAAY;IACZ1vC,UAAA,EAAY;IACZiwC,eAAA,EAAiB;IACjBrF,SAAA,EAAW;EACb;EACA3tF,QAAA,EAAU,CAAC,cAAc;EACzBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASqiH,cAAA;IACTpiH,WAAA,EAAa0iH;EACf,GAAG;IACD3iH,OAAA,EAAS0/G,qBAAA;IACTz/G,WAAA,EAAa0iH;EACf,CAAC,CAAC,GAAMtvF,mBAAmB;EAC3BkhD,kBAAA,EAAoB0F;EACpB3mD,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,GAAG,8BAA8B,kBAAkB,GAAG,OAAO,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,8BAA8B,IAAI,GAAG,gCAAgC,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,GAAG,wCAAwC,iCAAiC,GAAG,CAAC,6BAA6B,IAAI,GAAG,YAAY,iBAAiB,IAAI,GAAG,CAAC,eAAe,QAAQ,GAAG,sCAAsC,8BAA8B,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,iCAAiC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,gCAAgC,CAAC;EACl7BhhD,QAAA,EAAU,SAASg0F,sBAAsB9zF,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;MAC7BhzC,eAAA,CAAgB5R,IAAG;MACnBiU,UAAA,CAAW,GAAG2lC,mCAAA,EAAqC,GAAG,GAAG,eAAe,MAAM,GAAMiL,sBAAsB;MAC1GplD,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7BxvB,UAAA,CAAW,SAAS,SAAS60E,2CAA2C30E,MAAA,EAAQ;QAC9E40E,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAI+jG,QAAA,CAASwL,gBAAA,CAAiB90E,MAAM,CAAC;MAC7D,CAAC;MACE8jC,UAAA,CAAW,GAAG6lC,mCAAA,EAAqC,GAAG,GAAG,OAAO,CAAC;MACjEr6C,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1BwU,UAAA,CAAW,GAAGkmC,mCAAA,EAAqC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAGE,mCAAA,EAAqC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAGC,mCAAA,EAAqC,GAAG,GAAG,OAAO,CAAC;MACjL76C,cAAA,CAAe,GAAG,OAAO,EAAE;MAC3BwU,UAAA,CAAW,IAAIumC,oCAAA,EAAsC,GAAG,GAAG,MAAM,EAAE;MACnE3oC,YAAA,CAAa,EAAE;MACflS,YAAA,CAAa;MACbsU,UAAA,CAAW,IAAIwmC,oCAAA,EAAsC,GAAG,GAAG,OAAO,EAAE,EAAE,IAAIC,oCAAA,EAAsC,GAAG,GAAG,OAAO,EAAE;MAC/H/6C,YAAA,CAAa;MACbsU,UAAA,CAAW,IAAI0mC,oCAAA,EAAsC,GAAG,GAAG,OAAO,EAAE;MACpEh7C,YAAA,CAAa;MACbF,cAAA,CAAe,IAAI,OAAO,EAAE;MAC5BwU,UAAA,CAAW,IAAI2mC,6BAAA,EAA+B,GAAG,CAAC,EAAE,IAAIM,6BAAA,EAA+B,GAAG,CAAC;MAC3Fv7C,YAAA,CAAa;IAClB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACV,IAAIs0F,QAAA;MACDtlD,SAAA,CAAU,CAAC;MACXkQ,WAAA,CAAY,0BAA0B,CAACp6D,GAAA,CAAI8jG,WAAA,CAAY,CAAC,EAAE,4BAA4B9jG,GAAA,CAAI8jG,WAAA,CAAY,CAAC,EAAE,4BAA4B,CAAC9jG,GAAA,CAAImkG,iBAAA,CAAkB,CAAC,EAAE,4BAA4BnkG,GAAA,CAAI+jG,QAAA,CAASv4D,QAAQ,EAAE,2BAA2BxrC,GAAA,CAAI+jG,QAAA,CAASz3C,UAAU;MACpQpC,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAG,CAACx+D,GAAA,CAAI8jG,WAAA,CAAY,KAAK,CAAC9jG,GAAA,CAAI+jG,QAAA,CAASv4D,QAAA,GAAW,IAAI,EAAE;MACtE0e,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAGx+D,GAAA,CAAI8jG,WAAA,CAAY,IAAI,IAAI,EAAE;MAC3C55C,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAImrG,cAAA,GAAiB,IAAI,EAAE;MAC5CjhD,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIorG,cAAA,GAAiB,IAAI,EAAE;MAC5ClhD,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,IAAI,CAACx+D,GAAA,CAAI8jG,WAAA,CAAY,KAAK9jG,GAAA,CAAI0kG,uBAAA,CAAwB,IAAI,KAAK,EAAE;MAC/Ex6C,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,IAAIx+D,GAAA,CAAIsrG,cAAA,GAAiB,KAAK,EAAE;MAC9CphD,SAAA,CAAU;MACVsU,aAAA,CAAc,IAAIx+D,GAAA,CAAIqrG,cAAA,GAAiB,KAAK,EAAE;MAC9CnhD,SAAA,CAAU;MACVsU,aAAA,CAAc,IAAI,CAACx+D,GAAA,CAAI8jG,WAAA,CAAY,IAAI,KAAK,EAAE;MAC9C55C,SAAA,CAAU;MACVkQ,WAAA,CAAY,6CAA6Cp6D,GAAA,CAAI4qG,eAAA,KAAoB,SAAS;MAC1F1gD,SAAA,CAAU;MACVsU,aAAA,CAAc,KAAKgxC,QAAA,GAAWxvG,GAAA,CAAIstG,qBAAA,CAAsB,OAAO,UAAU,KAAKkC,QAAA,KAAa,SAAS,KAAK,EAAE;IAChH;EACF;EACAp0F,YAAA,EAAc,CAAC2sF,yBAAA,EAA2BsB,0BAAA,EAA4BoG,gBAAA,EAAkB/G,sBAAA,EAAwBnC,OAAO;EACvHj3G,MAAA,EAAQ,CAAC,s3sDAAk4sD;EAC34sDoD,aAAA,EAAe;EACfrR,IAAA,EAAM;IACJy0E,SAAA,EAAW,CAACwzC,sBAAA,CAAuBC,kBAAkB;EACvD;EACAxuC,eAAA,EAAiB;AACnB,CAAC;AA7iBL,IAAM20C,YAAA,GAANvF,aAAA;AAAA,CAgjBC,MAAM;EACL,CAAC,OAAO36H,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB62H,YAAA,EAAc,CAAC;IACrF95H,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV+3F,UAAA,EAAY,CAACrG,sBAAA,CAAuBC,kBAAkB;MACtDt8G,IAAA,EAAM;QACJ,SAAS;QACT,iDAAiD;QACjD,8CAA8C;QAC9C,8CAA8C;QAAA;QAAA;QAAA;QAI9C,kCAAkC;QAClC,mCAAmC;QACnC,qCAAqC;QACrC,wCAAwC;QACxC,0CAA0C;QAC1C,6CAA6C;QAC7C,2CAA2C;QAC3C,uBAAuB;QACvB,uBAAuB;QACvB,sBAAsB;QACtB,oBAAoB;QACpB,wBAAwB;QACxB,sBAAsB;QACtB,uBAAuB;QACvB,oBAAoB;QACpB,oBAAoB;QACpB,sBAAsB;QACtB,sBAAsB;MACxB;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCn0E,SAAA,EAAW,CAAC;QACVS,OAAA,EAASqiH,cAAA;QACTpiH,WAAA,EAAaioH;MACf,GAAG;QACDloH,OAAA,EAAS0/G,qBAAA;QACTz/G,WAAA,EAAaioH;MACf,CAAC;MACD73F,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC+sG,yBAAA,EAA2BsB,0BAAA,EAA4BoG,gBAAA,EAAkB/G,sBAAA,EAAwBnC,OAAO;MAClHvrF,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,s3sDAAk4sD;IAC74sD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS2yE;EACX,GAAG;IACD3yE,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACunH,8BAA8B;IACvC,CAAC;EACH,GAAG;IACDl0H,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACF+pH,UAAA,EAAY,CAAC;MACXt2H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,WAAW;IACpB,CAAC;IACDyrH,oBAAA,EAAsB,CAAC;MACrBp4H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,qBAAqB;IAC9B,CAAC;IACD0rH,oBAAA,EAAsB,CAAC;MACrBr4H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,qBAAqB;IAC9B,CAAC;IACDirH,cAAA,EAAgB,CAAC;MACf53H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACwlH,yBAAyB;IAClC,CAAC;IACD0F,eAAA,EAAiB,CAAC;MAChB73H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC8mH,0BAA0B;IACnC,CAAC;IACD0D,WAAA,EAAa,CAAC;MACZn3H,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACmmH,sBAAsB;IAC/B,CAAC;IACDwE,oBAAA,EAAsB,CAAC;MACrBt3H,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACojH,QAAQ;IACjB,CAAC;IACDwH,iBAAA,EAAmB,CAAC;MAClBv3H,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACojH,QAAA,EAAU;QACfhnC,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;IACDssC,iBAAA,EAAmB,CAAC;MAClBr1H,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACmnH,mBAAmB;IAC5B,CAAC;IACD+C,eAAA,EAAiB,CAAC;MAChB72H,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACikH,UAAA,EAAY;QACjBx8E,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD0iF,eAAA,EAAiB,CAAC;MAChB92H,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACukH,UAAA,EAAY;QACjB98E,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD4iF,cAAA,EAAgB,CAAC;MACfh3H,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACsjH,SAAA,EAAW;QAChB77E,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD2iF,aAAA,EAAe,CAAC;MACd/2H,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACgkH,OAAA,EAAS;QACdv8E,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACDi6E,kBAAA,EAAoB,CAAC;MACnBruH,IAAA,EAAMqiC;IACR,CAAC;IACDs+C,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACDoyF,UAAA,EAAY,CAAC;MACXz0H,IAAA,EAAMqiC;IACR,CAAC;IACD0iD,UAAA,EAAY,CAAC;MACX/kF,IAAA,EAAMqiC;IACR,CAAC;IACD2yF,eAAA,EAAiB,CAAC;MAChBh1H,IAAA,EAAMqiC;IACR,CAAC;IACDstF,SAAA,EAAW,CAAC;MACV3vH,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM43F,mBAAA,GAAN,MAAMA,mBAAA,CAAmB,EAgBzB;AAdIA,mBAAA,CAAKv3H,IAAA,GAAO,SAASw3H,2BAA2Bn9H,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAKk9H,mBAAA,EAAoB;AACvC;AAGAA,mBAAA,CAAKjnH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMi6H;AACR,CAAC;AAGDA,mBAAA,CAAK/mH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiB3wD,YAAA,EAAcuxC,eAAA,EAAiBof,eAAe;AAC3E,CAAC;AAdL,IAAMmkD,kBAAA,GAANF,mBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOrgI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBk3H,kBAAA,EAAoB,CAAC;IAC3Fn6H,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB3wD,YAAA,EAAcuxC,eAAA,EAAiBkjE,YAAA,EAAc/J,QAAA,EAAUO,QAAA,EAAUK,OAAA,EAASM,SAAA,EAAWI,SAAS;MACzH7rG,OAAA,EAAS,CAACs0G,YAAA,EAAc/J,QAAA,EAAUY,OAAA,EAASL,QAAA,EAAUW,SAAA,EAAWI,SAAA,EAAWr7C,eAAe;IAC5F,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACriDH,IAAMzC,OAAM,CAAC,GAAG;AAChB,IAAI6mD,MAAA;AAKJ,SAASC,UAAA,EAAY;EACnB,IAAID,MAAA,KAAW,QAAW;IACxBA,MAAA,GAAS;IACT,IAAI,OAAOxvH,MAAA,KAAW,aAAa;MACjC,MAAM0vH,QAAA,GAAW1vH,MAAA;MACjB,IAAI0vH,QAAA,CAASC,YAAA,KAAiB,QAAW;QACvCH,MAAA,GAASE,QAAA,CAASC,YAAA,CAAaC,YAAA,CAAa,sBAAsB;UAChEC,UAAA,EAAY39H,CAAA,IAAKA;QACnB,CAAC;MACH;IACF;EACF;EACA,OAAOs9H,MAAA;AACT;AAUA,SAASM,sBAAsB3yB,IAAA,EAAM;EACnC,OAAOsyB,SAAA,CAAU,GAAGI,UAAA,CAAW1yB,IAAI,KAAKA,IAAA;AAC1C;AAOA,SAAS4yB,4BAA4BC,QAAA,EAAU;EAC7C,OAAOn/H,KAAA,CAAM,sCAAsCm/H,QAAQ,GAAG;AAChE;AAMA,SAASC,8BAAA,EAAgC;EACvC,OAAOp/H,KAAA,CAAM,4JAAsK;AACrL;AAMA,SAASq/H,mCAAmC/7H,GAAA,EAAK;EAC/C,OAAOtD,KAAA,CAAM,wHAA6HsD,GAAG,IAAI;AACnJ;AAMA,SAASg8H,uCAAuCC,OAAA,EAAS;EACvD,OAAOv/H,KAAA,CAAM,0HAA+Hu/H,OAAO,IAAI;AACzJ;AAKA,IAAMC,aAAA,GAAN,MAAoB;EAClB9iI,YAAY4G,GAAA,EAAKm8H,OAAA,EAAS/9H,OAAA,EAAS;IACjC,KAAK4B,GAAA,GAAMA,GAAA;IACX,KAAKm8H,OAAA,GAAUA,OAAA;IACf,KAAK/9H,OAAA,GAAUA,OAAA;EACjB;AACF;AAQA,IAAMg+H,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBhjI,YAAYijI,WAAA,EAAaC,UAAA,EAAYtwH,WAAUuwH,aAAA,EAAe;IAC5D,KAAKF,WAAA,GAAcA,WAAA;IACnB,KAAKC,UAAA,GAAaA,UAAA;IAClB,KAAKC,aAAA,GAAgBA,aAAA;IAIrB,KAAKC,eAAA,GAAkB,mBAAIjjI,GAAA,CAAI;IAK/B,KAAKkjI,eAAA,GAAkB,mBAAIljI,GAAA,CAAI;IAE/B,KAAKmjI,iBAAA,GAAoB,mBAAInjI,GAAA,CAAI;IAEjC,KAAKojI,qBAAA,GAAwB,mBAAIpjI,GAAA,CAAI;IAErC,KAAKqjI,sBAAA,GAAyB,mBAAIrjI,GAAA,CAAI;IAEtC,KAAKsjI,UAAA,GAAa,EAAC;IAMnB,KAAKC,oBAAA,GAAuB,CAAC,kBAAkB,mBAAmB;IAClE,KAAK73G,SAAA,GAAYjZ;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+wH,WAAWlB,QAAA,EAAU77H,GAAA,EAAK5B,OAAA,EAAS;IACjC,OAAO,KAAK4+H,qBAAA,CAAsB,IAAInB,QAAA,EAAU77H,GAAA,EAAK5B,OAAO;EAC9D;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6+H,kBAAkBpB,QAAA,EAAUI,OAAA,EAAS79H,OAAA,EAAS;IAC5C,OAAO,KAAK8+H,4BAAA,CAA6B,IAAIrB,QAAA,EAAUI,OAAA,EAAS79H,OAAO;EACzE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA4+H,sBAAsB99G,SAAA,EAAW28G,QAAA,EAAU77H,GAAA,EAAK5B,OAAA,EAAS;IACvD,OAAO,KAAK++H,iBAAA,CAAkBj+G,SAAA,EAAW28G,QAAA,EAAU,IAAIK,aAAA,CAAcl8H,GAAA,EAAK,MAAM5B,OAAO,CAAC;EAC1F;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAg/H,mBAAmBznF,QAAA,EAAU;IAC3B,KAAKknF,UAAA,CAAWriI,IAAA,CAAKm7C,QAAQ;IAC7B,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAunF,6BAA6Bh+G,SAAA,EAAW28G,QAAA,EAAUI,OAAA,EAAS79H,OAAA,EAAS;IAClE,MAAMi/H,YAAA,GAAe,KAAKf,UAAA,CAAWlxG,QAAA,CAASE,eAAA,CAAgBE,IAAA,EAAMywG,OAAO;IAE3E,IAAI,CAACoB,YAAA,EAAc;MACjB,MAAMrB,sCAAA,CAAuCC,OAAO;IACtD;IAEA,MAAMqB,cAAA,GAAiB3B,qBAAA,CAAsB0B,YAAY;IACzD,OAAO,KAAKF,iBAAA,CAAkBj+G,SAAA,EAAW28G,QAAA,EAAU,IAAIK,aAAA,CAAc,IAAIoB,cAAA,EAAgBl/H,OAAO,CAAC;EACnG;EAAA;AAAA;AAAA;AAAA;EAKAm/H,cAAcv9H,GAAA,EAAK5B,OAAA,EAAS;IAC1B,OAAO,KAAKo/H,wBAAA,CAAyB,IAAIx9H,GAAA,EAAK5B,OAAO;EACvD;EAAA;AAAA;AAAA;AAAA;EAKAq/H,qBAAqBxB,OAAA,EAAS79H,OAAA,EAAS;IACrC,OAAO,KAAKs/H,+BAAA,CAAgC,IAAIzB,OAAA,EAAS79H,OAAO;EAClE;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAo/H,yBAAyBt+G,SAAA,EAAWlf,GAAA,EAAK5B,OAAA,EAAS;IAChD,OAAO,KAAKu/H,oBAAA,CAAqBz+G,SAAA,EAAW,IAAIg9G,aAAA,CAAcl8H,GAAA,EAAK,MAAM5B,OAAO,CAAC;EACnF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAs/H,gCAAgCx+G,SAAA,EAAW+8G,OAAA,EAAS79H,OAAA,EAAS;IAC3D,MAAMi/H,YAAA,GAAe,KAAKf,UAAA,CAAWlxG,QAAA,CAASE,eAAA,CAAgBE,IAAA,EAAMywG,OAAO;IAC3E,IAAI,CAACoB,YAAA,EAAc;MACjB,MAAMrB,sCAAA,CAAuCC,OAAO;IACtD;IAEA,MAAMqB,cAAA,GAAiB3B,qBAAA,CAAsB0B,YAAY;IACzD,OAAO,KAAKM,oBAAA,CAAqBz+G,SAAA,EAAW,IAAIg9G,aAAA,CAAc,IAAIoB,cAAA,EAAgBl/H,OAAO,CAAC;EAC5F;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAsBAw/H,uBAAuBlmE,KAAA,EAAOmmE,UAAA,GAAanmE,KAAA,EAAO;IAChD,KAAKklE,sBAAA,CAAuBniI,GAAA,CAAIi9D,KAAA,EAAOmmE,UAAU;IACjD,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAC,sBAAsBpmE,KAAA,EAAO;IAC3B,OAAO,KAAKklE,sBAAA,CAAuBriI,GAAA,CAAIm9D,KAAK,KAAKA,KAAA;EACnD;EAAA;AAAA;AAAA;AAAA;EAKAqmE,uBAAA,GAA0BF,UAAA,EAAY;IACpC,KAAKf,oBAAA,GAAuBe,UAAA;IAC5B,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAG,uBAAA,EAAyB;IACvB,OAAO,KAAKlB,oBAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAmB,kBAAkBC,OAAA,EAAS;IACzB,MAAMl+H,GAAA,GAAM,KAAKs8H,UAAA,CAAWlxG,QAAA,CAASE,eAAA,CAAgBU,YAAA,EAAckyG,OAAO;IAC1E,IAAI,CAACl+H,GAAA,EAAK;MACR,MAAM+7H,kCAAA,CAAmCmC,OAAO;IAClD;IACA,MAAMC,UAAA,GAAa,KAAKzB,iBAAA,CAAkBniI,GAAA,CAAIyF,GAAG;IACjD,IAAIm+H,UAAA,EAAY;MACd,OAAOp7H,EAAA,CAAGq7H,QAAA,CAASD,UAAU,CAAC;IAChC;IACA,OAAO,KAAKE,sBAAA,CAAuB,IAAInC,aAAA,CAAcgC,OAAA,EAAS,IAAI,CAAC,EAAEl7H,IAAA,CAAKyrC,GAAA,CAAI6vF,GAAA,IAAO,KAAK5B,iBAAA,CAAkBjiI,GAAA,CAAIuF,GAAA,EAAKs+H,GAAG,CAAC,GAAG/hI,GAAA,CAAI+hI,GAAA,IAAOF,QAAA,CAASE,GAAG,CAAC,CAAC;EACvJ;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAC,gBAAgBxkI,IAAA,EAAMmlB,SAAA,GAAY,IAAI;IACpC,MAAMjlB,GAAA,GAAMukI,OAAA,CAAQt/G,SAAA,EAAWnlB,IAAI;IACnC,IAAIgmC,MAAA,GAAS,KAAKy8F,eAAA,CAAgBjiI,GAAA,CAAIN,GAAG;IAEzC,IAAI8lC,MAAA,EAAQ;MACV,OAAO,KAAK0+F,iBAAA,CAAkB1+F,MAAM;IACtC;IAEAA,MAAA,GAAS,KAAK2+F,2BAAA,CAA4Bx/G,SAAA,EAAWnlB,IAAI;IACzD,IAAIgmC,MAAA,EAAQ;MACV,KAAKy8F,eAAA,CAAgB/hI,GAAA,CAAIR,GAAA,EAAK8lC,MAAM;MACpC,OAAO,KAAK0+F,iBAAA,CAAkB1+F,MAAM;IACtC;IAEA,MAAM4+F,cAAA,GAAiB,KAAKlC,eAAA,CAAgBliI,GAAA,CAAI2kB,SAAS;IACzD,IAAIy/G,cAAA,EAAgB;MAClB,OAAO,KAAKC,yBAAA,CAA0B7kI,IAAA,EAAM4kI,cAAc;IAC5D;IACA,OAAO3vF,UAAA,CAAW4sF,2BAAA,CAA4B3hI,GAAG,CAAC;EACpD;EACAihB,YAAA,EAAc;IACZ,KAAK2hH,UAAA,GAAa,EAAC;IACnB,KAAKL,eAAA,CAAgBrhH,KAAA,CAAM;IAC3B,KAAKshH,eAAA,CAAgBthH,KAAA,CAAM;IAC3B,KAAKuhH,iBAAA,CAAkBvhH,KAAA,CAAM;EAC/B;EAAA;AAAA;AAAA;EAIAsjH,kBAAkB1+F,MAAA,EAAQ;IACxB,IAAIA,MAAA,CAAOo8F,OAAA,EAAS;MAElB,OAAOp5H,EAAA,CAAGq7H,QAAA,CAAS,KAAKS,qBAAA,CAAsB9+F,MAAM,CAAC,CAAC;IACxD,OAAO;MAEL,OAAO,KAAKs+F,sBAAA,CAAuBt+F,MAAM,EAAE/8B,IAAA,CAAKzG,GAAA,CAAI+hI,GAAA,IAAOF,QAAA,CAASE,GAAG,CAAC,CAAC;IAC3E;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAM,0BAA0B7kI,IAAA,EAAM4kI,cAAA,EAAgB;IAG9C,MAAMG,SAAA,GAAY,KAAKC,8BAAA,CAA+BhlI,IAAA,EAAM4kI,cAAc;IAC1E,IAAIG,SAAA,EAAW;MAIb,OAAO/7H,EAAA,CAAG+7H,SAAS;IACrB;IAGA,MAAME,oBAAA,GAAuBL,cAAA,CAAeviI,MAAA,CAAO6iI,aAAA,IAAiB,CAACA,aAAA,CAAc9C,OAAO,EAAE5/H,GAAA,CAAI0iI,aAAA,IAAiB;MAC/G,OAAO,KAAKC,yBAAA,CAA0BD,aAAa,EAAEj8H,IAAA,CAAKsvC,UAAA,CAAW6K,GAAA,IAAO;QAC1E,MAAMn9C,GAAA,GAAM,KAAKs8H,UAAA,CAAWlxG,QAAA,CAASE,eAAA,CAAgBU,YAAA,EAAcizG,aAAA,CAAcj/H,GAAG;QAGpF,MAAMm/H,YAAA,GAAe,yBAAyBn/H,GAAG,YAAYm9C,GAAA,CAAI96C,OAAO;QACxE,KAAKk6H,aAAA,CAAc6C,WAAA,CAAY,IAAI1iI,KAAA,CAAMyiI,YAAY,CAAC;QACtD,OAAOp8H,EAAA,CAAG,IAAI;MAChB,CAAC,CAAC;IACJ,CAAC;IAGD,OAAOs8H,QAAA,CAASL,oBAAoB,EAAEh8H,IAAA,CAAKzG,GAAA,CAAI,MAAM;MACnD,MAAM+iI,SAAA,GAAY,KAAKP,8BAAA,CAA+BhlI,IAAA,EAAM4kI,cAAc;MAE1E,IAAI,CAACW,SAAA,EAAW;QACd,MAAM1D,2BAAA,CAA4B7hI,IAAI;MACxC;MACA,OAAOulI,SAAA;IACT,CAAC,CAAC;EACJ;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAP,+BAA+BlD,QAAA,EAAU8C,cAAA,EAAgB;IAEvD,SAASrwG,CAAA,GAAIqwG,cAAA,CAAezjI,MAAA,GAAS,GAAGozB,CAAA,IAAK,GAAGA,CAAA,IAAK;MACnD,MAAMyR,MAAA,GAAS4+F,cAAA,CAAerwG,CAAC;MAK/B,IAAIyR,MAAA,CAAOo8F,OAAA,IAAWp8F,MAAA,CAAOo8F,OAAA,CAAQ3/H,QAAA,CAAS,EAAE1C,OAAA,CAAQ+hI,QAAQ,IAAI,IAAI;QACtE,MAAMyC,GAAA,GAAM,KAAKO,qBAAA,CAAsB9+F,MAAM;QAC7C,MAAMu/F,SAAA,GAAY,KAAKC,sBAAA,CAAuBjB,GAAA,EAAKzC,QAAA,EAAU97F,MAAA,CAAO3hC,OAAO;QAC3E,IAAIkhI,SAAA,EAAW;UACb,OAAOA,SAAA;QACT;MACF;IACF;IACA,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAjB,uBAAuBt+F,MAAA,EAAQ;IAC7B,OAAO,KAAKy/F,UAAA,CAAWz/F,MAAM,EAAE/8B,IAAA,CAAKyrC,GAAA,CAAI0tF,OAAA,IAAWp8F,MAAA,CAAOo8F,OAAA,GAAUA,OAAO,GAAG5/H,GAAA,CAAI,MAAM,KAAKsiI,qBAAA,CAAsB9+F,MAAM,CAAC,CAAC;EAC7H;EAAA;AAAA;AAAA;AAAA;EAKAm/F,0BAA0Bn/F,MAAA,EAAQ;IAChC,IAAIA,MAAA,CAAOo8F,OAAA,EAAS;MAClB,OAAOp5H,EAAA,CAAG,IAAI;IAChB;IACA,OAAO,KAAKy8H,UAAA,CAAWz/F,MAAM,EAAE/8B,IAAA,CAAKyrC,GAAA,CAAI0tF,OAAA,IAAWp8F,MAAA,CAAOo8F,OAAA,GAAUA,OAAO,CAAC;EAC9E;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAoD,uBAAuBE,OAAA,EAAS5D,QAAA,EAAUz9H,OAAA,EAAS;IAGjD,MAAMshI,UAAA,GAAaD,OAAA,CAAQzoH,aAAA,CAAc,QAAQ6kH,QAAQ,IAAI;IAC7D,IAAI,CAAC6D,UAAA,EAAY;MACf,OAAO;IACT;IAGA,MAAMC,WAAA,GAAcD,UAAA,CAAWnM,SAAA,CAAU,IAAI;IAC7CoM,WAAA,CAAYzjH,eAAA,CAAgB,IAAI;IAGhC,IAAIyjH,WAAA,CAAYv8D,QAAA,CAASlpE,WAAA,CAAY,MAAM,OAAO;MAChD,OAAO,KAAK0lI,iBAAA,CAAkBD,WAAA,EAAavhI,OAAO;IACpD;IAIA,IAAIuhI,WAAA,CAAYv8D,QAAA,CAASlpE,WAAA,CAAY,MAAM,UAAU;MACnD,OAAO,KAAK0lI,iBAAA,CAAkB,KAAKC,aAAA,CAAcF,WAAW,GAAGvhI,OAAO;IACxE;IAMA,MAAMkgI,GAAA,GAAM,KAAKwB,qBAAA,CAAsBnE,qBAAA,CAAsB,aAAa,CAAC;IAE3E2C,GAAA,CAAIrxH,WAAA,CAAY0yH,WAAW;IAC3B,OAAO,KAAKC,iBAAA,CAAkBtB,GAAA,EAAKlgI,OAAO;EAC5C;EAAA;AAAA;AAAA;EAIA0hI,sBAAsBtsG,GAAA,EAAK;IACzB,MAAMusG,GAAA,GAAM,KAAK96G,SAAA,CAAU1Y,aAAA,CAAc,KAAK;IAC9CwzH,GAAA,CAAIC,SAAA,GAAYxsG,GAAA;IAChB,MAAM8qG,GAAA,GAAMyB,GAAA,CAAI/oH,aAAA,CAAc,KAAK;IAEnC,IAAI,CAACsnH,GAAA,EAAK;MACR,MAAM5hI,KAAA,CAAM,qBAAqB;IACnC;IACA,OAAO4hI,GAAA;EACT;EAAA;AAAA;AAAA;EAIAuB,cAAcxmH,OAAA,EAAS;IACrB,MAAMilH,GAAA,GAAM,KAAKwB,qBAAA,CAAsBnE,qBAAA,CAAsB,aAAa,CAAC;IAC3E,MAAMsE,UAAA,GAAa5mH,OAAA,CAAQ4mH,UAAA;IAE3B,SAAS3xG,CAAA,GAAI,GAAGA,CAAA,GAAI2xG,UAAA,CAAW/kI,MAAA,EAAQozB,CAAA,IAAK;MAC1C,MAAM;QACJv0B,IAAA;QACAI;MACF,IAAI8lI,UAAA,CAAW3xG,CAAC;MAChB,IAAIv0B,IAAA,KAAS,MAAM;QACjBukI,GAAA,CAAIniH,YAAA,CAAapiB,IAAA,EAAMI,KAAK;MAC9B;IACF;IACA,SAASm0B,CAAA,GAAI,GAAGA,CAAA,GAAIjV,OAAA,CAAQgkD,UAAA,CAAWniE,MAAA,EAAQozB,CAAA,IAAK;MAClD,IAAIjV,OAAA,CAAQgkD,UAAA,CAAW/uC,CAAC,EAAEvY,QAAA,KAAa,KAAKkP,SAAA,CAAUhP,YAAA,EAAc;QAClEqoH,GAAA,CAAIrxH,WAAA,CAAYoM,OAAA,CAAQgkD,UAAA,CAAW/uC,CAAC,EAAEilG,SAAA,CAAU,IAAI,CAAC;MACvD;IACF;IACA,OAAO+K,GAAA;EACT;EAAA;AAAA;AAAA;EAIAsB,kBAAkBtB,GAAA,EAAKlgI,OAAA,EAAS;IAC9BkgI,GAAA,CAAIniH,YAAA,CAAa,OAAO,EAAE;IAC1BmiH,GAAA,CAAIniH,YAAA,CAAa,UAAU,MAAM;IACjCmiH,GAAA,CAAIniH,YAAA,CAAa,SAAS,MAAM;IAChCmiH,GAAA,CAAIniH,YAAA,CAAa,uBAAuB,eAAe;IACvDmiH,GAAA,CAAIniH,YAAA,CAAa,aAAa,OAAO;IACrC,IAAI/d,OAAA,IAAWA,OAAA,CAAQ8hI,OAAA,EAAS;MAC9B5B,GAAA,CAAIniH,YAAA,CAAa,WAAW/d,OAAA,CAAQ8hI,OAAO;IAC7C;IACA,OAAO5B,GAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKAkB,WAAWW,UAAA,EAAY;IACrB,MAAM;MACJngI,GAAA,EAAKk+H,OAAA;MACL9/H;IACF,IAAI+hI,UAAA;IACJ,MAAM9/H,eAAA,GAAkBjC,OAAA,EAASiC,eAAA,IAAmB;IACpD,IAAI,CAAC,KAAKg8H,WAAA,EAAa;MACrB,MAAMP,6BAAA,CAA8B;IACtC;IAEA,IAAIoC,OAAA,IAAW,MAAM;MACnB,MAAMxhI,KAAA,CAAM,+BAA+BwhI,OAAO,IAAI;IACxD;IACA,MAAMl+H,GAAA,GAAM,KAAKs8H,UAAA,CAAWlxG,QAAA,CAASE,eAAA,CAAgBU,YAAA,EAAckyG,OAAO;IAE1E,IAAI,CAACl+H,GAAA,EAAK;MACR,MAAM+7H,kCAAA,CAAmCmC,OAAO;IAClD;IAIA,MAAMkC,eAAA,GAAkB,KAAKzD,qBAAA,CAAsBpiI,GAAA,CAAIyF,GAAG;IAC1D,IAAIogI,eAAA,EAAiB;MACnB,OAAOA,eAAA;IACT;IACA,MAAMv9H,GAAA,GAAM,KAAKw5H,WAAA,CAAY9hI,GAAA,CAAIyF,GAAA,EAAK;MACpCM,YAAA,EAAc;MACdD;IACF,CAAC,EAAE2C,IAAA,CAAKzG,GAAA,CAAI+hI,GAAA,IAAO;MAGjB,OAAO3C,qBAAA,CAAsB2C,GAAG;IAClC,CAAC,GAAGn0H,QAAA,CAAS,MAAM,KAAKwyH,qBAAA,CAAsBjhI,MAAA,CAAOsE,GAAG,CAAC,GAAGqgI,KAAA,CAAM,CAAC;IACnE,KAAK1D,qBAAA,CAAsBliI,GAAA,CAAIuF,GAAA,EAAK6C,GAAG;IACvC,OAAOA,GAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAs6H,kBAAkBj+G,SAAA,EAAW28G,QAAA,EAAU97F,MAAA,EAAQ;IAC7C,KAAKy8F,eAAA,CAAgB/hI,GAAA,CAAI+jI,OAAA,CAAQt/G,SAAA,EAAW28G,QAAQ,GAAG97F,MAAM;IAC7D,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA49F,qBAAqBz+G,SAAA,EAAW6gB,MAAA,EAAQ;IACtC,MAAMugG,eAAA,GAAkB,KAAK7D,eAAA,CAAgBliI,GAAA,CAAI2kB,SAAS;IAC1D,IAAIohH,eAAA,EAAiB;MACnBA,eAAA,CAAgB9lI,IAAA,CAAKulC,MAAM;IAC7B,OAAO;MACL,KAAK08F,eAAA,CAAgBhiI,GAAA,CAAIykB,SAAA,EAAW,CAAC6gB,MAAM,CAAC;IAC9C;IACA,OAAO;EACT;EAAA;EAEA8+F,sBAAsB9+F,MAAA,EAAQ;IAC5B,IAAI,CAACA,MAAA,CAAOwgG,UAAA,EAAY;MACtB,MAAMjC,GAAA,GAAM,KAAKwB,qBAAA,CAAsB//F,MAAA,CAAOo8F,OAAO;MACrD,KAAKyD,iBAAA,CAAkBtB,GAAA,EAAKv+F,MAAA,CAAO3hC,OAAO;MAC1C2hC,MAAA,CAAOwgG,UAAA,GAAajC,GAAA;IACtB;IACA,OAAOv+F,MAAA,CAAOwgG,UAAA;EAChB;EAAA;EAEA7B,4BAA4Bx/G,SAAA,EAAWnlB,IAAA,EAAM;IAC3C,SAASu0B,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAKuuG,UAAA,CAAW3hI,MAAA,EAAQozB,CAAA,IAAK;MAC/C,MAAM1K,MAAA,GAAS,KAAKi5G,UAAA,CAAWvuG,CAAC,EAAEv0B,IAAA,EAAMmlB,SAAS;MACjD,IAAI0E,MAAA,EAAQ;QACV,OAAO48G,oBAAA,CAAqB58G,MAAM,IAAI,IAAIs4G,aAAA,CAAct4G,MAAA,CAAO5jB,GAAA,EAAK,MAAM4jB,MAAA,CAAOxlB,OAAO,IAAI,IAAI89H,aAAA,CAAct4G,MAAA,EAAQ,IAAI;MAC5H;IACF;IACA,OAAO;EACT;AAaF;AAXIw4G,gBAAA,CAAKz4H,IAAA,GAAO,SAAS88H,wBAAwBziI,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKo+H,gBAAA,EAAoBv4H,QAAA,CAAYI,UAAA,EAAY,CAAC,GAAMJ,QAAA,CAAYonB,YAAY,GAAMpnB,QAAA,CAAS2J,QAAA,EAAU,CAAC,GAAM3J,QAAA,CAAYmhB,YAAY,CAAC;AACvJ;AAGAo3G,gBAAA,CAAKt4H,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOk9H,gBAAA;EACPp4H,OAAA,EAASo4H,gBAAA,CAAgBz4H,IAAA;EACzB8M,UAAA,EAAY;AACd,CAAC;AA5eL,IAAMiwH,eAAA,GAANtE,gBAAA;AAAA,CA+eC,MAAM;EACL,CAAC,OAAOvhI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw8H,eAAA,EAAiB,CAAC;IACxFz/H,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgD,UAAA;IACTyJ,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASgqB;EACX,GAAG;IACDhqB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAAS+jB;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,SAAS27G,+BAA+BC,cAAA,EAAgBC,UAAA,EAAYC,SAAA,EAAW/7G,eAAc/Y,WAAU;EACrG,OAAO40H,cAAA,IAAkB,IAAIF,eAAA,CAAgBG,UAAA,EAAYC,SAAA,EAAW90H,WAAU+Y,aAAY;AAC5F;AAEA,IAAMg8G,sBAAA,GAAyB;EAAA;EAE7BluH,OAAA,EAAS6tH,eAAA;EACTr7G,IAAA,EAAM,CAAC,CAAC,IAAI3I,QAAA,CAAS,GAAG,IAAIgK,QAAA,CAAS,GAAGg6G,eAAe,GAAG,CAAC,IAAIhkH,QAAA,CAAS,GAAGzY,UAAU,GAAGgnB,YAAA,EAAcjG,YAAA,EAAc,CAAC,IAAItI,QAAA,CAAS,GAAGlP,QAAQ,CAAC;EAC9I+F,UAAA,EAAYotH;AACd;AAEA,SAASvC,SAASE,GAAA,EAAK;EACrB,OAAOA,GAAA,CAAI/K,SAAA,CAAU,IAAI;AAC3B;AAEA,SAASiL,QAAQt/G,SAAA,EAAWnlB,IAAA,EAAM;EAChC,OAAOmlB,SAAA,GAAY,MAAMnlB,IAAA;AAC3B;AACA,SAASymI,qBAAqBrmI,KAAA,EAAO;EACnC,OAAO,CAAC,EAAEA,KAAA,CAAM6F,GAAA,IAAO7F,KAAA,CAAMiE,OAAA;AAC/B;AAGA,IAAM4iI,wBAAA,GAA2B,IAAIz3H,cAAA,CAAe,0BAA0B;AAM9E,IAAM03H,iBAAA,GAAoB,IAAI13H,cAAA,CAAe,qBAAqB;EAChEkH,UAAA,EAAY;EACZzM,OAAA,EAASk9H;AACX,CAAC;AAED,SAASA,0BAAA,EAA4B;EACnC,MAAMj8G,aAAYrgB,MAAA,CAAO4I,QAAQ;EACjC,MAAMohG,SAAA,GAAY3pF,aAAYA,WAAUub,QAAA,GAAW;EACnD,OAAO;IAAA;IAAA;IAGL2gG,WAAA,EAAaA,CAAA,KAAMvyB,SAAA,GAAYA,SAAA,CAAUx3F,QAAA,GAAWw3F,SAAA,CAAUwyB,MAAA,GAAS;EACzE;AACF;AAEA,IAAMC,iBAAA,GAAoB,CAAC,aAAa,iBAAiB,OAAO,UAAU,QAAQ,UAAU,UAAU,gBAAgB,cAAc,cAAc,QAAQ,QAAQ;AAElK,IAAMC,wBAAA,GAA2BD,iBAAA,CAAkB9kI,GAAA,CAAI2rB,IAAA,IAAQ,IAAIA,IAAI,GAAG,EAAEppB,IAAA,CAAK,IAAI;AAErF,IAAMyiI,cAAA,GAAiB;AAiCvB,IAAMC,QAAA,GAAN,MAAMA,QAAA,CAAQ;EAAA;EAEZ,IAAI5/C,MAAA,EAAQ;IACV,OAAO,KAAK6/C,MAAA,IAAU,KAAKC,aAAA;EAC7B;EACA,IAAI9/C,MAAMznF,KAAA,EAAO;IACf,KAAKsnI,MAAA,GAAStnI,KAAA;EAChB;EAAA;EAEA,IAAIwnI,QAAA,EAAU;IACZ,OAAO,KAAKC,QAAA;EACd;EACA,IAAID,QAAQxnI,KAAA,EAAO;IACjB,IAAIA,KAAA,KAAU,KAAKynI,QAAA,EAAU;MAC3B,IAAIznI,KAAA,EAAO;QACT,KAAK0nI,cAAA,CAAe1nI,KAAK;MAC3B,WAAW,KAAKynI,QAAA,EAAU;QACxB,KAAKE,gBAAA,CAAiB;MACxB;MACA,KAAKF,QAAA,GAAWznI,KAAA;IAClB;EACF;EAAA;EAEA,IAAI4nI,QAAA,EAAU;IACZ,OAAO,KAAKC,QAAA;EACd;EACA,IAAID,QAAQ5nI,KAAA,EAAO;IACjB,MAAM8nI,QAAA,GAAW,KAAKC,iBAAA,CAAkB/nI,KAAK;IAC7C,IAAI8nI,QAAA,KAAa,KAAKD,QAAA,EAAU;MAC9B,KAAKA,QAAA,GAAWC,QAAA;MAChB,KAAKE,sBAAA,CAAuB;IAC9B;EACF;EAAA;EAEA,IAAIC,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAASjoI,KAAA,EAAO;IAClB,MAAM8nI,QAAA,GAAW,KAAKC,iBAAA,CAAkB/nI,KAAK;IAC7C,IAAI8nI,QAAA,KAAa,KAAKI,SAAA,EAAW;MAC/B,KAAKA,SAAA,GAAYJ,QAAA;MACjB,KAAKE,sBAAA,CAAuB;IAC9B;EACF;EACA/oI,YAAYg+D,WAAA,EAAakrE,aAAA,EAAeC,UAAA,EAAY3zB,SAAA,EAAW2tB,aAAA,EAAe9sC,WAAU;IACtF,KAAKr4B,WAAA,GAAcA,WAAA;IACnB,KAAKkrE,aAAA,GAAgBA,aAAA;IACrB,KAAK1zB,SAAA,GAAYA,SAAA;IACjB,KAAK2tB,aAAA,GAAgBA,aAAA;IAKrB,KAAKiG,MAAA,GAAS;IACd,KAAKC,qBAAA,GAAwB,EAAC;IAE9B,KAAKC,iBAAA,GAAoB7gF,YAAA,CAAazM,KAAA;IACtC,IAAIq6C,WAAU;MACZ,IAAIA,UAAS7N,KAAA,EAAO;QAClB,KAAKA,KAAA,GAAQ,KAAK8/C,aAAA,GAAgBjyC,UAAS7N,KAAA;MAC7C;MACA,IAAI6N,UAASsyC,OAAA,EAAS;QACpB,KAAKA,OAAA,GAAUtyC,UAASsyC,OAAA;MAC1B;IACF;IAGA,IAAI,CAACQ,UAAA,EAAY;MACfnrE,WAAA,CAAY/S,aAAA,CAAcloC,YAAA,CAAa,eAAe,MAAM;IAC9D;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcAwmH,eAAe9G,QAAA,EAAU;IACvB,IAAI,CAACA,QAAA,EAAU;MACb,OAAO,CAAC,IAAI,EAAE;IAChB;IACA,MAAMz4G,KAAA,GAAQy4G,QAAA,CAASniI,KAAA,CAAM,GAAG;IAChC,QAAQ0pB,KAAA,CAAMloB,MAAA;MACZ,KAAK;QACH,OAAO,CAAC,IAAIkoB,KAAA,CAAM,CAAC,CAAC;MAEtB,KAAK;QACH,OAAOA,KAAA;MACT;QACE,MAAM1mB,KAAA,CAAM,uBAAuBm/H,QAAQ,GAAG;IAElD;EACF;EACAp6F,SAAA,EAAW;IAGT,KAAK0gG,sBAAA,CAAuB;EAC9B;EACAj5C,mBAAA,EAAqB;IACnB,MAAM05C,cAAA,GAAiB,KAAKC,+BAAA;IAC5B,IAAID,cAAA,IAAkBA,cAAA,CAAeztF,IAAA,EAAM;MACzC,MAAM2tF,OAAA,GAAU,KAAKl0B,SAAA,CAAUuyB,WAAA,CAAY;MAO3C,IAAI2B,OAAA,KAAY,KAAKC,aAAA,EAAe;QAClC,KAAKA,aAAA,GAAgBD,OAAA;QACrB,KAAKE,wBAAA,CAAyBF,OAAO;MACvC;IACF;EACF;EACA5nH,YAAA,EAAc;IACZ,KAAKwnH,iBAAA,CAAkB3+F,WAAA,CAAY;IACnC,IAAI,KAAK8+F,+BAAA,EAAiC;MACxC,KAAKA,+BAAA,CAAgC1nH,KAAA,CAAM;IAC7C;EACF;EACA8nH,eAAA,EAAiB;IACf,OAAO,CAAC,KAAKtB,OAAA;EACf;EACAuB,eAAe5E,GAAA,EAAK;IAClB,KAAKwD,gBAAA,CAAiB;IAGtB,MAAMp0G,IAAA,GAAO,KAAKkhF,SAAA,CAAUuyB,WAAA,CAAY;IACxC,KAAK4B,aAAA,GAAgBr1G,IAAA;IACrB,KAAKy1G,oCAAA,CAAqC7E,GAAG;IAC7C,KAAK0E,wBAAA,CAAyBt1G,IAAI;IAClC,KAAK0pC,WAAA,CAAY/S,aAAA,CAAcp3C,WAAA,CAAYqxH,GAAG;EAChD;EACAwD,iBAAA,EAAmB;IACjB,MAAMsB,aAAA,GAAgB,KAAKhsE,WAAA,CAAY/S,aAAA;IACvC,IAAIg/E,UAAA,GAAaD,aAAA,CAAc/lE,UAAA,CAAWniE,MAAA;IAC1C,IAAI,KAAK2nI,+BAAA,EAAiC;MACxC,KAAKA,+BAAA,CAAgC1nH,KAAA,CAAM;IAC7C;IAGA,OAAOkoH,UAAA,IAAc;MACnB,MAAMvxG,KAAA,GAAQsxG,aAAA,CAAc/lE,UAAA,CAAWgmE,UAAU;MAGjD,IAAIvxG,KAAA,CAAM/b,QAAA,KAAa,KAAK+b,KAAA,CAAMsxC,QAAA,CAASlpE,WAAA,CAAY,MAAM,OAAO;QAClE43B,KAAA,CAAM1nB,MAAA,CAAO;MACf;IACF;EACF;EACA+3H,uBAAA,EAAyB;IACvB,IAAI,CAAC,KAAKc,cAAA,CAAe,GAAG;MAC1B;IACF;IACA,MAAMxrH,IAAA,GAAO,KAAK2/C,WAAA,CAAY/S,aAAA;IAC9B,MAAMi/E,cAAA,IAAkB,KAAKvB,OAAA,GAAU,KAAKO,aAAA,CAAcxE,qBAAA,CAAsB,KAAKiE,OAAO,EAAEroI,KAAA,CAAM,IAAI,IAAI,KAAK4oI,aAAA,CAActE,sBAAA,CAAuB,GAAG5hI,MAAA,CAAO2vF,SAAA,IAAaA,SAAA,CAAU7wF,MAAA,GAAS,CAAC;IACjM,KAAKunI,qBAAA,CAAsB9oI,OAAA,CAAQoyF,SAAA,IAAat0E,IAAA,CAAK8I,SAAA,CAAUnW,MAAA,CAAO2hF,SAAS,CAAC;IAChFu3C,cAAA,CAAe3pI,OAAA,CAAQoyF,SAAA,IAAat0E,IAAA,CAAK8I,SAAA,CAAUrW,GAAA,CAAI6hF,SAAS,CAAC;IACjE,KAAK02C,qBAAA,GAAwBa,cAAA;IAC7B,IAAI,KAAKlB,QAAA,KAAa,KAAKmB,sBAAA,IAA0B,CAACD,cAAA,CAAeE,QAAA,CAAS,mBAAmB,GAAG;MAClG,IAAI,KAAKD,sBAAA,EAAwB;QAC/B9rH,IAAA,CAAK8I,SAAA,CAAUnW,MAAA,CAAO,KAAKm5H,sBAAsB;MACnD;MACA,IAAI,KAAKnB,QAAA,EAAU;QACjB3qH,IAAA,CAAK8I,SAAA,CAAUrW,GAAA,CAAI,KAAKk4H,QAAQ;MAClC;MACA,KAAKmB,sBAAA,GAAyB,KAAKnB,QAAA;IACrC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAF,kBAAkB/nI,KAAA,EAAO;IACvB,OAAO,OAAOA,KAAA,KAAU,WAAWA,KAAA,CAAMC,IAAA,CAAK,EAAEV,KAAA,CAAM,GAAG,EAAE,CAAC,IAAIS,KAAA;EAClE;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6oI,yBAAyBt1G,IAAA,EAAM;IAC7B,MAAMjS,QAAA,GAAW,KAAKonH,+BAAA;IACtB,IAAIpnH,QAAA,EAAU;MACZA,QAAA,CAAS9hB,OAAA,CAAQ,CAAC+yF,KAAA,EAAOrzE,OAAA,KAAY;QACnCqzE,KAAA,CAAM/yF,OAAA,CAAQuuB,IAAA,IAAQ;UACpB7O,OAAA,CAAQ8C,YAAA,CAAa+L,IAAA,CAAKnuB,IAAA,EAAM,QAAQ2zB,IAAI,IAAIxF,IAAA,CAAK/tB,KAAK,IAAI;QAChE,CAAC;MACH,CAAC;IACH;EACF;EAAA;AAAA;AAAA;AAAA;EAKAgpI,qCAAqC9pH,OAAA,EAAS;IAC5C,MAAMoqH,mBAAA,GAAsBpqH,OAAA,CAAQqC,gBAAA,CAAiB4lH,wBAAwB;IAC7E,MAAM7lH,QAAA,GAAW,KAAKonH,+BAAA,GAAkC,KAAKA,+BAAA,IAAmC,mBAAItpI,GAAA,CAAI;IACxG,SAAS+0B,CAAA,GAAI,GAAGA,CAAA,GAAIm1G,mBAAA,CAAoBvoI,MAAA,EAAQozB,CAAA,IAAK;MACnD+yG,iBAAA,CAAkB1nI,OAAA,CAAQuuB,IAAA,IAAQ;QAChC,MAAMw7G,oBAAA,GAAuBD,mBAAA,CAAoBn1G,CAAC;QAClD,MAAMn0B,KAAA,GAAQupI,oBAAA,CAAqBzsH,YAAA,CAAaiR,IAAI;QACpD,MAAMuL,SAAQt5B,KAAA,GAAQA,KAAA,CAAMs5B,KAAA,CAAM8tG,cAAc,IAAI;QACpD,IAAI9tG,QAAO;UACT,IAAIwsG,UAAA,GAAaxkH,QAAA,CAASlhB,GAAA,CAAImpI,oBAAoB;UAClD,IAAI,CAACzD,UAAA,EAAY;YACfA,UAAA,GAAa,EAAC;YACdxkH,QAAA,CAAShhB,GAAA,CAAIipI,oBAAA,EAAsBzD,UAAU;UAC/C;UACAA,UAAA,CAAWzlI,IAAA,CAAK;YACdT,IAAA,EAAMmuB,IAAA;YACN/tB,KAAA,EAAOs5B,OAAM,CAAC;UAChB,CAAC;QACH;MACF,CAAC;IACH;EACF;EAAA;EAEAouG,eAAe8B,OAAA,EAAS;IACtB,KAAKC,aAAA,GAAgB;IACrB,KAAKC,QAAA,GAAW;IAChB,KAAKnB,iBAAA,CAAkB3+F,WAAA,CAAY;IACnC,IAAI4/F,OAAA,EAAS;MACX,MAAM,CAACzkH,SAAA,EAAW28G,QAAQ,IAAI,KAAK8G,cAAA,CAAegB,OAAO;MACzD,IAAIzkH,SAAA,EAAW;QACb,KAAK0kH,aAAA,GAAgB1kH,SAAA;MACvB;MACA,IAAI28G,QAAA,EAAU;QACZ,KAAKgI,QAAA,GAAWhI,QAAA;MAClB;MACA,KAAK6G,iBAAA,GAAoB,KAAKJ,aAAA,CAAc/D,eAAA,CAAgB1C,QAAA,EAAU38G,SAAS,EAAElc,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAUo6F,GAAA,IAAO,KAAK4E,cAAA,CAAe5E,GAAG,GAAGnhF,GAAA,IAAO;QAC/I,MAAMgiF,YAAA,GAAe,yBAAyBjgH,SAAS,IAAI28G,QAAQ,KAAK1+E,GAAA,CAAI96C,OAAO;QACnF,KAAKk6H,aAAA,CAAc6C,WAAA,CAAY,IAAI1iI,KAAA,CAAMyiI,YAAY,CAAC;MACxD,CAAC;IACH;EACF;AA2CF;AAzCIqC,QAAA,CAAK79H,IAAA,GAAO,SAASmgI,gBAAgB9lI,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAKwjI,QAAA,EAAYp8E,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBs7E,eAAe,GAAMr7E,iBAAA,CAAkB,aAAa,GAAMD,iBAAA,CAAkB67E,iBAAiB,GAAM77E,iBAAA,CAAqBpgC,YAAY,GAAMogC,iBAAA,CAAkB47E,wBAAA,EAA0B,CAAC,CAAC;AAC9Q;AAGAQ,QAAA,CAAKx7F,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMugI,QAAA;EACN1+F,SAAA,EAAW,CAAC,CAAC,UAAU,CAAC;EACxB47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,YAAY,aAAa;EACvDj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASq+E,qBAAqBx9F,EAAA,EAAIlb,GAAA,EAAK;IACnD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,sBAAsB16B,GAAA,CAAI43G,cAAA,CAAe,IAAI,SAAS,KAAK,EAAE,sBAAsB53G,GAAA,CAAIw4G,QAAA,IAAYx4G,GAAA,CAAI+2G,QAAQ,EAAE,2BAA2B/2G,GAAA,CAAIu4G,aAAA,IAAiBv4G,GAAA,CAAI02G,OAAO,EAAE,YAAY12G,GAAA,CAAI43G,cAAA,CAAe,IAAI53G,GAAA,CAAI+2G,QAAA,GAAW,IAAI;MAChPrzC,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,mBAAmBp6D,GAAA,CAAIm3G,MAAM,EAAE,qBAAqBn3G,GAAA,CAAIu2D,KAAA,KAAU,aAAav2D,GAAA,CAAIu2D,KAAA,KAAU,YAAYv2D,GAAA,CAAIu2D,KAAA,KAAU,MAAM;IAC9I;EACF;EACA7+C,MAAA,EAAQ;IACN6+C,KAAA,EAAO;IACP4gD,MAAA,EAAQ,CAAIx8E,UAAA,CAAaC,0BAAA,EAA4B,UAAU,UAAUC,gBAAgB;IACzFy7E,OAAA,EAAS;IACTI,OAAA,EAAS;IACTK,QAAA,EAAU;EACZ;EACAn/F,QAAA,EAAU,CAAC,SAAS;EACpBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BjgB,mBAAmB;EAC9DkhD,kBAAA,EAAoB5S;EACpBruC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,QAAA,EAAU,SAAS29F,iBAAiBz9F,EAAA,EAAIlb,GAAA,EAAK;IAC3C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChBC,YAAA,CAAa,CAAC;IACnB;EACF;EACA7sE,MAAA,EAAQ,CAAC,o3BAAo3B;EAC73BoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA5RL,IAAM69C,OAAA,GAANzC,QAAA;AAAA,CA+RC,MAAM;EACL,CAAC,OAAO3mI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+/H,OAAA,EAAS,CAAC;IAChFhjI,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACLy4B,QAAA,EAAU;MACV7e,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,QAAQ;QACR,SAAS;QACT,WAAW;QACX,6BAA6B;QAC7B,6BAA6B;QAC7B,kCAAkC;QAClC,mBAAmB;QACnB,2BAA2B;QAC3B,6BAA6B;MAC/B;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCrjD,UAAA,EAAY;MACZvoB,MAAA,EAAQ,CAAC,o3BAAo3B;IAC/3B,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAMy/H;EACR,GAAG;IACDz/H,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,aAAa;IACtB,CAAC;EACH,GAAG;IACD3M,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACqzH,iBAAiB;IAC1B,CAAC;EACH,GAAG;IACDhgI,IAAA,EAAS+jB;EACX,GAAG;IACD/jB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACozH,wBAAwB;IACjC,CAAC;EACH,CAAC,GAAG;IACFp/C,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACDk/F,MAAA,EAAQ,CAAC;MACPvhI,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDy7E,OAAA,EAAS,CAAC;MACR1gI,IAAA,EAAMqiC;IACR,CAAC;IACDy+F,OAAA,EAAS,CAAC;MACR9gI,IAAA,EAAMqiC;IACR,CAAC;IACD8+F,QAAA,EAAU,CAAC;MACTnhI,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM4gG,cAAA,GAAN,MAAMA,cAAA,CAAc,EAgBpB;AAdIA,cAAA,CAAKvgI,IAAA,GAAO,SAASwgI,sBAAsBnmI,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKkmI,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKjwH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMijI;AACR,CAAC;AAGDA,cAAA,CAAK/vH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiBA,eAAe;AAC5C,CAAC;AAdL,IAAMmtD,aAAA,GAANF,cAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOrpI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkgI,aAAA,EAAe,CAAC;IACtFnjI,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiBgtD,OAAO;MAClCx9G,OAAA,EAAS,CAACw9G,OAAA,EAAShtD,eAAe;IACpC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AChjCH,IAAMotD,eAAA,GAAkBzzE,+BAAA,CAAgC;EACtDuZ,OAAA,EAAS;AACX,CAAC;AAMD,IAAMm6D,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBlrI,YAAYg/D,SAAA,EAAWf,OAAA,EAAS;IAC9B,KAAKe,SAAA,GAAYA,SAAA;IACjB,KAAKf,OAAA,GAAUA,OAAA;IACf,KAAKktE,kBAAA,GAAqB,mBAAIhrI,GAAA,CAAI;EACpC;EACAq1E,QAAQxZ,YAAA,EAAc;IACpB,IAAI,CAAC,KAAKgD,SAAA,CAAUhJ,SAAA,EAAW;MAC7B,OAAOha,KAAA;IACT;IACA,MAAM/7B,OAAA,GAAU87C,aAAA,CAAcC,YAAY;IAC1C,MAAMjT,IAAA,GAAO,KAAKoiF,kBAAA,CAAmBhqI,GAAA,CAAI8e,OAAO;IAChD,IAAI8oC,IAAA,EAAM;MACR,OAAOA,IAAA,CAAK6sB,OAAA;IACd;IACA,MAAMprD,MAAA,GAAS,IAAI0zB,OAAA,CAAQ;IAC3B,MAAMgkE,QAAA,GAAW;IACjB,MAAM7lG,QAAA,GAAWrS,KAAA,IAAS;MAIxB,IAAIA,KAAA,CAAMohI,aAAA,KAAkB,mCAAmC,CAACnrH,OAAA,CAAQkH,SAAA,CAAUioD,QAAA,CAAS8yC,QAAQ,GAAG;QACpGjiG,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAIoxG,QAAQ;QAC9B,KAAKjkD,OAAA,CAAQ9vD,GAAA,CAAI,MAAMqc,MAAA,CAAO1d,IAAA,CAAK;UACjCmQ,MAAA,EAAQjT,KAAA,CAAMiT,MAAA;UACdouH,YAAA,EAAc;QAChB,CAAC,CAAC;MACJ,WAAWrhI,KAAA,CAAMohI,aAAA,KAAkB,iCAAiCnrH,OAAA,CAAQkH,SAAA,CAAUioD,QAAA,CAAS8yC,QAAQ,GAAG;QACxGjiG,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAOkxG,QAAQ;QACjC,KAAKjkD,OAAA,CAAQ9vD,GAAA,CAAI,MAAMqc,MAAA,CAAO1d,IAAA,CAAK;UACjCmQ,MAAA,EAAQjT,KAAA,CAAMiT,MAAA;UACdouH,YAAA,EAAc;QAChB,CAAC,CAAC;MACJ;IACF;IACA,KAAKptE,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnCuS,OAAA,CAAQrM,gBAAA,CAAiB,kBAAkByI,QAAA,EAAU4uH,eAAe;MACpEhrH,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI,mCAAmC;IAC3D,CAAC;IACD,KAAKq6H,kBAAA,CAAmB9pI,GAAA,CAAI4e,OAAA,EAAS;MACnC21D,OAAA,EAASprD,MAAA;MACT8gH,QAAA,EAAUA,CAAA,KAAM;QACdrrH,OAAA,CAAQrJ,mBAAA,CAAoB,kBAAkByF,QAAA,EAAU4uH,eAAe;MACzE;IACF,CAAC;IACD,OAAOzgH,MAAA;EACT;EACAsrD,eAAe9Z,YAAA,EAAc;IAC3B,MAAM/7C,OAAA,GAAU87C,aAAA,CAAcC,YAAY;IAC1C,MAAMjT,IAAA,GAAO,KAAKoiF,kBAAA,CAAmBhqI,GAAA,CAAI8e,OAAO;IAChD,IAAI8oC,IAAA,EAAM;MACRA,IAAA,CAAKuiF,QAAA,CAAS;MACdviF,IAAA,CAAK6sB,OAAA,CAAQpnE,QAAA,CAAS;MACtByR,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO,mCAAmC;MAC5DiP,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO,2BAA2B;MACpD,KAAKm6H,kBAAA,CAAmB7oI,MAAA,CAAO2d,OAAO;IACxC;EACF;EACA6B,YAAA,EAAc;IACZ,KAAKqpH,kBAAA,CAAmB5qI,OAAA,CAAQ,CAACk2E,KAAA,EAAOx2D,OAAA,KAAY,KAAK61D,cAAA,CAAe71D,OAAO,CAAC;EAClF;AAaF;AAXIirH,gBAAA,CAAK3gI,IAAA,GAAO,SAASghI,wBAAwB3mI,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKsmI,gBAAA,EAAoBzgI,QAAA,CAAYosD,QAAQ,GAAMpsD,QAAA,CAAYsB,MAAM,CAAC;AACpF;AAGAm/H,gBAAA,CAAKxgI,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOolI,gBAAA;EACPtgI,OAAA,EAASsgI,gBAAA,CAAgB3gI,IAAA;EACzB8M,UAAA,EAAY;AACd,CAAC;AAvEL,IAAMm0H,eAAA,GAANN,gBAAA;AAAA,CA0EC,MAAM;EACL,CAAC,OAAOzpI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0gI,eAAA,EAAiB,CAAC;IACxF3jI,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,IAAM0/H,YAAA,GAAN,MAAMA,YAAA,CAAY;EAChBzrI,YAAYg+D,WAAA,EAAa0tE,gBAAA,EAAkB;IACzC,KAAK1tE,WAAA,GAAcA,WAAA;IACnB,KAAK0tE,gBAAA,GAAmBA,gBAAA;IAExB,KAAKC,WAAA,GAAc,IAAI5kG,YAAA,CAAa;EACtC;EACAsB,SAAA,EAAW;IACT,KAAKqjG,gBAAA,CAAiBl2D,OAAA,CAAQ,KAAKxX,WAAW,EAAElzB,SAAA,CAAU9gC,KAAA,IAAS,KAAK2hI,WAAA,CAAY7iG,IAAA,CAAK9+B,KAAK,CAAC;EACjG;EACA8X,YAAA,EAAc;IACZ,KAAK4pH,gBAAA,CAAiB51D,cAAA,CAAe,KAAK9X,WAAW;EACvD;AAgBF;AAdIytE,YAAA,CAAKlhI,IAAA,GAAO,SAASqhI,oBAAoBhnI,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK6mI,YAAA,EAAgBz/E,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBw/E,eAAe,CAAC;AAC1G;AAGAC,YAAA,CAAKjiG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4jI,YAAA;EACN/hG,SAAA,EAAW,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC;EACnCE,OAAA,EAAS;IACP+hG,WAAA,EAAa;EACf;EACA7hG,UAAA,EAAY;AACd,CAAC;AA1BL,IAAM+hG,WAAA,GAANJ,YAAA;AAAA,CA6BC,MAAM;EACL,CAAC,OAAOhqI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+gI,WAAA,EAAa,CAAC;IACpFhkI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM2jI;EACR,CAAC,GAAG;IACFG,WAAA,EAAa,CAAC;MACZ9jI,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAGH,IAAM2hG,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EAAA;EAExB,IAAIC,QAAA,EAAU;IACZ,OAAO,KAAKC,QAAA;EACd;EACA,IAAID,QAAQhrI,KAAA,EAAO;IACjB,KAAKirI,QAAA,GAAWzwE,oBAAA,CAAqBx6D,KAAK;IAC1C,KAAKkrI,aAAA,CAAc;EACrB;EAAA;EAEA,IAAIC,QAAA,EAAU;IACZ,OAAO,KAAKC,QAAA;EACd;EACA,IAAID,QAAQnrI,KAAA,EAAO;IACjB,KAAKorI,QAAA,GAAW5wE,oBAAA,CAAqBx6D,KAAK;IAC1C,KAAKqrI,aAAA,CAAc;EACrB;EAAA;EAEA,IAAIzmE,QAAA,EAAU;IACZ,OAAO,KAAK2F,QAAA;EACd;EACA,IAAI3F,QAAQ5kE,KAAA,EAAO;IAGjB,IAAI,KAAKuqE,QAAA,KAAavqE,KAAA,EAAO;MAC3B,CAAC,KAAKuqE,QAAA,GAAWvqE,KAAA,IAAS,KAAKsrI,kBAAA,CAAmB,IAAI,IAAI,KAAKC,KAAA,CAAM;IACvE;EACF;EACA,IAAIC,YAAA,EAAc;IAChB,OAAO,KAAKC,gBAAA,CAAiBD,WAAA;EAC/B;EACA,IAAIA,YAAYxrI,KAAA,EAAO;IACrB,KAAK0rI,wBAAA,GAA2B;IAChC,IAAI1rI,KAAA,EAAO;MACT,KAAKyrI,gBAAA,CAAiBzpH,YAAA,CAAa,eAAehiB,KAAK;IACzD,OAAO;MACL,KAAKyrI,gBAAA,CAAiB1pH,eAAA,CAAgB,aAAa;IACrD;IACA,KAAK4pH,+BAAA,CAAgC;EACvC;EACA1sI,YAAYg+D,WAAA,EAAagB,SAAA,EAAWf,OAAA,EACpCrrD,WAAU;IACR,KAAKorD,WAAA,GAAcA,WAAA;IACnB,KAAKgB,SAAA,GAAYA,SAAA;IACjB,KAAKf,OAAA,GAAUA,OAAA;IACf,KAAK+jC,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAC9B,KAAKotB,QAAA,GAAW;IAMhB,KAAKqhE,gBAAA,GAAmB;IACxB,KAAKC,aAAA,GAAgB;IAErB,KAAKC,iBAAA,GAAoB7iI,KAAA,IAAS;MAChC,KAAK8iI,SAAA,GAAY9iI,KAAA,CAAMnC,IAAA,KAAS;IAClC;IACA,KAAKgkB,SAAA,GAAYjZ;IACjB,KAAK45H,gBAAA,GAAmB,KAAKxuE,WAAA,CAAY/S,aAAA;EAC3C;EAAA;EAEAghF,cAAA,EAAgB;IACd,MAAM/zB,SAAA,GAAY,KAAK6zB,OAAA,IAAW,KAAKgB,iBAAA,GAAoB,GAAG,KAAKhB,OAAA,GAAU,KAAKgB,iBAAiB,OAAO;IAC1G,IAAI70B,SAAA,EAAW;MACb,KAAKs0B,gBAAA,CAAiBhrH,KAAA,CAAM02F,SAAA,GAAYA,SAAA;IAC1C;EACF;EAAA;EAEAk0B,cAAA,EAAgB;IACd,MAAMh0B,SAAA,GAAY,KAAK8zB,OAAA,IAAW,KAAKa,iBAAA,GAAoB,GAAG,KAAKb,OAAA,GAAU,KAAKa,iBAAiB,OAAO;IAC1G,IAAI30B,SAAA,EAAW;MACb,KAAKo0B,gBAAA,CAAiBhrH,KAAA,CAAM42F,SAAA,GAAYA,SAAA;IAC1C;EACF;EACAjgC,gBAAA,EAAkB;IAChB,IAAI,KAAKnZ,SAAA,CAAUhJ,SAAA,EAAW;MAE5B,KAAKg3E,cAAA,GAAiB,KAAKR,gBAAA,CAAiBhrH,KAAA,CAAMm3C,MAAA;MAClD,KAAK0zE,kBAAA,CAAmB;MACxB,KAAKpuE,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC,MAAM+E,UAAS,KAAKikE,UAAA,CAAW;QAC/BirB,SAAA,CAAUlvF,SAAQ,QAAQ,EAAE7I,IAAA,CAAKs3F,SAAA,CAAU,EAAE,GAAGp9C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAKuhG,kBAAA,CAAmB,IAAI,CAAC;QACzH,KAAKG,gBAAA,CAAiB54H,gBAAA,CAAiB,SAAS,KAAKi5H,iBAAiB;QACtE,KAAKL,gBAAA,CAAiB54H,gBAAA,CAAiB,QAAQ,KAAKi5H,iBAAiB;MACvE,CAAC;MACD,KAAKD,aAAA,GAAgB;MACrB,KAAKP,kBAAA,CAAmB,IAAI;IAC9B;EACF;EACAvqH,YAAA,EAAc;IACZ,KAAK0qH,gBAAA,CAAiB51H,mBAAA,CAAoB,SAAS,KAAKi2H,iBAAiB;IACzE,KAAKL,gBAAA,CAAiB51H,mBAAA,CAAoB,QAAQ,KAAKi2H,iBAAiB;IACxE,KAAK7qC,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAy+H,yBAAA,EAA2B;IACzB,IAAI,KAAKF,iBAAA,EAAmB;MAC1B;IACF;IAEA,IAAIG,aAAA,GAAgB,KAAKV,gBAAA,CAAiBrS,SAAA,CAAU,KAAK;IACzD+S,aAAA,CAAcC,IAAA,GAAO;IAIrBD,aAAA,CAAc1rH,KAAA,CAAMvS,QAAA,GAAW;IAC/Bi+H,aAAA,CAAc1rH,KAAA,CAAMg3C,UAAA,GAAa;IACjC00E,aAAA,CAAc1rH,KAAA,CAAM4rH,MAAA,GAAS;IAC7BF,aAAA,CAAc1rH,KAAA,CAAM6rH,OAAA,GAAU;IAC9BH,aAAA,CAAc1rH,KAAA,CAAMm3C,MAAA,GAAS;IAC7Bu0E,aAAA,CAAc1rH,KAAA,CAAM02F,SAAA,GAAY;IAChCg1B,aAAA,CAAc1rH,KAAA,CAAM42F,SAAA,GAAY;IAMhC80B,aAAA,CAAc1rH,KAAA,CAAM+2C,QAAA,GAAW;IAC/B,KAAKi0E,gBAAA,CAAiBh5H,UAAA,CAAWK,WAAA,CAAYq5H,aAAa;IAC1D,KAAKH,iBAAA,GAAoBG,aAAA,CAAc9qC,YAAA;IACvC8qC,aAAA,CAAcl8H,MAAA,CAAO;IAErB,KAAKi7H,aAAA,CAAc;IACnB,KAAKG,aAAA,CAAc;EACrB;EACAkB,qBAAA,EAAuB;IACrB,MAAMrtH,OAAA,GAAU,KAAKusH,gBAAA;IACrB,MAAMe,cAAA,GAAiBttH,OAAA,CAAQuB,KAAA,CAAMkiG,YAAA,IAAgB;IACrD,MAAM8pB,SAAA,GAAY,KAAKxuE,SAAA,CAAUvI,OAAA;IACjC,MAAMg3E,iBAAA,GAAoBD,SAAA,IAAa,KAAKV,SAAA;IAC5C,MAAMY,cAAA,GAAiBF,SAAA,GAAY,4CAA4C;IAI/E,IAAIC,iBAAA,EAAmB;MACrBxtH,OAAA,CAAQuB,KAAA,CAAMkiG,YAAA,GAAe,GAAGzjG,OAAA,CAAQmiF,YAAY;IACtD;IAGAniF,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI48H,cAAc;IAGpC,MAAMvrC,YAAA,GAAeliF,OAAA,CAAQkiF,YAAA,GAAe;IAC5CliF,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO08H,cAAc;IACvC,IAAID,iBAAA,EAAmB;MACrBxtH,OAAA,CAAQuB,KAAA,CAAMkiG,YAAA,GAAe6pB,cAAA;IAC/B;IACA,OAAOprC,YAAA;EACT;EACAuqC,gCAAA,EAAkC;IAChC,IAAI,CAAC,KAAKE,aAAA,IAAiB,KAAKH,wBAAA,IAA4B,QAAW;MACrE;IACF;IACA,IAAI,CAAC,KAAKF,WAAA,EAAa;MACrB,KAAKE,wBAAA,GAA2B;MAChC;IACF;IACA,MAAM1rI,KAAA,GAAQ,KAAKyrI,gBAAA,CAAiBzrI,KAAA;IACpC,KAAKyrI,gBAAA,CAAiBzrI,KAAA,GAAQ,KAAKyrI,gBAAA,CAAiBD,WAAA;IACpD,KAAKE,wBAAA,GAA2B,KAAKa,oBAAA,CAAqB;IAC1D,KAAKd,gBAAA,CAAiBzrI,KAAA,GAAQA,KAAA;EAChC;EACAotE,UAAA,EAAY;IACV,IAAI,KAAKnP,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,KAAKq2E,kBAAA,CAAmB;IAC1B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAA,mBAAmBsB,KAAA,GAAQ,OAAO;IAEhC,IAAI,CAAC,KAAKriE,QAAA,EAAU;MAClB;IACF;IACA,KAAK2hE,wBAAA,CAAyB;IAC9B,KAAKP,+BAAA,CAAgC;IAGrC,IAAI,CAAC,KAAKK,iBAAA,EAAmB;MAC3B;IACF;IACA,MAAMa,QAAA,GAAW,KAAK5vE,WAAA,CAAY/S,aAAA;IAClC,MAAMlqD,KAAA,GAAQ6sI,QAAA,CAAS7sI,KAAA;IAEvB,IAAI,CAAC4sI,KAAA,IAAS,KAAK3B,QAAA,KAAa,KAAKW,gBAAA,IAAoB5rI,KAAA,KAAU,KAAK8sI,cAAA,EAAgB;MACtF;IACF;IACA,MAAM1rC,YAAA,GAAe,KAAKmrC,oBAAA,CAAqB;IAC/C,MAAM30E,MAAA,GAASuyB,IAAA,CAAK7K,GAAA,CAAI8hB,YAAA,EAAc,KAAKsqC,wBAAA,IAA4B,CAAC;IAExEmB,QAAA,CAASpsH,KAAA,CAAMm3C,MAAA,GAAS,GAAGA,MAAM;IACjC,KAAKsF,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;MACnC,IAAI,OAAO+2F,qBAAA,KAA0B,aAAa;QAChDA,qBAAA,CAAsB,MAAM,KAAKqpC,sBAAA,CAAuBF,QAAQ,CAAC;MACnE,OAAO;QACL5tF,UAAA,CAAW,MAAM,KAAK8tF,sBAAA,CAAuBF,QAAQ,CAAC;MACxD;IACF,CAAC;IACD,KAAKC,cAAA,GAAiB9sI,KAAA;IACtB,KAAK4rI,gBAAA,GAAmB,KAAKX,QAAA;EAC/B;EAAA;AAAA;AAAA;EAIAM,MAAA,EAAQ;IAGN,IAAI,KAAKU,cAAA,KAAmB,QAAW;MACrC,KAAKR,gBAAA,CAAiBhrH,KAAA,CAAMm3C,MAAA,GAAS,KAAKq0E,cAAA;IAC5C;EACF;EACAe,kBAAA,EAAoB,CAEpB;EAAA;EAEAr4D,aAAA,EAAe;IACb,OAAO,KAAK7pD,SAAA,IAAajZ,QAAA;EAC3B;EAAA;EAEA8jE,WAAA,EAAa;IACX,MAAMh/D,GAAA,GAAM,KAAKg+D,YAAA,CAAa;IAC9B,OAAOh+D,GAAA,CAAI0zD,WAAA,IAAe34D,MAAA;EAC5B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAq7H,uBAAuBF,QAAA,EAAU;IAC/B,MAAM;MACJI,cAAA;MACAC;IACF,IAAIL,QAAA;IAOJ,IAAI,CAAC,KAAK5rC,UAAA,CAAWksC,SAAA,IAAa,KAAKpB,SAAA,EAAW;MAChDc,QAAA,CAASO,iBAAA,CAAkBH,cAAA,EAAgBC,YAAY;IACzD;EACF;AA6BF;AA3BInC,oBAAA,CAAKvhI,IAAA,GAAO,SAAS6jI,4BAA4BxpI,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKknI,oBAAA,EAAwB9/E,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkB53C,QAAA,EAAU,CAAC,CAAC;AAClL;AAGA03H,oBAAA,CAAKtiG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMikI,oBAAA;EACNpiG,SAAA,EAAW,CAAC,CAAC,YAAY,uBAAuB,EAAE,CAAC;EACnD47C,SAAA,EAAW,CAAC,QAAQ,KAAK,GAAG,uBAAuB;EACnDh5B,YAAA,EAAc,SAAS+hF,iCAAiClhG,EAAA,EAAIlb,GAAA,EAAK;IAC/D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAAS8hF,6CAAA,EAA+C;QAC7E,OAAOr8G,GAAA,CAAI87G,iBAAA,CAAkB;MAC/B,CAAC;IACH;EACF;EACApkG,MAAA,EAAQ;IACNoiG,OAAA,EAAS,CAAIn/E,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,SAAS;IAC/Dg4D,OAAA,EAAS,CAAIt/E,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,SAAS;IAC/DvO,OAAA,EAAS,CAAI/Y,UAAA,CAAaC,0BAAA,EAA4B,uBAAuB,WAAWC,gBAAgB;IACxGy/E,WAAA,EAAa;EACf;EACA1iG,QAAA,EAAU,CAAC,qBAAqB;EAChCC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAwB;AACxC,CAAC;AAxRL,IAAMwhF,mBAAA,GAANzC,oBAAA;AAAA,CA2RC,MAAM;EACL,CAAC,OAAOrqI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByjI,mBAAA,EAAqB,CAAC;IAC5F1mI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QAAA;QAAA;QAGT,QAAQ;QACR,WAAW;MACb;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACF23H,OAAA,EAAS,CAAC;MACRlkI,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACD03H,OAAA,EAAS,CAAC;MACRrkI,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDmxD,OAAA,EAAS,CAAC;MACR99D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDy/E,WAAA,EAAa,CAAC;MACZ1kI,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMskG,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EActB;AAZIA,gBAAA,CAAKjkI,IAAA,GAAO,SAASkkI,wBAAwB7pI,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK4pI,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAK3zH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2mI;AACR,CAAC;AAGDA,gBAAA,CAAKzzH,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAM0zH,eAAA,GAANF,gBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAO/sI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4jI,eAAA,EAAiB,CAAC;IACxF7mI,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4+G,WAAA,EAAa0C,mBAAmB;MAC1ClhH,OAAA,EAAS,CAACw+G,WAAA,EAAa0C,mBAAmB;IAC5C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC1eH,IAAMI,yBAAA,GAAN,MAAMA,yBAAA,CAAyB;EAC7B3uI,YAAY6lF,SAAA,EAAW7nB,WAAA,EAAa;IAClC,KAAK6nB,SAAA,GAAYA,SAAA;IACjB,KAAK7nB,WAAA,GAAcA,WAAA;IAMnB,KAAK4wE,QAAA,GAAWh6F,CAAA,IAAK,CAAC;IAKtB,KAAKi6F,SAAA,GAAY,MAAM,CAAC;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAnnH,YAAY7mB,GAAA,EAAKE,KAAA,EAAO;IACtB,KAAK8kF,SAAA,CAAUn+D,WAAA,CAAY,KAAKs2C,WAAA,CAAY/S,aAAA,EAAepqD,GAAA,EAAKE,KAAK;EACvE;EAAA;AAAA;AAAA;AAAA;EAKA+tI,kBAAkBzrI,EAAA,EAAI;IACpB,KAAKwrI,SAAA,GAAYxrI,EAAA;EACnB;EAAA;AAAA;AAAA;AAAA;EAKA0rI,iBAAiB1rI,EAAA,EAAI;IACnB,KAAKurI,QAAA,GAAWvrI,EAAA;EAClB;EAAA;AAAA;AAAA;AAAA;EAKA2rI,iBAAiB1lE,UAAA,EAAY;IAC3B,KAAK5hD,WAAA,CAAY,YAAY4hD,UAAU;EACzC;AAWF;AATIqlE,yBAAA,CAAKpkI,IAAA,GAAO,SAAS0kI,iCAAiCrqI,CAAA,EAAG;EACvD,OAAO,KAAKA,CAAA,IAAK+pI,yBAAA,EAA6B3iF,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAqBG,UAAU,CAAC;AACpH;AAGAwiF,yBAAA,CAAKnlG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM8mI;AACR,CAAC;AArDL,IAAMO,wBAAA,GAANP,yBAAA;AAAA,CAwDC,MAAM;EACL,CAAC,OAAOltI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBokI,wBAAA,EAA0B,CAAC;IACjGrnI,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,CAAC;IACTpiC,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAUH,IAAMgjF,4BAAA,GAAN,MAAMA,4BAAA,SAAoCD,wBAAA,CAAyB,EAenE;AAbIC,4BAAA,CAAK5kI,IAAA,GAAuB,sBAAM;EAChC,IAAI6kI,wCAAA;EACJ,OAAO,SAASC,oCAAoCzqI,CAAA,EAAG;IACrD,QAAQwqI,wCAAA,KAA6CA,wCAAA,GAA8CnqF,qBAAA,CAAsBkqF,4BAA2B,IAAIvqI,CAAA,IAAKuqI,4BAA2B;EAC1L;AACF,GAAG;AAGHA,4BAAA,CAAK3lG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMsnI,4BAAA;EACN/1H,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAbL,IAAMg6C,2BAAA,GAANH,4BAAA;AAAA,CAgBC,MAAM;EACL,CAAC,OAAO1tI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwkI,2BAAA,EAA6B,CAAC;IACpGznI,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAQH,IAAMslG,iBAAA,GAAoB,IAAIp/H,cAAA,CAAe1O,SAAA,GAAY,oBAAoB,EAAE;AAC/E,IAAM+tI,uBAAA,GAA0B;EAC9B/1H,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAM29G,4BAA4B;EAC1D71H,KAAA,EAAO;AACT;AAwBA,IAAM81H,6BAAA,GAAN,MAAMA,6BAAA,SAAqCJ,2BAAA,CAA4B;EAAA;AAAA;AAAA;AAAA;EAKrEK,WAAW5uI,KAAA,EAAO;IAChB,KAAK2mB,WAAA,CAAY,WAAW3mB,KAAK;EACnC;AAyBF;AAvBI2uI,6BAAA,CAAKnlI,IAAA,GAAuB,sBAAM;EAChC,IAAIqlI,yCAAA;EACJ,OAAO,SAASC,qCAAqCjrI,CAAA,EAAG;IACtD,QAAQgrI,yCAAA,KAA8CA,yCAAA,GAA+C3qF,qBAAA,CAAsByqF,6BAA4B,IAAI9qI,CAAA,IAAK8qI,6BAA4B;EAC9L;AACF,GAAG;AAGHA,6BAAA,CAAKlmG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6nI,6BAAA;EACNhmG,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,YAAY,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,WAAW,EAAE,CAAC;EAChK4iB,YAAA,EAAc,SAASwjF,0CAA0C3iG,EAAA,EAAIlb,GAAA,EAAK;IACxE,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAASujF,uDAAuDrjF,MAAA,EAAQ;QAC9F,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAA,CAAO+yH,OAAO;MAC3C,CAAC,EAAE,QAAQ,SAASC,qDAAA,EAAuD;QACzE,OAAOh+G,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAz1H,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACy0D,uBAAuB,CAAC,GAAMl6C,0BAA0B;AAC5F,CAAC;AA9BL,IAAMm6C,4BAAA,GAANC,6BAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOjuI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2kI,4BAAA,EAA8B,CAAC;IACrG5nI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,YAAY;QACZ,UAAU;MACZ;MACAlG,SAAA,EAAW,CAACw2H,uBAAuB;IACrC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMU,sBAAA,GAAyB;EAC7Bz2H,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAMq+G,oBAAoB;EAClDv2H,KAAA,EAAO;AACT;AAKA,SAASw2H,WAAA,EAAa;EACpB,MAAM1yH,SAAA,GAAYuB,MAAA,CAAQ,IAAIA,MAAA,CAAQ,EAAEzB,YAAA,CAAa,IAAI;EACzD,OAAO,gBAAgBvI,IAAA,CAAKyI,SAAA,CAAU5c,WAAA,CAAY,CAAC;AACrD;AAOA,IAAMuvI,uBAAA,GAA0B,IAAIlgI,cAAA,CAAe1O,SAAA,GAAY,yBAAyB,EAAE;AAoC1F,IAAM6uI,qBAAA,GAAN,MAAMA,qBAAA,SAA6BpB,wBAAA,CAAyB;EAC1DlvI,YAAYglB,QAAA,EAAUgwE,UAAA,EAAYu7C,gBAAA,EAAkB;IAClD,MAAMvrH,QAAA,EAAUgwE,UAAU;IAC1B,KAAKu7C,gBAAA,GAAmBA,gBAAA;IAExB,KAAKC,UAAA,GAAa;IAClB,IAAI,KAAKD,gBAAA,IAAoB,MAAM;MACjC,KAAKA,gBAAA,GAAmB,CAACH,UAAA,CAAW;IACtC;EACF;EAAA;AAAA;AAAA;AAAA;EAKAT,WAAW5uI,KAAA,EAAO;IAChB,MAAM0vI,eAAA,GAAkB1vI,KAAA,IAAS,OAAO,KAAKA,KAAA;IAC7C,KAAK2mB,WAAA,CAAY,SAAS+oH,eAAe;EAC3C;EAAA;EAEAC,aAAa3vI,KAAA,EAAO;IAClB,IAAI,CAAC,KAAKwvI,gBAAA,IAAoB,KAAKA,gBAAA,IAAoB,CAAC,KAAKC,UAAA,EAAY;MACvE,KAAK5B,QAAA,CAAS7tI,KAAK;IACrB;EACF;EAAA;EAEA4vI,kBAAA,EAAoB;IAClB,KAAKH,UAAA,GAAa;EACpB;EAAA;EAEAI,gBAAgB7vI,KAAA,EAAO;IACrB,KAAKyvI,UAAA,GAAa;IAClB,KAAKD,gBAAA,IAAoB,KAAK3B,QAAA,CAAS7tI,KAAK;EAC9C;AA0BF;AAxBIuvI,qBAAA,CAAK/lI,IAAA,GAAO,SAASsmI,6BAA6BjsI,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAK0rI,qBAAA,EAAyBtkF,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBqkF,uBAAA,EAAyB,CAAC,CAAC;AAClK;AAGAC,qBAAA,CAAK9mG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMyoI,qBAAA;EACN5mG,SAAA,EAAW,CAAC,CAAC,SAAS,mBAAmB,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,mBAAmB,EAAE,GAAG,CAAC,SAAS,eAAe,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,eAAe,EAAE,GAAG,CAAC,SAAS,WAAW,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,WAAW,EAAE,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;EAC1S4iB,YAAA,EAAc,SAASwkF,kCAAkC3jG,EAAA,EAAIlb,GAAA,EAAK;IAChE,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASukF,8CAA8CrkF,MAAA,EAAQ;QACpF,OAAOz6B,GAAA,CAAIy+G,YAAA,CAAahkF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MAC7C,CAAC,EAAE,QAAQ,SAASiwI,6CAAA,EAA+C;QACjE,OAAO/+G,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC,EAAE,oBAAoB,SAASoC,yDAAA,EAA2D;QACzF,OAAOh/G,GAAA,CAAI0+G,iBAAA,CAAkB;MAC/B,CAAC,EAAE,kBAAkB,SAASO,uDAAuDxkF,MAAA,EAAQ;QAC3F,OAAOz6B,GAAA,CAAI2+G,eAAA,CAAgBlkF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MAChD,CAAC;IACH;EACF;EACAqY,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACm1D,sBAAsB,CAAC,GAAM56C,0BAA0B;AAC3F,CAAC;AAxDL,IAAM66C,oBAAA,GAANG,qBAAA;AAAA,CA2DC,MAAM;EACL,CAAC,OAAO7uI,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqlI,oBAAA,EAAsB,CAAC;IAC7FtoI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MAAA;MAAA;MAAA;MAIVlP,IAAA,EAAM;QACJ,WAAW;QACX,UAAU;QACV,sBAAsB;QACtB,oBAAoB;MACtB;MACAlG,SAAA,EAAW,CAACk3H,sBAAsB;IACpC,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTroI,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC67H,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,SAASc,kBAAkBpwI,KAAA,EAAO;EAMhC,OAAOA,KAAA,IAAS,SAAS,OAAOA,KAAA,KAAU,YAAYiB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,MAAMA,KAAA,CAAMe,MAAA,KAAW;AAClG;AACA,SAASsvI,eAAerwI,KAAA,EAAO;EAE7B,OAAOA,KAAA,IAAS,QAAQ,OAAOA,KAAA,CAAMe,MAAA,KAAW;AAClD;AA6BA,IAAMuvI,aAAA,GAAgB,IAAIlhI,cAAA,CAAe1O,SAAA,GAAY,iBAAiB,EAAE;AA8BxE,IAAM6vI,mBAAA,GAAsB,IAAInhI,cAAA,CAAe1O,SAAA,GAAY,sBAAsB,EAAE;AA+BnF,IAAM8vI,YAAA,GAAe;AAYrB,IAAMC,UAAA,GAAN,MAAiB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqBf,OAAOpxD,IAAIA,GAAA,EAAK;IACd,OAAOqxD,YAAA,CAAarxD,GAAG;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqBA,OAAOC,IAAIA,GAAA,EAAK;IACd,OAAOqxD,YAAA,CAAarxD,GAAG;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqBA,OAAOoT,SAAS/U,OAAA,EAAS;IACvB,OAAOizD,iBAAA,CAAkBjzD,OAAO;EAClC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAsBA,OAAOkzD,aAAalzD,OAAA,EAAS;IAC3B,OAAOmzD,qBAAA,CAAsBnzD,OAAO;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqCA,OAAOozD,MAAMpzD,OAAA,EAAS;IACpB,OAAOqzD,cAAA,CAAerzD,OAAO;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+BA,OAAOszD,UAAUA,SAAA,EAAW;IAC1B,OAAOC,kBAAA,CAAmBD,SAAS;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA4BA,OAAOE,UAAUA,SAAA,EAAW;IAC1B,OAAOC,kBAAA,CAAmBD,SAAS;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAkDA,OAAOE,QAAQA,OAAA,EAAS;IACtB,OAAOC,gBAAA,CAAiBD,OAAO;EACjC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA,OAAOE,cAAc5zD,OAAA,EAAS;IAC5B,OAAO4zD,aAAA,CAAc5zD,OAAO;EAC9B;EACA,OAAO6zD,QAAQC,UAAA,EAAY;IACzB,OAAOD,OAAA,CAAQC,UAAU;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYA,OAAOC,aAAaD,UAAA,EAAY;IAC9B,OAAOC,YAAA,CAAaD,UAAU;EAChC;AACF;AAKA,SAASf,aAAarxD,GAAA,EAAK;EACzB,OAAO1B,OAAA,IAAW;IAChB,IAAIyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,KAAKowI,iBAAA,CAAkB/wD,GAAG,GAAG;MAC9D,OAAO;IACT;IACA,MAAMr/E,KAAA,GAAQ66D,UAAA,CAAW8iB,OAAA,CAAQ39E,KAAK;IAGtC,OAAO,CAAC46D,KAAA,CAAM56D,KAAK,KAAKA,KAAA,GAAQq/E,GAAA,GAAM;MACpC,OAAO;QACL,OAAOA,GAAA;QACP,UAAU1B,OAAA,CAAQ39E;MACpB;IACF,IAAI;EACN;AACF;AAKA,SAAS2wI,aAAarxD,GAAA,EAAK;EACzB,OAAO3B,OAAA,IAAW;IAChB,IAAIyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,KAAKowI,iBAAA,CAAkB9wD,GAAG,GAAG;MAC9D,OAAO;IACT;IACA,MAAMt/E,KAAA,GAAQ66D,UAAA,CAAW8iB,OAAA,CAAQ39E,KAAK;IAGtC,OAAO,CAAC46D,KAAA,CAAM56D,KAAK,KAAKA,KAAA,GAAQs/E,GAAA,GAAM;MACpC,OAAO;QACL,OAAOA,GAAA;QACP,UAAU3B,OAAA,CAAQ39E;MACpB;IACF,IAAI;EACN;AACF;AAKA,SAAS4wI,kBAAkBjzD,OAAA,EAAS;EAClC,OAAOyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,IAAI;IACxC,YAAY;EACd,IAAI;AACN;AAMA,SAAS8wI,sBAAsBnzD,OAAA,EAAS;EACtC,OAAOA,OAAA,CAAQ39E,KAAA,KAAU,OAAO,OAAO;IACrC,YAAY;EACd;AACF;AAKA,SAASgxI,eAAerzD,OAAA,EAAS;EAC/B,IAAIyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,GAAG;IACpC,OAAO;EACT;EACA,OAAOwwI,YAAA,CAAat8H,IAAA,CAAKypE,OAAA,CAAQ39E,KAAK,IAAI,OAAO;IAC/C,SAAS;EACX;AACF;AAKA,SAASkxI,mBAAmBD,SAAA,EAAW;EACrC,OAAOtzD,OAAA,IAAW;IAChB,IAAIyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,KAAK,CAACqwI,cAAA,CAAe1yD,OAAA,CAAQ39E,KAAK,GAAG;MAGtE,OAAO;IACT;IACA,OAAO29E,OAAA,CAAQ39E,KAAA,CAAMe,MAAA,GAASkwI,SAAA,GAAY;MACxC,aAAa;QACX,kBAAkBA,SAAA;QAClB,gBAAgBtzD,OAAA,CAAQ39E,KAAA,CAAMe;MAChC;IACF,IAAI;EACN;AACF;AAKA,SAASqwI,mBAAmBD,SAAA,EAAW;EACrC,OAAOxzD,OAAA,IAAW;IAChB,OAAO0yD,cAAA,CAAe1yD,OAAA,CAAQ39E,KAAK,KAAK29E,OAAA,CAAQ39E,KAAA,CAAMe,MAAA,GAASowI,SAAA,GAAY;MACzE,aAAa;QACX,kBAAkBA,SAAA;QAClB,gBAAgBxzD,OAAA,CAAQ39E,KAAA,CAAMe;MAChC;IACF,IAAI;EACN;AACF;AAKA,SAASuwI,iBAAiBD,OAAA,EAAS;EACjC,IAAI,CAACA,OAAA,EAAS,OAAOE,aAAA;EACrB,IAAII,KAAA;EACJ,IAAIC,QAAA;EACJ,IAAI,OAAOP,OAAA,KAAY,UAAU;IAC/BO,QAAA,GAAW;IACX,IAAIP,OAAA,CAAQ5jG,MAAA,CAAO,CAAC,MAAM,KAAKmkG,QAAA,IAAY;IAC3CA,QAAA,IAAYP,OAAA;IACZ,IAAIA,OAAA,CAAQ5jG,MAAA,CAAO4jG,OAAA,CAAQtwI,MAAA,GAAS,CAAC,MAAM,KAAK6wI,QAAA,IAAY;IAC5DD,KAAA,GAAQ,IAAIE,MAAA,CAAOD,QAAQ;EAC7B,OAAO;IACLA,QAAA,GAAWP,OAAA,CAAQhvI,QAAA,CAAS;IAC5BsvI,KAAA,GAAQN,OAAA;EACV;EACA,OAAO1zD,OAAA,IAAW;IAChB,IAAIyyD,iBAAA,CAAkBzyD,OAAA,CAAQ39E,KAAK,GAAG;MACpC,OAAO;IACT;IACA,MAAMA,KAAA,GAAQ29E,OAAA,CAAQ39E,KAAA;IACtB,OAAO2xI,KAAA,CAAMz9H,IAAA,CAAKlU,KAAK,IAAI,OAAO;MAChC,WAAW;QACT,mBAAmB4xI,QAAA;QACnB,eAAe5xI;MACjB;IACF;EACF;AACF;AAIA,SAASuxI,cAAc5zD,OAAA,EAAS;EAC9B,OAAO;AACT;AACA,SAASm0D,UAAU9yG,CAAA,EAAG;EACpB,OAAOA,CAAA,IAAK;AACd;AACA,SAAS+yG,aAAa/xI,KAAA,EAAO;EAC3B,MAAMoyC,GAAA,GAAMnd,SAAA,CAAWj1B,KAAK,IAAIkB,IAAA,CAAKlB,KAAK,IAAIA,KAAA;EAC9C,KAAK,OAAOU,SAAA,KAAc,eAAeA,SAAA,KAAc,CAACsxI,cAAA,CAAgB5/F,GAAG,GAAG;IAC5E,IAAI4yF,YAAA,GAAe;IAEnB,IAAI,OAAOhlI,KAAA,KAAU,UAAU;MAC7BglI,YAAA,IAAgB;IAClB;IACA,MAAM,IAAIzwH,YAAA,CAAc,OAA0DywH,YAAY;EAChG;EACA,OAAO5yF,GAAA;AACT;AACA,SAAS6/F,YAAYC,aAAA,EAAe;EAClC,IAAI3tI,GAAA,GAAM,CAAC;EACX2tI,aAAA,CAAc1yI,OAAA,CAAQ2yI,MAAA,IAAU;IAC9B5tI,GAAA,GAAM4tI,MAAA,IAAU,OAAOtmI,cAAA,CAAAA,cAAA,KAClBtH,GAAA,GACA4tI,MAAA,IACD5tI,GAAA;EACN,CAAC;EACD,OAAO3D,MAAA,CAAOI,IAAA,CAAKuD,GAAG,EAAExD,MAAA,KAAW,IAAI,OAAOwD,GAAA;AAChD;AACA,SAAS6tI,kBAAkBz0D,OAAA,EAAS8zD,UAAA,EAAY;EAC9C,OAAOA,UAAA,CAAWrvI,GAAA,CAAIiwI,SAAA,IAAaA,SAAA,CAAU10D,OAAO,CAAC;AACvD;AACA,SAAS20D,cAAcD,SAAA,EAAW;EAChC,OAAO,CAACA,SAAA,CAAUE,QAAA;AACpB;AASA,SAASC,oBAAoBf,UAAA,EAAY;EACvC,OAAOA,UAAA,CAAWrvI,GAAA,CAAIiwI,SAAA,IAAa;IACjC,OAAOC,aAAA,CAAcD,SAAS,IAAIA,SAAA,GAAYj8G,CAAA,IAAKi8G,SAAA,CAAUE,QAAA,CAASn8G,CAAC;EACzE,CAAC;AACH;AAKA,SAASo7G,QAAQC,UAAA,EAAY;EAC3B,IAAI,CAACA,UAAA,EAAY,OAAO;EACxB,MAAMgB,iBAAA,GAAoBhB,UAAA,CAAWxvI,MAAA,CAAO6vI,SAAS;EACrD,IAAIW,iBAAA,CAAkB1xI,MAAA,IAAU,GAAG,OAAO;EAC1C,OAAO,UAAU48E,OAAA,EAAS;IACxB,OAAOs0D,WAAA,CAAYG,iBAAA,CAAkBz0D,OAAA,EAAS80D,iBAAiB,CAAC;EAClE;AACF;AAMA,SAASC,kBAAkBjB,UAAA,EAAY;EACrC,OAAOA,UAAA,IAAc,OAAOD,OAAA,CAAQgB,mBAAA,CAAoBf,UAAU,CAAC,IAAI;AACzE;AAKA,SAASC,aAAaD,UAAA,EAAY;EAChC,IAAI,CAACA,UAAA,EAAY,OAAO;EACxB,MAAMgB,iBAAA,GAAoBhB,UAAA,CAAWxvI,MAAA,CAAO6vI,SAAS;EACrD,IAAIW,iBAAA,CAAkB1xI,MAAA,IAAU,GAAG,OAAO;EAC1C,OAAO,UAAU48E,OAAA,EAAS;IACxB,MAAMle,WAAA,GAAc2yE,iBAAA,CAAkBz0D,OAAA,EAAS80D,iBAAiB,EAAErwI,GAAA,CAAI2vI,YAAY;IAClF,OAAO7M,QAAA,CAASzlE,WAAW,EAAE52D,IAAA,CAAKzG,GAAA,CAAI6vI,WAAW,CAAC;EACpD;AACF;AAMA,SAASU,uBAAuBlB,UAAA,EAAY;EAC1C,OAAOA,UAAA,IAAc,OAAOC,YAAA,CAAac,mBAAA,CAAoBf,UAAU,CAAC,IAAI;AAC9E;AAKA,SAASmB,gBAAgBC,iBAAA,EAAmBC,YAAA,EAAc;EACxD,IAAID,iBAAA,KAAsB,MAAM,OAAO,CAACC,YAAY;EACpD,OAAO7xI,KAAA,CAAMkB,OAAA,CAAQ0wI,iBAAiB,IAAI,CAAC,GAAGA,iBAAA,EAAmBC,YAAY,IAAI,CAACD,iBAAA,EAAmBC,YAAY;AACnH;AAIA,SAASC,qBAAqBp1D,OAAA,EAAS;EACrC,OAAOA,OAAA,CAAQq1D,cAAA;AACjB;AAIA,SAASC,0BAA0Bt1D,OAAA,EAAS;EAC1C,OAAOA,OAAA,CAAQu1D,mBAAA;AACjB;AAQA,SAASC,oBAAoB1B,UAAA,EAAY;EACvC,IAAI,CAACA,UAAA,EAAY,OAAO,EAAC;EACzB,OAAOxwI,KAAA,CAAMkB,OAAA,CAAQsvI,UAAU,IAAIA,UAAA,GAAa,CAACA,UAAU;AAC7D;AAQA,SAAS2B,aAAa3B,UAAA,EAAYY,SAAA,EAAW;EAC3C,OAAOpxI,KAAA,CAAMkB,OAAA,CAAQsvI,UAAU,IAAIA,UAAA,CAAWpI,QAAA,CAASgJ,SAAS,IAAIZ,UAAA,KAAeY,SAAA;AACrF;AAQA,SAASgB,cAAc5B,UAAA,EAAY6B,iBAAA,EAAmB;EACpD,MAAM5mI,OAAA,GAAUymI,mBAAA,CAAoBG,iBAAiB;EACrD,MAAMC,eAAA,GAAkBJ,mBAAA,CAAoB1B,UAAU;EACtD8B,eAAA,CAAgB/zI,OAAA,CAAQkE,CAAA,IAAK;IAK3B,IAAI,CAAC0vI,YAAA,CAAa1mI,OAAA,EAAShJ,CAAC,GAAG;MAC7BgJ,OAAA,CAAQrM,IAAA,CAAKqD,CAAC;IAChB;EACF,CAAC;EACD,OAAOgJ,OAAA;AACT;AACA,SAAS8mI,iBAAiB/B,UAAA,EAAY6B,iBAAA,EAAmB;EACvD,OAAOH,mBAAA,CAAoBG,iBAAiB,EAAErxI,MAAA,CAAOyB,CAAA,IAAK,CAAC0vI,YAAA,CAAa3B,UAAA,EAAY/tI,CAAC,CAAC;AACxF;AAUA,IAAM+vI,wBAAA,GAAN,MAA+B;EAC7Bx0I,YAAA,EAAc;IAKZ,KAAK+zI,cAAA,GAAiB,EAAC;IAMvB,KAAKE,mBAAA,GAAsB,EAAC;IAI5B,KAAKQ,mBAAA,GAAsB,EAAC;EAC9B;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI1zI,MAAA,EAAQ;IACV,OAAO,KAAK29E,OAAA,GAAU,KAAKA,OAAA,CAAQ39E,KAAA,GAAQ;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAI2zI,MAAA,EAAQ;IACV,OAAO,KAAKh2D,OAAA,GAAU,KAAKA,OAAA,CAAQg2D,KAAA,GAAQ;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIn1D,QAAA,EAAU;IACZ,OAAO,KAAKb,OAAA,GAAU,KAAKA,OAAA,CAAQa,OAAA,GAAU;EAC/C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIo1D,QAAA,EAAU;IACZ,OAAO,KAAKj2D,OAAA,GAAU,KAAKA,OAAA,CAAQi2D,OAAA,GAAU;EAC/C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIl3E,SAAA,EAAW;IACb,OAAO,KAAKihB,OAAA,GAAU,KAAKA,OAAA,CAAQjhB,QAAA,GAAW;EAChD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIkI,QAAA,EAAU;IACZ,OAAO,KAAK+Y,OAAA,GAAU,KAAKA,OAAA,CAAQ/Y,OAAA,GAAU;EAC/C;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIutE,OAAA,EAAS;IACX,OAAO,KAAKx0D,OAAA,GAAU,KAAKA,OAAA,CAAQw0D,MAAA,GAAS;EAC9C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAI0B,SAAA,EAAW;IACb,OAAO,KAAKl2D,OAAA,GAAU,KAAKA,OAAA,CAAQk2D,QAAA,GAAW;EAChD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIhwD,MAAA,EAAQ;IACV,OAAO,KAAKlG,OAAA,GAAU,KAAKA,OAAA,CAAQkG,KAAA,GAAQ;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIK,QAAA,EAAU;IACZ,OAAO,KAAKvG,OAAA,GAAU,KAAKA,OAAA,CAAQuG,OAAA,GAAU;EAC/C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAI18E,OAAA,EAAS;IACX,OAAO,KAAKm2E,OAAA,GAAU,KAAKA,OAAA,CAAQn2E,MAAA,GAAS;EAC9C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIssI,UAAA,EAAY;IACd,OAAO,KAAKn2D,OAAA,GAAU,KAAKA,OAAA,CAAQm2D,SAAA,GAAY;EACjD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIC,cAAA,EAAgB;IAClB,OAAO,KAAKp2D,OAAA,GAAU,KAAKA,OAAA,CAAQo2D,aAAA,GAAgB;EACrD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAItW,aAAA,EAAe;IACjB,OAAO,KAAK9/C,OAAA,GAAU,KAAKA,OAAA,CAAQ8/C,YAAA,GAAe;EACpD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIlqG,KAAA,EAAO;IACT,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKAygH,eAAevC,UAAA,EAAY;IACzB,KAAKuB,cAAA,GAAiBvB,UAAA,IAAc,EAAC;IACrC,KAAKwC,oBAAA,GAAuBvB,iBAAA,CAAkB,KAAKM,cAAc;EACnE;EAAA;AAAA;AAAA;AAAA;EAKAkB,oBAAoBzC,UAAA,EAAY;IAC9B,KAAKyB,mBAAA,GAAsBzB,UAAA,IAAc,EAAC;IAC1C,KAAK0C,yBAAA,GAA4BxB,sBAAA,CAAuB,KAAKO,mBAAmB;EAClF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIb,UAAA,EAAY;IACd,OAAO,KAAK4B,oBAAA,IAAwB;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIG,eAAA,EAAiB;IACnB,OAAO,KAAKD,yBAAA,IAA6B;EAC3C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAE,mBAAmB/xI,EAAA,EAAI;IACrB,KAAKoxI,mBAAA,CAAoBrzI,IAAA,CAAKiC,EAAE;EAClC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAgyI,0BAAA,EAA4B;IAC1B,KAAKZ,mBAAA,CAAoBl0I,OAAA,CAAQ8C,EAAA,IAAMA,EAAA,CAAG,CAAC;IAC3C,KAAKoxI,mBAAA,GAAsB,EAAC;EAC9B;EAAA;AAAA;AAAA;AAAA;EAKAnI,MAAMvrI,KAAA,GAAQ,QAAW;IACvB,IAAI,KAAK29E,OAAA,EAAS,KAAKA,OAAA,CAAQ4tD,KAAA,CAAMvrI,KAAK;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+BAu0I,SAASC,SAAA,EAAWjhH,IAAA,EAAM;IACxB,OAAO,KAAKoqD,OAAA,GAAU,KAAKA,OAAA,CAAQ42D,QAAA,CAASC,SAAA,EAAWjhH,IAAI,IAAI;EACjE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA4BAkhH,SAASD,SAAA,EAAWjhH,IAAA,EAAM;IACxB,OAAO,KAAKoqD,OAAA,GAAU,KAAKA,OAAA,CAAQ82D,QAAA,CAASD,SAAA,EAAWjhH,IAAI,IAAI;EACjE;AACF;AASA,IAAMmhH,gBAAA,GAAN,cAA+BjB,wBAAA,CAAyB;EAAA;AAAA;AAAA;AAAA;EAKtD,IAAIkB,cAAA,EAAgB;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIphH,KAAA,EAAO;IACT,OAAO;EACT;AACF;AASA,IAAMqhH,SAAA,GAAN,cAAwBnB,wBAAA,CAAyB;EAC/Cx0I,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAOlB,KAAK+yE,OAAA,GAAU;IAKf,KAAKhuF,IAAA,GAAO;IAKZ,KAAKi1I,aAAA,GAAgB;EACvB;AACF;AAMA,IAAMC,qBAAA,GAAN,MAA4B;EAC1B71I,YAAY81I,EAAA,EAAI;IACd,KAAKC,GAAA,GAAMD,EAAA;EACb;EACA,IAAIE,UAAA,EAAY;IACd,OAAO,CAAC,CAAC,KAAKD,GAAA,EAAKr3D,OAAA,EAASuG,OAAA;EAC9B;EACA,IAAIgxD,YAAA,EAAc;IAChB,OAAO,CAAC,CAAC,KAAKF,GAAA,EAAKr3D,OAAA,EAASm2D,SAAA;EAC9B;EACA,IAAIqB,WAAA,EAAa;IACf,OAAO,CAAC,CAAC,KAAKH,GAAA,EAAKr3D,OAAA,EAASk2D,QAAA;EAC9B;EACA,IAAIuB,QAAA,EAAU;IACZ,OAAO,CAAC,CAAC,KAAKJ,GAAA,EAAKr3D,OAAA,EAASkG,KAAA;EAC9B;EACA,IAAIvF,QAAA,EAAU;IACZ,OAAO,CAAC,CAAC,KAAK02D,GAAA,EAAKr3D,OAAA,EAASg2D,KAAA;EAC9B;EACA,IAAI0B,UAAA,EAAY;IACd,OAAO,CAAC,CAAC,KAAKL,GAAA,EAAKr3D,OAAA,EAASa,OAAA;EAC9B;EACA,IAAI82D,UAAA,EAAY;IACd,OAAO,CAAC,CAAC,KAAKN,GAAA,EAAKr3D,OAAA,EAASi2D,OAAA;EAC9B;EACA,IAAI2B,YAAA,EAAc;IAGhB,OAAO,CAAC,CAAC,KAAKP,GAAA,EAAKlxD,SAAA;EACrB;AACF;AACA,IAAM0xD,mBAAA,GAAsB;EAC1B,wBAAwB;EACxB,sBAAsB;EACtB,uBAAuB;EACvB,oBAAoB;EACpB,oBAAoB;EACpB,sBAAsB;EACtB,sBAAsB;AACxB;AACA,IAAMC,iBAAA,GAAoB1xH,aAAA,CAAAlY,cAAA,KACrB2pI,mBAAA,GADqB;EAExB,wBAAwB;AAC1B;AAwBA,IAAME,gBAAA,GAAN,MAAMA,gBAAA,SAAwBZ,qBAAA,CAAsB;EAClD71I,YAAY81I,EAAA,EAAI;IACd,MAAMA,EAAE;EACV;AAmBF;AAjBIW,gBAAA,CAAKlsI,IAAA,GAAO,SAASmsI,wBAAwB9xI,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK6xI,gBAAA,EAAoBzqF,iBAAA,CAAkB2pF,SAAA,EAAW,CAAC,CAAC;AACtE;AAGAc,gBAAA,CAAKjtG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4uI,gBAAA;EACN/sG,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,WAAW,EAAE,GAAG,CAAC,IAAI,eAAe,EAAE,CAAC;EACrF2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASqqF,6BAA6BxpG,EAAA,EAAIlb,GAAA,EAAK;IAC3D,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,gBAAgBp6D,GAAA,CAAIgkH,WAAW,EAAE,cAAchkH,GAAA,CAAI+jH,SAAS,EAAE,eAAe/jH,GAAA,CAAIikH,UAAU,EAAE,YAAYjkH,GAAA,CAAIkkH,OAAO,EAAE,YAAYlkH,GAAA,CAAIotD,OAAO,EAAE,cAAcptD,GAAA,CAAImkH,SAAS,EAAE,cAAcnkH,GAAA,CAAIokH,SAAS;IACxN;EACF;EACAj9H,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AApBL,IAAMshD,eAAA,GAANH,gBAAA;AAAA,CAuBC,MAAM;EACL,CAAC,OAAOh1I,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8rI,eAAA,EAAiB,CAAC;IACxF/uI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAMq3H;IACR,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1uI,IAAA,EAAM8tI,SAAA;IACNrhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMgvI;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAaH,IAAMC,qBAAA,GAAN,MAAMA,qBAAA,SAA6BjB,qBAAA,CAAsB;EACvD71I,YAAY81I,EAAA,EAAI;IACd,MAAMA,EAAE;EACV;AAmBF;AAjBIgB,qBAAA,CAAKvsI,IAAA,GAAO,SAASwsI,6BAA6BnyI,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKkyI,qBAAA,EAAyB9qF,iBAAA,CAAkBypF,gBAAA,EAAkB,EAAE,CAAC;AACnF;AAGAqB,qBAAA,CAAKttG,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMivI,qBAAA;EACNptG,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,gBAAgB,EAAE,GAAG,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,QAAQ,GAAG,YAAY,EAAE,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;EAClK2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS0qF,kCAAkC7pG,EAAA,EAAIlb,GAAA,EAAK;IAChE,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,gBAAgBp6D,GAAA,CAAIgkH,WAAW,EAAE,cAAchkH,GAAA,CAAI+jH,SAAS,EAAE,eAAe/jH,GAAA,CAAIikH,UAAU,EAAE,YAAYjkH,GAAA,CAAIkkH,OAAO,EAAE,YAAYlkH,GAAA,CAAIotD,OAAO,EAAE,cAAcptD,GAAA,CAAImkH,SAAS,EAAE,cAAcnkH,GAAA,CAAIokH,SAAS,EAAE,gBAAgBpkH,GAAA,CAAIqkH,WAAW;IACzP;EACF;EACAl9H,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AApBL,IAAM2hD,oBAAA,GAANH,qBAAA;AAAA,CAuBC,MAAM;EACL,CAAC,OAAOr1I,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmsI,oBAAA,EAAsB,CAAC;IAC7FpvI,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAMs3H;IACR,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT3uI,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMK,sBAAA,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU/B,IAAMC,oBAAA,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY7B,IAAMC,oBAAA,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe7B,IAAMC,mBAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5B,IAAMC,2BAAA,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAMpC,SAASC,uBAAA,EAAyB;EAChC,OAAO,IAAIjiI,YAAA,CAAc,MAA8D;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnF4hI,sBAAsB,EAAE;AAC9B;AACA,SAASM,sBAAA,EAAwB;EAC/B,OAAO,IAAIliI,YAAA,CAAc,MAAkE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKrF6hI,oBAAoB;AAAA;AAAA;AAAA;AAAA,QAIpBE,mBAAmB,EAAE;AAC7B;AACA,SAASI,qBAAA,EAAuB;EAC9B,OAAO,IAAIniI,YAAA,CAAc,MAAyD;AAAA;AAAA;AAAA;AAAA,QAI5E4hI,sBAAsB,EAAE;AAChC;AACA,SAASQ,qBAAA,EAAuB;EAC9B,OAAO,IAAIpiI,YAAA,CAAc,MAA4D;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjF6hI,oBAAoB,EAAE;AAC5B;AACA,SAASQ,qBAAA,EAAuB;EAC9B,OAAO,IAAIriI,YAAA,CAAc,MAA4D;AAAA;AAAA;AAAA;AAAA;AAAA,QAK/E8hI,oBAAoB,EAAE;AAC9B;AACA,IAAMQ,mBAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B,IAAMC,qCAAA,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe9C,SAASC,eAAeC,aAAA,EAAe;EACrC,OAAO;AAAA,iEACwDA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAM7CA,aAAA,KAAkB,gBAAgB,yBAAyB,iBAAiB;AAAA;AAE7G;AACA,SAASC,YAAYC,WAAA,EAAap3I,GAAA,EAAK;EACrC,OAAOo3I,WAAA,GAAc,eAAep3I,GAAG,MAAM,aAAaA,GAAG;AAC/D;AACA,SAASq3I,gBAAgBD,WAAA,EAAa;EACpC,OAAO;AAAA,sDAC6CA,WAAA,GAAc,UAAU,OAAO;AAAA;AAAA;AAGrF;AACA,SAASE,oBAAoBF,WAAA,EAAap3I,GAAA,EAAK;EAC7C,OAAO,4BAA4Bm3I,WAAA,CAAYC,WAAA,EAAap3I,GAAG,CAAC;AAClE;AACA,SAASu3I,yBAAyBH,WAAA,EAAap3I,GAAA,EAAK;EAClD,OAAO,wCAAwCm3I,WAAA,CAAYC,WAAA,EAAap3I,GAAG,CAAC;AAC9E;AAOA,IAAMw3I,KAAA,GAAQ;AAMd,IAAMC,OAAA,GAAU;AAQhB,IAAMC,OAAA,GAAU;AAQhB,IAAMC,QAAA,GAAW;AAIjB,SAASC,eAAeC,eAAA,EAAiB;EACvC,QAAQC,YAAA,CAAaD,eAAe,IAAIA,eAAA,CAAgBlG,UAAA,GAAakG,eAAA,KAAoB;AAC3F;AAIA,SAASE,kBAAkBxF,SAAA,EAAW;EACpC,OAAOpxI,KAAA,CAAMkB,OAAA,CAAQkwI,SAAS,IAAIK,iBAAA,CAAkBL,SAAS,IAAIA,SAAA,IAAa;AAChF;AAIA,SAASyF,oBAAoB1D,cAAA,EAAgBuD,eAAA,EAAiB;EAC5D,IAAI,OAAOj3I,SAAA,KAAc,eAAeA,SAAA,EAAW;IACjD,IAAIk3I,YAAA,CAAaD,eAAe,KAAKvD,cAAA,EAAgB;MACnD1kH,OAAA,CAAQhf,IAAA,CAAKomI,qCAAqC;IACpD;EACF;EACA,QAAQc,YAAA,CAAaD,eAAe,IAAIA,eAAA,CAAgBI,eAAA,GAAkB3D,cAAA,KAAmB;AAC/F;AAIA,SAAS4D,uBAAuB5D,cAAA,EAAgB;EAC9C,OAAOnzI,KAAA,CAAMkB,OAAA,CAAQiyI,cAAc,IAAIzB,sBAAA,CAAuByB,cAAc,IAAIA,cAAA,IAAkB;AACpG;AACA,SAASwD,aAAaD,eAAA,EAAiB;EACrC,OAAOA,eAAA,IAAmB,QAAQ,CAAC12I,KAAA,CAAMkB,OAAA,CAAQw1I,eAAe,KAAK,OAAOA,eAAA,KAAoB;AAClG;AACA,SAASM,qBAAqB7yH,MAAA,EAAQ8yH,OAAA,EAASp4I,GAAA,EAAK;EAClD,MAAMq4I,QAAA,GAAW/yH,MAAA,CAAO+yH,QAAA;EACxB,MAAMC,UAAA,GAAaF,OAAA,GAAUt3I,MAAA,CAAOI,IAAA,CAAKm3I,QAAQ,IAAIA,QAAA;EACrD,IAAI,CAACC,UAAA,CAAWr3I,MAAA,EAAQ;IACtB,MAAM,IAAIwT,YAAA,CAAc,KAAyC,OAAO7T,SAAA,KAAc,eAAeA,SAAA,GAAYy2I,eAAA,CAAgBe,OAAO,IAAI,EAAE;EAChJ;EACA,IAAI,CAACC,QAAA,CAASr4I,GAAG,GAAG;IAClB,MAAM,IAAIyU,YAAA,CAAc,MAA6C,OAAO7T,SAAA,KAAc,eAAeA,SAAA,GAAY02I,mBAAA,CAAoBc,OAAA,EAASp4I,GAAG,IAAI,EAAE;EAC7J;AACF;AACA,SAASu4I,uBAAuB16D,OAAA,EAASu6D,OAAA,EAASl4I,KAAA,EAAO;EACvD29E,OAAA,CAAQ26D,aAAA,CAAc,CAACzkG,CAAA,EAAG/zC,GAAA,KAAQ;IAChC,IAAIE,KAAA,CAAMF,GAAG,MAAM,QAAW;MAC5B,MAAM,IAAIyU,YAAA,CAAc,MAAmD,OAAO7T,SAAA,KAAc,eAAeA,SAAA,GAAY22I,wBAAA,CAAyBa,OAAA,EAASp4I,GAAG,IAAI,EAAE;IACxK;EACF,CAAC;AACH;AAmBA,IAAMy4I,eAAA,GAAN,MAAsB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASpBt5I,YAAYwyI,UAAA,EAAYsG,eAAA,EAAiB;IAEvC,KAAKS,aAAA,GAAgB;IAMrB,KAAKC,4BAAA,GAA+B;IAEpC,KAAKC,eAAA,GAAkB;IAEvB,KAAKC,mBAAA,GAAsB,MAAM,CAAC;IAClC,KAAK/qD,OAAA,GAAU;IAQf,KAAKimD,QAAA,GAAW;IAOhB,KAAK3vD,OAAA,GAAU;IAEf,KAAK00D,iBAAA,GAAoB,EAAC;IAC1B,KAAKC,iBAAA,CAAkBpH,UAAU;IACjC,KAAKqH,sBAAA,CAAuBf,eAAe;EAC7C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAI1F,UAAA,EAAY;IACd,OAAO,KAAK4B,oBAAA;EACd;EACA,IAAI5B,UAAU0G,WAAA,EAAa;IACzB,KAAK/F,cAAA,GAAiB,KAAKiB,oBAAA,GAAuB8E,WAAA;EACpD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAI3E,eAAA,EAAiB;IACnB,OAAO,KAAKD,yBAAA;EACd;EACA,IAAIC,eAAe4E,gBAAA,EAAkB;IACnC,KAAK9F,mBAAA,GAAsB,KAAKiB,yBAAA,GAA4B6E,gBAAA;EAC9D;EAAA;AAAA;AAAA;EAIA,IAAI5zH,OAAA,EAAS;IACX,OAAO,KAAKwoE,OAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA,IAAI+lD,MAAA,EAAQ;IACV,OAAO,KAAKnsI,MAAA,KAAW8vI,KAAA;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA,IAAI94D,QAAA,EAAU;IACZ,OAAO,KAAKh3E,MAAA,KAAW+vI,OAAA;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA,IAAI3D,QAAA,EAAU;IACZ,OAAO,KAAKpsI,MAAA,IAAUgwI,OAAA;EACxB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYA,IAAI96E,SAAA,EAAW;IACb,OAAO,KAAKl1D,MAAA,KAAWiwI,QAAA;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUA,IAAI7yE,QAAA,EAAU;IACZ,OAAO,KAAKp9D,MAAA,KAAWiwI,QAAA;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA,IAAI5zD,MAAA,EAAQ;IACV,OAAO,CAAC,KAAKgwD,QAAA;EACf;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIC,UAAA,EAAY;IACd,OAAO,CAAC,KAAK5vD,OAAA;EACf;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAI+0D,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA,GAAY,KAAKA,SAAA,GAAY,KAAK9zH,MAAA,GAAS,KAAKA,MAAA,CAAO6zH,QAAA,GAAW;EAChF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAE,cAAc1H,UAAA,EAAY;IACxB,KAAKoH,iBAAA,CAAkBpH,UAAU;EACnC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWA2H,mBAAmB3H,UAAA,EAAY;IAC7B,KAAKqH,sBAAA,CAAuBrH,UAAU;EACxC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAaA4B,cAAc5B,UAAA,EAAY;IACxB,KAAK0H,aAAA,CAAc9F,aAAA,CAAc5B,UAAA,EAAY,KAAKuB,cAAc,CAAC;EACnE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAqG,mBAAmB5H,UAAA,EAAY;IAC7B,KAAK2H,kBAAA,CAAmB/F,aAAA,CAAc5B,UAAA,EAAY,KAAKyB,mBAAmB,CAAC;EAC7E;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA8BAM,iBAAiB/B,UAAA,EAAY;IAC3B,KAAK0H,aAAA,CAAc3F,gBAAA,CAAiB/B,UAAA,EAAY,KAAKuB,cAAc,CAAC;EACtE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAsG,sBAAsB7H,UAAA,EAAY;IAChC,KAAK2H,kBAAA,CAAmB5F,gBAAA,CAAiB/B,UAAA,EAAY,KAAKyB,mBAAmB,CAAC;EAChF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAwBAE,aAAaf,SAAA,EAAW;IACtB,OAAOe,YAAA,CAAa,KAAKJ,cAAA,EAAgBX,SAAS;EACpD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAkH,kBAAkBlH,SAAA,EAAW;IAC3B,OAAOe,YAAA,CAAa,KAAKF,mBAAA,EAAqBb,SAAS;EACzD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAmH,gBAAA,EAAkB;IAChB,KAAKnH,SAAA,GAAY;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAoH,qBAAA,EAAuB;IACrB,KAAKrF,cAAA,GAAiB;EACxB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcAsF,cAAcC,IAAA,GAAO,CAAC,GAAG;IACvB,KAAKz1D,OAAA,GAAU;IACf,IAAI,KAAK0J,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQ8rD,aAAA,CAAcC,IAAI;IACjC;EACF;EAAA;AAAA;AAAA;AAAA;EAKAE,iBAAA,EAAmB;IACjB,KAAKH,aAAA,CAAc;MACjBE,QAAA,EAAU;IACZ,CAAC;IACD,KAAKtB,aAAA,CAAc36D,OAAA,IAAWA,OAAA,CAAQk8D,gBAAA,CAAiB,CAAC;EAC1D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAgBAC,gBAAgBH,IAAA,GAAO,CAAC,GAAG;IACzB,KAAKz1D,OAAA,GAAU;IACf,KAAKw0D,eAAA,GAAkB;IACvB,KAAKJ,aAAA,CAAc36D,OAAA,IAAW;MAC5BA,OAAA,CAAQm8D,eAAA,CAAgB;QACtBF,QAAA,EAAU;MACZ,CAAC;IACH,CAAC;IACD,IAAI,KAAKhsD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQmsD,cAAA,CAAeJ,IAAI;IAClC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcAK,YAAYL,IAAA,GAAO,CAAC,GAAG;IACrB,KAAK9F,QAAA,GAAW;IAChB,IAAI,KAAKjmD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQosD,WAAA,CAAYL,IAAI;IAC/B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiBAM,eAAeN,IAAA,GAAO,CAAC,GAAG;IACxB,KAAK9F,QAAA,GAAW;IAChB,KAAK2E,aAAA,GAAgB;IACrB,KAAKF,aAAA,CAAc36D,OAAA,IAAW;MAC5BA,OAAA,CAAQs8D,cAAA,CAAe;QACrBL,QAAA,EAAU;MACZ,CAAC;IACH,CAAC;IACD,IAAI,KAAKhsD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQssD,eAAA,CAAgBP,IAAI;IACnC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiBAQ,cAAcR,IAAA,GAAO,CAAC,GAAG;IACvB,KAAKnyI,MAAA,GAASgwI,OAAA;IACd,IAAImC,IAAA,CAAKnrD,SAAA,KAAc,OAAO;MAC5B,KAAKulD,aAAA,CAAchsG,IAAA,CAAK,KAAKvgC,MAAM;IACrC;IACA,IAAI,KAAKomF,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQusD,aAAA,CAAcR,IAAI;IACjC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAkBAjgI,QAAQigI,IAAA,GAAO,CAAC,GAAG;IAGjB,MAAMS,iBAAA,GAAoB,KAAKC,kBAAA,CAAmBV,IAAA,CAAKC,QAAQ;IAC/D,KAAKpyI,MAAA,GAASiwI,QAAA;IACd,KAAKtF,MAAA,GAAS;IACd,KAAKmG,aAAA,CAAc36D,OAAA,IAAW;MAC5BA,OAAA,CAAQjkE,OAAA,CAAQqK,aAAA,CAAAlY,cAAA,KACX8tI,IAAA,GADW;QAEdC,QAAA,EAAU;MACZ,EAAC;IACH,CAAC;IACD,KAAKU,YAAA,CAAa;IAClB,IAAIX,IAAA,CAAKnrD,SAAA,KAAc,OAAO;MAC5B,KAAKivC,YAAA,CAAa11F,IAAA,CAAK,KAAK/nC,KAAK;MACjC,KAAK+zI,aAAA,CAAchsG,IAAA,CAAK,KAAKvgC,MAAM;IACrC;IACA,KAAK+yI,gBAAA,CAAiBx2H,aAAA,CAAAlY,cAAA,KACjB8tI,IAAA,GADiB;MAEpBS;IACF,EAAC;IACD,KAAKxB,iBAAA,CAAkBp5I,OAAA,CAAQg7I,QAAA,IAAYA,QAAA,CAAS,IAAI,CAAC;EAC3D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAmBAnrH,OAAOsqH,IAAA,GAAO,CAAC,GAAG;IAGhB,MAAMS,iBAAA,GAAoB,KAAKC,kBAAA,CAAmBV,IAAA,CAAKC,QAAQ;IAC/D,KAAKpyI,MAAA,GAAS8vI,KAAA;IACd,KAAKgB,aAAA,CAAc36D,OAAA,IAAW;MAC5BA,OAAA,CAAQtuD,MAAA,CAAOtL,aAAA,CAAAlY,cAAA,KACV8tI,IAAA,GADU;QAEbC,QAAA,EAAU;MACZ,EAAC;IACH,CAAC;IACD,KAAKa,sBAAA,CAAuB;MAC1Bb,QAAA,EAAU;MACVprD,SAAA,EAAWmrD,IAAA,CAAKnrD;IAClB,CAAC;IACD,KAAK+rD,gBAAA,CAAiBx2H,aAAA,CAAAlY,cAAA,KACjB8tI,IAAA,GADiB;MAEpBS;IACF,EAAC;IACD,KAAKxB,iBAAA,CAAkBp5I,OAAA,CAAQg7I,QAAA,IAAYA,QAAA,CAAS,KAAK,CAAC;EAC5D;EACAD,iBAAiBZ,IAAA,EAAM;IACrB,IAAI,KAAK/rD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQ6sD,sBAAA,CAAuBd,IAAI;MACxC,IAAI,CAACA,IAAA,CAAKS,iBAAA,EAAmB;QAC3B,KAAKxsD,OAAA,CAAQssD,eAAA,CAAgB;MAC/B;MACA,KAAKtsD,OAAA,CAAQmsD,cAAA,CAAe;IAC9B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAW,UAAUt1H,MAAA,EAAQ;IAChB,KAAKwoE,OAAA,GAAUxoE,MAAA;EACjB;EAAA;AAAA;AAAA;AAAA;EAKAu1H,YAAA,EAAc;IACZ,OAAO,KAAK36I,KAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAeAy6I,uBAAuBd,IAAA,GAAO,CAAC,GAAG;IAChC,KAAKiB,iBAAA,CAAkB;IACvB,KAAKN,YAAA,CAAa;IAClB,IAAI,KAAK11E,OAAA,EAAS;MAChB,KAAKi2E,2BAAA,CAA4B;MACjC,KAAK1I,MAAA,GAAS,KAAK2I,aAAA,CAAc;MACjC,KAAKtzI,MAAA,GAAS,KAAKuzI,gBAAA,CAAiB;MACpC,IAAI,KAAKvzI,MAAA,KAAW8vI,KAAA,IAAS,KAAK9vI,MAAA,KAAWgwI,OAAA,EAAS;QACpD,KAAKwD,kBAAA,CAAmBrB,IAAA,CAAKnrD,SAAS;MACxC;IACF;IACA,IAAImrD,IAAA,CAAKnrD,SAAA,KAAc,OAAO;MAC5B,KAAKivC,YAAA,CAAa11F,IAAA,CAAK,KAAK/nC,KAAK;MACjC,KAAK+zI,aAAA,CAAchsG,IAAA,CAAK,KAAKvgC,MAAM;IACrC;IACA,IAAI,KAAKomF,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQ6sD,sBAAA,CAAuBd,IAAI;IAC1C;EACF;EAAA;EAEAsB,oBAAoBtB,IAAA,GAAO;IACzBnrD,SAAA,EAAW;EACb,GAAG;IACD,KAAK8pD,aAAA,CAAc4C,IAAA,IAAQA,IAAA,CAAKD,mBAAA,CAAoBtB,IAAI,CAAC;IACzD,KAAKc,sBAAA,CAAuB;MAC1Bb,QAAA,EAAU;MACVprD,SAAA,EAAWmrD,IAAA,CAAKnrD;IAClB,CAAC;EACH;EACAosD,kBAAA,EAAoB;IAClB,KAAKpzI,MAAA,GAAS,KAAK2zI,oBAAA,CAAqB,IAAI1D,QAAA,GAAWH,KAAA;EACzD;EACAwD,cAAA,EAAgB;IACd,OAAO,KAAKzI,SAAA,GAAY,KAAKA,SAAA,CAAU,IAAI,IAAI;EACjD;EACA2I,mBAAmBxsD,SAAA,EAAW;IAC5B,IAAI,KAAK4lD,cAAA,EAAgB;MACvB,KAAK5sI,MAAA,GAASgwI,OAAA;MACd,KAAKiB,4BAAA,GAA+B;MACpC,MAAMrmG,GAAA,GAAM2/F,YAAA,CAAa,KAAKqC,cAAA,CAAe,IAAI,CAAC;MAClD,KAAKgH,4BAAA,GAA+BhpG,GAAA,CAAIrI,SAAA,CAAUooG,MAAA,IAAU;QAC1D,KAAKsG,4BAAA,GAA+B;QAIpC,KAAK4C,SAAA,CAAUlJ,MAAA,EAAQ;UACrB3jD;QACF,CAAC;MACH,CAAC;IACH;EACF;EACAqsD,4BAAA,EAA8B;IAC5B,IAAI,KAAKO,4BAAA,EAA8B;MACrC,KAAKA,4BAAA,CAA6BxxG,WAAA,CAAY;MAC9C,KAAK6uG,4BAAA,GAA+B;IACtC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA6BA4C,UAAUlJ,MAAA,EAAQwH,IAAA,GAAO,CAAC,GAAG;IAC3B,KAAKxH,MAAA,GAASA,MAAA;IACd,KAAKmJ,qBAAA,CAAsB3B,IAAA,CAAKnrD,SAAA,KAAc,KAAK;EACrD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+BApuF,IAAImzB,IAAA,EAAM;IACR,IAAIgoH,QAAA,GAAWhoH,IAAA;IACf,IAAIgoH,QAAA,IAAY,MAAM,OAAO;IAC7B,IAAI,CAACt6I,KAAA,CAAMkB,OAAA,CAAQo5I,QAAQ,GAAGA,QAAA,GAAWA,QAAA,CAASh8I,KAAA,CAAM,GAAG;IAC3D,IAAIg8I,QAAA,CAASx6I,MAAA,KAAW,GAAG,OAAO;IAClC,OAAOw6I,QAAA,CAASv0I,MAAA,CAAO,CAAC22E,OAAA,EAAS/9E,IAAA,KAAS+9E,OAAA,IAAWA,OAAA,CAAQ69D,KAAA,CAAM57I,IAAI,GAAG,IAAI;EAChF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA4BA60I,SAASD,SAAA,EAAWjhH,IAAA,EAAM;IACxB,MAAMoqD,OAAA,GAAUpqD,IAAA,GAAO,KAAKnzB,GAAA,CAAImzB,IAAI,IAAI;IACxC,OAAOoqD,OAAA,IAAWA,OAAA,CAAQw0D,MAAA,GAASx0D,OAAA,CAAQw0D,MAAA,CAAOqC,SAAS,IAAI;EACjE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+BAD,SAASC,SAAA,EAAWjhH,IAAA,EAAM;IACxB,OAAO,CAAC,CAAC,KAAKkhH,QAAA,CAASD,SAAA,EAAWjhH,IAAI;EACxC;EAAA;AAAA;AAAA;EAIA,IAAIsC,KAAA,EAAO;IACT,IAAIijB,CAAA,GAAI;IACR,OAAOA,CAAA,CAAE80C,OAAA,EAAS;MAChB90C,CAAA,GAAIA,CAAA,CAAE80C,OAAA;IACR;IACA,OAAO90C,CAAA;EACT;EAAA;EAEAwiG,sBAAsB9sD,SAAA,EAAW;IAC/B,KAAKhnF,MAAA,GAAS,KAAKuzI,gBAAA,CAAiB;IACpC,IAAIvsD,SAAA,EAAW;MACb,KAAKulD,aAAA,CAAchsG,IAAA,CAAK,KAAKvgC,MAAM;IACrC;IACA,IAAI,KAAKomF,OAAA,EAAS;MAChB,KAAKA,OAAA,CAAQ0tD,qBAAA,CAAsB9sD,SAAS;IAC9C;EACF;EAAA;EAEAitD,iBAAA,EAAmB;IACjB,KAAKhe,YAAA,GAAe,IAAIz3F,YAAA,CAAa;IACrC,KAAK+tG,aAAA,GAAgB,IAAI/tG,YAAA,CAAa;EACxC;EACA+0G,iBAAA,EAAmB;IACjB,IAAI,KAAKI,oBAAA,CAAqB,GAAG,OAAO1D,QAAA;IACxC,IAAI,KAAKtF,MAAA,EAAQ,OAAOoF,OAAA;IACxB,IAAI,KAAKkB,4BAAA,IAAgC,KAAKiD,sBAAA,CAAuBlE,OAAO,GAAG,OAAOA,OAAA;IACtF,IAAI,KAAKkE,sBAAA,CAAuBnE,OAAO,GAAG,OAAOA,OAAA;IACjD,OAAOD,KAAA;EACT;EAAA;EAEAoE,uBAAuBl0I,MAAA,EAAQ;IAC7B,OAAO,KAAKm0I,YAAA,CAAah+D,OAAA,IAAWA,OAAA,CAAQn2E,MAAA,KAAWA,MAAM;EAC/D;EAAA;EAEAo0I,kBAAA,EAAoB;IAClB,OAAO,KAAKD,YAAA,CAAah+D,OAAA,IAAWA,OAAA,CAAQkG,KAAK;EACnD;EAAA;EAEAg4D,oBAAA,EAAsB;IACpB,OAAO,KAAKF,YAAA,CAAah+D,OAAA,IAAWA,OAAA,CAAQuG,OAAO;EACrD;EAAA;EAEAg2D,gBAAgBP,IAAA,GAAO,CAAC,GAAG;IACzB,KAAK9F,QAAA,GAAW,CAAC,KAAK+H,iBAAA,CAAkB;IACxC,IAAI,KAAKhuD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQssD,eAAA,CAAgBP,IAAI;IACnC;EACF;EAAA;EAEAI,eAAeJ,IAAA,GAAO,CAAC,GAAG;IACxB,KAAKz1D,OAAA,GAAU,KAAK23D,mBAAA,CAAoB;IACxC,IAAI,KAAKjuD,OAAA,IAAW,CAAC+rD,IAAA,CAAKC,QAAA,EAAU;MAClC,KAAKhsD,OAAA,CAAQmsD,cAAA,CAAeJ,IAAI;IAClC;EACF;EAAA;EAEAmC,4BAA4Bx5I,EAAA,EAAI;IAC9B,KAAKq2I,mBAAA,GAAsBr2I,EAAA;EAC7B;EAAA;EAEAy5I,mBAAmBpC,IAAA,EAAM;IACvB,IAAI/B,YAAA,CAAa+B,IAAI,KAAKA,IAAA,CAAKV,QAAA,IAAY,MAAM;MAC/C,KAAKC,SAAA,GAAYS,IAAA,CAAKV,QAAA;IACxB;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAoB,mBAAmBT,QAAA,EAAU;IAC3B,MAAMoC,WAAA,GAAc,KAAKpuD,OAAA,IAAW,KAAKA,OAAA,CAAQ/J,KAAA;IACjD,OAAO,CAAC+1D,QAAA,IAAY,CAAC,CAACoC,WAAA,IAAe,CAAC,KAAKpuD,OAAA,CAAQguD,iBAAA,CAAkB;EACvE;EAAA;EAEAJ,MAAM57I,IAAA,EAAM;IACV,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAi5I,kBAAkBpH,UAAA,EAAY;IAC5B,KAAKuB,cAAA,GAAiB/xI,KAAA,CAAMkB,OAAA,CAAQsvI,UAAU,IAAIA,UAAA,CAAW5xI,KAAA,CAAM,IAAI4xI,UAAA;IACvE,KAAKwC,oBAAA,GAAuB4D,iBAAA,CAAkB,KAAK7E,cAAc;EACnE;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA8F,uBAAuBrH,UAAA,EAAY;IACjC,KAAKyB,mBAAA,GAAsBjyI,KAAA,CAAMkB,OAAA,CAAQsvI,UAAU,IAAIA,UAAA,CAAW5xI,KAAA,CAAM,IAAI4xI,UAAA;IAC5E,KAAK0C,yBAAA,GAA4B6D,sBAAA,CAAuB,KAAK9E,mBAAmB;EAClF;AACF;AAmHA,IAAM+I,SAAA,GAAN,cAAwB1D,eAAA,CAAgB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EActCt5I,YAAYk5I,QAAA,EAAUR,eAAA,EAAiBvD,cAAA,EAAgB;IACrD,MAAMsD,cAAA,CAAeC,eAAe,GAAGG,mBAAA,CAAoB1D,cAAA,EAAgBuD,eAAe,CAAC;IAC3F,CAAC,OAAOj3I,SAAA,KAAc,eAAeA,SAAA,KAAcw7I,yBAAA,CAA0B/D,QAAQ;IACrF,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKsD,gBAAA,CAAiB;IACtB,KAAKM,kBAAA,CAAmBpE,eAAe;IACvC,KAAKwE,cAAA,CAAe;IACpB,KAAK1B,sBAAA,CAAuB;MAC1Bb,QAAA,EAAU;MAAA;MAAA;MAAA;MAIVprD,SAAA,EAAW,CAAC,CAAC,KAAK4lD;IACpB,CAAC;EACH;EACAgI,gBAAgBx8I,IAAA,EAAM+9E,OAAA,EAAS;IAC7B,IAAI,KAAKw6D,QAAA,CAASv4I,IAAI,GAAG,OAAO,KAAKu4I,QAAA,CAASv4I,IAAI;IAClD,KAAKu4I,QAAA,CAASv4I,IAAI,IAAI+9E,OAAA;IACtBA,OAAA,CAAQ+8D,SAAA,CAAU,IAAI;IACtB/8D,OAAA,CAAQm+D,2BAAA,CAA4B,KAAKnD,mBAAmB;IAC5D,OAAOh7D,OAAA;EACT;EACA0+D,WAAWz8I,IAAA,EAAM+9E,OAAA,EAAS15E,OAAA,GAAU,CAAC,GAAG;IACtC,KAAKm4I,eAAA,CAAgBx8I,IAAA,EAAM+9E,OAAO;IAClC,KAAK88D,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;IACD,KAAKmqD,mBAAA,CAAoB;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcA2D,cAAc18I,IAAA,EAAMqE,OAAA,GAAU,CAAC,GAAG;IAChC,IAAI,KAAKk0I,QAAA,CAASv4I,IAAI,GAAG,KAAKu4I,QAAA,CAASv4I,IAAI,EAAEk8I,2BAAA,CAA4B,MAAM,CAAC,CAAC;IACjF,OAAO,KAAK3D,QAAA,CAASv4I,IAAI;IACzB,KAAK66I,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;IACD,KAAKmqD,mBAAA,CAAoB;EAC3B;EACA4D,WAAW38I,IAAA,EAAM+9E,OAAA,EAAS15E,OAAA,GAAU,CAAC,GAAG;IACtC,IAAI,KAAKk0I,QAAA,CAASv4I,IAAI,GAAG,KAAKu4I,QAAA,CAASv4I,IAAI,EAAEk8I,2BAAA,CAA4B,MAAM,CAAC,CAAC;IACjF,OAAO,KAAK3D,QAAA,CAASv4I,IAAI;IACzB,IAAI+9E,OAAA,EAAS,KAAKy+D,eAAA,CAAgBx8I,IAAA,EAAM+9E,OAAO;IAC/C,KAAK88D,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;IACD,KAAKmqD,mBAAA,CAAoB;EAC3B;EACAtqE,SAASmuE,WAAA,EAAa;IACpB,OAAO,KAAKrE,QAAA,CAAStoH,cAAA,CAAe2sH,WAAW,KAAK,KAAKrE,QAAA,CAASqE,WAAW,EAAE53E,OAAA;EACjF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAoCA79C,SAAS/mB,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAC5Bo0I,sBAAA,CAAuB,MAAM,MAAMr4I,KAAK;IACxCY,MAAA,CAAOI,IAAA,CAAKhB,KAAK,EAAER,OAAA,CAAQI,IAAA,IAAQ;MACjCq4I,oBAAA,CAAqB,MAAM,MAAMr4I,IAAI;MACrC,KAAKu4I,QAAA,CAASv4I,IAAI,EAAEmnB,QAAA,CAAS/mB,KAAA,CAAMJ,IAAI,GAAG;QACxCg6I,QAAA,EAAU;QACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;MACrB,CAAC;IACH,CAAC;IACD,KAAKisD,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAgCAw4I,WAAWz8I,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAK9B,IAAIjE,KAAA,IAAS,MAAwC;IACrDY,MAAA,CAAOI,IAAA,CAAKhB,KAAK,EAAER,OAAA,CAAQI,IAAA,IAAQ;MAGjC,MAAM+9E,OAAA,GAAU,KAAKw6D,QAAA,CAASv4I,IAAI;MAClC,IAAI+9E,OAAA,EAAS;QACXA,OAAA,CAAQ8+D,UAAA;QAAqEz8I,KAAA,CAAMJ,IAAI,GAAG;UACxFg6I,QAAA,EAAU;UACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;QACrB,CAAC;MACH;IACF,CAAC;IACD,KAAKisD,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA0DAsnI,MAAMvrI,KAAA,GAAQ,CAAC,GAAGiE,OAAA,GAAU,CAAC,GAAG;IAC9B,KAAKq0I,aAAA,CAAc,CAAC36D,OAAA,EAAS/9E,IAAA,KAAS;MACpC+9E,OAAA,CAAQ4tD,KAAA,CAAMvrI,KAAA,GAAQA,KAAA,CAAMJ,IAAI,IAAI,MAAM;QACxCg6I,QAAA,EAAU;QACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;MACrB,CAAC;IACH,CAAC;IACD,KAAK0rD,eAAA,CAAgBj2I,OAAO;IAC5B,KAAK81I,cAAA,CAAe91I,OAAO;IAC3B,KAAKw2I,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA02I,YAAA,EAAc;IACZ,OAAO,KAAK+B,eAAA,CAAgB,CAAC,GAAG,CAACC,GAAA,EAAKh/D,OAAA,EAAS/9E,IAAA,KAAS;MACtD+8I,GAAA,CAAI/8I,IAAI,IAAI+9E,OAAA,CAAQg9D,WAAA,CAAY;MAChC,OAAOgC,GAAA;IACT,CAAC;EACH;EAAA;EAEAC,qBAAA,EAAuB;IACrB,IAAIC,cAAA,GAAiB,KAAKH,eAAA,CAAgB,OAAO,CAACI,OAAA,EAASnlH,KAAA,KAAU;MACnE,OAAOA,KAAA,CAAMilH,oBAAA,CAAqB,IAAI,OAAOE,OAAA;IAC/C,CAAC;IACD,IAAID,cAAA,EAAgB,KAAKpC,sBAAA,CAAuB;MAC9Cb,QAAA,EAAU;IACZ,CAAC;IACD,OAAOiD,cAAA;EACT;EAAA;EAEAvE,cAAcyE,EAAA,EAAI;IAChBn8I,MAAA,CAAOI,IAAA,CAAK,KAAKm3I,QAAQ,EAAE34I,OAAA,CAAQM,GAAA,IAAO;MAIxC,MAAM69E,OAAA,GAAU,KAAKw6D,QAAA,CAASr4I,GAAG;MACjC69E,OAAA,IAAWo/D,EAAA,CAAGp/D,OAAA,EAAS79E,GAAG;IAC5B,CAAC;EACH;EAAA;EAEAq8I,eAAA,EAAiB;IACf,KAAK7D,aAAA,CAAc36D,OAAA,IAAW;MAC5BA,OAAA,CAAQ+8D,SAAA,CAAU,IAAI;MACtB/8D,OAAA,CAAQm+D,2BAAA,CAA4B,KAAKnD,mBAAmB;IAC9D,CAAC;EACH;EAAA;EAEA2B,aAAA,EAAe;IACb,KAAKt6I,KAAA,GAAQ,KAAKg9I,YAAA,CAAa;EACjC;EAAA;EAEArB,aAAasB,SAAA,EAAW;IACtB,WAAW,CAACT,WAAA,EAAa7+D,OAAO,KAAK/8E,MAAA,CAAOC,OAAA,CAAQ,KAAKs3I,QAAQ,GAAG;MAClE,IAAI,KAAK9pE,QAAA,CAASmuE,WAAW,KAAKS,SAAA,CAAUt/D,OAAO,GAAG;QACpD,OAAO;MACT;IACF;IACA,OAAO;EACT;EAAA;EAEAq/D,aAAA,EAAe;IACb,IAAIL,GAAA,GAAM,CAAC;IACX,OAAO,KAAKD,eAAA,CAAgBC,GAAA,EAAK,CAACA,MAAKh/D,OAAA,EAAS/9E,IAAA,KAAS;MACvD,IAAI+9E,OAAA,CAAQ/Y,OAAA,IAAW,KAAKlI,QAAA,EAAU;QACpCigF,KAAI/8I,IAAI,IAAI+9E,OAAA,CAAQ39E,KAAA;MACtB;MACA,OAAO28I;IACT,CAAC;EACH;EAAA;EAEAD,gBAAgBQ,SAAA,EAAW56I,EAAA,EAAI;IAC7B,IAAIiC,GAAA,GAAM24I,SAAA;IACV,KAAK5E,aAAA,CAAc,CAAC36D,OAAA,EAAS/9E,IAAA,KAAS;MACpC2E,GAAA,GAAMjC,EAAA,CAAGiC,GAAA,EAAKo5E,OAAA,EAAS/9E,IAAI;IAC7B,CAAC;IACD,OAAO2E,GAAA;EACT;EAAA;EAEA42I,qBAAA,EAAuB;IACrB,WAAWqB,WAAA,IAAe57I,MAAA,CAAOI,IAAA,CAAK,KAAKm3I,QAAQ,GAAG;MACpD,IAAI,KAAKA,QAAA,CAASqE,WAAW,EAAE53E,OAAA,EAAS;QACtC,OAAO;MACT;IACF;IACA,OAAOhkE,MAAA,CAAOI,IAAA,CAAK,KAAKm3I,QAAQ,EAAEp3I,MAAA,GAAS,KAAK,KAAK27D,QAAA;EACvD;EAAA;EAEA8+E,MAAM57I,IAAA,EAAM;IACV,OAAO,KAAKu4I,QAAA,CAAStoH,cAAA,CAAejwB,IAAI,IAAI,KAAKu4I,QAAA,CAASv4I,IAAI,IAAI;EACpE;AACF;AAKA,SAASs8I,0BAA0B/D,QAAA,EAAU;EAC3C,MAAMgF,WAAA,GAAcv8I,MAAA,CAAOI,IAAA,CAAKm3I,QAAQ,EAAEl2I,MAAA,CAAOnC,GAAA,IAAOA,GAAA,CAAIupI,QAAA,CAAS,GAAG,CAAC;EACzE,IAAI8T,WAAA,CAAYp8I,MAAA,GAAS,GAAG;IAE1B2uB,OAAA,CAAQhf,IAAA,CAAK,qEAAqEysI,WAAA,CAAYx4I,IAAA,CAAK,GAAG,CAAC,GAAG;EAC5G;AACF;AA4BA,IAAMy4I,UAAA,GAAN,cAAyBnB,SAAA,CAAU,EAAC;AAepC,IAAMoB,uBAAA,GAA0B,IAAIjuI,cAAA,CAAe,wBAAwB;EACzEkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAMyzI;AACjB,CAAC;AAID,IAAMA,uBAAA,GAA0B;AAChC,SAASC,YAAY39I,IAAA,EAAMwlB,MAAA,EAAQ;EACjC,OAAO,CAAC,GAAGA,MAAA,CAAOmO,IAAA,EAAM3zB,IAAI;AAC9B;AAQA,SAAS49I,aAAa7/D,OAAA,EAASrmB,GAAA,EAAKmmF,oBAAA,GAAuBH,uBAAA,EAAyB;EAClF,IAAI,OAAO58I,SAAA,KAAc,eAAeA,SAAA,EAAW;IACjD,IAAI,CAACi9E,OAAA,EAAS+/D,WAAA,CAAYpmF,GAAA,EAAK,0BAA0B;IACzD,IAAI,CAACA,GAAA,CAAIu9E,aAAA,EAAe8I,+BAAA,CAAgCrmF,GAAG;EAC7D;EACAsmF,eAAA,CAAgBjgE,OAAA,EAASrmB,GAAG;EAC5BA,GAAA,CAAIu9E,aAAA,CAAcjG,UAAA,CAAWjxD,OAAA,CAAQ39E,KAAK;EAI1C,IAAI29E,OAAA,CAAQjhB,QAAA,IAAY+gF,oBAAA,KAAyB,UAAU;IACzDnmF,GAAA,CAAIu9E,aAAA,CAAc5G,gBAAA,GAAmBtwD,OAAA,CAAQjhB,QAAQ;EACvD;EACAmhF,uBAAA,CAAwBlgE,OAAA,EAASrmB,GAAG;EACpCwmF,wBAAA,CAAyBngE,OAAA,EAASrmB,GAAG;EACrCymF,iBAAA,CAAkBpgE,OAAA,EAASrmB,GAAG;EAC9B0mF,0BAAA,CAA2BrgE,OAAA,EAASrmB,GAAG;AACzC;AAYA,SAAS2mF,eAAetgE,OAAA,EAASrmB,GAAA,EAAK4mF,+BAAA,GAAkC,MAAM;EAC5E,MAAM1yI,QAAO2yI,CAAA,KAAM;IACjB,IAAID,+BAAA,KAAoC,OAAOx9I,SAAA,KAAc,eAAeA,SAAA,GAAY;MACtF09I,eAAA,CAAgB9mF,GAAG;IACrB;EACF;EAMA,IAAIA,GAAA,CAAIu9E,aAAA,EAAe;IACrBv9E,GAAA,CAAIu9E,aAAA,CAAc7G,gBAAA,CAAiBxiI,KAAI;IACvC8rD,GAAA,CAAIu9E,aAAA,CAAc9G,iBAAA,CAAkBviI,KAAI;EAC1C;EACA6yI,iBAAA,CAAkB1gE,OAAA,EAASrmB,GAAG;EAC9B,IAAIqmB,OAAA,EAAS;IACXrmB,GAAA,CAAIg9E,yBAAA,CAA0B;IAC9B32D,OAAA,CAAQm+D,2BAAA,CAA4B,MAAM,CAAC,CAAC;EAC9C;AACF;AACA,SAASwC,0BAA0B7M,UAAA,EAAY5D,QAAA,EAAU;EACvD4D,UAAA,CAAWjyI,OAAA,CAAQ6yI,SAAA,IAAa;IAC9B,IAAIA,SAAA,CAAUiM,yBAAA,EAA2BjM,SAAA,CAAUiM,yBAAA,CAA0BzQ,QAAQ;EACvF,CAAC;AACH;AAQA,SAASmQ,2BAA2BrgE,OAAA,EAASrmB,GAAA,EAAK;EAChD,IAAIA,GAAA,CAAIu9E,aAAA,CAAc5G,gBAAA,EAAkB;IACtC,MAAMsQ,gBAAA,GAAmBh2E,UAAA,IAAc;MACrCjR,GAAA,CAAIu9E,aAAA,CAAc5G,gBAAA,CAAiB1lE,UAAU;IAC/C;IACAoV,OAAA,CAAQ6gE,wBAAA,CAAyBD,gBAAgB;IAGjDjnF,GAAA,CAAI+8E,kBAAA,CAAmB,MAAM;MAC3B12D,OAAA,CAAQ8gE,2BAAA,CAA4BF,gBAAgB;IACtD,CAAC;EACH;AACF;AAQA,SAASX,gBAAgBjgE,OAAA,EAASrmB,GAAA,EAAK;EACrC,MAAMm6E,UAAA,GAAasB,oBAAA,CAAqBp1D,OAAO;EAC/C,IAAIrmB,GAAA,CAAI+6E,SAAA,KAAc,MAAM;IAC1B10D,OAAA,CAAQw7D,aAAA,CAAcvG,eAAA,CAAgBnB,UAAA,EAAYn6E,GAAA,CAAI+6E,SAAS,CAAC;EAClE,WAAW,OAAOZ,UAAA,KAAe,YAAY;IAQ3C9zD,OAAA,CAAQw7D,aAAA,CAAc,CAAC1H,UAAU,CAAC;EACpC;EACA,MAAMsG,eAAA,GAAkB9E,yBAAA,CAA0Bt1D,OAAO;EACzD,IAAIrmB,GAAA,CAAI88E,cAAA,KAAmB,MAAM;IAC/Bz2D,OAAA,CAAQy7D,kBAAA,CAAmBxG,eAAA,CAAgBmF,eAAA,EAAiBzgF,GAAA,CAAI88E,cAAc,CAAC;EACjF,WAAW,OAAO2D,eAAA,KAAoB,YAAY;IAChDp6D,OAAA,CAAQy7D,kBAAA,CAAmB,CAACrB,eAAe,CAAC;EAC9C;EAEA,MAAM2G,iBAAA,GAAoBA,CAAA,KAAM/gE,OAAA,CAAQ88D,sBAAA,CAAuB;EAC/D6D,yBAAA,CAA0BhnF,GAAA,CAAI07E,cAAA,EAAgB0L,iBAAiB;EAC/DJ,yBAAA,CAA0BhnF,GAAA,CAAI47E,mBAAA,EAAqBwL,iBAAiB;AACtE;AAUA,SAASL,kBAAkB1gE,OAAA,EAASrmB,GAAA,EAAK;EACvC,IAAIqnF,gBAAA,GAAmB;EACvB,IAAIhhE,OAAA,KAAY,MAAM;IACpB,IAAIrmB,GAAA,CAAI+6E,SAAA,KAAc,MAAM;MAC1B,MAAMZ,UAAA,GAAasB,oBAAA,CAAqBp1D,OAAO;MAC/C,IAAI18E,KAAA,CAAMkB,OAAA,CAAQsvI,UAAU,KAAKA,UAAA,CAAW1wI,MAAA,GAAS,GAAG;QAEtD,MAAM69I,iBAAA,GAAoBnN,UAAA,CAAWxvI,MAAA,CAAOowI,SAAA,IAAaA,SAAA,KAAc/6E,GAAA,CAAI+6E,SAAS;QACpF,IAAIuM,iBAAA,CAAkB79I,MAAA,KAAW0wI,UAAA,CAAW1wI,MAAA,EAAQ;UAClD49I,gBAAA,GAAmB;UACnBhhE,OAAA,CAAQw7D,aAAA,CAAcyF,iBAAiB;QACzC;MACF;IACF;IACA,IAAItnF,GAAA,CAAI88E,cAAA,KAAmB,MAAM;MAC/B,MAAM2D,eAAA,GAAkB9E,yBAAA,CAA0Bt1D,OAAO;MACzD,IAAI18E,KAAA,CAAMkB,OAAA,CAAQ41I,eAAe,KAAKA,eAAA,CAAgBh3I,MAAA,GAAS,GAAG;QAEhE,MAAM89I,sBAAA,GAAyB9G,eAAA,CAAgB91I,MAAA,CAAOmyI,cAAA,IAAkBA,cAAA,KAAmB98E,GAAA,CAAI88E,cAAc;QAC7G,IAAIyK,sBAAA,CAAuB99I,MAAA,KAAWg3I,eAAA,CAAgBh3I,MAAA,EAAQ;UAC5D49I,gBAAA,GAAmB;UACnBhhE,OAAA,CAAQy7D,kBAAA,CAAmByF,sBAAsB;QACnD;MACF;IACF;EACF;EAEA,MAAMrzI,QAAO2yI,CAAA,KAAM,CAAC;EACpBG,yBAAA,CAA0BhnF,GAAA,CAAI07E,cAAA,EAAgBxnI,KAAI;EAClD8yI,yBAAA,CAA0BhnF,GAAA,CAAI47E,mBAAA,EAAqB1nI,KAAI;EACvD,OAAOmzI,gBAAA;AACT;AACA,SAASd,wBAAwBlgE,OAAA,EAASrmB,GAAA,EAAK;EAC7CA,GAAA,CAAIu9E,aAAA,CAAc7G,gBAAA,CAAiBlG,QAAA,IAAY;IAC7CnqD,OAAA,CAAQmhE,aAAA,GAAgBhX,QAAA;IACxBnqD,OAAA,CAAQohE,cAAA,GAAiB;IACzBphE,OAAA,CAAQ66D,aAAA,GAAgB;IACxB,IAAI76D,OAAA,CAAQs7D,QAAA,KAAa,UAAU+F,aAAA,CAAcrhE,OAAA,EAASrmB,GAAG;EAC/D,CAAC;AACH;AACA,SAASymF,kBAAkBpgE,OAAA,EAASrmB,GAAA,EAAK;EACvCA,GAAA,CAAIu9E,aAAA,CAAc9G,iBAAA,CAAkB,MAAM;IACxCpwD,OAAA,CAAQ+6D,eAAA,GAAkB;IAC1B,IAAI/6D,OAAA,CAAQs7D,QAAA,KAAa,UAAUt7D,OAAA,CAAQohE,cAAA,EAAgBC,aAAA,CAAcrhE,OAAA,EAASrmB,GAAG;IACrF,IAAIqmB,OAAA,CAAQs7D,QAAA,KAAa,UAAUt7D,OAAA,CAAQ+7D,aAAA,CAAc;EAC3D,CAAC;AACH;AACA,SAASsF,cAAcrhE,OAAA,EAASrmB,GAAA,EAAK;EACnC,IAAIqmB,OAAA,CAAQ66D,aAAA,EAAe76D,OAAA,CAAQq8D,WAAA,CAAY;EAC/Cr8D,OAAA,CAAQ52D,QAAA,CAAS42D,OAAA,CAAQmhE,aAAA,EAAe;IACtCG,qBAAA,EAAuB;EACzB,CAAC;EACD3nF,GAAA,CAAI4nF,iBAAA,CAAkBvhE,OAAA,CAAQmhE,aAAa;EAC3CnhE,OAAA,CAAQohE,cAAA,GAAiB;AAC3B;AACA,SAASjB,yBAAyBngE,OAAA,EAASrmB,GAAA,EAAK;EAC9C,MAAMu2E,QAAA,GAAWA,CAAC/F,QAAA,EAAUqX,cAAA,KAAmB;IAE7C7nF,GAAA,CAAIu9E,aAAA,CAAcjG,UAAA,CAAW9G,QAAQ;IAErC,IAAIqX,cAAA,EAAgB7nF,GAAA,CAAI4nF,iBAAA,CAAkBpX,QAAQ;EACpD;EACAnqD,OAAA,CAAQqwD,gBAAA,CAAiBH,QAAQ;EAGjCv2E,GAAA,CAAI+8E,kBAAA,CAAmB,MAAM;IAC3B12D,OAAA,CAAQyhE,mBAAA,CAAoBvR,QAAQ;EACtC,CAAC;AACH;AAQA,SAASwR,mBAAmB1hE,OAAA,EAASrmB,GAAA,EAAK;EACxC,IAAIqmB,OAAA,IAAW,SAAS,OAAOj9E,SAAA,KAAc,eAAeA,SAAA,GAAYg9I,WAAA,CAAYpmF,GAAA,EAAK,0BAA0B;EACnHsmF,eAAA,CAAgBjgE,OAAA,EAASrmB,GAAG;AAC9B;AAQA,SAASgoF,qBAAqB3hE,OAAA,EAASrmB,GAAA,EAAK;EAC1C,OAAO+mF,iBAAA,CAAkB1gE,OAAA,EAASrmB,GAAG;AACvC;AACA,SAAS8mF,gBAAgB9mF,GAAA,EAAK;EAC5B,OAAOomF,WAAA,CAAYpmF,GAAA,EAAK,wEAAwE;AAClG;AACA,SAASomF,YAAYpmF,GAAA,EAAKpvD,OAAA,EAAS;EACjC,MAAMq3I,UAAA,GAAaC,wBAAA,CAAyBloF,GAAG;EAC/C,MAAM,IAAI/0D,KAAA,CAAM,GAAG2F,OAAO,IAAIq3I,UAAU,EAAE;AAC5C;AACA,SAASC,yBAAyBloF,GAAA,EAAK;EACrC,MAAM/jC,IAAA,GAAO+jC,GAAA,CAAI/jC,IAAA;EACjB,IAAIA,IAAA,IAAQA,IAAA,CAAKxyB,MAAA,GAAS,GAAG,OAAO,UAAUwyB,IAAA,CAAK5uB,IAAA,CAAK,MAAM,CAAC;EAC/D,IAAI4uB,IAAA,GAAO,CAAC,GAAG,OAAO,UAAUA,IAAI;EACpC,OAAO;AACT;AACA,SAASoqH,gCAAgCrmF,GAAA,EAAK;EAC5C,MAAMmoF,GAAA,GAAMD,wBAAA,CAAyBloF,GAAG;EACxC,MAAM,IAAI/iD,YAAA,CAAc,OAAwD,sCAAsCkrI,GAAG,GAAG;AAC9H;AACA,SAASC,gCAAgCpoF,GAAA,EAAK;EAC5C,MAAMmoF,GAAA,GAAMD,wBAAA,CAAyBloF,GAAG;EACxC,MAAM,IAAI/iD,YAAA,CAAc,MAA4D,qEAAqEkrI,GAAG,2FAAgG;AAC9P;AACA,SAASE,kBAAkB54G,OAAA,EAAS64G,SAAA,EAAW;EAC7C,IAAI,CAAC74G,OAAA,CAAQlX,cAAA,CAAe,OAAO,GAAG,OAAO;EAC7C,MAAMm1C,MAAA,GAASj+B,OAAA,CAAQ,OAAO;EAC9B,IAAIi+B,MAAA,CAAO66E,aAAA,CAAc,GAAG,OAAO;EACnC,OAAO,CAACj/I,MAAA,CAAOk/I,EAAA,CAAGF,SAAA,EAAW56E,MAAA,CAAOg8C,YAAY;AAClD;AACA,SAAS++B,kBAAkBlL,aAAA,EAAe;EAGxC,OAAOj0I,MAAA,CAAOo/I,cAAA,CAAenL,aAAA,CAAc51I,WAAW,MAAMsvI,2BAAA;AAC9D;AACA,SAAS0R,oBAAoBr8D,IAAA,EAAMs8D,UAAA,EAAY;EAC7Ct8D,IAAA,CAAKg5D,oBAAA,CAAqB;EAC1BsD,UAAA,CAAW1gJ,OAAA,CAAQ83D,GAAA,IAAO;IACxB,MAAMqmB,OAAA,GAAUrmB,GAAA,CAAIqmB,OAAA;IACpB,IAAIA,OAAA,CAAQs7D,QAAA,KAAa,YAAYt7D,OAAA,CAAQohE,cAAA,EAAgB;MAC3DznF,GAAA,CAAI4nF,iBAAA,CAAkBvhE,OAAA,CAAQmhE,aAAa;MAC3CnhE,OAAA,CAAQohE,cAAA,GAAiB;IAC3B;EACF,CAAC;AACH;AAEA,SAASoB,oBAAoB7oF,GAAA,EAAK8oF,cAAA,EAAgB;EAChD,IAAI,CAACA,cAAA,EAAgB,OAAO;EAC5B,IAAI,CAACn/I,KAAA,CAAMkB,OAAA,CAAQi+I,cAAc,MAAM,OAAO1/I,SAAA,KAAc,eAAeA,SAAA,GAAYg/I,+BAAA,CAAgCpoF,GAAG;EAC1H,IAAI+oF,eAAA,GAAkB;EACtB,IAAIC,eAAA,GAAkB;EACtB,IAAIC,cAAA,GAAiB;EACrBH,cAAA,CAAe5gJ,OAAA,CAAQkE,CAAA,IAAK;IAC1B,IAAIA,CAAA,CAAEzE,WAAA,KAAgBmwI,oBAAA,EAAsB;MAC1CiR,eAAA,GAAkB38I,CAAA;IACpB,WAAWq8I,iBAAA,CAAkBr8I,CAAC,GAAG;MAC/B,IAAI48I,eAAA,KAAoB,OAAO5/I,SAAA,KAAc,eAAeA,SAAA,GAAYg9I,WAAA,CAAYpmF,GAAA,EAAK,iEAAiE;MAC1JgpF,eAAA,GAAkB58I,CAAA;IACpB,OAAO;MACL,IAAI68I,cAAA,KAAmB,OAAO7/I,SAAA,KAAc,eAAeA,SAAA,GAAYg9I,WAAA,CAAYpmF,GAAA,EAAK,+DAA+D;MACvJipF,cAAA,GAAiB78I,CAAA;IACnB;EACF,CAAC;EACD,IAAI68I,cAAA,EAAgB,OAAOA,cAAA;EAC3B,IAAID,eAAA,EAAiB,OAAOA,eAAA;EAC5B,IAAID,eAAA,EAAiB,OAAOA,eAAA;EAC5B,IAAI,OAAO3/I,SAAA,KAAc,eAAeA,SAAA,EAAW;IACjDg9I,WAAA,CAAYpmF,GAAA,EAAK,+CAA+C;EAClE;EACA,OAAO;AACT;AACA,SAASkpF,iBAAiBj9I,IAAA,EAAM6X,EAAA,EAAI;EAClC,MAAM1b,KAAA,GAAQ6D,IAAA,CAAK5D,OAAA,CAAQyb,EAAE;EAC7B,IAAI1b,KAAA,GAAQ,IAAI6D,IAAA,CAAKsB,MAAA,CAAOnF,KAAA,EAAO,CAAC;AACtC;AAEA,SAAS+gJ,gBAAgB7gJ,IAAA,EAAMkH,IAAA,EAAM4gC,QAAA,EAAUg5G,aAAA,EAAe;EAC5D,IAAIA,aAAA,KAAkB,SAAS;EAC/B,KAAKA,aAAA,KAAkB,QAAQA,aAAA,KAAkB,WAAW,CAAC55I,IAAA,CAAK65I,uBAAA,IAA2BD,aAAA,KAAkB,YAAY,CAACh5G,QAAA,CAASk5G,mBAAA,EAAqB;IACxJlxH,OAAA,CAAQhf,IAAA,CAAKqmI,cAAA,CAAen3I,IAAI,CAAC;IACjCkH,IAAA,CAAK65I,uBAAA,GAA0B;IAC/Bj5G,QAAA,CAASk5G,mBAAA,GAAsB;EACjC;AACF;AACA,IAAMC,uBAAA,GAA0B;EAC9BnoI,OAAA,EAASg8H,gBAAA;EACT/7H,WAAA,EAAaoY,UAAA,CAAW,MAAM+vH,MAAM;AACtC;AACA,IAAMC,iBAAA,IAAqB,MAAMhvI,OAAA,CAAQC,OAAA,CAAQ,GAAG;AAiEpD,IAAMgvI,OAAA,GAAN,MAAMA,OAAA,SAAetM,gBAAA,CAAiB;EACpCz1I,YAAYwyI,UAAA,EAAYsG,eAAA,EAAiB0F,oBAAA,EAAsB;IAC7D,MAAM;IACN,KAAKA,oBAAA,GAAuBA,oBAAA;IAK5B,KAAK35D,SAAA,GAAY;IACjB,KAAKm9D,WAAA,GAAc,mBAAIpwI,GAAA,CAAI;IAK3B,KAAKqwI,QAAA,GAAW,IAAIl7G,YAAA,CAAa;IACjC,KAAK49C,IAAA,GAAO,IAAIq4D,SAAA,CAAU,CAAC,GAAGvJ,iBAAA,CAAkBjB,UAAU,GAAGkB,sBAAA,CAAuBoF,eAAe,CAAC;EACtG;EAAA;EAEA3gE,gBAAA,EAAkB;IAChB,KAAK2kE,kBAAA,CAAmB;EAC1B;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIpH,cAAA,EAAgB;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIh3D,QAAA,EAAU;IACZ,OAAO,KAAKiG,IAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIrwD,KAAA,EAAO;IACT,OAAO,EAAC;EACV;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI4kH,SAAA,EAAW;IACb,OAAO,KAAKv0D,IAAA,CAAKu0D,QAAA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAkE,WAAW/kF,GAAA,EAAK;IACdypF,iBAAA,CAAkBx1I,IAAA,CAAK,MAAM;MAC3B,MAAMmqB,SAAA,GAAY,KAAKyrH,cAAA,CAAe7pF,GAAA,CAAI/jC,IAAI;MAC9C+jC,GAAA,CAAIqmB,OAAA,GAAUjoD,SAAA,CAAU0mH,eAAA,CAAgB9kF,GAAA,CAAI13D,IAAA,EAAM03D,GAAA,CAAIqmB,OAAO;MAC7D6/D,YAAA,CAAalmF,GAAA,CAAIqmB,OAAA,EAASrmB,GAAA,EAAK,KAAKmmF,oBAAoB;MACxDnmF,GAAA,CAAIqmB,OAAA,CAAQ88D,sBAAA,CAAuB;QACjCjsD,SAAA,EAAW;MACb,CAAC;MACD,KAAKyyD,WAAA,CAAYlxI,GAAA,CAAIunD,GAAG;IAC1B,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA8pF,WAAW9pF,GAAA,EAAK;IACd,OAAO,KAAKssB,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+oH,cAAchlF,GAAA,EAAK;IACjBypF,iBAAA,CAAkBx1I,IAAA,CAAK,MAAM;MAC3B,MAAMmqB,SAAA,GAAY,KAAKyrH,cAAA,CAAe7pF,GAAA,CAAI/jC,IAAI;MAC9C,IAAImC,SAAA,EAAW;QACbA,SAAA,CAAU4mH,aAAA,CAAchlF,GAAA,CAAI13D,IAAI;MAClC;MACA,KAAKqhJ,WAAA,CAAY1/I,MAAA,CAAO+1D,GAAG;IAC7B,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+pF,aAAa/pF,GAAA,EAAK;IAChBypF,iBAAA,CAAkBx1I,IAAA,CAAK,MAAM;MAC3B,MAAMmqB,SAAA,GAAY,KAAKyrH,cAAA,CAAe7pF,GAAA,CAAI/jC,IAAI;MAC9C,MAAM4K,SAAQ,IAAI89G,SAAA,CAAU,CAAC,CAAC;MAC9BoD,kBAAA,CAAmBlhH,QAAOm5B,GAAG;MAC7B5hC,SAAA,CAAU0mH,eAAA,CAAgB9kF,GAAA,CAAI13D,IAAA,EAAMu+B,MAAK;MACzCA,OAAMs8G,sBAAA,CAAuB;QAC3BjsD,SAAA,EAAW;MACb,CAAC;IACH,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA8yD,gBAAgBhqF,GAAA,EAAK;IACnBypF,iBAAA,CAAkBx1I,IAAA,CAAK,MAAM;MAC3B,MAAMmqB,SAAA,GAAY,KAAKyrH,cAAA,CAAe7pF,GAAA,CAAI/jC,IAAI;MAC9C,IAAImC,SAAA,EAAW;QACbA,SAAA,CAAU4mH,aAAA,CAAchlF,GAAA,CAAI13D,IAAI;MAClC;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA2hJ,aAAajqF,GAAA,EAAK;IAChB,OAAO,KAAKssB,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAiuH,YAAYlqF,GAAA,EAAKt3D,KAAA,EAAO;IACtB+gJ,iBAAA,CAAkBx1I,IAAA,CAAK,MAAM;MAC3B,MAAM2vI,IAAA,GAAO,KAAKt3D,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;MACnC2nH,IAAA,CAAKn0H,QAAA,CAAS/mB,KAAK;IACrB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+mB,SAAS/mB,KAAA,EAAO;IACd,KAAK29E,OAAA,CAAQ52D,QAAA,CAAS/mB,KAAK;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAyhJ,SAAS91F,MAAA,EAAQ;IACf,KAAKm4B,SAAA,GAAY;IACjBm8D,mBAAA,CAAoB,KAAKr8D,IAAA,EAAM,KAAKq9D,WAAW;IAC/C,KAAKC,QAAA,CAASn5G,IAAA,CAAK4jB,MAAM;IAGzB,OAAOA,MAAA,EAAQzvC,MAAA,EAAQhX,MAAA,KAAW;EACpC;EAAA;AAAA;AAAA;AAAA;EAKAw8I,QAAA,EAAU;IACR,KAAKC,SAAA,CAAU;EACjB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAA,UAAU3hJ,KAAA,GAAQ,QAAW;IAC3B,KAAK4jF,IAAA,CAAK2nD,KAAA,CAAMvrI,KAAK;IACrB,KAAK8jF,SAAA,GAAY;EACnB;EACAi4D,mBAAA,EAAqB;IACnB,IAAI,KAAK93I,OAAA,IAAW,KAAKA,OAAA,CAAQg1I,QAAA,IAAY,MAAM;MACjD,KAAKr1D,IAAA,CAAKs1D,SAAA,GAAY,KAAKj1I,OAAA,CAAQg1I,QAAA;IACrC;EACF;EACAkI,eAAe5tH,IAAA,EAAM;IACnBA,IAAA,CAAKlK,GAAA,CAAI;IACT,OAAOkK,IAAA,CAAKxyB,MAAA,GAAS,KAAK6iF,IAAA,CAAKxjF,GAAA,CAAImzB,IAAI,IAAI,KAAKqwD,IAAA;EAClD;AA6BF;AA3BIo9D,OAAA,CAAKx3I,IAAA,GAAO,SAASo4I,eAAe/9I,CAAA,EAAG;EACrC,OAAO,KAAKA,CAAA,IAAKm9I,OAAA,EAAW/1F,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,GAAMtlF,iBAAA,CAAkBoyF,uBAAA,EAAyB,CAAC,CAAC;AACnK;AAGA2D,OAAA,CAAKv4G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMk6I,OAAA;EACNr4G,SAAA,EAAW,CAAC,CAAC,QAAQ,GAAG,YAAY,IAAI,GAAG,aAAa,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;EAC5F4iB,YAAA,EAAc,SAASs2F,oBAAoBz1G,EAAA,EAAIlb,GAAA,EAAK;IAClD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAASq2F,iCAAiCn2F,MAAA,EAAQ;QACxE,OAAOz6B,GAAA,CAAIuwH,QAAA,CAAS91F,MAAM;MAC5B,CAAC,EAAE,SAAS,SAASo2F,gCAAA,EAAkC;QACrD,OAAO7wH,GAAA,CAAIwwH,OAAA,CAAQ;MACrB,CAAC;IACH;EACF;EACA94G,MAAA,EAAQ;IACN3kC,OAAA,EAAS,CAAI4nD,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,SAAS;EAC5D;EACAtqC,OAAA,EAAS;IACPq4G,QAAA,EAAU;EACZ;EACAp4G,QAAA,EAAU,CAAC,QAAQ;EACnBzwB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC6mE,uBAAuB,CAAC,GAAMtsD,0BAA0B;AAC5F,CAAC;AA5NL,IAAMusD,MAAA,GAANE,OAAA;AAAA,CA+NC,MAAM;EACL,CAAC,OAAOtgJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+2I,MAAA,EAAQ,CAAC;IAC/Eh6I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC4oI,uBAAuB;MACnC1iI,IAAA,EAAM;QACJ,YAAY;QACZ,WAAW;MACb;MACA0qB,OAAA,EAAS,CAAC,UAAU;MACpBC,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACThiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,GAAG;IACDzpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4pI,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFp5I,OAAA,EAAS,CAAC;MACR6C,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AACH,SAASuuI,eAAez+I,IAAA,EAAM6X,EAAA,EAAI;EAChC,MAAM1b,KAAA,GAAQ6D,IAAA,CAAK5D,OAAA,CAAQyb,EAAE;EAC7B,IAAI1b,KAAA,GAAQ,IAAI6D,IAAA,CAAKsB,MAAA,CAAOnF,KAAA,EAAO,CAAC;AACtC;AACA,SAASuiJ,mBAAmBC,SAAA,EAAW;EACrC,OAAO,OAAOA,SAAA,KAAc,YAAYA,SAAA,KAAc,QAAQthJ,MAAA,CAAOI,IAAA,CAAKkhJ,SAAS,EAAEnhJ,MAAA,KAAW,KAAK,WAAWmhJ,SAAA,IAAa,cAAcA,SAAA;AAC7I;AACA,IAAMC,WAAA,GAAc,MAAMA,qBAAoB5J,eAAA,CAAgB;EAC5Dt5I,YAEAijJ,SAAA,GAAY,MAAMvK,eAAA,EAAiBvD,cAAA,EAAgB;IACjD,MAAMsD,cAAA,CAAeC,eAAe,GAAGG,mBAAA,CAAoB1D,cAAA,EAAgBuD,eAAe,CAAC;IAE3F,KAAK3yI,YAAA,GAAe;IAEpB,KAAKo9I,SAAA,GAAY,EAAC;IAElB,KAAKrD,cAAA,GAAiB;IACtB,KAAKsD,eAAA,CAAgBH,SAAS;IAC9B,KAAKnG,kBAAA,CAAmBpE,eAAe;IACvC,KAAK8D,gBAAA,CAAiB;IACtB,KAAKhB,sBAAA,CAAuB;MAC1Bb,QAAA,EAAU;MAAA;MAAA;MAAA;MAAA;MAKVprD,SAAA,EAAW,CAAC,CAAC,KAAK4lD;IACpB,CAAC;IACD,IAAIwD,YAAA,CAAaD,eAAe,MAAMA,eAAA,CAAgB2K,WAAA,IAAe3K,eAAA,CAAgB4K,qBAAA,GAAwB;MAC3G,IAAIN,kBAAA,CAAmBC,SAAS,GAAG;QACjC,KAAKl9I,YAAA,GAAek9I,SAAA,CAAUliJ,KAAA;MAChC,OAAO;QACL,KAAKgF,YAAA,GAAek9I,SAAA;MACtB;IACF;EACF;EACAn7H,SAAS/mB,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAC5B,KAAKjE,KAAA,GAAQ,KAAK8+I,aAAA,GAAgB9+I,KAAA;IAClC,IAAI,KAAKoiJ,SAAA,CAAUrhJ,MAAA,IAAUkD,OAAA,CAAQg7I,qBAAA,KAA0B,OAAO;MACpE,KAAKmD,SAAA,CAAU5iJ,OAAA,CAAQg7I,QAAA,IAAYA,QAAA,CAAS,KAAKx6I,KAAA,EAAOiE,OAAA,CAAQu+I,qBAAA,KAA0B,KAAK,CAAC;IAClG;IACA,KAAK/H,sBAAA,CAAuBx2I,OAAO;EACrC;EACAw4I,WAAWz8I,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAC9B,KAAK8iB,QAAA,CAAS/mB,KAAA,EAAOiE,OAAO;EAC9B;EACAsnI,MAAM2W,SAAA,GAAY,KAAKl9I,YAAA,EAAcf,OAAA,GAAU,CAAC,GAAG;IACjD,KAAKo+I,eAAA,CAAgBH,SAAS;IAC9B,KAAKjI,cAAA,CAAeh2I,OAAO;IAC3B,KAAK61I,eAAA,CAAgB71I,OAAO;IAC5B,KAAK8iB,QAAA,CAAS,KAAK/mB,KAAA,EAAOiE,OAAO;IACjC,KAAK86I,cAAA,GAAiB;EACxB;EAAA;EAEAzE,aAAA,EAAe,CAAC;EAAA;EAEhBqB,aAAasB,SAAA,EAAW;IACtB,OAAO;EACT;EAAA;EAEA9B,qBAAA,EAAuB;IACrB,OAAO,KAAKz+E,QAAA;EACd;EACAsxE,iBAAiB1rI,EAAA,EAAI;IACnB,KAAK8/I,SAAA,CAAU/hJ,IAAA,CAAKiC,EAAE;EACxB;EAAA;EAEA88I,oBAAoB98I,EAAA,EAAI;IACtB0/I,cAAA,CAAe,KAAKI,SAAA,EAAW9/I,EAAE;EACnC;EACAk8I,yBAAyBl8I,EAAA,EAAI;IAC3B,KAAKs2I,iBAAA,CAAkBv4I,IAAA,CAAKiC,EAAE;EAChC;EAAA;EAEAm8I,4BAA4Bn8I,EAAA,EAAI;IAC9B0/I,cAAA,CAAe,KAAKpJ,iBAAA,EAAmBt2I,EAAE;EAC3C;EAAA;EAEAg2I,cAAcyE,EAAA,EAAI,CAAC;EAAA;EAEnBH,qBAAA,EAAuB;IACrB,IAAI,KAAK3D,QAAA,KAAa,UAAU;MAC9B,IAAI,KAAKT,aAAA,EAAe,KAAKwB,WAAA,CAAY;MACzC,IAAI,KAAKtB,eAAA,EAAiB,KAAKgB,aAAA,CAAc;MAC7C,IAAI,KAAKqF,cAAA,EAAgB;QACvB,KAAKh4H,QAAA,CAAS,KAAK+3H,aAAA,EAAe;UAChClF,QAAA,EAAU;UACVqF,qBAAA,EAAuB;QACzB,CAAC;QACD,OAAO;MACT;IACF;IACA,OAAO;EACT;EACAoD,gBAAgBH,SAAA,EAAW;IACzB,IAAID,kBAAA,CAAmBC,SAAS,GAAG;MACjC,KAAKliJ,KAAA,GAAQ,KAAK8+I,aAAA,GAAgBoD,SAAA,CAAUliJ,KAAA;MAC5CkiJ,SAAA,CAAUxlF,QAAA,GAAW,KAAKhjD,OAAA,CAAQ;QAChCkgI,QAAA,EAAU;QACVprD,SAAA,EAAW;MACb,CAAC,IAAI,KAAKn/D,MAAA,CAAO;QACfuqH,QAAA,EAAU;QACVprD,SAAA,EAAW;MACb,CAAC;IACH,OAAO;MACL,KAAKxuF,KAAA,GAAQ,KAAK8+I,aAAA,GAAgBoD,SAAA;IACpC;EACF;AACF;AAQA,IAAMO,aAAA,GAAgB9kE,OAAA,IAAWA,OAAA,YAAmBwkE,WAAA;AAQpD,IAAMO,2BAAA,GAAN,MAAMA,2BAAA,SAAmChO,gBAAA,CAAiB;EAAA;EAExDptG,SAAA,EAAW;IACT,KAAKq7G,gBAAA,CAAiB;IAEtB,KAAKhO,aAAA,CAAc0M,YAAA,CAAa,IAAI;EACtC;EAAA;EAEAtgI,YAAA,EAAc;IACZ,IAAI,KAAK4zH,aAAA,EAAe;MAEtB,KAAKA,aAAA,CAAc2M,eAAA,CAAgB,IAAI;IACzC;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI3jE,QAAA,EAAU;IACZ,OAAO,KAAKg3D,aAAA,CAAc4M,YAAA,CAAa,IAAI;EAC7C;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIhuH,KAAA,EAAO;IACT,OAAOgqH,WAAA,CAAY,KAAK39I,IAAA,IAAQ,OAAO,KAAKA,IAAA,GAAO,KAAKA,IAAA,CAAKyC,QAAA,CAAS,GAAG,KAAKurF,OAAO;EACvF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI+mD,cAAA,EAAgB;IAClB,OAAO,KAAK/mD,OAAA,GAAU,KAAKA,OAAA,CAAQ+mD,aAAA,GAAgB;EACrD;EAAA;EAEAgO,iBAAA,EAAmB,CAAC;AAetB;AAbID,2BAAA,CAAKl5I,IAAA,GAAuB,sBAAM;EAChC,IAAIo5I,uCAAA;EACJ,OAAO,SAASC,mCAAmCh/I,CAAA,EAAG;IACpD,QAAQ++I,uCAAA,KAA4CA,uCAAA,GAA6C1+F,qBAAA,CAAsBw+F,2BAA0B,IAAI7+I,CAAA,IAAK6+I,2BAA0B;EACtL;AACF,GAAG;AAGHA,2BAAA,CAAKj6G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM47I,2BAAA;EACNrqI,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAjDL,IAAMuuD,0BAAA,GAANJ,2BAAA;AAAA,CAoDC,MAAM;EACL,CAAC,OAAOhiJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+4I,0BAAA,EAA4B,CAAC;IACnGh8I,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAAS65G,qBAAA,EAAuB;EAC9B,OAAO,IAAIxuI,YAAA,CAAc,MAAmD;AAAA;AAAA;AAAA;AAAA,MAIxE4hI,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMtBI,2BAA2B,EAAE;AACnC;AACA,SAASyM,uBAAA,EAAyB;EAChC,OAAO,IAAIzuI,YAAA,CAAc,MAAwD;AAAA;AAAA;AAAA;AAAA;AAAA,MAK7E6hI,oBAAoB;AAAA;AAAA;AAAA;AAAA,MAIpBE,mBAAmB,EAAE;AAC3B;AACA,SAAS2M,qBAAA,EAAuB;EAC9B,OAAO,IAAI1uI,YAAA,CAAc,MAAkD;AAAA;AAAA;AAAA;AAAA,4FAIe;AAC5F;AACA,SAAS2uI,0BAAA,EAA4B;EACnC,OAAO,IAAI3uI,YAAA,CAAc,MAAwD;AAAA;AAAA;AAAA;AAAA;AAAA,MAK7E6hI,oBAAoB;AAAA;AAAA;AAAA;AAAA,MAIpBE,mBAAmB,EAAE;AAC3B;AACA,IAAM6M,kBAAA,GAAqB;EACzBzqI,OAAA,EAASg8H,gBAAA;EACT/7H,WAAA,EAAaoY,UAAA,CAAW,MAAMqyH,YAAY;AAC5C;AA2BA,IAAMC,aAAA,GAAN,MAAMA,aAAA,SAAqBP,0BAAA,CAA2B;EACpD7jJ,YAAYmmB,MAAA,EAAQqsH,UAAA,EAAYsG,eAAA,EAAiB;IAC/C,MAAM;IAMN,KAAKn4I,IAAA,GAAO;IACZ,KAAKguF,OAAA,GAAUxoE,MAAA;IACf,KAAK4uH,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;EAC1C;EAAA;EAEA4K,iBAAA,EAAmB;IACjB,IAAI,EAAE,KAAK/0D,OAAA,YAAmBy1D,aAAA,KAAiB,EAAE,KAAKz1D,OAAA,YAAmBkzD,MAAA,MAAY,OAAOpgJ,SAAA,KAAc,eAAeA,SAAA,GAAY;MACnI,MAAMwiJ,yBAAA,CAA0B;IAClC;EACF;AAiBF;AAfIG,aAAA,CAAK75I,IAAA,GAAO,SAAS85I,qBAAqBz/I,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKw/I,aAAA,EAAiBp4F,iBAAA,CAAkBypF,gBAAA,EAAkB,CAAC,GAAMzpF,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,CAAC;AAClK;AAGA8S,aAAA,CAAK56G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMu8I,aAAA;EACN16G,SAAA,EAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;EACpCC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,gBAAgB,MAAM;EACrD;EACArqC,QAAA,EAAU,CAAC,cAAc;EACzBzwB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACmpE,kBAAkB,CAAC,GAAM5uD,0BAA0B;AACvF,CAAC;AAjCL,IAAM6uD,YAAA,GAANC,aAAA;AAAA,CAoCC,MAAM;EACL,CAAC,OAAO3iJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq5I,YAAA,EAAc,CAAC;IACrFt8I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACkrI,kBAAkB;MAC9Br6G,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACThiC,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMy8I;IACR,GAAG;MACDz8I,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,CAAC,GAAG;IACF3wI,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,cAAc;IACvB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM+vI,oBAAA,GAAuB;EAC3B9qI,OAAA,EAASk8H,SAAA;EACTj8H,WAAA,EAAaoY,UAAA,CAAW,MAAM0yH,OAAO;AACvC;AAkBA,IAAM3xI,eAAA,IAAmB,MAAMC,OAAA,CAAQC,OAAA,CAAQ,GAAG;AAsFlD,IAAM0xI,QAAA,GAAN,MAAMA,QAAA,SAAgB9O,SAAA,CAAU;EAC9B31I,YAAYmmB,MAAA,EAAQqsH,UAAA,EAAYsG,eAAA,EAAiBqI,cAAA,EAAgBpyD,kBAAA,EAAoByvD,oBAAA,EAAsB;IACzG,MAAM;IACN,KAAKzvD,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKyvD,oBAAA,GAAuBA,oBAAA;IAC5B,KAAK9/D,OAAA,GAAU,IAAIwkE,WAAA,CAAY;IAE/B,KAAKwB,WAAA,GAAc;IAMnB,KAAK/jJ,IAAA,GAAO;IAMZ,KAAK8B,MAAA,GAAS,IAAIskC,YAAA,CAAa;IAC/B,KAAK4nD,OAAA,GAAUxoE,MAAA;IACf,KAAK4uH,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;IACxC,KAAKlD,aAAA,GAAgBsL,mBAAA,CAAoB,MAAMC,cAAc;EAC/D;EAAA;EAEAt5G,YAAYC,OAAA,EAAS;IACnB,KAAK68G,eAAA,CAAgB;IACrB,IAAI,CAAC,KAAKD,WAAA,IAAe,UAAU58G,OAAA,EAAS;MAC1C,IAAI,KAAK48G,WAAA,EAAa;QACpB,KAAKE,UAAA,CAAW;QAChB,IAAI,KAAKlP,aAAA,EAAe;UAKtB,MAAMmP,OAAA,GAAU/8G,OAAA,CAAQ,MAAM,EAAEE,aAAA;UAChC,KAAK0tG,aAAA,CAAc2H,aAAA,CAAc;YAC/B18I,IAAA,EAAMkkJ,OAAA;YACNvwH,IAAA,EAAM,KAAKwwH,QAAA,CAASD,OAAO;UAC7B,CAAC;QACH;MACF;MACA,KAAKE,aAAA,CAAc;IACrB;IACA,IAAI,gBAAgBj9G,OAAA,EAAS;MAC3B,KAAKk9G,eAAA,CAAgBl9G,OAAO;IAC9B;IACA,IAAI44G,iBAAA,CAAkB54G,OAAA,EAAS,KAAK64G,SAAS,GAAG;MAC9C,KAAKtF,YAAA,CAAa,KAAK4J,KAAK;MAC5B,KAAKtE,SAAA,GAAY,KAAKsE,KAAA;IACxB;EACF;EAAA;EAEAnjI,YAAA,EAAc;IACZ,KAAK4zH,aAAA,IAAiB,KAAKA,aAAA,CAAc2H,aAAA,CAAc,IAAI;EAC7D;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAI/oH,KAAA,EAAO;IACT,OAAO,KAAKwwH,QAAA,CAAS,KAAKnkJ,IAAI;EAChC;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI+0I,cAAA,EAAgB;IAClB,OAAO,KAAK/mD,OAAA,GAAU,KAAKA,OAAA,CAAQ+mD,aAAA,GAAgB;EACrD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAuK,kBAAkBpX,QAAA,EAAU;IAC1B,KAAK8X,SAAA,GAAY9X,QAAA;IACjB,KAAKpmI,MAAA,CAAOqmC,IAAA,CAAK+/F,QAAQ;EAC3B;EACAkc,cAAA,EAAgB;IACd,KAAKjI,kBAAA,CAAmB;IACxB,KAAKoI,aAAA,CAAc,IAAI,KAAKC,gBAAA,CAAiB,IAAI,KAAKzP,aAAA,CAAc0H,UAAA,CAAW,IAAI;IACnF,KAAKsH,WAAA,GAAc;EACrB;EACA5H,mBAAA,EAAqB;IACnB,IAAI,KAAK93I,OAAA,IAAW,KAAKA,OAAA,CAAQg1I,QAAA,IAAY,MAAM;MACjD,KAAKt7D,OAAA,CAAQu7D,SAAA,GAAY,KAAKj1I,OAAA,CAAQg1I,QAAA;IACxC;EACF;EACAkL,cAAA,EAAgB;IACd,OAAO,CAAC,KAAKv2D,OAAA,IAAW,CAAC,EAAE,KAAK3pF,OAAA,IAAW,KAAKA,OAAA,CAAQ8kC,UAAA;EAC1D;EACAq7G,iBAAA,EAAmB;IACjB5G,YAAA,CAAa,KAAK7/D,OAAA,EAAS,MAAM,KAAK8/D,oBAAoB;IAC1D,KAAK9/D,OAAA,CAAQ88D,sBAAA,CAAuB;MAClCjsD,SAAA,EAAW;IACb,CAAC;EACH;EACAo1D,gBAAA,EAAkB;IAChB,IAAI,CAAC,KAAKO,aAAA,CAAc,GAAG;MACzB,KAAKxB,gBAAA,CAAiB;IACxB;IACA,KAAKkB,UAAA,CAAW;EAClB;EACAlB,iBAAA,EAAmB;IACjB,IAAI,OAAOjiJ,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,EAAE,KAAKktF,OAAA,YAAmBw1D,YAAA,KAAiB,KAAKx1D,OAAA,YAAmBk1D,0BAAA,EAA4B;QACjG,MAAME,sBAAA,CAAuB;MAC/B,WAAW,EAAE,KAAKp1D,OAAA,YAAmBw1D,YAAA,KAAiB,EAAE,KAAKx1D,OAAA,YAAmBkzD,MAAA,GAAS;QACvF,MAAMiC,oBAAA,CAAqB;MAC7B;IACF;EACF;EACAc,WAAA,EAAa;IACX,IAAI,KAAK5/I,OAAA,IAAW,KAAKA,OAAA,CAAQrE,IAAA,EAAM,KAAKA,IAAA,GAAO,KAAKqE,OAAA,CAAQrE,IAAA;IAChE,IAAI,CAAC,KAAKukJ,aAAA,CAAc,KAAK,CAAC,KAAKvkJ,IAAA,KAAS,OAAOc,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC1F,MAAMuiJ,oBAAA,CAAqB;IAC7B;EACF;EACA3I,aAAat6I,KAAA,EAAO;IAClB8R,eAAA,CAAgBvG,IAAA,CAAK,MAAM;MACzB,KAAKoyE,OAAA,CAAQ52D,QAAA,CAAS/mB,KAAA,EAAO;QAC3BwiJ,qBAAA,EAAuB;MACzB,CAAC;MACD,KAAKx0D,kBAAA,EAAoBzlD,YAAA,CAAa;IACxC,CAAC;EACH;EACA07G,gBAAgBl9G,OAAA,EAAS;IACvB,MAAMs9G,aAAA,GAAgBt9G,OAAA,CAAQ,YAAY,EAAEi6E,YAAA;IAE5C,MAAMz4C,UAAA,GAAa87E,aAAA,KAAkB,KAAKt4F,gBAAA,CAAiBs4F,aAAa;IACxEvyI,eAAA,CAAgBvG,IAAA,CAAK,MAAM;MACzB,IAAIg9D,UAAA,IAAc,CAAC,KAAKoV,OAAA,CAAQjhB,QAAA,EAAU;QACxC,KAAKihB,OAAA,CAAQjkE,OAAA,CAAQ;MACvB,WAAW,CAAC6uD,UAAA,IAAc,KAAKoV,OAAA,CAAQjhB,QAAA,EAAU;QAC/C,KAAKihB,OAAA,CAAQtuD,MAAA,CAAO;MACtB;MACA,KAAK2+D,kBAAA,EAAoBzlD,YAAA,CAAa;IACxC,CAAC;EACH;EACAw7G,SAASvH,WAAA,EAAa;IACpB,OAAO,KAAK5uD,OAAA,GAAU2vD,WAAA,CAAYf,WAAA,EAAa,KAAK5uD,OAAO,IAAI,CAAC4uD,WAAW;EAC7E;AAuBF;AArBIkH,QAAA,CAAKl6I,IAAA,GAAO,SAAS86I,gBAAgBzgJ,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAK6/I,QAAA,EAAYz4F,iBAAA,CAAkBypF,gBAAA,EAAkB,CAAC,GAAMzpF,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,GAAMtlF,iBAAA,CAAkBujF,iBAAA,EAAmB,EAAE,GAAMvjF,iBAAA,CAAkBzkB,iBAAA,EAAmB,CAAC,GAAMykB,iBAAA,CAAkBoyF,uBAAA,EAAyB,CAAC,CAAC;AACxS;AAGAqG,QAAA,CAAKj7G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM48I,QAAA;EACN/6G,SAAA,EAAW,CAAC,CAAC,IAAI,WAAW,IAAI,GAAG,mBAAmB,IAAI,GAAG,eAAe,EAAE,CAAC;EAC/EC,MAAA,EAAQ;IACNhpC,IAAA,EAAM;IACN2oE,UAAA,EAAY,CAAI1c,UAAA,CAAasnB,IAAA,EAAM,YAAY,YAAY;IAC3D+wE,KAAA,EAAO,CAAIr4F,UAAA,CAAasnB,IAAA,EAAM,WAAW,OAAO;IAChDlvE,OAAA,EAAS,CAAI4nD,UAAA,CAAasnB,IAAA,EAAM,kBAAkB,SAAS;EAC7D;EACAtqC,OAAA,EAAS;IACPnnC,MAAA,EAAQ;EACV;EACAonC,QAAA,EAAU,CAAC,SAAS;EACpBzwB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACwpE,oBAAoB,CAAC,GAAMjvD,0BAAA,EAA+BvrD,oBAAoB;AAClH,CAAC;AAtKL,IAAMy6G,OAAA,GAANC,QAAA;AAAA,CAyKC,MAAM;EACL,CAAC,OAAOhjJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB05I,OAAA,EAAS,CAAC;IAChF38I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACurI,oBAAoB;MAChC16G,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACThiC,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,CAAC;EACH,GAAG;IACDz8I,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,GAAG;IACDzpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+6H,iBAAiB;IAC1B,CAAC;EACH,GAAG;IACD1nI,IAAA,EAAS0/B,iBAAA;IACTjzB,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+yB,iBAAiB;IAC1B,CAAC;EACH,GAAG;IACD1/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4pI,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFz9I,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACDo/B,UAAA,EAAY,CAAC;MACXzhE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;IACDywI,KAAA,EAAO,CAAC;MACNp9I,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACDxP,OAAA,EAAS,CAAC;MACR6C,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,gBAAgB;IACzB,CAAC;IACD/R,MAAA,EAAQ,CAAC;MACPoF,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AAmBH,IAAM8wI,cAAA,GAAN,MAAMA,cAAA,CAAc,EAapB;AAXIA,cAAA,CAAK/6I,IAAA,GAAO,SAASg7I,sBAAsB3gJ,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK0gJ,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAK97G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMy9I,cAAA;EACN57G,SAAA,EAAW,CAAC,CAAC,QAAQ,GAAG,YAAY,IAAI,GAAG,oBAAoB,EAAE,CAAC;EAClE47C,SAAA,EAAW,CAAC,cAAc,EAAE;AAC9B,CAAC;AAXL,IAAMkgE,aAAA,GAANF,cAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAO7jJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB06I,aAAA,EAAe,CAAC;IACtF39I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,cAAc;MAChB;IACF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMumI,qBAAA,GAAwB;EAC5BhsI,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAM4zH,mBAAmB;EACjD9rI,KAAA,EAAO;AACT;AAyBA,IAAM+rI,oBAAA,GAAN,MAAMA,oBAAA,SAA4BrW,2BAAA,CAA4B;EAAA;AAAA;AAAA;AAAA;EAK5DK,WAAW5uI,KAAA,EAAO;IAEhB,MAAM0vI,eAAA,GAAkB1vI,KAAA,IAAS,OAAO,KAAKA,KAAA;IAC7C,KAAK2mB,WAAA,CAAY,SAAS+oH,eAAe;EAC3C;EAAA;AAAA;AAAA;AAAA;EAKA1B,iBAAiB1rI,EAAA,EAAI;IACnB,KAAKurI,QAAA,GAAW7tI,KAAA,IAAS;MACvBsC,EAAA,CAAGtC,KAAA,IAAS,KAAK,OAAO66D,UAAA,CAAW76D,KAAK,CAAC;IAC3C;EACF;AAyBF;AAvBI4kJ,oBAAA,CAAKp7I,IAAA,GAAuB,sBAAM;EAChC,IAAIq7I,gCAAA;EACJ,OAAO,SAASC,4BAA4BjhJ,CAAA,EAAG;IAC7C,QAAQghJ,gCAAA,KAAqCA,gCAAA,GAAsC3gG,qBAAA,CAAsB0gG,oBAAmB,IAAI/gJ,CAAA,IAAK+gJ,oBAAmB;EAC1J;AACF,GAAG;AAGHA,oBAAA,CAAKn8G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM89I,oBAAA;EACNj8G,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,UAAU,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,WAAW,EAAE,CAAC;EAC1J4iB,YAAA,EAAc,SAASw5F,iCAAiC34G,EAAA,EAAIlb,GAAA,EAAK;IAC/D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASu5F,6CAA6Cr5F,MAAA,EAAQ;QACnF,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MACzC,CAAC,EAAE,QAAQ,SAASilJ,4CAAA,EAA8C;QAChE,OAAO/zH,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAz1H,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC0qE,qBAAqB,CAAC,GAAMnwD,0BAA0B;AAC1F,CAAC;AAzCL,IAAMowD,mBAAA,GAANC,oBAAA;AAAA,CA4CC,MAAM;EACL,CAAC,OAAOlkJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB46I,mBAAA,EAAqB,CAAC;IAC5F79I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,WAAW;QACX,UAAU;MACZ;MACAlG,SAAA,EAAW,CAACysI,qBAAqB;IACnC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMQ,oBAAA,GAAuB;EAC3BxsI,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAMo0H,yBAAyB;EACvDtsI,KAAA,EAAO;AACT;AACA,SAASusI,eAAA,EAAiB;EACxB,MAAM,IAAI7wI,YAAA,CAAc,MAAmE;AAAA;AAAA;AAAA,KAGxF;AACL;AAKA,IAAM8wI,qBAAA,GAAN,MAAMA,qBAAA,CAAqB;EACzBpmJ,YAAA,EAAc;IACZ,KAAKqmJ,UAAA,GAAa,EAAC;EACrB;EAAA;AAAA;AAAA;AAAA;EAKAv1I,IAAI4tE,OAAA,EAAS4nE,QAAA,EAAU;IACrB,KAAKD,UAAA,CAAWjlJ,IAAA,CAAK,CAACs9E,OAAA,EAAS4nE,QAAQ,CAAC;EAC1C;EAAA;AAAA;AAAA;AAAA;EAKAt1I,OAAOs1I,QAAA,EAAU;IACf,SAASpxH,CAAA,GAAI,KAAKmxH,UAAA,CAAWvkJ,MAAA,GAAS,GAAGozB,CAAA,IAAK,GAAG,EAAEA,CAAA,EAAG;MACpD,IAAI,KAAKmxH,UAAA,CAAWnxH,CAAC,EAAE,CAAC,MAAMoxH,QAAA,EAAU;QACtC,KAAKD,UAAA,CAAWzgJ,MAAA,CAAOsvB,CAAA,EAAG,CAAC;QAC3B;MACF;IACF;EACF;EAAA;AAAA;AAAA;AAAA;EAKAo6D,OAAOg3D,QAAA,EAAU;IACf,KAAKD,UAAA,CAAW9lJ,OAAA,CAAQ42B,CAAA,IAAK;MAC3B,IAAI,KAAKovH,YAAA,CAAapvH,CAAA,EAAGmvH,QAAQ,KAAKnvH,CAAA,CAAE,CAAC,MAAMmvH,QAAA,EAAU;QACvDnvH,CAAA,CAAE,CAAC,EAAEqvH,WAAA,CAAYF,QAAA,CAASvlJ,KAAK;MACjC;IACF,CAAC;EACH;EACAwlJ,aAAaE,WAAA,EAAaH,QAAA,EAAU;IAClC,IAAI,CAACG,WAAA,CAAY,CAAC,EAAE/nE,OAAA,EAAS,OAAO;IACpC,OAAO+nE,WAAA,CAAY,CAAC,EAAE93D,OAAA,KAAY23D,QAAA,CAAStwB,QAAA,CAASrnC,OAAA,IAAW83D,WAAA,CAAY,CAAC,EAAE9lJ,IAAA,KAAS2lJ,QAAA,CAAS3lJ,IAAA;EAClG;AAaF;AAXIylJ,qBAAA,CAAK77I,IAAA,GAAO,SAASm8I,6BAA6B9hJ,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKwhJ,qBAAA,EAAsB;AACzC;AAGAA,qBAAA,CAAK17I,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOsgJ,qBAAA;EACPx7I,OAAA,EAASw7I,qBAAA,CAAqB77I,IAAA;EAC9B8M,UAAA,EAAY;AACd,CAAC;AAhDL,IAAMsvI,oBAAA,GAANP,qBAAA;AAAA,CAmDC,MAAM;EACL,CAAC,OAAO3kJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB67I,oBAAA,EAAsB,CAAC;IAC7F9+I,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAqBH,IAAMuvI,0BAAA,GAAN,MAAMA,0BAAA,SAAkCtX,2BAAA,CAA4B;EAClEtvI,YAAYglB,QAAA,EAAUgwE,UAAA,EAAY6xD,SAAA,EAAWn5G,SAAA,EAAW;IACtD,MAAM1oB,QAAA,EAAUgwE,UAAU;IAC1B,KAAK6xD,SAAA,GAAYA,SAAA;IACjB,KAAKn5G,SAAA,GAAYA,SAAA;IACjB,KAAKo5G,qBAAA,GAAwB;IAQ7B,KAAKlY,QAAA,GAAW,MAAM,CAAC;IACvB,KAAK4P,oBAAA,GAAuBhzI,MAAA,CAAO4yI,uBAAA,EAAyB;MAC1D1yI,QAAA,EAAU;IACZ,CAAC,KAAK2yI,uBAAA;EACR;EAAA;EAEAh2G,SAAA,EAAW;IACT,KAAK2tF,QAAA,GAAW,KAAKtoF,SAAA,CAAUvsC,GAAA,CAAIw0I,SAAS;IAC5C,KAAKiP,UAAA,CAAW;IAChB,KAAKiC,SAAA,CAAU/1I,GAAA,CAAI,KAAKklH,QAAA,EAAU,IAAI;EACxC;EAAA;EAEAl0G,YAAA,EAAc;IACZ,KAAK+kI,SAAA,CAAU71I,MAAA,CAAO,IAAI;EAC5B;EAAA;AAAA;AAAA;AAAA;EAKA2+H,WAAW5uI,KAAA,EAAO;IAChB,KAAK0vH,MAAA,GAAS1vH,KAAA,KAAU,KAAKA,KAAA;IAC7B,KAAK2mB,WAAA,CAAY,WAAW,KAAK+oG,MAAM;EACzC;EAAA;AAAA;AAAA;AAAA;EAKAse,iBAAiB1rI,EAAA,EAAI;IACnB,KAAK0jJ,GAAA,GAAM1jJ,EAAA;IACX,KAAKurI,QAAA,GAAW,MAAM;MACpBvrI,EAAA,CAAG,KAAKtC,KAAK;MACb,KAAK8lJ,SAAA,CAAUv3D,MAAA,CAAO,IAAI;IAC5B;EACF;EAAA;EAEA0/C,iBAAiB1lE,UAAA,EAAY;IAmB3B,IAAI,KAAKw9E,qBAAA,IAAyBx9E,UAAA,IAAc,KAAKk1E,oBAAA,KAAyB,6BAA6B;MACzG,KAAK92H,WAAA,CAAY,YAAY4hD,UAAU;IACzC;IACA,KAAKw9E,qBAAA,GAAwB;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAN,YAAYzlJ,KAAA,EAAO;IACjB,KAAK4uI,UAAA,CAAW5uI,KAAK;EACvB;EACA6jJ,WAAA,EAAa;IACX,IAAI,KAAKjkJ,IAAA,IAAQ,KAAKqmJ,eAAA,IAAmB,KAAKrmJ,IAAA,KAAS,KAAKqmJ,eAAA,KAAoB,OAAOvlJ,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC9H0kJ,cAAA,CAAe;IACjB;IACA,IAAI,CAAC,KAAKxlJ,IAAA,IAAQ,KAAKqmJ,eAAA,EAAiB,KAAKrmJ,IAAA,GAAO,KAAKqmJ,eAAA;EAC3D;AA2BF;AAzBIJ,0BAAA,CAAKr8I,IAAA,GAAO,SAAS08I,kCAAkCriJ,CAAA,EAAG;EACxD,OAAO,KAAKA,CAAA,IAAKgiJ,0BAAA,EAA8B56F,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkB26F,oBAAoB,GAAM36F,iBAAA,CAAqBmG,QAAQ,CAAC;AACpM;AAGAy0F,0BAAA,CAAKp9G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM++I,0BAAA;EACNl9G,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,SAAS,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,SAAS,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,SAAS,WAAW,EAAE,CAAC;EACvJ4iB,YAAA,EAAc,SAAS46F,uCAAuC/5G,EAAA,EAAIlb,GAAA,EAAK;IACrE,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAAS26F,oDAAA,EAAsD;QACrF,OAAOl1H,GAAA,CAAI28G,QAAA,CAAS;MACtB,CAAC,EAAE,QAAQ,SAASwY,kDAAA,EAAoD;QACtE,OAAOn1H,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAllG,MAAA,EAAQ;IACNhpC,IAAA,EAAM;IACNqmJ,eAAA,EAAiB;IACjBjmJ,KAAA,EAAO;EACT;EACAqY,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACkrE,oBAAoB,CAAC,GAAM3wD,0BAA0B;AACzF,CAAC;AA9GL,IAAM4wD,yBAAA,GAANU,0BAAA;AAAA,CAiHC,MAAM;EACL,CAAC,OAAOnlJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBo7I,yBAAA,EAA2B,CAAC;IAClGr+I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,YAAY;QACZ,UAAU;MACZ;MACAlG,SAAA,EAAW,CAACitI,oBAAoB;IAClC,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTp+I,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM8+I;EACR,GAAG;IACD9+I,IAAA,EAASsqD;EACX,CAAC,GAAG;IACFxxD,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACD88G,eAAA,EAAiB,CAAC;MAChBn/I,IAAA,EAAMqiC;IACR,CAAC;IACDnpC,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMm9G,oBAAA,GAAuB;EAC3B5tI,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAMw1H,kBAAkB;EAChD1tI,KAAA,EAAO;AACT;AAyBA,IAAM2tI,mBAAA,GAAN,MAAMA,mBAAA,SAA2BjY,2BAAA,CAA4B;EAAA;AAAA;AAAA;AAAA;EAK3DK,WAAW5uI,KAAA,EAAO;IAChB,KAAK2mB,WAAA,CAAY,SAASk0C,UAAA,CAAW76D,KAAK,CAAC;EAC7C;EAAA;AAAA;AAAA;AAAA;EAKAguI,iBAAiB1rI,EAAA,EAAI;IACnB,KAAKurI,QAAA,GAAW7tI,KAAA,IAAS;MACvBsC,EAAA,CAAGtC,KAAA,IAAS,KAAK,OAAO66D,UAAA,CAAW76D,KAAK,CAAC;IAC3C;EACF;AA2BF;AAzBIwmJ,mBAAA,CAAKh9I,IAAA,GAAuB,sBAAM;EAChC,IAAIi9I,+BAAA;EACJ,OAAO,SAASC,2BAA2B7iJ,CAAA,EAAG;IAC5C,QAAQ4iJ,+BAAA,KAAoCA,+BAAA,GAAqCviG,qBAAA,CAAsBsiG,mBAAkB,IAAI3iJ,CAAA,IAAK2iJ,mBAAkB;EACtJ;AACF,GAAG;AAGHA,mBAAA,CAAK/9G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0/I,mBAAA;EACN79G,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,SAAS,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,SAAS,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,SAAS,WAAW,EAAE,CAAC;EACvJ4iB,YAAA,EAAc,SAASo7F,gCAAgCv6G,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAASm7F,6CAA6Cj7F,MAAA,EAAQ;QACpF,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MACzC,CAAC,EAAE,SAAS,SAAS6mJ,4CAA4Cl7F,MAAA,EAAQ;QACvE,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MACzC,CAAC,EAAE,QAAQ,SAAS8mJ,2CAAA,EAA6C;QAC/D,OAAO51H,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAz1H,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACssE,oBAAoB,CAAC,GAAM/xD,0BAA0B;AACzF,CAAC;AAzCL,IAAMgyD,kBAAA,GAANC,mBAAA;AAAA,CA4CC,MAAM;EACL,CAAC,OAAO9lJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw8I,kBAAA,EAAoB,CAAC;IAC3Fz/I,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,YAAY;QACZ,WAAW;QACX,UAAU;MACZ;MACAlG,SAAA,EAAW,CAACquI,oBAAoB;IAClC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMS,kCAAA,GAAqC,IAAI33I,cAAA,CAAe1O,SAAA,GAAY,kCAAkC,EAAE;AAC9G,IAAMsmJ,kBAAA,GAAqB;EACzBtuI,OAAA,EAASk8H,SAAA;EACTj8H,WAAA,EAAaoY,UAAA,CAAW,MAAMk2H,oBAAoB;AACpD;AAuBA,IAAMC,qBAAA,GAAN,MAAMA,qBAAA,SAA6BtS,SAAA,CAAU;EAAA;AAAA;AAAA;AAAA;EAK3C,IAAIrsE,WAAWA,UAAA,EAAY;IACzB,IAAI,OAAO7nE,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjDgvB,OAAA,CAAQhf,IAAA,CAAKmmI,mBAAmB;IAClC;EACF;EAWA53I,YAAYwyI,UAAA,EAAYsG,eAAA,EAAiBqI,cAAA,EAAgB+G,qBAAA,EAAuB1J,oBAAA,EAAsB;IACpG,MAAM;IACN,KAAK0J,qBAAA,GAAwBA,qBAAA;IAC7B,KAAK1J,oBAAA,GAAuBA,oBAAA;IAE5B,KAAK/7I,MAAA,GAAS,IAAIskC,YAAA,CAAa;IAQ/B,KAAK46G,mBAAA,GAAsB;IAC3B,KAAK5M,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;IACxC,KAAKlD,aAAA,GAAgBsL,mBAAA,CAAoB,MAAMC,cAAc;EAC/D;EAAA;EAEAt5G,YAAYC,OAAA,EAAS;IACnB,IAAI,KAAKqgH,iBAAA,CAAkBrgH,OAAO,GAAG;MACnC,MAAMsgH,YAAA,GAAetgH,OAAA,CAAQ,MAAM,EAAEE,aAAA;MACrC,IAAIogH,YAAA,EAAc;QAChBpJ,cAAA,CAAeoJ,YAAA,EAAc;QAA2C,KAAK;MAC/E;MACA7J,YAAA,CAAa,KAAK55D,IAAA,EAAM,MAAM,KAAK65D,oBAAoB;MACvD,KAAK75D,IAAA,CAAK62D,sBAAA,CAAuB;QAC/BjsD,SAAA,EAAW;MACb,CAAC;IACH;IACA,IAAImxD,iBAAA,CAAkB54G,OAAA,EAAS,KAAK64G,SAAS,GAAG;MAC9C,IAAI,OAAOl/I,SAAA,KAAc,eAAeA,SAAA,EAAW;QACjD+/I,eAAA,CAAgB,eAAeyG,qBAAA,EAAsB,MAAM,KAAKC,qBAAqB;MACvF;MACA,KAAKvjE,IAAA,CAAK78D,QAAA,CAAS,KAAKm9H,KAAK;MAC7B,KAAKtE,SAAA,GAAY,KAAKsE,KAAA;IACxB;EACF;EAAA;EAEAnjI,YAAA,EAAc;IACZ,IAAI,KAAK6iE,IAAA,EAAM;MACbq6D,cAAA,CAAe,KAAKr6D,IAAA,EAAM;MAA2C,KAAK;IAC5E;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIrwD,KAAA,EAAO;IACT,OAAO,EAAC;EACV;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIoqD,QAAA,EAAU;IACZ,OAAO,KAAKiG,IAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAs7D,kBAAkBpX,QAAA,EAAU;IAC1B,KAAK8X,SAAA,GAAY9X,QAAA;IACjB,KAAKpmI,MAAA,CAAOqmC,IAAA,CAAK+/F,QAAQ;EAC3B;EACAsf,kBAAkBrgH,OAAA,EAAS;IACzB,OAAOA,OAAA,CAAQlX,cAAA,CAAe,MAAM;EACtC;AAsBF;AA/FIq3H,qBAAA,CAAKvG,uBAAA,GAA0B;AA2E/BuG,qBAAA,CAAK19I,IAAA,GAAO,SAAS89I,6BAA6BzjJ,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKqjJ,qBAAA,EAAyBj8F,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,GAAMtlF,iBAAA,CAAkBujF,iBAAA,EAAmB,EAAE,GAAMvjF,iBAAA,CAAkB87F,kCAAA,EAAoC,CAAC,GAAM97F,iBAAA,CAAkBoyF,uBAAA,EAAyB,CAAC,CAAC;AAC3R;AAGA6J,qBAAA,CAAKz+G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMogJ,qBAAA;EACNv+G,SAAA,EAAW,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC;EACnCC,MAAA,EAAQ;IACNg7C,IAAA,EAAM,CAAI/3B,UAAA,CAAasnB,IAAA,EAAM,eAAe,MAAM;IAClD5K,UAAA,EAAY,CAAI1c,UAAA,CAAasnB,IAAA,EAAM,YAAY,YAAY;IAC3D+wE,KAAA,EAAO,CAAIr4F,UAAA,CAAasnB,IAAA,EAAM,WAAW,OAAO;EAClD;EACAtqC,OAAA,EAAS;IACPnnC,MAAA,EAAQ;EACV;EACAonC,QAAA,EAAU,CAAC,QAAQ;EACnBzwB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACgtE,kBAAkB,CAAC,GAAMzyD,0BAAA,EAA+BvrD,oBAAoB;AAChH,CAAC;AA/GL,IAAMi+G,oBAAA,GAANC,qBAAA;AAAA,CAkHC,MAAM;EACL,CAAC,OAAOxmJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBk9I,oBAAA,EAAsB,CAAC;IAC7FngJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC+uI,kBAAkB;MAC9Bl+G,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACThiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,GAAG;IACDzpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+6H,iBAAiB;IAC1B,CAAC;EACH,GAAG;IACD1nI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACszI,kCAAkC;IAC3C,CAAC;EACH,GAAG;IACDjgJ,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4pI,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFz5D,IAAA,EAAM,CAAC;MACL98E,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,aAAa;IACtB,CAAC;IACD80D,UAAA,EAAY,CAAC;MACXzhE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;IACDywI,KAAA,EAAO,CAAC;MACNp9I,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACD/R,MAAA,EAAQ,CAAC;MACPoF,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM8zI,qBAAA,GAAwB;EAC5B7uI,OAAA,EAASg8H,gBAAA;EACT/7H,WAAA,EAAaoY,UAAA,CAAW,MAAMy2H,kBAAkB;AAClD;AAyBA,IAAMC,mBAAA,GAAN,MAAMA,mBAAA,SAA2B/S,gBAAA,CAAiB;EAChDz1I,YAAYwyI,UAAA,EAAYsG,eAAA,EAAiB0F,oBAAA,EAAsB;IAC7D,MAAM;IACN,KAAKA,oBAAA,GAAuBA,oBAAA;IAK5B,KAAK35D,SAAA,GAAY;IAKjB,KAAK60D,mBAAA,GAAsB,MAAM,KAAK+O,eAAA,CAAgB;IAKtD,KAAKxH,UAAA,GAAa,EAAC;IAKnB,KAAKt8D,IAAA,GAAO;IAKZ,KAAKs9D,QAAA,GAAW,IAAIl7G,YAAA,CAAa;IACjC,KAAKguG,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;EAC1C;EAAA;EAEAjxG,YAAYC,OAAA,EAAS;IACnB,KAAK4gH,iBAAA,CAAkB;IACvB,IAAI5gH,OAAA,CAAQlX,cAAA,CAAe,MAAM,GAAG;MAClC,KAAK+3H,iBAAA,CAAkB;MACvB,KAAKF,eAAA,CAAgB;MACrB,KAAKG,oBAAA,CAAqB;MAC1B,KAAKC,QAAA,GAAW,KAAKlkE,IAAA;IACvB;EACF;EAAA;EAEA7iE,YAAA,EAAc;IACZ,IAAI,KAAK6iE,IAAA,EAAM;MACby6D,iBAAA,CAAkB,KAAKz6D,IAAA,EAAM,IAAI;MAOjC,IAAI,KAAKA,IAAA,CAAK+0D,mBAAA,KAAwB,KAAKA,mBAAA,EAAqB;QAC9D,KAAK/0D,IAAA,CAAKk4D,2BAAA,CAA4B,MAAM,CAAC,CAAC;MAChD;IACF;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAInH,cAAA,EAAgB;IAClB,OAAO;EACT;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIh3D,QAAA,EAAU;IACZ,OAAO,KAAKiG,IAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIrwD,KAAA,EAAO;IACT,OAAO,EAAC;EACV;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA8oH,WAAW/kF,GAAA,EAAK;IACd,MAAM4jF,IAAA,GAAO,KAAKt3D,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;IACnCiqH,YAAA,CAAatC,IAAA,EAAM5jF,GAAA,EAAK,KAAKmmF,oBAAoB;IACjDvC,IAAA,CAAKT,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAW;IACb,CAAC;IACD,KAAK0xD,UAAA,CAAW7/I,IAAA,CAAKi3D,GAAG;IACxB,OAAO4jF,IAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAkG,WAAW9pF,GAAA,EAAK;IACd,OAAO,KAAKssB,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA+oH,cAAchlF,GAAA,EAAK;IACjB2mF,cAAA,CAAe3mF,GAAA,CAAIqmB,OAAA,IAAW,MAAMrmB,GAAA;IAA0C,KAAK;IACnFkpF,gBAAA,CAAiB,KAAKN,UAAA,EAAY5oF,GAAG;EACvC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA+pF,aAAa/pF,GAAA,EAAK;IAChB,KAAKywF,mBAAA,CAAoBzwF,GAAG;EAC9B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAgqF,gBAAgBhqF,GAAA,EAAK;IACnB,KAAK0wF,qBAAA,CAAsB1wF,GAAG;EAChC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAiqF,aAAajqF,GAAA,EAAK;IAChB,OAAO,KAAKssB,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA00H,aAAa3wF,GAAA,EAAK;IAChB,KAAKywF,mBAAA,CAAoBzwF,GAAG;EAC9B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA4wF,gBAAgB5wF,GAAA,EAAK;IACnB,KAAK0wF,qBAAA,CAAsB1wF,GAAG;EAChC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA6wF,aAAa7wF,GAAA,EAAK;IAChB,OAAO,KAAKssB,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;EAC/B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAiuH,YAAYlqF,GAAA,EAAKt3D,KAAA,EAAO;IACtB,MAAMk7I,IAAA,GAAO,KAAKt3D,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;IACnC2nH,IAAA,CAAKn0H,QAAA,CAAS/mB,KAAK;EACrB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAyhJ,SAAS91F,MAAA,EAAQ;IACf,KAAKm4B,SAAA,GAAY;IACjBm8D,mBAAA,CAAoB,KAAKr8D,IAAA,EAAM,KAAKs8D,UAAU;IAC9C,KAAKgB,QAAA,CAASn5G,IAAA,CAAK4jB,MAAM;IAIzB,OAAOA,MAAA,EAAQzvC,MAAA,EAAQhX,MAAA,KAAW;EACpC;EAAA;AAAA;AAAA;AAAA;EAKAw8I,QAAA,EAAU;IACR,KAAKC,SAAA,CAAU;EACjB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAA,UAAU3hJ,KAAA,GAAQ,QAAW;IAC3B,KAAK4jF,IAAA,CAAK2nD,KAAA,CAAMvrI,KAAK;IACrB,KAAK8jF,SAAA,GAAY;EACnB;EAAA;EAEA4jE,gBAAA,EAAkB;IAChB,KAAKxH,UAAA,CAAW1gJ,OAAA,CAAQ83D,GAAA,IAAO;MAC7B,MAAM8wF,OAAA,GAAU9wF,GAAA,CAAIqmB,OAAA;MACpB,MAAM0qE,OAAA,GAAU,KAAKzkE,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;MACtC,IAAI60H,OAAA,KAAYC,OAAA,EAAS;QAGvBpK,cAAA,CAAemK,OAAA,IAAW,MAAM9wF,GAAG;QAMnC,IAAImrF,aAAA,CAAc4F,OAAO,GAAG;UAC1B7K,YAAA,CAAa6K,OAAA,EAAS/wF,GAAA,EAAK,KAAKmmF,oBAAoB;UACpDnmF,GAAA,CAAIqmB,OAAA,GAAU0qE,OAAA;QAChB;MACF;IACF,CAAC;IACD,KAAKzkE,IAAA,CAAKq3D,mBAAA,CAAoB;MAC5BzsD,SAAA,EAAW;IACb,CAAC;EACH;EACAu5D,oBAAoBzwF,GAAA,EAAK;IACvB,MAAM4jF,IAAA,GAAO,KAAKt3D,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;IACnC8rH,kBAAA,CAAmBnE,IAAA,EAAM5jF,GAAG;IAI5B4jF,IAAA,CAAKT,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAW;IACb,CAAC;EACH;EACAw5D,sBAAsB1wF,GAAA,EAAK;IACzB,IAAI,KAAKssB,IAAA,EAAM;MACb,MAAMs3D,IAAA,GAAO,KAAKt3D,IAAA,CAAKxjF,GAAA,CAAIk3D,GAAA,CAAI/jC,IAAI;MACnC,IAAI2nH,IAAA,EAAM;QACR,MAAMyD,gBAAA,GAAmBW,oBAAA,CAAqBpE,IAAA,EAAM5jF,GAAG;QACvD,IAAIqnF,gBAAA,EAAkB;UAGpBzD,IAAA,CAAKT,sBAAA,CAAuB;YAC1BjsD,SAAA,EAAW;UACb,CAAC;QACH;MACF;IACF;EACF;EACAq5D,qBAAA,EAAuB;IACrB,KAAKjkE,IAAA,CAAKk4D,2BAAA,CAA4B,KAAKnD,mBAAmB;IAC9D,IAAI,KAAKmP,QAAA,EAAU;MACjB,KAAKA,QAAA,CAAShM,2BAAA,CAA4B,MAAM,CAAC,CAAC;IACpD;EACF;EACA8L,kBAAA,EAAoB;IAClBhK,eAAA,CAAgB,KAAKh6D,IAAA,EAAM,IAAI;IAC/B,IAAI,KAAKkkE,QAAA,EAAU;MACjBzJ,iBAAA,CAAkB,KAAKyJ,QAAA,EAAU,IAAI;IACvC;EACF;EACAH,kBAAA,EAAoB;IAClB,IAAI,CAAC,KAAK/jE,IAAA,KAAS,OAAOljF,SAAA,KAAc,eAAeA,SAAA,GAAY;MACjE,MAAMg2I,oBAAA,CAAqB;IAC7B;EACF;AA6BF;AA3BI+Q,mBAAA,CAAKj+I,IAAA,GAAO,SAAS8+I,2BAA2BzkJ,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK4jJ,mBAAA,EAAuBx8F,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,GAAMtlF,iBAAA,CAAkBoyF,uBAAA,EAAyB,CAAC,CAAC;AAC/K;AAGAoK,mBAAA,CAAKh/G,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM2gJ,mBAAA;EACN9+G,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;EACjC4iB,YAAA,EAAc,SAASg9F,gCAAgCn8G,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAAS+8F,6CAA6C78F,MAAA,EAAQ;QACpF,OAAOz6B,GAAA,CAAIuwH,QAAA,CAAS91F,MAAM;MAC5B,CAAC,EAAE,SAAS,SAAS88F,4CAAA,EAA8C;QACjE,OAAOv3H,GAAA,CAAIwwH,OAAA,CAAQ;MACrB,CAAC;IACH;EACF;EACA94G,MAAA,EAAQ;IACNg7C,IAAA,EAAM,CAAI/3B,UAAA,CAAasnB,IAAA,EAAM,aAAa,MAAM;EAClD;EACAtqC,OAAA,EAAS;IACPq4G,QAAA,EAAU;EACZ;EACAp4G,QAAA,EAAU,CAAC,QAAQ;EACnBzwB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACutE,qBAAqB,CAAC,GAAMhzD,0BAAA,EAA+BvrD,oBAAoB;AACnH,CAAC;AA7SL,IAAMw+G,kBAAA,GAANC,mBAAA;AAAA,CAgTC,MAAM;EACL,CAAC,OAAO/mJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBy9I,kBAAA,EAAoB,CAAC;IAC3F1gJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACsvI,qBAAqB;MACjCppI,IAAA,EAAM;QACJ,YAAY;QACZ,WAAW;MACb;MACA2qB,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACThiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,GAAG;IACDzpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC4pI,uBAAuB;IAChC,CAAC;EACH,CAAC,GAAG;IACFz5D,IAAA,EAAM,CAAC;MACL98E,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,WAAW;IACpB,CAAC;IACDytI,QAAA,EAAU,CAAC;MACTp6I,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMs/G,qBAAA,GAAwB;EAC5BhwI,OAAA,EAASg8H,gBAAA;EACT/7H,WAAA,EAAaoY,UAAA,CAAW,MAAM43H,aAAa;AAC7C;AAgDA,IAAMC,cAAA,GAAN,MAAMA,cAAA,SAAsB9F,0BAAA,CAA2B;EACrD7jJ,YAAYmmB,MAAA,EAAQqsH,UAAA,EAAYsG,eAAA,EAAiB;IAC/C,MAAM;IAUN,KAAKn4I,IAAA,GAAO;IACZ,KAAKguF,OAAA,GAAUxoE,MAAA;IACf,KAAK4uH,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;EAC1C;EAAA;EAEA4K,iBAAA,EAAmB;IACjB,IAAIkG,iBAAA,CAAkB,KAAKj7D,OAAO,MAAM,OAAOltF,SAAA,KAAc,eAAeA,SAAA,GAAY;MACtF,MAAMi2I,oBAAA,CAAqB;IAC7B;EACF;AAgBF;AAdIiS,cAAA,CAAKp/I,IAAA,GAAO,SAASs/I,sBAAsBjlJ,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK+kJ,cAAA,EAAkB39F,iBAAA,CAAkBypF,gBAAA,EAAkB,EAAE,GAAMzpF,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,CAAC;AACpK;AAGAqY,cAAA,CAAKngH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM8hJ,cAAA;EACNjgH,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACrCC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,MAAM;EACtD;EACA96D,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC0uE,qBAAqB,CAAC,GAAMn0D,0BAA0B;AAC1F,CAAC;AApCL,IAAMo0D,aAAA,GAANC,cAAA;AAAA,CAuCC,MAAM;EACL,CAAC,OAAOloJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4+I,aAAA,EAAe,CAAC;IACtF7hJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACywI,qBAAqB;IACnC,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT5hJ,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,GAAG;MACDz8I,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,CAAC,GAAG;IACF3wI,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMs1I,qBAAA,GAAwB;EAC5BrwI,OAAA,EAASg8H,gBAAA;EACT/7H,WAAA,EAAaoY,UAAA,CAAW,MAAMi4H,aAAa;AAC7C;AAyBA,IAAMC,cAAA,GAAN,MAAMA,cAAA,SAAsBvU,gBAAA,CAAiB;EAC3Cz1I,YAAYmmB,MAAA,EAAQqsH,UAAA,EAAYsG,eAAA,EAAiB;IAC/C,MAAM;IAUN,KAAKn4I,IAAA,GAAO;IACZ,KAAKguF,OAAA,GAAUxoE,MAAA;IACf,KAAK4uH,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;EAC1C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAzwG,SAAA,EAAW;IACT,KAAKq7G,gBAAA,CAAiB;IACtB,KAAKhO,aAAA,CAAcsT,YAAA,CAAa,IAAI;EACtC;EAAA;AAAA;AAAA;AAAA;EAKAlnI,YAAA,EAAc;IACZ,IAAI,KAAK4zH,aAAA,EAAe;MACtB,KAAKA,aAAA,CAAcuT,eAAA,CAAgB,IAAI;IACzC;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIvqE,QAAA,EAAU;IACZ,OAAO,KAAKg3D,aAAA,CAAcwT,YAAA,CAAa,IAAI;EAC7C;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIxT,cAAA,EAAgB;IAClB,OAAO,KAAK/mD,OAAA,GAAU,KAAKA,OAAA,CAAQ+mD,aAAA,GAAgB;EACrD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIphH,KAAA,EAAO;IACT,OAAOgqH,WAAA,CAAY,KAAK39I,IAAA,IAAQ,OAAO,KAAKA,IAAA,GAAO,KAAKA,IAAA,CAAKyC,QAAA,CAAS,GAAG,KAAKurF,OAAO;EACvF;EACA+0D,iBAAA,EAAmB;IACjB,IAAIkG,iBAAA,CAAkB,KAAKj7D,OAAO,MAAM,OAAOltF,SAAA,KAAc,eAAeA,SAAA,GAAY;MACtF,MAAMk2I,oBAAA,CAAqB;IAC7B;EACF;AAgBF;AAdIqS,cAAA,CAAKz/I,IAAA,GAAO,SAAS0/I,sBAAsBrlJ,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKolJ,cAAA,EAAkBh+F,iBAAA,CAAkBypF,gBAAA,EAAkB,EAAE,GAAMzpF,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,CAAC;AACpK;AAGA0Y,cAAA,CAAKxgH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmiJ,cAAA;EACNtgH,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACrCC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,MAAM;EACtD;EACA96D,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC+uE,qBAAqB,CAAC,GAAMx0D,0BAA0B;AAC1F,CAAC;AA3EL,IAAMy0D,aAAA,GAANC,cAAA;AAAA,CA8EC,MAAM;EACL,CAAC,OAAOvoJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi/I,aAAA,EAAe,CAAC;IACtFliJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC8wI,qBAAqB;IACnC,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiJ,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,GAAG;MACDz8I,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,CAAC,GAAG;IACF3wI,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AACH,SAASo1I,kBAAkBzjI,MAAA,EAAQ;EACjC,OAAO,EAAEA,MAAA,YAAkBujI,aAAA,KAAkB,EAAEvjI,MAAA,YAAkBoiI,kBAAA,KAAuB,EAAEpiI,MAAA,YAAkB4jI,aAAA;AAC9G;AACA,IAAMG,kBAAA,GAAqB;EACzBzwI,OAAA,EAASk8H,SAAA;EACTj8H,WAAA,EAAaoY,UAAA,CAAW,MAAMq4H,eAAe;AAC/C;AAmCA,IAAMC,gBAAA,GAAN,MAAMA,gBAAA,SAAwBzU,SAAA,CAAU;EAAA;AAAA;AAAA;AAAA;EAKtC,IAAIrsE,WAAWA,UAAA,EAAY;IACzB,IAAI,OAAO7nE,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjDgvB,OAAA,CAAQhf,IAAA,CAAKmmI,mBAAmB;IAClC;EACF;EAWA53I,YAAYmmB,MAAA,EAAQqsH,UAAA,EAAYsG,eAAA,EAAiBqI,cAAA,EAAgB+G,qBAAA,EAAuB;IACtF,MAAM;IACN,KAAKA,qBAAA,GAAwBA,qBAAA;IAC7B,KAAKmC,MAAA,GAAS;IAUd,KAAK1pJ,IAAA,GAAO;IAEZ,KAAK8B,MAAA,GAAS,IAAIskC,YAAA,CAAa;IAQ/B,KAAK46G,mBAAA,GAAsB;IAC3B,KAAKhzD,OAAA,GAAUxoE,MAAA;IACf,KAAK4uH,cAAA,CAAevC,UAAU;IAC9B,KAAKyC,mBAAA,CAAoB6D,eAAe;IACxC,KAAKlD,aAAA,GAAgBsL,mBAAA,CAAoB,MAAMC,cAAc;EAC/D;EAAA;EAEAt5G,YAAYC,OAAA,EAAS;IACnB,IAAI,CAAC,KAAKuiH,MAAA,EAAQ,KAAKtF,aAAA,CAAc;IACrC,IAAIrE,iBAAA,CAAkB54G,OAAA,EAAS,KAAK64G,SAAS,GAAG;MAC9C,IAAI,OAAOl/I,SAAA,KAAc,eAAeA,SAAA,EAAW;QACjD+/I,eAAA,CAAgB,mBAAmB4I,gBAAA,EAAiB,MAAM,KAAKlC,qBAAqB;MACtF;MACA,KAAKvH,SAAA,GAAY,KAAKsE,KAAA;MACtB,KAAKvP,aAAA,CAAc6M,WAAA,CAAY,MAAM,KAAK0C,KAAK;IACjD;EACF;EAAA;EAEAnjI,YAAA,EAAc;IACZ,IAAI,KAAK4zH,aAAA,EAAe;MACtB,KAAKA,aAAA,CAAc2H,aAAA,CAAc,IAAI;IACvC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA4C,kBAAkBpX,QAAA,EAAU;IAC1B,KAAK8X,SAAA,GAAY9X,QAAA;IACjB,KAAKpmI,MAAA,CAAOqmC,IAAA,CAAK+/F,QAAQ;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIv0G,KAAA,EAAO;IACT,OAAOgqH,WAAA,CAAY,KAAK39I,IAAA,IAAQ,OAAO,KAAKA,IAAA,GAAO,KAAKA,IAAA,CAAKyC,QAAA,CAAS,GAAG,KAAKurF,OAAO;EACvF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI+mD,cAAA,EAAgB;IAClB,OAAO,KAAK/mD,OAAA,GAAU,KAAKA,OAAA,CAAQ+mD,aAAA,GAAgB;EACrD;EACAgO,iBAAA,EAAmB;IACjB,IAAI,OAAOjiJ,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,EAAE,KAAKktF,OAAA,YAAmB+6D,aAAA,KAAkB,KAAK/6D,OAAA,YAAmBk1D,0BAAA,EAA4B;QAClG,MAAMrM,qBAAA,CAAsB;MAC9B,WAAW,EAAE,KAAK7oD,OAAA,YAAmB+6D,aAAA,KAAkB,EAAE,KAAK/6D,OAAA,YAAmB45D,kBAAA,KAAuB,EAAE,KAAK55D,OAAA,YAAmBo7D,aAAA,GAAgB;QAChJ,MAAMxS,sBAAA,CAAuB;MAC/B;IACF;EACF;EACAwN,cAAA,EAAgB;IACd,KAAKrB,gBAAA,CAAiB;IACtB,KAAKhlE,OAAA,GAAU,KAAKg3D,aAAA,CAAc0H,UAAA,CAAW,IAAI;IACjD,KAAKiN,MAAA,GAAS;EAChB;AAqBF;AA3GID,gBAAA,CAAK1I,uBAAA,GAA0B;AAwF/B0I,gBAAA,CAAK7/I,IAAA,GAAO,SAAS+/I,wBAAwB1lJ,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKwlJ,gBAAA,EAAoBp+F,iBAAA,CAAkBypF,gBAAA,EAAkB,EAAE,GAAMzpF,iBAAA,CAAkBqlF,aAAA,EAAe,EAAE,GAAMrlF,iBAAA,CAAkBslF,mBAAA,EAAqB,EAAE,GAAMtlF,iBAAA,CAAkBujF,iBAAA,EAAmB,EAAE,GAAMvjF,iBAAA,CAAkB87F,kCAAA,EAAoC,CAAC,CAAC;AAChR;AAGAsC,gBAAA,CAAK5gH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMuiJ,gBAAA;EACN1gH,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,MAAM;IACtD5K,UAAA,EAAY,CAAI1c,UAAA,CAAasnB,IAAA,EAAM,YAAY,YAAY;IAC3D+wE,KAAA,EAAO,CAAIr4F,UAAA,CAAasnB,IAAA,EAAM,WAAW,OAAO;EAClD;EACAtqC,OAAA,EAAS;IACPnnC,MAAA,EAAQ;EACV;EACA2W,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACmvE,kBAAkB,CAAC,GAAM50D,0BAAA,EAA+BvrD,oBAAoB;AAChH,CAAC;AA3HL,IAAMogH,eAAA,GAANC,gBAAA;AAAA,CA8HC,MAAM;EACL,CAAC,OAAO3oJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq/I,eAAA,EAAiB,CAAC;IACxFtiJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACkxI,kBAAkB;IAChC,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTriJ,IAAA,EAAM4tI,gBAAA;IACNnhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,GAAG;MACDz8I,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC68H,aAAa;IACtB,CAAC;EACH,GAAG;IACDxpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC88H,mBAAmB;IAC5B,CAAC;EACH,GAAG;IACDzpI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC+6H,iBAAiB;IAC1B,CAAC;EACH,GAAG;IACD1nI,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACszI,kCAAkC;IAC3C,CAAC;EACH,CAAC,GAAG;IACFnnJ,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACD80D,UAAA,EAAY,CAAC;MACXzhE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;IACDywI,KAAA,EAAO,CAAC;MACNp9I,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACD/R,MAAA,EAAQ,CAAC;MACPoF,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM+1I,qBAAA,GAAwB;EAC5B9wI,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAM04H,0BAA0B;EACxD5wI,KAAA,EAAO;AACT;AACA,SAAS6wI,oBAAoBnlI,EAAA,EAAIvkB,KAAA,EAAO;EACtC,IAAIukB,EAAA,IAAM,MAAM,OAAO,GAAGvkB,KAAK;EAC/B,IAAIA,KAAA,IAAS,OAAOA,KAAA,KAAU,UAAUA,KAAA,GAAQ;EAChD,OAAO,GAAGukB,EAAE,KAAKvkB,KAAK,GAAGH,KAAA,CAAM,GAAG,EAAE;AACtC;AACA,SAAS8pJ,aAAaC,WAAA,EAAa;EACjC,OAAOA,WAAA,CAAYrqJ,KAAA,CAAM,GAAG,EAAE,CAAC;AACjC;AAyDA,IAAMsqJ,2BAAA,GAAN,MAAMA,2BAAA,SAAmCtb,2BAAA,CAA4B;EACnEtvI,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKivI,UAAA,GAAa,mBAAI1qJ,GAAA,CAAI;IAE1B,KAAK2qJ,UAAA,GAAa;IAClB,KAAKC,YAAA,GAAeppJ,MAAA,CAAOk/I,EAAA;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIxlD,YAAYh4F,EAAA,EAAI;IAClB,IAAI,OAAOA,EAAA,KAAO,eAAe,OAAO5B,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/E,MAAM,IAAI6T,YAAA,CAAc,MAAkD,gDAAgD5N,IAAA,CAAKC,SAAA,CAAUtE,EAAE,CAAC,EAAE;IAChJ;IACA,KAAK0nJ,YAAA,GAAe1nJ,EAAA;EACtB;EAAA;AAAA;AAAA;AAAA;EAKAssI,WAAW5uI,KAAA,EAAO;IAChB,KAAKA,KAAA,GAAQA,KAAA;IACb,MAAMukB,EAAA,GAAK,KAAK0lI,YAAA,CAAajqJ,KAAK;IAClC,MAAM4pJ,WAAA,GAAcF,mBAAA,CAAoBnlI,EAAA,EAAIvkB,KAAK;IACjD,KAAK2mB,WAAA,CAAY,SAASijI,WAAW;EACvC;EAAA;AAAA;AAAA;AAAA;EAKA5b,iBAAiB1rI,EAAA,EAAI;IACnB,KAAKurI,QAAA,GAAW+b,WAAA,IAAe;MAC7B,KAAK5pJ,KAAA,GAAQ,KAAKkqJ,eAAA,CAAgBN,WAAW;MAC7CtnJ,EAAA,CAAG,KAAKtC,KAAK;IACf;EACF;EAAA;EAEAmqJ,gBAAA,EAAkB;IAChB,QAAQ,KAAKJ,UAAA,IAAc1nJ,QAAA,CAAS;EACtC;EAAA;EAEA4nJ,aAAajqJ,KAAA,EAAO;IAClB,WAAWukB,EAAA,IAAM,KAAKulI,UAAA,CAAW9oJ,IAAA,CAAK,GAAG;MACvC,IAAI,KAAKgpJ,YAAA,CAAa,KAAKF,UAAA,CAAW1pJ,GAAA,CAAImkB,EAAE,GAAGvkB,KAAK,GAAG,OAAOukB,EAAA;IAChE;IACA,OAAO;EACT;EAAA;EAEA2lI,gBAAgBN,WAAA,EAAa;IAC3B,MAAMrlI,EAAA,GAAKolI,YAAA,CAAaC,WAAW;IACnC,OAAO,KAAKE,UAAA,CAAW3pJ,GAAA,CAAIokB,EAAE,IAAI,KAAKulI,UAAA,CAAW1pJ,GAAA,CAAImkB,EAAE,IAAIqlI,WAAA;EAC7D;AA4BF;AA1BIC,2BAAA,CAAKrgJ,IAAA,GAAuB,sBAAM;EAChC,IAAI4gJ,uCAAA;EACJ,OAAO,SAASC,mCAAmCxmJ,CAAA,EAAG;IACpD,QAAQumJ,uCAAA,KAA4CA,uCAAA,GAA6ClmG,qBAAA,CAAsB2lG,2BAA0B,IAAIhmJ,CAAA,IAAKgmJ,2BAA0B;EACtL;AACF,GAAG;AAGHA,2BAAA,CAAKphH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM+iJ,2BAAA;EACNlhH,SAAA,EAAW,CAAC,CAAC,UAAU,mBAAmB,IAAI,GAAG,YAAY,EAAE,GAAG,CAAC,UAAU,eAAe,IAAI,GAAG,YAAY,EAAE,GAAG,CAAC,UAAU,WAAW,IAAI,GAAG,YAAY,EAAE,CAAC;EAChK4iB,YAAA,EAAc,SAAS++F,wCAAwCl+G,EAAA,EAAIlb,GAAA,EAAK;IACtE,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAAS8+F,qDAAqD5+F,MAAA,EAAQ;QAC5F,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAA,CAAOlc,KAAK;MACzC,CAAC,EAAE,QAAQ,SAASwqJ,mDAAA,EAAqD;QACvE,OAAOt5H,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAllG,MAAA,EAAQ;IACN0xD,WAAA,EAAa;EACf;EACAjiF,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACwvE,qBAAqB,CAAC,GAAMj1D,0BAA0B;AAC1F,CAAC;AAjFL,IAAMk1D,0BAAA,GAANI,2BAAA;AAAA,CAoFC,MAAM;EACL,CAAC,OAAOnpJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0/I,0BAAA,EAA4B,CAAC;IACnG3iJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,YAAY;QACZ,UAAU;MACZ;MACAlG,SAAA,EAAW,CAACuxI,qBAAqB;IACnC,CAAC;EACH,CAAC,GAAG,MAAM;IACRlvD,WAAA,EAAa,CAAC;MACZxzF,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAWH,IAAMshH,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBxrJ,YAAY0rE,QAAA,EAAUma,SAAA,EAAW4lE,OAAA,EAAS;IACxC,KAAK//E,QAAA,GAAWA,QAAA;IAChB,KAAKma,SAAA,GAAYA,SAAA;IACjB,KAAK4lE,OAAA,GAAUA,OAAA;IACf,IAAI,KAAKA,OAAA,EAAS,KAAKnmI,EAAA,GAAK,KAAKmmI,OAAA,CAAQP,eAAA,CAAgB;EAC3D;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIQ,QAAQ3qJ,KAAA,EAAO;IACjB,IAAI,KAAK0qJ,OAAA,IAAW,MAAM;IAC1B,KAAKA,OAAA,CAAQZ,UAAA,CAAWxpJ,GAAA,CAAI,KAAKikB,EAAA,EAAIvkB,KAAK;IAC1C,KAAK4qJ,gBAAA,CAAiBlB,mBAAA,CAAoB,KAAKnlI,EAAA,EAAIvkB,KAAK,CAAC;IACzD,KAAK0qJ,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIA,MAAMA,KAAA,EAAO;IACf,KAAK4qJ,gBAAA,CAAiB5qJ,KAAK;IAC3B,IAAI,KAAK0qJ,OAAA,EAAS,KAAKA,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;EAC9D;EAAA;EAEA4qJ,iBAAiB5qJ,KAAA,EAAO;IACtB,KAAK8kF,SAAA,CAAUn+D,WAAA,CAAY,KAAKgkD,QAAA,CAASzgB,aAAA,EAAe,SAASlqD,KAAK;EACxE;EAAA;EAEA+gB,YAAA,EAAc;IACZ,IAAI,KAAK2pI,OAAA,EAAS;MAChB,KAAKA,OAAA,CAAQZ,UAAA,CAAWvoJ,MAAA,CAAO,KAAKgjB,EAAE;MACtC,KAAKmmI,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;IAC5C;EACF;AAgBF;AAdIyqJ,eAAA,CAAKjhJ,IAAA,GAAO,SAASqhJ,uBAAuBhnJ,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAK4mJ,eAAA,EAAmBx/F,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAkBw+F,0BAAA,EAA4B,CAAC,CAAC;AAC/J;AAGAgB,eAAA,CAAKhiH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM2jJ,eAAA;EACN9hH,SAAA,EAAW,CAAC,CAAC,QAAQ,CAAC;EACtBC,MAAA,EAAQ;IACN+hH,OAAA,EAAS;IACT3qJ,KAAA,EAAO;EACT;AACF,CAAC;AAnDL,IAAM8qJ,cAAA,GAANL,eAAA;AAAA,CAsDC,MAAM;EACL,CAAC,OAAO/pJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+gJ,cAAA,EAAgB,CAAC;IACvFhkJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTvmB,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAAM2iJ,0BAAA;IACNl2I,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,CAAC;EACH,CAAC,GAAG;IACFoH,OAAA,EAAS,CAAC;MACR7jJ,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACDzT,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,OAAO;IAChB,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMs3I,8BAAA,GAAiC;EACrCryI,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAMi6H,kCAAkC;EAChEnyI,KAAA,EAAO;AACT;AACA,SAASoyI,kBAAkB1mI,EAAA,EAAIvkB,KAAA,EAAO;EACpC,IAAIukB,EAAA,IAAM,MAAM,OAAO,GAAGvkB,KAAK;EAC/B,IAAI,OAAOA,KAAA,KAAU,UAAUA,KAAA,GAAQ,IAAIA,KAAK;EAChD,IAAIA,KAAA,IAAS,OAAOA,KAAA,KAAU,UAAUA,KAAA,GAAQ;EAChD,OAAO,GAAGukB,EAAE,KAAKvkB,KAAK,GAAGH,KAAA,CAAM,GAAG,EAAE;AACtC;AACA,SAASqrJ,WAAWtB,WAAA,EAAa;EAC/B,OAAOA,WAAA,CAAYrqJ,KAAA,CAAM,GAAG,EAAE,CAAC;AACjC;AAsCA,IAAM4rJ,mCAAA,GAAN,MAAMA,mCAAA,SAA2C5c,2BAAA,CAA4B;EAC3EtvI,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKivI,UAAA,GAAa,mBAAI1qJ,GAAA,CAAI;IAE1B,KAAK2qJ,UAAA,GAAa;IAClB,KAAKC,YAAA,GAAeppJ,MAAA,CAAOk/I,EAAA;EAC7B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIxlD,YAAYh4F,EAAA,EAAI;IAClB,IAAI,OAAOA,EAAA,KAAO,eAAe,OAAO5B,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/E,MAAM,IAAI6T,YAAA,CAAc,MAAkD,gDAAgD5N,IAAA,CAAKC,SAAA,CAAUtE,EAAE,CAAC,EAAE;IAChJ;IACA,KAAK0nJ,YAAA,GAAe1nJ,EAAA;EACtB;EAAA;AAAA;AAAA;AAAA;EAKAssI,WAAW5uI,KAAA,EAAO;IAChB,KAAKA,KAAA,GAAQA,KAAA;IACb,IAAIorJ,yBAAA;IACJ,IAAInqJ,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,GAAG;MAExB,MAAMshE,GAAA,GAAMthE,KAAA,CAAMoC,GAAA,CAAIsB,CAAA,IAAK,KAAKumJ,YAAA,CAAavmJ,CAAC,CAAC;MAC/C0nJ,yBAAA,GAA4BA,CAACC,GAAA,EAAKrsH,CAAA,KAAM;QACtCqsH,GAAA,CAAIC,YAAA,CAAahqF,GAAA,CAAI3hE,OAAA,CAAQq/B,CAAA,CAAE38B,QAAA,CAAS,CAAC,IAAI,EAAE;MACjD;IACF,OAAO;MACL+oJ,yBAAA,GAA4BA,CAACC,GAAA,EAAKrsH,CAAA,KAAM;QACtCqsH,GAAA,CAAIC,YAAA,CAAa,KAAK;MACxB;IACF;IACA,KAAKxB,UAAA,CAAWtqJ,OAAA,CAAQ4rJ,yBAAyB;EACnD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMApd,iBAAiB1rI,EAAA,EAAI;IACnB,KAAKurI,QAAA,GAAW3uH,OAAA,IAAW;MACzB,MAAM47D,QAAA,GAAW,EAAC;MAClB,MAAMywE,eAAA,GAAkBrsI,OAAA,CAAQqsI,eAAA;MAChC,IAAIA,eAAA,KAAoB,QAAW;QACjC,MAAMtnJ,OAAA,GAAUsnJ,eAAA;QAChB,SAASp3H,CAAA,GAAI,GAAGA,CAAA,GAAIlwB,OAAA,CAAQlD,MAAA,EAAQozB,CAAA,IAAK;UACvC,MAAMk3H,GAAA,GAAMpnJ,OAAA,CAAQkwB,CAAC;UACrB,MAAM7wB,GAAA,GAAM,KAAK4mJ,eAAA,CAAgBmB,GAAA,CAAIrrJ,KAAK;UAC1C86E,QAAA,CAASz6E,IAAA,CAAKiD,GAAG;QACnB;MACF,OAIK;QACH,MAAMW,OAAA,GAAUib,OAAA,CAAQjb,OAAA;QACxB,SAASkwB,CAAA,GAAI,GAAGA,CAAA,GAAIlwB,OAAA,CAAQlD,MAAA,EAAQozB,CAAA,IAAK;UACvC,MAAMk3H,GAAA,GAAMpnJ,OAAA,CAAQkwB,CAAC;UACrB,IAAIk3H,GAAA,CAAIvwE,QAAA,EAAU;YAChB,MAAMx3E,GAAA,GAAM,KAAK4mJ,eAAA,CAAgBmB,GAAA,CAAIrrJ,KAAK;YAC1C86E,QAAA,CAASz6E,IAAA,CAAKiD,GAAG;UACnB;QACF;MACF;MACA,KAAKtD,KAAA,GAAQ86E,QAAA;MACbx4E,EAAA,CAAGw4E,QAAQ;IACb;EACF;EAAA;EAEAqvE,gBAAgBnqJ,KAAA,EAAO;IACrB,MAAMukB,EAAA,IAAM,KAAKwlI,UAAA,IAAc1nJ,QAAA,CAAS;IACxC,KAAKynJ,UAAA,CAAWxpJ,GAAA,CAAIikB,EAAA,EAAIvkB,KAAK;IAC7B,OAAOukB,EAAA;EACT;EAAA;EAEA0lI,aAAajqJ,KAAA,EAAO;IAClB,WAAWukB,EAAA,IAAM,KAAKulI,UAAA,CAAW9oJ,IAAA,CAAK,GAAG;MACvC,IAAI,KAAKgpJ,YAAA,CAAa,KAAKF,UAAA,CAAW1pJ,GAAA,CAAImkB,EAAE,EAAE9f,MAAA,EAAQzE,KAAK,GAAG,OAAOukB,EAAA;IACvE;IACA,OAAO;EACT;EAAA;EAEA2lI,gBAAgBN,WAAA,EAAa;IAC3B,MAAMrlI,EAAA,GAAK2mI,UAAA,CAAWtB,WAAW;IACjC,OAAO,KAAKE,UAAA,CAAW3pJ,GAAA,CAAIokB,EAAE,IAAI,KAAKulI,UAAA,CAAW1pJ,GAAA,CAAImkB,EAAE,EAAE9f,MAAA,GAASmlJ,WAAA;EACpE;AA4BF;AA1BIuB,mCAAA,CAAK3hJ,IAAA,GAAuB,sBAAM;EAChC,IAAIgiJ,+CAAA;EACJ,OAAO,SAASC,2CAA2C5nJ,CAAA,EAAG;IAC5D,QAAQ2nJ,+CAAA,KAAoDA,+CAAA,GAAqDtnG,qBAAA,CAAsBinG,mCAAkC,IAAItnJ,CAAA,IAAKsnJ,mCAAkC;EACtN;AACF,GAAG;AAGHA,mCAAA,CAAK1iH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMqkJ,mCAAA;EACNxiH,SAAA,EAAW,CAAC,CAAC,UAAU,YAAY,IAAI,mBAAmB,EAAE,GAAG,CAAC,UAAU,YAAY,IAAI,eAAe,EAAE,GAAG,CAAC,UAAU,YAAY,IAAI,WAAW,EAAE,CAAC;EACvJ4iB,YAAA,EAAc,SAASmgG,gDAAgDt/G,EAAA,EAAIlb,GAAA,EAAK;IAC9E,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,UAAU,SAASkgG,6DAA6DhgG,MAAA,EAAQ;QACpG,OAAOz6B,GAAA,CAAI28G,QAAA,CAASliF,MAAA,CAAOzvC,MAAM;MACnC,CAAC,EAAE,QAAQ,SAAS0vI,2DAAA,EAA6D;QAC/E,OAAO16H,GAAA,CAAI48G,SAAA,CAAU;MACvB,CAAC;IACH;EACF;EACAllG,MAAA,EAAQ;IACN0xD,WAAA,EAAa;EACf;EACAjiF,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC+wE,8BAA8B,CAAC,GAAMx2D,0BAA0B;AACnG,CAAC;AArHL,IAAMy2D,kCAAA,GAANG,mCAAA;AAAA,CAwHC,MAAM;EACL,CAAC,OAAOzqJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBihJ,kCAAA,EAAoC,CAAC;IAC3GlkJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,YAAY;QACZ,UAAU;MACZ;MACAlG,SAAA,EAAW,CAAC8yI,8BAA8B;IAC5C,CAAC;EACH,CAAC,GAAG,MAAM;IACRzwD,WAAA,EAAa,CAAC;MACZxzF,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAWH,IAAM0iH,wBAAA,GAAN,MAAMA,wBAAA,CAAwB;EAC5B5sJ,YAAY0rE,QAAA,EAAUma,SAAA,EAAW4lE,OAAA,EAAS;IACxC,KAAK//E,QAAA,GAAWA,QAAA;IAChB,KAAKma,SAAA,GAAYA,SAAA;IACjB,KAAK4lE,OAAA,GAAUA,OAAA;IACf,IAAI,KAAKA,OAAA,EAAS;MAChB,KAAKnmI,EAAA,GAAK,KAAKmmI,OAAA,CAAQP,eAAA,CAAgB,IAAI;IAC7C;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIQ,QAAQ3qJ,KAAA,EAAO;IACjB,IAAI,KAAK0qJ,OAAA,IAAW,MAAM;IAC1B,KAAKjmJ,MAAA,GAASzE,KAAA;IACd,KAAK4qJ,gBAAA,CAAiBK,iBAAA,CAAkB,KAAK1mI,EAAA,EAAIvkB,KAAK,CAAC;IACvD,KAAK0qJ,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;EAC5C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIA,MAAMA,KAAA,EAAO;IACf,IAAI,KAAK0qJ,OAAA,EAAS;MAChB,KAAKjmJ,MAAA,GAASzE,KAAA;MACd,KAAK4qJ,gBAAA,CAAiBK,iBAAA,CAAkB,KAAK1mI,EAAA,EAAIvkB,KAAK,CAAC;MACvD,KAAK0qJ,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;IAC5C,OAAO;MACL,KAAK4qJ,gBAAA,CAAiB5qJ,KAAK;IAC7B;EACF;EAAA;EAEA4qJ,iBAAiB5qJ,KAAA,EAAO;IACtB,KAAK8kF,SAAA,CAAUn+D,WAAA,CAAY,KAAKgkD,QAAA,CAASzgB,aAAA,EAAe,SAASlqD,KAAK;EACxE;EAAA;EAEAsrJ,aAAaxwE,QAAA,EAAU;IACrB,KAAKgK,SAAA,CAAUn+D,WAAA,CAAY,KAAKgkD,QAAA,CAASzgB,aAAA,EAAe,YAAY4wB,QAAQ;EAC9E;EAAA;EAEA/5D,YAAA,EAAc;IACZ,IAAI,KAAK2pI,OAAA,EAAS;MAChB,KAAKA,OAAA,CAAQZ,UAAA,CAAWvoJ,MAAA,CAAO,KAAKgjB,EAAE;MACtC,KAAKmmI,OAAA,CAAQ9b,UAAA,CAAW,KAAK8b,OAAA,CAAQ1qJ,KAAK;IAC5C;EACF;AAgBF;AAdI6rJ,wBAAA,CAAKriJ,IAAA,GAAO,SAASsiJ,gCAAgCjoJ,CAAA,EAAG;EACtD,OAAO,KAAKA,CAAA,IAAKgoJ,wBAAA,EAA4B5gG,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBE,SAAS,GAAMF,iBAAA,CAAkB+/F,kCAAA,EAAoC,CAAC,CAAC;AAChL;AAGAa,wBAAA,CAAKpjH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM+kJ,wBAAA;EACNljH,SAAA,EAAW,CAAC,CAAC,QAAQ,CAAC;EACtBC,MAAA,EAAQ;IACN+hH,OAAA,EAAS;IACT3qJ,KAAA,EAAO;EACT;AACF,CAAC;AA9DL,IAAM+rJ,uBAAA,GAANF,wBAAA;AAAA,CAiEC,MAAM;EACL,CAAC,OAAOnrJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgiJ,uBAAA,EAAyB,CAAC;IAChGjlJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;IACZ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTvmB,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASqkD;EACX,GAAG;IACDrkD,IAAA,EAAMkkJ,kCAAA;IACNz3I,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMy8I;IACR,CAAC;EACH,CAAC,GAAG;IACFoH,OAAA,EAAS,CAAC;MACR7jJ,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACDzT,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,OAAO;IAChB,CAAC;EACH,CAAC;AACH,GAAG;AAQH,SAASu4I,UAAUhsJ,KAAA,EAAO;EACxB,OAAO,OAAOA,KAAA,KAAU,WAAWA,KAAA,GAAQkqE,QAAA,CAASlqE,KAAA,EAAO,EAAE;AAC/D;AAOA,SAASisJ,QAAQjsJ,KAAA,EAAO;EACtB,OAAO,OAAOA,KAAA,KAAU,WAAWA,KAAA,GAAQ66D,UAAA,CAAW76D,KAAK;AAC7D;AAOA,IAAMksJ,2BAAA,GAAN,MAAMA,2BAAA,CAA2B;EAC/BjtJ,YAAA,EAAc;IACZ,KAAKktJ,UAAA,GAAa5a,aAAA;EACpB;EAAA;EAEAzqG,YAAYC,OAAA,EAAS;IACnB,IAAI,KAAKqlH,SAAA,IAAarlH,OAAA,EAAS;MAC7B,MAAM+W,KAAA,GAAQ,KAAKuuG,cAAA,CAAetlH,OAAA,CAAQ,KAAKqlH,SAAS,EAAEprC,YAAY;MACtE,KAAKz2C,QAAA,GAAW,KAAK3F,OAAA,CAAQ9mB,KAAK;MAClC,KAAKquG,UAAA,GAAa,KAAK5hF,QAAA,GAAW,KAAK+hF,eAAA,CAAgBxuG,KAAK,IAAIyzF,aAAA;MAChE,IAAI,KAAK6Q,SAAA,EAAW;QAClB,KAAKA,SAAA,CAAU;MACjB;IACF;EACF;EAAA;EAEA7P,SAAS50D,OAAA,EAAS;IAChB,OAAO,KAAKwuE,UAAA,CAAWxuE,OAAO;EAChC;EAAA;EAEA2gE,0BAA0Bh8I,EAAA,EAAI;IAC5B,KAAK8/I,SAAA,GAAY9/I,EAAA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAsiE,QAAQ9mB,KAAA,EAAO;IACb,OAAOA,KAAA,IAAS;EAClB;AAYF;AAVIouG,2BAAA,CAAK1iJ,IAAA,GAAO,SAAS+iJ,mCAAmC1oJ,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAKqoJ,2BAAA,EAA4B;AAC/C;AAGAA,2BAAA,CAAKzjH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMolJ,2BAAA;EACN7zI,QAAA,EAAU,CAAI2wB,oBAAoB;AACpC,CAAC;AA1CL,IAAMwjH,0BAAA,GAANN,2BAAA;AAAA,CA6CC,MAAM;EACL,CAAC,OAAOxrJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByiJ,0BAAA,EAA4B,CAAC;IACnG1lJ,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMujH,aAAA,GAAgB;EACpB/zI,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAM27H,YAAY;EAC1C7zI,KAAA,EAAO;AACT;AAsBA,IAAM8zI,aAAA,GAAN,MAAMA,aAAA,SAAqBH,0BAAA,CAA2B;EACpDvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBvuG,KAAA,IAASmuG,OAAA,CAAQnuG,KAAK;IAE5C,KAAKwuG,eAAA,GAAkBhtE,GAAA,IAAOqxD,YAAA,CAAarxD,GAAG;EAChD;AAyBF;AAvBIqtE,aAAA,CAAKnjJ,IAAA,GAAuB,sBAAM;EAChC,IAAIojJ,yBAAA;EACJ,OAAO,SAASC,qBAAqBhpJ,CAAA,EAAG;IACtC,QAAQ+oJ,yBAAA,KAA8BA,yBAAA,GAA+B1oG,qBAAA,CAAsByoG,aAAY,IAAI9oJ,CAAA,IAAK8oJ,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAKlkH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6lJ,aAAA;EACNhkH,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,WAAW,EAAE,CAAC;EAC3L2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASuhG,0BAA0B1gH,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,OAAO16B,GAAA,CAAIq5C,QAAA,GAAWr5C,GAAA,CAAIouD,GAAA,GAAM,IAAI;IACrD;EACF;EACA12C,MAAA,EAAQ;IACN02C,GAAA,EAAK;EACP;EACAjnE,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACyyE,aAAa,CAAC,GAAMl4D,0BAA0B;AAClF,CAAC;AAhCL,IAAMm4D,YAAA,GAANC,aAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOjsJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2iJ,YAAA,EAAc,CAAC;IACrF5lJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACw0I,aAAa;MACzBtuI,IAAA,EAAM;QACJ,cAAc;MAChB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRmhE,GAAA,EAAK,CAAC;MACJx4E,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAM4jH,aAAA,GAAgB;EACpBr0I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMi8H,YAAY;EAC1Cn0I,KAAA,EAAO;AACT;AAsBA,IAAMo0I,aAAA,GAAN,MAAMA,aAAA,SAAqBT,0BAAA,CAA2B;EACpDvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBvuG,KAAA,IAASmuG,OAAA,CAAQnuG,KAAK;IAE5C,KAAKwuG,eAAA,GAAkBjtE,GAAA,IAAOqxD,YAAA,CAAarxD,GAAG;EAChD;AAyBF;AAvBI4tE,aAAA,CAAKzjJ,IAAA,GAAuB,sBAAM;EAChC,IAAI0jJ,yBAAA;EACJ,OAAO,SAASC,qBAAqBtpJ,CAAA,EAAG;IACtC,QAAQqpJ,yBAAA,KAA8BA,yBAAA,GAA+BhpG,qBAAA,CAAsB+oG,aAAY,IAAIppJ,CAAA,IAAKopJ,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAKxkH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmmJ,aAAA;EACNtkH,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,UAAU,OAAO,IAAI,WAAW,EAAE,CAAC;EAC3L2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS6hG,0BAA0BhhH,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,OAAO16B,GAAA,CAAIq5C,QAAA,GAAWr5C,GAAA,CAAImuD,GAAA,GAAM,IAAI;IACrD;EACF;EACAz2C,MAAA,EAAQ;IACNy2C,GAAA,EAAK;EACP;EACAhnE,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC+yE,aAAa,CAAC,GAAMx4D,0BAA0B;AAClF,CAAC;AAhCL,IAAMy4D,YAAA,GAANC,aAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOvsJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBijJ,YAAA,EAAc,CAAC;IACrFlmJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC80I,aAAa;MACzB5uI,IAAA,EAAM;QACJ,cAAc;MAChB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRkhE,GAAA,EAAK,CAAC;MACJv4E,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMkkH,kBAAA,GAAqB;EACzB30I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMu8H,iBAAiB;EAC/Cz0I,KAAA,EAAO;AACT;AAKA,IAAM00I,2BAAA,GAA8B;EAClC70I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMy8H,yBAAyB;EACvD30I,KAAA,EAAO;AACT;AAoBA,IAAM40I,kBAAA,GAAN,MAAMA,kBAAA,SAA0BjB,0BAAA,CAA2B;EACzDvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBtgG,gBAAA;IAEtB,KAAKugG,eAAA,GAAkBxuG,KAAA,IAAS8yF,iBAAA;EAClC;EAAA;EAEAhsE,QAAQ9mB,KAAA,EAAO;IACb,OAAOA,KAAA;EACT;AAyBF;AAvBI2vG,kBAAA,CAAKjkJ,IAAA,GAAuB,sBAAM;EAChC,IAAIkkJ,8BAAA;EACJ,OAAO,SAASC,0BAA0B9pJ,CAAA,EAAG;IAC3C,QAAQ6pJ,8BAAA,KAAmCA,8BAAA,GAAoCxpG,qBAAA,CAAsBupG,kBAAiB,IAAI5pJ,CAAA,IAAK4pJ,kBAAiB;EAClJ;AACF,GAAG;AAGHA,kBAAA,CAAKhlH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM2mJ,kBAAA;EACN9kH,SAAA,EAAW,CAAC,CAAC,IAAI,YAAY,IAAI,mBAAmB,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,IAAI,YAAY,IAAI,eAAe,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,IAAI,YAAY,IAAI,WAAW,IAAI,GAAG,QAAQ,UAAU,CAAC;EAC1M2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASqiG,+BAA+BxhH,EAAA,EAAIlb,GAAA,EAAK;IAC7D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAIq5C,QAAA,GAAW,KAAK,IAAI;IACrD;EACF;EACA3hC,MAAA,EAAQ;IACN8pD,QAAA,EAAU;EACZ;EACAr6E,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACqzE,kBAAkB,CAAC,GAAM94D,0BAA0B;AACvF,CAAC;AApCL,IAAM+4D,iBAAA,GAANG,kBAAA;AAAA,CAuCC,MAAM;EACL,CAAC,OAAO/sJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBujJ,iBAAA,EAAmB,CAAC;IAC1FxmJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACo1I,kBAAkB;MAC9BlvI,IAAA,EAAM;QACJ,mBAAmB;MACrB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRu0E,QAAA,EAAU,CAAC;MACT5rF,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAsBH,IAAM0kH,0BAAA,GAAN,MAAMA,0BAAA,SAAkCP,iBAAA,CAAkB;EACxDruJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKyxI,eAAA,GAAkBxuG,KAAA,IAASgzF,qBAAA;EAClC;AAsBF;AApBI+c,0BAAA,CAAKrkJ,IAAA,GAAuB,sBAAM;EAChC,IAAIskJ,sCAAA;EACJ,OAAO,SAASC,kCAAkClqJ,CAAA,EAAG;IACnD,QAAQiqJ,sCAAA,KAA2CA,sCAAA,GAA4C5pG,qBAAA,CAAsB2pG,0BAAyB,IAAIhqJ,CAAA,IAAKgqJ,0BAAyB;EAClL;AACF,GAAG;AAGHA,0BAAA,CAAKplH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM+mJ,0BAAA;EACNllH,SAAA,EAAW,CAAC,CAAC,SAAS,QAAQ,YAAY,YAAY,IAAI,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,YAAY,IAAI,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,YAAY,IAAI,WAAW,EAAE,CAAC;EAChN2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASyiG,uCAAuC5hH,EAAA,EAAIlb,GAAA,EAAK;IACrE,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,YAAY16B,GAAA,CAAIq5C,QAAA,GAAW,KAAK,IAAI;IACrD;EACF;EACAlyD,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACuzE,2BAA2B,CAAC,GAAMh5D,0BAA0B;AAChG,CAAC;AAzBL,IAAMi5D,yBAAA,GAANK,0BAAA;AAAA,CA4BC,MAAM;EACL,CAAC,OAAOntJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkByjJ,yBAAA,EAA2B,CAAC;IAClG1mJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACs1I,2BAA2B;MACvCpvI,IAAA,EAAM;QACJ,mBAAmB;MACrB;IACF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAM8vI,eAAA,GAAkB;EACtBv1I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMm9H,cAAc;EAC5Cr1I,KAAA,EAAO;AACT;AA4BA,IAAMs1I,eAAA,GAAN,MAAMA,eAAA,SAAuB3B,0BAAA,CAA2B;EACtDvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBtgG,gBAAA;IAEtB,KAAKugG,eAAA,GAAkBxuG,KAAA,IAASkzF,cAAA;EAClC;EAAA;EAEApsE,QAAQ9mB,KAAA,EAAO;IACb,OAAOA,KAAA;EACT;AAmBF;AAjBIqwG,eAAA,CAAK3kJ,IAAA,GAAuB,sBAAM;EAChC,IAAI4kJ,2BAAA;EACJ,OAAO,SAASC,uBAAuBxqJ,CAAA,EAAG;IACxC,QAAQuqJ,2BAAA,KAAgCA,2BAAA,GAAiClqG,qBAAA,CAAsBiqG,eAAc,IAAItqJ,CAAA,IAAKsqJ,eAAc;EACtI;AACF,GAAG;AAGHA,eAAA,CAAK1lH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMqnJ,eAAA;EACNxlH,SAAA,EAAW,CAAC,CAAC,IAAI,SAAS,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,SAAS,IAAI,eAAe,EAAE,GAAG,CAAC,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC;EAC5HC,MAAA,EAAQ;IACNmoG,KAAA,EAAO;EACT;EACA14H,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACi0E,eAAe,CAAC,GAAM15D,0BAA0B;AACpF,CAAC;AA9BL,IAAM25D,cAAA,GAANC,eAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOztJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmkJ,cAAA,EAAgB,CAAC;IACvFpnJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACg2I,eAAe;IAC7B,CAAC;EACH,CAAC,GAAG,MAAM;IACRld,KAAA,EAAO,CAAC;MACNjqI,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMmlH,oBAAA,GAAuB;EAC3B51I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMw9H,kBAAkB;EAChD11I,KAAA,EAAO;AACT;AAsBA,IAAM21I,mBAAA,GAAN,MAAMA,mBAAA,SAA2BhC,0BAAA,CAA2B;EAC1DvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBvuG,KAAA,IAASkuG,SAAA,CAAUluG,KAAK;IAE9C,KAAKwuG,eAAA,GAAkBmC,SAAA,IAAavd,kBAAA,CAAmBud,SAAS;EAClE;AAyBF;AAvBID,mBAAA,CAAKhlJ,IAAA,GAAuB,sBAAM;EAChC,IAAIklJ,+BAAA;EACJ,OAAO,SAASC,2BAA2B9qJ,CAAA,EAAG;IAC5C,QAAQ6qJ,+BAAA,KAAoCA,+BAAA,GAAqCxqG,qBAAA,CAAsBsqG,mBAAkB,IAAI3qJ,CAAA,IAAK2qJ,mBAAkB;EACtJ;AACF,GAAG;AAGHA,mBAAA,CAAK/lH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0nJ,mBAAA;EACN7lH,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,aAAa,IAAI,eAAe,EAAE,GAAG,CAAC,IAAI,aAAa,IAAI,WAAW,EAAE,CAAC;EACxI2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASqjG,gCAAgCxiH,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,aAAa16B,GAAA,CAAIq5C,QAAA,GAAWr5C,GAAA,CAAIu9H,SAAA,GAAY,IAAI;IACjE;EACF;EACA7lH,MAAA,EAAQ;IACN6lH,SAAA,EAAW;EACb;EACAp2I,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACs0E,oBAAoB,CAAC,GAAM/5D,0BAA0B;AACzF,CAAC;AAhCL,IAAMg6D,kBAAA,GAANC,mBAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAO9tJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwkJ,kBAAA,EAAoB,CAAC;IAC3FznJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACq2I,oBAAoB;MAChCnwI,IAAA,EAAM;QACJ,oBAAoB;MACtB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRswI,SAAA,EAAW,CAAC;MACV3nJ,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAM0lH,oBAAA,GAAuB;EAC3Bn2I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAM+9H,kBAAkB;EAChDj2I,KAAA,EAAO;AACT;AAsBA,IAAMk2I,mBAAA,GAAN,MAAMA,mBAAA,SAA2BvC,0BAAA,CAA2B;EAC1DvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBvuG,KAAA,IAASkuG,SAAA,CAAUluG,KAAK;IAE9C,KAAKwuG,eAAA,GAAkB0C,SAAA,IAAa5d,kBAAA,CAAmB4d,SAAS;EAClE;AAyBF;AAvBID,mBAAA,CAAKvlJ,IAAA,GAAuB,sBAAM;EAChC,IAAIylJ,+BAAA;EACJ,OAAO,SAASC,2BAA2BrrJ,CAAA,EAAG;IAC5C,QAAQorJ,+BAAA,KAAoCA,+BAAA,GAAqC/qG,qBAAA,CAAsB6qG,mBAAkB,IAAIlrJ,CAAA,IAAKkrJ,mBAAkB;EACtJ;AACF,GAAG;AAGHA,mBAAA,CAAKtmH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMioJ,mBAAA;EACNpmH,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,aAAa,IAAI,eAAe,EAAE,GAAG,CAAC,IAAI,aAAa,IAAI,WAAW,EAAE,CAAC;EACxI2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS4jG,gCAAgC/iH,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,aAAa16B,GAAA,CAAIq5C,QAAA,GAAWr5C,GAAA,CAAI89H,SAAA,GAAY,IAAI;IACjE;EACF;EACApmH,MAAA,EAAQ;IACNomH,SAAA,EAAW;EACb;EACA32I,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC60E,oBAAoB,CAAC,GAAMt6D,0BAA0B;AACzF,CAAC;AAhCL,IAAMu6D,kBAAA,GAANC,mBAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOruJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+kJ,kBAAA,EAAoB,CAAC;IAC3FhoJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC42I,oBAAoB;MAChC1wI,IAAA,EAAM;QACJ,oBAAoB;MACtB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACR6wI,SAAA,EAAW,CAAC;MACVloJ,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMimH,iBAAA,GAAoB;EACxB12I,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAMs+H,gBAAgB;EAC9Cx2I,KAAA,EAAO;AACT;AAwBA,IAAMy2I,iBAAA,GAAN,MAAMA,iBAAA,SAAyB9C,0BAAA,CAA2B;EACxDvtJ,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKuxI,SAAA,GAAY;IAEjB,KAAKC,cAAA,GAAiBvuG,KAAA,IAASA,KAAA;IAE/B,KAAKwuG,eAAA,GAAkBxuG,KAAA,IAASwzF,gBAAA,CAAiBxzF,KAAK;EACxD;AAyBF;AAvBIwxG,iBAAA,CAAK9lJ,IAAA,GAAuB,sBAAM;EAChC,IAAI+lJ,6BAAA;EACJ,OAAO,SAASC,yBAAyB3rJ,CAAA,EAAG;IAC1C,QAAQ0rJ,6BAAA,KAAkCA,6BAAA,GAAmCrrG,qBAAA,CAAsBorG,iBAAgB,IAAIzrJ,CAAA,IAAKyrJ,iBAAgB;EAC9I;AACF,GAAG;AAGHA,iBAAA,CAAK7mH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwoJ,iBAAA;EACN3mH,SAAA,EAAW,CAAC,CAAC,IAAI,WAAW,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,WAAW,IAAI,eAAe,EAAE,GAAG,CAAC,IAAI,WAAW,IAAI,WAAW,EAAE,CAAC;EAClI2iB,QAAA,EAAU;EACVC,YAAA,EAAc,SAASkkG,8BAA8BrjH,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,WAAW16B,GAAA,CAAIq5C,QAAA,GAAWr5C,GAAA,CAAImgH,OAAA,GAAU,IAAI;IAC7D;EACF;EACAzoG,MAAA,EAAQ;IACNyoG,OAAA,EAAS;EACX;EACAh5H,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACo1E,iBAAiB,CAAC,GAAM76D,0BAA0B;AACtF,CAAC;AAhCL,IAAM86D,gBAAA,GAANC,iBAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAO5uJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBslJ,gBAAA,EAAkB,CAAC;IACzFvoJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAACm3I,iBAAiB;MAC7BjxI,IAAA,EAAM;QACJ,kBAAkB;MACpB;IACF,CAAC;EACH,CAAC,GAAG,MAAM;IACRkzH,OAAA,EAAS,CAAC;MACRvqI,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMumH,sBAAA,GAAyB,CAACjL,aAAA,EAAeqG,cAAA,EAAgBiB,uBAAA,EAAyB3c,oBAAA,EAAsBuV,mBAAA,EAAqB4B,kBAAA,EAAoB7X,4BAAA,EAA8B+a,0BAAA,EAA4BuB,kCAAA,EAAoC7F,yBAAA,EAA2BtP,eAAA,EAAiBK,oBAAA,EAAsBoX,iBAAA,EAAmBiB,kBAAA,EAAoBO,kBAAA,EAAoBO,gBAAA,EAAkB7B,yBAAA,EAA2BU,cAAA,EAAgBlB,YAAA,EAAcN,YAAY;AACzc,IAAMiD,0BAAA,GAA6B,CAAClM,OAAA,EAASL,YAAA,EAActC,MAAM;AACjE,IAAM8O,0BAAA,GAA6B,CAAC3I,oBAAA,EAAsBO,kBAAA,EAAoB4B,eAAA,EAAiBT,aAAA,EAAeK,aAAa;AAI3H,IAAM6G,2BAAA,GAAN,MAAMA,2BAAA,CAA2B,EAcjC;AAZIA,2BAAA,CAAKrmJ,IAAA,GAAO,SAASsmJ,mCAAmCjsJ,CAAA,EAAG;EACzD,OAAO,KAAKA,CAAA,IAAKgsJ,2BAAA,EAA4B;AAC/C;AAGAA,2BAAA,CAAK/1I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM+oJ;AACR,CAAC;AAGDA,2BAAA,CAAK71I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAM81I,0BAAA,GAANF,2BAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOnvJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgmJ,0BAAA,EAA4B,CAAC;IACnGjpJ,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLu8I,YAAA,EAAcN,sBAAA;MACdpjI,OAAA,EAASojI;IACX,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAqEH,IAAMO,SAAA,GAAN,cAAwB1X,eAAA,CAAgB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EActCt5I,YAAYk5I,QAAA,EAAUR,eAAA,EAAiBvD,cAAA,EAAgB;IACrD,MAAMsD,cAAA,CAAeC,eAAe,GAAGG,mBAAA,CAAoB1D,cAAA,EAAgBuD,eAAe,CAAC;IAC3F,KAAKQ,QAAA,GAAWA,QAAA;IAChB,KAAKsD,gBAAA,CAAiB;IACtB,KAAKM,kBAAA,CAAmBpE,eAAe;IACvC,KAAKwE,cAAA,CAAe;IACpB,KAAK1B,sBAAA,CAAuB;MAC1Bb,QAAA,EAAU;MAAA;MAAA;MAAA;MAAA;MAKVprD,SAAA,EAAW,CAAC,CAAC,KAAK4lD;IACpB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA8b,GAAGxwJ,KAAA,EAAO;IACR,OAAO,KAAKy4I,QAAA,CAAS,KAAKgY,YAAA,CAAazwJ,KAAK,CAAC;EAC/C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAW,KAAKs9E,OAAA,EAAS15E,OAAA,GAAU,CAAC,GAAG;IAC1B,KAAKk0I,QAAA,CAAS93I,IAAA,CAAKs9E,OAAO;IAC1B,KAAKyyE,gBAAA,CAAiBzyE,OAAO;IAC7B,KAAK88D,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;IACD,KAAKmqD,mBAAA,CAAoB;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcA1wG,OAAOvoC,KAAA,EAAOi+E,OAAA,EAAS15E,OAAA,GAAU,CAAC,GAAG;IACnC,KAAKk0I,QAAA,CAAStzI,MAAA,CAAOnF,KAAA,EAAO,GAAGi+E,OAAO;IACtC,KAAKyyE,gBAAA,CAAiBzyE,OAAO;IAC7B,KAAK88D,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAaA6hE,SAAS3wJ,KAAA,EAAOuE,OAAA,GAAU,CAAC,GAAG;IAE5B,IAAIqsJ,aAAA,GAAgB,KAAKH,YAAA,CAAazwJ,KAAK;IAC3C,IAAI4wJ,aAAA,GAAgB,GAAGA,aAAA,GAAgB;IACvC,IAAI,KAAKnY,QAAA,CAASmY,aAAa,GAAG,KAAKnY,QAAA,CAASmY,aAAa,EAAExU,2BAAA,CAA4B,MAAM,CAAC,CAAC;IACnG,KAAK3D,QAAA,CAAStzI,MAAA,CAAOyrJ,aAAA,EAAe,CAAC;IACrC,KAAK7V,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAcA+tD,WAAW78I,KAAA,EAAOi+E,OAAA,EAAS15E,OAAA,GAAU,CAAC,GAAG;IAEvC,IAAIqsJ,aAAA,GAAgB,KAAKH,YAAA,CAAazwJ,KAAK;IAC3C,IAAI4wJ,aAAA,GAAgB,GAAGA,aAAA,GAAgB;IACvC,IAAI,KAAKnY,QAAA,CAASmY,aAAa,GAAG,KAAKnY,QAAA,CAASmY,aAAa,EAAExU,2BAAA,CAA4B,MAAM,CAAC,CAAC;IACnG,KAAK3D,QAAA,CAAStzI,MAAA,CAAOyrJ,aAAA,EAAe,CAAC;IACrC,IAAI3yE,OAAA,EAAS;MACX,KAAKw6D,QAAA,CAAStzI,MAAA,CAAOyrJ,aAAA,EAAe,GAAG3yE,OAAO;MAC9C,KAAKyyE,gBAAA,CAAiBzyE,OAAO;IAC/B;IACA,KAAK88D,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;IACD,KAAKmqD,mBAAA,CAAoB;EAC3B;EAAA;AAAA;AAAA;EAIA,IAAI53I,OAAA,EAAS;IACX,OAAO,KAAKo3I,QAAA,CAASp3I,MAAA;EACvB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAoCAgmB,SAAS/mB,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAC5Bo0I,sBAAA,CAAuB,MAAM,OAAOr4I,KAAK;IACzCA,KAAA,CAAMR,OAAA,CAAQ,CAACsoI,QAAA,EAAUpoI,KAAA,KAAU;MACjCu4I,oBAAA,CAAqB,MAAM,OAAOv4I,KAAK;MACvC,KAAKwwJ,EAAA,CAAGxwJ,KAAK,EAAEqnB,QAAA,CAAS+gH,QAAA,EAAU;QAChC8R,QAAA,EAAU;QACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;MACrB,CAAC;IACH,CAAC;IACD,KAAKisD,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAiCAw4I,WAAWz8I,KAAA,EAAOiE,OAAA,GAAU,CAAC,GAAG;IAK9B,IAAIjE,KAAA,IAAS,MAAwC;IACrDA,KAAA,CAAMR,OAAA,CAAQ,CAACsoI,QAAA,EAAUpoI,KAAA,KAAU;MACjC,IAAI,KAAKwwJ,EAAA,CAAGxwJ,KAAK,GAAG;QAClB,KAAKwwJ,EAAA,CAAGxwJ,KAAK,EAAE+8I,UAAA,CAAW3U,QAAA,EAAU;UAClC8R,QAAA,EAAU;UACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;QACrB,CAAC;MACH;IACF,CAAC;IACD,KAAKisD,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA+CAsnI,MAAMvrI,KAAA,GAAQ,EAAC,EAAGiE,OAAA,GAAU,CAAC,GAAG;IAC9B,KAAKq0I,aAAA,CAAc,CAAC36D,OAAA,EAASj+E,KAAA,KAAU;MACrCi+E,OAAA,CAAQ4tD,KAAA,CAAMvrI,KAAA,CAAMN,KAAK,GAAG;QAC1Bk6I,QAAA,EAAU;QACVprD,SAAA,EAAWvqF,OAAA,CAAQuqF;MACrB,CAAC;IACH,CAAC;IACD,KAAK0rD,eAAA,CAAgBj2I,OAAO;IAC5B,KAAK81I,cAAA,CAAe91I,OAAO;IAC3B,KAAKw2I,sBAAA,CAAuBx2I,OAAO;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA02I,YAAA,EAAc;IACZ,OAAO,KAAKxC,QAAA,CAAS/1I,GAAA,CAAIu7E,OAAA,IAAWA,OAAA,CAAQg9D,WAAA,CAAY,CAAC;EAC3D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqCA35H,MAAM/c,OAAA,GAAU,CAAC,GAAG;IAClB,IAAI,KAAKk0I,QAAA,CAASp3I,MAAA,GAAS,GAAG;IAC9B,KAAKu3I,aAAA,CAAc36D,OAAA,IAAWA,OAAA,CAAQm+D,2BAAA,CAA4B,MAAM,CAAC,CAAC,CAAC;IAC3E,KAAK3D,QAAA,CAAStzI,MAAA,CAAO,CAAC;IACtB,KAAK41I,sBAAA,CAAuB;MAC1BjsD,SAAA,EAAWvqF,OAAA,CAAQuqF;IACrB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA2hE,aAAazwJ,KAAA,EAAO;IAClB,OAAOA,KAAA,GAAQ,IAAIA,KAAA,GAAQ,KAAKqB,MAAA,GAASrB,KAAA;EAC3C;EAAA;EAEAk9I,qBAAA,EAAuB;IACrB,IAAIC,cAAA,GAAiB,KAAK1E,QAAA,CAASnxI,MAAA,CAAO,CAAC81I,OAAA,EAASnlH,KAAA,KAAU;MAC5D,OAAOA,KAAA,CAAMilH,oBAAA,CAAqB,IAAI,OAAOE,OAAA;IAC/C,GAAG,KAAK;IACR,IAAID,cAAA,EAAgB,KAAKpC,sBAAA,CAAuB;MAC9Cb,QAAA,EAAU;IACZ,CAAC;IACD,OAAOiD,cAAA;EACT;EAAA;EAEAvE,cAAcyE,EAAA,EAAI;IAChB,KAAK5E,QAAA,CAAS34I,OAAA,CAAQ,CAACm+E,OAAA,EAASj+E,KAAA,KAAU;MACxCq9I,EAAA,CAAGp/D,OAAA,EAASj+E,KAAK;IACnB,CAAC;EACH;EAAA;EAEA46I,aAAA,EAAe;IACb,KAAKt6I,KAAA,GAAQ,KAAKm4I,QAAA,CAASl2I,MAAA,CAAO07E,OAAA,IAAWA,OAAA,CAAQ/Y,OAAA,IAAW,KAAKlI,QAAQ,EAAEt6D,GAAA,CAAIu7E,OAAA,IAAWA,OAAA,CAAQ39E,KAAK;EAC7G;EAAA;EAEA27I,aAAasB,SAAA,EAAW;IACtB,OAAO,KAAK9E,QAAA,CAASp5G,IAAA,CAAK4+C,OAAA,IAAWA,OAAA,CAAQ/Y,OAAA,IAAWq4E,SAAA,CAAUt/D,OAAO,CAAC;EAC5E;EAAA;EAEAw+D,eAAA,EAAiB;IACf,KAAK7D,aAAA,CAAc36D,OAAA,IAAW,KAAKyyE,gBAAA,CAAiBzyE,OAAO,CAAC;EAC9D;EAAA;EAEAw9D,qBAAA,EAAuB;IACrB,WAAWx9D,OAAA,IAAW,KAAKw6D,QAAA,EAAU;MACnC,IAAIx6D,OAAA,CAAQ/Y,OAAA,EAAS,OAAO;IAC9B;IACA,OAAO,KAAKuzE,QAAA,CAASp3I,MAAA,GAAS,KAAK,KAAK27D,QAAA;EAC1C;EACA0zF,iBAAiBzyE,OAAA,EAAS;IACxBA,OAAA,CAAQ+8D,SAAA,CAAU,IAAI;IACtB/8D,OAAA,CAAQm+D,2BAAA,CAA4B,KAAKnD,mBAAmB;EAC9D;EAAA;EAEA6C,MAAM57I,IAAA,EAAM;IACV,OAAO,KAAKswJ,EAAA,CAAGtwJ,IAAI,KAAK;EAC1B;AACF;AASA,SAAS2wJ,yBAAyBtsJ,OAAA,EAAS;EACzC,OAAO,CAAC,CAACA,OAAA,KAAYA,OAAA,CAAQ8zI,eAAA,KAAoB,UAAa9zI,OAAA,CAAQwtI,UAAA,KAAe,UAAaxtI,OAAA,CAAQg1I,QAAA,KAAa;AACzH;AAcA,IAAMuX,YAAA,GAAN,MAAMA,YAAA,CAAY;EAChBvxJ,YAAA,EAAc;IACZ,KAAKwxJ,cAAA,GAAiB;EACxB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA2CA,IAAInO,YAAA,EAAc;IAChB,MAAMoO,IAAA,GAAO,IAAIF,YAAA,CAAY;IAC7BE,IAAA,CAAKD,cAAA,GAAiB;IACtB,OAAOC,IAAA;EACT;EACAvyH,MAAMg6G,QAAA,EAAUl0I,OAAA,GAAU,MAAM;IAC9B,MAAM0sJ,eAAA,GAAkB,KAAKC,eAAA,CAAgBzY,QAAQ;IACrD,IAAI0Y,UAAA,GAAa,CAAC;IAClB,IAAIN,wBAAA,CAAyBtsJ,OAAO,GAAG;MAErC4sJ,UAAA,GAAa5sJ,OAAA;IACf,WAAWA,OAAA,KAAY,MAAM;MAE3B4sJ,UAAA,CAAWpf,UAAA,GAAaxtI,OAAA,CAAQouI,SAAA;MAChCwe,UAAA,CAAW9Y,eAAA,GAAkB9zI,OAAA,CAAQmwI,cAAA;IACvC;IACA,OAAO,IAAI6H,SAAA,CAAU0U,eAAA,EAAiBE,UAAU;EAClD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAgBA11F,OAAOg9E,QAAA,EAAUl0I,OAAA,GAAU,MAAM;IAC/B,MAAM0sJ,eAAA,GAAkB,KAAKC,eAAA,CAAgBzY,QAAQ;IAErD,OAAO,IAAIiF,UAAA,CAAWuT,eAAA,EAAiB1sJ,OAAO;EAChD;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EA2BA05E,QAAQukE,SAAA,EAAWvK,eAAA,EAAiBvD,cAAA,EAAgB;IAClD,IAAIyc,UAAA,GAAa,CAAC;IAClB,IAAI,CAAC,KAAKJ,cAAA,EAAgB;MACxB,OAAO,IAAItO,WAAA,CAAYD,SAAA,EAAWvK,eAAA,EAAiBvD,cAAc;IACnE;IACA,IAAImc,wBAAA,CAAyB5Y,eAAe,GAAG;MAE7CkZ,UAAA,GAAalZ,eAAA;IACf,OAAO;MAELkZ,UAAA,CAAWpf,UAAA,GAAakG,eAAA;MACxBkZ,UAAA,CAAW9Y,eAAA,GAAkB3D,cAAA;IAC/B;IACA,OAAO,IAAI+N,WAAA,CAAYD,SAAA,EAAWn+H,aAAA,CAAAlY,cAAA,KAC7BglJ,UAAA,GAD6B;MAEhCvO,WAAA,EAAa;IACf,EAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAeAwO,MAAM3Y,QAAA,EAAUR,eAAA,EAAiBvD,cAAA,EAAgB;IAC/C,MAAM2c,eAAA,GAAkB5Y,QAAA,CAAS/1I,GAAA,CAAIg0B,CAAA,IAAK,KAAK46H,cAAA,CAAe56H,CAAC,CAAC;IAEhE,OAAO,IAAI65H,SAAA,CAAUc,eAAA,EAAiBpZ,eAAA,EAAiBvD,cAAc;EACvE;EAAA;EAEAwc,gBAAgBzY,QAAA,EAAU;IACxB,MAAM4Y,eAAA,GAAkB,CAAC;IACzBnwJ,MAAA,CAAOI,IAAA,CAAKm3I,QAAQ,EAAE34I,OAAA,CAAQg9I,WAAA,IAAe;MAC3CuU,eAAA,CAAgBvU,WAAW,IAAI,KAAKwU,cAAA,CAAe7Y,QAAA,CAASqE,WAAW,CAAC;IAC1E,CAAC;IACD,OAAOuU,eAAA;EACT;EAAA;EAEAC,eAAe7Y,QAAA,EAAU;IACvB,IAAIA,QAAA,YAAoBgK,WAAA,EAAa;MACnC,OAAOhK,QAAA;IACT,WAAWA,QAAA,YAAoBI,eAAA,EAAiB;MAE9C,OAAOJ,QAAA;IACT,WAAWl3I,KAAA,CAAMkB,OAAA,CAAQg2I,QAAQ,GAAG;MAElC,MAAMn4I,KAAA,GAAQm4I,QAAA,CAAS,CAAC;MACxB,MAAM9F,SAAA,GAAY8F,QAAA,CAASp3I,MAAA,GAAS,IAAIo3I,QAAA,CAAS,CAAC,IAAI;MACtD,MAAM/D,cAAA,GAAiB+D,QAAA,CAASp3I,MAAA,GAAS,IAAIo3I,QAAA,CAAS,CAAC,IAAI;MAC3D,OAAO,KAAKx6D,OAAA,CAAQ39E,KAAA,EAAOqyI,SAAA,EAAW+B,cAAc;IACtD,OAAO;MAEL,OAAO,KAAKz2D,OAAA,CAAQw6D,QAAQ;IAC9B;EACF;AAaF;AAXIqY,YAAA,CAAKhnJ,IAAA,GAAO,SAASynJ,oBAAoBptJ,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK2sJ,YAAA,EAAa;AAChC;AAGAA,YAAA,CAAK7mJ,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOyrJ,YAAA;EACP3mJ,OAAA,EAAS2mJ,YAAA,CAAYhnJ,IAAA;EACrB8M,UAAA,EAAY;AACd,CAAC;AAvLL,IAAM46I,WAAA,GAANV,YAAA;AAAA,CA0LC,MAAM;EACL,CAAC,OAAO9vJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmnJ,WAAA,EAAa,CAAC;IACpFpqJ,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAQH,IAAM66I,uBAAA,GAAN,MAAMA,uBAAA,CAAuB,EAa7B;AAXIA,uBAAA,CAAK3nJ,IAAA,GAAO,SAAS4nJ,+BAA+BvtJ,CAAA,EAAG;EACrD,OAAO,KAAKA,CAAA,IAAKstJ,uBAAA,EAAwB;AAC3C;AAGAA,uBAAA,CAAKxnJ,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOosJ,uBAAA;EACPtnJ,OAAA,EAASA,CAAA,MAAO,MAAMY,MAAA,CAAOymJ,WAAW,EAAE5O,WAAA,EAAa;EACvDhsI,UAAA,EAAY;AACd,CAAC;AAXL,IAAM+6I,sBAAA,GAANF,uBAAA;AAAA,CAcC,MAAM;EACL,CAAC,OAAOzwJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsnJ,sBAAA,EAAwB,CAAC;IAC/FvqJ,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;MACZ8C,UAAA,EAAYA,CAAA,KAAM3O,MAAA,CAAOymJ,WAAW,EAAE5O;IACxC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAIH,IAAMgP,mBAAA,GAAN,MAAMA,mBAAA,SAA2BJ,WAAA,CAAY;EAC3C/yH,MAAMozH,cAAA,EAAgBttJ,OAAA,GAAU,MAAM;IACpC,OAAO,MAAMk6B,KAAA,CAAMozH,cAAA,EAAgBttJ,OAAO;EAC5C;EAAA;AAAA;AAAA;EAIA05E,QAAQukE,SAAA,EAAWvK,eAAA,EAAiBvD,cAAA,EAAgB;IAClD,OAAO,MAAMz2D,OAAA,CAAQukE,SAAA,EAAWvK,eAAA,EAAiBvD,cAAc;EACjE;EAAA;AAAA;AAAA;EAIA0c,MAAMS,cAAA,EAAgB5Z,eAAA,EAAiBvD,cAAA,EAAgB;IACrD,OAAO,MAAM0c,KAAA,CAAMS,cAAA,EAAgB5Z,eAAA,EAAiBvD,cAAc;EACpE;AAgBF;AAdIkd,mBAAA,CAAK9nJ,IAAA,GAAuB,sBAAM;EAChC,IAAIgoJ,+BAAA;EACJ,OAAO,SAASC,2BAA2B5tJ,CAAA,EAAG;IAC5C,QAAQ2tJ,+BAAA,KAAoCA,+BAAA,GAAqCttG,qBAAA,CAAsBotG,mBAAkB,IAAIztJ,CAAA,IAAKytJ,mBAAkB;EACtJ;AACF,GAAG;AAGHA,mBAAA,CAAK3nJ,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOusJ,mBAAA;EACPznJ,OAAA,EAASynJ,mBAAA,CAAmB9nJ,IAAA;EAC5B8M,UAAA,EAAY;AACd,CAAC;AA7BL,IAAMo7I,kBAAA,GAANJ,mBAAA;AAAA,CAgCC,MAAM;EACL,CAAC,OAAO5wJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2nJ,kBAAA,EAAoB,CAAC;IAC3F5qJ,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAMqc,WAAU,IAAIC,OAAA,CAAQ,SAAS;AAWrC,IAAM++H,YAAA,GAAN,MAAMA,YAAA,CAAY;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAShB,OAAOC,WAAWjY,IAAA,EAAM;IACtB,OAAO;MACLhgI,QAAA,EAAUg4I,YAAA;MACV15I,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS2kI,uBAAA;QACTzkI,QAAA,EAAU+gI,IAAA,CAAK8D,oBAAA,IAAwBH;MACzC,CAAC;IACH;EACF;AAgBF;AAdIqU,YAAA,CAAKnoJ,IAAA,GAAO,SAASqoJ,oBAAoBhuJ,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK8tJ,YAAA,EAAa;AAChC;AAGAA,YAAA,CAAK73I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM6qJ;AACR,CAAC;AAGDA,YAAA,CAAK33I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC6jI,0BAA0B;AACtC,CAAC;AA/BL,IAAM+B,WAAA,GAANH,YAAA;AAAA,CAkCC,MAAM;EACL,CAAC,OAAOjxJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+nJ,WAAA,EAAa,CAAC;IACpFhrJ,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLu8I,YAAA,EAAcL,0BAAA;MACdrjI,OAAA,EAAS,CAACyjI,0BAAA,EAA4BJ,0BAA0B;IAClE,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAMoC,oBAAA,GAAN,MAAMA,oBAAA,CAAoB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWxB,OAAOH,WAAWjY,IAAA,EAAM;IACtB,OAAO;MACLhgI,QAAA,EAAUo4I,oBAAA;MACV95I,SAAA,EAAW,CAAC;QACVS,OAAA,EAASquI,kCAAA;QACTnuI,QAAA,EAAU+gI,IAAA,CAAKqY,4BAAA,IAAgC;MACjD,GAAG;QACDt5I,OAAA,EAAS2kI,uBAAA;QACTzkI,QAAA,EAAU+gI,IAAA,CAAK8D,oBAAA,IAAwBH;MACzC,CAAC;IACH;EACF;AAgBF;AAdIyU,oBAAA,CAAKvoJ,IAAA,GAAO,SAASyoJ,4BAA4BpuJ,CAAA,EAAG;EAClD,OAAO,KAAKA,CAAA,IAAKkuJ,oBAAA,EAAqB;AACxC;AAGAA,oBAAA,CAAKj4I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMirJ;AACR,CAAC;AAGDA,oBAAA,CAAK/3I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC6jI,0BAA0B;AACtC,CAAC;AApCL,IAAMmC,mBAAA,GAANH,oBAAA;AAAA,CAuCC,MAAM;EACL,CAAC,OAAOrxJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmoJ,mBAAA,EAAqB,CAAC;IAC5FprJ,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLu8I,YAAA,EAAc,CAACJ,0BAA0B;MACzCtjI,OAAA,EAAS,CAACyjI,0BAAA,EAA4BH,0BAA0B;IAClE,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACz9PH,SAASuC,gCAAgCrrJ,IAAA,EAAM;EAC7C,OAAOvE,KAAA,CAAM,eAAeuE,IAAI,gCAAgC;AAClE;AAQA,IAAMsrJ,wBAAA,GAA2B,IAAIhjJ,cAAA,CAAe,0BAA0B;AAG9E,IAAMijJ,uBAAA,GAA0B,CAAC,UAAU,YAAY,QAAQ,UAAU,SAAS,SAAS,SAAS,SAAS,QAAQ;AACrH,IAAIpvC,gBAAe;AACnB,IAAMqvC,SAAA,GAAN,MAAMA,SAAA,CAAS;EAAA;AAAA;AAAA;AAAA;EAKb,IAAI51F,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,KAAK28D,SAAA,GAAYpC,qBAAA,CAAsBv6D,KAAK;IAG5C,IAAI,KAAKg+H,OAAA,EAAS;MAChB,KAAKA,OAAA,GAAU;MACf,KAAKT,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIwY,GAAA,EAAK;IACP,OAAO,KAAK09C,GAAA;EACd;EACA,IAAI19C,GAAGvkB,KAAA,EAAO;IACZ,KAAKiiE,GAAA,GAAMjiE,KAAA,IAAS,KAAKuyJ,IAAA;EAC3B;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI7/D,SAAA,EAAW;IACb,OAAO,KAAK8/D,SAAA,IAAa,KAAKp1E,SAAA,EAAWO,OAAA,EAASy1D,YAAA,CAAa3C,UAAA,CAAW/9C,QAAQ,KAAK;EACzF;EACA,IAAIA,SAAS1yF,KAAA,EAAO;IAClB,KAAKwyJ,SAAA,GAAYj4F,qBAAA,CAAsBv6D,KAAK;EAC9C;EAAA;EAEA,IAAI8G,KAAA,EAAO;IACT,OAAO,KAAK2rJ,KAAA;EACd;EACA,IAAI3rJ,KAAK9G,KAAA,EAAO;IACd,KAAKyyJ,KAAA,GAAQzyJ,KAAA,IAAS;IACtB,KAAK0yJ,aAAA,CAAc;IAInB,IAAI,CAAC,KAAKC,WAAA,IAAev8F,sBAAA,CAAuB,EAAEj2D,GAAA,CAAI,KAAKsyJ,KAAK,GAAG;MACjE,KAAKx1F,WAAA,CAAY/S,aAAA,CAAcpjD,IAAA,GAAO,KAAK2rJ,KAAA;IAC7C;EACF;EAAA;EAEA,IAAIG,kBAAA,EAAoB;IACtB,OAAO,KAAKC,kBAAA,CAAmBrlH,OAAA;EACjC;EACA,IAAIolH,kBAAkB5yJ,KAAA,EAAO;IAC3B,KAAK6yJ,kBAAA,CAAmBrlH,OAAA,GAAUxtC,KAAA;EACpC;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIA,MAAA,EAAQ;IACV,OAAO,KAAK8yJ,mBAAA,CAAoB9yJ,KAAA;EAClC;EACA,IAAIA,MAAMA,KAAA,EAAO;IACf,IAAIA,KAAA,KAAU,KAAKA,KAAA,EAAO;MACxB,KAAK8yJ,mBAAA,CAAoB9yJ,KAAA,GAAQA,KAAA;MACjC,KAAKu9H,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;EAEA,IAAIgnJ,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS/yJ,KAAA,EAAO;IAClB,KAAKgzJ,SAAA,GAAYz4F,qBAAA,CAAsBv6D,KAAK;EAC9C;EAAA;EAEA,IAAIw9E,WAAA,EAAa;IACf,OAAO,KAAKq1E,kBAAA,CAAmBr1E,UAAA;EACjC;EACA,IAAIA,WAAWx9E,KAAA,EAAO;IACpB,KAAK6yJ,kBAAA,CAAmBr1E,UAAA,GAAax9E,KAAA;EACvC;EACAf,YAAYg+D,WAAA,EAAagB,SAAA,EAAWmf,SAAA,EAAW61E,UAAA,EAAYC,eAAA,EAAiBC,wBAAA,EAA0BC,kBAAA,EAAoBzoB,gBAAA,EAAkB5/H,MAAA,EAG5IsoJ,UAAA,EAAY;IACV,KAAKp2F,WAAA,GAAcA,WAAA;IACnB,KAAKgB,SAAA,GAAYA,SAAA;IACjB,KAAKmf,SAAA,GAAYA,SAAA;IACjB,KAAKutD,gBAAA,GAAmBA,gBAAA;IACxB,KAAK0oB,UAAA,GAAaA,UAAA;IAClB,KAAKd,IAAA,GAAO,aAAatvC,eAAc;IAKvC,KAAK+a,OAAA,GAAU;IAKf,KAAKT,YAAA,GAAe,IAAIpgF,OAAA,CAAQ;IAKhC,KAAKmgF,WAAA,GAAc;IAKnB,KAAK2C,UAAA,GAAa;IAClB,KAAKtjE,SAAA,GAAY;IACjB,KAAK81F,KAAA,GAAQ;IACb,KAAKO,SAAA,GAAY;IACjB,KAAKM,qBAAA,GAAwB,CAAC,QAAQ,YAAY,kBAAkB,SAAS,QAAQ,MAAM,EAAErxJ,MAAA,CAAO4B,CAAA,IAAKuyD,sBAAA,CAAuB,EAAEj2D,GAAA,CAAI0D,CAAC,CAAC;IACxI,KAAK0vJ,iBAAA,GAAoBtqJ,KAAA,IAAS;MAChC,MAAMmS,EAAA,GAAKnS,KAAA,CAAMiT,MAAA;MAOjB,IAAI,CAACd,EAAA,CAAGpb,KAAA,IAASob,EAAA,CAAG6xH,cAAA,KAAmB,KAAK7xH,EAAA,CAAG8xH,YAAA,KAAiB,GAAG;QAKjE9xH,EAAA,CAAGgyH,iBAAA,CAAkB,GAAG,CAAC;QACzBhyH,EAAA,CAAGgyH,iBAAA,CAAkB,GAAG,CAAC;MAC3B;IACF;IACA,MAAMluH,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,MAAM+e,QAAA,GAAW/pD,OAAA,CAAQ+pD,QAAA,CAASlpE,WAAA,CAAY;IAG9C,KAAK+yJ,mBAAA,GAAsBM,kBAAA,IAAsBl0I,OAAA;IACjD,KAAKs0I,oBAAA,GAAuB,KAAKxzJ,KAAA;IAEjC,KAAKukB,EAAA,GAAK,KAAKA,EAAA;IAIf,IAAI05C,SAAA,CAAUxI,GAAA,EAAK;MACjB1qD,MAAA,CAAO4B,iBAAA,CAAkB,MAAM;QAC7BswD,WAAA,CAAY/S,aAAA,CAAcr3C,gBAAA,CAAiB,SAAS,KAAK0gJ,iBAAiB;MAC5E,CAAC;IACH;IACA,KAAKV,kBAAA,GAAqB,IAAI31E,kBAAA,CAAmBi2E,wBAAA,EAA0B/1E,SAAA,EAAW81E,eAAA,EAAiBD,UAAA,EAAY,KAAK11B,YAAY;IACpI,KAAKk2B,SAAA,GAAY,CAAC,KAAKx1F,SAAA,CAAUhJ,SAAA;IACjC,KAAKy+F,eAAA,GAAkBzqF,QAAA,KAAa;IACpC,KAAK0pF,WAAA,GAAc1pF,QAAA,KAAa;IAChC,KAAK0qF,cAAA,GAAiB,CAAC,CAACN,UAAA;IACxB,IAAI,KAAKK,eAAA,EAAiB;MACxB,KAAKp2B,WAAA,GAAcp+G,OAAA,CAAQyuE,QAAA,GAAW,+BAA+B;IACvE;EACF;EACAvW,gBAAA,EAAkB;IAChB,IAAI,KAAKnZ,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,KAAK01E,gBAAA,CAAiBl2D,OAAA,CAAQ,KAAKxX,WAAA,CAAY/S,aAAa,EAAEngB,SAAA,CAAU9gC,KAAA,IAAS;QAC/E,KAAKg3H,UAAA,GAAah3H,KAAA,CAAMqhI,YAAA;QACxB,KAAK/M,YAAA,CAAaxxH,IAAA,CAAK;MACzB,CAAC;IACH;EACF;EACA+6B,YAAA,EAAc;IACZ,KAAKy2F,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EACAgV,YAAA,EAAc;IACZ,KAAKw8G,YAAA,CAAa9vH,QAAA,CAAS;IAC3B,IAAI,KAAKwwD,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,KAAK01E,gBAAA,CAAiB51D,cAAA,CAAe,KAAK9X,WAAA,CAAY/S,aAAa;IACrE;IACA,IAAI,KAAK+T,SAAA,CAAUxI,GAAA,EAAK;MACtB,KAAKwH,WAAA,CAAY/S,aAAA,CAAcr0C,mBAAA,CAAoB,SAAS,KAAK09I,iBAAiB;IACpF;EACF;EACAnmF,UAAA,EAAY;IACV,IAAI,KAAKgQ,SAAA,EAAW;MAIlB,KAAKK,gBAAA,CAAiB;MAKtB,IAAI,KAAKL,SAAA,CAAU1gB,QAAA,KAAa,QAAQ,KAAK0gB,SAAA,CAAU1gB,QAAA,KAAa,KAAKA,QAAA,EAAU;QACjF,KAAKA,QAAA,GAAW,KAAK0gB,SAAA,CAAU1gB,QAAA;QAC/B,KAAK6gE,YAAA,CAAaxxH,IAAA,CAAK;MACzB;IACF;IAIA,KAAK6nJ,sBAAA,CAAuB;IAG5B,KAAKC,sBAAA,CAAuB;EAC9B;EAAA;EAEA1nF,MAAMloE,OAAA,EAAS;IACb,KAAKg5D,WAAA,CAAY/S,aAAA,CAAciiB,KAAA,CAAMloE,OAAO;EAC9C;EAAA;EAEAw5E,iBAAA,EAAmB;IACjB,KAAKo1E,kBAAA,CAAmBp1E,gBAAA,CAAiB;EAC3C;EAAA;EAEAq2E,cAAcC,SAAA,EAAW;IACvB,IAAIA,SAAA,KAAc,KAAK/1B,OAAA,EAAS;MAC9B,KAAKA,OAAA,GAAU+1B,SAAA;MACf,KAAKx2B,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EACAioJ,SAAA,EAAW,CAQX;EAAA;EAEAJ,uBAAA,EAAyB;IACvB,MAAM9rB,QAAA,GAAW,KAAK7qE,WAAA,CAAY/S,aAAA,CAAclqD,KAAA;IAChD,IAAI,KAAKwzJ,oBAAA,KAAyB1rB,QAAA,EAAU;MAC1C,KAAK0rB,oBAAA,GAAuB1rB,QAAA;MAC5B,KAAKvK,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;EAEA8nJ,uBAAA,EAAyB;IACvB,MAAMroB,WAAA,GAAc,KAAKyoB,eAAA,CAAgB;IACzC,IAAIzoB,WAAA,KAAgB,KAAK0oB,oBAAA,EAAsB;MAC7C,MAAMh1I,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;MACjC,KAAKgqG,oBAAA,GAAuB1oB,WAAA;MAC5BA,WAAA,GAActsH,OAAA,CAAQ8C,YAAA,CAAa,eAAewpH,WAAW,IAAItsH,OAAA,CAAQ6C,eAAA,CAAgB,aAAa;IACxG;EACF;EAAA;EAEAkyI,gBAAA,EAAkB;IAChB,OAAO,KAAKzoB,WAAA,IAAe;EAC7B;EAAA;EAEAknB,cAAA,EAAgB;IACd,IAAIL,uBAAA,CAAwB1yJ,OAAA,CAAQ,KAAK8yJ,KAAK,IAAI,OAAO,OAAO/xJ,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvG,MAAMyxJ,+BAAA,CAAgC,KAAKM,KAAK;IAClD;EACF;EAAA;EAEA0B,cAAA,EAAgB;IACd,OAAO,KAAKb,qBAAA,CAAsB3zJ,OAAA,CAAQ,KAAK8yJ,KAAK,IAAI;EAC1D;EAAA;EAEA2B,YAAA,EAAc;IAEZ,IAAIC,QAAA,GAAW,KAAKp3F,WAAA,CAAY/S,aAAA,CAAcmqG,QAAA;IAC9C,OAAOA,QAAA,IAAYA,QAAA,CAASC,QAAA;EAC9B;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIC,MAAA,EAAQ;IACV,OAAO,CAAC,KAAKJ,aAAA,CAAc,KAAK,CAAC,KAAKl3F,WAAA,CAAY/S,aAAA,CAAclqD,KAAA,IAAS,CAAC,KAAKo0J,WAAA,CAAY,KAAK,CAAC,KAAKn0B,UAAA;EACxG;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI3B,iBAAA,EAAmB;IACrB,IAAI,KAAKo1B,eAAA,EAAiB;MAIxB,MAAMc,aAAA,GAAgB,KAAKv3F,WAAA,CAAY/S,aAAA;MACvC,MAAMuqG,WAAA,GAAcD,aAAA,CAAcvwJ,OAAA,CAAQ,CAAC;MAG3C,OAAO,KAAK+5H,OAAA,IAAWw2B,aAAA,CAAc7mE,QAAA,IAAY,CAAC,KAAK4mE,KAAA,IAAS,CAAC,EAAEC,aAAA,CAAcE,aAAA,GAAgB,MAAMD,WAAA,IAAeA,WAAA,CAAYn5E,KAAA;IACpI,OAAO;MACL,OAAO,KAAK0iD,OAAA,IAAW,CAAC,KAAKu2B,KAAA;IAC/B;EACF;EAAA;AAAA;AAAA;AAAA;EAKAv1B,kBAAkB19D,GAAA,EAAK;IACrB,IAAIA,GAAA,CAAIvgE,MAAA,EAAQ;MACd,KAAKk8D,WAAA,CAAY/S,aAAA,CAAcloC,YAAA,CAAa,oBAAoBs/C,GAAA,CAAI38D,IAAA,CAAK,GAAG,CAAC;IAC/E,OAAO;MACL,KAAKs4D,WAAA,CAAY/S,aAAA,CAAcnoC,eAAA,CAAgB,kBAAkB;IACnE;EACF;EAAA;AAAA;AAAA;AAAA;EAKA0+G,iBAAA,EAAmB;IAIjB,IAAI,CAAC,KAAKzC,OAAA,EAAS;MACjB,KAAK7xD,KAAA,CAAM;IACb;EACF;EAAA;EAEAwoF,gBAAA,EAAkB;IAChB,MAAMz1I,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,OAAO,KAAKwpG,eAAA,KAAoBx0I,OAAA,CAAQyuE,QAAA,IAAYzuE,OAAA,CAAQ87B,IAAA,GAAO;EACrE;AAgDF;AA9CIs3G,SAAA,CAAK9oJ,IAAA,GAAO,SAASorJ,iBAAiB/wJ,CAAA,EAAG;EACvC,OAAO,KAAKA,CAAA,IAAKyuJ,SAAA,EAAarnG,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqB2pF,SAAA,EAAW,EAAE,GAAM3pF,iBAAA,CAAqB61F,MAAA,EAAQ,CAAC,GAAM71F,iBAAA,CAAqBu8F,kBAAA,EAAoB,CAAC,GAAMv8F,iBAAA,CAAqBm5B,iBAAiB,GAAMn5B,iBAAA,CAAkBmnG,wBAAA,EAA0B,EAAE,GAAMnnG,iBAAA,CAAqBw/E,eAAe,GAAMx/E,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAkB8vE,cAAA,EAAgB,CAAC,CAAC;AACnb;AAGAu3B,SAAA,CAAK7pH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwrJ,SAAA;EACN3pH,SAAA,EAAW,CAAC,CAAC,SAAS,YAAY,EAAE,GAAG,CAAC,YAAY,YAAY,EAAE,GAAG,CAAC,UAAU,oBAAoB,EAAE,GAAG,CAAC,SAAS,oBAAoB,EAAE,GAAG,CAAC,YAAY,oBAAoB,EAAE,CAAC;EAChL47C,SAAA,EAAW,CAAC,GAAG,uBAAuB;EACtCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASspG,sBAAsBzoH,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASqpG,kCAAA,EAAoC;QAClE,OAAO5jI,GAAA,CAAI4iI,aAAA,CAAc,IAAI;MAC/B,CAAC,EAAE,QAAQ,SAASiB,iCAAA,EAAmC;QACrD,OAAO7jI,GAAA,CAAI4iI,aAAA,CAAc,KAAK;MAChC,CAAC,EAAE,SAAS,SAASkB,kCAAA,EAAoC;QACvD,OAAO9jI,GAAA,CAAI8iI,QAAA,CAAS;MACtB,CAAC;IACH;IACA,IAAI5nH,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE,EAAE,YAAY2M,GAAA,CAAIwrC,QAAQ,EAAE,YAAYxrC,GAAA,CAAIwhE,QAAQ;MAC/E9mC,WAAA,CAAY,QAAQ16B,GAAA,CAAItxB,IAAA,IAAQ,IAAI,EAAE,YAAYsxB,GAAA,CAAI6hI,QAAA,IAAY,CAAC7hI,GAAA,CAAIwiI,eAAA,IAAmB,IAAI,EAAE,gBAAgBxiI,GAAA,CAAIqjI,KAAA,IAASrjI,GAAA,CAAIwhE,QAAA,GAAW,OAAOxhE,GAAA,CAAIssD,UAAU,EAAE,iBAAiBtsD,GAAA,CAAIwhE,QAAQ,EAAE,MAAMxhE,GAAA,CAAI3M,EAAE;MAC9M+mE,WAAA,CAAY,oBAAoBp6D,GAAA,CAAIuiI,SAAS,EAAE,uCAAuCviI,GAAA,CAAIyiI,cAAA,IAAkBziI,GAAA,CAAIyhI,WAAW,EAAE,oCAAoCzhI,GAAA,CAAIyiI,cAAc,EAAE,yBAAyBziI,GAAA,CAAIyiI,cAAc,EAAE,gCAAgCziI,GAAA,CAAIyjI,eAAA,CAAgB,CAAC;IAC5R;EACF;EACA/rH,MAAA,EAAQ;IACN8zB,QAAA,EAAU;IACVn4C,EAAA,EAAI;IACJinH,WAAA,EAAa;IACb5rI,IAAA,EAAM;IACN8yF,QAAA,EAAU;IACV5rF,IAAA,EAAM;IACN8rJ,iBAAA,EAAmB;IACnB7zB,mBAAA,EAAqB,CAAIlzE,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,qBAAqB;IACrFnzE,KAAA,EAAO;IACP+yJ,QAAA,EAAU;EACZ;EACAjqH,QAAA,EAAU,CAAC,UAAU;EACrBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASkiH,mBAAA;IACTjiH,WAAA,EAAa25I;EACf,CAAC,CAAC,GAAMtpH,oBAAoB;AAC9B,CAAC;AA3WL,IAAMisH,QAAA,GAAN3C,SAAA;AAAA,CA8WC,MAAM;EACL,CAAC,OAAO5xJ,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkrJ,QAAA,EAAU,CAAC;IACjFnuJ,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;AAAA;MAEVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QAAA;QAAA;QAAA;QAIT,4BAA4B;QAC5B,+CAA+C;QAC/C,4CAA4C;QAC5C,iCAAiC;QACjC,wCAAwC;QAAA;QAAA;QAGxC,QAAQ;QACR,cAAc;QACd,cAAc;QACd,eAAe;QACf,mBAAmB;QAAA;QAAA;QAGnB,uBAAuB;QACvB,wBAAwB;QAAA;QAAA;QAGxB,aAAa;QACb,WAAW;QACX,UAAU;QACV,WAAW;MACb;MACAlG,SAAA,EAAW,CAAC;QACVS,OAAA,EAASkiH,mBAAA;QACTjiH,WAAA,EAAas8I;MACf,CAAC;MACDlsH,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAS8tI,SAAA;IACTrhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,CAAC;EACH,GAAG;IACDhvI,IAAA,EAASg6I,MAAA;IACTvtI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAS0gJ,kBAAA;IACTj0I,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASs9E;EACX,GAAG;IACDt9E,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2+I,wBAAwB;IACjC,CAAC;EACH,GAAG;IACDtrJ,IAAA,EAAS2jI;EACX,GAAG;IACD3jI,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAS85H,YAAA;IACTrtH,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACsnH,cAAc;IACvB,CAAC;EACH,CAAC,GAAG;IACFr+D,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC;IACR,CAAC;IACD5kB,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;IACDqiG,WAAA,EAAa,CAAC;MACZ1kI,IAAA,EAAMqiC;IACR,CAAC;IACDvpC,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACDupD,QAAA,EAAU,CAAC;MACT5rF,IAAA,EAAMqiC;IACR,CAAC;IACDriC,IAAA,EAAM,CAAC;MACLA,IAAA,EAAMqiC;IACR,CAAC;IACDypH,iBAAA,EAAmB,CAAC;MAClB9rJ,IAAA,EAAMqiC;IACR,CAAC;IACD41F,mBAAA,EAAqB,CAAC;MACpBj4H,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;IACDzT,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC;IACR,CAAC;IACD4pH,QAAA,EAAU,CAAC;MACTjsJ,IAAA,EAAMqiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAM+rH,eAAA,GAAN,MAAMA,eAAA,CAAe,EAgBrB;AAdIA,eAAA,CAAK1rJ,IAAA,GAAO,SAAS2rJ,uBAAuBtxJ,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKqxJ,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAKp7I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMouJ;AACR,CAAC;AAGDA,eAAA,CAAKl7I,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiBmkD,kBAAA,EAAoBA,kBAAA,EAAoB0M,eAAA,EAAiB7wD,eAAe;AACrG,CAAC;AAdL,IAAMs4E,cAAA,GAANF,eAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOx0J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBqrJ,cAAA,EAAgB,CAAC;IACvFtuJ,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiBmkD,kBAAA,EAAoBg0B,QAAQ;MACvD3oI,OAAA,EAAS,CAAC2oI,QAAA,EAAUh0B,kBAAA,EAAoB0M,eAAA,EAAiB7wD,eAAe;IAC1E,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACjgBH,IAAMzC,OAAM,CAAC,SAAS;AACtB,IAAMC,OAAM,CAAC,OAAO;AACpB,IAAMC,OAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,GAAG;AAC1C,IAAMC,OAAM,CAAC,sBAAsB,GAAG;AACtC,SAAS66E,iCAAiCjpH,EAAA,EAAIlb,GAAA,EAAK;EACjD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,QAAQ,CAAC;IAC3BC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BQ,SAAA,CAAU;IACVo7C,iBAAA,CAAkB1B,MAAA,CAAO0W,WAAW;EACzC;AACF;AACA,SAAS8pB,+CAA+ClpH,EAAA,EAAIlb,GAAA,EAAK;EAC/D,IAAIkb,EAAA,GAAK,GAAG;IACPihD,YAAA,CAAa,CAAC;EACnB;AACF;AACA,SAASkoE,+CAA+CnpH,EAAA,EAAIlb,GAAA,EAAK;EAC/D,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,QAAQ,EAAE;IAC5BC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc,CAAC;IAC9BQ,SAAA,CAAU;IACVo7C,iBAAA,CAAkB1B,MAAA,CAAO0gC,YAAY;EAC1C;AACF;AACA,SAASC,iCAAiCrpH,EAAA,EAAIlb,GAAA,EAAK;EACjD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,QAAQ,EAAE;IAC5BwU,UAAA,CAAW,GAAG6lE,8CAAA,EAAgD,GAAG,CAAC,EAAE,GAAGC,8CAAA,EAAgD,GAAG,CAAC;IAC3Hp6E,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BQ,SAAA,CAAU;IACVsU,aAAA,CAAc,GAAGolC,MAAA,CAAO4gC,aAAA,GAAgB,IAAI,CAAC;EAClD;AACF;AACA,SAASC,kCAAkCvpH,EAAA,EAAIlb,GAAA,EAAK;EAClD,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAMwpH,GAAA,GAASx1B,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,OAAO,IAAI,CAAC;IAC9BxvB,UAAA,CAAW,wBAAwB,SAASoqG,+EAA+ElqG,MAAA,EAAQ;MACjI40E,aAAA,CAAcq1B,GAAG;MACpB,MAAM9gC,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOghC,yBAAA,CAA0B/pJ,IAAA,CAAK4/C,MAAA,CAAOoqG,OAAO,CAAC;IAC7E,CAAC,EAAE,WAAW,SAASC,yDAAyDrqG,MAAA,EAAQ;MACnF40E,aAAA,CAAcq1B,GAAG;MACpB,MAAM9gC,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOlmC,cAAA,CAAejjC,MAAM,CAAC;IACrD,CAAC;IACE0hC,YAAA,CAAa,GAAG,CAAC;IACjBlS,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7Bq7E,sBAAA,CAAuB,iEAAiEnhC,MAAA,CAAOohC,cAAA,CAAe,GAAG,EAAE;IACnHr7E,UAAA,CAAW,WAAWi6C,MAAA,CAAOpjB,UAAU,EAAE,mBAAmB,SAAS;IACrE9lD,WAAA,CAAY,MAAMkpE,MAAA,CAAOvwG,EAAA,GAAK,QAAQ,EAAE,wBAAwBuwG,MAAA,CAAOnnC,QAAQ,EAAE,cAAcmnC,MAAA,CAAOjxD,SAAA,IAAa,IAAI,EAAE,mBAAmBixD,MAAA,CAAOqhC,uBAAA,CAAwB,CAAC;EACjL;AACF;AACA,IAAMC,mBAAA,GAAsB;EAAA;AAAA;AAAA;AAAA;AAAA;EAM1BC,kBAAA,EAAoB90G,OAAA,CAAQ,sBAAsB,CAACnC,UAAA,CAAW,aAAa7mB,KAAA,CAAM,mBAAmB,CAACo7F,YAAA,CAAa,CAAC,GAAG;IACpHhpH,QAAA,EAAU;EACZ,CAAC,CAAC,CAAC,CAAC;EAAA;EAEJ2rJ,cAAA,EAAgB/0G,OAAA,CAAQ,kBAAkB,CAAChhB,KAAA,CAAM,QAAQ9f,KAAA,CAAM;IAC7DkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,mBAAmBs0E,OAAA,CAAQ,oCAAoCjzG,KAAA,CAAM;IACnFkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,CAAC,CAAC,GAAGhN,UAAA,CAAW,aAAas0E,OAAA,CAAQ,gBAAgBjzG,KAAA,CAAM;IAC1DkoE,OAAA,EAAS;EACX,CAAC,CAAC,CAAC,CAAC,CAAC;AACP;AASA,SAAS4tE,iCAAA,EAAmC;EAC1C,OAAOh0J,KAAA,CAAM,+DAA+D;AAC9E;AAOA,SAASi0J,+BAAA,EAAiC;EACxC,OAAOj0J,KAAA,CAAM,oDAAoD;AACnE;AAMA,SAASk0J,kCAAA,EAAoC;EAC3C,OAAOl0J,KAAA,CAAM,mCAAmC;AAClD;AACA,IAAI0gH,gBAAe;AAEnB,IAAMyzC,0BAAA,GAA6B,IAAItnJ,cAAA,CAAe,8BAA8B;EAClFkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;IACb,MAAMyzG,OAAA,GAAU7yG,MAAA,CAAOq5G,OAAO;IAC9B,OAAO,MAAMxG,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;EACnD;AACF,CAAC;AAED,SAASslD,4CAA4Cr5C,OAAA,EAAS;EAC5D,OAAO,MAAMA,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;AACnD;AAEA,IAAMulD,iBAAA,GAAoB,IAAIxnJ,cAAA,CAAe,mBAAmB;AAEhE,IAAMynJ,mCAAA,GAAsC;EAC1Cn+I,OAAA,EAASg+I,0BAAA;EACTxrI,IAAA,EAAM,CAAC44F,OAAO;EACd1qG,UAAA,EAAYu9I;AACd;AAMA,IAAMG,kBAAA,GAAqB,IAAI1nJ,cAAA,CAAe,kBAAkB;AAEhE,IAAM2nJ,eAAA,GAAN,MAAsB;EACpB93J,YACAuV,MAAA,EACAxU,KAAA,EAAO;IACL,KAAKwU,MAAA,GAASA,MAAA;IACd,KAAKxU,KAAA,GAAQA,KAAA;EACf;AACF;AACA,IAAMg3J,UAAA,GAAN,MAAMA,UAAA,CAAU;EAAA;EAEdC,sBAAsBv3J,KAAA,EAAO;IAC3B,MAAMw3J,MAAA,GAAS,KAAKjzJ,OAAA,CAAQopD,OAAA,CAAQ,EAAE3tD,KAAK;IAC3C,IAAIw3J,MAAA,EAAQ;MACV,MAAMC,KAAA,GAAQ,KAAKA,KAAA,CAAMjtG,aAAA;MACzB,MAAMktG,UAAA,GAAatnE,6BAAA,CAA8BpwF,KAAA,EAAO,KAAKuE,OAAA,EAAS,KAAK+rF,YAAY;MACvF,MAAM9wE,OAAA,GAAUg4I,MAAA,CAAOvoE,eAAA,CAAgB;MACvC,IAAIjvF,KAAA,KAAU,KAAK03J,UAAA,KAAe,GAAG;QAInCD,KAAA,CAAM11D,SAAA,GAAY;MACpB,OAAO;QACL01D,KAAA,CAAM11D,SAAA,GAAYrR,wBAAA,CAAyBlxE,OAAA,CAAQm4I,SAAA,EAAWn4I,OAAA,CAAQyqD,YAAA,EAAcwtF,KAAA,CAAM11D,SAAA,EAAW01D,KAAA,CAAMxtF,YAAY;MACzH;IACF;EACF;EAAA;EAEA2tF,oBAAA,EAAsB;IACpB,KAAKL,qBAAA,CAAsB,KAAKM,WAAA,CAAY7vF,eAAA,IAAmB,CAAC;EAClE;EAAA;EAEA8vF,gBAAgBx3J,KAAA,EAAO;IACrB,OAAO,IAAI+2J,eAAA,CAAgB,MAAM/2J,KAAK;EACxC;EAAA;EAEA,IAAIg+H,QAAA,EAAU;IACZ,OAAO,KAAKy5B,QAAA,IAAY,KAAKC,UAAA;EAC/B;EAAA;EAEA,IAAI3pE,6BAAA,EAA+B;IACjC,OAAO,KAAK4pE,6BAAA;EACd;EACA,IAAI5pE,6BAA6B/tF,KAAA,EAAO;IACtC,KAAK23J,6BAAA,GAAgC33J,KAAA;IACrC,KAAK43J,qBAAA,CAAsB;EAC7B;EAAA;EAEA,IAAIpsB,YAAA,EAAc;IAChB,OAAO,KAAKqsB,YAAA;EACd;EACA,IAAIrsB,YAAYxrI,KAAA,EAAO;IACrB,KAAK63J,YAAA,GAAe73J,KAAA;IACpB,KAAKu9H,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;EAEA,IAAI2mF,SAAA,EAAW;IACb,OAAO,KAAK8/D,SAAA,IAAa,KAAKp1E,SAAA,EAAWO,OAAA,EAASy1D,YAAA,CAAa3C,UAAA,CAAW/9C,QAAQ,KAAK;EACzF;EACA,IAAIA,SAAS1yF,KAAA,EAAO;IAClB,KAAKwyJ,SAAA,GAAYxyJ,KAAA;IACjB,KAAKu9H,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;EAEA,IAAI4hF,SAAA,EAAW;IACb,OAAO,KAAKwM,SAAA;EACd;EACA,IAAIxM,SAAS3tF,KAAA,EAAO;IAClB,IAAI,KAAK83J,eAAA,KAAoB,OAAOp3J,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC3E,MAAM61J,gCAAA,CAAiC;IACzC;IACA,KAAKp8D,SAAA,GAAYn6F,KAAA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIs6F,YAAA,EAAc;IAChB,OAAO,KAAK0vD,YAAA;EACd;EACA,IAAI1vD,YAAYh4F,EAAA,EAAI;IAClB,IAAI,OAAOA,EAAA,KAAO,eAAe,OAAO5B,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/E,MAAM+1J,iCAAA,CAAkC;IAC1C;IACA,KAAKzM,YAAA,GAAe1nJ,EAAA;IACpB,IAAI,KAAKw1J,eAAA,EAAiB;MAExB,KAAKC,oBAAA,CAAqB;IAC5B;EACF;EAAA;EAEA,IAAI/3J,MAAA,EAAQ;IACV,OAAO,KAAKyE,MAAA;EACd;EACA,IAAIzE,MAAM8nI,QAAA,EAAU;IAClB,MAAMkwB,WAAA,GAAc,KAAKC,YAAA,CAAanwB,QAAQ;IAC9C,IAAIkwB,WAAA,EAAa;MACf,KAAK5V,SAAA,CAAUta,QAAQ;IACzB;EACF;EAAA;EAEA,IAAI8qB,kBAAA,EAAoB;IACtB,OAAO,KAAKC,kBAAA,CAAmBrlH,OAAA;EACjC;EACA,IAAIolH,kBAAkB5yJ,KAAA,EAAO;IAC3B,KAAK6yJ,kBAAA,CAAmBrlH,OAAA,GAAUxtC,KAAA;EACpC;EAAA;EAEA,IAAIukB,GAAA,EAAK;IACP,OAAO,KAAK09C,GAAA;EACd;EACA,IAAI19C,GAAGvkB,KAAA,EAAO;IACZ,KAAKiiE,GAAA,GAAMjiE,KAAA,IAAS,KAAKuyJ,IAAA;IACzB,KAAKh1B,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;EAEA,IAAIyxE,WAAA,EAAa;IACf,OAAO,KAAKq1E,kBAAA,CAAmBr1E,UAAA;EACjC;EACA,IAAIA,WAAWx9E,KAAA,EAAO;IACpB,KAAK6yJ,kBAAA,CAAmBr1E,UAAA,GAAax9E,KAAA;EACvC;EACAf,YAAYuvG,cAAA,EAAgBxgB,kBAAA,EAK5BkqE,aAAA,EAAe/E,wBAAA,EAA0Bl2F,WAAA,EAAa0c,IAAA,EAAMs5E,UAAA,EAAYC,eAAA,EAAiBiF,gBAAA,EAAkB/6E,SAAA,EAAWhU,QAAA,EAAUq7C,qBAAA,EAAuBxxC,cAAA,EAAgB1B,eAAA,EAAiB;IACtL,KAAKi9B,cAAA,GAAiBA,cAAA;IACtB,KAAKxgB,kBAAA,GAAqBA,kBAAA;IAC1B,KAAK/wB,WAAA,GAAcA,WAAA;IACnB,KAAK0c,IAAA,GAAOA,IAAA;IACZ,KAAKw+E,gBAAA,GAAmBA,gBAAA;IACxB,KAAK/6E,SAAA,GAAYA,SAAA;IACjB,KAAKnK,cAAA,GAAiBA,cAAA;IACtB,KAAK1B,eAAA,GAAkBA,eAAA;IAOvB,KAAK6mF,UAAA,GAAa,CAAC;MACjBz7C,OAAA,EAAS;MACTI,OAAA,EAAS;MACTE,QAAA,EAAU;MACVE,QAAA,EAAU;IACZ,GAAG;MACDR,OAAA,EAAS;MACTI,OAAA,EAAS;MACTE,QAAA,EAAU;MACVE,QAAA,EAAU;IACZ,GAAG;MACDR,OAAA,EAAS;MACTI,OAAA,EAAS;MACTE,QAAA,EAAU;MACVE,QAAA,EAAU;MACVzL,UAAA,EAAY;IACd,GAAG;MACDiL,OAAA,EAAS;MACTI,OAAA,EAAS;MACTE,QAAA,EAAU;MACVE,QAAA,EAAU;MACVzL,UAAA,EAAY;IACd,CAAC;IAED,KAAKgmD,UAAA,GAAa;IAElB,KAAK1N,YAAA,GAAe,CAACqO,EAAA,EAAIC,EAAA,KAAOD,EAAA,KAAOC,EAAA;IAEvC,KAAK/F,IAAA,GAAO,cAActvC,eAAc;IAExC,KAAKs1C,sBAAA,GAAyB;IAE9B,KAAKC,QAAA,GAAW,IAAIr7G,OAAA,CAAQ;IAM5B,KAAKogF,YAAA,GAAe,IAAIpgF,OAAA,CAAQ;IAKhC,KAAK+3E,wBAAA,GAA2B;IAEhC,KAAKktB,SAAA,GAAY,MAAM,CAAC;IAExB,KAAKqW,UAAA,GAAa,MAAM,CAAC;IAEzB,KAAKC,QAAA,GAAW,oBAAoBz1C,eAAc;IAElD,KAAK6yC,yBAAA,GAA4B,IAAI34G,OAAA,CAAQ;IAC7C,KAAKw7G,kBAAA,GAAqB,KAAKpnF,eAAA,EAAiBqnF,iBAAA,IAAqB;IACrE,KAAKnB,QAAA,GAAW;IAEhB,KAAKn6B,WAAA,GAAc;IAEnB,KAAK5gE,QAAA,GAAW;IAEhB,KAAKoxB,aAAA,GAAgB;IAErB,KAAK1kB,QAAA,GAAW;IAChB,KAAKuuF,6BAAA,GAAgC,KAAKpmF,eAAA,EAAiBwc,4BAAA,IAAgC;IAC3F,KAAKoM,SAAA,GAAY;IAEjB,KAAK0+D,sBAAA,GAAyB,KAAKtnF,eAAA,EAAiBsnF,sBAAA,IAA0B;IAE9E,KAAKh1F,SAAA,GAAY;IAKjB,KAAKi1F,UAAA,GAAa,KAAKvnF,eAAA,IAAmB,OAAO,KAAKA,eAAA,CAAgBunF,UAAA,KAAe,cAAc,KAAKvnF,eAAA,CAAgBunF,UAAA,GAAa;IACrI,KAAKC,YAAA,GAAe,IAAI57G,OAAA,CAAQ;IAEhC,KAAK67G,sBAAA,GAAyBvlH,KAAA,CAAM,MAAM;MACxC,MAAMxvC,OAAA,GAAU,KAAKA,OAAA;MACrB,IAAIA,OAAA,EAAS;QACX,OAAOA,OAAA,CAAQ8iC,OAAA,CAAQl+B,IAAA,CAAKypC,SAAA,CAAUruC,OAAO,GAAGyQ,SAAA,CAAU,MAAM4pC,KAAA,CAAM,GAAGr6C,OAAA,CAAQ7B,GAAA,CAAI80J,MAAA,IAAUA,MAAA,CAAO/oE,iBAAiB,CAAC,CAAC,CAAC;MAC5H;MACA,OAAO,KAAK4qE,YAAA,CAAalwJ,IAAA,CAAK6L,SAAA,CAAU,MAAM,KAAKskJ,sBAAsB,CAAC;IAC5E,CAAC;IAED,KAAKC,YAAA,GAAe,IAAIjzH,YAAA,CAAa;IAErC,KAAKkzH,aAAA,GAAgB,KAAKD,YAAA,CAAapwJ,IAAA,CAAK5G,MAAA,CAAO+8B,CAAA,IAAKA,CAAC,GAAG58B,GAAA,CAAI,MAAM,CAAC,CAAC,CAAC;IAEzE,KAAK+2J,aAAA,GAAgB,KAAKF,YAAA,CAAapwJ,IAAA,CAAK5G,MAAA,CAAO+8B,CAAA,IAAK,CAACA,CAAC,GAAG58B,GAAA,CAAI,MAAM,CAAC,CAAC,CAAC;IAE1E,KAAKg3J,eAAA,GAAkB,IAAIpzH,YAAA,CAAa;IAMxC,KAAKqzH,WAAA,GAAc,IAAIrzH,YAAA,CAAa;IAMpC,KAAKszH,aAAA,GAAgB;IAerB,KAAKC,cAAA,GAAiBrC,MAAA,IAAU;MAC9B,IAAI,KAAKsC,SAAA,EAAW;QAElB,OAAO;MACT;MAIA,OAAOtC,MAAA,CAAOx6F,QAAA;IAChB;IACA,IAAI,KAAK0gB,SAAA,EAAW;MAGlB,KAAKA,SAAA,CAAUy3D,aAAA,GAAgB;IACjC;IAGA,IAAItjE,eAAA,EAAiBkoF,yBAAA,IAA6B,MAAM;MACtD,KAAKA,yBAAA,GAA4BloF,eAAA,CAAgBkoF,yBAAA;IACnD;IACA,KAAK5G,kBAAA,GAAqB,IAAI31E,kBAAA,CAAmBi2E,wBAAA,EAA0B/1E,SAAA,EAAW81E,eAAA,EAAiBD,UAAA,EAAY,KAAK11B,YAAY;IACpI,KAAKlY,sBAAA,GAAyBZ,qBAAA;IAC9B,KAAKtlB,eAAA,GAAkB,KAAKkmB,sBAAA,CAAuB;IACnD,KAAKj8C,QAAA,GAAWc,QAAA,CAASd,QAAQ,KAAK;IAEtC,KAAK7kD,EAAA,GAAK,KAAKA,EAAA;EACjB;EACA+iB,SAAA,EAAW;IACT,KAAKwwH,eAAA,GAAkB,IAAI79D,cAAA,CAAe,KAAKtM,QAAQ;IACvD,KAAK4vC,YAAA,CAAaxxH,IAAA,CAAK;IAIvB,KAAK+pJ,yBAAA,CAA0BjtJ,IAAA,CAAKioE,oBAAA,CAAqB,GAAG/tB,SAAA,CAAU,KAAKy1G,QAAQ,CAAC,EAAEzuH,SAAA,CAAU,MAAM,KAAK2vH,mBAAA,CAAoB,KAAKF,SAAS,CAAC;IAC9I,KAAKhrD,cAAA,CAAexpC,MAAA,CAAO,EAAEn8D,IAAA,CAAKk6C,SAAA,CAAU,KAAKy1G,QAAQ,CAAC,EAAEzuH,SAAA,CAAU,MAAM;MAC1E,IAAI,KAAKyvH,SAAA,EAAW;QAClB,KAAKG,aAAA,GAAgB,KAAKC,gBAAA,CAAiB,KAAKC,uBAAuB;QACvE,KAAK7rE,kBAAA,CAAmBkb,aAAA,CAAc;MACxC;IACF,CAAC;EACH;EACAn8C,mBAAA,EAAqB;IACnB,KAAKgsG,YAAA,CAAahtJ,IAAA,CAAK;IACvB,KAAKgtJ,YAAA,CAAatrJ,QAAA,CAAS;IAC3B,KAAKqsJ,eAAA,CAAgB;IACrB,KAAKhC,eAAA,CAAgBr9D,OAAA,CAAQ5xF,IAAA,CAAKk6C,SAAA,CAAU,KAAKy1G,QAAQ,CAAC,EAAEzuH,SAAA,CAAU9gC,KAAA,IAAS;MAC7EA,KAAA,CAAMwyF,KAAA,CAAMj8F,OAAA,CAAQ03J,MAAA,IAAUA,MAAA,CAAO3oE,MAAA,CAAO,CAAC;MAC7CtlF,KAAA,CAAMyyF,OAAA,CAAQl8F,OAAA,CAAQ03J,MAAA,IAAUA,MAAA,CAAOxoE,QAAA,CAAS,CAAC;IACnD,CAAC;IACD,KAAKzqF,OAAA,CAAQ8iC,OAAA,CAAQl+B,IAAA,CAAKypC,SAAA,CAAU,IAAI,GAAGyQ,SAAA,CAAU,KAAKy1G,QAAQ,CAAC,EAAEzuH,SAAA,CAAU,MAAM;MACnF,KAAKgwH,aAAA,CAAc;MACnB,KAAKhC,oBAAA,CAAqB;IAC5B,CAAC;EACH;EACA3qF,UAAA,EAAY;IACV,MAAM4sF,iBAAA,GAAoB,KAAKC,yBAAA,CAA0B;IACzD,MAAM78E,SAAA,GAAY,KAAKA,SAAA;IAIvB,IAAI48E,iBAAA,KAAsB,KAAKzB,sBAAA,EAAwB;MACrD,MAAMr5I,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;MACjC,KAAKquG,sBAAA,GAAyByB,iBAAA;MAC9B,IAAIA,iBAAA,EAAmB;QACrB96I,OAAA,CAAQ8C,YAAA,CAAa,mBAAmBg4I,iBAAiB;MAC3D,OAAO;QACL96I,OAAA,CAAQ6C,eAAA,CAAgB,iBAAiB;MAC3C;IACF;IACA,IAAIq7D,SAAA,EAAW;MAEb,IAAI,KAAK88E,gBAAA,KAAqB98E,SAAA,CAAUO,OAAA,EAAS;QAC/C,IAAI,KAAKu8E,gBAAA,KAAqB,UAAa98E,SAAA,CAAU1gB,QAAA,KAAa,QAAQ0gB,SAAA,CAAU1gB,QAAA,KAAa,KAAKA,QAAA,EAAU;UAC9G,KAAKA,QAAA,GAAW0gB,SAAA,CAAU1gB,QAAA;QAC5B;QACA,KAAKw9F,gBAAA,GAAmB98E,SAAA,CAAUO,OAAA;MACpC;MACA,KAAKF,gBAAA,CAAiB;IACxB;EACF;EACA32C,YAAYC,OAAA,EAAS;IAGnB,IAAIA,OAAA,CAAQ,UAAU,KAAKA,OAAA,CAAQ,qBAAqB,GAAG;MACzD,KAAKw2F,YAAA,CAAaxxH,IAAA,CAAK;IACzB;IACA,IAAIg7B,OAAA,CAAQ,2BAA2B,KAAK,KAAKwwH,WAAA,EAAa;MAC5D,KAAKA,WAAA,CAAYtxF,aAAA,CAAc,KAAKwzF,yBAAyB;IAC/D;EACF;EACA14I,YAAA,EAAc;IACZ,KAAKw2I,WAAA,EAAazyI,OAAA,CAAQ;IAC1B,KAAK0zI,QAAA,CAASzsJ,IAAA,CAAK;IACnB,KAAKysJ,QAAA,CAAS/qJ,QAAA,CAAS;IACvB,KAAK8vH,YAAA,CAAa9vH,QAAA,CAAS;IAC3B,KAAK0sJ,eAAA,CAAgB;EACvB;EAAA;EAEAjkF,OAAA,EAAS;IACP,KAAKsjF,SAAA,GAAY,KAAKroD,KAAA,CAAM,IAAI,KAAKv8F,IAAA,CAAK;EAC5C;EAAA;EAEAA,KAAA,EAAO;IACL,IAAI,CAAC,KAAKwlJ,QAAA,CAAS,GAAG;MACpB;IACF;IAIA,IAAI,KAAKjC,gBAAA,EAAkB;MACzB,KAAK0B,uBAAA,GAA0B,KAAK1B,gBAAA,CAAiBh7B,yBAAA,CAA0B;IACjF;IACA,KAAKw8B,aAAA,GAAgB,KAAKC,gBAAA,CAAiB,KAAKC,uBAAuB;IACvE,KAAKQ,yBAAA,CAA0B;IAC/B,KAAK3C,UAAA,GAAa;IAClB,KAAKH,WAAA,CAAY1xF,yBAAA,CAA0B,IAAI;IAC/C,KAAKy0F,uBAAA,CAAwB;IAC7B,KAAKtsE,kBAAA,CAAmBzlD,YAAA,CAAa;IAErC,KAAKg1F,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAoBAsuJ,0BAAA,EAA4B;IAO1B,MAAM7nF,KAAA,GAAQ,KAAKvV,WAAA,CAAY/S,aAAA,CAAcokB,OAAA,CAAQ,mDAAmD;IACxG,IAAI,CAACkE,KAAA,EAAO;MAEV;IACF;IACA,MAAM+nF,OAAA,GAAU,GAAG,KAAKh2I,EAAE;IAC1B,IAAI,KAAK+0I,aAAA,EAAe;MACtB73F,sBAAA,CAAuB,KAAK63F,aAAA,EAAe,aAAaiB,OAAO;IACjE;IACAl5F,mBAAA,CAAoBmR,KAAA,EAAO,aAAa+nF,OAAO;IAC/C,KAAKjB,aAAA,GAAgB9mF,KAAA;EACvB;EAAA;EAEA2nF,gBAAA,EAAkB;IAChB,IAAI,CAAC,KAAKb,aAAA,EAAe;MAEvB;IACF;IACA,MAAMiB,OAAA,GAAU,GAAG,KAAKh2I,EAAE;IAC1Bk9C,sBAAA,CAAuB,KAAK63F,aAAA,EAAe,aAAaiB,OAAO;IAC/D,KAAKjB,aAAA,GAAgB;EACvB;EAAA;EAEAnoD,MAAA,EAAQ;IACN,IAAI,KAAKumD,UAAA,EAAY;MACnB,KAAKA,UAAA,GAAa;MAClB,KAAKH,WAAA,CAAY1xF,yBAAA,CAA0B,KAAKg3C,MAAA,CAAO,IAAI,QAAQ,KAAK;MACxE,KAAK7uB,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,KAAKkwH,UAAA,CAAW;MAEhB,KAAKl7B,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA6iI,WAAW5uI,KAAA,EAAO;IAChB,KAAKi4J,YAAA,CAAaj4J,KAAK;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAguI,iBAAiB1rI,EAAA,EAAI;IACnB,KAAK8/I,SAAA,GAAY9/I,EAAA;EACnB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAyrI,kBAAkBzrI,EAAA,EAAI;IACpB,KAAKm2J,UAAA,GAAan2J,EAAA;EACpB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA2rI,iBAAiB1lE,UAAA,EAAY;IAC3B,KAAK7L,QAAA,GAAW6L,UAAA;IAChB,KAAKylB,kBAAA,CAAmBzlD,YAAA,CAAa;IACrC,KAAKg1F,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;EAEA,IAAIytJ,UAAA,EAAY;IACd,OAAO,KAAK9B,UAAA;EACd;EAAA;EAEA,IAAI58E,SAAA,EAAW;IACb,OAAO,KAAK6S,QAAA,GAAW,KAAKmqE,eAAA,EAAiBh9E,QAAA,IAAY,EAAC,GAAI,KAAKg9E,eAAA,EAAiBh9E,QAAA,CAAS,CAAC;EAChG;EAAA;EAEA,IAAI06E,aAAA,EAAe;IACjB,IAAI,KAAKjB,KAAA,EAAO;MACd,OAAO;IACT;IACA,IAAI,KAAKp6D,SAAA,EAAW;MAClB,MAAMoxD,eAAA,GAAkB,KAAKuM,eAAA,CAAgBh9E,QAAA,CAAS14E,GAAA,CAAI80J,MAAA,IAAUA,MAAA,CAAO7oE,SAAS;MACpF,IAAI,KAAKwuB,MAAA,CAAO,GAAG;QACjB0uC,eAAA,CAAgBtsI,OAAA,CAAQ;MAC1B;MAEA,OAAOssI,eAAA,CAAgB5mJ,IAAA,CAAK,IAAI;IAClC;IACA,OAAO,KAAKmzJ,eAAA,CAAgBh9E,QAAA,CAAS,CAAC,EAAEuT,SAAA;EAC1C;EAAA;EAEA5Q,iBAAA,EAAmB;IACjB,KAAKo1E,kBAAA,CAAmBp1E,gBAAA,CAAiB;EAC3C;EAAA;EAEAo/B,OAAA,EAAS;IACP,OAAO,KAAKljC,IAAA,GAAO,KAAKA,IAAA,CAAK35E,KAAA,KAAU,QAAQ;EACjD;EAAA;EAEA4uF,eAAe3lF,KAAA,EAAO;IACpB,IAAI,CAAC,KAAKyzD,QAAA,EAAU;MAClB,KAAK88F,SAAA,GAAY,KAAKgB,kBAAA,CAAmBvxJ,KAAK,IAAI,KAAKwxJ,oBAAA,CAAqBxxJ,KAAK;IACnF;EACF;EAAA;EAEAwxJ,qBAAqBxxJ,KAAA,EAAO;IAC1B,MAAM89D,OAAA,GAAU99D,KAAA,CAAM89D,OAAA;IACtB,MAAM2zF,UAAA,GAAa3zF,OAAA,KAAYjN,UAAA,IAAciN,OAAA,KAAYnN,QAAA,IAAYmN,OAAA,KAAYpN,UAAA,IAAcoN,OAAA,KAAYlN,WAAA;IAC3G,MAAM8gG,SAAA,GAAY5zF,OAAA,KAAY9N,KAAA,IAAS8N,OAAA,KAAYzN,KAAA;IACnD,MAAMv6C,OAAA,GAAU,KAAKw4I,WAAA;IAErB,IAAI,CAACx4I,OAAA,CAAQ6oD,QAAA,CAAS,KAAK+yF,SAAA,IAAa,CAACtgG,cAAA,CAAepxD,KAAK,MAAM,KAAK0kF,QAAA,IAAY1kF,KAAA,CAAMuf,MAAA,KAAWkyI,UAAA,EAAY;MAC/GzxJ,KAAA,CAAMqe,cAAA,CAAe;MACrB,KAAK1S,IAAA,CAAK;IACZ,WAAW,CAAC,KAAK+4E,QAAA,EAAU;MACzB,MAAMitE,wBAAA,GAA2B,KAAK9/E,QAAA;MACtC/7D,OAAA,CAAQ+nD,SAAA,CAAU79D,KAAK;MACvB,MAAM4xJ,cAAA,GAAiB,KAAK//E,QAAA;MAE5B,IAAI+/E,cAAA,IAAkBD,wBAAA,KAA6BC,cAAA,EAAgB;QAGjE,KAAK5nF,cAAA,CAAevB,QAAA,CAASmpF,cAAA,CAAexsE,SAAA,EAAW,GAAK;MAC9D;IACF;EACF;EAAA;EAEAmsE,mBAAmBvxJ,KAAA,EAAO;IACxB,MAAM8V,OAAA,GAAU,KAAKw4I,WAAA;IACrB,MAAMxwF,OAAA,GAAU99D,KAAA,CAAM89D,OAAA;IACtB,MAAM2zF,UAAA,GAAa3zF,OAAA,KAAYjN,UAAA,IAAciN,OAAA,KAAYnN,QAAA;IACzD,MAAMgO,QAAA,GAAW7oD,OAAA,CAAQ6oD,QAAA,CAAS;IAClC,IAAI8yF,UAAA,IAAczxJ,KAAA,CAAMuf,MAAA,EAAQ;MAE9Bvf,KAAA,CAAMqe,cAAA,CAAe;MACrB,KAAK6pF,KAAA,CAAM;IAGb,WAAW,CAACvpC,QAAA,KAAab,OAAA,KAAY9N,KAAA,IAAS8N,OAAA,KAAYzN,KAAA,KAAUv6C,OAAA,CAAQ4oD,UAAA,IAAc,CAACtN,cAAA,CAAepxD,KAAK,GAAG;MAChHA,KAAA,CAAMqe,cAAA,CAAe;MACrBvI,OAAA,CAAQ4oD,UAAA,CAAWknB,qBAAA,CAAsB;IAC3C,WAAW,CAACjnB,QAAA,IAAY,KAAKuyB,SAAA,IAAapzB,OAAA,KAAY9M,CAAA,IAAKhxD,KAAA,CAAMwf,OAAA,EAAS;MACxExf,KAAA,CAAMqe,cAAA,CAAe;MACrB,MAAMwzI,oBAAA,GAAuB,KAAK72J,OAAA,CAAQ86B,IAAA,CAAKssH,GAAA,IAAO,CAACA,GAAA,CAAI3uF,QAAA,IAAY,CAAC2uF,GAAA,CAAIvwE,QAAQ;MACpF,KAAK72E,OAAA,CAAQzE,OAAA,CAAQ03J,MAAA,IAAU;QAC7B,IAAI,CAACA,MAAA,CAAOx6F,QAAA,EAAU;UACpBo+F,oBAAA,GAAuB5D,MAAA,CAAO3oE,MAAA,CAAO,IAAI2oE,MAAA,CAAOxoE,QAAA,CAAS;QAC3D;MACF,CAAC;IACH,OAAO;MACL,MAAMqsE,sBAAA,GAAyBh8I,OAAA,CAAQ2oD,eAAA;MACvC3oD,OAAA,CAAQ+nD,SAAA,CAAU79D,KAAK;MACvB,IAAI,KAAKkxF,SAAA,IAAaugE,UAAA,IAAczxJ,KAAA,CAAM0f,QAAA,IAAY5J,OAAA,CAAQ4oD,UAAA,IAAc5oD,OAAA,CAAQ2oD,eAAA,KAAoBqzF,sBAAA,EAAwB;QAC9Hh8I,OAAA,CAAQ4oD,UAAA,CAAWknB,qBAAA,CAAsB;MAC3C;IACF;EACF;EACAza,SAAA,EAAW;IACT,IAAI,CAAC,KAAK1X,QAAA,EAAU;MAClB,KAAK+6F,QAAA,GAAW;MAChB,KAAKl6B,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;AAAA;AAAA;AAAA;EAKAsoE,QAAA,EAAU;IACR,KAAKojF,QAAA,GAAW;IAChB,KAAKF,WAAA,EAAa9wF,eAAA,CAAgB;IAClC,IAAI,CAAC,KAAK/J,QAAA,IAAY,CAAC,KAAK88F,SAAA,EAAW;MACrC,KAAKf,UAAA,CAAW;MAChB,KAAKzqE,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,KAAKg1F,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;AAAA;AAAA;EAIAivJ,YAAA,EAAc;IACZ,KAAKC,WAAA,CAAYh2C,cAAA,CAAep8G,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC,EAAEtI,SAAA,CAAU,MAAM;MAC5D,KAAKikD,kBAAA,CAAmBkb,aAAA,CAAc;MACtC,KAAKouD,mBAAA,CAAoB;IAC3B,CAAC;EACH;EAAA;EAEApB,eAAA,EAAiB;IACf,OAAO,KAAKiC,gBAAA,GAAmB,OAAO,KAAKA,gBAAA,CAAiB1wE,KAAK,KAAK;EACxE;EAAA;EAEA,IAAI8sE,MAAA,EAAQ;IACV,OAAO,CAAC,KAAKuD,eAAA,IAAmB,KAAKA,eAAA,CAAgBx8D,OAAA,CAAQ;EAC/D;EACAy8D,qBAAA,EAAuB;IAGrBhmJ,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;MAC3B,IAAI,KAAK6xE,SAAA,EAAW;QAClB,KAAK34E,MAAA,GAAS,KAAK24E,SAAA,CAAUp9E,KAAA;MAC/B;MACA,KAAKk7J,oBAAA,CAAqB,KAAKz2J,MAAM;MACrC,KAAK84H,YAAA,CAAaxxH,IAAA,CAAK;IACzB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAmvJ,qBAAqBl7J,KAAA,EAAO;IAC1B,KAAKiE,OAAA,CAAQzE,OAAA,CAAQ03J,MAAA,IAAUA,MAAA,CAAO9uF,iBAAA,CAAkB,CAAC;IACzD,KAAK0vF,eAAA,CAAgB92I,KAAA,CAAM;IAC3B,IAAI,KAAK2sE,QAAA,IAAY3tF,KAAA,EAAO;MAC1B,IAAI,CAACiB,KAAA,CAAMkB,OAAA,CAAQnC,KAAK,MAAM,OAAOU,SAAA,KAAc,eAAeA,SAAA,GAAY;QAC5E,MAAM81J,8BAAA,CAA+B;MACvC;MACAx2J,KAAA,CAAMR,OAAA,CAAQwhH,YAAA,IAAgB,KAAKm6C,oBAAA,CAAqBn6C,YAAY,CAAC;MACrE,KAAKo6C,WAAA,CAAY;IACnB,OAAO;MACL,MAAMC,mBAAA,GAAsB,KAAKF,oBAAA,CAAqBn7J,KAAK;MAG3D,IAAIq7J,mBAAA,EAAqB;QACvB,KAAK9D,WAAA,CAAY1wF,gBAAA,CAAiBw0F,mBAAmB;MACvD,WAAW,CAAC,KAAK7B,SAAA,EAAW;QAG1B,KAAKjC,WAAA,CAAY1wF,gBAAA,CAAiB,EAAE;MACtC;IACF;IACA,KAAKmnB,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;AAAA;AAAA;AAAA;EAKA4yH,qBAAqBn7J,KAAA,EAAO;IAC1B,MAAMq7J,mBAAA,GAAsB,KAAKp3J,OAAA,CAAQqb,IAAA,CAAK43I,MAAA,IAAU;MAGtD,IAAI,KAAKY,eAAA,CAAgB38D,UAAA,CAAW+7D,MAAM,GAAG;QAC3C,OAAO;MACT;MACA,IAAI;QAEF,OAAOA,MAAA,CAAOl3J,KAAA,IAAS,QAAQ,KAAKgqJ,YAAA,CAAakN,MAAA,CAAOl3J,KAAA,EAAOA,KAAK;MACtE,SAASmI,KAAA,EAAO;QACd,IAAI,OAAOzH,SAAA,KAAc,eAAeA,SAAA,EAAW;UAEjDgvB,OAAA,CAAQhf,IAAA,CAAKvI,KAAK;QACpB;QACA,OAAO;MACT;IACF,CAAC;IACD,IAAIkzJ,mBAAA,EAAqB;MACvB,KAAKvD,eAAA,CAAgBvpE,MAAA,CAAO8sE,mBAAmB;IACjD;IACA,OAAOA,mBAAA;EACT;EAAA;EAEApD,aAAanwB,QAAA,EAAU;IAErB,IAAIA,QAAA,KAAa,KAAKrjI,MAAA,IAAU,KAAK01F,SAAA,IAAal5F,KAAA,CAAMkB,OAAA,CAAQ2lI,QAAQ,GAAG;MACzE,IAAI,KAAK7jI,OAAA,EAAS;QAChB,KAAKi3J,oBAAA,CAAqBpzB,QAAQ;MACpC;MACA,KAAKrjI,MAAA,GAASqjI,QAAA;MACd,OAAO;IACT;IACA,OAAO;EACT;EAAA;EAEA8xB,iBAAiB0B,eAAA,EAAiB;IAChC,IAAI,KAAKxC,UAAA,KAAe,QAAQ;MAC9B,MAAMyC,YAAA,GAAeD,eAAA,YAA2Bn3C,gBAAA,GAAmBm3C,eAAA,CAAgBrnE,UAAA,GAAaqnE,eAAA,IAAmB,KAAKr+F,WAAA;MACxH,OAAOs+F,YAAA,CAAarxG,aAAA,CAAc48B,qBAAA,CAAsB,EAAEvvB,KAAA;IAC5D;IACA,OAAO,KAAKuhG,UAAA,KAAe,OAAO,KAAK,KAAKA,UAAA;EAC9C;EAAA;EAEAlB,sBAAA,EAAwB;IACtB,IAAI,KAAK3zJ,OAAA,EAAS;MAChB,WAAWizJ,MAAA,IAAU,KAAKjzJ,OAAA,EAAS;QACjCizJ,MAAA,CAAOlpE,kBAAA,CAAmBzlD,YAAA,CAAa;MACzC;IACF;EACF;EAAA;EAEAuxH,gBAAA,EAAkB;IAChB,KAAKvC,WAAA,GAAc,IAAIpvF,0BAAA,CAA2B,KAAKlkE,OAAO,EAAEgiE,aAAA,CAAc,KAAKwzF,yBAAyB,EAAE7zF,uBAAA,CAAwB,EAAEC,yBAAA,CAA0B,KAAKg3C,MAAA,CAAO,IAAI,QAAQ,KAAK,EAAEn2C,cAAA,CAAe,EAAEC,cAAA,CAAe,EAAEX,uBAAA,CAAwB,CAAC,UAAU,CAAC,EAAER,aAAA,CAAc,KAAK+zF,cAAc;IAC1S,KAAKhC,WAAA,CAAYxyF,MAAA,CAAOh7B,SAAA,CAAU,MAAM;MACtC,IAAI,KAAKyvH,SAAA,EAAW;QAGlB,IAAI,CAAC,KAAK7rE,QAAA,IAAY,KAAK4pE,WAAA,CAAY5vF,UAAA,EAAY;UACjD,KAAK4vF,WAAA,CAAY5vF,UAAA,CAAWknB,qBAAA,CAAsB;QACpD;QAGA,KAAK1iB,KAAA,CAAM;QACX,KAAKglC,KAAA,CAAM;MACb;IACF,CAAC;IACD,KAAKomD,WAAA,CAAYvyF,MAAA,CAAOj7B,SAAA,CAAU,MAAM;MACtC,IAAI,KAAK2tH,UAAA,IAAc,KAAKP,KAAA,EAAO;QACjC,KAAKF,qBAAA,CAAsB,KAAKM,WAAA,CAAY7vF,eAAA,IAAmB,CAAC;MAClE,WAAW,CAAC,KAAKgwF,UAAA,IAAc,CAAC,KAAK/pE,QAAA,IAAY,KAAK4pE,WAAA,CAAY5vF,UAAA,EAAY;QAC5E,KAAK4vF,WAAA,CAAY5vF,UAAA,CAAWknB,qBAAA,CAAsB;MACpD;IACF,CAAC;EACH;EAAA;EAEAkrE,cAAA,EAAgB;IACd,MAAMyB,kBAAA,GAAqBl9G,KAAA,CAAM,KAAKr6C,OAAA,CAAQ8iC,OAAA,EAAS,KAAKyxH,QAAQ;IACpE,KAAKQ,sBAAA,CAAuBnwJ,IAAA,CAAKk6C,SAAA,CAAUy4G,kBAAkB,CAAC,EAAEzxH,SAAA,CAAU9gC,KAAA,IAAS;MACjF,KAAKwyJ,SAAA,CAAUxyJ,KAAA,CAAMuL,MAAA,EAAQvL,KAAA,CAAMwkF,WAAW;MAC9C,IAAIxkF,KAAA,CAAMwkF,WAAA,IAAe,CAAC,KAAKE,QAAA,IAAY,KAAK+pE,UAAA,EAAY;QAC1D,KAAKvmD,KAAA,CAAM;QACX,KAAKhlC,KAAA,CAAM;MACb;IACF,CAAC;IAGD7tB,KAAA,CAAM,GAAG,KAAKr6C,OAAA,CAAQ7B,GAAA,CAAI80J,MAAA,IAAUA,MAAA,CAAO35E,aAAa,CAAC,EAAE10E,IAAA,CAAKk6C,SAAA,CAAUy4G,kBAAkB,CAAC,EAAEzxH,SAAA,CAAU,MAAM;MAI7G,KAAKikD,kBAAA,CAAmBkb,aAAA,CAAc;MACtC,KAAKq0B,YAAA,CAAaxxH,IAAA,CAAK;IACzB,CAAC;EACH;EAAA;EAEA0vJ,UAAUvE,MAAA,EAAQzpE,WAAA,EAAa;IAC7B,MAAMiuE,WAAA,GAAc,KAAK5D,eAAA,CAAgB38D,UAAA,CAAW+7D,MAAM;IAC1D,IAAIA,MAAA,CAAOl3J,KAAA,IAAS,QAAQ,CAAC,KAAKm6F,SAAA,EAAW;MAC3C+8D,MAAA,CAAOxoE,QAAA,CAAS;MAChB,KAAKopE,eAAA,CAAgB92I,KAAA,CAAM;MAC3B,IAAI,KAAKhhB,KAAA,IAAS,MAAM;QACtB,KAAK27J,iBAAA,CAAkBzE,MAAA,CAAOl3J,KAAK;MACrC;IACF,OAAO;MACL,IAAI07J,WAAA,KAAgBxE,MAAA,CAAOp8E,QAAA,EAAU;QACnCo8E,MAAA,CAAOp8E,QAAA,GAAW,KAAKg9E,eAAA,CAAgBvpE,MAAA,CAAO2oE,MAAM,IAAI,KAAKY,eAAA,CAAgBppE,QAAA,CAASwoE,MAAM;MAC9F;MACA,IAAIzpE,WAAA,EAAa;QACf,KAAK8pE,WAAA,CAAY/wF,aAAA,CAAc0wF,MAAM;MACvC;MACA,IAAI,KAAKvpE,QAAA,EAAU;QACjB,KAAKytE,WAAA,CAAY;QACjB,IAAI3tE,WAAA,EAAa;UAKf,KAAKthB,KAAA,CAAM;QACb;MACF;IACF;IACA,IAAIuvF,WAAA,KAAgB,KAAK5D,eAAA,CAAgB38D,UAAA,CAAW+7D,MAAM,GAAG;MAC3D,KAAKyE,iBAAA,CAAkB;IACzB;IACA,KAAKp+B,YAAA,CAAaxxH,IAAA,CAAK;EACzB;EAAA;EAEAqvJ,YAAA,EAAc;IACZ,IAAI,KAAKztE,QAAA,EAAU;MACjB,MAAM1pF,OAAA,GAAU,KAAKA,OAAA,CAAQopD,OAAA,CAAQ;MACrC,KAAKyqG,eAAA,CAAgBljI,IAAA,CAAK,CAACX,CAAA,EAAGC,CAAA,KAAM;QAClC,OAAO,KAAK0nI,cAAA,GAAiB,KAAKA,cAAA,CAAe3nI,CAAA,EAAGC,CAAA,EAAGjwB,OAAO,IAAIA,OAAA,CAAQtE,OAAA,CAAQs0B,CAAC,IAAIhwB,OAAA,CAAQtE,OAAA,CAAQu0B,CAAC;MAC1G,CAAC;MACD,KAAKqpG,YAAA,CAAaxxH,IAAA,CAAK;IACzB;EACF;EAAA;EAEA4vJ,kBAAkBlhG,aAAA,EAAe;IAC/B,IAAIohG,WAAA;IACJ,IAAI,KAAKluE,QAAA,EAAU;MACjBkuE,WAAA,GAAc,KAAK/gF,QAAA,CAAS14E,GAAA,CAAI80J,MAAA,IAAUA,MAAA,CAAOl3J,KAAK;IACxD,OAAO;MACL67J,WAAA,GAAc,KAAK/gF,QAAA,GAAW,KAAKA,QAAA,CAAS96E,KAAA,GAAQy6D,aAAA;IACtD;IACA,KAAKh2D,MAAA,GAASo3J,WAAA;IACd,KAAKxC,WAAA,CAAYtxH,IAAA,CAAK8zH,WAAW;IACjC,KAAKzZ,SAAA,CAAUyZ,WAAW;IAC1B,KAAKzC,eAAA,CAAgBrxH,IAAA,CAAK,KAAKyvH,eAAA,CAAgBqE,WAAW,CAAC;IAC3D,KAAK7tE,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;AAAA;AAAA;AAAA;EAKA+xH,wBAAA,EAA0B;IACxB,IAAI,KAAK/C,WAAA,EAAa;MACpB,IAAI,KAAKhD,KAAA,EAAO;QAId,IAAIuH,uBAAA,GAA0B;QAC9B,SAASp8J,KAAA,GAAQ,GAAGA,KAAA,GAAQ,KAAKuE,OAAA,CAAQlD,MAAA,EAAQrB,KAAA,IAAS;UACxD,MAAMw3J,MAAA,GAAS,KAAKjzJ,OAAA,CAAQ7D,GAAA,CAAIV,KAAK;UACrC,IAAI,CAACw3J,MAAA,CAAOx6F,QAAA,EAAU;YACpBo/F,uBAAA,GAA0Bp8J,KAAA;YAC1B;UACF;QACF;QACA,KAAK63J,WAAA,CAAY/wF,aAAA,CAAcs1F,uBAAuB;MACxD,OAAO;QACL,KAAKvE,WAAA,CAAY/wF,aAAA,CAAc,KAAKsxF,eAAA,CAAgBh9E,QAAA,CAAS,CAAC,CAAC;MACjE;IACF;EACF;EAAA;EAEAs/E,SAAA,EAAW;IACT,OAAO,CAAC,KAAK1C,UAAA,IAAc,CAAC,KAAKh7F,QAAA,IAAY,KAAKz4D,OAAA,EAASlD,MAAA,GAAS;EACtE;EAAA;EAEAorE,MAAMloE,OAAA,EAAS;IACb,KAAKg5D,WAAA,CAAY/S,aAAA,CAAciiB,KAAA,CAAMloE,OAAO;EAC9C;EAAA;EAEAkyJ,wBAAA,EAA0B;IACxB,IAAI,KAAKtyF,SAAA,EAAW;MAClB,OAAO;IACT;IACA,MAAMk4F,OAAA,GAAU,KAAK5D,gBAAA,EAAkBj7B,UAAA,CAAW;IAClD,MAAM8+B,eAAA,GAAkBD,OAAA,GAAUA,OAAA,GAAU,MAAM;IAClD,OAAO,KAAKE,cAAA,GAAiBD,eAAA,GAAkB,KAAKC,cAAA,GAAiBF,OAAA;EACvE;EAAA;EAEAG,yBAAA,EAA2B;IACzB,IAAI,KAAK1C,SAAA,IAAa,KAAKjC,WAAA,IAAe,KAAKA,WAAA,CAAY5vF,UAAA,EAAY;MACrE,OAAO,KAAK4vF,WAAA,CAAY5vF,UAAA,CAAWpjD,EAAA;IACrC;IACA,OAAO;EACT;EAAA;EAEA01I,0BAAA,EAA4B;IAC1B,IAAI,KAAKp2F,SAAA,EAAW;MAClB,OAAO;IACT;IACA,MAAMk4F,OAAA,GAAU,KAAK5D,gBAAA,EAAkBj7B,UAAA,CAAW;IAClD,IAAIl9H,KAAA,IAAS+7J,OAAA,GAAUA,OAAA,GAAU,MAAM,MAAM,KAAKrD,QAAA;IAClD,IAAI,KAAKuD,cAAA,EAAgB;MACvBj8J,KAAA,IAAS,MAAM,KAAKi8J,cAAA;IACtB;IACA,OAAOj8J,KAAA;EACT;EAAA;EAEA05J,oBAAoByC,MAAA,EAAQ;IAC1B,KAAKlD,YAAA,CAAalxH,IAAA,CAAKo0H,MAAM;EAC/B;EAAA;AAAA;AAAA;AAAA;EAKAn9B,kBAAkB19D,GAAA,EAAK;IACrB,IAAIA,GAAA,CAAIvgE,MAAA,EAAQ;MACd,KAAKk8D,WAAA,CAAY/S,aAAA,CAAcloC,YAAA,CAAa,oBAAoBs/C,GAAA,CAAI38D,IAAA,CAAK,GAAG,CAAC;IAC/E,OAAO;MACL,KAAKs4D,WAAA,CAAY/S,aAAA,CAAcnoC,eAAA,CAAgB,kBAAkB;IACnE;EACF;EAAA;AAAA;AAAA;AAAA;EAKA0+G,iBAAA,EAAmB;IACjB,KAAKt0D,KAAA,CAAM;IACX,KAAKv3D,IAAA,CAAK;EACZ;EAAA;AAAA;AAAA;AAAA;EAKA,IAAI0pH,iBAAA,EAAmB;IAGrB,OAAO,KAAKk7B,SAAA,IAAa,CAAC,KAAKjF,KAAA,IAAS,KAAKv2B,OAAA,IAAW,CAAC,CAAC,KAAKwN,WAAA;EACjE;AA8IF;AA5IIwrB,UAAA,CAAKxtJ,IAAA,GAAO,SAAS4yJ,kBAAkBv4J,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAKmzJ,UAAA,EAAc/rG,iBAAA,CAAqB63C,aAAa,GAAM73C,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBm5B,iBAAiB,GAAMn5B,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,GAAMxuB,iBAAA,CAAqB61F,MAAA,EAAQ,CAAC,GAAM71F,iBAAA,CAAqBu8F,kBAAA,EAAoB,CAAC,GAAMv8F,iBAAA,CAAkB8vE,cAAA,EAAgB,CAAC,GAAM9vE,iBAAA,CAAqB2pF,SAAA,EAAW,EAAE,GAAM1pF,iBAAA,CAAkB,UAAU,GAAMD,iBAAA,CAAkByrG,0BAA0B,GAAMzrG,iBAAA,CAAqB0nB,aAAa,GAAM1nB,iBAAA,CAAkB2rG,iBAAA,EAAmB,CAAC,CAAC;AAC3lB;AAGAI,UAAA,CAAKnrH,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMkwJ,UAAA;EACNruH,SAAA,EAAW,CAAC,CAAC,YAAY,CAAC;EAC1BklB,cAAA,EAAgB,SAASwuG,yBAAyBjwH,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IACnE,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAU+oG,kBAAA,EAAoB,CAAC;MAC9C9oG,cAAA,CAAeD,QAAA,EAAU4hC,SAAA,EAAW,CAAC;MACrC3hC,cAAA,CAAeD,QAAA,EAAU2+B,YAAA,EAAc,CAAC;IAC7C;IACA,IAAItgD,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIwkI,aAAA,GAAgBznG,EAAA,CAAGxlD,KAAA;MACjEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIjtB,OAAA,GAAUgqD,EAAA;MACxDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI8+D,YAAA,GAAe/hC,EAAA;IAClE;EACF;EACAghC,SAAA,EAAW,SAASqtE,gBAAgBlwH,EAAA,EAAIlb,GAAA,EAAK;IAC3C,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,MAAK,CAAC;MAClB8U,WAAA,CAAY7U,MAAK,CAAC;MAClB6U,WAAA,CAAY82B,mBAAA,EAAqB,CAAC;IACvC;IACA,IAAI75E,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIqwB,OAAA,GAAU0M,EAAA,CAAGxlD,KAAA;MAC3DylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIimI,KAAA,GAAQlpG,EAAA,CAAGxlD,KAAA;MACzDylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI+pI,WAAA,GAAchtG,EAAA,CAAGxlD,KAAA;IACpE;EACF;EACA87E,SAAA,EAAW,CAAC,QAAQ,YAAY,qBAAqB,QAAQ,iBAAiB,WAAW,GAAG,gBAAgB;EAC5Gj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASgxG,uBAAuBnwH,EAAA,EAAIlb,GAAA,EAAK;IACrD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,WAAW,SAAS+wG,qCAAqC7wG,MAAA,EAAQ;QAC7E,OAAOz6B,GAAA,CAAI09D,cAAA,CAAejjC,MAAM;MAClC,CAAC,EAAE,SAAS,SAAS8wG,mCAAA,EAAqC;QACxD,OAAOvrI,GAAA,CAAIkjD,QAAA,CAAS;MACtB,CAAC,EAAE,QAAQ,SAASsoF,kCAAA,EAAoC;QACtD,OAAOxrI,GAAA,CAAImjD,OAAA,CAAQ;MACrB,CAAC;IACH;IACA,IAAIjoC,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,MAAM16B,GAAA,CAAI3M,EAAE,EAAE,YAAY2M,GAAA,CAAIwrC,QAAA,GAAW,KAAKxrC,GAAA,CAAIk4C,QAAQ,EAAE,iBAAiBl4C,GAAA,CAAIsoI,SAAA,GAAYtoI,GAAA,CAAI3M,EAAA,GAAK,WAAW,IAAI,EAAE,iBAAiB2M,GAAA,CAAIsoI,SAAS,EAAE,cAActoI,GAAA,CAAI2yC,SAAA,IAAa,IAAI,EAAE,iBAAiB3yC,GAAA,CAAIwhE,QAAA,CAASrwF,QAAA,CAAS,CAAC,EAAE,iBAAiB6uB,GAAA,CAAIwrC,QAAA,CAASr6D,QAAA,CAAS,CAAC,EAAE,gBAAgB6uB,GAAA,CAAIssD,UAAU,EAAE,yBAAyBtsD,GAAA,CAAIgrI,wBAAA,CAAyB,CAAC;MACnX5wE,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIwrC,QAAQ,EAAE,0BAA0BxrC,GAAA,CAAIssD,UAAU,EAAE,2BAA2BtsD,GAAA,CAAIwhE,QAAQ,EAAE,wBAAwBxhE,GAAA,CAAIqjI,KAAK,EAAE,2BAA2BrjI,GAAA,CAAIy8D,QAAQ;IACvN;EACF;EACA/kD,MAAA,EAAQ;IACNm2F,mBAAA,EAAqB,CAAIlzE,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,qBAAqB;IACrFu+B,UAAA,EAAY;IACZh1C,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F+hC,aAAA,EAAe,CAAIjiC,UAAA,CAAaC,0BAAA,EAA4B,iBAAiB,iBAAiBC,gBAAgB;IAC9Gqd,QAAA,EAAU,CAAIvd,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAY9rD,KAAA,IAASA,KAAA,IAAS,OAAO,IAAIs0F,eAAA,CAAgBt0F,KAAK,CAAC;IAClI+tF,4BAAA,EAA8B,CAAIliC,UAAA,CAAaC,0BAAA,EAA4B,gCAAgC,gCAAgCC,gBAAgB;IAC3Jy/E,WAAA,EAAa;IACb94C,QAAA,EAAU,CAAI7mC,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F4hC,QAAA,EAAU,CAAI9hC,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F8sG,sBAAA,EAAwB,CAAIhtG,UAAA,CAAaC,0BAAA,EAA4B,0BAA0B,0BAA0BC,gBAAgB;IACzIuuC,WAAA,EAAa;IACbt6F,KAAA,EAAO;IACP6jE,SAAA,EAAW,CAAIhY,UAAA,CAAasnB,IAAA,EAAM,cAAc,WAAW;IAC3D8oF,cAAA,EAAgB,CAAIpwG,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,gBAAgB;IAC1Ey/E,iBAAA,EAAmB;IACnB6G,yBAAA,EAA2B,CAAI5tG,UAAA,CAAaC,0BAAA,EAA4B,6BAA6B,6BAA6BwoC,eAAe;IACjJsnE,cAAA,EAAgB;IAChBr3I,EAAA,EAAI;IACJu0I,UAAA,EAAY;EACd;EACAjwH,OAAA,EAAS;IACPowH,YAAA,EAAc;IACdC,aAAA,EAAe;IACfC,aAAA,EAAe;IACfC,eAAA,EAAiB;IACjBC,WAAA,EAAa;EACf;EACAvwH,QAAA,EAAU,CAAC,WAAW;EACtBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASkiH,mBAAA;IACTjiH,WAAA,EAAaq+I;EACf,GAAG;IACDt+I,OAAA,EAAS8zE,2BAAA;IACT7zE,WAAA,EAAaq+I;EACf,CAAC,CAAC,GAAMhrG,wBAAA,EAA6BhjB,oBAAA,EAAyB+C,mBAAmB;EACjFkhD,kBAAA,EAAoBzS;EACpBxuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,yBAAyB,oBAAoB,WAAW,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,sBAAsB,IAAI,GAAG,0BAA0B,GAAG,OAAO,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,GAAG,8BAA8B,yBAAyB,GAAG,CAAC,GAAG,8BAA8B,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,WAAW,aAAa,SAAS,QAAQ,UAAU,QAAQ,aAAa,SAAS,eAAe,MAAM,GAAG,CAAC,KAAK,gBAAgB,GAAG,CAAC,yBAAyB,IAAI,mCAAmC,IAAI,kCAAkC,IAAI,oCAAoC,oCAAoC,GAAG,iBAAiB,UAAU,UAAU,iCAAiC,qCAAqC,6BAA6B,2BAA2B,gCAAgC,0BAA0B,GAAG,CAAC,GAAG,2BAA2B,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,QAAQ,WAAW,YAAY,MAAM,GAAG,WAAW,SAAS,CAAC;EACj9BhhD,QAAA,EAAU,SAASywH,mBAAmBvwH,EAAA,EAAIlb,GAAA,EAAK;IAC7C,IAAIkb,EAAA,GAAK,GAAG;MACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;MAC7BhzC,eAAA,CAAgB7S,IAAG;MACnBU,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7BxvB,UAAA,CAAW,SAAS,SAASmxG,wCAAA,EAA0C;QACrEr8B,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAItc,IAAA,CAAK,CAAC;MAClC,CAAC;MACEqmE,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1BwU,UAAA,CAAW,GAAG4lE,gCAAA,EAAkC,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAGI,gCAAA,EAAkC,GAAG,CAAC;MAC1Gt6E,YAAA,CAAa;MACbF,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACvC4hF,cAAA,CAAe;MACf5hF,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1B5uC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtB8uC,YAAA,CAAa,EAAE,EAAE,EAAE;MACnBsU,UAAA,CAAW,IAAIkmE,iCAAA,EAAmC,GAAG,GAAG,eAAe,CAAC;MACxElqG,UAAA,CAAW,iBAAiB,SAASqxG,yDAAA,EAA2D;QAC9Fv8B,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAIigF,KAAA,CAAM,CAAC;MACnC,CAAC,EAAE,UAAU,SAAS4rD,kDAAA,EAAoD;QACrEx8B,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAI8pI,WAAA,CAAY,CAAC;MACzC,CAAC,EAAE,UAAU,SAASgC,kDAAA,EAAoD;QACrEz8B,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAIigF,KAAA,CAAM,CAAC;MACnC,CAAC;IACH;IACA,IAAI/kE,EAAA,GAAK,GAAG;MACV,MAAM6wH,wBAAA,GAA8BvnC,WAAA,CAAY,CAAC;MAC9Ct6C,SAAA,CAAU,CAAC;MACXxvB,WAAA,CAAY,MAAM16B,GAAA,CAAIwnI,QAAQ;MAC9Bt9E,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIqjI,KAAA,GAAQ,IAAI,CAAC;MAClCn5E,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,iCAAiC3pD,GAAA,CAAIynI,kBAAkB,EAAE,qCAAqCznI,GAAA,CAAIiuE,eAAe,EAAE,6BAA6BjuE,GAAA,CAAI2oI,uBAAA,IAA2BoD,wBAAwB,EAAE,2BAA2B/rI,GAAA,CAAIsoI,SAAS,EAAE,gCAAgCtoI,GAAA,CAAIknI,UAAU,EAAE,4BAA4BlnI,GAAA,CAAIyoI,aAAa;IAChW;EACF;EACArtH,YAAA,EAAc,CAAC63E,gBAAA,EAAkB8B,mBAAA,EAAqBi3C,OAAO;EAC7D18I,MAAA,EAAQ,CAAC,o2HAAs2H;EAC/2HoD,aAAA,EAAe;EACfrR,IAAA,EAAM;IACJy0E,SAAA,EAAW,CAACovE,mBAAA,CAAoBE,cAAc;EAChD;EACArqE,eAAA,EAAiB;AACnB,CAAC;AA5/BL,IAAMkxE,SAAA,GAANnG,UAAA;AAAA,CA+/BC,MAAM;EACL,CAAC,OAAOt2J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBozJ,SAAA,EAAW,CAAC;IAClFr2J,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCjuE,IAAA,EAAM;QACJ,QAAQ;QACR,qBAAqB;QACrB,iBAAiB;QACjB,SAAS;QACT,aAAa;QACb,mBAAmB;QACnB,wBAAwB;QACxB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB;QACxB,wBAAwB;QACxB,uBAAuB;QACvB,gCAAgC;QAChC,mCAAmC;QACnC,kCAAkC;QAClC,mCAAmC;QACnC,gCAAgC;QAChC,mCAAmC;QACnC,aAAa;QACb,WAAW;QACX,UAAU;MACZ;MACA0iH,UAAA,EAAY,CAACu1B,mBAAA,CAAoBE,cAAc;MAC/Cr+I,SAAA,EAAW,CAAC;QACVS,OAAA,EAASkiH,mBAAA;QACTjiH,WAAA,EAAawkJ;MACf,GAAG;QACDzkJ,OAAA,EAAS8zE,2BAAA;QACT7zE,WAAA,EAAawkJ;MACf,CAAC;MACDp0H,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACi4F,gBAAA,EAAkB8B,mBAAA,EAAqBi3C,OAAO;MACxDhxH,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,o2HAAs2H;IACj3H,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASg8F;EACX,GAAG;IACDh8F,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAASs9E;EACX,GAAG;IACDt9E,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASg6I,MAAA;IACTvtI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAS0gJ,kBAAA;IACTj0I,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAS85H,YAAA;IACTrtH,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACsnH,cAAc;IACvB,CAAC;EACH,GAAG;IACDj0H,IAAA,EAAS8tI,SAAA;IACTrhI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMgvI;IACR,GAAG;MACDhvI,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;EACH,GAAG;IACD3M,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACijJ,0BAA0B;IACnC,CAAC;EACH,GAAG;IACD5vJ,IAAA,EAAS6rE;EACX,GAAG;IACD7rE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACmjJ,iBAAiB;IAC1B,CAAC;EACH,CAAC,GAAG;IACF3yJ,OAAA,EAAS,CAAC;MACR6C,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACk8E,SAAA,EAAW;QAChBz0C,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD80C,YAAA,EAAc,CAAC;MACblpF,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACi5E,YAAA,EAAc;QACnBxxC,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACDw6G,aAAA,EAAe,CAAC;MACd5uJ,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACqjJ,kBAAkB;IAC3B,CAAC;IACD/3B,mBAAA,EAAqB,CAAC;MACpBj4H,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;IACD8tC,OAAA,EAAS,CAAC;MACRz6C,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,SAAS;IAClB,CAAC;IACD0jJ,KAAA,EAAO,CAAC;MACNrwJ,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,OAAO;IAChB,CAAC;IACDwnJ,WAAA,EAAa,CAAC;MACZn0J,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACwyG,mBAAmB;IAC5B,CAAC;IACDvU,UAAA,EAAY,CAAC;MACX5qG,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD+hC,aAAA,EAAe,CAAC;MACdhnF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDqd,QAAA,EAAU,CAAC;MACTtiE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWpsD,KAAA,IAASA,KAAA,IAAS,OAAO,IAAIs0F,eAAA,CAAgBt0F,KAAK;MAC/D,CAAC;IACH,CAAC;IACD+tF,4BAAA,EAA8B,CAAC;MAC7BjnF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDy/E,WAAA,EAAa,CAAC;MACZ1kI,IAAA,EAAMqiC;IACR,CAAC;IACDupD,QAAA,EAAU,CAAC;MACT5rF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD4hC,QAAA,EAAU,CAAC;MACT7mF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD8sG,sBAAA,EAAwB,CAAC;MACvB/xJ,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDuuC,WAAA,EAAa,CAAC;MACZxzF,IAAA,EAAMqiC;IACR,CAAC;IACDnpC,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC;IACR,CAAC;IACD06B,SAAA,EAAW,CAAC;MACV/8D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,YAAY;IACrB,CAAC;IACDwoJ,cAAA,EAAgB,CAAC;MACfn1J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACDm/I,iBAAA,EAAmB,CAAC;MAClB9rJ,IAAA,EAAMqiC;IACR,CAAC;IACDswH,yBAAA,EAA2B,CAAC;MAC1B3yJ,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACDsnE,cAAA,EAAgB,CAAC;MACf90J,IAAA,EAAMqiC;IACR,CAAC;IACD5kB,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;IACD2vH,UAAA,EAAY,CAAC;MACXhyJ,IAAA,EAAMqiC;IACR,CAAC;IACD8vH,YAAA,EAAc,CAAC;MACbnyJ,IAAA,EAAMsiC;IACR,CAAC;IACD8vH,aAAA,EAAe,CAAC;MACdpyJ,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,QAAQ;IACjB,CAAC;IACD0lJ,aAAA,EAAe,CAAC;MACdryJ,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,QAAQ;IACjB,CAAC;IACD2lJ,eAAA,EAAiB,CAAC;MAChBtyJ,IAAA,EAAMsiC;IACR,CAAC;IACDiwH,WAAA,EAAa,CAAC;MACZvyJ,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAIH,IAAMg0H,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAiBvB;AAfIA,iBAAA,CAAK5zJ,IAAA,GAAO,SAAS6zJ,yBAAyBx5J,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKu5J,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAK30H,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMs2J,iBAAA;EACNz0H,SAAA,EAAW,CAAC,CAAC,oBAAoB,CAAC;EAClCI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASo+I,kBAAA;IACTn+I,WAAA,EAAaykJ;EACf,CAAC,CAAC,CAAC;AACL,CAAC;AAfL,IAAME,gBAAA,GAANF,iBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAO18J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuzJ,gBAAA,EAAkB,CAAC;IACzFx2J,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASo+I,kBAAA;QACTn+I,WAAA,EAAa2kJ;MACf,CAAC;MACDv0H,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMw0H,gBAAA,GAAN,MAAMA,gBAAA,CAAgB,EAiBtB;AAfIA,gBAAA,CAAK/zJ,IAAA,GAAO,SAASg0J,wBAAwB35J,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAK05J,gBAAA,EAAiB;AACpC;AAGAA,gBAAA,CAAKzjJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMy2J;AACR,CAAC;AAGDA,gBAAA,CAAKvjJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC4+I,mCAAmC;EAC/C3qI,OAAA,EAAS,CAACC,YAAA,EAAcm6F,aAAA,EAAe31B,eAAA,EAAiB7T,eAAA,EAAiBstB,mBAAA,EAAqB62B,kBAAA,EAAoBtwC,eAAA,EAAiB7T,eAAe;AACpJ,CAAC;AAfL,IAAM2gF,eAAA,GAANF,gBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAO78J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0zJ,eAAA,EAAiB,CAAC;IACxF32J,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACC,YAAA,EAAcm6F,aAAA,EAAe31B,eAAA,EAAiB7T,eAAA,EAAiBqgF,SAAA,EAAWG,gBAAgB;MACpGhxI,OAAA,EAAS,CAAC89E,mBAAA,EAAqB62B,kBAAA,EAAoBk8B,SAAA,EAAWG,gBAAA,EAAkB3sE,eAAA,EAAiB7T,eAAe;MAChH7kE,SAAA,EAAW,CAAC4+I,mCAAmC;IACjD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC58CH,IAAMx8E,OAAM,CAAC,SAAS;AACtB,IAAMqjF,kBAAA,GAAqB;AAK3B,SAASC,kCAAkCzvJ,QAAA,EAAU;EACnD,OAAO3L,KAAA,CAAM,qBAAqB2L,QAAQ,eAAe;AAC3D;AAEA,IAAM0vJ,2BAAA,GAA8B,IAAIxuJ,cAAA,CAAe,+BAA+B;EACpFkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,KAAM;IACb,MAAMyzG,OAAA,GAAU7yG,MAAA,CAAOq5G,OAAO;IAC9B,OAAO,MAAMxG,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;MAC/CP,cAAA,EAAgB4sD;IAClB,CAAC;EACH;AACF,CAAC;AAED,SAASG,oCAAoCvgD,OAAA,EAAS;EACpD,OAAO,MAAMA,OAAA,CAAQ6F,gBAAA,CAAiB9R,UAAA,CAAW;IAC/CP,cAAA,EAAgB4sD;EAClB,CAAC;AACH;AAEA,IAAMI,4CAAA,GAA+C;EACnDplJ,OAAA,EAASklJ,2BAAA;EACT1yI,IAAA,EAAM,CAAC44F,OAAO;EACd1qG,UAAA,EAAYykJ;AACd;AAEA,SAASE,oCAAA,EAAsC;EAC7C,OAAO;IACLC,SAAA,EAAW;IACXC,SAAA,EAAW;IACXC,iBAAA,EAAmB;EACrB;AACF;AAEA,IAAMC,2BAAA,GAA8B,IAAI/uJ,cAAA,CAAe,+BAA+B;EACpFkH,UAAA,EAAY;EACZzM,OAAA,EAASk0J;AACX,CAAC;AAOD,IAAMK,WAAA,GAAc;AAEpB,IAAMC,sBAAA,GAAyB5nG,+BAAA,CAAgC;EAC7DuZ,OAAA,EAAS;AACX,CAAC;AAGD,IAAMsuF,8BAAA,GAAiC;AACvC,IAAMC,oBAAA,GAAuB;AAC7B,IAAMC,UAAA,GAAa;AACnB,IAAMC,SAAA,GAAY;AAOlB,IAAMC,WAAA,GAAN,MAAMA,WAAA,CAAW;EAAA;EAEf,IAAIxwJ,SAAA,EAAW;IACb,OAAO,KAAKm2G,SAAA;EACd;EACA,IAAIn2G,SAASlO,KAAA,EAAO;IAClB,IAAIA,KAAA,KAAU,KAAKqkH,SAAA,EAAW;MAC5B,KAAKA,SAAA,GAAYrkH,KAAA;MACjB,IAAI,KAAKyvG,WAAA,EAAa;QACpB,KAAKkvD,eAAA,CAAgB,KAAKlvD,WAAW;QACrC,KAAKmvD,gBAAA,EAAkBC,IAAA,CAAK,CAAC;QAC7B,KAAKpvD,WAAA,CAAYK,cAAA,CAAe;MAClC;IACF;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIgvD,iBAAA,EAAmB;IACrB,OAAO,KAAKC,iBAAA;EACd;EACA,IAAID,iBAAiB9+J,KAAA,EAAO;IAC1B,KAAK++J,iBAAA,GAAoBxkG,qBAAA,CAAsBv6D,KAAK;IACpD,KAAKwvG,OAAA,CAAQ;IACb,KAAKC,WAAA,GAAc;EACrB;EAAA;EAEA,IAAI/yC,SAAA,EAAW;IACb,OAAO,KAAKC,SAAA;EACd;EACA,IAAID,SAAS18D,KAAA,EAAO;IAClB,KAAK28D,SAAA,GAAYpC,qBAAA,CAAsBv6D,KAAK;IAE5C,IAAI,KAAK28D,SAAA,EAAW;MAClB,KAAKqiG,IAAA,CAAK,CAAC;IACb,OAAO;MACL,KAAKC,gCAAA,CAAiC;IACxC;EACF;EAAA;EAEA,IAAIjB,UAAA,EAAY;IACd,OAAO,KAAKkB,UAAA;EACd;EACA,IAAIlB,UAAUh+J,KAAA,EAAO;IACnB,KAAKk/J,UAAA,GAAa1kG,oBAAA,CAAqBx6D,KAAK;EAC9C;EAAA;EAEA,IAAIi+J,UAAA,EAAY;IACd,OAAO,KAAKkB,UAAA;EACd;EACA,IAAIlB,UAAUj+J,KAAA,EAAO;IACnB,KAAKm/J,UAAA,GAAa3kG,oBAAA,CAAqBx6D,KAAK;IAC5C,IAAI,KAAK4+J,gBAAA,EAAkB;MACzB,KAAKA,gBAAA,CAAiBQ,oBAAA,GAAuB,KAAKD,UAAA;IACpD;EACF;EAAA;EAEA,IAAIj3J,QAAA,EAAU;IACZ,OAAO,KAAKm3J,QAAA;EACd;EACA,IAAIn3J,QAAQlI,KAAA,EAAO;IACjB,KAAKs/J,cAAA,CAAez8F,iBAAA,CAAkB,KAAK5F,WAAA,CAAY/S,aAAA,EAAe,KAAKm1G,QAAA,EAAU,SAAS;IAI9F,KAAKA,QAAA,GAAWr/J,KAAA,IAAS,OAAOyxB,MAAA,CAAOzxB,KAAK,EAAEC,IAAA,CAAK,IAAI;IACvD,IAAI,CAAC,KAAKo/J,QAAA,IAAY,KAAKE,iBAAA,CAAkB,GAAG;MAC9C,KAAKP,IAAA,CAAK,CAAC;IACb,OAAO;MACL,KAAKC,gCAAA,CAAiC;MACtC,KAAKO,qBAAA,CAAsB;MAC3B,KAAKtiG,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QAKnCoF,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;UAC3B,KAAK+zJ,cAAA,CAAep9F,QAAA,CAAS,KAAKjF,WAAA,CAAY/S,aAAA,EAAe,KAAKhiD,OAAA,EAAS,SAAS;QACtF,CAAC;MACH,CAAC;IACH;EACF;EAAA;EAEA,IAAIu3J,aAAA,EAAe;IACjB,OAAO,KAAKC,aAAA;EACd;EACA,IAAID,aAAaz/J,KAAA,EAAO;IACtB,KAAK0/J,aAAA,GAAgB1/J,KAAA;IACrB,IAAI,KAAK4+J,gBAAA,EAAkB;MACzB,KAAKe,gBAAA,CAAiB,KAAKD,aAAa;IAC1C;EACF;EACAzgK,YAAYulH,QAAA,EAAUvnD,WAAA,EAAaqyC,iBAAA,EAAmB1H,iBAAA,EAAmB1qC,OAAA,EAASe,SAAA,EAAWqhG,cAAA,EAAgBtoF,aAAA,EAAey6B,cAAA,EAAgB93B,IAAA,EAAMpI,eAAA,EAAiBzmD,YAAW;IAC5K,KAAK05F,QAAA,GAAWA,QAAA;IAChB,KAAKvnD,WAAA,GAAcA,WAAA;IACnB,KAAKqyC,iBAAA,GAAoBA,iBAAA;IACzB,KAAK1H,iBAAA,GAAoBA,iBAAA;IACzB,KAAK1qC,OAAA,GAAUA,OAAA;IACf,KAAKe,SAAA,GAAYA,SAAA;IACjB,KAAKqhG,cAAA,GAAiBA,cAAA;IACtB,KAAKtoF,aAAA,GAAgBA,aAAA;IACrB,KAAK2C,IAAA,GAAOA,IAAA;IACZ,KAAKpI,eAAA,GAAkBA,eAAA;IACvB,KAAK8yC,SAAA,GAAY;IACjB,KAAK06C,iBAAA,GAAoB;IACzB,KAAKpiG,SAAA,GAAY;IACjB,KAAKijG,gBAAA,GAAmB;IACxB,KAAKC,6BAAA,GAAgC;IACrC,KAAKC,iBAAA,GAAoBC,gBAAA;IACzB,KAAKrnD,eAAA,GAAkB;IACvB,KAAKsnD,eAAA,GAAkB;IAevB,KAAKC,aAAA,GAAgB;IACrB,KAAKZ,QAAA,GAAW;IAEhB,KAAKa,iBAAA,GAAoB,EAAC;IAE1B,KAAKj/D,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;IAC9B,KAAKgiD,eAAA,GAAkBsS,cAAA;IACvB,KAAK3mF,SAAA,GAAYA;IACjB,IAAIymD,eAAA,EAAiB;MACnB,KAAK2tF,UAAA,GAAa3tF,eAAA,CAAgBysF,SAAA;MAClC,KAAKmB,UAAA,GAAa5tF,eAAA,CAAgB0sF,SAAA;MAClC,IAAI1sF,eAAA,CAAgBrjE,QAAA,EAAU;QAC5B,KAAKA,QAAA,GAAWqjE,eAAA,CAAgBrjE,QAAA;MAClC;MACA,IAAIqjE,eAAA,CAAgButF,gBAAA,EAAkB;QACpC,KAAKA,gBAAA,GAAmBvtF,eAAA,CAAgButF,gBAAA;MAC1C;MACA,IAAIvtF,eAAA,CAAgB0uF,aAAA,EAAe;QACjC,KAAKA,aAAA,GAAgB1uF,eAAA,CAAgB0uF,aAAA;MACvC;IACF;IACAtmF,IAAA,CAAK3U,MAAA,CAAOn8D,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM;MAC3D,IAAI,KAAK0lE,WAAA,EAAa;QACpB,KAAKkvD,eAAA,CAAgB,KAAKlvD,WAAW;MACvC;IACF,CAAC;IACD,KAAKiJ,eAAA,GAAkB4lD,8BAAA;EACzB;EACAlnF,gBAAA,EAAkB;IAEhB,KAAKwoF,gBAAA,GAAmB;IACxB,KAAKX,gCAAA,CAAiC;IACtC,KAAKjoF,aAAA,CAAcvC,OAAA,CAAQ,KAAKxX,WAAW,EAAEp0D,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAUqrC,MAAA,IAAU;MAEhG,IAAI,CAACA,MAAA,EAAQ;QACX,KAAKlY,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAK4xJ,IAAA,CAAK,CAAC,CAAC;MACrC,WAAW5pF,MAAA,KAAW,YAAY;QAChC,KAAKlY,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAKyxJ,IAAA,CAAK,CAAC;MACpC;IACF,CAAC;EACH;EAAA;AAAA;AAAA;EAIA99I,YAAA,EAAc;IACZ,MAAMmpC,aAAA,GAAgB,KAAK+S,WAAA,CAAY/S,aAAA;IACvC4nB,YAAA,CAAa,KAAKquF,kBAAkB;IACpC,IAAI,KAAK1wD,WAAA,EAAa;MACpB,KAAKA,WAAA,CAAY7mD,OAAA,CAAQ;MACzB,KAAKg2G,gBAAA,GAAmB;IAC1B;IAEA,KAAKsB,iBAAA,CAAkB1gK,OAAA,CAAQ,CAAC,CAACyJ,KAAA,EAAOqS,QAAQ,MAAM;MACpD4uC,aAAA,CAAcr0C,mBAAA,CAAoB5M,KAAA,EAAOqS,QAAA,EAAU+iJ,sBAAsB;IAC3E,CAAC;IACD,KAAK6B,iBAAA,CAAkBn/J,MAAA,GAAS;IAChC,KAAKkgG,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;IACzB,KAAK6xJ,cAAA,CAAez8F,iBAAA,CAAkB3Y,aAAA,EAAe,KAAKhiD,OAAA,EAAS,SAAS;IAC5E,KAAK8uE,aAAA,CAAcjC,cAAA,CAAe7qB,aAAa;EACjD;EAAA;EAEA20G,KAAKuB,KAAA,GAAQ,KAAKpC,SAAA,EAAW5oF,MAAA,EAAQ;IACnC,IAAI,KAAK1Y,QAAA,IAAY,CAAC,KAAKx0D,OAAA,IAAW,KAAKq3J,iBAAA,CAAkB,GAAG;MAC9D,KAAKX,gBAAA,EAAkByB,wBAAA,CAAyB;MAChD;IACF;IACA,MAAM3wD,UAAA,GAAa,KAAK8V,cAAA,CAAepwC,MAAM;IAC7C,KAAKo6B,OAAA,CAAQ;IACb,KAAK8wD,OAAA,GAAU,KAAKA,OAAA,IAAW,IAAIp1D,eAAA,CAAgB,KAAK40D,iBAAA,EAAmB,KAAKl4D,iBAAiB;IACjG,MAAMlgE,QAAA,GAAW,KAAKk3H,gBAAA,GAAmBlvD,UAAA,CAAWnoE,MAAA,CAAO,KAAK+4H,OAAO,EAAE54H,QAAA;IACzEA,QAAA,CAASshD,eAAA,GAAkB,KAAK/rB,WAAA,CAAY/S,aAAA;IAC5CxiB,QAAA,CAAS03H,oBAAA,GAAuB,KAAKD,UAAA;IACrCz3H,QAAA,CAAS64H,WAAA,CAAY,EAAE13J,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAKylE,OAAA,CAAQ,CAAC;IACtF,KAAKmwD,gBAAA,CAAiB,KAAKD,aAAa;IACxC,KAAKF,qBAAA,CAAsB;IAC3B93H,QAAA,CAASm3H,IAAA,CAAKuB,KAAK;EACrB;EAAA;EAEApB,KAAKoB,KAAA,GAAQ,KAAKnC,SAAA,EAAW;IAC3B,MAAMv2H,QAAA,GAAW,KAAKk3H,gBAAA;IACtB,IAAIl3H,QAAA,EAAU;MACZ,IAAIA,QAAA,CAAS+gC,SAAA,CAAU,GAAG;QACxB/gC,QAAA,CAASs3H,IAAA,CAAKoB,KAAK;MACrB,OAAO;QACL14H,QAAA,CAAS24H,wBAAA,CAAyB;QAClC,KAAK7wD,OAAA,CAAQ;MACf;IACF;EACF;EAAA;EAEAt5B,OAAOd,MAAA,EAAQ;IACb,KAAKmqF,iBAAA,CAAkB,IAAI,KAAKP,IAAA,CAAK,IAAI,KAAKH,IAAA,CAAK,QAAWzpF,MAAM;EACtE;EAAA;EAEAmqF,kBAAA,EAAoB;IAClB,OAAO,CAAC,CAAC,KAAKX,gBAAA,IAAoB,KAAKA,gBAAA,CAAiBn2F,SAAA,CAAU;EACpE;EAAA;EAEA+8C,eAAepwC,MAAA,EAAQ;IACrB,IAAI,KAAKq6B,WAAA,EAAa;MACpB,MAAM+wD,gBAAA,GAAmB,KAAK/wD,WAAA,CAAY8G,SAAA,CAAU,EAAElB,gBAAA;MACtD,KAAK,CAAC,KAAKypD,gBAAA,IAAoB,CAAC1pF,MAAA,KAAWorF,gBAAA,CAAiB9sF,OAAA,YAAmBtoB,UAAA,EAAY;QACzF,OAAO,KAAKqkD,WAAA;MACd;MACA,KAAKD,OAAA,CAAQ;IACf;IACA,MAAMixD,mBAAA,GAAsB,KAAKnxD,iBAAA,CAAkB/O,2BAAA,CAA4B,KAAKtjC,WAAW;IAE/F,MAAMy5C,QAAA,GAAW,KAAK8N,QAAA,CAASt2G,QAAA,CAAS,EAAE40G,mBAAA,CAAoB,KAAKg8C,gBAAA,GAAmB1pF,MAAA,IAAU,KAAKnY,WAAA,GAAc,KAAKA,WAAW,EAAEw/C,qBAAA,CAAsB,IAAI,KAAKujD,eAAe,UAAU,EAAEjkD,sBAAA,CAAuB,KAAK,EAAEF,kBAAA,CAAmB,KAAKnD,eAAe,EAAEgD,wBAAA,CAAyB+kD,mBAAmB;IAClT/pD,QAAA,CAASuC,eAAA,CAAgBpwG,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAUi7B,MAAA,IAAU;MAC5E,KAAK07F,2BAAA,CAA4B17F,MAAA,CAAOgtC,cAAc;MACtD,IAAI,KAAK4sD,gBAAA,EAAkB;QACzB,IAAI55F,MAAA,CAAOitC,wBAAA,CAAyB4O,gBAAA,IAAoB,KAAK+9C,gBAAA,CAAiBn2F,SAAA,CAAU,GAAG;UAGzF,KAAKvL,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAK4xJ,IAAA,CAAK,CAAC,CAAC;QACrC;MACF;IACF,CAAC;IACD,KAAKvvD,WAAA,GAAc,KAAK+U,QAAA,CAAS7/F,MAAA,CAAO;MACtCmhD,SAAA,EAAW,KAAK6T,IAAA;MAChB07B,gBAAA,EAAkBqB,QAAA;MAClBhF,UAAA,EAAY,GAAG,KAAKsuD,eAAe,IAAI5B,WAAW;MAClD3sD,cAAA,EAAgB,KAAKtS,eAAA,CAAgB;IACvC,CAAC;IACD,KAAKw/D,eAAA,CAAgB,KAAKlvD,WAAW;IACrC,KAAKA,WAAA,CAAY6G,WAAA,CAAY,EAAEztG,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAKylE,OAAA,CAAQ,CAAC;IAC9F,KAAKC,WAAA,CAAY8D,oBAAA,CAAqB,EAAE1qG,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM,KAAK60H,gBAAA,EAAkB+B,sBAAA,CAAuB,CAAC;IACxI,KAAKlxD,WAAA,CAAYoD,aAAA,CAAc,EAAEhqG,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU9gC,KAAA,IAAS;MACnF,IAAI,KAAKs2J,iBAAA,CAAkB,KAAKt2J,KAAA,CAAM89D,OAAA,KAAY1N,MAAA,IAAU,CAACgB,cAAA,CAAepxD,KAAK,GAAG;QAClFA,KAAA,CAAMqe,cAAA,CAAe;QACrBre,KAAA,CAAM23J,eAAA,CAAgB;QACtB,KAAK1jG,OAAA,CAAQ9vD,GAAA,CAAI,MAAM,KAAK4xJ,IAAA,CAAK,CAAC,CAAC;MACrC;IACF,CAAC;IACD,IAAI,KAAKztF,eAAA,EAAiBsvF,2BAAA,EAA6B;MACrD,KAAKpxD,WAAA,CAAYqH,aAAA,CAAc,GAAG,KAAKkpD,eAAe,gCAAgC;IACxF;IACA,OAAO,KAAKvwD,WAAA;EACd;EAAA;EAEAD,QAAA,EAAU;IACR,IAAI,KAAKC,WAAA,IAAe,KAAKA,WAAA,CAAYrjC,WAAA,CAAY,GAAG;MACtD,KAAKqjC,WAAA,CAAY5nE,MAAA,CAAO;IAC1B;IACA,KAAK+2H,gBAAA,GAAmB;EAC1B;EAAA;EAEAD,gBAAgBjvD,UAAA,EAAY;IAC1B,MAAMxhG,QAAA,GAAWwhG,UAAA,CAAW6G,SAAA,CAAU,EAAElB,gBAAA;IACxC,MAAMjgC,MAAA,GAAS,KAAKywC,UAAA,CAAW;IAC/B,MAAMvI,OAAA,GAAU,KAAKwjD,mBAAA,CAAoB;IACzC5yJ,QAAA,CAAS0tG,aAAA,CAAc,CAAC,KAAKmlD,UAAA,CAAWl1J,cAAA,CAAAA,cAAA,KACnCupE,MAAA,CAAO4rF,IAAA,GACP1jD,OAAA,CAAQ0jD,IAAA,CACZ,GAAG,KAAKD,UAAA,CAAWl1J,cAAA,CAAAA,cAAA,KACfupE,MAAA,CAAO+kC,QAAA,GACPmD,OAAA,CAAQnD,QAAA,CACZ,CAAC,CAAC;EACL;EAAA;EAEA4mD,WAAW7yJ,QAAA,EAAU;IACnB,MAAMu3F,MAAA,GAAS84D,oBAAA;IACf,MAAM0C,KAAA,GAAQ,CAAC,KAAKtnF,IAAA,IAAQ,KAAKA,IAAA,CAAK35E,KAAA,IAAS;IAC/C,IAAIkO,QAAA,CAAS6uG,OAAA,KAAY,OAAO;MAC9B7uG,QAAA,CAASq5E,OAAA,GAAU,CAACke,MAAA;IACtB,WAAWv3F,QAAA,CAAS6uG,OAAA,KAAY,UAAU;MACxC7uG,QAAA,CAASq5E,OAAA,GAAUke,MAAA;IACrB,WAAWv3F,QAAA,CAASyuG,OAAA,KAAY,SAAS;MACvCzuG,QAAA,CAASo5E,OAAA,GAAU25E,KAAA,GAAQ,CAACx7D,MAAA,GAASA,MAAA;IACvC,WAAWv3F,QAAA,CAASyuG,OAAA,KAAY,OAAO;MACrCzuG,QAAA,CAASo5E,OAAA,GAAU25E,KAAA,GAAQx7D,MAAA,GAAS,CAACA,MAAA;IACvC;IACA,OAAOv3F,QAAA;EACT;EAAA;AAAA;AAAA;AAAA;EAKA23G,WAAA,EAAa;IACX,MAAMo7C,KAAA,GAAQ,CAAC,KAAKtnF,IAAA,IAAQ,KAAKA,IAAA,CAAK35E,KAAA,IAAS;IAC/C,MAAMkO,QAAA,GAAW,KAAKA,QAAA;IACtB,IAAIgzJ,cAAA;IACJ,IAAIhzJ,QAAA,IAAY,WAAWA,QAAA,IAAY,SAAS;MAC9CgzJ,cAAA,GAAiB;QACfvkD,OAAA,EAAS;QACTI,OAAA,EAAS7uG,QAAA,IAAY,UAAU,QAAQ;MACzC;IACF,WAAWA,QAAA,IAAY,YAAYA,QAAA,IAAY,UAAU+yJ,KAAA,IAAS/yJ,QAAA,IAAY,WAAW,CAAC+yJ,KAAA,EAAO;MAC/FC,cAAA,GAAiB;QACfvkD,OAAA,EAAS;QACTI,OAAA,EAAS;MACX;IACF,WAAW7uG,QAAA,IAAY,WAAWA,QAAA,IAAY,WAAW+yJ,KAAA,IAAS/yJ,QAAA,IAAY,UAAU,CAAC+yJ,KAAA,EAAO;MAC9FC,cAAA,GAAiB;QACfvkD,OAAA,EAAS;QACTI,OAAA,EAAS;MACX;IACF,WAAW,OAAOr8G,SAAA,KAAc,eAAeA,SAAA,EAAW;MACxD,MAAMi9J,iCAAA,CAAkCzvJ,QAAQ;IAClD;IACA,MAAM;MACJ4qC,CAAA;MACA6tC;IACF,IAAI,KAAKw6E,eAAA,CAAgBD,cAAA,CAAevkD,OAAA,EAASukD,cAAA,CAAenkD,OAAO;IACvE,OAAO;MACLikD,IAAA,EAAME,cAAA;MACN/mD,QAAA,EAAU;QACRwC,OAAA,EAAS7jE,CAAA;QACTikE,OAAA,EAASp2B;MACX;IACF;EACF;EAAA;EAEAm6E,oBAAA,EAAsB;IACpB,MAAMG,KAAA,GAAQ,CAAC,KAAKtnF,IAAA,IAAQ,KAAKA,IAAA,CAAK35E,KAAA,IAAS;IAC/C,MAAMkO,QAAA,GAAW,KAAKA,QAAA;IACtB,IAAIkzJ,eAAA;IACJ,IAAIlzJ,QAAA,IAAY,SAAS;MACvBkzJ,eAAA,GAAkB;QAChBnkD,QAAA,EAAU;QACVE,QAAA,EAAU;MACZ;IACF,WAAWjvG,QAAA,IAAY,SAAS;MAC9BkzJ,eAAA,GAAkB;QAChBnkD,QAAA,EAAU;QACVE,QAAA,EAAU;MACZ;IACF,WAAWjvG,QAAA,IAAY,YAAYA,QAAA,IAAY,UAAU+yJ,KAAA,IAAS/yJ,QAAA,IAAY,WAAW,CAAC+yJ,KAAA,EAAO;MAC/FG,eAAA,GAAkB;QAChBnkD,QAAA,EAAU;QACVE,QAAA,EAAU;MACZ;IACF,WAAWjvG,QAAA,IAAY,WAAWA,QAAA,IAAY,WAAW+yJ,KAAA,IAAS/yJ,QAAA,IAAY,UAAU,CAAC+yJ,KAAA,EAAO;MAC9FG,eAAA,GAAkB;QAChBnkD,QAAA,EAAU;QACVE,QAAA,EAAU;MACZ;IACF,WAAW,OAAOz8G,SAAA,KAAc,eAAeA,SAAA,EAAW;MACxD,MAAMi9J,iCAAA,CAAkCzvJ,QAAQ;IAClD;IACA,MAAM;MACJ4qC,CAAA;MACA6tC;IACF,IAAI,KAAKw6E,eAAA,CAAgBC,eAAA,CAAgBnkD,QAAA,EAAUmkD,eAAA,CAAgBjkD,QAAQ;IAC3E,OAAO;MACL6jD,IAAA,EAAMI,eAAA;MACNjnD,QAAA,EAAU;QACR8C,QAAA,EAAUnkE,CAAA;QACVqkE,QAAA,EAAUx2B;MACZ;IACF;EACF;EAAA;EAEA64E,sBAAA,EAAwB;IAGtB,IAAI,KAAKZ,gBAAA,EAAkB;MACzB,KAAKA,gBAAA,CAAiB12J,OAAA,GAAU,KAAKA,OAAA;MACrC,KAAK02J,gBAAA,CAAiByC,aAAA,CAAc;MACpC,KAAKnkG,OAAA,CAAQokG,gBAAA,CAAiBz4J,IAAA,CAAKwpC,IAAA,CAAK,CAAC,GAAG0Q,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM;QACtF,IAAI,KAAK60H,gBAAA,EAAkB;UACzB,KAAKnvD,WAAA,CAAYK,cAAA,CAAe;QAClC;MACF,CAAC;IACH;EACF;EAAA;EAEA6vD,iBAAiBF,YAAA,EAAc;IAC7B,IAAI,KAAKb,gBAAA,EAAkB;MACzB,KAAKA,gBAAA,CAAiBa,YAAA,GAAeA,YAAA;MACrC,KAAKb,gBAAA,CAAiByC,aAAA,CAAc;IACtC;EACF;EAAA;EAEAF,gBAAgBroH,CAAA,EAAG6tC,CAAA,EAAG;IACpB,IAAI,KAAKz4E,QAAA,KAAa,WAAW,KAAKA,QAAA,KAAa,SAAS;MAC1D,IAAIy4E,CAAA,KAAM,OAAO;QACfA,CAAA,GAAI;MACN,WAAWA,CAAA,KAAM,UAAU;QACzBA,CAAA,GAAI;MACN;IACF,OAAO;MACL,IAAI7tC,CAAA,KAAM,OAAO;QACfA,CAAA,GAAI;MACN,WAAWA,CAAA,KAAM,SAAS;QACxBA,CAAA,GAAI;MACN;IACF;IACA,OAAO;MACLA,CAAA;MACA6tC;IACF;EACF;EAAA;EAEA+5E,4BAA4B1uD,cAAA,EAAgB;IAC1C,MAAM;MACJmL,QAAA;MACAR,OAAA;MACAI;IACF,IAAI/K,cAAA;IACJ,IAAIuvD,WAAA;IAGJ,IAAIpkD,QAAA,KAAa,UAAU;MAIzB,IAAI,KAAKxjC,IAAA,IAAQ,KAAKA,IAAA,CAAK35E,KAAA,KAAU,OAAO;QAC1CuhK,WAAA,GAAc5kD,OAAA,KAAY,QAAQ,SAAS;MAC7C,OAAO;QACL4kD,WAAA,GAAc5kD,OAAA,KAAY,UAAU,SAAS;MAC/C;IACF,OAAO;MACL4kD,WAAA,GAAcpkD,QAAA,KAAa,YAAYJ,OAAA,KAAY,QAAQ,UAAU;IACvE;IACA,IAAIwkD,WAAA,KAAgB,KAAKC,gBAAA,EAAkB;MACzC,MAAM9xD,UAAA,GAAa,KAAKD,WAAA;MACxB,IAAIC,UAAA,EAAY;QACd,MAAM+xD,WAAA,GAAc,GAAG,KAAKzB,eAAe,IAAI5B,WAAW;QAC1D1uD,UAAA,CAAWqH,gBAAA,CAAiB0qD,WAAA,GAAc,KAAKD,gBAAgB;QAC/D9xD,UAAA,CAAWoH,aAAA,CAAc2qD,WAAA,GAAcF,WAAW;MACpD;MACA,KAAKC,gBAAA,GAAmBD,WAAA;IAC1B;EACF;EAAA;EAEAtC,iCAAA,EAAmC;IAEjC,IAAI,KAAKtiG,SAAA,IAAa,CAAC,KAAKz0D,OAAA,IAAW,CAAC,KAAK03J,gBAAA,IAAoB,KAAKM,iBAAA,CAAkBn/J,MAAA,EAAQ;MAC9F;IACF;IAGA,IAAI,KAAK2gK,4BAAA,CAA6B,GAAG;MACvC,KAAKxB,iBAAA,CAAkB7/J,IAAA,CAAK,CAAC,cAAc4I,KAAA,IAAS;QAClD,KAAK04J,+BAAA,CAAgC;QACrC,IAAIvkD,KAAA,GAAQ;QACZ,IAAIn0G,KAAA,CAAM6vC,CAAA,KAAM,UAAa7vC,KAAA,CAAM09E,CAAA,KAAM,QAAW;UAClDy2B,KAAA,GAAQn0G,KAAA;QACV;QACA,KAAK41J,IAAA,CAAK,QAAWzhD,KAAK;MAC5B,CAAC,CAAC;IACJ,WAAW,KAAK6iD,aAAA,KAAkB,OAAO;MACvC,KAAK2B,iCAAA,CAAkC;MACvC,KAAK1B,iBAAA,CAAkB7/J,IAAA,CAAK,CAAC,cAAc4I,KAAA,IAAS;QAClD,MAAMomE,KAAA,GAAQpmE,KAAA,CAAM44J,aAAA,GAAgB,CAAC;QACrC,MAAMzsF,MAAA,GAAS/F,KAAA,GAAQ;UACrBv2B,CAAA,EAAGu2B,KAAA,CAAMua,OAAA;UACTjD,CAAA,EAAGtX,KAAA,CAAMwa;QACX,IAAI;QAGJ,KAAK83E,+BAAA,CAAgC;QACrC7vF,YAAA,CAAa,KAAKquF,kBAAkB;QACpC,MAAM2B,uBAAA,GAA0B;QAChC,KAAK3B,kBAAA,GAAqBlhH,UAAA,CAAW,MAAM,KAAK4/G,IAAA,CAAK,QAAWzpF,MAAM,GAAG,KAAK7D,eAAA,CAAgBwwF,uBAAA,IAA2BD,uBAAuB;MAClJ,CAAC,CAAC;IACJ;IACA,KAAKE,aAAA,CAAc,KAAK9B,iBAAiB;EAC3C;EACAyB,gCAAA,EAAkC;IAChC,IAAI,KAAK9B,6BAAA,EAA+B;MACtC;IACF;IACA,KAAKA,6BAAA,GAAgC;IACrC,MAAMoC,aAAA,GAAgB,EAAC;IACvB,IAAI,KAAKP,4BAAA,CAA6B,GAAG;MACvCO,aAAA,CAAc5hK,IAAA,CAAK,CAAC,cAAc4I,KAAA,IAAS;QACzC,MAAMi5J,SAAA,GAAYj5J,KAAA,CAAMqtE,aAAA;QACxB,IAAI,CAAC4rF,SAAA,IAAa,CAAC,KAAKzyD,WAAA,EAAaE,cAAA,CAAethC,QAAA,CAAS6zF,SAAS,GAAG;UACvE,KAAKlD,IAAA,CAAK;QACZ;MACF,CAAC,GAAG,CAAC,SAAS/1J,KAAA,IAAS,KAAKk5J,cAAA,CAAel5J,KAAK,CAAC,CAAC;IACpD,WAAW,KAAKg3J,aAAA,KAAkB,OAAO;MACvC,KAAK2B,iCAAA,CAAkC;MACvC,MAAMQ,gBAAA,GAAmBA,CAAA,KAAM;QAC7BtwF,YAAA,CAAa,KAAKquF,kBAAkB;QACpC,KAAKnB,IAAA,CAAK,KAAKztF,eAAA,CAAgB2sF,iBAAiB;MAClD;MACA+D,aAAA,CAAc5hK,IAAA,CAAK,CAAC,YAAY+hK,gBAAgB,GAAG,CAAC,eAAeA,gBAAgB,CAAC;IACtF;IACA,KAAKJ,aAAA,CAAcC,aAAa;IAChC,KAAK/B,iBAAA,CAAkB7/J,IAAA,CAAK,GAAG4hK,aAAa;EAC9C;EACAD,cAAcK,SAAA,EAAW;IACvBA,SAAA,CAAU7iK,OAAA,CAAQ,CAAC,CAACyJ,KAAA,EAAOqS,QAAQ,MAAM;MACvC,KAAK2hD,WAAA,CAAY/S,aAAA,CAAcr3C,gBAAA,CAAiB5J,KAAA,EAAOqS,QAAA,EAAU+iJ,sBAAsB;IACzF,CAAC;EACH;EACAqD,6BAAA,EAA+B;IAC7B,OAAO,CAAC,KAAKzjG,SAAA,CAAUxI,GAAA,IAAO,CAAC,KAAKwI,SAAA,CAAUtI,OAAA;EAChD;EAAA;EAEAwsG,eAAel5J,KAAA,EAAO;IACpB,IAAI,KAAKs2J,iBAAA,CAAkB,GAAG;MAC5B,MAAM+C,mBAAA,GAAsB,KAAKx3I,SAAA,CAAUy3I,gBAAA,CAAiBt5J,KAAA,CAAM2gF,OAAA,EAAS3gF,KAAA,CAAM4gF,OAAO;MACxF,MAAM3qE,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;MAKjC,IAAIo4G,mBAAA,KAAwBpjJ,OAAA,IAAW,CAACA,OAAA,CAAQmvD,QAAA,CAASi0F,mBAAmB,GAAG;QAC7E,KAAKtD,IAAA,CAAK;MACZ;IACF;EACF;EAAA;EAEA4C,kCAAA,EAAoC;IAClC,MAAMY,QAAA,GAAW,KAAKvC,aAAA;IACtB,IAAIuC,QAAA,KAAa,OAAO;MACtB,MAAMtjJ,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;MACjC,MAAMzpC,SAAQvB,OAAA,CAAQuB,KAAA;MAGtB,IAAI+hJ,QAAA,KAAa,QAAQtjJ,OAAA,CAAQ+pD,QAAA,KAAa,WAAW/pD,OAAA,CAAQ+pD,QAAA,KAAa,YAAY;QACxFxoD,OAAMgiJ,UAAA,GAAahiJ,OAAMiiJ,YAAA,GAAejiJ,OAAMkiJ,gBAAA,GAAmBliJ,OAAMmiJ,aAAA,GAAgB;MACzF;MAGA,IAAIJ,QAAA,KAAa,QAAQ,CAACtjJ,OAAA,CAAQ2jJ,SAAA,EAAW;QAC3CpiJ,OAAMqiJ,cAAA,GAAiB;MACzB;MACAriJ,OAAMsiJ,WAAA,GAAc;MACpBtiJ,OAAMuiJ,uBAAA,GAA0B;IAClC;EACF;AA+BF;AA7BItE,WAAA,CAAKl1J,IAAA,GAAO,SAASy5J,mBAAmBp/J,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAK66J,WAAA,EAAezzG,iBAAA,CAAqB64D,OAAO,GAAM74D,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB61C,gBAAgB,GAAM71C,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAqB8Y,aAAa,GAAM9Y,iBAAA,CAAqB6rB,YAAY,GAAM7rB,iBAAA,CAAkB2yG,2BAA2B,GAAM3yG,iBAAA,CAAqBwuB,cAAc,GAAMxuB,iBAAA,CAAkBkzG,2BAAA,EAA6B,CAAC,GAAMlzG,iBAAA,CAAkB53C,QAAQ,CAAC;AAC/f;AAGAqrJ,WAAA,CAAKj2H,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM43J,WAAA;EACN/1H,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;EAClC47C,SAAA,EAAW,CAAC,GAAG,yBAAyB;EACxCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS23G,wBAAwB92H,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,4BAA4Bp6D,GAAA,CAAIwrC,QAAQ;IACzD;EACF;EACA9zB,MAAA,EAAQ;IACN16B,QAAA,EAAU,CAAI29C,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,UAAU;IACjE2rF,gBAAA,EAAkB,CAAIjzG,UAAA,CAAasnB,IAAA,EAAM,8BAA8B,kBAAkB;IACzFzW,QAAA,EAAU,CAAI7Q,UAAA,CAAasnB,IAAA,EAAM,sBAAsB,UAAU;IACjE6qF,SAAA,EAAW,CAAInyG,UAAA,CAAasnB,IAAA,EAAM,uBAAuB,WAAW;IACpE8qF,SAAA,EAAW,CAAIpyG,UAAA,CAAasnB,IAAA,EAAM,uBAAuB,WAAW;IACpE8sF,aAAA,EAAe,CAAIp0G,UAAA,CAAasnB,IAAA,EAAM,2BAA2B,eAAe;IAChFjrE,OAAA,EAAS,CAAI2jD,UAAA,CAAasnB,IAAA,EAAM,cAAc,SAAS;IACvDssF,YAAA,EAAc,CAAI5zG,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,cAAc;EACxE;EACArqC,QAAA,EAAU,CAAC,YAAY;EACvBC,UAAA,EAAY;AACd,CAAC;AAtkBL,IAAMo6H,UAAA,GAANzE,WAAA;AAAA,CAykBC,MAAM;EACL,CAAC,OAAOh+J,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBo5J,UAAA,EAAY,CAAC;IACnFr8J,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QACT,oCAAoC;MACtC;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASg9G;EACX,GAAG;IACDh9G,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASg6F;EACX,GAAG;IACDh6F,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAASi9D;EACX,GAAG;IACDj9D,IAAA,EAASgwE;EACX,GAAG;IACDhwE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACmqJ,2BAA2B;IACpC,CAAC;EACH,GAAG;IACD92J,IAAA,EAAS2yE;EACX,GAAG;IACD3yE,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC0qJ,2BAA2B;IACpC,CAAC;EACH,GAAG;IACDr3J,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACFnF,QAAA,EAAU,CAAC;MACTpH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDqrJ,gBAAA,EAAkB,CAAC;MACjBh4J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,4BAA4B;IACrC,CAAC;IACDipD,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDuqJ,SAAA,EAAW,CAAC;MACVl3J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,qBAAqB;IAC9B,CAAC;IACDwqJ,SAAA,EAAW,CAAC;MACVn3J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,qBAAqB;IAC9B,CAAC;IACDwsJ,aAAA,EAAe,CAAC;MACdn5J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,yBAAyB;IAClC,CAAC;IACDvL,OAAA,EAAS,CAAC;MACRpB,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,YAAY;IACrB,CAAC;IACDgsJ,YAAA,EAAc,CAAC;MACb34J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAM2vJ,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBnkK,YAAY+uF,kBAAA,EAAoB/wB,WAAA,EAAai3B,aAAA,EAAe;IAC1D,KAAKlG,kBAAA,GAAqBA,kBAAA;IAC1B,KAAK/wB,WAAA,GAAcA,WAAA;IAEnB,KAAKomG,YAAA,GAAe;IAEpB,KAAKC,mBAAA,GAAsB;IAE3B,KAAKC,UAAA,GAAa;IAElB,KAAKC,OAAA,GAAU,IAAIrmH,OAAA,CAAQ;IAE3B,KAAKsmH,cAAA,GAAiB;IAEtB,KAAKC,cAAA,GAAiB;IACtB,KAAK/uD,mBAAA,GAAsBzgB,aAAA,KAAkB;EAC/C;EAAA;AAAA;AAAA;AAAA;EAKA2qE,KAAKuB,KAAA,EAAO;IAEV,IAAI,KAAKuD,cAAA,IAAkB,MAAM;MAC/B7xF,YAAA,CAAa,KAAK6xF,cAAc;IAClC;IACA,KAAKC,cAAA,GAAiB3kH,UAAA,CAAW,MAAM;MACrC,KAAK4kH,iBAAA,CAAkB,IAAI;MAC3B,KAAKD,cAAA,GAAiB;IACxB,GAAGxD,KAAK;EACV;EAAA;AAAA;AAAA;AAAA;EAKApB,KAAKoB,KAAA,EAAO;IAEV,IAAI,KAAKwD,cAAA,IAAkB,MAAM;MAC/B9xF,YAAA,CAAa,KAAK8xF,cAAc;IAClC;IACA,KAAKD,cAAA,GAAiB1kH,UAAA,CAAW,MAAM;MACrC,KAAK4kH,iBAAA,CAAkB,KAAK;MAC5B,KAAKF,cAAA,GAAiB;IACxB,GAAGvD,KAAK;EACV;EAAA;EAEAG,YAAA,EAAc;IACZ,OAAO,KAAKiD,OAAA;EACd;EAAA;EAEA/6F,UAAA,EAAY;IACV,OAAO,KAAK86F,UAAA;EACd;EACAxiJ,YAAA,EAAc;IACZ,KAAKs/I,wBAAA,CAAyB;IAC9B,KAAKmD,OAAA,CAAQ/1J,QAAA,CAAS;IACtB,KAAKu7E,eAAA,GAAkB;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA23E,uBAAA,EAAyB;IACvB,IAAI,KAAK2C,mBAAA,EAAqB;MAC5B,KAAKtE,IAAA,CAAK,CAAC;IACb;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAqC,cAAA,EAAgB;IACd,KAAKrzE,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EACAu7H,kBAAkB;IAChBxtF;EACF,GAAG;IACD,IAAI,CAACA,aAAA,IAAiB,CAAC,KAAK0S,eAAA,CAAgB3a,QAAA,CAASiI,aAAa,GAAG;MACnE,IAAI,KAAK7N,SAAA,CAAU,GAAG;QACpB,KAAKu2F,IAAA,CAAK,KAAKI,oBAAoB;MACrC,OAAO;QACL,KAAK2E,kBAAA,CAAmB,KAAK;MAC/B;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAC,QAAA,EAAU;IACR,KAAKX,YAAA,GAAe,KAAKY,mBAAA,CAAoB;IAC7C,KAAK5C,aAAA,CAAc;EACrB;EAAA;EAEA4C,oBAAA,EAAsB;IACpB,MAAMh6E,IAAA,GAAO,KAAKhtB,WAAA,CAAY/S,aAAA,CAAc48B,qBAAA,CAAsB;IAClE,OAAOmD,IAAA,CAAKryB,MAAA,GAAS4mG,UAAA,IAAcv0E,IAAA,CAAK1yB,KAAA,IAASknG,SAAA;EACnD;EAAA;EAEAyF,oBAAoB;IAClB75B;EACF,GAAG;IACD,IAAIA,aAAA,KAAkB,KAAKo5B,cAAA,IAAkBp5B,aAAA,KAAkB,KAAKq5B,cAAA,EAAgB;MAClF,KAAKK,kBAAA,CAAmB15B,aAAA,KAAkB,KAAKo5B,cAAc;IAC/D;EACF;EAAA;EAEApD,yBAAA,EAA2B;IACzB,IAAI,KAAKuD,cAAA,IAAkB,MAAM;MAC/B9xF,YAAA,CAAa,KAAK8xF,cAAc;IAClC;IACA,IAAI,KAAKD,cAAA,IAAkB,MAAM;MAC/B7xF,YAAA,CAAa,KAAK6xF,cAAc;IAClC;IACA,KAAKC,cAAA,GAAiB,KAAKD,cAAA,GAAiB;EAC9C;EAAA;EAEAI,mBAAmBI,SAAA,EAAW;IAC5B,IAAIA,SAAA,EAAW;MACb,KAAKb,mBAAA,GAAsB;IAC7B,WAAW,CAAC,KAAK76F,SAAA,CAAU,GAAG;MAC5B,KAAK+6F,OAAA,CAAQz3J,IAAA,CAAK;IACpB;EACF;EAAA;EAEA83J,kBAAkBp7F,SAAA,EAAW;IAI3B,MAAM27F,OAAA,GAAU,KAAKC,QAAA,CAASn6G,aAAA;IAC9B,MAAMo6G,SAAA,GAAY,KAAKb,cAAA;IACvB,MAAMc,SAAA,GAAY,KAAKb,cAAA;IACvBU,OAAA,CAAQh+I,SAAA,CAAUnW,MAAA,CAAOw4D,SAAA,GAAY87F,SAAA,GAAYD,SAAS;IAC1DF,OAAA,CAAQh+I,SAAA,CAAUrW,GAAA,CAAI04D,SAAA,GAAY67F,SAAA,GAAYC,SAAS;IACvD,IAAI,KAAKhB,UAAA,KAAe96F,SAAA,EAAW;MACjC,KAAK86F,UAAA,GAAa96F,SAAA;MAClB,KAAKulB,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC;IAGA,IAAIkgC,SAAA,IAAa,CAAC,KAAKksC,mBAAA,IAAuB,OAAOhsC,gBAAA,KAAqB,YAAY;MACpF,MAAMnoD,MAAA,GAASmoD,gBAAA,CAAiBy7F,OAAO;MAEvC,IAAI5jJ,MAAA,CAAOgkJ,gBAAA,CAAiB,oBAAoB,MAAM,QAAQhkJ,MAAA,CAAOgkJ,gBAAA,CAAiB,gBAAgB,MAAM,QAAQ;QAClH,KAAK7vD,mBAAA,GAAsB;MAC7B;IACF;IACA,IAAIlsC,SAAA,EAAW;MACb,KAAKu7F,OAAA,CAAQ;IACf;IACA,IAAI,KAAKrvD,mBAAA,EAAqB;MAC5ByvD,OAAA,CAAQh+I,SAAA,CAAUrW,GAAA,CAAI,yBAAyB;MAC/C,KAAKg0J,kBAAA,CAAmBt7F,SAAS;IACnC;EACF;AA6DF;AA3DI26F,iBAAA,CAAK55J,IAAA,GAAO,SAASi7J,yBAAyB5gK,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKu/J,iBAAA,EAAqBn4G,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACpK;AAGAg4E,iBAAA,CAAKv3H,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMs8J,iBAAA;EACNz6H,SAAA,EAAW,CAAC,CAAC,uBAAuB,CAAC;EACrCsmD,SAAA,EAAW,SAASy1E,uBAAuBt4H,EAAA,EAAIlb,GAAA,EAAK;IAClD,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,MAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAImzI,QAAA,GAAWp2G,EAAA,CAAGxlD,KAAA;IACjE;EACF;EACA87E,SAAA,EAAW,CAAC,eAAe,MAAM;EACjCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASo5G,8BAA8Bv4H,EAAA,EAAIlb,GAAA,EAAK;IAC5D,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,cAAc,SAASm5G,+CAA+Cj5G,MAAA,EAAQ;QAC1F,OAAOz6B,GAAA,CAAI4yI,iBAAA,CAAkBn4G,MAAM;MACrC,CAAC;IACH;IACA,IAAIvf,EAAA,GAAK,GAAG;MACP06D,WAAA,CAAY,QAAQ51E,GAAA,CAAIu3C,SAAA,CAAU,IAAI,IAAI,IAAI;IACnD;EACF;EACA1/B,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,eAAe,sBAAsB,mBAAmB,GAAG,gBAAgB,SAAS,GAAG,CAAC,GAAG,wBAAwB,gCAAgC,CAAC;EAClLhhD,QAAA,EAAU,SAAS24H,0BAA0Bz4H,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;MAC7BnlD,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7BxvB,UAAA,CAAW,gBAAgB,SAASq5G,sDAAsDn5G,MAAA,EAAQ;QAChG40E,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAIgzI,mBAAA,CAAoBv4G,MAAM,CAAC;MACvD,CAAC;MACEsvB,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1BC,MAAA,CAAO,CAAC;MACRC,YAAA,CAAa,EAAE;IACpB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,0BAA0Bp6D,GAAA,CAAImyI,YAAY;MACtDxoF,UAAA,CAAW,WAAW3pD,GAAA,CAAIuuI,YAAY;MACtCrkF,SAAA,CAAU,CAAC;MACXo7C,iBAAA,CAAkBtlG,GAAA,CAAIhpB,OAAO;IAClC;EACF;EACAokC,YAAA,EAAc,CAAC4wH,OAAO;EACtB18I,MAAA,EAAQ,CAAC,ylJAA6lJ;EACtmJoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAzNL,IAAM8zE,gBAAA,GAANqD,iBAAA;AAAA,CA4NC,MAAM;EACL,CAAC,OAAO1iK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBg2J,gBAAA,EAAkB,CAAC;IACzFj5J,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVzJ,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCjuE,IAAA,EAAM;QAAA;QAAA;QAGJ,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;MACjB;MACA4qB,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACgxI,OAAO;MACjBhxH,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,ylJAA6lJ;IACxmJ,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG;IACFi5E,QAAA,EAAU,CAAC;MACTv9J,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,WAAW;QAAA;QAAA;QAGhBo8E,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAMk1E,oBAAA,GAAuB;EAAA;EAE3BC,YAAA,EAAczjH,OAAA,CAAQ,SAAS;EAAA;EAAA;EAG/BhhB,KAAA,CAAM,yBAAyB9f,KAAA,CAAM;IACnCkoE,OAAA,EAAS;IACTv8B,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,WAAW9f,KAAA,CAAM;IAC1B2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,gBAAgBs0E,OAAA,CAAQ,kCAAkC,CAAC,GAAGt0E,UAAA,CAAW,eAAes0E,OAAA,CAAQ,iCAAiC,CAAC,EAAE;AACtJ;AACA,IAAMuxC,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAiBvB;AAfIA,iBAAA,CAAKz7J,IAAA,GAAO,SAAS07J,yBAAyBrhK,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKohK,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAKnrJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMm+J;AACR,CAAC;AAGDA,iBAAA,CAAKjrJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC6lJ,4CAA4C;EACxD5xI,OAAA,EAAS,CAAC4sD,UAAA,EAAY3sD,YAAA,EAAcm6F,aAAA,EAAexpC,eAAA,EAAiBA,eAAA,EAAiBstB,mBAAmB;AAC1G,CAAC;AAfL,IAAM+6D,gBAAA,GAANF,iBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOvkK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBo7J,gBAAA,EAAkB,CAAC;IACzFr+J,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4sD,UAAA,EAAY3sD,YAAA,EAAcm6F,aAAA,EAAexpC,eAAA,EAAiBqmF,UAAA,EAAYpD,gBAAgB;MAChGzzI,OAAA,EAAS,CAAC62I,UAAA,EAAYpD,gBAAA,EAAkBjjF,eAAA,EAAiBstB,mBAAmB;MAC5EnyF,SAAA,EAAW,CAAC6lJ,4CAA4C;IAC1D,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC9hCH,SAASsH,wDAAwDh5H,EAAA,EAAIlb,GAAA,EAAK;EACxE,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,cAAc,EAAE;IAClCC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMi5H,iBAAA,GAAoBn0I,GAAA,CAAI2oE,SAAA;IAC3Bhf,UAAA,CAAW,SAASwqF,iBAAiB;IACrCjqF,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKgqF,iBAAA,EAAmB,GAAG;EACnD;AACF;AACA,SAASC,kDAAkDl5H,EAAA,EAAIlb,GAAA,EAAK;EAClE,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,kBAAkB,EAAE,EAAE,GAAG,cAAc,EAAE;IAC3DxvB,UAAA,CAAW,mBAAmB,SAAS85G,wFAAwF55G,MAAA,EAAQ;MACrI40E,aAAA,CAAcJ,GAAG;MACpB,MAAMrL,MAAA,GAAYl6C,aAAA,CAAc,CAAC;MACjC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAO0wC,eAAA,CAAgB75G,MAAA,CAAO3rD,KAAK,CAAC;IAC5D,CAAC;IACEylK,gBAAA,CAAiB,GAAGL,uDAAA,EAAyD,GAAG,GAAG,cAAc,IAAOM,yBAAyB;IACjIvqF,YAAA,CAAa,EAAE;EACpB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc,CAAC;IAC9BC,UAAA,CAAW,cAAci6C,MAAA,CAAO6wC,oBAAoB,EAAE,SAAS7wC,MAAA,CAAOrtC,KAAK;IAC3ErM,SAAA,CAAU;IACVP,UAAA,CAAW,SAASi6C,MAAA,CAAO8wC,QAAQ,EAAE,YAAY9wC,MAAA,CAAOp4D,QAAQ,EAAE,mBAAmBo4D,MAAA,CAAO+wC,gBAAgB,EAAE,cAAc/wC,MAAA,CAAOgxC,YAAA,CAAap0D,UAAA,IAAc,EAAE,EAAE,0BAA0BojB,MAAA,CAAOgxC,YAAA,CAAajN,sBAAsB;IACtOz9E,SAAA,CAAU;IACV2qF,UAAA,CAAWjxC,MAAA,CAAOkxC,yBAAyB;EAChD;AACF;AACA,SAASC,kDAAkD75H,EAAA,EAAIlb,GAAA,EAAK;EAClE,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3BC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc,CAAC;IAC9BQ,SAAA,CAAU;IACVo7C,iBAAA,CAAkB1B,MAAA,CAAO8wC,QAAQ;EACtC;AACF;AACA,SAASM,oCAAoC95H,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,EAAE;IACxCC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;IACbsU,UAAA,CAAW,GAAG61E,iDAAA,EAAmD,GAAG,GAAG,kBAAkB,EAAE,EAAE,GAAGW,iDAAA,EAAmD,GAAG,GAAG,OAAO,EAAE;IAClK9qF,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BQ,SAAA,CAAU;IACVxvB,WAAA,CAAY,MAAMkpE,MAAA,CAAO+wC,gBAAgB;IACzCzqF,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKy5C,MAAA,CAAOqxC,KAAA,CAAMC,iBAAA,EAAmB,GAAG;IAC3DhrF,SAAA,CAAU;IACVsU,aAAA,CAAc,GAAGolC,MAAA,CAAOkxC,yBAAA,CAA0BjlK,MAAA,GAAS,IAAI,IAAI,EAAE;IACrEq6E,SAAA,CAAU;IACVsU,aAAA,CAAc,GAAGolC,MAAA,CAAOkxC,yBAAA,CAA0BjlK,MAAA,IAAU,IAAI,IAAI,EAAE;EAC3E;AACF;AACA,SAASslK,oCAAoCj6H,EAAA,EAAIlb,GAAA,EAAK;EACpD,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAMk6H,GAAA,GAASlmC,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,UAAU,EAAE;IAC9BxvB,UAAA,CAAW,SAAS,SAAS86G,4DAAA,EAA8D;MACzFhmC,aAAA,CAAc+lC,GAAG;MACpB,MAAMxxC,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAO0xC,SAAA,CAAU,CAAC;IAC1C,CAAC;IACE3J,cAAA,CAAe;IACf5hF,cAAA,CAAe,GAAG,OAAO,CAAC;IAC1B5uC,SAAA,CAAU,GAAG,QAAQ,EAAE;IACvB8uC,YAAA,CAAa,EAAE;EACpB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,cAAci6C,MAAA,CAAOqxC,KAAA,CAAMM,cAAc,EAAE,sBAAsB3xC,MAAA,CAAO4xC,wBAAA,CAAyB,CAAC,EAAE,sBAAsB,OAAO,EAAE,YAAY5xC,MAAA,CAAO4xC,wBAAA,CAAyB,CAAC;IAC3L96G,WAAA,CAAY,cAAckpE,MAAA,CAAOqxC,KAAA,CAAMM,cAAc;EAC1D;AACF;AACA,SAASE,qCAAqCv6H,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAMw6H,GAAA,GAASxmC,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,UAAU,EAAE;IAC9BxvB,UAAA,CAAW,SAAS,SAASo7G,6DAAA,EAA+D;MAC1FtmC,aAAA,CAAcqmC,GAAG;MACpB,MAAM9xC,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOgyC,QAAA,CAAS,CAAC;IACzC,CAAC;IACEjK,cAAA,CAAe;IACf5hF,cAAA,CAAe,GAAG,OAAO,CAAC;IAC1B5uC,SAAA,CAAU,GAAG,QAAQ,EAAE;IACvB8uC,YAAA,CAAa,EAAE;EACpB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,cAAci6C,MAAA,CAAOqxC,KAAA,CAAMY,aAAa,EAAE,sBAAsBjyC,MAAA,CAAOkyC,oBAAA,CAAqB,CAAC,EAAE,sBAAsB,OAAO,EAAE,YAAYlyC,MAAA,CAAOkyC,oBAAA,CAAqB,CAAC;IAClLp7G,WAAA,CAAY,cAAckpE,MAAA,CAAOqxC,KAAA,CAAMY,aAAa;EACzD;AACF;AACA,IAAME,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBhoK,YAAA,EAAc;IAKZ,KAAK8nC,OAAA,GAAU,IAAIoW,OAAA,CAAQ;IAE3B,KAAKipH,iBAAA,GAAoB;IAEzB,KAAKc,aAAA,GAAgB;IAErB,KAAKC,iBAAA,GAAoB;IAEzB,KAAKV,cAAA,GAAiB;IAEtB,KAAKM,aAAA,GAAgB;IAErB,KAAKK,aAAA,GAAgB,CAACC,IAAA,EAAMzB,QAAA,EAAU7kK,MAAA,KAAW;MAC/C,IAAIA,MAAA,IAAU,KAAK6kK,QAAA,IAAY,GAAG;QAChC,OAAO,QAAQ7kK,MAAM;MACvB;MACAA,MAAA,GAASopF,IAAA,CAAK7K,GAAA,CAAIv+E,MAAA,EAAQ,CAAC;MAC3B,MAAMy9B,UAAA,GAAa6oI,IAAA,GAAOzB,QAAA;MAE1B,MAAM0B,QAAA,GAAW9oI,UAAA,GAAaz9B,MAAA,GAASopF,IAAA,CAAK9K,GAAA,CAAI7gD,UAAA,GAAaonI,QAAA,EAAU7kK,MAAM,IAAIy9B,UAAA,GAAaonI,QAAA;MAC9F,OAAO,GAAGpnI,UAAA,GAAa,CAAC,WAAM8oI,QAAQ,OAAOvmK,MAAM;IACrD;EACF;AAaF;AAXIkmK,iBAAA,CAAKz9J,IAAA,GAAO,SAAS+9J,yBAAyB1jK,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKojK,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAKt9J,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOkiK,iBAAA;EACPp9J,OAAA,EAASo9J,iBAAA,CAAiBz9J,IAAA;EAC1B8M,UAAA,EAAY;AACd,CAAC;AAvCL,IAAMkxJ,gBAAA,GAANP,iBAAA;AAAA,CA0CC,MAAM;EACL,CAAC,OAAOvmK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBy9J,gBAAA,EAAkB,CAAC;IACzF1gK,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,SAASmxJ,oCAAoCC,UAAA,EAAY;EACvD,OAAOA,UAAA,IAAc,IAAIF,gBAAA,CAAiB;AAC5C;AAEA,IAAMG,2BAAA,GAA8B;EAAA;EAElCjvJ,OAAA,EAAS8uJ,gBAAA;EACTt8I,IAAA,EAAM,CAAC,CAAC,IAAI3I,QAAA,CAAS,GAAG,IAAIgK,QAAA,CAAS,GAAGi7I,gBAAgB,CAAC;EACzDpuJ,UAAA,EAAYquJ;AACd;AAGA,IAAMG,iBAAA,GAAoB;AAO1B,IAAMC,6BAAA,GAAgC,IAAIz4J,cAAA,CAAe,+BAA+B;AACxF,IAAI6zG,gBAAe;AAMnB,IAAM6kD,aAAA,GAAN,MAAMA,aAAA,CAAa;EAAA;EAEjB,IAAIC,UAAA,EAAY;IACd,OAAO,KAAKC,UAAA;EACd;EACA,IAAID,UAAU/nK,KAAA,EAAO;IACnB,KAAKgoK,UAAA,GAAa79E,IAAA,CAAK7K,GAAA,CAAIt/E,KAAA,IAAS,GAAG,CAAC;IACxC,KAAKguF,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEA,IAAIxnC,OAAA,EAAS;IACX,OAAO,KAAKknK,OAAA;EACd;EACA,IAAIlnK,OAAOf,KAAA,EAAO;IAChB,KAAKioK,OAAA,GAAUjoK,KAAA,IAAS;IACxB,KAAKguF,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEA,IAAIq9H,SAAA,EAAW;IACb,OAAO,KAAKsC,SAAA;EACd;EACA,IAAItC,SAAS5lK,KAAA,EAAO;IAClB,KAAKkoK,SAAA,GAAY/9E,IAAA,CAAK7K,GAAA,CAAIt/E,KAAA,IAAS,GAAG,CAAC;IACvC,KAAKmoK,+BAAA,CAAgC;EACvC;EAAA;EAEA,IAAIC,gBAAA,EAAkB;IACpB,OAAO,KAAKC,gBAAA;EACd;EACA,IAAID,gBAAgBpoK,KAAA,EAAO;IACzB,KAAKqoK,gBAAA,IAAoBroK,KAAA,IAAS,EAAC,EAAGoC,GAAA,CAAI41B,CAAA,IAAKs8D,eAAA,CAAgBt8D,CAAA,EAAG,CAAC,CAAC;IACpE,KAAKmwI,+BAAA,CAAgC;EACvC;EACAlpK,YAAYknK,KAAA,EAAOn4E,kBAAA,EAAoBsH,WAAU;IAC/C,KAAK6wE,KAAA,GAAQA,KAAA;IACb,KAAKn4E,kBAAA,GAAqBA,kBAAA;IAE1B,KAAK63E,gBAAA,GAAmB,iCAAiC5iD,eAAc;IACvE,KAAKrpC,cAAA,GAAiB;IACtB,KAAK0uF,kBAAA,GAAqB,IAAIC,aAAA,CAAc,CAAC;IAC7C,KAAKP,UAAA,GAAa;IAClB,KAAKC,OAAA,GAAU;IACf,KAAKI,gBAAA,GAAmB,EAAC;IAEzB,KAAKG,YAAA,GAAe;IAEpB,KAAKC,oBAAA,GAAuB;IAE5B,KAAK3C,YAAA,GAAe,CAAC;IAErB,KAAKppG,QAAA,GAAW;IAEhB,KAAK2qG,IAAA,GAAO,IAAIrhI,YAAA,CAAa;IAE7B,KAAK0iI,WAAA,GAAc,KAAKJ,kBAAA;IACxB,KAAKK,YAAA,GAAexC,KAAA,CAAMp/H,OAAA,CAAQgD,SAAA,CAAU,MAAM,KAAKikD,kBAAA,CAAmBzlD,YAAA,CAAa,CAAC;IACxF,IAAI+sD,WAAU;MACZ,MAAM;QACJswE,QAAA;QACAwC,eAAA;QACAI,YAAA;QACAC;MACF,IAAInzE;MACJ,IAAIswE,QAAA,IAAY,MAAM;QACpB,KAAKsC,SAAA,GAAYtC,QAAA;MACnB;MACA,IAAIwC,eAAA,IAAmB,MAAM;QAC3B,KAAKC,gBAAA,GAAmBD,eAAA;MAC1B;MACA,IAAII,YAAA,IAAgB,MAAM;QACxB,KAAKA,YAAA,GAAeA,YAAA;MACtB;MACA,IAAIC,oBAAA,IAAwB,MAAM;QAChC,KAAKA,oBAAA,GAAuBA,oBAAA;MAC9B;IACF;IACA,KAAK9C,oBAAA,GAAuBrwE,WAAUszE,mBAAA,IAAuB;EAC/D;EACAthI,SAAA,EAAW;IACT,KAAKsyC,cAAA,GAAiB;IACtB,KAAKuuF,+BAAA,CAAgC;IACrC,KAAKG,kBAAA,CAAmBv8J,IAAA,CAAK;EAC/B;EACAgV,YAAA,EAAc;IACZ,KAAKunJ,kBAAA,CAAmB76J,QAAA,CAAS;IACjC,KAAKk7J,YAAA,CAAa/+H,WAAA,CAAY;EAChC;EAAA;EAEAi/H,SAAA,EAAW;IACT,IAAI,CAAC,KAAKC,WAAA,CAAY,GAAG;MACvB;IACF;IACA,MAAMC,iBAAA,GAAoB,KAAKhB,SAAA;IAC/B,KAAKA,SAAA,GAAY,KAAKA,SAAA,GAAY;IAClC,KAAKiB,cAAA,CAAeD,iBAAiB;EACvC;EAAA;EAEAE,aAAA,EAAe;IACb,IAAI,CAAC,KAAKC,eAAA,CAAgB,GAAG;MAC3B;IACF;IACA,MAAMH,iBAAA,GAAoB,KAAKhB,SAAA;IAC/B,KAAKA,SAAA,GAAY,KAAKA,SAAA,GAAY;IAClC,KAAKiB,cAAA,CAAeD,iBAAiB;EACvC;EAAA;EAEAvC,UAAA,EAAY;IAEV,IAAI,CAAC,KAAK0C,eAAA,CAAgB,GAAG;MAC3B;IACF;IACA,MAAMH,iBAAA,GAAoB,KAAKhB,SAAA;IAC/B,KAAKA,SAAA,GAAY;IACjB,KAAKiB,cAAA,CAAeD,iBAAiB;EACvC;EAAA;EAEAjC,SAAA,EAAW;IAET,IAAI,CAAC,KAAKgC,WAAA,CAAY,GAAG;MACvB;IACF;IACA,MAAMC,iBAAA,GAAoB,KAAKhB,SAAA;IAC/B,KAAKA,SAAA,GAAY,KAAKoB,gBAAA,CAAiB,IAAI;IAC3C,KAAKH,cAAA,CAAeD,iBAAiB;EACvC;EAAA;EAEAG,gBAAA,EAAkB;IAChB,OAAO,KAAKnB,SAAA,IAAa,KAAK,KAAKnC,QAAA,IAAY;EACjD;EAAA;EAEAkD,YAAA,EAAc;IACZ,MAAMM,YAAA,GAAe,KAAKD,gBAAA,CAAiB,IAAI;IAC/C,OAAO,KAAKpB,SAAA,GAAYqB,YAAA,IAAgB,KAAKxD,QAAA,IAAY;EAC3D;EAAA;EAEAuD,iBAAA,EAAmB;IACjB,IAAI,CAAC,KAAKvD,QAAA,EAAU;MAClB,OAAO;IACT;IACA,OAAOz7E,IAAA,CAAKqU,IAAA,CAAK,KAAKz9F,MAAA,GAAS,KAAK6kK,QAAQ;EAC9C;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAJ,gBAAgBI,QAAA,EAAU;IAGxB,MAAMpnI,UAAA,GAAa,KAAKupI,SAAA,GAAY,KAAKnC,QAAA;IACzC,MAAMmD,iBAAA,GAAoB,KAAKhB,SAAA;IAC/B,KAAKA,SAAA,GAAY59E,IAAA,CAAKuU,KAAA,CAAMlgE,UAAA,GAAaonI,QAAQ,KAAK;IACtD,KAAKA,QAAA,GAAWA,QAAA;IAChB,KAAKoD,cAAA,CAAeD,iBAAiB;EACvC;EAAA;EAEA/B,qBAAA,EAAuB;IACrB,OAAO,KAAKtqG,QAAA,IAAY,CAAC,KAAKosG,WAAA,CAAY;EAC5C;EAAA;EAEApC,yBAAA,EAA2B;IACzB,OAAO,KAAKhqG,QAAA,IAAY,CAAC,KAAKwsG,eAAA,CAAgB;EAChD;EAAA;AAAA;AAAA;AAAA;EAKAf,gCAAA,EAAkC;IAChC,IAAI,CAAC,KAAKvuF,cAAA,EAAgB;MACxB;IACF;IAEA,IAAI,CAAC,KAAKgsF,QAAA,EAAU;MAClB,KAAKsC,SAAA,GAAY,KAAKE,eAAA,CAAgBrnK,MAAA,IAAU,IAAI,KAAKqnK,eAAA,CAAgB,CAAC,IAAIR,iBAAA;IAChF;IACA,KAAK5B,yBAAA,GAA4B,KAAKoC,eAAA,CAAgBvoK,KAAA,CAAM;IAC5D,IAAI,KAAKmmK,yBAAA,CAA0BrmK,OAAA,CAAQ,KAAKimK,QAAQ,MAAM,IAAI;MAChE,KAAKI,yBAAA,CAA0B3lK,IAAA,CAAK,KAAKulK,QAAQ;IACnD;IAEA,KAAKI,yBAAA,CAA0BpxI,IAAA,CAAK,CAACX,CAAA,EAAGC,CAAA,KAAMD,CAAA,GAAIC,CAAC;IACnD,KAAK85D,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEAygI,eAAeD,iBAAA,EAAmB;IAChC,KAAK1B,IAAA,CAAKt/H,IAAA,CAAK;MACbghI,iBAAA;MACAhB,SAAA,EAAW,KAAKA,SAAA;MAChBnC,QAAA,EAAU,KAAKA,QAAA;MACf7kK,MAAA,EAAQ,KAAKA;IACf,CAAC;EACH;AAkFF;AAhFI+mK,aAAA,CAAKt+J,IAAA,GAAO,SAAS6/J,qBAAqBxlK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKikK,aAAA,EAAiB78G,iBAAA,CAAkBu8G,gBAAgB,GAAMv8G,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAkB48G,6BAAA,EAA+B,CAAC,CAAC;AAC3K;AAGAC,aAAA,CAAKj8H,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMghK,aAAA;EACNn/H,SAAA,EAAW,CAAC,CAAC,eAAe,CAAC;EAC7B47C,SAAA,EAAW,CAAC,QAAQ,SAAS,GAAG,mBAAmB;EACnD37C,MAAA,EAAQ;IACN6+C,KAAA,EAAO;IACPsgF,SAAA,EAAW,CAAIl8G,UAAA,CAAaC,0BAAA,EAA4B,aAAa,aAAawoC,eAAe;IACjGvzF,MAAA,EAAQ,CAAI8qD,UAAA,CAAaC,0BAAA,EAA4B,UAAU,UAAUwoC,eAAe;IACxFsxE,QAAA,EAAU,CAAI/5G,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYwoC,eAAe;IAC9F8zE,eAAA,EAAiB;IACjBI,YAAA,EAAc,CAAI38G,UAAA,CAAaC,0BAAA,EAA4B,gBAAgB,gBAAgBC,gBAAgB;IAC3G08G,oBAAA,EAAsB,CAAI58G,UAAA,CAAaC,0BAAA,EAA4B,wBAAwB,wBAAwBC,gBAAgB;IACnI+5G,YAAA,EAAc;IACdppG,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAljB,OAAA,EAAS;IACPw+H,IAAA,EAAM;EACR;EACAv+H,QAAA,EAAU,CAAC,cAAc;EACzBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BjgB,mBAAmB;EAC9DC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,mCAAmC,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,GAAG,iCAAiC,GAAG,CAAC,aAAa,UAAU,GAAG,+BAA+B,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,sCAAsC,GAAG,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,yCAAyC,GAAG,SAAS,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,WAAW,aAAa,aAAa,SAAS,eAAe,QAAQ,GAAG,wBAAwB,GAAG,CAAC,KAAK,+CAA+C,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,qCAAqC,GAAG,SAAS,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,KAAK,gDAAgD,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,qCAAqC,GAAG,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,GAAG,mCAAmC,GAAG,CAAC,GAAG,sCAAsC,GAAG,cAAc,OAAO,GAAG,CAAC,GAAG,mCAAmC,GAAG,CAAC,gCAAgC,IAAI,GAAG,mBAAmB,SAAS,YAAY,mBAAmB,cAAc,wBAAwB,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,sCAAsC,GAAG,SAAS,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,KAAK,4DAA4D,GAAG,CAAC,mBAAmB,IAAI,QAAQ,UAAU,GAAG,qCAAqC,GAAG,SAAS,cAAc,sBAAsB,sBAAsB,UAAU,GAAG,CAAC,KAAK,4DAA4D,CAAC;EACl0DhhD,QAAA,EAAU,SAASo9H,sBAAsBl9H,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACvCwU,UAAA,CAAW,GAAGy2E,mCAAA,EAAqC,GAAG,GAAG,OAAO,CAAC;MACjEjrF,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACvCC,MAAA,CAAO,CAAC;MACRC,YAAA,CAAa;MACbsU,UAAA,CAAW,GAAG42E,mCAAA,EAAqC,GAAG,GAAG,UAAU,CAAC;MACpEprF,cAAA,CAAe,GAAG,UAAU,CAAC;MAC7BxvB,UAAA,CAAW,SAAS,SAAS89G,8CAAA,EAAgD;QAC9E,OAAOr4I,GAAA,CAAI+3I,YAAA,CAAa;MAC1B,CAAC;MACEpM,cAAA,CAAe;MACf5hF,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1B5uC,SAAA,CAAU,GAAG,QAAQ,CAAC;MACtB8uC,YAAA,CAAa,EAAE;MACfquF,eAAA,CAAgB;MAChBvuF,cAAA,CAAe,IAAI,UAAU,CAAC;MAC9BxvB,UAAA,CAAW,SAAS,SAASg+G,+CAAA,EAAiD;QAC/E,OAAOv4I,GAAA,CAAI23I,QAAA,CAAS;MACtB,CAAC;MACEhM,cAAA,CAAe;MACf5hF,cAAA,CAAe,IAAI,OAAO,CAAC;MAC3B5uC,SAAA,CAAU,IAAI,QAAQ,EAAE;MACxB8uC,YAAA,CAAa,EAAE;MACfsU,UAAA,CAAW,IAAIk3E,oCAAA,EAAsC,GAAG,GAAG,UAAU,EAAE;MACvExrF,YAAA,CAAa,EAAE,EAAE;IACtB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAG,CAACx+D,GAAA,CAAIs3I,YAAA,GAAe,IAAI,EAAE;MAC3CptF,SAAA,CAAU,CAAC;MACXC,kBAAA,CAAmB,KAAKnqD,GAAA,CAAIi1I,KAAA,CAAMiB,aAAA,CAAcl2I,GAAA,CAAI62I,SAAA,EAAW72I,GAAA,CAAI00I,QAAA,EAAU10I,GAAA,CAAInwB,MAAM,GAAG,GAAG;MAC7Fq6E,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIu3I,oBAAA,GAAuB,IAAI,EAAE;MAClDrtF,SAAA,CAAU;MACVP,UAAA,CAAW,cAAc3pD,GAAA,CAAIi1I,KAAA,CAAMgB,iBAAiB,EAAE,sBAAsBj2I,GAAA,CAAIw1I,wBAAA,CAAyB,CAAC,EAAE,sBAAsB,OAAO,EAAE,YAAYx1I,GAAA,CAAIw1I,wBAAA,CAAyB,CAAC;MACrL96G,WAAA,CAAY,cAAc16B,GAAA,CAAIi1I,KAAA,CAAMgB,iBAAiB;MACrD/rF,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,cAAc3pD,GAAA,CAAIi1I,KAAA,CAAMe,aAAa,EAAE,sBAAsBh2I,GAAA,CAAI81I,oBAAA,CAAqB,CAAC,EAAE,sBAAsB,OAAO,EAAE,YAAY91I,GAAA,CAAI81I,oBAAA,CAAqB,CAAC;MACzKp7G,WAAA,CAAY,cAAc16B,GAAA,CAAIi1I,KAAA,CAAMe,aAAa;MACjD9rF,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,IAAIx+D,GAAA,CAAIu3I,oBAAA,GAAuB,KAAK,EAAE;IACzD;EACF;EACAn8H,YAAA,EAAc,CAACs0F,YAAA,EAAcu8B,SAAA,EAAWxtE,SAAA,EAAWqH,aAAA,EAAemsE,UAAU;EAC5E3iJ,MAAA,EAAQ,CAAC,o+DAAo+D;EAC7+DoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAlRL,IAAMy9E,YAAA,GAAN5B,aAAA;AAAA,CAqRC,MAAM;EACL,CAAC,OAAOpnK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2/J,YAAA,EAAc,CAAC;IACrF5iK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MACA8tE,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCxoE,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC00G,YAAA,EAAcu8B,SAAA,EAAWxtE,SAAA,EAAWqH,aAAA,EAAemsE,UAAU;MACvEjrB,MAAA,EAAQ,CAAC,o+DAAo+D;IAC/+D,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAM0gK;EACR,GAAG;IACD1gK,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACo0J,6BAA6B;IACtC,CAAC;EACH,CAAC,GAAG;IACFpgF,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACD4+H,SAAA,EAAW,CAAC;MACVjhK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACDvzF,MAAA,EAAQ,CAAC;MACP+F,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACDsxE,QAAA,EAAU,CAAC;MACT9+J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACD8zE,eAAA,EAAiB,CAAC;MAChBthK,IAAA,EAAMqiC;IACR,CAAC;IACDq/H,YAAA,EAAc,CAAC;MACb1hK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD08G,oBAAA,EAAsB,CAAC;MACrB3hK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD+5G,YAAA,EAAc,CAAC;MACbh/J,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDs7G,IAAA,EAAM,CAAC;MACLvgK,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMugI,mBAAA,GAAN,MAAMA,mBAAA,CAAmB,EAiBzB;AAfIA,mBAAA,CAAKngK,IAAA,GAAO,SAASogK,2BAA2B/lK,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK8lK,mBAAA,EAAoB;AACvC;AAGAA,mBAAA,CAAK7vJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM6iK;AACR,CAAC;AAGDA,mBAAA,CAAK3vJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC0vJ,2BAA2B;EACvCz7I,OAAA,EAAS,CAACsrE,eAAA,EAAiBimE,eAAA,EAAiB0H,gBAAA,EAAkBuE,YAAY;AAC5E,CAAC;AAfL,IAAMG,kBAAA,GAANF,mBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOjpK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8/J,kBAAA,EAAoB,CAAC;IAC3F/iK,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACsrE,eAAA,EAAiBimE,eAAA,EAAiB0H,gBAAA,EAAkBuE,YAAY;MAC1Ep9I,OAAA,EAAS,CAACo9I,YAAY;MACtBzxJ,SAAA,EAAW,CAAC0vJ,2BAA2B;IACzC,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC9jBH,IAAMttF,OAAM,CAAC,oBAAoB;AACjC,SAASyvF,0CAA0C19H,EAAA,EAAIlb,GAAA,EAAK;EAC1D,IAAIkb,EAAA,GAAK,GAAG;IACPywH,cAAA,CAAe;IACf5hF,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3B5uC,SAAA,CAAU,GAAG,UAAU,EAAE;IACzB8uC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BhvB,WAAA,CAAY,WAAW+uB,MAAA,CAAOovF,QAAA,CAAS,CAAC;IACxC3uF,SAAA,CAAU;IACV0rB,WAAA,CAAY,oBAAoBnsB,MAAA,CAAOqvF,oBAAA,CAAqB,GAAG,IAAI,EAAE,qBAAqBrvF,MAAA,CAAOqvF,oBAAA,CAAqB,IAAI,GAAG,IAAI,EAAE,gBAAgBrvF,MAAA,CAAOsvF,kBAAA,CAAmB,GAAG,GAAG;IACnLr+G,WAAA,CAAY,KAAK+uB,MAAA,CAAOuvF,aAAA,CAAc,CAAC;EAC5C;AACF;AACA,IAAMC,oCAAA,GAAuC,IAAI/6J,cAAA,CAAe,wCAAwC;EACtGkH,UAAA,EAAY;EACZzM,OAAA,EAASugK;AACX,CAAC;AAED,SAASA,6CAAA,EAA+C;EACtD,OAAO;IACLC,QAAA,EAAUC;EACZ;AACF;AAIA,IAAMA,SAAA,GAAY;AAIlB,IAAMC,iBAAA,GAAoB;AAC1B,IAAMC,mBAAA,GAAN,MAAMA,mBAAA,CAAmB;EAAA;EAAA;EAGvB,IAAI/iF,MAAA,EAAQ;IACV,OAAO,KAAK6/C,MAAA,IAAU,KAAKC,aAAA;EAC7B;EACA,IAAI9/C,MAAMznF,KAAA,EAAO;IACf,KAAKsnI,MAAA,GAAStnI,KAAA;EAChB;EACAf,YAAYg+D,WAAA,EAAai3B,aAAA,EAAeoB,WAAU;IAChD,KAAKr4B,WAAA,GAAcA,WAAA;IACnB,KAAKsqE,aAAA,GAAgB;IACrB,KAAK9iI,MAAA,GAAS;IACd,KAAKgmK,SAAA,GAAYH,SAAA;IACjB,KAAKI,eAAA,GAAkBx2E,aAAA,KAAkB,oBAAoB,CAAC,CAACoB,aAAY,CAACA,UAASq1E,gBAAA;IACrF,KAAK7iJ,IAAA,GAAOm1C,WAAA,CAAY/S,aAAA,CAAc+e,QAAA,CAASlpE,WAAA,CAAY,MAAM,gBAAgB,kBAAkB;IACnG,IAAIu1F,WAAU;MACZ,IAAIA,UAAS7N,KAAA,EAAO;QAClB,KAAKA,KAAA,GAAQ,KAAK8/C,aAAA,GAAgBjyC,UAAS7N,KAAA;MAC7C;MACA,IAAI6N,UAAS+0E,QAAA,EAAU;QACrB,KAAKA,QAAA,GAAW/0E,UAAS+0E,QAAA;MAC3B;MACA,IAAI/0E,UAASs1E,WAAA,EAAa;QACxB,KAAKA,WAAA,GAAct1E,UAASs1E,WAAA;MAC9B;IACF;EACF;EAAA;EAEA,IAAI5qK,MAAA,EAAQ;IACV,OAAO,KAAK8nB,IAAA,KAAS,gBAAgB,KAAKrjB,MAAA,GAAS;EACrD;EACA,IAAIzE,MAAM0D,CAAA,EAAG;IACX,KAAKe,MAAA,GAAS0lF,IAAA,CAAK7K,GAAA,CAAI,GAAG6K,IAAA,CAAK9K,GAAA,CAAI,KAAK37E,CAAA,IAAK,CAAC,CAAC;EACjD;EAAA;EAEA,IAAI2mK,SAAA,EAAW;IACb,OAAO,KAAKI,SAAA;EACd;EACA,IAAIJ,SAASrvH,IAAA,EAAM;IACjB,KAAKyvH,SAAA,GAAYzvH,IAAA,IAAQ;EAC3B;EAAA;EAEA,IAAI4vH,YAAA,EAAc;IAChB,OAAO,KAAKC,YAAA,IAAgB,KAAKR,QAAA,GAAW;EAC9C;EACA,IAAIO,YAAY5qK,KAAA,EAAO;IACrB,KAAK6qK,YAAA,GAAe7qK,KAAA,IAAS;EAC/B;EAAA;EAEAkqK,cAAA,EAAgB;IACd,QAAQ,KAAKG,QAAA,GAAWE,iBAAA,IAAqB;EAC/C;EAAA;EAEAR,SAAA,EAAW;IACT,MAAMhkC,OAAA,GAAU,KAAKmkC,aAAA,CAAc,IAAI,IAAI,KAAKU,WAAA;IAChD,OAAO,OAAO7kC,OAAO,IAAIA,OAAO;EAClC;EAAA;EAEAikC,qBAAA,EAAuB;IACrB,OAAO,IAAI7/E,IAAA,CAAK2gF,EAAA,GAAK,KAAKZ,aAAA,CAAc;EAC1C;EAAA;EAEAa,kBAAA,EAAoB;IAClB,IAAI,KAAKjjJ,IAAA,KAAS,eAAe;MAC/B,OAAO,KAAKkiJ,oBAAA,CAAqB,KAAK,MAAM,KAAKvlK,MAAA,IAAU;IAC7D;IACA,OAAO;EACT;EAAA;EAEAwlK,mBAAA,EAAqB;IACnB,OAAO,KAAKW,WAAA,GAAc,KAAKP,QAAA,GAAW;EAC5C;AAkFF;AAhFIG,mBAAA,CAAKhhK,IAAA,GAAO,SAASwhK,2BAA2BnnK,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK2mK,mBAAA,EAAuBv/G,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,GAAMngC,iBAAA,CAAkBk/G,oCAAoC,CAAC;AACtL;AAGAK,mBAAA,CAAK3+H,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM0jK,mBAAA;EACN7hI,SAAA,EAAW,CAAC,CAAC,sBAAsB,GAAG,CAAC,aAAa,CAAC;EACrDsmD,SAAA,EAAW,SAASg8E,yBAAyB7+H,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,MAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIg6I,kBAAA,GAAqBj9G,EAAA,CAAGxlD,KAAA;IAC3E;EACF;EACA87E,SAAA,EAAW,CAAC,QAAQ,eAAe,YAAY,MAAM,GAAG,4BAA4B,uBAAuB;EAC3Gj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS4/G,gCAAgC/+H,EAAA,EAAIlb,GAAA,EAAK;IAC9D,IAAIkb,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,iBAAiB,CAAC,EAAE,iBAAiB,GAAG,EAAE,iBAAiB16B,GAAA,CAAIpJ,IAAA,KAAS,gBAAgBoJ,GAAA,CAAIlxB,KAAA,GAAQ,IAAI,EAAE,QAAQkxB,GAAA,CAAIpJ,IAAI;MACtI8sE,UAAA,CAAW,SAAS1jE,GAAA,CAAIu2D,KAAK;MAC7Bqf,WAAA,CAAY,SAAS51E,GAAA,CAAIm5I,QAAA,EAAU,IAAI,EAAE,UAAUn5I,GAAA,CAAIm5I,QAAA,EAAU,IAAI,EAAE,gCAAgCn5I,GAAA,CAAIm5I,QAAA,GAAW,IAAI,EAAE,kDAAkDn5I,GAAA,CAAIm5I,QAAA,GAAW,IAAI;MACjM/+E,WAAA,CAAY,2BAA2Bp6D,GAAA,CAAIw5I,eAAe,EAAE,wCAAwCx5I,GAAA,CAAIpJ,IAAA,KAAS,eAAe;IACrI;EACF;EACA8gB,MAAA,EAAQ;IACN6+C,KAAA,EAAO;IACP3/D,IAAA,EAAM;IACN9nB,KAAA,EAAO,CAAI6rD,UAAA,CAAaC,0BAAA,EAA4B,SAAS,SAASwoC,eAAe;IACrF+1E,QAAA,EAAU,CAAIx+G,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYwoC,eAAe;IAC9Fs2E,WAAA,EAAa,CAAI/+G,UAAA,CAAaC,0BAAA,EAA4B,eAAe,eAAewoC,eAAe;EACzG;EACAxrD,QAAA,EAAU,CAAC,oBAAoB;EAC/BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BjgB,mBAAmB;EAC9DC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,eAAe,QAAQ,GAAG,8CAA8C,GAAG,CAAC,SAAS,8BAA8B,aAAa,SAAS,GAAG,mDAAmD,GAAG,CAAC,MAAM,OAAO,MAAM,OAAO,GAAG,2CAA2C,GAAG,CAAC,eAAe,QAAQ,GAAG,gDAAgD,GAAG,CAAC,GAAG,sCAAsC,GAAG,CAAC,GAAG,yCAAyC,oCAAoC,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC,GAAG,yCAAyC,qCAAqC,GAAG,CAAC,SAAS,8BAA8B,aAAa,SAAS,GAAG,qDAAqD,GAAG,CAAC,MAAM,OAAO,MAAM,KAAK,CAAC;EAC7zBhhD,QAAA,EAAU,SAASk/H,4BAA4Bh/H,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACPqjD,UAAA,CAAW,GAAGq6E,yCAAA,EAA2C,GAAG,GAAG,eAAe,MAAM,GAAMzpC,sBAAsB;MAChHplD,cAAA,CAAe,GAAG,OAAO,GAAG,CAAC;MAC7B4hF,cAAA,CAAe;MACf5hF,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1B5uC,SAAA,CAAU,GAAG,UAAU,CAAC;MACxB8uC,YAAA,CAAa,EAAE;MACfquF,eAAA,CAAgB;MAChBvuF,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACpDowF,kBAAA,CAAmB,GAAG,CAAC;MACvBlwF,YAAA,CAAa;MACbF,cAAA,CAAe,IAAI,OAAO,CAAC;MAC3BowF,kBAAA,CAAmB,IAAI,CAAC;MACxBlwF,YAAA,CAAa;MACbF,cAAA,CAAe,IAAI,OAAO,EAAE;MAC5BowF,kBAAA,CAAmB,IAAI,CAAC;MACxBlwF,YAAA,CAAa,EAAE,EAAE;IACtB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACV,MAAMk/H,SAAA,GAAe51C,WAAA,CAAY,CAAC;MAC/Bt6C,SAAA,CAAU,CAAC;MACXxvB,WAAA,CAAY,WAAW16B,GAAA,CAAI64I,QAAA,CAAS,CAAC;MACrC3uF,SAAA,CAAU;MACV0rB,WAAA,CAAY,oBAAoB51E,GAAA,CAAI84I,oBAAA,CAAqB,GAAG,IAAI,EAAE,qBAAqB94I,GAAA,CAAI65I,iBAAA,CAAkB,GAAG,IAAI,EAAE,gBAAgB75I,GAAA,CAAI+4I,kBAAA,CAAmB,GAAG,GAAG;MACnKr+G,WAAA,CAAY,KAAK16B,GAAA,CAAIg5I,aAAA,CAAc,CAAC;MACpC9uF,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,oBAAoBywF,SAAS;MACxClwF,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,oBAAoBywF,SAAS;MACxClwF,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,oBAAoBywF,SAAS;IAC7C;EACF;EACAh/H,YAAA,EAAc,CAACq0F,gBAAgB;EAC/BngH,MAAA,EAAQ,CAAC,ihOAAihO;EAC1hOoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAxJL,IAAMs/E,kBAAA,GAANf,mBAAA;AAAA,CA2JC,MAAM;EACL,CAAC,OAAO9pK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwhK,kBAAA,EAAoB,CAAC;IAC3FzkK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,QAAQ;QACR,SAAS;QAAA;QAAA;QAGT,YAAY;QACZ,WAAW;QACX,mCAAmC;QACnC,gDAAgD;QAChD,oBAAoB;QACpB,qBAAqB;QACrB,wCAAwC;QACxC,0DAA0D;QAC1D,wBAAwB;QACxB,wBAAwB;QACxB,wBAAwB;QACxB,eAAe;MACjB;MACA8tE,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCxoE,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACy0G,gBAAgB;MAC1Bz0F,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,ihOAAihO;IAC5hO,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,GAAG;IACDtkF,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC02J,oCAAoC;IAC7C,CAAC;EACH,CAAC,GAAG;IACF1iF,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACD+hI,kBAAA,EAAoB,CAAC;MACnBpkK,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,oBAAoB;IAC7B,CAAC;IACDqU,IAAA,EAAM,CAAC;MACLhhB,IAAA,EAAMqiC;IACR,CAAC;IACDnpC,KAAA,EAAO,CAAC;MACN8G,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACD+1E,QAAA,EAAU,CAAC;MACTvjK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;IACDs2E,WAAA,EAAa,CAAC;MACZ9jK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWkoC;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAOH,IAAMk3E,UAAA,GAAaD,kBAAA;AACnB,IAAME,yBAAA,GAAN,MAAMA,yBAAA,CAAyB,EAgB/B;AAdIA,yBAAA,CAAKjiK,IAAA,GAAO,SAASkiK,iCAAiC7nK,CAAA,EAAG;EACvD,OAAO,KAAKA,CAAA,IAAK4nK,yBAAA,EAA0B;AAC7C;AAGAA,yBAAA,CAAK3xJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM2kK;AACR,CAAC;AAGDA,yBAAA,CAAKzxJ,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACC,YAAA,EAAc2wD,eAAe;AACzC,CAAC;AAdL,IAAM6uF,wBAAA,GAANF,yBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO/qK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4hK,wBAAA,EAA0B,CAAC;IACjG7kK,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACC,YAAA,EAAco/I,kBAAA,EAAoBC,UAAU;MACtDl/I,OAAA,EAAS,CAACi/I,kBAAA,EAAoBC,UAAA,EAAY1uF,eAAe;IAC3D,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACxSH,IAAMzC,OAAM,CAAC,mBAAmB,EAAE;AAClC,IAAMC,OAAM,CAAC,GAAG;AAChB,SAASsxF,qCAAqCx/H,EAAA,EAAIlb,GAAA,EAAK;EACrD,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,OAAO,CAAC;IAC1BxvB,UAAA,CAAW,wBAAwB,SAASogH,kFAAA,EAAoF;MAC9HtrC,aAAA,CAAcJ,GAAG;MACpB,MAAMrL,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOg3C,0BAAA,GAA6B,IAAI;IAChE,CAAC,EAAE,uBAAuB,SAASC,iFAAA,EAAmF;MACjHxrC,aAAA,CAAcJ,GAAG;MACpB,MAAMrL,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOg3C,0BAAA,GAA6B,KAAK;IACjE,CAAC;IACEz/H,SAAA,CAAU,GAAG,OAAO,CAAC;IACrB4uC,cAAA,CAAe,GAAG,OAAO,CAAC;IAC1B5uC,SAAA,CAAU,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;IAC/C8uC,YAAA,CAAa,EAAE;EACpB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BC,UAAA,CAAW,iBAAiBi6C,MAAA,CAAOk3C,kBAAA,CAAmB,CAAC,EAAE,kBAAkBl3C,MAAA,CAAOk3C,kBAAA,CAAmB,CAAC,EAAE,kBAAkBl3C,MAAA,CAAOm3C,uBAAA,CAAwB,CAAC;IAC1J7wF,SAAA,CAAU,CAAC;IACXP,UAAA,CAAW,cAAci6C,MAAA,CAAOm3C,uBAAA,CAAwB,CAAC;IACzD7wF,SAAA,CAAU;IACVP,UAAA,CAAW,gBAAgBi6C,MAAA,CAAOm3C,uBAAA,CAAwB,CAAC;IAC3D7wF,SAAA,CAAU;IACVP,UAAA,CAAW,iBAAiBi6C,MAAA,CAAOm3C,uBAAA,CAAwB,CAAC;EACjE;AACF;AACA,SAASC,gCAAgC3nJ,EAAA,EAAI;EAC3C,OAAOhiB,KAAA,CAAM,kDAAkDgiB,EAAE,IAAI;AACvE;AAEA,SAAS4nJ,yCAAA,EAA2C;EAClD,OAAO5pK,KAAA,CAAM,kFAAkF;AACjG;AAEA,SAAS6pK,4BAAA,EAA8B;EACrC,OAAO7pK,KAAA,CAAM,kDAAkD;AACjE;AAEA,SAAS8pK,6BAA6BvmG,SAAA,EAAW;EAC/C,OAAOvjE,KAAA,CAAM,GAAGujE,SAAS,mDAAmD;AAC9E;AAGA,IAAMwmG,wBAAA,GAA2B,IAAIl9J,cAAA,CAAe,0BAA0B;AAE9E,IAAMm9J,QAAA,GAAN,MAAMA,QAAA,CAAQ;EAAA;EAEZ,IAAIzmG,UAAA,EAAY;IACd,OAAO,KAAK0mG,UAAA;EACd;EACA,IAAI1mG,UAAUA,SAAA,EAAW;IACvB,IAAIA,SAAA,IAAaA,SAAA,KAAc,SAASA,SAAA,KAAc,WAAW,OAAOplE,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/G,MAAM2rK,4BAAA,CAA6BvmG,SAAS;IAC9C;IACA,KAAK0mG,UAAA,GAAa1mG,SAAA;EACpB;EACA7mE,YAAYsyE,eAAA,EAAiB;IAC3B,KAAKA,eAAA,GAAkBA,eAAA;IACvB,KAAK+2F,kBAAA,GAAqB,IAAIC,aAAA,CAAc,CAAC;IAE7C,KAAKkE,SAAA,GAAY,mBAAIrtK,GAAA,CAAI;IAEzB,KAAKm+E,aAAA,GAAgB,IAAIpgC,OAAA,CAAQ;IAKjC,KAAK6gD,KAAA,GAAQ;IACb,KAAKwuE,UAAA,GAAa;IAElB,KAAK9vG,QAAA,GAAW;IAEhB,KAAKgwG,UAAA,GAAa,IAAI1mI,YAAA,CAAa;IAEnC,KAAK0iI,WAAA,GAAc,KAAKJ,kBAAA;EAC1B;EAAA;AAAA;AAAA;AAAA;EAKA56F,SAASi/F,QAAA,EAAU;IACjB,IAAI,OAAOjsK,SAAA,KAAc,eAAeA,SAAA,EAAW;MACjD,IAAI,CAACisK,QAAA,CAASpoJ,EAAA,EAAI;QAChB,MAAM6nJ,2BAAA,CAA4B;MACpC;MACA,IAAI,KAAKK,SAAA,CAAUtsK,GAAA,CAAIwsK,QAAA,CAASpoJ,EAAE,GAAG;QACnC,MAAM2nJ,+BAAA,CAAgCS,QAAA,CAASpoJ,EAAE;MACnD;IACF;IACA,KAAKkoJ,SAAA,CAAUnsK,GAAA,CAAIqsK,QAAA,CAASpoJ,EAAA,EAAIooJ,QAAQ;EAC1C;EAAA;AAAA;AAAA;AAAA;EAKA38I,WAAW28I,QAAA,EAAU;IACnB,KAAKF,SAAA,CAAUlrK,MAAA,CAAOorK,QAAA,CAASpoJ,EAAE;EACnC;EAAA;EAEAqQ,KAAK+3I,QAAA,EAAU;IACb,IAAI,KAAKv+E,MAAA,IAAUu+E,QAAA,CAASpoJ,EAAA,EAAI;MAC9B,KAAK6pE,MAAA,GAASu+E,QAAA,CAASpoJ,EAAA;MACvB,KAAKuhD,SAAA,GAAY6mG,QAAA,CAAS3uE,KAAA,GAAQ2uE,QAAA,CAAS3uE,KAAA,GAAQ,KAAKA,KAAA;IAC1D,OAAO;MACL,KAAKl4B,SAAA,GAAY,KAAK8mG,oBAAA,CAAqBD,QAAQ;IACrD;IACA,KAAKD,UAAA,CAAW3kI,IAAA,CAAK;MACnBqmD,MAAA,EAAQ,KAAKA,MAAA;MACbtoB,SAAA,EAAW,KAAKA;IAClB,CAAC;EACH;EAAA;EAEA8mG,qBAAqBD,QAAA,EAAU;IAC7B,IAAI,CAACA,QAAA,EAAU;MACb,OAAO;IACT;IAEA,MAAME,YAAA,GAAeF,QAAA,EAAUE,YAAA,IAAgB,KAAKA,YAAA,IAAgB,CAAC,CAAC,KAAKt7F,eAAA,EAAiBs7F,YAAA;IAC5F,IAAIC,kBAAA,GAAqBC,qBAAA,CAAsBJ,QAAA,CAAS3uE,KAAA,IAAS,KAAKA,KAAA,EAAO6uE,YAAY;IAEzF,IAAIG,kBAAA,GAAqBF,kBAAA,CAAmBntK,OAAA,CAAQ,KAAKmmE,SAAS,IAAI;IACtE,IAAIknG,kBAAA,IAAsBF,kBAAA,CAAmB/rK,MAAA,EAAQ;MACnDisK,kBAAA,GAAqB;IACvB;IACA,OAAOF,kBAAA,CAAmBE,kBAAkB;EAC9C;EACA1lI,SAAA,EAAW;IACT,KAAKghI,kBAAA,CAAmBv8J,IAAA,CAAK;EAC/B;EACA+6B,YAAA,EAAc;IACZ,KAAKy2C,aAAA,CAAcxxE,IAAA,CAAK;EAC1B;EACAgV,YAAA,EAAc;IACZ,KAAKw8D,aAAA,CAAc9vE,QAAA,CAAS;IAC5B,KAAK66J,kBAAA,CAAmB76J,QAAA,CAAS;EACnC;AA0BF;AAxBI8+J,QAAA,CAAK/iK,IAAA,GAAO,SAASyjK,gBAAgBppK,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAK0oK,QAAA,EAAYthH,iBAAA,CAAkBqhH,wBAAA,EAA0B,CAAC,CAAC;AAC7E;AAGAC,QAAA,CAAK9jI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMylK,QAAA;EACN5jI,SAAA,EAAW,CAAC,CAAC,IAAI,WAAW,EAAE,CAAC;EAC/B47C,SAAA,EAAW,CAAC,GAAG,UAAU;EACzB37C,MAAA,EAAQ;IACNwlD,MAAA,EAAQ,CAAIviC,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,QAAQ;IACxD6qB,KAAA,EAAO,CAAInyC,UAAA,CAAasnB,IAAA,EAAM,gBAAgB,OAAO;IACrDrN,SAAA,EAAW,CAAIja,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,WAAW;IACjE05F,YAAA,EAAc,CAAIhhH,UAAA,CAAaC,0BAAA,EAA4B,uBAAuB,gBAAgBC,gBAAgB;IAClH2Q,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,mBAAmB,YAAYC,gBAAgB;EACxG;EACAljB,OAAA,EAAS;IACP6jI,UAAA,EAAY;EACd;EACA5jI,QAAA,EAAU,CAAC,SAAS;EACpBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BhjB,oBAAoB;AACjE,CAAC;AAlHL,IAAMkkI,OAAA,GAANX,QAAA;AAAA,CAqHC,MAAM;EACL,CAAC,OAAO7rK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmjK,OAAA,EAAS,CAAC;IAChFpmK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC64J,wBAAwB;IACjC,CAAC;EACH,CAAC,GAAG;IACFl+E,MAAA,EAAQ,CAAC;MACPtnF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;IACDuqF,KAAA,EAAO,CAAC;MACNl3F,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,cAAc;IACvB,CAAC;IACDqyD,SAAA,EAAW,CAAC;MACVh/D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;IACDo5J,YAAA,EAAc,CAAC;MACb/lK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD2Q,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD2gH,UAAA,EAAY,CAAC;MACX5lK,IAAA,EAAMsiC,MAAA;MACN31B,IAAA,EAAM,CAAC,eAAe;IACxB,CAAC;EACH,CAAC;AACH,GAAG;AAEH,SAASs5J,sBAAsB/uE,KAAA,EAAO6uE,YAAA,EAAc;EAClD,IAAIM,SAAA,GAAY,CAAC,OAAO,MAAM;EAC9B,IAAInvE,KAAA,IAAS,QAAQ;IACnBmvE,SAAA,CAAUluJ,OAAA,CAAQ;EACpB;EACA,IAAI,CAAC4tJ,YAAA,EAAc;IACjBM,SAAA,CAAU9sK,IAAA,CAAK,EAAE;EACnB;EACA,OAAO8sK,SAAA;AACT;AACA,IAAMC,yBAAA,GAA4BjxF,kBAAA,CAAmBF,QAAA,GAAW,MAAMH,eAAA,CAAgBJ,cAAA;AAKtF,IAAM2xF,iBAAA,GAAoB;EAAA;EAExBC,SAAA,EAAW/rH,OAAA,CAAQ,aAAa,CAAChhB,KAAA,CAAM,mBAAmB9f,KAAA,CAAM;IAC9D2rC,SAAA,EAAW;EACb,CAAC,CAAC;EAAA;EAEF7rB,KAAA,CAAM,qBAAqB9f,KAAA,CAAM;IAC/B2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,8BAA8Bs0E,OAAA,CAAQ05C,yBAAyB,CAAC,EAAE;EAAA;EAElFG,WAAA,EAAahsH,OAAA,CAAQ,eAAe,CAAChhB,KAAA,CAAM,mBAAmB9f,KAAA,CAAM;IAClE2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,qBAAqB9f,KAAA,CAAM;IACpC2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,8BAA8Bs0E,OAAA,CAAQ05C,yBAAyB,CAAC,CAAC,CAAC;EAAA;EAElFI,YAAA,EAAcjsH,OAAA,CAAQ,gBAAgB,CAAChhB,KAAA,CAAM,mBAAmB9f,KAAA,CAAM;IACpE2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,qBAAqB9f,KAAA,CAAM;IACpC2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAGhN,UAAA,CAAW,8BAA8Bs0E,OAAA,CAAQ05C,yBAAyB,CAAC,CAAC,CAAC;EAAA;EAElFK,YAAA,EAAclsH,OAAA,CAAQ,gBAAgB,CAAChhB,KAAA,CAAM,yCAAyC9f,KAAA,CAAM;IAC1FkoE,OAAA,EAAS;EACX,CAAC,CAAC,GAAGpoD,KAAA,CAAM,mCAAmC9f,KAAA,CAAM;IAClDkoE,OAAA,EAAS;EACX,CAAC,CAAC,GAAGpoD,KAAA,CAAM,6EAA6E9f,KAAA,CAAM;IAC5FkoE,OAAA,EAAS;EACX,CAAC,CAAC;EAAA;EAEFvpC,UAAA,CAAW,0DAA0Ds0E,OAAA,CAAQ,KAAK,CAAC,GAAGt0E,UAAA,CAAW,WAAWs0E,OAAA,CAAQ05C,yBAAyB,CAAC,EAAE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQhJM,aAAA,EAAensH,OAAA,CAAQ,iBAAiB;EAAA;EAExCnC,UAAA,CAAW,0CAA0Cs0E,OAAA,CAAQ05C,yBAAA,EAA2BO,SAAA,CAAU,CAACltJ,KAAA,CAAM;IACvG2rC,SAAA,EAAW;EACb,CAAC,GAAG3rC,KAAA,CAAM;IACR2rC,SAAA,EAAW;EACb,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA;EAELhN,UAAA,CAAW,0CAA0Cs0E,OAAA,CAAQ05C,yBAAA,EAA2BO,SAAA,CAAU,CAACltJ,KAAA,CAAM;IACvG2rC,SAAA,EAAW;EACb,CAAC,GAAG3rC,KAAA,CAAM;IACR2rC,SAAA,EAAW;EACb,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA;EAELhN,UAAA,CAAW,wCAAwCs0E,OAAA,CAAQ05C,yBAAA,EAA2BO,SAAA,CAAU,CAACltJ,KAAA,CAAM;IACrG2rC,SAAA,EAAW;EACb,CAAC,GAAG3rC,KAAA,CAAM;IACR2rC,SAAA,EAAW;EACb,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA;EAELhN,UAAA,CAAW,wCAAwCs0E,OAAA,CAAQ05C,yBAAA,EAA2BO,SAAA,CAAU,CAACltJ,KAAA,CAAM;IACrG2rC,SAAA,EAAW;EACb,CAAC,GAAG3rC,KAAA,CAAM;IACR2rC,SAAA,EAAW;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG7rB,KAAA,CAAM,0EAA0E9f,KAAA,CAAM;IAC5F2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,sCAAsC9f,KAAA,CAAM;IACrD2rC,SAAA,EAAW;EACb,CAAC,CAAC,GAAG7rB,KAAA,CAAM,mCAAmC9f,KAAA,CAAM;IAClD2rC,SAAA,EAAW;EACb,CAAC,CAAC,EAAE;EAAA;EAEJwhH,aAAA,EAAersH,OAAA,CAAQ,iBAAiB,CAACnC,UAAA,CAAW,WAAW,CAAC7mB,KAAA,CAAM,MAAMo7F,YAAA,CAAa,GAAG;IAC1FhpH,QAAA,EAAU;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC;AACP;AAMA,IAAMkjK,kBAAA,GAAN,MAAMA,kBAAA,CAAkB;EACtB5uK,YAAA,EAAc;IAKZ,KAAK8nC,OAAA,GAAU,IAAIoW,OAAA,CAAQ;EAC7B;AAaF;AAXI0wH,kBAAA,CAAKrkK,IAAA,GAAO,SAASskK,0BAA0BjqK,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAKgqK,kBAAA,EAAmB;AACtC;AAGAA,kBAAA,CAAKlkK,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO8oK,kBAAA;EACPhkK,OAAA,EAASgkK,kBAAA,CAAkBrkK,IAAA;EAC3B8M,UAAA,EAAY;AACd,CAAC;AAlBL,IAAMy3J,iBAAA,GAANF,kBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAOntK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgkK,iBAAA,EAAmB,CAAC;IAC1FjnK,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,SAAS03J,sCAAsCtG,UAAA,EAAY;EACzD,OAAOA,UAAA,IAAc,IAAIqG,iBAAA,CAAkB;AAC7C;AAEA,IAAME,6BAAA,GAAgC;EAAA;EAEpCv1J,OAAA,EAASq1J,iBAAA;EACT7iJ,IAAA,EAAM,CAAC,CAAC,IAAI3I,QAAA,CAAS,GAAG,IAAIgK,QAAA,CAAS,GAAGwhJ,iBAAiB,CAAC;EAC1D30J,UAAA,EAAY40J;AACd;AAWA,IAAME,cAAA,GAAN,MAAMA,cAAA,CAAc;EAAA;AAAA;AAAA;AAAA;EAKlB,IAAIC,sBAAA,EAAwB;IAC1B,OAAO,KAAKC,sBAAA;EACd;EACA,IAAID,sBAAsBnuK,KAAA,EAAO;IAC/B,KAAKquK,4BAAA,CAA6BruK,KAAK;EACzC;EACAf,YAKAknK,KAAA,EAAOn4E,kBAAA,EAGPsgF,KAAA,EAAOC,UAAA,EAAYv3F,aAAA,EAAe/Z,WAAA,EAClCqiG,cAAA,EAAgB3tF,cAAA,EAAgB;IAC9B,KAAKw0F,KAAA,GAAQA,KAAA;IACb,KAAKn4E,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKsgF,KAAA,GAAQA,KAAA;IACb,KAAKC,UAAA,GAAaA,UAAA;IAClB,KAAKv3F,aAAA,GAAgBA,aAAA;IACrB,KAAK/Z,WAAA,GAAcA,WAAA;IACnB,KAAKqiG,cAAA,GAAiBA,cAAA;IAKtB,KAAKkP,kBAAA,GAAqB;IAM1B,KAAKC,UAAA,GAAa,CAAC;IAEnB,KAAKC,eAAA,GAAkB;IAIvB,KAAK5C,0BAAA,GAA6B;IAElC,KAAK4B,aAAA,GAAgB;IAErB,KAAKhxG,QAAA,GAAW;IAIhB,KAAK0xG,sBAAA,GAAyB;IAK9B,IAAI,CAACE,KAAA,KAAU,OAAO5tK,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC7D,MAAMyrK,wCAAA,CAAyC;IACjD;IACA,IAAIx6F,cAAA,EAAgB+7F,aAAA,EAAe;MACjC,KAAKA,aAAA,GAAgB/7F,cAAA,EAAgB+7F,aAAA;IACvC;IACA,KAAKiB,mBAAA,CAAoB;EAC3B;EACArnI,SAAA,EAAW;IACT,IAAI,CAAC,KAAK/iB,EAAA,IAAM,KAAKgqJ,UAAA,EAAY;MAC/B,KAAKhqJ,EAAA,GAAK,KAAKgqJ,UAAA,CAAW3uK,IAAA;IAC5B;IAEA,KAAKgvK,qBAAA,CAAsB;IAC3B,KAAKC,4BAAA,CAA6B;MAChC9Y,OAAA,EAAS,KAAK+Y,SAAA,CAAU,IAAI,WAAW,KAAKJ;IAC9C,CAAC;IACD,KAAKJ,KAAA,CAAM5gG,QAAA,CAAS,IAAI;IACxB,KAAKqhG,WAAA,GAAc,KAAK9xG,WAAA,CAAY/S,aAAA,CAAcrtC,aAAA,CAAc,4BAA4B;IAC5F,KAAKwxJ,4BAAA,CAA6B,KAAKD,sBAAsB;EAC/D;EACAh3F,gBAAA,EAAkB;IAGhB,KAAKJ,aAAA,CAAcvC,OAAA,CAAQ,KAAKxX,WAAA,EAAa,IAAI,EAAElzB,SAAA,CAAUqrC,MAAA,IAAU;MACrE,MAAMwI,QAAA,GAAW,CAAC,CAACxI,MAAA;MACnB,IAAIwI,QAAA,KAAa,KAAK4wF,kBAAA,EAAoB;QACxC,KAAKQ,wBAAA,CAAyBpxF,QAAQ;QACtC,KAAKoQ,kBAAA,CAAmBzlD,YAAA,CAAa;MACvC;IACF,CAAC;EACH;EACAxnB,YAAA,EAAc;IACZ,KAAKi2D,aAAA,CAAcjC,cAAA,CAAe,KAAK9X,WAAW;IAClD,KAAKqxG,KAAA,CAAMt+I,UAAA,CAAW,IAAI;IAC1B,KAAKi/I,qBAAA,CAAsBrlI,WAAA,CAAY;IACvC,IAAI,KAAKmlI,WAAA,EAAa;MACpB,KAAKzP,cAAA,EAAgBz8F,iBAAA,CAAkB,KAAKksG,WAAA,EAAa,KAAKX,sBAAsB;IACtF;EACF;EAAA;AAAA;AAAA;AAAA;EAKAY,yBAAyBE,OAAA,EAAS;IAEhC,IAAI,KAAKC,WAAA,CAAY,KAAKD,OAAA,EAAS;MACjC;IACF;IACA,KAAKV,kBAAA,GAAqBU,OAAA;IAC1B,IAAI,CAAC,KAAKJ,SAAA,CAAU,GAAG;MACrB,KAAKF,qBAAA,CAAsB;MAC3B,IAAI,KAAKJ,kBAAA,EAAoB;QAC3B,KAAKK,4BAAA,CAA6B;UAChCO,SAAA,EAAW,KAAKV,eAAA;UAChB3Y,OAAA,EAAS;QACX,CAAC;MACH,OAAO;QACL,KAAK8Y,4BAAA,CAA6B;UAChCO,SAAA,EAAW;UACXrZ,OAAA,EAAS,KAAK2Y;QAChB,CAAC;MACH;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAG,6BAA6BQ,SAAA,EAAW;IACtC,KAAKZ,UAAA,GAAaY,SAAA,IAAa,CAAC;IAGhC,IAAI,KAAKvD,0BAAA,EAA4B;MACnC,KAAK2C,UAAA,GAAa;QAChB1Y,OAAA,EAASsZ,SAAA,CAAUtZ;MACrB;IACF;EACF;EAAA;EAEAuZ,qBAAA,EAAuB;IACrB,KAAKhB,KAAA,CAAM15I,IAAA,CAAK,IAAI;IAEpB,IAAI,KAAK65I,UAAA,CAAW1Y,OAAA,KAAY,UAAU,KAAK0Y,UAAA,CAAW1Y,OAAA,KAAY,UAAU;MAC9E,KAAK+V,0BAAA,GAA6B;IACpC;EACF;EACAyD,aAAA,EAAe;IACb,IAAI,CAAC,KAAKJ,WAAA,CAAY,GAAG;MACvB,KAAKb,KAAA,CAAM15I,IAAA,CAAK,IAAI;IACtB;EACF;EACAg6D,eAAe3lF,KAAA,EAAO;IACpB,IAAI,CAAC,KAAKkmK,WAAA,CAAY,MAAMlmK,KAAA,CAAM89D,OAAA,KAAYzN,KAAA,IAASrwD,KAAA,CAAM89D,OAAA,KAAY9N,KAAA,GAAQ;MAC/EhwD,KAAA,CAAMqe,cAAA,CAAe;MACrB,KAAKgoJ,oBAAA,CAAqB;IAC5B;EACF;EAAA;EAEAR,UAAA,EAAY;IACV,OAAO,KAAKR,KAAA,CAAMlgF,MAAA,IAAU,KAAK7pE,EAAA,KAAO,KAAK+pJ,KAAA,CAAMxoG,SAAA,KAAc,SAAS,KAAKwoG,KAAA,CAAMxoG,SAAA,KAAc;EACrG;EAAA;EAEAmmG,wBAAA,EAA0B;IACxB,OAAO,GAAG,KAAK6C,SAAA,CAAU,IAAI,YAAY,EAAE,GAAG,KAAKJ,eAAe;EACpE;EAAA;EAEA1C,mBAAA,EAAqB;IACnB,MAAMoD,SAAA,GAAY,KAAKX,UAAA,CAAWW,SAAA;IAClC,QAAQA,SAAA,GAAY,GAAGA,SAAS,SAAS,MAAM,KAAKX,UAAA,CAAW1Y,OAAA;EACjE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWA6Y,sBAAA,EAAwB;IACtB,KAAKF,eAAA,GAAkB,KAAKI,SAAA,CAAU,IAAI,KAAKR,KAAA,CAAMxoG,SAAA,GAAY,KAAKk4B,KAAA,IAAS,KAAKswE,KAAA,CAAMtwE,KAAA;EAC5F;EACAmxE,YAAA,EAAc;IACZ,OAAO,KAAKb,KAAA,CAAM5xG,QAAA,IAAY,KAAKA,QAAA;EACrC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA8yG,sBAAA,EAAwB;IACtB,IAAI,CAAC,KAAKV,SAAA,CAAU,GAAG;MACrB,OAAO;IACT;IACA,OAAO,KAAKR,KAAA,CAAMxoG,SAAA,IAAa,QAAQ,cAAc;EACvD;EAAA;EAEA2pG,aAAA,EAAe;IACb,OAAO,CAAC,KAAKN,WAAA,CAAY,KAAK,KAAKL,SAAA,CAAU;EAC/C;EACAT,6BAA6BqB,cAAA,EAAgB;IAM3C,IAAI,KAAKX,WAAA,EAAa;MAGpB,KAAKzP,cAAA,EAAgBz8F,iBAAA,CAAkB,KAAKksG,WAAA,EAAa,KAAKX,sBAAsB;MACpF,KAAK9O,cAAA,EAAgBp9F,QAAA,CAAS,KAAK6sG,WAAA,EAAaW,cAAc;IAChE;IACA,KAAKtB,sBAAA,GAAyBsB,cAAA;EAChC;EAAA;EAEAf,oBAAA,EAAsB;IACpB,KAAKM,qBAAA,GAAwB3wH,KAAA,CAAM,KAAKgwH,KAAA,CAAM5B,UAAA,EAAY,KAAK4B,KAAA,CAAM/wF,aAAA,EAAe,KAAK4oF,KAAA,CAAMp/H,OAAO,EAAEgD,SAAA,CAAU,MAAM;MACtH,IAAI,KAAK+kI,SAAA,CAAU,GAAG;QACpB,KAAKF,qBAAA,CAAsB;QAE3B,IAAI,KAAKH,UAAA,CAAW1Y,OAAA,KAAY,UAAU,KAAK0Y,UAAA,CAAW1Y,OAAA,KAAY,UAAU;UAC9E,KAAK+V,0BAAA,GAA6B;QACpC;QACA,KAAK+C,4BAAA,CAA6B;UAChCO,SAAA,EAAW,KAAKV,eAAA;UAChB3Y,OAAA,EAAS;QACX,CAAC;QACD,KAAKyY,kBAAA,GAAqB;MAC5B;MAEA,IAAI,CAAC,KAAKM,SAAA,CAAU,KAAK,KAAKL,UAAA,IAAc,KAAKA,UAAA,CAAW1Y,OAAA,KAAY,UAAU;QAChF,KAAK+V,0BAAA,GAA6B;QAClC,KAAK+C,4BAAA,CAA6B;UAChCO,SAAA,EAAW;UACXrZ,OAAA,EAAS,KAAK2Y;QAChB,CAAC;MACH;MACA,KAAK1gF,kBAAA,CAAmBzlD,YAAA,CAAa;IACvC,CAAC;EACH;AAqEF;AAnEI2lI,cAAA,CAAK1kK,IAAA,GAAO,SAASmmK,sBAAsB9rK,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKqqK,cAAA,EAAkBjjH,iBAAA,CAAkB8iH,iBAAiB,GAAM9iH,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAkBiiH,OAAA,EAAS,CAAC,GAAMjiH,iBAAA,CAAkB,8BAA8B,CAAC,GAAMA,iBAAA,CAAqB6rB,YAAY,GAAM7rB,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB8Y,aAAA,EAAe,CAAC,GAAM9Y,iBAAA,CAAkBqhH,wBAAA,EAA0B,CAAC,CAAC;AACxX;AAGA4B,cAAA,CAAKriI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMonK,cAAA;EACNvlI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvC47C,SAAA,EAAW,CAAC,GAAG,iBAAiB;EAChCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASqkH,2BAA2BxjI,EAAA,EAAIlb,GAAA,EAAK;IACzD,IAAIkb,EAAA,GAAK,GAAG;MACPqf,UAAA,CAAW,SAAS,SAASokH,uCAAA,EAAyC;QACvE,OAAO3+I,GAAA,CAAIq+I,YAAA,CAAa;MAC1B,CAAC,EAAE,WAAW,SAASO,yCAAyCnkH,MAAA,EAAQ;QACtE,OAAOz6B,GAAA,CAAI09D,cAAA,CAAejjC,MAAM;MAClC,CAAC,EAAE,cAAc,SAASokH,4CAAA,EAA8C;QACtE,OAAO7+I,GAAA,CAAI89I,wBAAA,CAAyB,IAAI;MAC1C,CAAC,EAAE,cAAc,SAASgB,4CAAA,EAA8C;QACtE,OAAO9+I,GAAA,CAAI89I,wBAAA,CAAyB,KAAK;MAC3C,CAAC;IACH;IACA,IAAI5iI,EAAA,GAAK,GAAG;MACPwf,WAAA,CAAY,aAAa16B,GAAA,CAAIs+I,qBAAA,CAAsB,CAAC;MACpDlkF,WAAA,CAAY,4BAA4Bp6D,GAAA,CAAIi+I,WAAA,CAAY,CAAC;IAC9D;EACF;EACAvmI,MAAA,EAAQ;IACNrkB,EAAA,EAAI,CAAIsnC,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,IAAI;IAClDu6F,aAAA,EAAe;IACf1vE,KAAA,EAAO;IACPthC,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/FoiH,qBAAA,EAAuB;IACvBtB,YAAA,EAAc,CAAIhhH,UAAA,CAAaC,0BAAA,EAA4B,gBAAgB,gBAAgBC,gBAAgB;EAC7G;EACAjjB,QAAA,EAAU,CAAC,eAAe;EAC1BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BjgB,mBAAmB;EAC9DwmD,KAAA,EAAOlY;EACP4S,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,GAAG,6BAA6B,qBAAqB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,GAAG,2BAA2B,GAAG,CAAC,GAAG,8BAA8B,GAAG,CAAC,GAAG,+BAA+B,GAAG,CAAC,GAAG,gCAAgC,CAAC;EAC/ShhD,QAAA,EAAU,SAAS+jI,uBAAuB7jI,EAAA,EAAIlb,GAAA,EAAK;IACjD,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB;MAChBnS,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACvCoS,YAAA,CAAa,CAAC;MACdlS,YAAA,CAAa;MACbsU,UAAA,CAAW,GAAGm8E,oCAAA,EAAsC,GAAG,GAAG,OAAO,CAAC;MAClEzwF,YAAA,CAAa;IAClB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,0BAA0Bp6D,GAAA,CAAI49I,SAAA,CAAU,CAAC,EAAE,mCAAmC59I,GAAA,CAAIw8I,aAAA,KAAkB,QAAQ;MACxH9hH,WAAA,CAAY,YAAY16B,GAAA,CAAIi+I,WAAA,CAAY,IAAI,OAAO,CAAC,EAAE,QAAQj+I,GAAA,CAAIi+I,WAAA,CAAY,IAAI,OAAO,QAAQ;MACjG/zF,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIu+I,YAAA,CAAa,IAAI,IAAI,EAAE;IACjD;EACF;EACAjvJ,MAAA,EAAQ,CAAC,o2DAAo2D;EAC72DoD,aAAA,EAAe;EACfrR,IAAA,EAAM;IACJy0E,SAAA,EAAW,CAACqmF,iBAAA,CAAkBC,SAAA,EAAWD,iBAAA,CAAkBE,WAAA,EAAaF,iBAAA,CAAkBG,YAAA,EAAcH,iBAAA,CAAkBI,YAAA,EAAcJ,iBAAA,CAAkBK,aAAA,EAAeL,iBAAA,CAAkBO,aAAa;EAC1M;EACA3hF,eAAA,EAAiB;AACnB,CAAC;AAnTL,IAAMikF,aAAA,GAANhC,cAAA;AAAA,CAsTC,MAAM;EACL,CAAC,OAAOxtK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmmK,aAAA,EAAe,CAAC;IACtFppK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QACT,WAAW;QACX,aAAa;QACb,gBAAgB;QAChB,gBAAgB;QAChB,oBAAoB;QACpB,oCAAoC;MACtC;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCy0C,UAAA,EAAY,CAACwsC,iBAAA,CAAkBC,SAAA,EAAWD,iBAAA,CAAkBE,WAAA,EAAaF,iBAAA,CAAkBG,YAAA,EAAcH,iBAAA,CAAkBI,YAAA,EAAcJ,iBAAA,CAAkBK,aAAA,EAAeL,iBAAA,CAAkBO,aAAa;MACzM7kI,UAAA,EAAY;MACZmD,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,o2DAAo2D;IAC/2D,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAMinK;EACR,GAAG;IACDjnK,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAAMomK,OAAA;IACN35J,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC,4BAA4B;IACrC,GAAG;MACD3M,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAASgwE;EACX,GAAG;IACDhwE,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASi9D,aAAA;IACTxwD,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC64J,wBAAwB;IACjC,CAAC;EACH,CAAC,GAAG;IACF/nJ,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACDi6J,aAAA,EAAe,CAAC;MACd5mK,IAAA,EAAMqiC;IACR,CAAC;IACD60D,KAAA,EAAO,CAAC;MACNl3F,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDoiH,qBAAA,EAAuB,CAAC;MACtBrnK,IAAA,EAAMqiC;IACR,CAAC;IACD0jI,YAAA,EAAc,CAAC;MACb/lK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMokH,cAAA,GAAN,MAAMA,cAAA,CAAc,EAiBpB;AAfIA,cAAA,CAAK3mK,IAAA,GAAO,SAAS4mK,sBAAsBvsK,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKssK,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKr2J,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMqpK;AACR,CAAC;AAGDA,cAAA,CAAKn2J,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAACg2J,6BAA6B;EACzC/hJ,OAAA,EAAS,CAAC4wD,eAAe;AAC3B,CAAC;AAfL,IAAMuzF,aAAA,GAANF,cAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOzvK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsmK,aAAA,EAAe,CAAC;IACtFvpK,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiBowF,OAAA,EAASgD,aAAa;MACjD5jJ,OAAA,EAAS,CAAC4gJ,OAAA,EAASgD,aAAa;MAChCj4J,SAAA,EAAW,CAACg2J,6BAA6B;IAC3C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACzwBH,IAAM5zF,QAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG;AACxD,IAAMC,OAAM,CAAC,WAAW,iBAAiB,GAAG;AAC5C,SAASg2F,gCAAgClkI,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACPihD,YAAA,CAAa,GAAG,CAAC;EACtB;AACF;AACA,SAASkjF,gCAAgCnkI,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC;IACvBlwF,YAAA,CAAa;IACbF,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC,EAAE,GAAG,CAAC;IAC7BlwF,YAAA,CAAa;IACbF,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC;IACvBlwF,YAAA,CAAa;EAClB;AACF;AACA,SAASq1F,gCAAgCpkI,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACPi/H,kBAAA,CAAmB,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;EAC9C;AACF;AACA,SAASoF,4BAA4BrkI,EAAA,EAAIlb,GAAA,EAAK;EAC5C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,MAAM,CAAC;IACzBC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BksB,WAAA,CAAY,cAAcnsB,MAAA,CAAO+1F,OAAO;IACxCt1F,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKV,MAAA,CAAOg2F,UAAA,EAAY,GAAG;EACnD;AACF;AACA,SAASC,4BAA4BxkI,EAAA,EAAIlb,GAAA,EAAK;EAC5C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,MAAM,CAAC;IACzBC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMykI,OAAA,GAAU3/I,GAAA,CAAI2oE,SAAA;IACpB,MAAMlf,MAAA,GAAYC,aAAA,CAAc;IAC7BksB,WAAA,CAAY,cAAcnsB,MAAA,CAAO+1F,OAAO;IACxCt1F,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKV,MAAA,CAAOm2F,YAAA,CAAaD,OAAA,EAASl2F,MAAA,CAAO/6E,IAAI,GAAG,GAAG;EAC3E;AACF;AACA,IAAMmxK,SAAA,GAAY,IAAI3hK,cAAA,CAAe,WAAW;AAEhD,IAAM4hK,mBAAA,GAAsB,IAAI5hK,cAAA,CAAe,qBAAqB;AAMpE,IAAM6hK,WAAA,GAAN,MAAMA,WAAA,CAAW;EACfhyK,YAAiCitC,QAAA,EAAU;IACzC,KAAKA,QAAA,GAAWA,QAAA;EAClB;AAaF;AAXI+kI,WAAA,CAAKznK,IAAA,GAAO,SAAS0nK,mBAAmBrtK,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKotK,WAAA,EAAehmH,iBAAA,CAAqBw+C,WAAW,CAAC;AACnE;AAGAwnE,WAAA,CAAKxoI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMmqK,WAAA;EACNtoI,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;EAClCI,UAAA,EAAY;AACd,CAAC;AAdL,IAAMooI,UAAA,GAANF,WAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOvwK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBonK,UAAA,EAAY,CAAC;IACnFrqK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM2nE,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBnyK,YAAiCitC,QAAA,EAAU;IACzC,KAAKA,QAAA,GAAWA,QAAA;EAClB;AAaF;AAXIklI,iBAAA,CAAK5nK,IAAA,GAAO,SAAS6nK,yBAAyBxtK,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAKutK,iBAAA,EAAqBnmH,iBAAA,CAAqBw+C,WAAW,CAAC;AACzE;AAGA2nE,iBAAA,CAAK3oI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMsqK,iBAAA;EACNzoI,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxCI,UAAA,EAAY;AACd,CAAC;AAdL,IAAMuoI,gBAAA,GAANF,iBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO1wK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBunK,gBAAA,EAAkB,CAAC;IACzFxqK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM8nE,iBAAA,GAAN,MAAMA,iBAAA,CAAiB;EACrBtyK,YAAiCitC,QAAA,EAAU;IACzC,KAAKA,QAAA,GAAWA,QAAA;EAClB;AAaF;AAXIqlI,iBAAA,CAAK/nK,IAAA,GAAO,SAASgoK,yBAAyB3tK,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK0tK,iBAAA,EAAqBtmH,iBAAA,CAAqBw+C,WAAW,CAAC;AACzE;AAGA8nE,iBAAA,CAAK9oI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMyqK,iBAAA;EACN5oI,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxCI,UAAA,EAAY;AACd,CAAC;AAdL,IAAM0oI,gBAAA,GAANF,iBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO7wK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0nK,gBAAA,EAAkB,CAAC;IACzF3qK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMioE,aAAA,GAAN,MAAMA,aAAA,CAAa;EAAA;EAEjB,IAAI9xK,KAAA,EAAO;IACT,OAAO,KAAK+xK,KAAA;EACd;EACA,IAAI/xK,KAAKA,IAAA,EAAM;IACb,KAAKgyK,aAAA,CAAchyK,IAAI;EACzB;EAAA;EAEA,IAAIiyK,OAAA,EAAS;IACX,OAAO,KAAKC,OAAA;EACd;EACA,IAAID,OAAO7xK,KAAA,EAAO;IAChB,IAAIA,KAAA,KAAU,KAAK8xK,OAAA,EAAS;MAC1B,KAAKA,OAAA,GAAU9xK,KAAA;MACf,KAAK+xK,iBAAA,GAAoB;IAC3B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA,IAAIC,UAAA,EAAY;IACd,OAAO,KAAKC,UAAA;EACd;EACA,IAAID,UAAUhyK,KAAA,EAAO;IACnB,IAAIA,KAAA,KAAU,KAAKiyK,UAAA,EAAY;MAC7B,KAAKA,UAAA,GAAajyK,KAAA;MAClB,KAAK+xK,iBAAA,GAAoB;IAC3B;EACF;EACA9yK,YAAYizK,MAAA,EAAQ;IAClB,KAAKA,MAAA,GAASA,MAAA;IACd,KAAKH,iBAAA,GAAoB;IACzB,KAAKD,OAAA,GAAU;IACf,KAAKG,UAAA,GAAa;EACpB;EAAA;EAEAE,iBAAA,EAAmB;IACjB,MAAMA,gBAAA,GAAmB,KAAKJ,iBAAA;IAC9B,KAAKK,kBAAA,CAAmB;IACxB,OAAOD,gBAAA;EACT;EAAA;EAEAC,mBAAA,EAAqB;IACnB,KAAKL,iBAAA,GAAoB;EAC3B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAM,0BAAA,EAA4B;IAC1B,KAAKC,mBAAA,GAAsB,CAAC,cAAc,KAAKC,oBAAoB,EAAE;EACvE;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAX,cAAc5xK,KAAA,EAAO;IAGnB,IAAIA,KAAA,EAAO;MACT,KAAK2xK,KAAA,GAAQ3xK,KAAA;MACb,KAAKuyK,oBAAA,GAAuBvyK,KAAA,CAAMmD,OAAA,CAAQ,iBAAiB,GAAG;MAC9D,KAAKkvK,yBAAA,CAA0B;IACjC;EACF;AAmCF;AAjCIX,aAAA,CAAKloK,IAAA,GAAO,SAASgpK,qBAAqB3uK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK6tK,aAAA,EAAiBzmH,iBAAA,CAAkB8lH,SAAA,EAAW,CAAC,CAAC;AACnE;AAGAW,aAAA,CAAKjpI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4qK,aAAA;EACN/oI,SAAA,EAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;EACpCklB,cAAA,EAAgB,SAAS4kH,4BAA4BrmI,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IACtE,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAUojH,UAAA,EAAY,CAAC;MACtCnjH,cAAA,CAAeD,QAAA,EAAUujH,gBAAA,EAAkB,CAAC;MAC5CtjH,cAAA,CAAeD,QAAA,EAAU0jH,gBAAA,EAAkB,CAAC;IACjD;IACA,IAAIrlI,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIwhJ,IAAA,GAAOzkH,EAAA,CAAGxlD,KAAA;MACxDylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIyhJ,UAAA,GAAa1kH,EAAA,CAAGxlD,KAAA;MAC9DylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI0hJ,UAAA,GAAa3kH,EAAA,CAAGxlD,KAAA;IACnE;EACF;EACAmgC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,gBAAgB,MAAM;IACnD0+F,MAAA,EAAQ,CAAIhmH,UAAA,CAAaC,0BAAA,EAA4B,UAAU,UAAUC,gBAAgB;IACzFimH,SAAA,EAAW,CAAInmH,UAAA,CAAaC,0BAAA,EAA4B,aAAa,aAAaC,gBAAgB;EACpG;EACAhjB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS;IACTC,WAAA,EAAa+4J;EACf,CAAC,CAAC,GAAM1lH,wBAAwB;AAClC,CAAC;AAzGL,IAAM6mH,YAAA,GAANnB,aAAA;AAAA,CA4GC,MAAM;EACL,CAAC,OAAOhxK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8oK,YAAA,EAAc,CAAC;IACrF/rK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS;QACTC,WAAA,EAAak6J;MACf,CAAC;MACD9pI,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACs9J,SAAS;IAClB,GAAG;MACDjqK,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACF3iB,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,cAAc;IACvB,CAAC;IACDo+J,MAAA,EAAQ,CAAC;MACP/qK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDimH,SAAA,EAAW,CAAC;MACVlrK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD2mH,IAAA,EAAM,CAAC;MACL5rK,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAAC09J,UAAU;IACnB,CAAC;IACDwB,UAAA,EAAY,CAAC;MACX7rK,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAAC69J,gBAAgB;IACzB,CAAC;IACDsB,UAAA,EAAY,CAAC;MACX9rK,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACg+J,gBAAgB;IACzB,CAAC;EACH,CAAC;AACH,GAAG;AAEH,IAAMqB,WAAA,GAAN,MAAkB;EAChB7zK,YAAY8zK,SAAA,EAAW9+E,UAAA,EAAY;IACjCA,UAAA,CAAW/pC,aAAA,CAAc9jC,SAAA,CAAUrW,GAAA,CAAI,GAAGgjK,SAAA,CAAUT,mBAAmB;EACzE;AACF;AAEA,IAAMU,cAAA,GAAN,MAAMA,cAAA,SAAsBF,WAAA,CAAY;EACtC7zK,YAAY8zK,SAAA,EAAW9+E,UAAA,EAAY;IACjC,MAAM8+E,SAAA,EAAW9+E,UAAU;EAC7B;AAeF;AAbI++E,cAAA,CAAKxpK,IAAA,GAAO,SAASypK,sBAAsBpvK,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKmvK,cAAA,EAAkB/nH,iBAAA,CAAkB4nH,YAAY,GAAM5nH,iBAAA,CAAqBG,UAAU,CAAC;AACzG;AAGA4nH,cAAA,CAAKvqI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMksK,cAAA;EACNrqI,SAAA,EAAW,CAAC,CAAC,iBAAiB,GAAG,CAAC,MAAM,mBAAmB,EAAE,CAAC;EAC9D47C,SAAA,EAAW,CAAC,QAAQ,gBAAgB,GAAG,iBAAiB;EACxDx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAhBL,IAAM2+E,aAAA,GAANF,cAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOtyK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmpK,aAAA,EAAe,CAAC;IACtFpsK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM+rK;EACR,GAAG;IACD/rK,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,IAAM+nH,cAAA,GAAN,MAAMA,cAAA,SAAsBL,WAAA,CAAY;EACtC7zK,YAAY8zK,SAAA,EAAW9+E,UAAA,EAAY;IACjC,MAAM8+E,SAAA,EAAW9+E,UAAU;IAC3B,MAAM7xB,IAAA,GAAO2wG,SAAA,CAAUb,MAAA,EAAQkB,YAAA,CAAa;IAC5C,IAAIhxG,IAAA,EAAM;MACR6xB,UAAA,CAAW/pC,aAAA,CAAcloC,YAAA,CAAa,QAAQogD,IAAI;IACpD;EACF;AAeF;AAbI+wG,cAAA,CAAK3pK,IAAA,GAAO,SAAS6pK,sBAAsBxvK,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKsvK,cAAA,EAAkBloH,iBAAA,CAAkB4nH,YAAY,GAAM5nH,iBAAA,CAAqBG,UAAU,CAAC;AACzG;AAGA+nH,cAAA,CAAK1qI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMqsK,cAAA;EACNxqI,SAAA,EAAW,CAAC,CAAC,iBAAiB,GAAG,CAAC,MAAM,mBAAmB,EAAE,CAAC;EAC9D47C,SAAA,EAAW,CAAC,GAAG,iBAAiB;EAChCx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AApBL,IAAM++E,aAAA,GAANH,cAAA;AAAA,CAuBC,MAAM;EACL,CAAC,OAAOzyK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBupK,aAAA,EAAe,CAAC;IACtFxsK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM+rK;EACR,GAAG;IACD/rK,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,IAAMmoH,QAAA,GAAN,MAAMA,QAAA,SAAgBT,WAAA,CAAY;EAChC7zK,YAAY8zK,SAAA,EAAW9+E,UAAA,EAAY;IACjC,MAAM8+E,SAAA,EAAW9+E,UAAU;IAC3B,MAAM7xB,IAAA,GAAO2wG,SAAA,CAAUb,MAAA,EAAQkB,YAAA,CAAa;IAC5C,IAAIhxG,IAAA,EAAM;MACR6xB,UAAA,CAAW/pC,aAAA,CAAcloC,YAAA,CAAa,QAAQogD,IAAI;IACpD;EACF;AAeF;AAbImxG,QAAA,CAAK/pK,IAAA,GAAO,SAASgqK,gBAAgB3vK,CAAA,EAAG;EACtC,OAAO,KAAKA,CAAA,IAAK0vK,QAAA,EAAYtoH,iBAAA,CAAkB4nH,YAAY,GAAM5nH,iBAAA,CAAqBG,UAAU,CAAC;AACnG;AAGAmoH,QAAA,CAAK9qI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMysK,QAAA;EACN5qI,SAAA,EAAW,CAAC,CAAC,UAAU,GAAG,CAAC,MAAM,YAAY,EAAE,CAAC;EAChD47C,SAAA,EAAW,CAAC,GAAG,UAAU;EACzBx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AApBL,IAAMk/E,OAAA,GAANF,QAAA;AAAA,CAuBC,MAAM;EACL,CAAC,OAAO7yK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0pK,OAAA,EAAS,CAAC;IAChF3sK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAM+rK;EACR,GAAG;IACD/rK,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMsoH,SAAA,GAAN,MAAgB;EACdz0K,YAAA,EAAc;IACZ,KAAK00K,KAAA,GAAQ,EAAC;IACd,KAAKC,QAAA,GAAW,EAAC;EACnB;AACF;AAEA,IAAMC,0BAAA,GAA6B,IAAIzkK,cAAA,CAAe,4BAA4B;AAQlF,IAAM0kK,yBAAA,GAAN,MAAMA,yBAAA,CAAyB;EAC7B70K,YAAYi+D,OAAA,EAAS;IACnB,KAAKA,OAAA,GAAUA,OAAA;IACf,KAAK62G,gBAAA,GAAmB;IACxB,KAAK9yE,UAAA,GAAa,IAAI9jD,OAAA,CAAQ;EAChC;EAAA;AAAA;AAAA;EAIA62H,SAASC,IAAA,EAAM;IACb,KAAKC,uBAAA,CAAwB;IAC7B,KAAKH,gBAAA,CAAiBJ,KAAA,CAAMtzK,IAAA,CAAK4zK,IAAI;EACvC;EAAA;AAAA;AAAA;AAAA;EAKAE,YAAYF,IAAA,EAAM;IAChB,KAAKC,uBAAA,CAAwB;IAC7B,KAAKH,gBAAA,CAAiBH,QAAA,CAASvzK,IAAA,CAAK4zK,IAAI;EAC1C;EAAA;EAEAlzJ,YAAA,EAAc;IACZ,KAAKkgF,UAAA,CAAWl1F,IAAA,CAAK;IACrB,KAAKk1F,UAAA,CAAWxzF,QAAA,CAAS;EAC3B;EACAymK,wBAAA,EAA0B;IACxB,IAAI,KAAKH,gBAAA,EAAkB;MACzB;IACF;IACA,KAAKA,gBAAA,GAAmB,IAAIL,SAAA,CAAU;IACtC,KAAKU,sBAAA,CAAuB,EAAEvrK,IAAA,CAAKk6C,SAAA,CAAU,KAAKk+C,UAAU,CAAC,EAAEl3D,SAAA,CAAU,MAAM;MAC7E,OAAO,KAAKgqI,gBAAA,CAAiBJ,KAAA,CAAM5yK,MAAA,IAAU,KAAKgzK,gBAAA,CAAiBH,QAAA,CAAS7yK,MAAA,EAAQ;QAClF,MAAMizK,QAAA,GAAW,KAAKD,gBAAA;QAEtB,KAAKA,gBAAA,GAAmB,IAAIL,SAAA,CAAU;QACtC,WAAWO,IAAA,IAAQD,QAAA,CAASL,KAAA,EAAO;UACjCM,IAAA,CAAK;QACP;QACA,WAAWA,IAAA,IAAQD,QAAA,CAASJ,QAAA,EAAU;UACpCK,IAAA,CAAK;QACP;MACF;MACA,KAAKF,gBAAA,GAAmB;IAC1B,CAAC;EACH;EACAK,uBAAA,EAAyB;IAGvB,OAAO,KAAKl3G,OAAA,CAAQsP,QAAA,GAAWtrE,IAAA,CAAK6Q,OAAA,CAAQC,OAAA,CAAQ,MAAS,CAAC,IAAI,KAAKkrD,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKwpC,IAAA,CAAK,CAAC,CAAC;EACtG;AAYF;AAVIyhI,yBAAA,CAAKtqK,IAAA,GAAO,SAAS6qK,iCAAiCxwK,CAAA,EAAG;EACvD,OAAO,KAAKA,CAAA,IAAKiwK,yBAAA,EAA6BpqK,QAAA,CAAYsB,MAAM,CAAC;AACnE;AAGA8oK,yBAAA,CAAKnqK,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO+uK,yBAAA;EACPjqK,OAAA,EAASiqK,yBAAA,CAAyBtqK;AACpC,CAAC;AA5DL,IAAM8qK,wBAAA,GAANR,yBAAA;AAAA,CA+DC,MAAM;EACL,CAAC,OAAOpzK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBuqK,wBAAA,EAA0B,CAAC;IACjGxtK,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAASkE;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMupK,gBAAA,GAAmB;AAKzB,IAAMC,WAAA,GAAN,MAAMA,WAAA,CAAW;EACfv1K,YAAiCitC,QAAA,EAAU27D,QAAA,EAAU;IACnD,KAAK37D,QAAA,GAAWA,QAAA;IAChB,KAAK27D,QAAA,GAAWA,QAAA;EAClB;EACA/gE,YAAYC,OAAA,EAAS;IAGnB,IAAI,CAAC,KAAK0tI,cAAA,EAAgB;MACxB,MAAMC,OAAA,GAAU3tI,OAAA,CAAQ,SAAS,KAAKA,OAAA,CAAQ,SAAS,EAAEi6E,YAAA,IAAgB,EAAC;MAC1E,KAAKyzD,cAAA,GAAiB,KAAK5sE,QAAA,CAASvoF,IAAA,CAAKo1J,OAAO,EAAE/vJ,MAAA,CAAO;MACzD,KAAK8vJ,cAAA,CAAe9rE,IAAA,CAAK+rE,OAAO;IAClC;EACF;EAAA;AAAA;AAAA;AAAA;EAKAC,eAAA,EAAiB;IACf,OAAO,KAAKF,cAAA,CAAe9rE,IAAA,CAAK,KAAK+rE,OAAO;EAC9C;EAAA;EAEAE,oBAAoBC,MAAA,EAAQ;IAC1B,IAAI,gBAAgBC,eAAA,EAAiB;MACnC,OAAOD,MAAA,CAAOlC,UAAA,CAAWzmI,QAAA;IAC3B;IACA,IAAI,gBAAgB6oI,eAAA,EAAiB;MACnC,OAAOF,MAAA,CAAOjC,UAAA,CAAW1mI,QAAA;IAC3B,OAAO;MACL,OAAO2oI,MAAA,CAAOnC,IAAA,CAAKxmI,QAAA;IACrB;EACF;AAYF;AAVIsoI,WAAA,CAAKhrK,IAAA,GAAO,SAASwrK,mBAAmBnxK,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAK2wK,WAAA,EAAevpH,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqBy+C,eAAe,CAAC;AAC7G;AAGA8qE,WAAA,CAAK/rI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0tK,WAAA;EACNn8J,QAAA,EAAU,CAAI2wB,oBAAoB;AACpC,CAAC;AAzCL,IAAMisI,UAAA,GAANT,WAAA;AAAA,CA4CC,MAAM;EACL,CAAC,OAAO9zK,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkrK,UAAA,EAAY,CAAC;IACnFnuK,IAAA,EAAMoiC;EACR,CAAC,GAAG,MAAM,CAAC;IACTpiC,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAAS4iG;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMwrE,gBAAA,GAAN,MAAMA,gBAAA,SAAwBD,UAAA,CAAW;EAAA;EAEvC,IAAIpD,OAAA,EAAS;IACX,OAAO,KAAKC,OAAA;EACd;EACA,IAAID,OAAO7xK,KAAA,EAAO;IAChB,IAAIA,KAAA,KAAU,KAAK8xK,OAAA,EAAS;MAC1B,KAAKA,OAAA,GAAU9xK,KAAA;MACf,KAAK+xK,iBAAA,GAAoB;IAC3B;EACF;EACA9yK,YAAYitC,QAAA,EAAU27D,QAAA,EAAUqqE,MAAA,EAAQ;IACtC,MAAMhmI,QAAA,EAAU27D,QAAQ;IACxB,KAAKqqE,MAAA,GAASA,MAAA;IACd,KAAKH,iBAAA,GAAoB;IACzB,KAAKD,OAAA,GAAU;EACjB;EAAA;EAAA;EAGAhrI,YAAYC,OAAA,EAAS;IACnB,MAAMD,WAAA,CAAYC,OAAO;EAC3B;EAAA;EAEAorI,iBAAA,EAAmB;IACjB,MAAMA,gBAAA,GAAmB,KAAKJ,iBAAA;IAC9B,KAAKK,kBAAA,CAAmB;IACxB,OAAOD,gBAAA;EACT;EAAA;EAEAC,mBAAA,EAAqB;IACnB,KAAKL,iBAAA,GAAoB;EAC3B;AAkBF;AAhBImD,gBAAA,CAAK1rK,IAAA,GAAO,SAAS2rK,wBAAwBtxK,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKqxK,gBAAA,EAAoBjqH,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqBy+C,eAAe,GAAMz+C,iBAAA,CAAkB8lH,SAAA,EAAW,CAAC,CAAC;AACtJ;AAGAmE,gBAAA,CAAKzsI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMouK,gBAAA;EACNvsI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,SAAS;IAC5D0+F,MAAA,EAAQ,CAAIhmH,UAAA,CAAaC,0BAAA,EAA4B,yBAAyB,UAAUC,gBAAgB;EAC1G;EACAhjB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BuoC,0BAAA,EAA+BvrD,oBAAoB;AAChG,CAAC;AA/CL,IAAM8rI,eAAA,GAANI,gBAAA;AAAA,CAkDC,MAAM;EACL,CAAC,OAAOx0K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+qK,eAAA,EAAiB,CAAC;IACxFhuK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVub,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,CAAC;MACDx0B,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAAS4iG;EACX,GAAG;IACD5iG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACs9J,SAAS;IAClB,GAAG;MACDjqK,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACFsvJ,MAAA,EAAQ,CAAC;MACP/qK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAKH,IAAMqpH,gBAAA,GAAN,MAAMA,gBAAA,SAAwBH,UAAA,CAAW;EAAA;EAEvC,IAAIpD,OAAA,EAAS;IACX,OAAO,KAAKC,OAAA;EACd;EACA,IAAID,OAAO7xK,KAAA,EAAO;IAChB,IAAIA,KAAA,KAAU,KAAK8xK,OAAA,EAAS;MAC1B,KAAKA,OAAA,GAAU9xK,KAAA;MACf,KAAK+xK,iBAAA,GAAoB;IAC3B;EACF;EACA9yK,YAAYitC,QAAA,EAAU27D,QAAA,EAAUqqE,MAAA,EAAQ;IACtC,MAAMhmI,QAAA,EAAU27D,QAAQ;IACxB,KAAKqqE,MAAA,GAASA,MAAA;IACd,KAAKH,iBAAA,GAAoB;IACzB,KAAKD,OAAA,GAAU;EACjB;EAAA;EAAA;EAGAhrI,YAAYC,OAAA,EAAS;IACnB,MAAMD,WAAA,CAAYC,OAAO;EAC3B;EAAA;EAEAorI,iBAAA,EAAmB;IACjB,MAAMA,gBAAA,GAAmB,KAAKJ,iBAAA;IAC9B,KAAKK,kBAAA,CAAmB;IACxB,OAAOD,gBAAA;EACT;EAAA;EAEAC,mBAAA,EAAqB;IACnB,KAAKL,iBAAA,GAAoB;EAC3B;AAkBF;AAhBIqD,gBAAA,CAAK5rK,IAAA,GAAO,SAAS6rK,wBAAwBxxK,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKuxK,gBAAA,EAAoBnqH,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqBy+C,eAAe,GAAMz+C,iBAAA,CAAkB8lH,SAAA,EAAW,CAAC,CAAC;AACtJ;AAGAqE,gBAAA,CAAK3sI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMsuK,gBAAA;EACNzsI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,SAAS;IAC5D0+F,MAAA,EAAQ,CAAIhmH,UAAA,CAAaC,0BAAA,EAA4B,yBAAyB,UAAUC,gBAAgB;EAC1G;EACAhjB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2zC,wBAAA,EAA6BuoC,0BAAA,EAA+BvrD,oBAAoB;AAChG,CAAC;AA/CL,IAAM+rI,eAAA,GAANK,gBAAA;AAAA,CAkDC,MAAM;EACL,CAAC,OAAO10K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBgrK,eAAA,EAAiB,CAAC;IACxFjuK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVub,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,CAAC;MACDx0B,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAAS4iG;EACX,GAAG;IACD5iG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACs9J,SAAS;IAClB,GAAG;MACDjqK,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACFsvJ,MAAA,EAAQ,CAAC;MACP/qK,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL8pD,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAMupH,UAAA,GAAN,MAAMA,UAAA,SAAkBL,UAAA,CAAW;EAAA;EAAA;EAGjCh2K,YAAYitC,QAAA,EAAU27D,QAAA,EAAUqqE,MAAA,EAAQ;IACtC,MAAMhmI,QAAA,EAAU27D,QAAQ;IACxB,KAAKqqE,MAAA,GAASA,MAAA;EAChB;AAkBF;AAhBIoD,UAAA,CAAK9rK,IAAA,GAAO,SAAS+rK,kBAAkB1xK,CAAA,EAAG;EACxC,OAAO,KAAKA,CAAA,IAAKyxK,UAAA,EAAcrqH,iBAAA,CAAqBw+C,WAAW,GAAMx+C,iBAAA,CAAqBy+C,eAAe,GAAMz+C,iBAAA,CAAkB8lH,SAAA,EAAW,CAAC,CAAC;AAChJ;AAGAuE,UAAA,CAAK7sI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMwuK,UAAA;EACN3sI,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;EACjCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,SAAS;IAC7DqiG,IAAA,EAAM,CAAI3pH,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,MAAM;EACtD;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAtBL,IAAMkhF,SAAA,GAANH,UAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAO50K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0rK,SAAA,EAAW,CAAC;IAClF3uK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVub,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,GAAG;QACD39D,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,CAAC;MACDx0B,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,GAAG;IACD3iG,IAAA,EAAS4iG;EACX,GAAG;IACD5iG,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACs9J,SAAS;IAClB,GAAG;MACDjqK,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMmzJ,cAAA,GAAN,MAAMA,cAAA,CAAc;EAWlBz2K,YAAY02K,cAAA,EAAgB;IAC1B,KAAKA,cAAA,GAAiBA,cAAA;IACtBD,cAAA,CAAcE,oBAAA,GAAuB;EACvC;EACA70J,YAAA,EAAc;IAGZ,IAAI20J,cAAA,CAAcE,oBAAA,KAAyB,MAAM;MAC/CF,cAAA,CAAcE,oBAAA,GAAuB;IACvC;EACF;AAaF;AAzBIF,cAAA,CAAKE,oBAAA,GAAuB;AAc5BF,cAAA,CAAKlsK,IAAA,GAAO,SAASqsK,sBAAsBhyK,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK6xK,cAAA,EAAkBzqH,iBAAA,CAAqB3kB,gBAAgB,CAAC;AAC3E;AAGAovI,cAAA,CAAKjtI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM4uK,cAAA;EACN/sI,SAAA,EAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;EACrCI,UAAA,EAAY;AACd,CAAC;AAhCL,IAAM+sI,aAAA,GAANJ,cAAA;AAAA,CAmCC,MAAM;EACL,CAAC,OAAOh1K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+rK,aAAA,EAAe,CAAC;IACtFhvK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAEH,IAAMyvI,aAAA,GAAN,MAAMA,aAAA,CAAa,EAyBnB;AAvBIA,aAAA,CAAKvsK,IAAA,GAAO,SAASwsK,qBAAqBnyK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKkyK,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKlqI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMivK,aAAA;EACNptI,SAAA,EAAW,CAAC,CAAC,gBAAgB,GAAG,CAAC,MAAM,kBAAkB,EAAE,CAAC;EAC5D47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,gBAAgB;EAC9Cx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAAS+pI,sBAAsB7pI,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AAvBL,IAAMsyJ,YAAA,GAANH,aAAA;AAAA,CA0BC,MAAM;EACL,CAAC,OAAOr1K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmsK,YAAA,EAAc,CAAC;IACrFpvK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUqoI,gBAAA;MACVp2J,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMK,aAAA,GAAN,MAAMA,aAAA,CAAa,EAyBnB;AAvBIA,aAAA,CAAK3sK,IAAA,GAAO,SAAS4sK,qBAAqBvyK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAKsyK,aAAA,EAAc;AACjC;AAGAA,aAAA,CAAKtqI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMqvK,aAAA;EACNxtI,SAAA,EAAW,CAAC,CAAC,gBAAgB,GAAG,CAAC,MAAM,kBAAkB,EAAE,CAAC;EAC5D47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,gBAAgB;EAC9Cx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAASmqI,sBAAsBjqI,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AAvBL,IAAM0yJ,YAAA,GAANH,aAAA;AAAA,CA0BC,MAAM;EACL,CAAC,OAAOz1K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBusK,YAAA,EAAc,CAAC;IACrFxvK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUqoI,gBAAA;MACVp2J,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMS,OAAA,GAAN,MAAMA,OAAA,CAAO,EAyBb;AAvBIA,OAAA,CAAK/sK,IAAA,GAAO,SAASgtK,eAAe3yK,CAAA,EAAG;EACrC,OAAO,KAAKA,CAAA,IAAK0yK,OAAA,EAAQ;AAC3B;AAGAA,OAAA,CAAK1qI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMyvK,OAAA;EACN5tI,SAAA,EAAW,CAAC,CAAC,SAAS,GAAG,CAAC,MAAM,WAAW,EAAE,CAAC;EAC9C47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,SAAS;EACvCx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAASuqI,gBAAgBrqI,EAAA,EAAIlb,GAAA,EAAK;IAC1C,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AAvBL,IAAM8yJ,MAAA,GAANH,OAAA;AAAA,CA0BC,MAAM;EACL,CAAC,OAAO71K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2sK,MAAA,EAAQ,CAAC;IAC/E5vK,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUqoI,gBAAA;MACVp2J,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMa,aAAA,GAAN,MAAMA,aAAA,CAAa;EACjB13K,YAAY65F,WAAA,EAAa;IACvB,KAAKA,WAAA,GAAcA,WAAA;IACnB,KAAK89E,iBAAA,GAAoB;EAC3B;AAaF;AAXID,aAAA,CAAKntK,IAAA,GAAO,SAASqtK,qBAAqBhzK,CAAA,EAAG;EAC3C,OAAO,KAAKA,CAAA,IAAK8yK,aAAA,EAAiB1rH,iBAAA,CAAqBw+C,WAAW,CAAC;AACrE;AAGAktE,aAAA,CAAKluI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6vK,aAAA;EACNhuI,SAAA,EAAW,CAAC,CAAC,eAAe,gBAAgB,EAAE,CAAC;EAC/CI,UAAA,EAAY;AACd,CAAC;AAfL,IAAM+tI,YAAA,GAANH,aAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOj2K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+sK,YAAA,EAAc,CAAC;IACrFhwK,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAAS2iG;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMstE,iBAAA,GAAoB,CAAC,OAAO,UAAU,QAAQ,OAAO;AAK3D,IAAMC,YAAA,GAAN,MAAmB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAejB/3K,YAAYg4K,kBAAA,EAAoBC,aAAA,EAAepxG,SAAA,EAAWqxG,wBAAA,EAA0BC,UAAA,GAAa,MAAMC,6BAAA,GAAgC,MAAMC,iBAAA,EAAmB;IAC9J,KAAKL,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKC,aAAA,GAAgBA,aAAA;IACrB,KAAKpxG,SAAA,GAAYA,SAAA;IACjB,KAAKqxG,wBAAA,GAA2BA,wBAAA;IAChC,KAAKC,UAAA,GAAaA,UAAA;IAClB,KAAKC,6BAAA,GAAgCA,6BAAA;IACrC,KAAKC,iBAAA,GAAoBA,iBAAA;IACzB,KAAKC,iBAAA,GAAoB,EAAC;IAC1B,KAAKC,cAAA,GAAiB;MACpB,OAAO,GAAGN,aAAa;MACvB,UAAU,GAAGA,aAAa;MAC1B,QAAQ,GAAGA,aAAa;MACxB,SAAS,GAAGA,aAAa;IAC3B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAO,uBAAuBrrC,IAAA,EAAMsrC,gBAAA,EAAkB;IAC7C,MAAMC,eAAA,GAAkB,EAAC;IACzB,WAAWC,GAAA,IAAOxrC,IAAA,EAAM;MAGtB,IAAIwrC,GAAA,CAAIh8J,QAAA,KAAag8J,GAAA,CAAI97J,YAAA,EAAc;QACrC;MACF;MACA67J,eAAA,CAAgBt3K,IAAA,CAAKu3K,GAAG;MACxB,SAASzjJ,CAAA,GAAI,GAAGA,CAAA,GAAIyjJ,GAAA,CAAIvhJ,QAAA,CAASt1B,MAAA,EAAQozB,CAAA,IAAK;QAC5CwjJ,eAAA,CAAgBt3K,IAAA,CAAKu3K,GAAA,CAAIvhJ,QAAA,CAASlC,CAAC,CAAC;MACtC;IACF;IAEA,KAAKgjJ,wBAAA,CAAyBnD,QAAA,CAAS,MAAM;MAC3C,WAAW90J,OAAA,IAAWy4J,eAAA,EAAiB;QACrC,KAAKE,kBAAA,CAAmB34J,OAAA,EAASw4J,gBAAgB;MACnD;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAI,oBAAoB1rC,IAAA,EAAM2rC,iBAAA,EAAmBC,eAAA,EAAiBC,qBAAA,GAAwB,MAAM;IAC1F,IAAI,CAAC7rC,IAAA,CAAKrrI,MAAA,IAAU,CAAC,KAAKq2K,UAAA,IAAc,EAAEW,iBAAA,CAAkBh5I,IAAA,CAAKwB,UAASA,MAAK,KAAKy3I,eAAA,CAAgBj5I,IAAA,CAAKwB,UAASA,MAAK,IAAI;MACzH,IAAI,KAAK+2I,iBAAA,EAAmB;QAC1B,KAAKA,iBAAA,CAAkBY,oBAAA,CAAqB;UAC1CC,KAAA,EAAO;QACT,CAAC;QACD,KAAKb,iBAAA,CAAkBc,uBAAA,CAAwB;UAC7CD,KAAA,EAAO;QACT,CAAC;MACH;MACA;IACF;IAEA,KAAKhB,wBAAA,CAAyBnD,QAAA,CAAS,MAAM;MAC3C,MAAMqE,QAAA,GAAWjsC,IAAA,CAAK,CAAC;MACvB,MAAMksC,QAAA,GAAWD,QAAA,CAAShiJ,QAAA,CAASt1B,MAAA;MACnC,MAAMw3K,UAAA,GAAa,KAAKC,cAAA,CAAeH,QAAA,EAAUJ,qBAAqB;MACtE,MAAMQ,cAAA,GAAiB,KAAKC,8BAAA,CAA+BH,UAAA,EAAYR,iBAAiB;MACxF,MAAMY,YAAA,GAAe,KAAKC,4BAAA,CAA6BL,UAAA,EAAYP,eAAe;MAClF,MAAMa,eAAA,GAAkBd,iBAAA,CAAkBe,WAAA,CAAY,IAAI;MAC1D,MAAMC,cAAA,GAAiBf,eAAA,CAAgBr4K,OAAA,CAAQ,IAAI;MACnD,MAAMwhG,KAAA,GAAQ,KAAKr7B,SAAA,KAAc;MACjC,MAAMk4B,KAAA,GAAQmD,KAAA,GAAQ,UAAU;MAChC,MAAMlD,GAAA,GAAMkD,KAAA,GAAQ,SAAS;MAC7B,WAAWy2E,GAAA,IAAOxrC,IAAA,EAAM;QACtB,SAASj4G,CAAA,GAAI,GAAGA,CAAA,GAAImkJ,QAAA,EAAUnkJ,CAAA,IAAK;UACjC,MAAMu+I,IAAA,GAAOkF,GAAA,CAAIvhJ,QAAA,CAASlC,CAAC;UAC3B,IAAI4jJ,iBAAA,CAAkB5jJ,CAAC,GAAG;YACxB,KAAK6kJ,eAAA,CAAgBtG,IAAA,EAAM10E,KAAA,EAAOy6E,cAAA,CAAetkJ,CAAC,GAAGA,CAAA,KAAM0kJ,eAAe;UAC5E;UACA,IAAIb,eAAA,CAAgB7jJ,CAAC,GAAG;YACtB,KAAK6kJ,eAAA,CAAgBtG,IAAA,EAAMz0E,GAAA,EAAK06E,YAAA,CAAaxkJ,CAAC,GAAGA,CAAA,KAAM4kJ,cAAc;UACvE;QACF;MACF;MACA,IAAI,KAAKzB,iBAAA,EAAmB;QAC1B,KAAKA,iBAAA,CAAkBY,oBAAA,CAAqB;UAC1CC,KAAA,EAAOU,eAAA,KAAoB,KAAK,EAAC,GAAIN,UAAA,CAAW14K,KAAA,CAAM,GAAGg5K,eAAA,GAAkB,CAAC,EAAEz2K,GAAA,CAAI,CAACm1D,KAAA,EAAO73D,KAAA,KAAUq4K,iBAAA,CAAkBr4K,KAAK,IAAI63D,KAAA,GAAQ,IAAI;QAC7I,CAAC;QACD,KAAK+/G,iBAAA,CAAkBc,uBAAA,CAAwB;UAC7CD,KAAA,EAAOY,cAAA,KAAmB,KAAK,EAAC,GAAIR,UAAA,CAAW14K,KAAA,CAAMk5K,cAAc,EAAE32K,GAAA,CAAI,CAACm1D,KAAA,EAAO73D,KAAA,KAAUs4K,eAAA,CAAgBt4K,KAAA,GAAQq5K,cAAc,IAAIxhH,KAAA,GAAQ,IAAI,EAAEt4C,OAAA,CAAQ;QAC7J,CAAC;MACH;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAg6J,UAAUC,WAAA,EAAaC,YAAA,EAAcjrK,QAAA,EAAU;IAE7C,IAAI,CAAC,KAAKkpK,UAAA,EAAY;MACpB;IACF;IAGA,KAAKD,wBAAA,CAAyBnD,QAAA,CAAS,MAAM;MAI3C,MAAM5nC,IAAA,GAAOl+H,QAAA,KAAa,WAAWgrK,WAAA,CAAYr5K,KAAA,CAAM,EAAEof,OAAA,CAAQ,IAAIi6J,WAAA;MACrE,MAAME,MAAA,GAASlrK,QAAA,KAAa,WAAWirK,YAAA,CAAat5K,KAAA,CAAM,EAAEof,OAAA,CAAQ,IAAIk6J,YAAA;MAExE,MAAME,aAAA,GAAgB,EAAC;MACvB,MAAMC,iBAAA,GAAoB,EAAC;MAC3B,MAAMC,eAAA,GAAkB,EAAC;MACzB,SAASC,QAAA,GAAW,GAAGC,YAAA,GAAe,GAAGD,QAAA,GAAWptC,IAAA,CAAKrrI,MAAA,EAAQy4K,QAAA,IAAY;QAC3E,IAAI,CAACJ,MAAA,CAAOI,QAAQ,GAAG;UACrB;QACF;QACAH,aAAA,CAAcG,QAAQ,IAAIC,YAAA;QAC1B,MAAM7B,GAAA,GAAMxrC,IAAA,CAAKotC,QAAQ;QACzBD,eAAA,CAAgBC,QAAQ,IAAI,KAAKvC,kBAAA,GAAqBh2K,KAAA,CAAMC,IAAA,CAAK02K,GAAA,CAAIvhJ,QAAQ,IAAI,CAACuhJ,GAAG;QACrF,MAAMhgH,MAAA,GAASggH,GAAA,CAAI9wF,qBAAA,CAAsB,EAAElvB,MAAA;QAC3C6hH,YAAA,IAAgB7hH,MAAA;QAChB0hH,iBAAA,CAAkBE,QAAQ,IAAI5hH,MAAA;MAChC;MACA,MAAM8hH,gBAAA,GAAmBN,MAAA,CAAON,WAAA,CAAY,IAAI;MAChD,SAASU,QAAA,GAAW,GAAGA,QAAA,GAAWptC,IAAA,CAAKrrI,MAAA,EAAQy4K,QAAA,IAAY;QACzD,IAAI,CAACJ,MAAA,CAAOI,QAAQ,GAAG;UACrB;QACF;QACA,MAAM/zE,MAAA,GAAS4zE,aAAA,CAAcG,QAAQ;QACrC,MAAMG,kBAAA,GAAqBH,QAAA,KAAaE,gBAAA;QACxC,WAAWx6J,OAAA,IAAWq6J,eAAA,CAAgBC,QAAQ,GAAG;UAC/C,KAAKR,eAAA,CAAgB95J,OAAA,EAAShR,QAAA,EAAUu3F,MAAA,EAAQk0E,kBAAkB;QACpE;MACF;MACA,IAAIzrK,QAAA,KAAa,OAAO;QACtB,KAAKopK,iBAAA,EAAmBsC,uBAAA,CAAwB;UAC9CzB,KAAA,EAAOmB,iBAAA;UACPO,OAAA,EAASR,aAAA;UACT/3J,QAAA,EAAUi4J;QACZ,CAAC;MACH,OAAO;QACL,KAAKjC,iBAAA,EAAmBwC,uBAAA,CAAwB;UAC9C3B,KAAA,EAAOmB,iBAAA;UACPO,OAAA,EAASR,aAAA;UACT/3J,QAAA,EAAUi4J;QACZ,CAAC;MACH;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAQ,4BAA4BC,YAAA,EAAcb,YAAA,EAAc;IACtD,IAAI,CAAC,KAAKlC,kBAAA,EAAoB;MAC5B;IACF;IAEA,KAAKE,wBAAA,CAAyBnD,QAAA,CAAS,MAAM;MAC3C,MAAMiG,KAAA,GAAQD,YAAA,CAAan9J,aAAA,CAAc,OAAO;MAChD,IAAIo9J,KAAA,EAAO;QACT,IAAId,YAAA,CAAap6I,IAAA,CAAKwB,UAAS,CAACA,MAAK,GAAG;UACtC,KAAKs3I,kBAAA,CAAmBoC,KAAA,EAAO,CAAC,QAAQ,CAAC;QAC3C,OAAO;UACL,KAAKjB,eAAA,CAAgBiB,KAAA,EAAO,UAAU,GAAG,KAAK;QAChD;MACF;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMApC,mBAAmB34J,OAAA,EAASw4J,gBAAA,EAAkB;IAC5C,WAAWpgH,GAAA,IAAOogH,gBAAA,EAAkB;MAClCx4J,OAAA,CAAQuB,KAAA,CAAM62C,GAAG,IAAI;MACrBp4C,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO,KAAKunK,cAAA,CAAelgH,GAAG,CAAC;IACnD;IAKA,MAAM4iH,YAAA,GAAenD,iBAAA,CAAkBh4I,IAAA,CAAKu4B,GAAA,IAAOogH,gBAAA,CAAiB/3K,OAAA,CAAQ23D,GAAG,MAAM,MAAMp4C,OAAA,CAAQuB,KAAA,CAAM62C,GAAG,CAAC;IAC7G,IAAI4iH,YAAA,EAAc;MAChBh7J,OAAA,CAAQuB,KAAA,CAAM05J,MAAA,GAAS,KAAKC,oBAAA,CAAqBl7J,OAAO;IAC1D,OAAO;MAELA,OAAA,CAAQuB,KAAA,CAAM05J,MAAA,GAAS;MACvB,IAAI,KAAK9C,6BAAA,EAA+B;QACtCn4J,OAAA,CAAQuB,KAAA,CAAMvS,QAAA,GAAW;MAC3B;MACAgR,OAAA,CAAQkH,SAAA,CAAUnW,MAAA,CAAO,KAAKinK,aAAa;IAC7C;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA8B,gBAAgB95J,OAAA,EAASo4C,GAAA,EAAK+iH,QAAA,EAAUC,eAAA,EAAiB;IACvDp7J,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI,KAAKmnK,aAAa;IACxC,IAAIoD,eAAA,EAAiB;MACnBp7J,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI,KAAKynK,cAAA,CAAelgH,GAAG,CAAC;IAChD;IACAp4C,OAAA,CAAQuB,KAAA,CAAM62C,GAAG,IAAI,GAAG+iH,QAAQ;IAChCn7J,OAAA,CAAQuB,KAAA,CAAM05J,MAAA,GAAS,KAAKC,oBAAA,CAAqBl7J,OAAO;IACxD,IAAI,KAAKm4J,6BAAA,EAA+B;MACtCn4J,OAAA,CAAQuB,KAAA,CAAM85J,OAAA,IAAW;IAC3B;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYAH,qBAAqBl7J,OAAA,EAAS;IAC5B,MAAMs7J,gBAAA,GAAmB;MACvBrzF,GAAA,EAAK;MACLoD,MAAA,EAAQ;MACRrD,IAAA,EAAM;MACNmD,KAAA,EAAO;IACT;IACA,IAAI8vF,MAAA,GAAS;IAIb,WAAW7iH,GAAA,IAAOy/G,iBAAA,EAAmB;MACnC,IAAI73J,OAAA,CAAQuB,KAAA,CAAM62C,GAAG,GAAG;QACtB6iH,MAAA,IAAUK,gBAAA,CAAiBljH,GAAG;MAChC;IACF;IACA,OAAO6iH,MAAA,GAAS,GAAGA,MAAM,KAAK;EAChC;EAAA;EAEA3B,eAAeZ,GAAA,EAAKK,qBAAA,GAAwB,MAAM;IAChD,IAAI,CAACA,qBAAA,IAAyB,KAAKV,iBAAA,CAAkBx2K,MAAA,EAAQ;MAC3D,OAAO,KAAKw2K,iBAAA;IACd;IACA,MAAMgB,UAAA,GAAa,EAAC;IACpB,MAAMkC,aAAA,GAAgB7C,GAAA,CAAIvhJ,QAAA;IAC1B,SAASlC,CAAA,GAAI,GAAGA,CAAA,GAAIsmJ,aAAA,CAAc15K,MAAA,EAAQozB,CAAA,IAAK;MAC7C,IAAIu+I,IAAA,GAAO+H,aAAA,CAActmJ,CAAC;MAC1BokJ,UAAA,CAAWl4K,IAAA,CAAKqyK,IAAA,CAAK5rF,qBAAA,CAAsB,EAAEvvB,KAAK;IACpD;IACA,KAAKggH,iBAAA,GAAoBgB,UAAA;IACzB,OAAOA,UAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAG,+BAA+BgC,MAAA,EAAQvB,YAAA,EAAc;IACnD,MAAMnhE,SAAA,GAAY,EAAC;IACnB,IAAI2iE,YAAA,GAAe;IACnB,SAASxmJ,CAAA,GAAI,GAAGA,CAAA,GAAIumJ,MAAA,CAAO35K,MAAA,EAAQozB,CAAA,IAAK;MACtC,IAAIglJ,YAAA,CAAahlJ,CAAC,GAAG;QACnB6jF,SAAA,CAAU7jF,CAAC,IAAIwmJ,YAAA;QACfA,YAAA,IAAgBD,MAAA,CAAOvmJ,CAAC;MAC1B;IACF;IACA,OAAO6jF,SAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA4gE,6BAA6B8B,MAAA,EAAQvB,YAAA,EAAc;IACjD,MAAMnhE,SAAA,GAAY,EAAC;IACnB,IAAI2iE,YAAA,GAAe;IACnB,SAASxmJ,CAAA,GAAIumJ,MAAA,CAAO35K,MAAA,EAAQozB,CAAA,GAAI,GAAGA,CAAA,IAAK;MACtC,IAAIglJ,YAAA,CAAahlJ,CAAC,GAAG;QACnB6jF,SAAA,CAAU7jF,CAAC,IAAIwmJ,YAAA;QACfA,YAAA,IAAgBD,MAAA,CAAOvmJ,CAAC;MAC1B;IACF;IACA,OAAO6jF,SAAA;EACT;AACF;AAOA,SAAS4iE,2BAA2Br2J,EAAA,EAAI;EACtC,OAAOhiB,KAAA,CAAM,kCAAkCgiB,EAAE,IAAI;AACvD;AAKA,SAASs2J,iCAAiCj7K,IAAA,EAAM;EAC9C,OAAO2C,KAAA,CAAM,+CAA+C3C,IAAI,IAAI;AACtE;AAKA,SAASk7K,oCAAA,EAAsC;EAC7C,OAAOv4K,KAAA,CAAM,sEAAsE;AACrF;AAKA,SAASw4K,mCAAmCxoK,IAAA,EAAM;EAChD,OAAOhQ,KAAA,CAAM,sEAA2EoE,IAAA,CAAKC,SAAA,CAAU2L,IAAI,CAAC,EAAE;AAChH;AAKA,SAASyoK,4BAAA,EAA8B;EACrC,OAAOz4K,KAAA,CAAM,qGAA0G;AACzH;AAKA,SAAS04K,+BAAA,EAAiC;EACxC,OAAO14K,KAAA,CAAM,wEAAwE;AACvF;AAKA,SAAS24K,0CAAA,EAA4C;EACnD,OAAO34K,KAAA,CAAM,6DAA6D;AAC5E;AAKA,SAAS44K,mCAAA,EAAqC;EAC5C,OAAO54K,KAAA,CAAM,qCAAqC;AACpD;AAGA,IAAM64K,2BAAA,GAA8B,IAAIhsK,cAAA,CAAe,SAAS;AAMhE,IAAMisK,eAAA,GAAN,MAAMA,eAAA,CAAe,EAiBrB;AAfIA,eAAA,CAAK7xK,IAAA,GAAO,SAAS8xK,uBAAuBz3K,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKw3K,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAK5yI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMu0K,eAAA;EACN1yI,SAAA,EAAW,CAAC,CAAC,aAAa,eAAe,EAAE,GAAG,CAAC,SAAS,aAAa,IAAI,eAAe,EAAE,CAAC;EAC3FI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq/E,uBAAA;IACTj/E,QAAA,EAAUqgF;EACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAfL,IAAMoiF,cAAA,GAANF,eAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAO36K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwxK,cAAA,EAAgB,CAAC;IACvFz0K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq/E,uBAAA;QACTj/E,QAAA,EAAUqgF;MACZ,CAAC;MACDpwD,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMyyI,cAAA,GAAN,MAAMA,cAAA,CAAc;EAClBv8K,YAAY8tG,aAAA,EAAe9Y,UAAA,EAAY;IACrC,KAAK8Y,aAAA,GAAgBA,aAAA;IACrB,KAAK9Y,UAAA,GAAaA,UAAA;IAClB,MAAMwnF,KAAA,GAAQhxK,MAAA,CAAOsmK,SAAS;IAC9B0K,KAAA,CAAMC,UAAA,GAAa;IACnBD,KAAA,CAAME,eAAA,CAAgB;EACxB;AAaF;AAXIH,cAAA,CAAKhyK,IAAA,GAAO,SAASoyK,sBAAsB/3K,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK23K,cAAA,EAAkBvwH,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBG,UAAU,CAAC;AAChH;AAGAowH,cAAA,CAAK/yI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM00K,cAAA;EACN7yI,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;EACjCI,UAAA,EAAY;AACd,CAAC;AAlBL,IAAM8yI,aAAA,GAANL,cAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAO96K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8xK,aAAA,EAAe,CAAC;IACtF/0K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM0wH,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpB78K,YAAY8tG,aAAA,EAAe9Y,UAAA,EAAY;IACrC,KAAK8Y,aAAA,GAAgBA,aAAA;IACrB,KAAK9Y,UAAA,GAAaA,UAAA;IAClB,MAAMwnF,KAAA,GAAQhxK,MAAA,CAAOsmK,SAAS;IAC9B0K,KAAA,CAAMM,gBAAA,GAAmB;IACzBN,KAAA,CAAME,eAAA,CAAgB;EACxB;AAaF;AAXIG,gBAAA,CAAKtyK,IAAA,GAAO,SAASwyK,wBAAwBn4K,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKi4K,gBAAA,EAAoB7wH,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBG,UAAU,CAAC;AAClH;AAGA0wH,gBAAA,CAAKrzI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMg1K,gBAAA;EACNnzI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCI,UAAA,EAAY;AACd,CAAC;AAlBL,IAAMkzI,eAAA,GAANH,gBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAOp7K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBkyK,eAAA,EAAiB,CAAC;IACxFn1K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM8wH,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBj9K,YAAY8tG,aAAA,EAAe9Y,UAAA,EAAY;IACrC,KAAK8Y,aAAA,GAAgBA,aAAA;IACrB,KAAK9Y,UAAA,GAAaA,UAAA;IAClB,MAAMwnF,KAAA,GAAQhxK,MAAA,CAAOsmK,SAAS;IAC9B0K,KAAA,CAAMU,gBAAA,GAAmB;IACzBV,KAAA,CAAME,eAAA,CAAgB;EACxB;AAaF;AAXIO,gBAAA,CAAK1yK,IAAA,GAAO,SAAS4yK,wBAAwBv4K,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKq4K,gBAAA,EAAoBjxH,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBG,UAAU,CAAC;AAClH;AAGA8wH,gBAAA,CAAKzzI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMo1K,gBAAA;EACNvzI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCI,UAAA,EAAY;AACd,CAAC;AAlBL,IAAMszI,eAAA,GAANH,gBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAOx7K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBsyK,eAAA,EAAiB,CAAC;IACxFv1K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMkxH,gBAAA,GAAN,MAAMA,gBAAA,CAAgB;EACpBr9K,YAAY8tG,aAAA,EAAe9Y,UAAA,EAAY;IACrC,KAAK8Y,aAAA,GAAgBA,aAAA;IACrB,KAAK9Y,UAAA,GAAaA,UAAA;IAClB,MAAMwnF,KAAA,GAAQhxK,MAAA,CAAOsmK,SAAS;IAC9B0K,KAAA,CAAMc,gBAAA,GAAmB;IACzBd,KAAA,CAAME,eAAA,CAAgB;EACxB;AAaF;AAXIW,gBAAA,CAAK9yK,IAAA,GAAO,SAASgzK,wBAAwB34K,CAAA,EAAG;EAC9C,OAAO,KAAKA,CAAA,IAAKy4K,gBAAA,EAAoBrxH,iBAAA,CAAqB3kB,gBAAgB,GAAM2kB,iBAAA,CAAqBG,UAAU,CAAC;AAClH;AAGAkxH,gBAAA,CAAK7zI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMw1K,gBAAA;EACN3zI,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCI,UAAA,EAAY;AACd,CAAC;AAlBL,IAAM0zI,eAAA,GAANH,gBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAO57K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0yK,eAAA,EAAiB,CAAC;IACxF31K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTjiC,IAAA,EAASw/B;EACX,GAAG;IACDx/B,IAAA,EAASskD;EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMsxH,kBAAA;AAAA;AAAA;AAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA,IAAMC,SAAA,GAAN,MAAMA,SAAA,CAAS;EAAA;EAEbvJ,aAAA,EAAe;IACb,IAAI,KAAKwJ,iBAAA,KAAsB,QAAW;MAExC,MAAMx6G,IAAA,GAAO,KAAKnF,WAAA,CAAY/S,aAAA,CAAcptC,YAAA,CAAa,MAAM;MAC/D,MAAM+/J,QAAA,GAAWz6G,IAAA,KAAS,UAAUA,IAAA,KAAS,aAAa,aAAa;MACvE,KAAKw6G,iBAAA,GAAoB,KAAK3F,kBAAA,IAAsB4F,QAAA,KAAa,SAAS,OAAOA,QAAA;IACnF;IACA,OAAO,KAAKD,iBAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIE,QAAA,EAAU;IACZ,OAAO,KAAKC,UAAA;EACd;EACA,IAAID,QAAQx6K,EAAA,EAAI;IACd,KAAK,OAAO5B,SAAA,KAAc,eAAeA,SAAA,KAAc4B,EAAA,IAAM,QAAQ,OAAOA,EAAA,KAAO,YAAY;MAC7FotB,OAAA,CAAQhf,IAAA,CAAK,4CAA4C/J,IAAA,CAAKC,SAAA,CAAUtE,EAAE,CAAC,GAAG;IAChF;IACA,KAAKy6K,UAAA,GAAaz6K,EAAA;EACpB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAqBA,IAAI06K,WAAA,EAAa;IACf,OAAO,KAAKC,WAAA;EACd;EACA,IAAID,WAAWA,UAAA,EAAY;IACzB,IAAI,KAAKC,WAAA,KAAgBD,UAAA,EAAY;MACnC,KAAKE,iBAAA,CAAkBF,UAAU;IACnC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOA,IAAIG,sBAAA,EAAwB;IAC1B,OAAO,KAAKC,sBAAA;EACd;EACA,IAAID,sBAAsBn9K,KAAA,EAAO;IAC/B,KAAKo9K,sBAAA,GAAyBp9K,KAAA;IAG9B,IAAI,KAAK07K,UAAA,IAAc,KAAKA,UAAA,CAAW3uE,aAAA,CAAchsG,MAAA,EAAQ;MAC3D,KAAKs8K,oBAAA,CAAqB;MAC1B,KAAKC,wBAAA,CAAyB;IAChC;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIC,YAAA,EAAc;IAChB,OAAO,KAAKC,YAAA;EACd;EACA,IAAID,YAAYv9K,KAAA,EAAO;IACrB,KAAKw9K,YAAA,GAAex9K,KAAA;IAEpB,KAAKy9K,2BAAA,GAA8B;IACnC,KAAKC,4BAAA,GAA+B;EACtC;EACAz+K,YAAY4oG,QAAA,EAAU7Z,kBAAA,EAAoB/wB,WAAA,EAAamF,IAAA,EAAMuX,IAAA,EAAM7uD,YAAWmzC,SAAA,EAAW0pC,aAAA,EAAewvE,wBAAA,EAA0B3oE,cAAA,EAKlImvE,0BAAA,EAKAzgH,OAAA,EAAS;IACP,KAAK2qC,QAAA,GAAWA,QAAA;IAChB,KAAK7Z,kBAAA,GAAqBA,kBAAA;IAC1B,KAAK/wB,WAAA,GAAcA,WAAA;IACnB,KAAK0c,IAAA,GAAOA,IAAA;IACZ,KAAK1b,SAAA,GAAYA,SAAA;IACjB,KAAK0pC,aAAA,GAAgBA,aAAA;IACrB,KAAKwvE,wBAAA,GAA2BA,wBAAA;IAChC,KAAK3oE,cAAA,GAAiBA,cAAA;IACtB,KAAKmvE,0BAAA,GAA6BA,0BAAA;IAClC,KAAKzgH,OAAA,GAAUA,OAAA;IAEf,KAAK0gH,UAAA,GAAa,IAAIzgI,OAAA,CAAQ;IAM9B,KAAK0gI,iBAAA,GAAoB,mBAAIz+K,GAAA,CAAI;IAMjC,KAAK0+K,iBAAA,GAAoB,mBAAIjtK,GAAA,CAAI;IAMjC,KAAKktK,cAAA,GAAiB,mBAAIltK,GAAA,CAAI;IAM9B,KAAKmtK,oBAAA,GAAuB,mBAAIntK,GAAA,CAAI;IAMpC,KAAKotK,oBAAA,GAAuB,mBAAIptK,GAAA,CAAI;IAKpC,KAAKqtK,oBAAA,GAAuB;IAK5B,KAAKC,oBAAA,GAAuB;IAK5B,KAAKT,4BAAA,GAA+B;IAMpC,KAAKD,2BAAA,GAA8B;IAcnC,KAAKW,oBAAA,GAAuB,mBAAIh/K,GAAA,CAAI;IAKpC,KAAKi/K,cAAA,GAAiB;IAMtB,KAAKC,4BAAA,GAA+B;IAEpC,KAAKC,mBAAA,GAAsB;IAE3B,KAAKC,cAAA,GAAiB;IAEtB,KAAKC,eAAA,GAAkB;IACvB,KAAK7B,iBAAA,GAAoB;IACzB,KAAKQ,sBAAA,GAAyB;IAC9B,KAAKI,YAAA,GAAe;IAKpB,KAAKkB,cAAA,GAAiB,IAAI14I,YAAA,CAAa;IASvC,KAAK8hE,UAAA,GAAa,IAAIpkE,eAAA,CAAgB;MACpCs6D,KAAA,EAAO;MACPC,GAAA,EAAKtjC,MAAA,CAAOgkH;IACd,CAAC;IACD,IAAI,CAACv8G,IAAA,EAAM;MACTnF,WAAA,CAAY/S,aAAA,CAAcloC,YAAA,CAAa,QAAQ,OAAO;IACxD;IACA,KAAK8I,SAAA,GAAYA;IACjB,KAAK2oI,SAAA,GAAY,CAACx1F,SAAA,CAAUhJ,SAAA;IAC5B,KAAKgiH,kBAAA,GAAqBh6G,WAAA,CAAY/S,aAAA,CAAc+e,QAAA,KAAa;EACnE;EACA3hC,SAAA,EAAW;IACT,KAAKs3I,kBAAA,CAAmB;IAIxB,KAAKC,WAAA,GAAc,KAAKh3E,QAAA,CAASvoF,IAAA,CAAK,EAAE,EAAEqF,MAAA,CAAO,CAACm6J,EAAA,EAAIC,OAAA,KAAY;MAChE,OAAO,KAAKjC,OAAA,GAAU,KAAKA,OAAA,CAAQiC,OAAA,CAAQC,SAAA,EAAWD,OAAA,CAAQxsK,IAAI,IAAIwsK,OAAA;IACxE,CAAC;IACD,KAAKvwE,cAAA,CAAexpC,MAAA,CAAO,EAAEn8D,IAAA,CAAKk6C,SAAA,CAAU,KAAK66H,UAAU,CAAC,EAAE7zI,SAAA,CAAU,MAAM;MAC5E,KAAK0zI,2BAAA,GAA8B;IACrC,CAAC;EACH;EACA1wH,mBAAA,EAAqB;IACnB,KAAK0xH,eAAA,GAAkB;EACzB;EACAxhD,sBAAA,EAAwB;IAEtB,IAAI,KAAKgiD,UAAA,CAAW,GAAG;MACrB,KAAKC,OAAA,CAAQ;IACf;EACF;EACAn+J,YAAA,EAAc;IACZ,CAAC,KAAK26J,UAAA,EAAY3uE,aAAA,EAAe,KAAKgvE,gBAAA,EAAkBhvE,aAAA,EAAe,KAAKovE,gBAAA,EAAkBpvE,aAAA,EAAe,KAAKqxE,oBAAA,EAAsB,KAAKN,iBAAA,EAAmB,KAAKC,cAAA,EAAgB,KAAKC,oBAAA,EAAsB,KAAKC,oBAAA,EAAsB,KAAKJ,iBAAiB,EAAEr+K,OAAA,CAAQ2/K,GAAA,IAAO;MAChRA,GAAA,EAAKn+J,KAAA,CAAM;IACb,CAAC;IACD,KAAKo+J,cAAA,GAAiB,EAAC;IACvB,KAAKC,cAAA,GAAiB,EAAC;IACvB,KAAKC,cAAA,GAAiB;IACtB,KAAK1B,UAAA,CAAW7xK,IAAA,CAAK;IACrB,KAAK6xK,UAAA,CAAWnwK,QAAA,CAAS;IACzB,IAAIiqF,YAAA,CAAa,KAAKslF,UAAU,GAAG;MACjC,KAAKA,UAAA,CAAW1gH,UAAA,CAAW,IAAI;IACjC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWAijH,WAAA,EAAa;IACX,KAAKC,WAAA,GAAc,KAAKC,iBAAA,CAAkB;IAC1C,MAAM14I,OAAA,GAAU,KAAK83I,WAAA,CAAYl2E,IAAA,CAAK,KAAK62E,WAAW;IACtD,IAAI,CAACz4I,OAAA,EAAS;MACZ,KAAK24I,gBAAA,CAAiB;MACtB,KAAKhB,cAAA,CAAe3yK,IAAA,CAAK;MACzB;IACF;IACA,MAAMghG,aAAA,GAAgB,KAAK2uE,UAAA,CAAW3uE,aAAA;IACtC,KAAKpF,aAAA,CAAc1P,YAAA,CAAalxD,OAAA,EAASgmE,aAAA,EAAe,CAAC5xC,MAAA,EAAQguC,sBAAA,EAAwB3Q,YAAA,KAAiB,KAAK4Q,oBAAA,CAAqBjuC,MAAA,CAAO3oB,IAAA,EAAMgmD,YAAY,GAAGr9B,MAAA,IAAUA,MAAA,CAAO3oB,IAAA,CAAKjgC,IAAA,EAAMyyD,MAAA,IAAU;MACpM,IAAIA,MAAA,CAAO0zB,SAAA,KAAcZ,sBAAA,CAAuBiB,QAAA,IAAY/zB,MAAA,CAAO3+D,OAAA,EAAS;QAC1E,KAAKs5K,0BAAA,CAA2B36G,MAAA,CAAO7J,MAAA,CAAO3oB,IAAA,CAAKotI,MAAA,EAAQ56G,MAAA,CAAO3+D,OAAO;MAC3E;IACF,CAAC;IAED,KAAKw5K,sBAAA,CAAuB;IAG5B94I,OAAA,CAAQsiE,qBAAA,CAAsBluC,MAAA,IAAU;MACtC,MAAM2kH,OAAA,GAAU/yE,aAAA,CAAc3sG,GAAA,CAAI+6D,MAAA,CAAOq9B,YAAY;MACrDsnF,OAAA,CAAQz5K,OAAA,CAAQwzF,SAAA,GAAY1+B,MAAA,CAAO3oB,IAAA,CAAKjgC,IAAA;IAC1C,CAAC;IACD,KAAKmtK,gBAAA,CAAiB;IAGtB,IAAI,KAAKxiH,OAAA,IAAWlyD,MAAA,CAAO28C,eAAA,CAAgB,GAAG;MAC5C,KAAKuV,OAAA,CAAQuP,QAAA,CAAS5jE,IAAA,CAAKwpC,IAAA,CAAK,CAAC,GAAG0Q,SAAA,CAAU,KAAK66H,UAAU,CAAC,EAAE7zI,SAAA,CAAU,MAAM;QAC9E,KAAKuzI,wBAAA,CAAyB;MAChC,CAAC;IACH,OAAO;MACL,KAAKA,wBAAA,CAAyB;IAChC;IACA,KAAKoB,cAAA,CAAe3yK,IAAA,CAAK;EAC3B;EAAA;EAEAg0K,aAAahN,SAAA,EAAW;IACtB,KAAK+K,iBAAA,CAAkB/tK,GAAA,CAAIgjK,SAAS;EACtC;EAAA;EAEAiN,gBAAgBjN,SAAA,EAAW;IACzB,KAAK+K,iBAAA,CAAkBv8K,MAAA,CAAOwxK,SAAS;EACzC;EAAA;EAEAkN,UAAUL,MAAA,EAAQ;IAChB,KAAK7B,cAAA,CAAehuK,GAAA,CAAI6vK,MAAM;EAChC;EAAA;EAEAM,aAAaN,MAAA,EAAQ;IACnB,KAAK7B,cAAA,CAAex8K,MAAA,CAAOq+K,MAAM;EACnC;EAAA;EAEAO,gBAAgBC,YAAA,EAAc;IAC5B,KAAKpC,oBAAA,CAAqBjuK,GAAA,CAAIqwK,YAAY;IAC1C,KAAKlC,oBAAA,GAAuB;EAC9B;EAAA;EAEAmC,mBAAmBD,YAAA,EAAc;IAC/B,KAAKpC,oBAAA,CAAqBz8K,MAAA,CAAO6+K,YAAY;IAC7C,KAAKlC,oBAAA,GAAuB;EAC9B;EAAA;EAEAoC,gBAAgBC,YAAA,EAAc;IAC5B,KAAKtC,oBAAA,CAAqBluK,GAAA,CAAIwwK,YAAY;IAC1C,KAAKpC,oBAAA,GAAuB;EAC9B;EAAA;EAEAqC,mBAAmBD,YAAA,EAAc;IAC/B,KAAKtC,oBAAA,CAAqB18K,MAAA,CAAOg/K,YAAY;IAC7C,KAAKpC,oBAAA,GAAuB;EAC9B;EAAA;EAEAsC,aAAaC,SAAA,EAAW;IACtB,KAAKC,gBAAA,GAAmBD,SAAA;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAE,4BAAA,EAA8B;IAC5B,MAAMC,UAAA,GAAa,KAAKC,gBAAA,CAAiB,KAAK/E,gBAAgB;IAI9D,IAAI,KAAK9E,kBAAA,EAAoB;MAC3B,MAAM8J,KAAA,GAAQC,mBAAA,CAAoB,KAAKjF,gBAAA,EAAkB,OAAO;MAChE,IAAIgF,KAAA,EAAO;QACTA,KAAA,CAAMtgK,KAAA,CAAMu8D,OAAA,GAAU6jG,UAAA,CAAW9/K,MAAA,GAAS,KAAK;MACjD;IACF;IACA,MAAMo4K,YAAA,GAAe,KAAKiG,cAAA,CAAeh9K,GAAA,CAAI+8K,GAAA,IAAOA,GAAA,CAAItN,MAAM;IAC9D,KAAKoP,aAAA,CAAcxJ,sBAAA,CAAuBoJ,UAAA,EAAY,CAAC,KAAK,CAAC;IAC7D,KAAKI,aAAA,CAAchI,SAAA,CAAU4H,UAAA,EAAY1H,YAAA,EAAc,KAAK;IAE5D,KAAKiG,cAAA,CAAe5/K,OAAA,CAAQ2/K,GAAA,IAAOA,GAAA,CAAI/M,kBAAA,CAAmB,CAAC;EAC7D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA8O,4BAAA,EAA8B;IAC5B,MAAMC,UAAA,GAAa,KAAKL,gBAAA,CAAiB,KAAK3E,gBAAgB;IAI9D,IAAI,KAAKlF,kBAAA,EAAoB;MAC3B,MAAMgD,KAAA,GAAQ+G,mBAAA,CAAoB,KAAK7E,gBAAA,EAAkB,OAAO;MAChE,IAAIlC,KAAA,EAAO;QACTA,KAAA,CAAMx5J,KAAA,CAAMu8D,OAAA,GAAUmkG,UAAA,CAAWpgL,MAAA,GAAS,KAAK;MACjD;IACF;IACA,MAAMo4K,YAAA,GAAe,KAAKkG,cAAA,CAAej9K,GAAA,CAAI+8K,GAAA,IAAOA,GAAA,CAAItN,MAAM;IAC9D,KAAKoP,aAAA,CAAcxJ,sBAAA,CAAuB0J,UAAA,EAAY,CAAC,QAAQ,CAAC;IAChE,KAAKF,aAAA,CAAchI,SAAA,CAAUkI,UAAA,EAAYhI,YAAA,EAAc,QAAQ;IAC/D,KAAK8H,aAAA,CAAclH,2BAAA,CAA4B,KAAK98G,WAAA,CAAY/S,aAAA,EAAeivH,YAAY;IAE3F,KAAKkG,cAAA,CAAe7/K,OAAA,CAAQ2/K,GAAA,IAAOA,GAAA,CAAI/M,kBAAA,CAAmB,CAAC;EAC7D;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAkL,yBAAA,EAA2B;IACzB,MAAMuD,UAAA,GAAa,KAAKC,gBAAA,CAAiB,KAAK/E,gBAAgB;IAC9D,MAAMqF,QAAA,GAAW,KAAKN,gBAAA,CAAiB,KAAKpF,UAAU;IACtD,MAAMyF,UAAA,GAAa,KAAKL,gBAAA,CAAiB,KAAK3E,gBAAgB;IAK9D,IAAI,KAAKlF,kBAAA,IAAsB,CAAC,KAAKuG,YAAA,IAAgB,KAAKE,4BAAA,EAA8B;MAGtF,KAAKuD,aAAA,CAAcxJ,sBAAA,CAAuB,CAAC,GAAGoJ,UAAA,EAAY,GAAGO,QAAA,EAAU,GAAGD,UAAU,GAAG,CAAC,QAAQ,OAAO,CAAC;MACxG,KAAKzD,4BAAA,GAA+B;IACtC;IAEAmD,UAAA,CAAWrhL,OAAA,CAAQ,CAAC6hL,SAAA,EAAWltJ,CAAA,KAAM;MACnC,KAAKmtJ,sBAAA,CAAuB,CAACD,SAAS,GAAG,KAAKjC,cAAA,CAAejrJ,CAAC,CAAC;IACjE,CAAC;IAED,KAAKotJ,QAAA,CAAS/hL,OAAA,CAAQogL,MAAA,IAAU;MAE9B,MAAMxzC,IAAA,GAAO,EAAC;MACd,SAASj4G,CAAA,GAAI,GAAGA,CAAA,GAAIitJ,QAAA,CAASrgL,MAAA,EAAQozB,CAAA,IAAK;QACxC,IAAI,KAAKqrJ,WAAA,CAAYrrJ,CAAC,EAAEyrJ,MAAA,KAAWA,MAAA,EAAQ;UACzCxzC,IAAA,CAAK/rI,IAAA,CAAK+gL,QAAA,CAASjtJ,CAAC,CAAC;QACvB;MACF;MACA,KAAKmtJ,sBAAA,CAAuBl1C,IAAA,EAAMwzC,MAAM;IAC1C,CAAC;IAEDuB,UAAA,CAAW3hL,OAAA,CAAQ,CAACgiL,SAAA,EAAWrtJ,CAAA,KAAM;MACnC,KAAKmtJ,sBAAA,CAAuB,CAACE,SAAS,GAAG,KAAKnC,cAAA,CAAelrJ,CAAC,CAAC;IACjE,CAAC;IAEDlzB,KAAA,CAAMC,IAAA,CAAK,KAAK28K,iBAAA,CAAkBr9K,MAAA,CAAO,CAAC,EAAEhB,OAAA,CAAQ2/K,GAAA,IAAOA,GAAA,CAAI/M,kBAAA,CAAmB,CAAC;EACrF;EAAA;EAEAuJ,gBAAA,EAAkB;IAMhB,IAAI,CAAC,KAAK6C,cAAA,IAAkB,KAAK9C,UAAA,IAAc,KAAKK,gBAAA,IAAoB,KAAKI,gBAAA,IAAoB,KAAKI,gBAAA,EAAkB;MACtH,KAAKiC,cAAA,GAAiB;MAGtB,IAAI,KAAKS,UAAA,CAAW,GAAG;QACrB,KAAKC,OAAA,CAAQ;MACf;IACF;EACF;EAAA;EAEAD,WAAA,EAAa;IACX,OAAO,KAAKT,cAAA,IAAkB,KAAKC,eAAA;EACrC;EAAA;EAEAS,QAAA,EAAU;IAER,KAAKuC,aAAA,CAAc;IACnB,KAAKC,gBAAA,CAAiB;IAEtB,IAAI,CAAC,KAAKtC,cAAA,CAAer+K,MAAA,IAAU,CAAC,KAAKs+K,cAAA,CAAet+K,MAAA,IAAU,CAAC,KAAKwgL,QAAA,CAASxgL,MAAA,KAAW,OAAOL,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC1I,MAAMs6K,2BAAA,CAA4B;IACpC;IAEA,MAAM2G,cAAA,GAAiB,KAAKC,qBAAA,CAAsB;IAClD,MAAMC,cAAA,GAAiBF,cAAA,IAAkB,KAAKzD,oBAAA,IAAwB,KAAKC,oBAAA;IAE3E,KAAKT,4BAAA,GAA+B,KAAKA,4BAAA,IAAgCmE,cAAA;IACzE,KAAKpE,2BAAA,GAA8BoE,cAAA;IAEnC,IAAI,KAAK3D,oBAAA,EAAsB;MAC7B,KAAK4D,sBAAA,CAAuB;MAC5B,KAAK5D,oBAAA,GAAuB;IAC9B;IAEA,IAAI,KAAKC,oBAAA,EAAsB;MAC7B,KAAK4D,sBAAA,CAAuB;MAC5B,KAAK5D,oBAAA,GAAuB;IAC9B;IAGA,IAAI,KAAKnB,UAAA,IAAc,KAAKuE,QAAA,CAASxgL,MAAA,GAAS,KAAK,CAAC,KAAKihL,yBAAA,EAA2B;MAClF,KAAKC,qBAAA,CAAsB;IAC7B,WAAW,KAAKvE,4BAAA,EAA8B;MAG5C,KAAKJ,wBAAA,CAAyB;IAChC;IACA,KAAK4E,kBAAA,CAAmB;EAC1B;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAzC,kBAAA,EAAoB;IAClB,MAAMF,UAAA,GAAa,EAAC;IAGpB,MAAM4C,oBAAA,GAAuB,KAAK/D,oBAAA;IAClC,KAAKA,oBAAA,GAAuB,mBAAIh/K,GAAA,CAAI;IAGpC,SAAS+0B,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAK0jE,KAAA,CAAM92F,MAAA,EAAQozB,CAAA,IAAK;MAC1C,IAAI5hB,IAAA,GAAO,KAAKslF,KAAA,CAAM1jE,CAAC;MACvB,MAAMiuJ,iBAAA,GAAoB,KAAKC,qBAAA,CAAsB9vK,IAAA,EAAM4hB,CAAA,EAAGguJ,oBAAA,CAAqB/hL,GAAA,CAAImS,IAAI,CAAC;MAC5F,IAAI,CAAC,KAAK6rK,oBAAA,CAAqBj+K,GAAA,CAAIoS,IAAI,GAAG;QACxC,KAAK6rK,oBAAA,CAAqB99K,GAAA,CAAIiS,IAAA,EAAM,mBAAImqC,OAAA,CAAQ,CAAC;MACnD;MACA,SAAS4lI,CAAA,GAAI,GAAGA,CAAA,GAAIF,iBAAA,CAAkBrhL,MAAA,EAAQuhL,CAAA,IAAK;QACjD,IAAIC,SAAA,GAAYH,iBAAA,CAAkBE,CAAC;QACnC,MAAME,KAAA,GAAQ,KAAKpE,oBAAA,CAAqBh+K,GAAA,CAAImiL,SAAA,CAAUhwK,IAAI;QAC1D,IAAIiwK,KAAA,CAAMriL,GAAA,CAAIoiL,SAAA,CAAU3C,MAAM,GAAG;UAC/B4C,KAAA,CAAMpiL,GAAA,CAAImiL,SAAA,CAAU3C,MAAM,EAAEv/K,IAAA,CAAKkiL,SAAS;QAC5C,OAAO;UACLC,KAAA,CAAMliL,GAAA,CAAIiiL,SAAA,CAAU3C,MAAA,EAAQ,CAAC2C,SAAS,CAAC;QACzC;QACAhD,UAAA,CAAWl/K,IAAA,CAAKkiL,SAAS;MAC3B;IACF;IACA,OAAOhD,UAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA8C,sBAAsB9vK,IAAA,EAAMysK,SAAA,EAAWwD,KAAA,EAAO;IAC5C,MAAMC,OAAA,GAAU,KAAKC,WAAA,CAAYnwK,IAAA,EAAMysK,SAAS;IAChD,OAAOyD,OAAA,CAAQrgL,GAAA,CAAIw9K,MAAA,IAAU;MAC3B,MAAM+C,gBAAA,GAAmBH,KAAA,IAASA,KAAA,CAAMriL,GAAA,CAAIy/K,MAAM,IAAI4C,KAAA,CAAMpiL,GAAA,CAAIw/K,MAAM,IAAI,EAAC;MAC3E,IAAI+C,gBAAA,CAAiB5hL,MAAA,EAAQ;QAC3B,MAAMg+K,OAAA,GAAU4D,gBAAA,CAAiBx5J,KAAA,CAAM;QACvC41J,OAAA,CAAQC,SAAA,GAAYA,SAAA;QACpB,OAAOD,OAAA;MACT,OAAO;QACL,OAAO;UACLxsK,IAAA;UACAqtK,MAAA;UACAZ;QACF;MACF;IACF,CAAC;EACH;EAAA;EAEA0C,iBAAA,EAAmB;IACjB,KAAK7D,iBAAA,CAAkB78J,KAAA,CAAM;IAC7B,MAAM4hK,UAAA,GAAaC,gBAAA,CAAiB,KAAKC,WAAA,CAAY,KAAKC,kBAAkB,GAAG,KAAKjF,iBAAiB;IACrG8E,UAAA,CAAWpjL,OAAA,CAAQuzK,SAAA,IAAa;MAC9B,IAAI,KAAK8K,iBAAA,CAAkB19K,GAAA,CAAI4yK,SAAA,CAAUnzK,IAAI,MAAM,OAAOc,SAAA,KAAc,eAAeA,SAAA,GAAY;QACjG,MAAMm6K,gCAAA,CAAiC9H,SAAA,CAAUnzK,IAAI;MACvD;MACA,KAAKi+K,iBAAA,CAAkBv9K,GAAA,CAAIyyK,SAAA,CAAUnzK,IAAA,EAAMmzK,SAAS;IACtD,CAAC;EACH;EAAA;EAEA0O,cAAA,EAAgB;IACd,KAAKrC,cAAA,GAAiByD,gBAAA,CAAiB,KAAKC,WAAA,CAAY,KAAKE,qBAAqB,GAAG,KAAKhF,oBAAoB;IAC9G,KAAKqB,cAAA,GAAiBwD,gBAAA,CAAiB,KAAKC,WAAA,CAAY,KAAKG,qBAAqB,GAAG,KAAKhF,oBAAoB;IAC9G,KAAKsD,QAAA,GAAWsB,gBAAA,CAAiB,KAAKC,WAAA,CAAY,KAAKI,eAAe,GAAG,KAAKnF,cAAc;IAE5F,MAAMoF,cAAA,GAAiB,KAAK5B,QAAA,CAASt/K,MAAA,CAAOk9K,GAAA,IAAO,CAACA,GAAA,CAAI3J,IAAI;IAC5D,IAAI,CAAC,KAAK2H,qBAAA,IAAyBgG,cAAA,CAAepiL,MAAA,GAAS,MAAM,OAAOL,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/G,MAAMo6K,mCAAA,CAAoC;IAC5C;IACA,KAAKwE,cAAA,GAAiB6D,cAAA,CAAe,CAAC;EACxC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAvB,sBAAA,EAAwB;IACtB,MAAMwB,kBAAA,GAAqBA,CAACzmC,GAAA,EAAKwiC,GAAA,KAAQxiC,GAAA,IAAO,CAAC,CAACwiC,GAAA,CAAIxK,cAAA,CAAe;IAErE,MAAM0O,kBAAA,GAAqB,KAAK9B,QAAA,CAASv6K,MAAA,CAAOo8K,kBAAA,EAAoB,KAAK;IACzE,IAAIC,kBAAA,EAAoB;MACtB,KAAKhG,oBAAA,CAAqB;IAC5B;IAEA,MAAMiG,oBAAA,GAAuB,KAAKlE,cAAA,CAAep4K,MAAA,CAAOo8K,kBAAA,EAAoB,KAAK;IACjF,IAAIE,oBAAA,EAAsB;MACxB,KAAKxB,sBAAA,CAAuB;IAC9B;IACA,MAAMyB,oBAAA,GAAuB,KAAKlE,cAAA,CAAer4K,MAAA,CAAOo8K,kBAAA,EAAoB,KAAK;IACjF,IAAIG,oBAAA,EAAsB;MACxB,KAAKxB,sBAAA,CAAuB;IAC9B;IACA,OAAOsB,kBAAA,IAAsBC,oBAAA,IAAwBC,oBAAA;EACvD;EAAA;AAAA;AAAA;AAAA;AAAA;EAMArG,kBAAkBF,UAAA,EAAY;IAC5B,KAAKnlF,KAAA,GAAQ,EAAC;IACd,IAAIH,YAAA,CAAa,KAAKslF,UAAU,GAAG;MACjC,KAAKA,UAAA,CAAW1gH,UAAA,CAAW,IAAI;IACjC;IAEA,IAAI,KAAK0lH,yBAAA,EAA2B;MAClC,KAAKA,yBAAA,CAA0Bp4I,WAAA,CAAY;MAC3C,KAAKo4I,yBAAA,GAA4B;IACnC;IACA,IAAI,CAAChF,UAAA,EAAY;MACf,IAAI,KAAK6B,WAAA,EAAa;QACpB,KAAKA,WAAA,CAAYl2E,IAAA,CAAK,EAAE;MAC1B;MACA,IAAI,KAAK+yE,UAAA,EAAY;QACnB,KAAKA,UAAA,CAAW3uE,aAAA,CAAc/rF,KAAA,CAAM;MACtC;IACF;IACA,KAAKi8J,WAAA,GAAcD,UAAA;EACrB;EAAA;EAEAiF,sBAAA,EAAwB;IAEtB,IAAI,CAAC,KAAKjF,UAAA,EAAY;MACpB;IACF;IACA,IAAI53E,UAAA;IACJ,IAAI1N,YAAA,CAAa,KAAKslF,UAAU,GAAG;MACjC53E,UAAA,GAAa,KAAK43E,UAAA,CAAWrlF,OAAA,CAAQ,IAAI;IAC3C,WAAW3iE,YAAA,CAAa,KAAKgoJ,UAAU,GAAG;MACxC53E,UAAA,GAAa,KAAK43E,UAAA;IACpB,WAAW/7K,KAAA,CAAMkB,OAAA,CAAQ,KAAK66K,UAAU,GAAG;MACzC53E,UAAA,GAAax8F,EAAA,CAAG,KAAKo0K,UAAU;IACjC;IACA,IAAI53E,UAAA,KAAe,WAAc,OAAO1kG,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC/E,MAAMu6K,8BAAA,CAA+B;IACvC;IACA,KAAK+G,yBAAA,GAA4B58E,UAAA,CAAWv8F,IAAA,CAAKk6C,SAAA,CAAU,KAAK66H,UAAU,CAAC,EAAE7zI,SAAA,CAAUx3B,IAAA,IAAQ;MAC7F,KAAKslF,KAAA,GAAQtlF,IAAA,IAAQ,EAAC;MACtB,KAAKgtK,UAAA,CAAW;IAClB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAuC,uBAAA,EAAyB;IAEvB,IAAI,KAAK/F,gBAAA,CAAiBhvE,aAAA,CAAchsG,MAAA,GAAS,GAAG;MAClD,KAAKg7K,gBAAA,CAAiBhvE,aAAA,CAAc/rF,KAAA,CAAM;IAC5C;IACA,KAAKo+J,cAAA,CAAe5/K,OAAA,CAAQ,CAAC2/K,GAAA,EAAKhrJ,CAAA,KAAM,KAAKqvJ,UAAA,CAAW,KAAKzH,gBAAA,EAAkBoD,GAAA,EAAKhrJ,CAAC,CAAC;IACtF,KAAKysJ,2BAAA,CAA4B;EACnC;EAAA;AAAA;AAAA;AAAA;EAKAmB,uBAAA,EAAyB;IAEvB,IAAI,KAAK5F,gBAAA,CAAiBpvE,aAAA,CAAchsG,MAAA,GAAS,GAAG;MAClD,KAAKo7K,gBAAA,CAAiBpvE,aAAA,CAAc/rF,KAAA,CAAM;IAC5C;IACA,KAAKq+J,cAAA,CAAe7/K,OAAA,CAAQ,CAAC2/K,GAAA,EAAKhrJ,CAAA,KAAM,KAAKqvJ,UAAA,CAAW,KAAKrH,gBAAA,EAAkBgD,GAAA,EAAKhrJ,CAAC,CAAC;IACtF,KAAK+sJ,2BAAA,CAA4B;EACnC;EAAA;EAEAI,uBAAuBl1C,IAAA,EAAMwzC,MAAA,EAAQ;IACnC,MAAMgD,UAAA,GAAa3hL,KAAA,CAAMC,IAAA,CAAK0+K,MAAA,CAAOlL,OAAA,IAAW,EAAE,EAAEtyK,GAAA,CAAIqhL,UAAA,IAAc;MACpE,MAAM1Q,SAAA,GAAY,KAAK8K,iBAAA,CAAkBz9K,GAAA,CAAIqjL,UAAU;MACvD,IAAI,CAAC1Q,SAAA,KAAc,OAAOryK,SAAA,KAAc,eAAeA,SAAA,GAAY;QACjE,MAAMk6K,0BAAA,CAA2B6I,UAAU;MAC7C;MACA,OAAO1Q,SAAA;IACT,CAAC;IACD,MAAMgF,iBAAA,GAAoB6K,UAAA,CAAWxgL,GAAA,CAAI2wK,SAAA,IAAaA,SAAA,CAAUlB,MAAM;IACtE,MAAMmG,eAAA,GAAkB4K,UAAA,CAAWxgL,GAAA,CAAI2wK,SAAA,IAAaA,SAAA,CAAUf,SAAS;IACvE,KAAKiP,aAAA,CAAcnJ,mBAAA,CAAoB1rC,IAAA,EAAM2rC,iBAAA,EAAmBC,eAAA,EAAiB,CAAC,KAAKwF,YAAA,IAAgB,KAAKC,2BAA2B;EACzI;EAAA;EAEAqD,iBAAiB4C,SAAA,EAAW;IAC1B,MAAMC,YAAA,GAAe,EAAC;IACtB,SAASxvJ,CAAA,GAAI,GAAGA,CAAA,GAAIuvJ,SAAA,CAAU32E,aAAA,CAAchsG,MAAA,EAAQozB,CAAA,IAAK;MACvD,MAAM64E,OAAA,GAAU02E,SAAA,CAAU32E,aAAA,CAAc3sG,GAAA,CAAI+zB,CAAC;MAC7CwvJ,YAAA,CAAatjL,IAAA,CAAK2sG,OAAA,CAAQtE,SAAA,CAAU,CAAC,CAAC;IACxC;IACA,OAAOi7E,YAAA;EACT;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAjB,YAAYnwK,IAAA,EAAMysK,SAAA,EAAW;IAC3B,IAAI,KAAKuC,QAAA,CAASxgL,MAAA,IAAU,GAAG;MAC7B,OAAO,CAAC,KAAKwgL,QAAA,CAAS,CAAC,CAAC;IAC1B;IACA,IAAIkB,OAAA,GAAU,EAAC;IACf,IAAI,KAAKtF,qBAAA,EAAuB;MAC9BsF,OAAA,GAAU,KAAKlB,QAAA,CAASt/K,MAAA,CAAOk9K,GAAA,IAAO,CAACA,GAAA,CAAI3J,IAAA,IAAQ2J,GAAA,CAAI3J,IAAA,CAAKwJ,SAAA,EAAWzsK,IAAI,CAAC;IAC9E,OAAO;MACL,IAAIqtK,MAAA,GAAS,KAAK2B,QAAA,CAASjiK,IAAA,CAAK6/J,GAAA,IAAOA,GAAA,CAAI3J,IAAA,IAAQ2J,GAAA,CAAI3J,IAAA,CAAKwJ,SAAA,EAAWzsK,IAAI,CAAC,KAAK,KAAK+sK,cAAA;MACtF,IAAIM,MAAA,EAAQ;QACV6C,OAAA,CAAQpiL,IAAA,CAAKu/K,MAAM;MACrB;IACF;IACA,IAAI,CAAC6C,OAAA,CAAQ1hL,MAAA,KAAW,OAAOL,SAAA,KAAc,eAAeA,SAAA,GAAY;MACtE,MAAMq6K,kCAAA,CAAmCxoK,IAAI;IAC/C;IACA,OAAOkwK,OAAA;EACT;EACAr5E,qBAAqBm5E,SAAA,EAAW7iL,KAAA,EAAO;IACrC,MAAMkgL,MAAA,GAAS2C,SAAA,CAAU3C,MAAA;IACzB,MAAMv5K,OAAA,GAAU;MACdwzF,SAAA,EAAW0oF,SAAA,CAAUhwK;IACvB;IACA,OAAO;MACLumF,WAAA,EAAa8mF,MAAA,CAAO1zI,QAAA;MACpB7lC,OAAA;MACA3G;IACF;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA8jL,WAAWvnJ,MAAA,EAAQ2jJ,MAAA,EAAQlgL,KAAA,EAAO2G,OAAA,GAAU,CAAC,GAAG;IAE9C,MAAMoyF,IAAA,GAAOx8D,MAAA,CAAO8wE,aAAA,CAAclU,kBAAA,CAAmB+mF,MAAA,CAAO1zI,QAAA,EAAU7lC,OAAA,EAAS3G,KAAK;IACpF,KAAKigL,0BAAA,CAA2BC,MAAA,EAAQv5K,OAAO;IAC/C,OAAOoyF,IAAA;EACT;EACAknF,2BAA2BC,MAAA,EAAQv5K,OAAA,EAAS;IAC1C,SAASu9K,YAAA,IAAgB,KAAKC,iBAAA,CAAkBjE,MAAM,GAAG;MACvD,IAAI9J,aAAA,CAAcF,oBAAA,EAAsB;QACtCE,aAAA,CAAcF,oBAAA,CAAqBD,cAAA,CAAe98E,kBAAA,CAAmB+qF,YAAA,EAAcv9K,OAAO;MAC5F;IACF;IACA,KAAK2nF,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;AAAA;AAAA;AAAA;EAKAs3I,uBAAA,EAAyB;IACvB,MAAM9yE,aAAA,GAAgB,KAAK2uE,UAAA,CAAW3uE,aAAA;IACtC,SAAS+2E,WAAA,GAAc,GAAGhmK,KAAA,GAAQivF,aAAA,CAAchsG,MAAA,EAAQ+iL,WAAA,GAAchmK,KAAA,EAAOgmK,WAAA,IAAe;MAC1F,MAAM92E,OAAA,GAAUD,aAAA,CAAc3sG,GAAA,CAAI0jL,WAAW;MAC7C,MAAMz9K,OAAA,GAAU2mG,OAAA,CAAQ3mG,OAAA;MACxBA,OAAA,CAAQyX,KAAA,GAAQA,KAAA;MAChBzX,OAAA,CAAQoC,KAAA,GAAQq7K,WAAA,KAAgB;MAChCz9K,OAAA,CAAQyuB,IAAA,GAAOgvJ,WAAA,KAAgBhmK,KAAA,GAAQ;MACvCzX,OAAA,CAAQijG,IAAA,GAAOw6E,WAAA,GAAc,MAAM;MACnCz9K,OAAA,CAAQkjG,GAAA,GAAM,CAACljG,OAAA,CAAQijG,IAAA;MACvB,IAAI,KAAK6zE,qBAAA,EAAuB;QAC9B92K,OAAA,CAAQ24K,SAAA,GAAY,KAAKQ,WAAA,CAAYsE,WAAW,EAAE9E,SAAA;QAClD34K,OAAA,CAAQy9K,WAAA,GAAcA,WAAA;MACxB,OAAO;QACLz9K,OAAA,CAAQ3G,KAAA,GAAQ,KAAK8/K,WAAA,CAAYsE,WAAW,EAAE9E,SAAA;MAChD;IACF;EACF;EAAA;EAEA6E,kBAAkBjE,MAAA,EAAQ;IACxB,IAAI,CAACA,MAAA,IAAU,CAACA,MAAA,CAAOlL,OAAA,EAAS;MAC9B,OAAO,EAAC;IACV;IACA,OAAOzzK,KAAA,CAAMC,IAAA,CAAK0+K,MAAA,CAAOlL,OAAA,EAASqP,QAAA,IAAY;MAC5C,MAAMlP,MAAA,GAAS,KAAKgJ,iBAAA,CAAkBz9K,GAAA,CAAI2jL,QAAQ;MAClD,IAAI,CAAClP,MAAA,KAAW,OAAOn0K,SAAA,KAAc,eAAeA,SAAA,GAAY;QAC9D,MAAMk6K,0BAAA,CAA2BmJ,QAAQ;MAC3C;MACA,OAAOnE,MAAA,CAAOhL,mBAAA,CAAoBC,MAAM;IAC1C,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAwI,qBAAA,EAAuB;IACrB,KAAKwB,WAAA,CAAYl2E,IAAA,CAAK,EAAE;IACxB,KAAK+yE,UAAA,CAAW3uE,aAAA,CAAc/rF,KAAA,CAAM;IACpC,KAAKu+J,UAAA,CAAW;EAClB;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA2C,mBAAA,EAAqB;IACnB,MAAM8B,kBAAA,GAAqBA,CAACrnC,GAAA,EAAKl4G,CAAA,KAAM;MACrC,OAAOk4G,GAAA,IAAOl4G,CAAA,CAAE0tI,gBAAA,CAAiB;IACnC;IAIA,IAAI,KAAKiN,cAAA,CAAep4K,MAAA,CAAOg9K,kBAAA,EAAoB,KAAK,GAAG;MACzD,KAAKpD,2BAAA,CAA4B;IACnC;IACA,IAAI,KAAKvB,cAAA,CAAer4K,MAAA,CAAOg9K,kBAAA,EAAoB,KAAK,GAAG;MACzD,KAAK9C,2BAAA,CAA4B;IACnC;IACA,IAAIjgL,KAAA,CAAMC,IAAA,CAAK,KAAK28K,iBAAA,CAAkBr9K,MAAA,CAAO,CAAC,EAAEwG,MAAA,CAAOg9K,kBAAA,EAAoB,KAAK,GAAG;MACjF,KAAKtG,4BAAA,GAA+B;MACpC,KAAKJ,wBAAA,CAAyB;IAChC;EACF;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAsB,mBAAA,EAAqB;IACnB,MAAM94G,SAAA,GAAY,KAAK6T,IAAA,GAAO,KAAKA,IAAA,CAAK35E,KAAA,GAAQ;IAChD,KAAKihL,aAAA,GAAgB,IAAIjK,YAAA,CAAa,KAAKC,kBAAA,EAAoB,KAAKoH,cAAA,EAAgBv4G,SAAA,EAAW,KAAKqxG,wBAAA,EAA0B,KAAKl5G,SAAA,CAAUhJ,SAAA,EAAW,KAAKqpH,4BAAA,EAA8B,KAAKX,0BAA0B;IAC1N,CAAC,KAAKhkG,IAAA,GAAO,KAAKA,IAAA,CAAK3U,MAAA,GAASp8D,EAAA,CAAG,GAAGC,IAAA,CAAKk6C,SAAA,CAAU,KAAK66H,UAAU,CAAC,EAAE7zI,SAAA,CAAU/pC,KAAA,IAAS;MACxF,KAAKihL,aAAA,CAAcn7G,SAAA,GAAY9lE,KAAA;MAC/B,KAAKs9K,wBAAA,CAAyB;IAChC,CAAC;EACH;EAAA;EAEAwF,YAAY38G,KAAA,EAAO;IACjB,OAAOA,KAAA,CAAMlkE,MAAA,CAAOuwC,IAAA,IAAQ,CAACA,IAAA,CAAK0/H,MAAA,IAAU1/H,IAAA,CAAK0/H,MAAA,KAAW,IAAI;EAClE;EAAA;EAEAwN,iBAAA,EAAmB;IACjB,MAAMgB,SAAA,GAAY,KAAKC,gBAAA,IAAoB,KAAKsD,UAAA;IAChD,IAAI,CAACvD,SAAA,EAAW;MACd;IACF;IACA,MAAMwD,UAAA,GAAa,KAAKxI,UAAA,CAAW3uE,aAAA,CAAchsG,MAAA,KAAW;IAC5D,IAAImjL,UAAA,KAAe,KAAK3F,mBAAA,EAAqB;MAC3C;IACF;IACA,MAAM7oJ,SAAA,GAAY,KAAK6mJ,gBAAA,CAAiBxvE,aAAA;IACxC,IAAIm3E,UAAA,EAAY;MACd,MAAMzrF,IAAA,GAAO/iE,SAAA,CAAUmjE,kBAAA,CAAmB6nF,SAAA,CAAU5nF,WAAW;MAC/D,MAAMhhD,QAAA,GAAW2gD,IAAA,CAAKiQ,SAAA,CAAU,CAAC;MAGjC,IAAIjQ,IAAA,CAAKiQ,SAAA,CAAU3nG,MAAA,KAAW,KAAK+2C,QAAA,EAAUl8B,QAAA,KAAa,KAAKkP,SAAA,CAAUhP,YAAA,EAAc;QACrFg8B,QAAA,CAAS91B,YAAA,CAAa,QAAQ,KAAK;QACnC81B,QAAA,CAAS1xB,SAAA,CAAUrW,GAAA,CAAI2wK,SAAA,CAAU9J,iBAAiB;MACpD;IACF,OAAO;MACLlhJ,SAAA,CAAU1U,KAAA,CAAM;IAClB;IACA,KAAKu9J,mBAAA,GAAsB2F,UAAA;IAC3B,KAAKl2F,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;AAmFF;AAjFIo0I,SAAA,CAAKnzK,IAAA,GAAO,SAAS26K,iBAAiBtgL,CAAA,EAAG;EACvC,OAAO,KAAKA,CAAA,IAAK84K,SAAA,EAAa1xH,iBAAA,CAAqBy+C,eAAe,GAAMz+C,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqBG,UAAU,GAAMF,iBAAA,CAAkB,MAAM,GAAMD,iBAAA,CAAqBwuB,cAAA,EAAgB,CAAC,GAAMxuB,iBAAA,CAAkB53C,QAAQ,GAAM43C,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAkB8sC,uBAAuB,GAAM9sC,iBAAA,CAAkB4oH,0BAA0B,GAAM5oH,iBAAA,CAAqB63C,aAAa,GAAM73C,iBAAA,CAAkBmwH,2BAAA,EAA6B,EAAE,GAAMnwH,iBAAA,CAAqBjgD,MAAA,EAAQ,CAAC,CAAC;AACvgB;AAGA2xK,SAAA,CAAK9wI,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM61K,SAAA;EACNh0I,SAAA,EAAW,CAAC,CAAC,WAAW,GAAG,CAAC,SAAS,aAAa,EAAE,CAAC;EACrDklB,cAAA,EAAgB,SAASu2H,wBAAwBh4I,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IAClE,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAU+oH,YAAA,EAAc,CAAC;MACxC9oH,cAAA,CAAeD,QAAA,EAAU8kH,YAAA,EAAc,CAAC;MACxC7kH,cAAA,CAAeD,QAAA,EAAU0nH,SAAA,EAAW,CAAC;MACrCznH,cAAA,CAAeD,QAAA,EAAU+mH,eAAA,EAAiB,CAAC;MAC3C9mH,cAAA,CAAeD,QAAA,EAAUgnH,eAAA,EAAiB,CAAC;IAChD;IACA,IAAI3oI,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI+yJ,UAAA,GAAah2H,EAAA,CAAGxlD,KAAA;MAC9DylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI6xJ,kBAAA,GAAqB90H,EAAA;MACnEC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIgyJ,eAAA,GAAkBj1H,EAAA;MAChEC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI8xJ,qBAAA,GAAwB/0H,EAAA;MACtEC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI+xJ,qBAAA,GAAwBh1H,EAAA;IAC3E;EACF;EACAs2B,SAAA,EAAW,CAAC,GAAG,WAAW;EAC1Bj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS84H,sBAAsBj4I,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,0BAA0Bp6D,GAAA,CAAIqsJ,WAAW;IAC1D;EACF;EACA30I,MAAA,EAAQ;IACNk0I,OAAA,EAAS;IACTE,UAAA,EAAY;IACZG,qBAAA,EAAuB,CAAItxH,UAAA,CAAaC,0BAAA,EAA4B,yBAAyB,yBAAyBC,gBAAgB;IACtIwxH,WAAA,EAAa,CAAI1xH,UAAA,CAAaC,0BAAA,EAA4B,eAAe,eAAeC,gBAAgB;EAC1G;EACAljB,OAAA,EAAS;IACP61I,cAAA,EAAgB;EAClB;EACA51I,QAAA,EAAU,CAAC,UAAU;EACrBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq4J,SAAA;IACTp4J,WAAA,EAAagkK;EACf,GAAG;IACDjkK,OAAA,EAASq/E,uBAAA;IACTj/E,QAAA,EAAUk/E;EACZ,GAAG;IACDt/E,OAAA,EAASm7J,0BAAA;IACT/6J,QAAA,EAAUw7J;EACZ;EAAA;EAEA;IACE57J,OAAA,EAAS0iK,2BAAA;IACTxiK,QAAA,EAAU;EACZ,EAAE,GAAMozC,wBAAA,EAA6BjgB,mBAAmB;EACxDkhD,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,QAAQ,UAAU,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,mBAAmB,EAAE,CAAC;EAC3HhhD,QAAA,EAAU,SAASo4I,kBAAkBl4I,EAAA,EAAIlb,GAAA,EAAK;IAC5C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB/S,KAAG;MACnBgT,YAAA,CAAa,CAAC;MACdA,YAAA,CAAa,GAAG,CAAC;MACjBoC,UAAA,CAAW,GAAG6gF,+BAAA,EAAiC,GAAG,CAAC,EAAE,GAAGC,+BAAA,EAAiC,GAAG,CAAC,EAAE,GAAGC,+BAAA,EAAiC,GAAG,CAAC;IAC5I;IACA,IAAIpkI,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIuiI,SAAA,GAAY,IAAI,EAAE;MACvCr4E,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAI+lJ,kBAAA,GAAqB,IAAI,CAAC;IACpD;EACF;EACA3qI,YAAA,EAAc,CAAC2vI,eAAA,EAAiBJ,aAAA,EAAeY,eAAA,EAAiBJ,eAAe;EAC/E77J,MAAA,EAAQ,CAAC,6CAA6C;EACtDoD,aAAA,EAAe;AACjB,CAAC;AAz5BL,IAAM2gK,QAAA,GAAN5H,SAAA;AAAA,CA45BC,MAAM;EACL,CAAC,OAAOj8K,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw6K,QAAA,EAAU,CAAC;IACjFz9K,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVoD,QAAA,EAAUwwI,kBAAA;MACVv+J,IAAA,EAAM;QACJ,SAAS;QACT,kCAAkC;MACpC;MACAyF,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC7xG,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq4J,SAAA;QACTp4J,WAAA,EAAa4rK;MACf,GAAG;QACD7rK,OAAA,EAASq/E,uBAAA;QACTj/E,QAAA,EAAUk/E;MACZ,GAAG;QACDt/E,OAAA,EAASm7J,0BAAA;QACT/6J,QAAA,EAAUw7J;MACZ;MAAA;MAEA;QACE57J,OAAA,EAAS0iK,2BAAA;QACTxiK,QAAA,EAAU;MACZ,EAAC;MACDmwB,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC+vJ,eAAA,EAAiBJ,aAAA,EAAeY,eAAA,EAAiBJ,eAAe;MAC1E77J,MAAA,EAAQ,CAAC,6CAA6C;IACxD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAS4iG;EACX,GAAG;IACD5iG,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,MAAM;IACf,CAAC;EACH,GAAG;IACD3M,IAAA,EAAS2yE,cAAA;IACTlmE,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,GAAG;IACDvM,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACskF,uBAAuB;IAChC,CAAC;EACH,GAAG;IACDjxF,IAAA,EAAMwtK,wBAAA;IACN/gK,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACogK,0BAA0B;IACnC,CAAC;EACH,GAAG;IACD/sK,IAAA,EAASg8F;EACX,GAAG;IACDh8F,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMylB;IACR,GAAG;MACDzlB,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC2nK,2BAA2B;IACpC,CAAC;EACH,GAAG;IACDt0K,IAAA,EAASkE,MAAA;IACTuI,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,CAAC,GAAG;IACFu6J,OAAA,EAAS,CAAC;MACRh2K,IAAA,EAAMqiC;IACR,CAAC;IACD6zI,UAAA,EAAY,CAAC;MACXl2K,IAAA,EAAMqiC;IACR,CAAC;IACDg0I,qBAAA,EAAuB,CAAC;MACtBr2K,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDwxH,WAAA,EAAa,CAAC;MACZz2K,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD2yH,cAAA,EAAgB,CAAC;MACf53K,IAAA,EAAMsiC;IACR,CAAC;IACD25I,kBAAA,EAAoB,CAAC;MACnBj8K,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACo/J,YAAA,EAAc;QACnB33H,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACDgoI,eAAA,EAAiB,CAAC;MAChBp8K,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACgiK,SAAA,EAAW;QAChBv6H,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD8nI,qBAAA,EAAuB,CAAC;MACtBl8K,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACqhK,eAAA,EAAiB;QACtB55H,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD+nI,qBAAA,EAAuB,CAAC;MACtBn8K,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACshK,eAAA,EAAiB;QACtB75H,WAAA,EAAa;MACf,CAAC;IACH,CAAC;IACD+oI,UAAA,EAAY,CAAC;MACXn9K,IAAA,EAAMg6H,YAAA;MACNrtH,IAAA,EAAM,CAACqjK,YAAY;IACrB,CAAC;EACH,CAAC;AACH,GAAG;AAEH,SAAS+L,iBAAiB/xB,KAAA,EAAOxwJ,GAAA,EAAK;EACpC,OAAOwwJ,KAAA,CAAMjvJ,MAAA,CAAOZ,KAAA,CAAMC,IAAA,CAAKZ,GAAG,CAAC;AACrC;AAKA,SAAS0gL,oBAAoB/kJ,MAAA,EAAQuoJ,OAAA,EAAS;EAC5C,MAAMC,gBAAA,GAAmBD,OAAA,CAAQp+K,WAAA,CAAY;EAC7C,IAAIsG,OAAA,GAAUuvB,MAAA,CAAO8wE,aAAA,CAAc7tF,OAAA,CAAQgrC,aAAA;EAC3C,OAAOx9C,OAAA,EAAS;IAEd,MAAMu8D,QAAA,GAAWv8D,OAAA,CAAQkP,QAAA,KAAa,IAAIlP,OAAA,CAAQu8D,QAAA,GAAW;IAC7D,IAAIA,QAAA,KAAaw7G,gBAAA,EAAkB;MACjC,OAAO/3K,OAAA;IACT,WAAWu8D,QAAA,KAAa,SAAS;MAE/B;IACF;IACAv8D,OAAA,GAAUA,OAAA,CAAQ+F,UAAA;EACpB;EACA,OAAO;AACT;AAWA,IAAMiyK,cAAA,GAAN,MAAMA,cAAA,CAAc;EAAA;EAElB,IAAI9kL,KAAA,EAAO;IACT,OAAO,KAAK+xK,KAAA;EACd;EACA,IAAI/xK,KAAKA,IAAA,EAAM;IACb,KAAK+xK,KAAA,GAAQ/xK,IAAA;IAGb,KAAK+kL,kBAAA,CAAmB;EAC1B;EACA1lL,YAIAizK,MAAA,EAAQ3hG,QAAA,EAAU;IAChB,KAAK2hG,MAAA,GAASA,MAAA;IACd,KAAK3hG,QAAA,GAAWA,QAAA;IAEhB,KAAKmgG,OAAA,GAAU;IACf,KAAKngG,QAAA,GAAWA,QAAA,IAAY,CAAC;EAC/B;EACAjpC,SAAA,EAAW;IACT,KAAKq9I,kBAAA,CAAmB;IACxB,IAAI,KAAKhU,UAAA,KAAe,QAAW;MACjC,KAAKA,UAAA,GAAa,KAAKiU,wBAAA,CAAyB;IAClD;IACA,IAAI,CAAC,KAAK9T,YAAA,EAAc;MACtB,KAAKA,YAAA,GAAe,KAAKvgG,QAAA,CAASs0G,mBAAA,KAAwB,CAACtyK,IAAA,EAAM3S,IAAA,KAAS2S,IAAA,CAAK3S,IAAI;IACrF;IACA,IAAI,KAAKsyK,MAAA,EAAQ;MAIf,KAAKa,SAAA,CAAUL,IAAA,GAAO,KAAKA,IAAA;MAC3B,KAAKK,SAAA,CAAUJ,UAAA,GAAa,KAAKA,UAAA;MACjC,KAAKT,MAAA,CAAO6N,YAAA,CAAa,KAAKhN,SAAS;IACzC,WAAW,OAAOryK,SAAA,KAAc,eAAeA,SAAA,EAAW;MACxD,MAAMw6K,yCAAA,CAA0C;IAClD;EACF;EACAn6J,YAAA,EAAc;IACZ,IAAI,KAAKmxJ,MAAA,EAAQ;MACf,KAAKA,MAAA,CAAO8N,eAAA,CAAgB,KAAKjN,SAAS;IAC5C;EACF;EAAA;AAAA;AAAA;AAAA;EAKA6R,yBAAA,EAA2B;IACzB,MAAMhlL,IAAA,GAAO,KAAKA,IAAA;IAClB,IAAI,CAACA,IAAA,KAAS,OAAOc,SAAA,KAAc,eAAeA,SAAA,GAAY;MAC5D,MAAMy6K,kCAAA,CAAmC;IAC3C;IACA,IAAI,KAAK5qG,QAAA,IAAY,KAAKA,QAAA,CAASu0G,0BAAA,EAA4B;MAC7D,OAAO,KAAKv0G,QAAA,CAASu0G,0BAAA,CAA2BllL,IAAI;IACtD;IACA,OAAOA,IAAA,CAAK,CAAC,EAAEwG,WAAA,CAAY,IAAIxG,IAAA,CAAKC,KAAA,CAAM,CAAC;EAC7C;EAAA;EAEA8kL,mBAAA,EAAqB;IACnB,IAAI,KAAK5R,SAAA,EAAW;MAClB,KAAKA,SAAA,CAAUnzK,IAAA,GAAO,KAAKA,IAAA;IAC7B;EACF;AA6CF;AA3CI8kL,cAAA,CAAKl7K,IAAA,GAAO,SAASu7K,sBAAsBlhL,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAK6gL,cAAA,EAAkBz5H,iBAAA,CAAkBs5H,QAAA,EAAU,CAAC,GAAMt5H,iBAAA,CAAkB+lH,mBAAA,EAAqB,CAAC,CAAC;AACjH;AAGA0T,cAAA,CAAK74I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM49K,cAAA;EACN/7I,SAAA,EAAW,CAAC,CAAC,iBAAiB,CAAC;EAC/BsmD,SAAA,EAAW,SAAS+1F,oBAAoB54I,EAAA,EAAIlb,GAAA,EAAK;IAC/C,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY0jF,YAAA,EAAc,CAAC;MAC3B1jF,WAAA,CAAYgiF,UAAA,EAAY,CAAC;MACzBhiF,WAAA,CAAYmiF,gBAAA,EAAkB,CAAC;IACpC;IACA,IAAIllI,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI6hJ,SAAA,GAAY9kH,EAAA,CAAGxlD,KAAA;MAC7DylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIwhJ,IAAA,GAAOzkH,EAAA,CAAGxlD,KAAA;MACxDylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIyhJ,UAAA,GAAa1kH,EAAA,CAAGxlD,KAAA;IACnE;EACF;EACAmgC,MAAA,EAAQ;IACNhpC,IAAA,EAAM;IACN+wK,UAAA,EAAY;IACZG,YAAA,EAAc;IACdJ,OAAA,EAAS;EACX;EACA3nI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,gBAAgB,EAAE,GAAG,CAAC,mBAAmB,IAAI,GAAG,cAAc,GAAG,kBAAkB,GAAG,CAAC,YAAY,IAAI,GAAG,cAAc,GAAG,YAAY,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC;EAC7LhhD,QAAA,EAAU,SAAS+4I,uBAAuB74I,EAAA,EAAIlb,GAAA,EAAK;IACjD,IAAIkb,EAAA,GAAK,GAAG;MACP84I,uBAAA,CAAwB,GAAG,CAAC;MAC5Bz1F,UAAA,CAAW,GAAGghF,2BAAA,EAA6B,GAAG,GAAG,MAAM,CAAC,EAAE,GAAGG,2BAAA,EAA6B,GAAG,GAAG,MAAM,CAAC;MACvGuU,qBAAA,CAAsB;IAC3B;EACF;EACA74I,YAAA,EAAc,CAACumI,YAAA,EAAcvB,gBAAA,EAAkB4B,aAAA,EAAe/B,UAAA,EAAYsC,OAAO;EACjF7vJ,aAAA,EAAe;AACjB,CAAC;AA5GL,IAAMwhK,aAAA,GAANV,cAAA;AAAA,CA+GC,MAAM;EACL,CAAC,OAAOhkL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq7K,aAAA,EAAe,CAAC;IACtFt+K,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MAUVtoB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAOjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC/gF,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC2mJ,YAAA,EAAcvB,gBAAA,EAAkB4B,aAAA,EAAe/B,UAAA,EAAYsC,OAAO;IAC9E,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT3sK,IAAA,EAAMy9K,QAAA;IACNhxK,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,CAAC;EACH,GAAG;IACDzb,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACu9J,mBAAmB;IAC5B,CAAC;EACH,CAAC,GAAG;IACFpxK,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACDwnI,UAAA,EAAY,CAAC;MACX7pK,IAAA,EAAMqiC;IACR,CAAC;IACD2nI,YAAA,EAAc,CAAC;MACbhqK,IAAA,EAAMqiC;IACR,CAAC;IACDunI,OAAA,EAAS,CAAC;MACR5pK,IAAA,EAAMqiC;IACR,CAAC;IACD4pI,SAAA,EAAW,CAAC;MACVjsK,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACo/J,YAAA,EAAc;QACnBhjF,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;IACD6iF,IAAA,EAAM,CAAC;MACL5rK,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC09J,UAAA,EAAY;QACjBthF,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;IACD8iF,UAAA,EAAY,CAAC;MACX7rK,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC69J,gBAAA,EAAkB;QACvBzhF,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AACH,IAAMw1F,qBAAA,GAAwB,CAACd,QAAA,EAAU9O,SAAA,EAAWtE,UAAA,EAAY2E,aAAA,EAAexE,gBAAA,EAAkBG,gBAAA,EAAkBoB,YAAA,EAAcY,OAAA,EAASiD,MAAA,EAAQxD,aAAA,EAAeI,aAAA,EAAe4C,YAAA,EAAcpB,eAAA,EAAiBwB,YAAA,EAAcvB,eAAA,EAAiB8G,aAAA,EAAeI,eAAA,EAAiBI,eAAA,EAAiB+I,aAAA,EAAetO,YAAA,EAAcyE,cAAA,EAAgBkB,eAAe;AAC3V,IAAM6I,eAAA,GAAN,MAAMA,eAAA,CAAe,EAgBrB;AAdIA,eAAA,CAAK97K,IAAA,GAAO,SAAS+7K,uBAAuB1hL,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKyhL,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAKxrK,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMw+K;AACR,CAAC;AAGDA,eAAA,CAAKtrK,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACq+E,eAAe;AAC3B,CAAC;AAdL,IAAMi7E,cAAA,GAANF,eAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO5kL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBy7K,cAAA,EAAgB,CAAC;IACvF1+K,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACL6Y,OAAA,EAAS+4J,qBAAA;MACTn5J,OAAA,EAAS,CAACq+E,eAAA,EAAiB,GAAG86E,qBAAqB;IACrD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC/5FH,IAAMhrG,QAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG;AACxD,IAAMC,OAAM,CAAC,WAAW,iBAAiB,GAAG;AAC5C,SAASmrG,gCAAgCr5I,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACPihD,YAAA,CAAa,GAAG,CAAC;EACtB;AACF;AACA,SAASq4F,gCAAgCt5I,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC;IACvBlwF,YAAA,CAAa;IACbF,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC,EAAE,GAAG,CAAC;IAC7BlwF,YAAA,CAAa;IACbF,cAAA,CAAe,GAAG,SAAS,CAAC;IAC5BowF,kBAAA,CAAmB,GAAG,CAAC;IACvBlwF,YAAA,CAAa;EAClB;AACF;AACA,SAASwqG,gCAAgCv5I,EAAA,EAAIlb,GAAA,EAAK;EAChD,IAAIkb,EAAA,GAAK,GAAG;IACPi/H,kBAAA,CAAmB,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;EAC9C;AACF;AACA,SAASua,4BAA4Bx5I,EAAA,EAAIlb,GAAA,EAAK;EAC5C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,MAAM,CAAC;IACzBC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMuuC,MAAA,GAAYC,aAAA,CAAc;IAC7BksB,WAAA,CAAY,cAAcnsB,MAAA,CAAO+1F,OAAO;IACxCt1F,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKV,MAAA,CAAOg2F,UAAA,EAAY,GAAG;EACnD;AACF;AACA,SAASkV,4BAA4Bz5I,EAAA,EAAIlb,GAAA,EAAK;EAC5C,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,MAAM,CAAC;IACzBC,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa;EAClB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAMykI,OAAA,GAAU3/I,GAAA,CAAI2oE,SAAA;IACpB,MAAMlf,MAAA,GAAYC,aAAA,CAAc;IAC7BksB,WAAA,CAAY,cAAcnsB,MAAA,CAAO+1F,OAAO;IACxCt1F,SAAA,CAAU;IACVC,kBAAA,CAAmB,KAAKV,MAAA,CAAOm2F,YAAA,CAAaD,OAAA,EAASl2F,MAAA,CAAO/6E,IAAI,GAAG,GAAG;EAC3E;AACF;AACA,IAAMkmL,eAAA,GAAN,MAAMA,eAAA,CAAe,EAiBrB;AAfIA,eAAA,CAAKt8K,IAAA,GAAO,SAASu8K,uBAAuBliL,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKiiL,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAKr9I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMg/K,eAAA;EACNn9I,SAAA,EAAW,CAAC,CAAC,aAAa,eAAe,EAAE,GAAG,CAAC,SAAS,aAAa,IAAI,eAAe,EAAE,CAAC;EAC3FI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq/E,uBAAA;IACTj/E,QAAA,EAAUqgF;EACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAfL,IAAM6sF,cAAA,GAANF,eAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOplL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi8K,cAAA,EAAgB,CAAC;IACvFl/K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq/E,uBAAA;QACTj/E,QAAA,EAAUqgF;MACZ,CAAC;MACDpwD,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMk9I,SAAA,GAAN,MAAMA,SAAA,SAAiB1B,QAAA,CAAS;EAC9BtlL,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAElB,KAAKwjK,cAAA,GAAiB;IAEtB,KAAKC,4BAAA,GAA+B;EACtC;AAkEF;AAhEI2H,SAAA,CAAKz8K,IAAA,GAAuB,sBAAM;EAChC,IAAI08K,qBAAA;EACJ,OAAO,SAASC,iBAAiBtiL,CAAA,EAAG;IAClC,QAAQqiL,qBAAA,KAA0BA,qBAAA,GAA2BhiI,qBAAA,CAAsB+hI,SAAQ,IAAIpiL,CAAA,IAAKoiL,SAAQ;EAC9G;AACF,GAAG;AAGHA,SAAA,CAAKp6I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMm/K,SAAA;EACNt9I,SAAA,EAAW,CAAC,CAAC,WAAW,GAAG,CAAC,SAAS,aAAa,EAAE,CAAC;EACrD47C,SAAA,EAAW,CAAC,GAAG,iBAAiB,uBAAuB;EACvDj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS66H,sBAAsBh6I,EAAA,EAAIlb,GAAA,EAAK;IACpD,IAAIkb,EAAA,GAAK,GAAG;MACPk/C,WAAA,CAAY,0BAA0Bp6D,GAAA,CAAIqsJ,WAAW;IAC1D;EACF;EACAz0I,QAAA,EAAU,CAAC,UAAU;EACrBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS6rK,QAAA;IACT5rK,WAAA,EAAastK;EACf,GAAG;IACDvtK,OAAA,EAASq4J,SAAA;IACTp4J,WAAA,EAAastK;EACf,GAAG;IACDvtK,OAAA,EAASm7J,0BAAA;IACT/6J,QAAA,EAAUw7J;EACZ;EAAA;EAAA;EAGA;IACE57J,OAAA,EAASq/E,uBAAA;IACTj/E,QAAA,EAAUk/E;EACZ;EAAA;EAEA;IACEt/E,OAAA,EAAS0iK,2BAAA;IACTxiK,QAAA,EAAU;EACZ,EAAE,GAAM27E,0BAAA,EAA+BxoD,mBAAmB;EAC1DkhD,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,QAAQ,UAAU,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,QAAQ,YAAY,GAAG,yBAAyB,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,mBAAmB,EAAE,CAAC;EAC/KhhD,QAAA,EAAU,SAASm6I,kBAAkBj6I,EAAA,EAAIlb,GAAA,EAAK;IAC5C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB/S,KAAG;MACnBgT,YAAA,CAAa,CAAC;MACdA,YAAA,CAAa,GAAG,CAAC;MACjBoC,UAAA,CAAW,GAAGg2F,+BAAA,EAAiC,GAAG,CAAC,EAAE,GAAGC,+BAAA,EAAiC,GAAG,CAAC,EAAE,GAAGC,+BAAA,EAAiC,GAAG,CAAC;IAC5I;IACA,IAAIv5I,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU,CAAC;MACXsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIuiI,SAAA,GAAY,IAAI,EAAE;MACvCr4E,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAI+lJ,kBAAA,GAAqB,IAAI,CAAC;IACpD;EACF;EACA3qI,YAAA,EAAc,CAAC2vI,eAAA,EAAiBJ,aAAA,EAAeY,eAAA,EAAiBJ,eAAe;EAC/E77J,MAAA,EAAQ,CAAC,qyKAAqyK;EAC9yKoD,aAAA,EAAe;AACjB,CAAC;AAvEL,IAAM0iK,QAAA,GAANL,SAAA;AAAA,CA0EC,MAAM;EACL,CAAC,OAAOvlL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBu8K,QAAA,EAAU,CAAC;IACjFx/K,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVoD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MA8BV/tB,IAAA,EAAM;QACJ,SAAS;QACT,kCAAkC;MACpC;MACAlG,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS6rK,QAAA;QACT5rK,WAAA,EAAa2tK;MACf,GAAG;QACD5tK,OAAA,EAASq4J,SAAA;QACTp4J,WAAA,EAAa2tK;MACf,GAAG;QACD5tK,OAAA,EAASm7J,0BAAA;QACT/6J,QAAA,EAAUw7J;MACZ;MAAA;MAAA;MAGA;QACE57J,OAAA,EAASq/E,uBAAA;QACTj/E,QAAA,EAAUk/E;MACZ;MAAA;MAEA;QACEt/E,OAAA,EAAS0iK,2BAAA;QACTxiK,QAAA,EAAU;MACZ,EAAC;MACDgL,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC/gF,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC+vJ,eAAA,EAAiBJ,aAAA,EAAeY,eAAA,EAAiBJ,eAAe;MAC1E77J,MAAA,EAAQ,CAAC,qyKAAqyK;IAChzK,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAM+lK,WAAA,GAAN,MAAMA,WAAA,SAAmBpV,UAAA,CAAW,EAoBpC;AAlBIoV,WAAA,CAAK/8K,IAAA,GAAuB,sBAAM;EAChC,IAAIg9K,uBAAA;EACJ,OAAO,SAASC,mBAAmB5iL,CAAA,EAAG;IACpC,QAAQ2iL,uBAAA,KAA4BA,uBAAA,GAA6BtiI,qBAAA,CAAsBqiI,WAAU,IAAI1iL,CAAA,IAAK0iL,WAAU;EACtH;AACF,GAAG;AAGHA,WAAA,CAAK99I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMy/K,WAAA;EACN59I,SAAA,EAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;EAClCI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASy4J,UAAA;IACTx4J,WAAA,EAAa4tK;EACf,CAAC,CAAC,GAAMhyF,0BAA0B;AACpC,CAAC;AAlBL,IAAMmyF,UAAA,GAANH,WAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAO7lL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB28K,UAAA,EAAY,CAAC;IACnF5/K,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASy4J,UAAA;QACTx4J,WAAA,EAAa+tK;MACf,CAAC;MACD39I,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAM49I,iBAAA,GAAN,MAAMA,iBAAA,SAAyBrV,gBAAA,CAAiB,EAoBhD;AAlBIqV,iBAAA,CAAKn9K,IAAA,GAAuB,sBAAM;EAChC,IAAIo9K,6BAAA;EACJ,OAAO,SAASC,yBAAyBhjL,CAAA,EAAG;IAC1C,QAAQ+iL,6BAAA,KAAkCA,6BAAA,GAAmC1iI,qBAAA,CAAsByiI,iBAAgB,IAAI9iL,CAAA,IAAK8iL,iBAAgB;EAC9I;AACF,GAAG;AAGHA,iBAAA,CAAKl+I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6/K,iBAAA;EACNh+I,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxCI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS44J,gBAAA;IACT34J,WAAA,EAAaguK;EACf,CAAC,CAAC,GAAMpyF,0BAA0B;AACpC,CAAC;AAlBL,IAAMuyF,gBAAA,GAANH,iBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAOjmL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+8K,gBAAA,EAAkB,CAAC;IACzFhgL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS44J,gBAAA;QACT34J,WAAA,EAAamuK;MACf,CAAC;MACD/9I,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMg+I,iBAAA,GAAN,MAAMA,iBAAA,SAAyBtV,gBAAA,CAAiB,EAoBhD;AAlBIsV,iBAAA,CAAKv9K,IAAA,GAAuB,sBAAM;EAChC,IAAIw9K,6BAAA;EACJ,OAAO,SAASC,yBAAyBpjL,CAAA,EAAG;IAC1C,QAAQmjL,6BAAA,KAAkCA,6BAAA,GAAmC9iI,qBAAA,CAAsB6iI,iBAAgB,IAAIljL,CAAA,IAAKkjL,iBAAgB;EAC9I;AACF,GAAG;AAGHA,iBAAA,CAAKt+I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMigL,iBAAA;EACNp+I,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxCI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS+4J,gBAAA;IACT94J,WAAA,EAAaouK;EACf,CAAC,CAAC,GAAMxyF,0BAA0B;AACpC,CAAC;AAlBL,IAAM2yF,gBAAA,GAANH,iBAAA;AAAA,CAqBC,MAAM;EACL,CAAC,OAAOrmL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBm9K,gBAAA,EAAkB,CAAC;IACzFpgL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS+4J,gBAAA;QACT94J,WAAA,EAAauuK;MACf,CAAC;MACDn+I,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMo+I,aAAA,GAAN,MAAMA,aAAA,SAAqBtU,YAAA,CAAa;EAAA;EAEtC,IAAIjzK,KAAA,EAAO;IACT,OAAO,KAAK+xK,KAAA;EACd;EACA,IAAI/xK,KAAKA,IAAA,EAAM;IACb,KAAKgyK,aAAA,CAAchyK,IAAI;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAyyK,0BAAA,EAA4B;IAC1B,MAAMA,yBAAA,CAA0B;IAChC,KAAKC,mBAAA,CAAoBjyK,IAAA,CAAK,cAAc,KAAKkyK,oBAAoB,EAAE;EACzE;AA0BF;AAxBI4U,aAAA,CAAK39K,IAAA,GAAuB,sBAAM;EAChC,IAAI49K,yBAAA;EACJ,OAAO,SAASC,qBAAqBxjL,CAAA,EAAG;IACtC,QAAQujL,yBAAA,KAA8BA,yBAAA,GAA+BljI,qBAAA,CAAsBijI,aAAY,IAAItjL,CAAA,IAAKsjL,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAK1+I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMqgL,aAAA;EACNx+I,SAAA,EAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;EACpCC,MAAA,EAAQ;IACNhpC,IAAA,EAAM,CAAIisD,UAAA,CAAasnB,IAAA,EAAM,gBAAgB,MAAM;EACrD;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASm6J,YAAA;IACTl6J,WAAA,EAAawuK;EACf,GAAG;IACDzuK,OAAA,EAAS;IACTC,WAAA,EAAawuK;EACf,CAAC,CAAC,GAAM5yF,0BAA0B;AACpC,CAAC;AAzCL,IAAM+yF,YAAA,GAANH,aAAA;AAAA,CA4CC,MAAM;EACL,CAAC,OAAOzmL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBu9K,YAAA,EAAc,CAAC;IACrFxgL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASm6J,YAAA;QACTl6J,WAAA,EAAa2uK;MACf,GAAG;QACD5uK,OAAA,EAAS;QACTC,WAAA,EAAa2uK;MACf,CAAC;MACDv+I,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM;IACRnpC,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,cAAc;IACvB,CAAC;EACH,CAAC;AACH,GAAG;AAEH,IAAM8zK,cAAA,GAAN,MAAMA,cAAA,SAAsBrU,aAAA,CAAc,EAkB1C;AAhBIqU,cAAA,CAAK/9K,IAAA,GAAuB,sBAAM;EAChC,IAAIg+K,0BAAA;EACJ,OAAO,SAASC,sBAAsB5jL,CAAA,EAAG;IACvC,QAAQ2jL,0BAAA,KAA+BA,0BAAA,GAAgCtjI,qBAAA,CAAsBqjI,cAAa,IAAI1jL,CAAA,IAAK0jL,cAAa;EAClI;AACF,GAAG;AAGHA,cAAA,CAAK9+I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMygL,cAAA;EACN5+I,SAAA,EAAW,CAAC,CAAC,iBAAiB,GAAG,CAAC,MAAM,mBAAmB,EAAE,CAAC;EAC9D47C,SAAA,EAAW,CAAC,QAAQ,gBAAgB,GAAG,uBAAuB,6BAA6B;EAC3Fx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAhBL,IAAMmzF,aAAA,GAANH,cAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAO7mL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB29K,aAAA,EAAe,CAAC;IACtF5gL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAM4+I,cAAA,GAAN,MAAMA,cAAA,SAAsBrU,aAAA,CAAc,EAkB1C;AAhBIqU,cAAA,CAAKn+K,IAAA,GAAuB,sBAAM;EAChC,IAAIo+K,0BAAA;EACJ,OAAO,SAASC,sBAAsBhkL,CAAA,EAAG;IACvC,QAAQ+jL,0BAAA,KAA+BA,0BAAA,GAAgC1jI,qBAAA,CAAsByjI,cAAa,IAAI9jL,CAAA,IAAK8jL,cAAa;EAClI;AACF,GAAG;AAGHA,cAAA,CAAKl/I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6gL,cAAA;EACNh/I,SAAA,EAAW,CAAC,CAAC,iBAAiB,GAAG,CAAC,MAAM,mBAAmB,EAAE,CAAC;EAC9D47C,SAAA,EAAW,CAAC,GAAG,uBAAuB,sBAAsB;EAC5Dx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAhBL,IAAMuzF,aAAA,GAANH,cAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOjnL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+9K,aAAA,EAAe,CAAC;IACtFhhL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMg/I,QAAA,GAAN,MAAMA,QAAA,SAAgBtU,OAAA,CAAQ,EAkB9B;AAhBIsU,QAAA,CAAKv+K,IAAA,GAAuB,sBAAM;EAChC,IAAIw+K,oBAAA;EACJ,OAAO,SAASC,gBAAgBpkL,CAAA,EAAG;IACjC,QAAQmkL,oBAAA,KAAyBA,oBAAA,GAA0B9jI,qBAAA,CAAsB6jI,QAAO,IAAIlkL,CAAA,IAAKkkL,QAAO;EAC1G;AACF,GAAG;AAGHA,QAAA,CAAKt/I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMihL,QAAA;EACNp/I,SAAA,EAAW,CAAC,CAAC,UAAU,GAAG,CAAC,MAAM,YAAY,EAAE,CAAC;EAChD47C,SAAA,EAAW,CAAC,GAAG,gBAAgB,sBAAsB;EACrDx7C,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAA0B;AAC1C,CAAC;AAhBL,IAAM2zF,OAAA,GAANH,QAAA;AAAA,CAmBC,MAAM;EACL,CAAC,OAAOrnL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBm+K,OAAA,EAAS,CAAC;IAChFphL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAMo/I,YAAA,GAAe;AAKrB,IAAMC,gBAAA,GAAN,MAAMA,gBAAA,SAAwBtT,eAAA,CAAgB,EAwB9C;AAtBIsT,gBAAA,CAAK5+K,IAAA,GAAuB,sBAAM;EAChC,IAAI6+K,4BAAA;EACJ,OAAO,SAASC,wBAAwBzkL,CAAA,EAAG;IACzC,QAAQwkL,4BAAA,KAAiCA,4BAAA,GAAkCnkI,qBAAA,CAAsBkkI,gBAAe,IAAIvkL,CAAA,IAAKukL,gBAAe;EAC1I;AACF,GAAG;AAGHA,gBAAA,CAAK3/I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMshL,gBAAA;EACNz/I,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,SAAS;IAC5D0+F,MAAA,EAAQ,CAAIhmH,UAAA,CAAaC,0BAAA,EAA4B,yBAAyB,UAAUC,gBAAgB;EAC1G;EACAhjB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASo8J,eAAA;IACTn8J,WAAA,EAAayvK;EACf,CAAC,CAAC,GAAMp8H,wBAAA,EAA6BuoC,0BAA0B;AACjE,CAAC;AAtBL,IAAMg0F,eAAA,GAANH,gBAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAO1nL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBw+K,eAAA,EAAiB,CAAC;IACxFzhL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASo8J,eAAA;QACTn8J,WAAA,EAAa4vK;MACf,CAAC;MACD3/I,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,GAAG;QACD39D,IAAA,EAAM;QACN29D,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;MACDhjB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAMy/I,gBAAA,GAAN,MAAMA,gBAAA,SAAwBzT,eAAA,CAAgB,EAwB9C;AAtBIyT,gBAAA,CAAKh/K,IAAA,GAAuB,sBAAM;EAChC,IAAIi/K,4BAAA;EACJ,OAAO,SAASC,wBAAwB7kL,CAAA,EAAG;IACzC,QAAQ4kL,4BAAA,KAAiCA,4BAAA,GAAkCvkI,qBAAA,CAAsBskI,gBAAe,IAAI3kL,CAAA,IAAK2kL,gBAAe;EAC1I;AACF,GAAG;AAGHA,gBAAA,CAAK//I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0hL,gBAAA;EACN7/I,SAAA,EAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;EACvCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,SAAS;IAC5D0+F,MAAA,EAAQ,CAAIhmH,UAAA,CAAaC,0BAAA,EAA4B,yBAAyB,UAAUC,gBAAgB;EAC1G;EACAhjB,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASq8J,eAAA;IACTp8J,WAAA,EAAa6vK;EACf,CAAC,CAAC,GAAMx8H,wBAAA,EAA6BuoC,0BAA0B;AACjE,CAAC;AAtBL,IAAMo0F,eAAA,GAANH,gBAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAO9nL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB4+K,eAAA,EAAiB,CAAC;IACxF7hL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASq8J,eAAA;QACTp8J,WAAA,EAAagwK;MACf,CAAC;MACD//I,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,GAAG;QACD39D,IAAA,EAAM;QACN29D,KAAA,EAAO;QACPnR,SAAA,EAAWL;MACb,CAAC;MACDhjB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAM6/I,UAAA,GAAN,MAAMA,UAAA,SAAkBnT,SAAA,CAAU,EAwBlC;AAtBImT,UAAA,CAAKp/K,IAAA,GAAuB,sBAAM;EAChC,IAAIq/K,sBAAA;EACJ,OAAO,SAASC,kBAAkBjlL,CAAA,EAAG;IACnC,QAAQglL,sBAAA,KAA2BA,sBAAA,GAA4B3kI,qBAAA,CAAsB0kI,UAAS,IAAI/kL,CAAA,IAAK+kL,UAAS;EAClH;AACF,GAAG;AAGHA,UAAA,CAAKngJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM8hL,UAAA;EACNjgJ,SAAA,EAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;EACjCC,MAAA,EAAQ;IACN8rI,OAAA,EAAS,CAAI7oH,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,SAAS;IAC7DqiG,IAAA,EAAM,CAAI3pH,UAAA,CAAasnB,IAAA,EAAM,iBAAiB,MAAM;EACtD;EACApqC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS+8J,SAAA;IACT98J,WAAA,EAAaiwK;EACf,CAAC,CAAC,GAAMr0F,0BAA0B;AACpC,CAAC;AAtBL,IAAMw0F,SAAA,GAANH,UAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOloL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBg/K,SAAA,EAAW,CAAC;IAClFjiL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS+8J,SAAA;QACT98J,WAAA,EAAaowK;MACf,CAAC;MACDngJ,MAAA,EAAQ,CAAC;QACPhpC,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,GAAG;QACD39D,IAAA,EAAM;QACN29D,KAAA,EAAO;MACT,CAAC;MACDx0B,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMigJ,aAAA,GAAN,MAAMA,aAAA,SAAqB9S,YAAA,CAAa,EAgCxC;AA9BI8S,aAAA,CAAKx/K,IAAA,GAAuB,sBAAM;EAChC,IAAIy/K,yBAAA;EACJ,OAAO,SAASC,qBAAqBrlL,CAAA,EAAG;IACtC,QAAQolL,yBAAA,KAA8BA,yBAAA,GAA+B/kI,qBAAA,CAAsB8kI,aAAY,IAAInlL,CAAA,IAAKmlL,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAKn9I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMkiL,aAAA;EACNrgJ,SAAA,EAAW,CAAC,CAAC,gBAAgB,GAAG,CAAC,MAAM,kBAAkB,EAAE,CAAC;EAC5D47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,sBAAsB,4BAA4B;EAChFz7C,QAAA,EAAU,CAAC,cAAc;EACzBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASw9J,YAAA;IACTv9J,WAAA,EAAaqwK;EACf,CAAC,CAAC,GAAMz0F,0BAAA,EAA+BxoD,mBAAmB;EAC1DC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAASi9I,sBAAsB/8I,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AA9BL,IAAMwlK,YAAA,GAANJ,aAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOtoL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq/K,YAAA,EAAc,CAAC;IACrFtiL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUi8I,YAAA;MACVhqK,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCrqC,QAAA,EAAU;MACV7wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAASw9J,YAAA;QACTv9J,WAAA,EAAaywK;MACf,CAAC;MACDrgJ,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMuT,aAAA,GAAN,MAAMA,aAAA,SAAqB/S,YAAA,CAAa,EAgCxC;AA9BI+S,aAAA,CAAK7/K,IAAA,GAAuB,sBAAM;EAChC,IAAI8/K,yBAAA;EACJ,OAAO,SAASC,qBAAqB1lL,CAAA,EAAG;IACtC,QAAQylL,yBAAA,KAA8BA,yBAAA,GAA+BplI,qBAAA,CAAsBmlI,aAAY,IAAIxlL,CAAA,IAAKwlL,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAKx9I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMuiL,aAAA;EACN1gJ,SAAA,EAAW,CAAC,CAAC,gBAAgB,GAAG,CAAC,MAAM,kBAAkB,EAAE,CAAC;EAC5D47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,sBAAsB,qBAAqB;EACzEz7C,QAAA,EAAU,CAAC,cAAc;EACzBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAAS49J,YAAA;IACT39J,WAAA,EAAa0wK;EACf,CAAC,CAAC,GAAM90F,0BAAA,EAA+BxoD,mBAAmB;EAC1DC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAASs9I,sBAAsBp9I,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AA9BL,IAAM6lK,YAAA,GAANJ,aAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAO3oL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB0/K,YAAA,EAAc,CAAC;IACrF3iL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUi8I,YAAA;MACVhqK,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCrqC,QAAA,EAAU;MACV7wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS49J,YAAA;QACT39J,WAAA,EAAa8wK;MACf,CAAC;MACD1gJ,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAM4T,OAAA,GAAN,MAAMA,OAAA,SAAehT,MAAA,CAAO,EAgC5B;AA9BIgT,OAAA,CAAKlgL,IAAA,GAAuB,sBAAM;EAChC,IAAImgL,mBAAA;EACJ,OAAO,SAASC,eAAe/lL,CAAA,EAAG;IAChC,QAAQ8lL,mBAAA,KAAwBA,mBAAA,GAAyBzlI,qBAAA,CAAsBwlI,OAAM,IAAI7lL,CAAA,IAAK6lL,OAAM;EACtG;AACF,GAAG;AAGHA,OAAA,CAAK79I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM4iL,OAAA;EACN/gJ,SAAA,EAAW,CAAC,CAAC,SAAS,GAAG,CAAC,MAAM,WAAW,EAAE,CAAC;EAC9C47C,SAAA,EAAW,CAAC,QAAQ,OAAO,GAAG,eAAe,qBAAqB;EAClEz7C,QAAA,EAAU,CAAC,QAAQ;EACnBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASg+J,MAAA;IACT/9J,WAAA,EAAa+wK;EACf,CAAC,CAAC,GAAMn1F,0BAAA,EAA+BxoD,mBAAmB;EAC1DC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;EAC9BhhD,QAAA,EAAU,SAAS29I,gBAAgBz9I,EAAA,EAAIlb,GAAA,EAAK;IAC1C,IAAIkb,EAAA,GAAK,GAAG;MACPi/H,kBAAA,CAAmB,GAAG,CAAC;IAC5B;EACF;EACA/+H,YAAA,EAAc,CAACwpI,aAAa;EAC5BlyJ,aAAA,EAAe;AACjB,CAAC;AA9BL,IAAMkmK,MAAA,GAANJ,OAAA;AAAA,CAiCC,MAAM;EACL,CAAC,OAAOhpL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+/K,MAAA,EAAQ,CAAC;IAC/EhjL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAUi8I,YAAA;MACVhqK,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;MACV;MAAA;MAAA;MAGA8tE,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCrqC,QAAA,EAAU;MACV7wB,SAAA,EAAW,CAAC;QACVS,OAAA,EAASg+J,MAAA;QACT/9J,WAAA,EAAamxK;MACf,CAAC;MACD/gJ,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC4pJ,aAAa;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMiU,aAAA,GAAN,MAAMA,aAAA,SAAqBjT,YAAA,CAAa;EACtC73K,YAAA,EAAc;IACZ,MAAM,GAAG4b,SAAS;IAClB,KAAK+7J,iBAAA,GAAoB;EAC3B;AAoBF;AAlBImT,aAAA,CAAKvgL,IAAA,GAAuB,sBAAM;EAChC,IAAIwgL,yBAAA;EACJ,OAAO,SAASC,qBAAqBpmL,CAAA,EAAG;IACtC,QAAQmmL,yBAAA,KAA8BA,yBAAA,GAA+B9lI,qBAAA,CAAsB6lI,aAAY,IAAIlmL,CAAA,IAAKkmL,aAAY;EAC9H;AACF,GAAG;AAGHA,aAAA,CAAKthJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMijL,aAAA;EACNphJ,SAAA,EAAW,CAAC,CAAC,eAAe,gBAAgB,EAAE,CAAC;EAC/CI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAAC;IAChCthE,OAAA,EAASo+J,YAAA;IACTn+J,WAAA,EAAaoxK;EACf,CAAC,CAAC,GAAMx1F,0BAA0B;AACpC,CAAC;AAtBL,IAAM21F,YAAA,GAANH,aAAA;AAAA,CAyBC,MAAM;EACL,CAAC,OAAOrpL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBmgL,YAAA,EAAc,CAAC;IACrFpjL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVpV,SAAA,EAAW,CAAC;QACVS,OAAA,EAASo+J,YAAA;QACTn+J,WAAA,EAAauxK;MACf,CAAC;MACDnhJ,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAWH,IAAMohJ,cAAA,GAAN,MAAMA,cAAA,SAAsB/E,aAAA,CAAc,EA6B1C;AA3BI+E,cAAA,CAAK3gL,IAAA,GAAuB,sBAAM;EAChC,IAAI4gL,0BAAA;EACJ,OAAO,SAASC,sBAAsBxmL,CAAA,EAAG;IACvC,QAAQumL,0BAAA,KAA+BA,0BAAA,GAAgClmI,qBAAA,CAAsBimI,cAAa,IAAItmL,CAAA,IAAKsmL,cAAa;EAClI;AACF,GAAG;AAGHA,cAAA,CAAKt+I,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMqjL,cAAA;EACNxhJ,SAAA,EAAW,CAAC,CAAC,iBAAiB,CAAC;EAC/BI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,gBAAgB,EAAE,GAAG,CAAC,mBAAmB,IAAI,GAAG,cAAc,GAAG,kBAAkB,GAAG,CAAC,YAAY,IAAI,GAAG,cAAc,GAAG,YAAY,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC;EAC7LhhD,QAAA,EAAU,SAASo+I,uBAAuBl+I,EAAA,EAAIlb,GAAA,EAAK;IACjD,IAAIkb,EAAA,GAAK,GAAG;MACP84I,uBAAA,CAAwB,GAAG,CAAC;MAC5Bz1F,UAAA,CAAW,GAAGm2F,2BAAA,EAA6B,GAAG,GAAG,MAAM,CAAC,EAAE,GAAGC,2BAAA,EAA6B,GAAG,GAAG,MAAM,CAAC;MACvGV,qBAAA,CAAsB;IAC3B;EACF;EACA74I,YAAA,EAAc,CAACg7I,YAAA,EAAcR,gBAAA,EAAkBY,aAAA,EAAehB,UAAA,EAAYwB,OAAO;EACjFtkK,aAAA,EAAe;AACjB,CAAC;AA3BL,IAAM2mK,aAAA,GAANJ,cAAA;AAAA,CA8BC,MAAM;EACL,CAAC,OAAOzpL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBwgL,aAAA,EAAe,CAAC;IACtFzjL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV6e,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MAUVtoB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAOjC8Y,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzC/gF,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACo7J,YAAA,EAAcR,gBAAA,EAAkBY,aAAA,EAAehB,UAAA,EAAYwB,OAAO;IAC9E,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM7C,yBAAwB;AAAA;AAE9BiB,QAAA,EAAUN,cAAA;AAAA;AAEVc,gBAAA,EAAkByB,eAAA,EAAiBjB,YAAA,EAAcZ,UAAA,EAAYqC,SAAA,EAAW7B,gBAAA,EAAkByB,eAAA;AAAA;AAE1FjB,aAAA,EAAeQ,OAAA,EAASJ,aAAA;AAAA;AAExBsB,YAAA,EAAcU,MAAA,EAAQL,YAAA,EAAcS,YAAA,EAAcK,aAAA,CAAa;AAC/D,IAAMC,eAAA,GAAN,MAAMA,eAAA,CAAe,EAgBrB;AAdIA,eAAA,CAAKhhL,IAAA,GAAO,SAASihL,uBAAuB5mL,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAK2mL,eAAA,EAAgB;AACnC;AAGAA,eAAA,CAAK1wK,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM0jL;AACR,CAAC;AAGDA,eAAA,CAAKxwK,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiB0oG,cAAA,EAAgB1oG,eAAe;AAC5D,CAAC;AAdL,IAAM4tG,cAAA,GAANF,eAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAO9pL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2gL,cAAA,EAAgB,CAAC;IACvF5jL,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB0oG,cAAA,EAAgB,GAAGH,sBAAqB;MACnE/4J,OAAA,EAAS,CAACwwD,eAAA,EAAiBuoG,sBAAqB;IAClD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAMsF,gBAAA,GAAmB;AAczB,IAAMC,kBAAA,GAAN,cAAiCnzF,UAAA,CAAW;EAAA;EAE1C,IAAIllF,KAAA,EAAO;IACT,OAAO,KAAKslF,KAAA,CAAM73F,KAAA;EACpB;EACA,IAAIuS,KAAKA,IAAA,EAAM;IACbA,IAAA,GAAOtR,KAAA,CAAMkB,OAAA,CAAQoQ,IAAI,IAAIA,IAAA,GAAO,EAAC;IACrC,KAAKslF,KAAA,CAAM9rF,IAAA,CAAKwG,IAAI;IAGpB,IAAI,CAAC,KAAKs4K,0BAAA,EAA4B;MACpC,KAAKC,WAAA,CAAYv4K,IAAI;IACvB;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAItQ,OAAA,EAAS;IACX,OAAO,KAAK8oL,OAAA,CAAQ/qL,KAAA;EACtB;EACA,IAAIiC,OAAOA,SAAQ;IACjB,KAAK8oL,OAAA,CAAQh/K,IAAA,CAAK9J,OAAM;IAGxB,IAAI,CAAC,KAAK4oL,0BAAA,EAA4B;MACpC,KAAKC,WAAA,CAAY,KAAKv4K,IAAI;IAC5B;EACF;EAAA;AAAA;AAAA;AAAA;EAKA,IAAIqiB,KAAA,EAAO;IACT,OAAO,KAAK05I,KAAA;EACd;EACA,IAAI15I,KAAKA,IAAA,EAAM;IACb,KAAK05I,KAAA,GAAQ15I,IAAA;IACb,KAAKo2J,yBAAA,CAA0B;EACjC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWA,IAAIC,UAAA,EAAY;IACd,OAAO,KAAKC,UAAA;EACd;EACA,IAAID,UAAUA,SAAA,EAAW;IACvB,KAAKC,UAAA,GAAaD,SAAA;IAClB,KAAKD,yBAAA,CAA0B;EACjC;EACA/rL,YAAYksL,WAAA,GAAc,EAAC,EAAG;IAC5B,MAAM;IAEN,KAAKC,WAAA,GAAc,IAAI1nJ,eAAA,CAAgB,EAAE;IAEzC,KAAKqnJ,OAAA,GAAU,IAAIrnJ,eAAA,CAAgB,EAAE;IAErC,KAAK2nJ,oBAAA,GAAuB,IAAIluI,OAAA,CAAQ;IAKxC,KAAK0tI,0BAAA,GAA6B;IAUlC,KAAKS,mBAAA,GAAsB,CAAC/4K,IAAA,EAAMg5K,YAAA,KAAiB;MACjD,MAAMvrL,KAAA,GAAQuS,IAAA,CAAKg5K,YAAY;MAC/B,IAAI7wH,cAAA,CAAe16D,KAAK,GAAG;QACzB,MAAMwrL,WAAA,GAAc7wH,MAAA,CAAO36D,KAAK;QAGhC,OAAOwrL,WAAA,GAAcb,gBAAA,GAAmBa,WAAA,GAAcxrL,KAAA;MACxD;MACA,OAAOA,KAAA;IACT;IAUA,KAAKyrL,QAAA,GAAW,CAACl5K,IAAA,EAAMqiB,IAAA,KAAS;MAC9B,MAAMw5D,MAAA,GAASx5D,IAAA,CAAKw5D,MAAA;MACpB,MAAMtoB,SAAA,GAAYlxC,IAAA,CAAKkxC,SAAA;MACvB,IAAI,CAACsoB,MAAA,IAAUtoB,SAAA,IAAa,IAAI;QAC9B,OAAOvzD,IAAA;MACT;MACA,OAAOA,IAAA,CAAKqiB,IAAA,CAAK,CAACX,CAAA,EAAGC,CAAA,KAAM;QACzB,IAAIw3J,MAAA,GAAS,KAAKJ,mBAAA,CAAoBr3J,CAAA,EAAGm6D,MAAM;QAC/C,IAAIu9F,MAAA,GAAS,KAAKL,mBAAA,CAAoBp3J,CAAA,EAAGk6D,MAAM;QAI/C,MAAMw9F,UAAA,GAAa,OAAOF,MAAA;QAC1B,MAAMG,UAAA,GAAa,OAAOF,MAAA;QAC1B,IAAIC,UAAA,KAAeC,UAAA,EAAY;UAC7B,IAAID,UAAA,KAAe,UAAU;YAC3BF,MAAA,IAAU;UACZ;UACA,IAAIG,UAAA,KAAe,UAAU;YAC3BF,MAAA,IAAU;UACZ;QACF;QAKA,IAAIG,gBAAA,GAAmB;QACvB,IAAIJ,MAAA,IAAU,QAAQC,MAAA,IAAU,MAAM;UAEpC,IAAID,MAAA,GAASC,MAAA,EAAQ;YACnBG,gBAAA,GAAmB;UACrB,WAAWJ,MAAA,GAASC,MAAA,EAAQ;YAC1BG,gBAAA,GAAmB;UACrB;QACF,WAAWJ,MAAA,IAAU,MAAM;UACzBI,gBAAA,GAAmB;QACrB,WAAWH,MAAA,IAAU,MAAM;UACzBG,gBAAA,GAAmB;QACrB;QACA,OAAOA,gBAAA,IAAoBhmH,SAAA,IAAa,QAAQ,IAAI;MACtD,CAAC;IACH;IAWA,KAAKimH,eAAA,GAAkB,CAACx5K,IAAA,EAAMtQ,YAAW;MAEvC,MAAM+pL,OAAA,GAAUprL,MAAA,CAAOI,IAAA,CAAKuR,IAAI,EAAEvL,MAAA,CAAO,CAACilL,WAAA,EAAansL,GAAA,KAAQ;QAO7D,OAAOmsL,WAAA,GAAc15K,IAAA,CAAKzS,GAAG,IAAI;MACnC,GAAG,EAAE,EAAEC,WAAA,CAAY;MAEnB,MAAMmsL,iBAAA,GAAoBjqL,QAAOhC,IAAA,CAAK,EAAEF,WAAA,CAAY;MACpD,OAAOisL,OAAA,CAAQrsL,OAAA,CAAQusL,iBAAiB,KAAK;IAC/C;IACA,KAAKr0F,KAAA,GAAQ,IAAIn0D,eAAA,CAAgBynJ,WAAW;IAC5C,KAAKH,yBAAA,CAA0B;EACjC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAA,0BAAA,EAA4B;IAO1B,MAAMte,UAAA,GAAa,KAAK4B,KAAA,GAAQhwH,KAAA,CAAM,KAAKgwH,KAAA,CAAM5B,UAAA,EAAY,KAAK4B,KAAA,CAAM5F,WAAW,IAAI9/J,EAAA,CAAG,IAAI;IAC9F,MAAMujL,UAAA,GAAa,KAAKjB,UAAA,GAAa5sI,KAAA,CAAM,KAAK4sI,UAAA,CAAW7jB,IAAA,EAAM,KAAKgkB,oBAAA,EAAsB,KAAKH,UAAA,CAAWxiB,WAAW,IAAI9/J,EAAA,CAAG,IAAI;IAClI,MAAMw8F,UAAA,GAAa,KAAKvN,KAAA;IAExB,MAAMu0F,YAAA,GAAetiJ,aAAA,CAAc,CAACs7D,UAAA,EAAY,KAAK2lF,OAAO,CAAC,EAAEliL,IAAA,CAAKzG,GAAA,CAAI,CAAC,CAACmQ,IAAI,MAAM,KAAKu4K,WAAA,CAAYv4K,IAAI,CAAC,CAAC;IAE3G,MAAM85K,WAAA,GAAcviJ,aAAA,CAAc,CAACsiJ,YAAA,EAAc1f,UAAU,CAAC,EAAE7jK,IAAA,CAAKzG,GAAA,CAAI,CAAC,CAACmQ,IAAI,MAAM,KAAK+5K,UAAA,CAAW/5K,IAAI,CAAC,CAAC;IAEzG,MAAMg6K,aAAA,GAAgBziJ,aAAA,CAAc,CAACuiJ,WAAA,EAAaF,UAAU,CAAC,EAAEtjL,IAAA,CAAKzG,GAAA,CAAI,CAAC,CAACmQ,IAAI,MAAM,KAAKi6K,SAAA,CAAUj6K,IAAI,CAAC,CAAC;IAEzG,KAAKs4K,0BAAA,EAA4BjhJ,WAAA,CAAY;IAC7C,KAAKihJ,0BAAA,GAA6B0B,aAAA,CAAcxiJ,SAAA,CAAUx3B,IAAA,IAAQ,KAAK64K,WAAA,CAAYr/K,IAAA,CAAKwG,IAAI,CAAC;EAC/F;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAu4K,YAAYv4K,IAAA,EAAM;IAIhB,KAAK65K,YAAA,GAAe,KAAKnqL,MAAA,IAAU,QAAQ,KAAKA,MAAA,KAAW,KAAKsQ,IAAA,GAAOA,IAAA,CAAKtQ,MAAA,CAAOwyB,GAAA,IAAO,KAAKs3J,eAAA,CAAgBt3J,GAAA,EAAK,KAAKxyB,MAAM,CAAC;IAChI,IAAI,KAAKgpL,SAAA,EAAW;MAClB,KAAKwB,gBAAA,CAAiB,KAAKL,YAAA,CAAarrL,MAAM;IAChD;IACA,OAAO,KAAKqrL,YAAA;EACd;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAE,WAAW/5K,IAAA,EAAM;IAEf,IAAI,CAAC,KAAKqiB,IAAA,EAAM;MACd,OAAOriB,IAAA;IACT;IACA,OAAO,KAAKk5K,QAAA,CAASl5K,IAAA,CAAK1S,KAAA,CAAM,GAAG,KAAK+0B,IAAI;EAC9C;EAAA;AAAA;AAAA;AAAA;EAKA43J,UAAUj6K,IAAA,EAAM;IACd,IAAI,CAAC,KAAK04K,SAAA,EAAW;MACnB,OAAO14K,IAAA;IACT;IACA,MAAMisB,UAAA,GAAa,KAAKysJ,SAAA,CAAUljB,SAAA,GAAY,KAAKkjB,SAAA,CAAUrlB,QAAA;IAC7D,OAAOrzJ,IAAA,CAAK1S,KAAA,CAAM2+B,UAAA,EAAYA,UAAA,GAAa,KAAKysJ,SAAA,CAAUrlB,QAAQ;EACpE;EAAA;AAAA;AAAA;AAAA;AAAA;EAMA6mB,iBAAiBC,kBAAA,EAAoB;IACnC36K,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;MAC3B,MAAM0/K,SAAA,GAAY,KAAKA,SAAA;MACvB,IAAI,CAACA,SAAA,EAAW;QACd;MACF;MACAA,SAAA,CAAUlqL,MAAA,GAAS2rL,kBAAA;MAEnB,IAAIzB,SAAA,CAAUljB,SAAA,GAAY,GAAG;QAC3B,MAAM4kB,aAAA,GAAgBxiG,IAAA,CAAKqU,IAAA,CAAKysF,SAAA,CAAUlqL,MAAA,GAASkqL,SAAA,CAAUrlB,QAAQ,IAAI,KAAK;QAC9E,MAAMgnB,YAAA,GAAeziG,IAAA,CAAK9K,GAAA,CAAI4rG,SAAA,CAAUljB,SAAA,EAAW4kB,aAAa;QAChE,IAAIC,YAAA,KAAiB3B,SAAA,CAAUljB,SAAA,EAAW;UACxCkjB,SAAA,CAAUljB,SAAA,GAAY6kB,YAAA;UAGtB,KAAKvB,oBAAA,CAAqBt/K,IAAA,CAAK;QACjC;MACF;IACF,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKA4rF,QAAA,EAAU;IACR,IAAI,CAAC,KAAKkzF,0BAAA,EAA4B;MACpC,KAAKG,yBAAA,CAA0B;IACjC;IACA,OAAO,KAAKI,WAAA;EACd;EAAA;AAAA;AAAA;AAAA;EAKA9uH,WAAA,EAAa;IACX,KAAKuuH,0BAAA,EAA4BjhJ,WAAA,CAAY;IAC7C,KAAKihJ,0BAAA,GAA6B;EACpC;AACF;;;ACjvCA,SAASgC,sCAAsCzgJ,EAAA,EAAIlb,GAAA,EAAK;EACtD,IAAIkb,EAAA,GAAK,GAAG;IACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;IAC7BnlD,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,UAAU,CAAC;IAC1CxvB,UAAA,CAAW,SAAS,SAASqhI,8DAAA,EAAgE;MAC3FvsD,aAAA,CAAcJ,GAAG;MACpB,MAAMrL,MAAA,GAAYl6C,aAAA,CAAc;MAChC,OAAU4lD,WAAA,CAAY1L,MAAA,CAAOpuE,MAAA,CAAO,CAAC;IACvC,CAAC;IACEw0B,MAAA,CAAO,CAAC;IACRC,YAAA,CAAa,EAAE;EACpB;EACA,IAAI/uC,EAAA,GAAK,GAAG;IACV,MAAM0oF,MAAA,GAAYl6C,aAAA,CAAc;IAC7BQ,SAAA,CAAU,CAAC;IACXC,kBAAA,CAAmB,KAAKy5C,MAAA,CAAOviH,IAAA,CAAKm0C,MAAA,EAAQ,GAAG;EACpD;AACF;AACA,IAAM2zB,QAAM,CAAC,OAAO;AACpB,SAAS0yG,4CAA4C3gJ,EAAA,EAAIlb,GAAA,EAAK,CAAC;AAC/D,IAAM87J,WAAA,GAAc7iG,IAAA,CAAK8iG,GAAA,CAAI,GAAG,EAAE,IAAI;AAItC,IAAMC,cAAA,GAAN,MAAqB;EACnBjuL,YAAY+qH,iBAAA,EAAmBva,WAAA,EAAa;IAC1C,KAAKA,WAAA,GAAcA,WAAA;IAEnB,KAAK09E,eAAA,GAAkB,IAAIhwI,OAAA,CAAQ;IAEnC,KAAKqyE,YAAA,GAAe,IAAIryE,OAAA,CAAQ;IAEhC,KAAKiwI,SAAA,GAAY,IAAIjwI,OAAA,CAAQ;IAE7B,KAAKkwI,kBAAA,GAAqB;IAC1B,KAAKrjE,iBAAA,GAAoBA,iBAAA;IACzBA,iBAAA,CAAkBsjE,OAAA,CAAQvjJ,SAAA,CAAU,MAAM,KAAKwjJ,cAAA,CAAe,CAAC;EACjE;EAAA;EAEAC,QAAA,EAAU;IACR,IAAI,CAAC,KAAKL,eAAA,CAAgBr7H,MAAA,EAAQ;MAChC,KAAKk4D,iBAAA,CAAkByjE,IAAA,CAAK;IAC9B;IACA37G,YAAA,CAAa,KAAK47G,kBAAkB;EACtC;EAAA;EAEAC,kBAAA,EAAoB;IAClB,IAAI,CAAC,KAAKP,SAAA,CAAUt7H,MAAA,EAAQ;MAC1B,KAAKu7H,kBAAA,GAAqB;MAC1B,KAAKD,SAAA,CAAUrhL,IAAA,CAAK;MACpB,KAAKqhL,SAAA,CAAU3/K,QAAA,CAAS;MACxB,KAAK+/K,OAAA,CAAQ;IACf;IACA17G,YAAA,CAAa,KAAK47G,kBAAkB;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAE,gBAAA,EAAkB;IAChB,KAAKD,iBAAA,CAAkB;EACzB;EAAA;EAEAE,cAAch8G,QAAA,EAAU;IAGtB,KAAK67G,kBAAA,GAAqBzuI,UAAA,CAAW,MAAM,KAAKuuI,OAAA,CAAQ,GAAGrjG,IAAA,CAAK9K,GAAA,CAAIxN,QAAA,EAAUm7G,WAAW,CAAC;EAC5F;EAAA;EAEAc,MAAA,EAAQ;IACN,IAAI,CAAC,KAAKt+D,YAAA,CAAa19D,MAAA,EAAQ;MAC7B,KAAK09D,YAAA,CAAazjH,IAAA,CAAK;MACvB,KAAKyjH,YAAA,CAAa/hH,QAAA,CAAS;IAC7B;EACF;EAAA;EAEA8/K,eAAA,EAAiB;IACf,KAAK99E,WAAA,CAAY7mD,OAAA,CAAQ;IACzB,IAAI,CAAC,KAAKwkI,SAAA,CAAUt7H,MAAA,EAAQ;MAC1B,KAAKs7H,SAAA,CAAU3/K,QAAA,CAAS;IAC1B;IACA,KAAK0/K,eAAA,CAAgBphL,IAAA,CAAK;MACxBgiL,iBAAA,EAAmB,KAAKV;IAC1B,CAAC;IACD,KAAKF,eAAA,CAAgB1/K,QAAA,CAAS;IAC9B,KAAK4/K,kBAAA,GAAqB;EAC5B;EAAA;EAEAW,eAAA,EAAiB;IACf,OAAO,KAAKb,eAAA;EACd;EAAA;EAEAxiE,YAAA,EAAc;IACZ,OAAO,KAAKX,iBAAA,CAAkBikE,QAAA;EAChC;EAAA;EAEAC,SAAA,EAAW;IACT,OAAO,KAAKd,SAAA;EACd;AACF;AAGA,IAAMe,kBAAA,GAAqB,IAAI/+K,cAAA,CAAe,iBAAiB;AAI/D,IAAMg/K,iBAAA,GAAN,MAAwB;EACtBnvL,YAAA,EAAc;IAEZ,KAAK2yE,UAAA,GAAa;IAKlB,KAAKy8G,mBAAA,GAAsB;IAE3B,KAAKx8G,QAAA,GAAW;IAEhB,KAAKt/D,IAAA,GAAO;IAEZ,KAAK+7K,kBAAA,GAAqB;IAE1B,KAAKC,gBAAA,GAAmB;EAC1B;AACF;AAGA,IAAMC,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAcvB;AAZIA,iBAAA,CAAKhlL,IAAA,GAAO,SAASilL,yBAAyB5qL,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK2qL,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAK/lJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM0nL,iBAAA;EACN7lJ,SAAA,EAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;EACxC47C,SAAA,EAAW,CAAC,GAAG,2BAA2B,qBAAqB;EAC/Dx7C,UAAA,EAAY;AACd,CAAC;AAZL,IAAM2lJ,gBAAA,GAANF,iBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAO9tL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB2kL,gBAAA,EAAkB,CAAC;IACzF5nL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;MACX;IACF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAMwwK,mBAAA,GAAN,MAAMA,mBAAA,CAAmB,EAczB;AAZIA,mBAAA,CAAKnlL,IAAA,GAAO,SAASolL,2BAA2B/qL,CAAA,EAAG;EACjD,OAAO,KAAKA,CAAA,IAAK8qL,mBAAA,EAAoB;AACvC;AAGAA,mBAAA,CAAKlmJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM6nL,mBAAA;EACNhmJ,SAAA,EAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,CAAC;EAC1C47C,SAAA,EAAW,CAAC,GAAG,6BAA6B,uBAAuB;EACnEx7C,UAAA,EAAY;AACd,CAAC;AAZL,IAAM8lJ,kBAAA,GAANF,mBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOjuL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8kL,kBAAA,EAAoB,CAAC;IAC3F/nL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;MACX;IACF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAM2wK,kBAAA,GAAN,MAAMA,kBAAA,CAAkB,EAcxB;AAZIA,kBAAA,CAAKtlL,IAAA,GAAO,SAASulL,0BAA0BlrL,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAKirL,kBAAA,EAAmB;AACtC;AAGAA,kBAAA,CAAKrmJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMgoL,kBAAA;EACNnmJ,SAAA,EAAW,CAAC,CAAC,IAAI,qBAAqB,EAAE,CAAC;EACzC47C,SAAA,EAAW,CAAC,GAAG,4BAA4B,sBAAsB;EACjEx7C,UAAA,EAAY;AACd,CAAC;AAZL,IAAMimJ,iBAAA,GAANF,kBAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOpuL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBilL,iBAAA,EAAmB,CAAC;IAC1FloL,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV0b,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;MACX;IACF,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM8wK,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBhwL,YAAYiwL,WAAA,EAAa38K,IAAA,EAAM;IAC7B,KAAK28K,WAAA,GAAcA,WAAA;IACnB,KAAK38K,IAAA,GAAOA,IAAA;EACd;EAAA;EAEAm0C,OAAA,EAAS;IACP,KAAKwoI,WAAA,CAAYvB,iBAAA,CAAkB;EACrC;EAAA;EAEA,IAAIwB,UAAA,EAAY;IACd,OAAO,CAAC,CAAC,KAAK58K,IAAA,CAAKm0C,MAAA;EACrB;AAqCF;AAnCIuoI,eAAA,CAAKzlL,IAAA,GAAO,SAAS4lL,uBAAuBvrL,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKorL,eAAA,EAAmBhkI,iBAAA,CAAkBiiI,cAAc,GAAMjiI,iBAAA,CAAkBkjI,kBAAkB,CAAC;AACjH;AAGAc,eAAA,CAAKpjJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMmoL,eAAA;EACNtmJ,SAAA,EAAW,CAAC,CAAC,kBAAkB,CAAC;EAChC47C,SAAA,EAAW,CAAC,GAAG,0BAA0B;EACzCz7C,QAAA,EAAU,CAAC,aAAa;EACxBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,oBAAoB,EAAE,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,cAAc,IAAI,qBAAqB,IAAI,GAAG,OAAO,CAAC;EACtHhhD,QAAA,EAAU,SAASmjJ,wBAAwBjjJ,EAAA,EAAIlb,GAAA,EAAK;IAClD,IAAIkb,EAAA,GAAK,GAAG;MACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1BC,MAAA,CAAO,CAAC;MACRC,YAAA,CAAa;MACbsU,UAAA,CAAW,GAAGo9F,qCAAA,EAAuC,GAAG,GAAG,OAAO,CAAC;IACxE;IACA,IAAIzgJ,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU;MACVC,kBAAA,CAAmB,KAAKnqD,GAAA,CAAI3e,IAAA,CAAKrK,OAAA,EAAS,IAAI;MAC9CkzE,SAAA,CAAU;MACVsU,aAAA,CAAc,GAAGx+D,GAAA,CAAIi+J,SAAA,GAAY,IAAI,EAAE;IAC5C;EACF;EACA7iJ,YAAA,EAAc,CAACwoD,SAAA,EAAW45F,gBAAA,EAAkBG,kBAAA,EAAoBG,iBAAiB;EACjFxuK,MAAA,EAAQ,CAAC,yCAAyC;EAClDoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AA/CL,IAAMqjG,cAAA,GAANL,eAAA;AAAA,CAkDC,MAAM;EACL,CAAC,OAAOvuL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBulL,cAAA,EAAgB,CAAC;IACvFxoL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzClgE,OAAA,EAAS,CAAC4oE,SAAA,EAAW45F,gBAAA,EAAkBG,kBAAA,EAAoBG,iBAAiB;MAC5EjmJ,UAAA,EAAY;MACZ5qB,IAAA,EAAM;QACJ,SAAS;MACX;MACA+tB,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,yCAAyC;IACpD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAAMomL;EACR,GAAG;IACDpmL,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC06K,kBAAkB;IAC3B,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAMoB,qBAAA,GAAwB;EAAA;EAE5BC,aAAA,EAAejuI,OAAA,CAAQ,SAAS,CAAChhB,KAAA,CAAM,gBAAgB9f,KAAA,CAAM;IAC3D2rC,SAAA,EAAW;IACXu8B,OAAA,EAAS;EACX,CAAC,CAAC,GAAGpoD,KAAA,CAAM,WAAW9f,KAAA,CAAM;IAC1B2rC,SAAA,EAAW;IACXu8B,OAAA,EAAS;EACX,CAAC,CAAC,GAAGvpC,UAAA,CAAW,gBAAgBs0E,OAAA,CAAQ,kCAAkC,CAAC,GAAGt0E,UAAA,CAAW,0BAA0Bs0E,OAAA,CAAQ,qCAAqCjzG,KAAA,CAAM;IACpKkoE,OAAA,EAAS;EACX,CAAC,CAAC,CAAC,CAAC,CAAC;AACP;AACA,IAAI2hC,YAAW;AAKf,IAAMmlE,qBAAA,GAAN,MAAMA,qBAAA,SAA6BlkF,gBAAA,CAAiB;EAClDtsG,YAAYi+D,OAAA,EAASD,WAAA,EAAa+wB,kBAAA,EAAoB/vB,SAAA,EACtDyxH,cAAA,EAAgB;IACd,MAAM;IACN,KAAKxyH,OAAA,GAAUA,OAAA;IACf,KAAKD,WAAA,GAAcA,WAAA;IACnB,KAAK+wB,kBAAA,GAAqBA,kBAAA;IAC1B,KAAK/vB,SAAA,GAAYA,SAAA;IACjB,KAAKyxH,cAAA,GAAiBA,cAAA;IACtB,KAAK5kK,SAAA,GAAYrgB,MAAA,CAAO4I,QAAQ;IAChC,KAAKs8K,cAAA,GAAiB,mBAAI9+K,GAAA,CAAI;IAE9B,KAAK++K,cAAA,GAAiB;IAEtB,KAAK3uF,UAAA,GAAa;IAElB,KAAK4uF,WAAA,GAAc,IAAI1yI,OAAA,CAAQ;IAE/B,KAAKmwI,OAAA,GAAU,IAAInwI,OAAA,CAAQ;IAE3B,KAAK8wI,QAAA,GAAW,IAAI9wI,OAAA,CAAQ;IAE5B,KAAK2yI,eAAA,GAAkB;IAEvB,KAAKC,cAAA,GAAiB,gCAAgCzlE,WAAU;IAMhE,KAAK7e,eAAA,GAAkBE,MAAA,IAAU;MAC/B,KAAKqkF,kBAAA,CAAmB;MACxB,MAAMvmK,MAAA,GAAS,KAAK4qF,aAAA,CAAc5I,eAAA,CAAgBE,MAAM;MACxD,KAAKskF,oBAAA,CAAqB;MAC1B,OAAOxmK,MAAA;IACT;IAGA,IAAIimK,cAAA,CAAe99G,UAAA,KAAe,eAAe,CAAC89G,cAAA,CAAerB,mBAAA,EAAqB;MACpF,KAAK6B,KAAA,GAAQ;IACf,WAAWR,cAAA,CAAe99G,UAAA,KAAe,OAAO;MAC9C,KAAKs+G,KAAA,GAAQ;IACf,OAAO;MACL,KAAKA,KAAA,GAAQ;IACf;IAGA,IAAI,KAAKjyH,SAAA,CAAUvI,OAAA,EAAS;MAC1B,IAAI,KAAKw6H,KAAA,KAAU,UAAU;QAC3B,KAAKC,KAAA,GAAQ;MACf;MACA,IAAI,KAAKD,KAAA,KAAU,aAAa;QAC9B,KAAKC,KAAA,GAAQ;MACf;IACF;EACF;EAAA;EAEAvkF,sBAAsBD,MAAA,EAAQ;IAC5B,KAAKqkF,kBAAA,CAAmB;IACxB,MAAMvmK,MAAA,GAAS,KAAK4qF,aAAA,CAAczI,qBAAA,CAAsBD,MAAM;IAC9D,KAAKskF,oBAAA,CAAqB;IAC1B,OAAOxmK,MAAA;EACT;EAAA;EAEAoiF,qBAAqBF,MAAA,EAAQ;IAC3B,KAAKqkF,kBAAA,CAAmB;IACxB,MAAMvmK,MAAA,GAAS,KAAK4qF,aAAA,CAAcxI,oBAAA,CAAqBF,MAAM;IAC7D,KAAKskF,oBAAA,CAAqB;IAC1B,OAAOxmK,MAAA;EACT;EAAA;EAEA2mK,eAAennL,KAAA,EAAO;IACpB,MAAM;MACJmmK,SAAA;MACArZ;IACF,IAAI9sJ,KAAA;IACJ,IAAI8sJ,OAAA,KAAY,UAAUqZ,SAAA,KAAc,UAAUrZ,OAAA,KAAY,UAAU;MACtE,KAAKs6B,aAAA,CAAc;IACrB;IACA,IAAIt6B,OAAA,KAAY,WAAW;MAGzB,MAAMu6B,OAAA,GAAU,KAAKrC,QAAA;MACrB,KAAK/wH,OAAA,CAAQ9vD,GAAA,CAAI,MAAM;QACrBkjL,OAAA,CAAQvkL,IAAA,CAAK;QACbukL,OAAA,CAAQ7iL,QAAA,CAAS;MACnB,CAAC;IACH;EACF;EAAA;EAEA8iL,MAAA,EAAQ;IACN,IAAI,CAAC,KAAKtvF,UAAA,EAAY;MACpB,KAAK6uF,eAAA,GAAkB;MAGvB,KAAK9hG,kBAAA,CAAmBzlD,YAAA,CAAa;MACrC,KAAKylD,kBAAA,CAAmBkb,aAAA,CAAc;MACtC,KAAKsnF,qBAAA,CAAsB;IAC7B;EACF;EAAA;EAEA/C,KAAA,EAAO;IAGL,KAAKvwH,OAAA,CAAQ9vD,GAAA,CAAI,MAAM;MAIrB,KAAK0iL,eAAA,GAAkB;MACvB,KAAK9hG,kBAAA,CAAmBzlD,YAAA,CAAa;MAIrC,KAAK00B,WAAA,CAAY/S,aAAA,CAAcloC,YAAA,CAAa,YAAY,EAAE;MAG1D8vD,YAAA,CAAa,KAAK2+G,kBAAkB;IACtC,CAAC;IACD,OAAO,KAAKnD,OAAA;EACd;EAAA;EAEAvsK,YAAA,EAAc;IACZ,KAAKkgF,UAAA,GAAa;IAClB,KAAKyvF,gBAAA,CAAiB;IACtB,KAAKL,aAAA,CAAc;EACrB;EAAA;AAAA;AAAA;AAAA;EAKAA,cAAA,EAAgB;IACd1mI,cAAA,CAAe,MAAM;MACnB,KAAK2jI,OAAA,CAAQvhL,IAAA,CAAK;MAClB,KAAKuhL,OAAA,CAAQ7/K,QAAA,CAAS;IACxB,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;EAKAwiL,qBAAA,EAAuB;IACrB,MAAM/wK,OAAA,GAAU,KAAK+9C,WAAA,CAAY/S,aAAA;IACjC,MAAMymI,YAAA,GAAe,KAAKjB,cAAA,CAAeh+E,UAAA;IACzC,IAAIi/E,YAAA,EAAc;MAChB,IAAI1vL,KAAA,CAAMkB,OAAA,CAAQwuL,YAAY,GAAG;QAE/BA,YAAA,CAAanxL,OAAA,CAAQ2hH,QAAA,IAAYjiG,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAIoxG,QAAQ,CAAC;MAClE,OAAO;QACLjiG,OAAA,CAAQkH,SAAA,CAAUrW,GAAA,CAAI4gL,YAAY;MACpC;IACF;IACA,KAAKC,eAAA,CAAgB;IAIrB,MAAMt1G,KAAA,GAAQ,KAAKu1G,MAAA,CAAO3mI,aAAA;IAC1B,MAAM4mI,UAAA,GAAa;IACnBx1G,KAAA,CAAMl1D,SAAA,CAAU8vD,MAAA,CAAO46G,UAAA,EAAY,CAACx1G,KAAA,CAAMz+D,aAAA,CAAc,IAAIi0K,UAAU,EAAE,CAAC;EAC3E;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAF,gBAAA,EAAkB;IAOhB,MAAMrsK,EAAA,GAAK,KAAKwrK,cAAA;IAChB,MAAMx9G,MAAA,GAAS,KAAKznD,SAAA,CAAUvJ,gBAAA,CAAiB,mDAAmD;IAClG,SAAS4S,CAAA,GAAI,GAAGA,CAAA,GAAIo+C,MAAA,CAAOxxE,MAAA,EAAQozB,CAAA,IAAK;MACtC,MAAMq+C,KAAA,GAAQD,MAAA,CAAOp+C,CAAC;MACtB,MAAMs+C,QAAA,GAAWD,KAAA,CAAM11D,YAAA,CAAa,WAAW;MAC/C,KAAK6yK,cAAA,CAAe5/K,GAAA,CAAIyiE,KAAK;MAC7B,IAAI,CAACC,QAAA,EAAU;QACbD,KAAA,CAAMxwD,YAAA,CAAa,aAAauC,EAAE;MACpC,WAAWkuD,QAAA,CAAS9yE,OAAA,CAAQ4kB,EAAE,MAAM,IAAI;QACtCiuD,KAAA,CAAMxwD,YAAA,CAAa,aAAaywD,QAAA,GAAW,MAAMluD,EAAE;MACrD;IACF;EACF;EAAA;EAEAmsK,iBAAA,EAAmB;IACjB,KAAKf,cAAA,CAAenwL,OAAA,CAAQgzE,KAAA,IAAS;MACnC,MAAMC,QAAA,GAAWD,KAAA,CAAM11D,YAAA,CAAa,WAAW;MAC/C,IAAI21D,QAAA,EAAU;QACZ,MAAMq1D,QAAA,GAAWr1D,QAAA,CAAStvE,OAAA,CAAQ,KAAK4sL,cAAA,EAAgB,EAAE,EAAE9vL,IAAA,CAAK;QAChE,IAAI6nI,QAAA,CAAS/mI,MAAA,GAAS,GAAG;UACvByxE,KAAA,CAAMxwD,YAAA,CAAa,aAAa8lH,QAAQ;QAC1C,OAAO;UACLt1D,KAAA,CAAMzwD,eAAA,CAAgB,WAAW;QACnC;MACF;IACF,CAAC;IACD,KAAK4tK,cAAA,CAAe3uK,KAAA,CAAM;EAC5B;EAAA;EAEAgvK,mBAAA,EAAqB;IACnB,IAAI,KAAK37E,aAAA,CAAcjoC,WAAA,CAAY,MAAM,OAAO1rE,SAAA,KAAc,eAAeA,SAAA,GAAY;MACvF,MAAM6B,KAAA,CAAM,0EAA0E;IACxF;EACF;EAAA;AAAA;AAAA;AAAA;EAKAiuL,sBAAA,EAAwB;IACtB,IAAI,CAAC,KAAKC,kBAAA,EAAoB;MAC5B,KAAKvzH,OAAA,CAAQvwD,iBAAA,CAAkB,MAAM;QACnC,KAAK8jL,kBAAA,GAAqBxxI,UAAA,CAAW,MAAM;UACzC,MAAM8xI,YAAA,GAAe,KAAK9zH,WAAA,CAAY/S,aAAA,CAAcrtC,aAAA,CAAc,eAAe;UACjF,MAAMm0K,WAAA,GAAc,KAAK/zH,WAAA,CAAY/S,aAAA,CAAcrtC,aAAA,CAAc,aAAa;UAC9E,IAAIk0K,YAAA,IAAgBC,WAAA,EAAa;YAG/B,IAAI37G,cAAA,GAAiB;YACrB,IAAI,KAAKpX,SAAA,CAAUhJ,SAAA,IAAapjD,QAAA,CAAS0mD,aAAA,YAAyB+4B,WAAA,IAAey/F,YAAA,CAAa1iH,QAAA,CAASx8D,QAAA,CAAS0mD,aAAa,GAAG;cAC9H8c,cAAA,GAAiBxjE,QAAA,CAAS0mD,aAAA;YAC5B;YACAw4H,YAAA,CAAahvK,eAAA,CAAgB,aAAa;YAC1CivK,WAAA,CAAYl+K,WAAA,CAAYi+K,YAAY;YACpC17G,cAAA,EAAgBlJ,KAAA,CAAM;YACtB,KAAK0jH,WAAA,CAAY9jL,IAAA,CAAK;YACtB,KAAK8jL,WAAA,CAAYpiL,QAAA,CAAS;UAC5B;QACF,GAAG,KAAKmiL,cAAc;MACxB,CAAC;IACH;EACF;AA2DF;AAzDIH,qBAAA,CAAKjmL,IAAA,GAAO,SAASynL,6BAA6BptL,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAK4rL,qBAAA,EAAyBxkI,iBAAA,CAAqBjgD,MAAM,GAAMigD,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqBzkB,iBAAiB,GAAMykB,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAkBmjI,iBAAiB,CAAC;AACrO;AAGAqB,qBAAA,CAAK5jJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAM2oL,qBAAA;EACN9mJ,SAAA,EAAW,CAAC,CAAC,yBAAyB,CAAC;EACvCsmD,SAAA,EAAW,SAASiiG,2BAA2B9kJ,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY4e,eAAA,EAAiB,CAAC;MAC9B5e,WAAA,CAAY9U,OAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAImjF,aAAA,GAAgBpmD,EAAA,CAAGxlD,KAAA;MACjEylD,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAI2/J,MAAA,GAAS5iI,EAAA,CAAGxlD,KAAA;IAC/D;EACF;EACA87E,SAAA,EAAW,CAAC,GAAG,gBAAgB,+BAA+B,oBAAoB;EAClFj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS4lI,kCAAkC/kJ,EAAA,EAAIlb,GAAA,EAAK;IAChE,IAAIkb,EAAA,GAAK,GAAG;MACPglJ,uBAAA,CAAwB,eAAe,SAASC,6DAA6D1lI,MAAA,EAAQ;QACtH,OAAOz6B,GAAA,CAAIk/J,cAAA,CAAezkI,MAAM;MAClC,CAAC;IACH;IACA,IAAIvf,EAAA,GAAK,GAAG;MACPklJ,uBAAA,CAAwB,UAAUpgK,GAAA,CAAI4+J,eAAe;IAC1D;EACF;EACA/mJ,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAIk8E,0BAAA,EAA+BxoD,mBAAmB;EAChEC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,eAAe,MAAM,GAAG,CAAC,mBAAmB,EAAE,CAAC;EACtIhhD,QAAA,EAAU,SAASqlJ,8BAA8BnlJ,EAAA,EAAIlb,GAAA,EAAK;IACxD,IAAIkb,EAAA,GAAK,GAAG;MACP6uC,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;MACvDwU,UAAA,CAAW,GAAGs9F,2CAAA,EAA6C,GAAG,GAAG,eAAe,CAAC;MACjF5xG,YAAA,CAAa;MACb9uC,SAAA,CAAU,GAAG,KAAK;MAClB8uC,YAAA,CAAa,EAAE;IACpB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACPgvC,SAAA,CAAU,CAAC;MACXxvB,WAAA,CAAY,aAAa16B,GAAA,CAAIg/J,KAAK,EAAE,QAAQh/J,GAAA,CAAIi/J,KAAK,EAAE,MAAMj/J,GAAA,CAAI6+J,cAAc;IACpF;EACF;EACAzjJ,YAAA,EAAc,CAACyhE,eAAe;EAC9BvtF,MAAA,EAAQ,CAAC,u4GAAy4G;EACl5GoD,aAAA,EAAe;EACfrR,IAAA,EAAM;IACJy0E,SAAA,EAAW,CAACuoG,qBAAA,CAAsBC,aAAa;EACjD;AACF,CAAC;AAhSL,IAAMgC,oBAAA,GAAN/B,qBAAA;AAAA,CAmSC,MAAM;EACL,CAAC,OAAO/uL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBynL,oBAAA,EAAsB,CAAC;IAC7F1qL,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACV4+D,eAAA,EAAiBE,uBAAA,CAAwB29B,OAAA;MACzClmG,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC0tD,UAAA,EAAY,CAAC0uD,qBAAA,CAAsBC,aAAa;MAChDzmJ,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAAC6hF,eAAe;MACzB5vF,IAAA,EAAM;QACJ,SAAS;QACT,YAAY;QACZ,iBAAiB;MACnB;MACA+tB,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,u4GAAy4G;IACp5G,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAMsnL;EACR,CAAC,GAAG;IACF/5E,aAAA,EAAe,CAAC;MACdvtG,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAACs6F,eAAA,EAAiB;QACtBle,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;IACDghG,MAAA,EAAQ,CAAC;MACP/pL,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,SAAS;QACdo8E,MAAA,EAAQ;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAGH,SAAS4hG,sCAAA,EAAwC;EAC/C,OAAO,IAAIrD,iBAAA,CAAkB;AAC/B;AAEA,IAAMsD,6BAAA,GAAgC,IAAItiL,cAAA,CAAe,iCAAiC;EACxFkH,UAAA,EAAY;EACZzM,OAAA,EAAS4nL;AACX,CAAC;AAID,IAAME,YAAA,GAAN,MAAMA,YAAA,CAAY;EAAA;EAEhB,IAAIC,mBAAA,EAAqB;IACvB,MAAMxsK,MAAA,GAAS,KAAKysK,eAAA;IACpB,OAAOzsK,MAAA,GAASA,MAAA,CAAOwsK,kBAAA,GAAqB,KAAKE,uBAAA;EACnD;EACA,IAAIF,mBAAmB5xL,KAAA,EAAO;IAC5B,IAAI,KAAK6xL,eAAA,EAAiB;MACxB,KAAKA,eAAA,CAAgBD,kBAAA,GAAqB5xL,KAAA;IAC5C,OAAO;MACL,KAAK8xL,uBAAA,GAA0B9xL,KAAA;IACjC;EACF;EACAf,YAAYulH,QAAA,EAAU0rE,KAAA,EAAOvjJ,SAAA,EAAWolJ,mBAAA,EAAqBF,eAAA,EAAiBG,cAAA,EAAgB;IAC5F,KAAKxtE,QAAA,GAAWA,QAAA;IAChB,KAAK0rE,KAAA,GAAQA,KAAA;IACb,KAAKvjJ,SAAA,GAAYA,SAAA;IACjB,KAAKolJ,mBAAA,GAAsBA,mBAAA;IAC3B,KAAKF,eAAA,GAAkBA,eAAA;IACvB,KAAKG,cAAA,GAAiBA,cAAA;IAMtB,KAAKF,uBAAA,GAA0B;IAE/B,KAAKG,uBAAA,GAA0B3C,cAAA;IAE/B,KAAK4C,0BAAA,GAA6BV,oBAAA;IAElC,KAAKW,eAAA,GAAkB;EACzB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQAC,kBAAkBzqK,SAAA,EAAWie,MAAA,EAAQ;IACnC,OAAO,KAAKysJ,OAAA,CAAQ1qK,SAAA,EAAWie,MAAM;EACvC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA0sJ,iBAAiBpmJ,QAAA,EAAUtG,MAAA,EAAQ;IACjC,OAAO,KAAKysJ,OAAA,CAAQnmJ,QAAA,EAAUtG,MAAM;EACtC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOAhxB,KAAK1M,OAAA,EAASw+C,MAAA,GAAS,IAAI9gB,MAAA,EAAQ;IACjC,MAAMnW,OAAA,GAAU5jB,cAAA,CAAAA,cAAA,KACX,KAAKmmL,cAAA,GACLpsJ,MAAA;IAILnW,OAAA,CAAQld,IAAA,GAAO;MACbrK,OAAA;MACAw+C;IACF;IAGA,IAAIj3B,OAAA,CAAQ4+J,mBAAA,KAAwBnmL,OAAA,EAAS;MAC3CunB,OAAA,CAAQ4+J,mBAAA,GAAsB;IAChC;IACA,OAAO,KAAK+D,iBAAA,CAAkB,KAAKH,uBAAA,EAAyBxiK,OAAO;EACrE;EAAA;AAAA;AAAA;EAIA+9J,QAAA,EAAU;IACR,IAAI,KAAKoE,kBAAA,EAAoB;MAC3B,KAAKA,kBAAA,CAAmBpE,OAAA,CAAQ;IAClC;EACF;EACAzsK,YAAA,EAAc;IAEZ,IAAI,KAAK+wK,uBAAA,EAAyB;MAChC,KAAKA,uBAAA,CAAwBtE,OAAA,CAAQ;IACvC;EACF;EAAA;AAAA;AAAA;EAIA+E,yBAAyB7iF,UAAA,EAAY9pE,MAAA,EAAQ;IAC3C,MAAMimF,YAAA,GAAejmF,MAAA,IAAUA,MAAA,CAAOsyD,gBAAA,IAAoBtyD,MAAA,CAAOsyD,gBAAA,CAAiBjpF,QAAA;IAClF,MAAMA,QAAA,GAAWmiD,QAAA,CAASzsC,MAAA,CAAO;MAC/BS,MAAA,EAAQymG,YAAA,IAAgB,KAAKl/E,SAAA;MAC7B10B,SAAA,EAAW,CAAC;QACVS,OAAA,EAAS01K,iBAAA;QACTx1K,QAAA,EAAUgtB;MACZ,CAAC;IACH,CAAC;IACD,MAAMmmF,eAAA,GAAkB,IAAI7gB,eAAA,CAAgB,KAAKgnF,0BAAA,EAA4BtsJ,MAAA,CAAOsyD,gBAAA,EAAkBjpF,QAAQ;IAC9G,MAAM+8G,YAAA,GAAetc,UAAA,CAAWnoE,MAAA,CAAOwkF,eAAe;IACtDC,YAAA,CAAatkF,QAAA,CAASgoJ,cAAA,GAAiB9pJ,MAAA;IACvC,OAAOomF,YAAA,CAAatkF,QAAA;EACtB;EAAA;AAAA;AAAA;EAIA2qJ,QAAQ7sK,OAAA,EAASgtK,UAAA,EAAY;IAC3B,MAAM5sJ,MAAA,GAAS/5B,cAAA,CAAAA,cAAA,CAAAA,cAAA,KACV,IAAIuiL,iBAAA,CAAkB,IACtB,KAAK4D,cAAA,GACLQ,UAAA;IAEL,MAAM9iF,UAAA,GAAa,KAAK8V,cAAA,CAAe5/E,MAAM;IAC7C,MAAMlQ,SAAA,GAAY,KAAK68J,wBAAA,CAAyB7iF,UAAA,EAAY9pE,MAAM;IAClE,MAAMspJ,WAAA,GAAc,IAAIhC,cAAA,CAAex3J,SAAA,EAAWg6E,UAAU;IAC5D,IAAIlqF,OAAA,YAAmBikF,WAAA,EAAa;MAClC,MAAMkC,MAAA,GAAS,IAAIN,cAAA,CAAe7lF,OAAA,EAAS,MAAM;QAC/Cq0E,SAAA,EAAWj0D,MAAA,CAAOrzB,IAAA;QAClB28K;MACF,CAAC;MACDA,WAAA,CAAYxnJ,QAAA,GAAWhS,SAAA,CAAUm2E,oBAAA,CAAqBF,MAAM;IAC9D,OAAO;MACL,MAAM18F,QAAA,GAAW,KAAKg9G,eAAA,CAAgBrmF,MAAA,EAAQspJ,WAAW;MACzD,MAAMvjF,MAAA,GAAS,IAAIT,eAAA,CAAgB1lF,OAAA,EAAS,QAAWvW,QAAQ;MAC/D,MAAMk9G,UAAA,GAAaz2F,SAAA,CAAUk2E,qBAAA,CAAsBD,MAAM;MAEzDujF,WAAA,CAAYxnJ,QAAA,GAAWykF,UAAA,CAAWzkF,QAAA;IACpC;IAIA,KAAKqqJ,mBAAA,CAAoB1pL,OAAA,CAAQg4D,WAAA,CAAYS,eAAe,EAAEj4D,IAAA,CAAKk6C,SAAA,CAAU2sD,UAAA,CAAW4G,WAAA,CAAY,CAAC,CAAC,EAAEvsE,SAAA,CAAUxJ,UAAS;MACzHmvE,UAAA,CAAWC,cAAA,CAAevpF,SAAA,CAAU8vD,MAAA,CAAO,KAAKi8G,eAAA,EAAiB5xJ,OAAMo+B,OAAO;IAChF,CAAC;IACD,IAAI/4B,MAAA,CAAOyoJ,mBAAA,EAAqB;MAE9B34J,SAAA,CAAUm6J,WAAA,CAAY9lJ,SAAA,CAAU,MAAM;QACpC,KAAKmmJ,KAAA,CAAMx+G,QAAA,CAAS9rC,MAAA,CAAOyoJ,mBAAA,EAAqBzoJ,MAAA,CAAOgsC,UAAU;MACnE,CAAC;IACH;IACA,KAAK6gH,gBAAA,CAAiBvD,WAAA,EAAatpJ,MAAM;IACzC,KAAKgsJ,kBAAA,GAAqB1C,WAAA;IAC1B,OAAO,KAAK0C,kBAAA;EACd;EAAA;EAEAa,iBAAiBvD,WAAA,EAAatpJ,MAAA,EAAQ;IAEpCspJ,WAAA,CAAYlB,cAAA,CAAe,EAAEjkJ,SAAA,CAAU,MAAM;MAE3C,IAAI,KAAK6nJ,kBAAA,IAAsB1C,WAAA,EAAa;QAC1C,KAAK0C,kBAAA,GAAqB;MAC5B;MACA,IAAIhsJ,MAAA,CAAOyoJ,mBAAA,EAAqB;QAC9B,KAAK6B,KAAA,CAAMlvK,KAAA,CAAM;MACnB;IACF,CAAC;IACD,IAAI,KAAK4wK,kBAAA,EAAoB;MAG3B,KAAKA,kBAAA,CAAmB5D,cAAA,CAAe,EAAEjkJ,SAAA,CAAU,MAAM;QACvDmlJ,WAAA,CAAYllE,iBAAA,CAAkBumE,KAAA,CAAM;MACtC,CAAC;MACD,KAAKqB,kBAAA,CAAmBpE,OAAA,CAAQ;IAClC,OAAO;MAEL0B,WAAA,CAAYllE,iBAAA,CAAkBumE,KAAA,CAAM;IACtC;IAEA,IAAI3qJ,MAAA,CAAOisC,QAAA,IAAYjsC,MAAA,CAAOisC,QAAA,GAAW,GAAG;MAC1Cq9G,WAAA,CAAYvkE,WAAA,CAAY,EAAE5gF,SAAA,CAAU,MAAMmlJ,WAAA,CAAYrB,aAAA,CAAcjoJ,MAAA,CAAOisC,QAAQ,CAAC;IACtF;EACF;EAAA;AAAA;AAAA;AAAA;EAKA2zC,eAAe5/E,MAAA,EAAQ;IACrB,MAAMg+E,aAAA,GAAgB,IAAIpS,aAAA,CAAc;IACxCoS,aAAA,CAAc99C,SAAA,GAAYlgC,MAAA,CAAOkgC,SAAA;IACjC,IAAIuvC,gBAAA,GAAmB,KAAKmP,QAAA,CAASt2G,QAAA,CAAS,EAAE20G,MAAA,CAAO;IAEvD,MAAM1hB,KAAA,GAAQv7D,MAAA,CAAOkgC,SAAA,KAAc;IACnC,MAAM4sH,MAAA,GAAS9sJ,MAAA,CAAO0oJ,kBAAA,KAAuB,UAAU1oJ,MAAA,CAAO0oJ,kBAAA,KAAuB,WAAW,CAACntF,KAAA,IAASv7D,MAAA,CAAO0oJ,kBAAA,KAAuB,SAASntF,KAAA;IACjJ,MAAMwxF,OAAA,GAAU,CAACD,MAAA,IAAU9sJ,MAAA,CAAO0oJ,kBAAA,KAAuB;IACzD,IAAIoE,MAAA,EAAQ;MACVr9E,gBAAA,CAAiBnuB,IAAA,CAAK,GAAG;IAC3B,WAAWyrG,OAAA,EAAS;MAClBt9E,gBAAA,CAAiBhrB,KAAA,CAAM,GAAG;IAC5B,OAAO;MACLgrB,gBAAA,CAAiB4M,kBAAA,CAAmB;IACtC;IAEA,IAAIr8E,MAAA,CAAO2oJ,gBAAA,KAAqB,OAAO;MACrCl5E,gBAAA,CAAiBluB,GAAA,CAAI,GAAG;IAC1B,OAAO;MACLkuB,gBAAA,CAAiB9qB,MAAA,CAAO,GAAG;IAC7B;IACAq5B,aAAA,CAAcvO,gBAAA,GAAmBA,gBAAA;IACjC,OAAO,KAAKmP,QAAA,CAAS7/F,MAAA,CAAOi/F,aAAa;EAC3C;EAAA;AAAA;AAAA;AAAA;AAAA;EAMAqI,gBAAgBrmF,MAAA,EAAQspJ,WAAA,EAAa;IACnC,MAAMrjE,YAAA,GAAejmF,MAAA,IAAUA,MAAA,CAAOsyD,gBAAA,IAAoBtyD,MAAA,CAAOsyD,gBAAA,CAAiBjpF,QAAA;IAClF,OAAOmiD,QAAA,CAASzsC,MAAA,CAAO;MACrBS,MAAA,EAAQymG,YAAA,IAAgB,KAAKl/E,SAAA;MAC7B10B,SAAA,EAAW,CAAC;QACVS,OAAA,EAASw0K,cAAA;QACTt0K,QAAA,EAAUs2K;MACZ,GAAG;QACDx2K,OAAA,EAASy1K,kBAAA;QACTv1K,QAAA,EAAUgtB,MAAA,CAAOrzB;MACnB,CAAC;IACH,CAAC;EACH;AAaF;AAXIo/K,YAAA,CAAKnoL,IAAA,GAAO,SAASopL,oBAAoB/uL,CAAA,EAAG;EAC1C,OAAO,KAAKA,CAAA,IAAK8tL,YAAA,EAAgBjoL,QAAA,CAAco6G,OAAO,GAAMp6G,QAAA,CAAYipE,aAAa,GAAMjpE,QAAA,CAAY0nD,QAAQ,GAAM1nD,QAAA,CAAYw2D,kBAAkB,GAAMx2D,QAAA,CAASioL,YAAA,EAAa,EAAE,GAAMjoL,QAAA,CAASgoL,6BAA6B,CAAC;AAChO;AAGAC,YAAA,CAAKhoL,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAO4sL,YAAA;EACP9nL,OAAA,EAAS8nL,YAAA,CAAYnoL,IAAA;EACrB8M,UAAA,EAAY;AACd,CAAC;AAzOL,IAAMu8K,WAAA,GAANlB,YAAA;AAAA,CA4OC,MAAM;EACL,CAAC,OAAOjxL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB8oL,WAAA,EAAa,CAAC;IACpF/rL,IAAA,EAAMkD,UAAA;IACNyJ,IAAA,EAAM,CAAC;MACL6C,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACTxP,IAAA,EAAWg9G;EACb,GAAG;IACDh9G,IAAA,EAAS6rE;EACX,GAAG;IACD7rE,IAAA,EAASsqD;EACX,GAAG;IACDtqD,IAAA,EAASo5D;EACX,GAAG;IACDp5D,IAAA,EAAM+rL,WAAA;IACNt/K,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAMylB;IACR,CAAC;EACH,GAAG;IACDzlB,IAAA,EAAMsnL,iBAAA;IACN76K,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACi+K,6BAA6B;IACtC,CAAC;EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAMt+D,cAAa,CAACo+D,oBAAA,EAAsB9C,gBAAA,EAAkBG,kBAAA,EAAoBG,iBAAiB;AACjG,IAAM8D,kBAAA,GAAN,MAAMA,kBAAA,CAAkB,EAiBxB;AAfIA,kBAAA,CAAKtpL,IAAA,GAAO,SAASupL,0BAA0BlvL,CAAA,EAAG;EAChD,OAAO,KAAKA,CAAA,IAAKivL,kBAAA,EAAmB;AACtC;AAGAA,kBAAA,CAAKh5K,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMgsL;AACR,CAAC;AAGDA,kBAAA,CAAK94K,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7ChC,SAAA,EAAW,CAAC46K,WAAW;EACvB3mK,OAAA,EAAS,CAACo6F,aAAA,EAAehY,YAAA,EAAc9W,eAAA,EAAiB1a,eAAA,EAAiBwyG,cAAA,EAAgBxyG,eAAe;AAC1G,CAAC;AAfL,IAAMk2G,iBAAA,GAANF,kBAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOpyL,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBipL,iBAAA,EAAmB,CAAC;IAC1FlsL,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACo6F,aAAA,EAAehY,YAAA,EAAc9W,eAAA,EAAiB1a,eAAA,EAAiBwyG,cAAA,EAAgB,GAAGl8D,WAAU;MACtG9mG,OAAA,EAAS,CAACwwD,eAAA,EAAiB,GAAGs2C,WAAU;MACxCn7G,SAAA,EAAW,CAAC46K,WAAW;IACzB,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC/7BG,IAAOI,aAAA,GAAP,MAAOA,aAAA,CAAY;EAHzBh0L,YAAA;IAOkB,KAAAi0L,QAAA,GAAwBzoL,MAAA,CAAOooL,WAAW;;EAE3DT,kBAA8BzqK,SAAA,EAA6Bie,MAAA,EAA6B;IACvF,KAAKstJ,QAAA,CAASd,iBAAA,CAAkBzqK,SAAA,EAAWie,MAAM;EAClD;;;mBARYqtJ,aAAA,EAAY;AAAA;;SAAZA,aAAA;EAAYppL,OAAA,EAAZopL,aAAA,CAAYzpL,IAAA;EAAA8M,UAAA,EAFZ;AAAM;AAEb,IAAO68K,YAAA,GAAPF,aAAA;;;ACIA,IAAgBG,gBAAA,GAAhB,MAAgBA,gBAAA,CAAe;EADrCn0L,YAAA;IAEiB,KAAAo0L,YAAA,GAA6B5oL,MAAA,CAAO0oL,YAAY;IAKzD,KAAAG,aAAA,GAAgC;;;;;EAKvChsJ,SAAA,EAAQ;IACP,KAAKisJ,IAAA,CAAI;EACV;;;;EAKAA,KAAA,EAAI,CAAU;;;;EAKdxyK,YAAA,EAAW;IACV,KAAKyyK,MAAA,CAAM;IACX,KAAKF,aAAA,CAAc9zL,OAAA,CAASi0L,GAAA,IAAQA,GAAA,CAAI7pJ,WAAA,CAAW,CAAE;EACtD;;;;EAKA4pJ,OAAA,EAAM,CAAU;;;mBA/BKJ,gBAAA,EAAe;AAAA;;QAAfA;AAAe;AAA/B,IAAgBM,eAAA,GAAhBN,gBAAA;;;ACMA,IAAOO,sBAAA,GAAP,MAAOA,sBAAA,CAAqB;EAGjC10L,YAA4CsT,IAAA,EAAgB;IAAhB,KAAAA,IAAA,GAAAA,IAAA;IAFzB,KAAA64G,SAAA,GAAiD3gH,MAAA,CAAO4kH,YAAY;IAGtF,IAAI,CAAC98G,IAAA,CAAKgc,KAAA,EAAOhc,IAAA,CAAKgc,KAAA,GAAQ;IAC9B,IAAI,CAAChc,IAAA,CAAKqhL,UAAA,EAAYrhL,IAAA,CAAKqhL,UAAA,GAAa;IACxC,IAAI,CAACrhL,IAAA,CAAKshL,WAAA,EAAathL,IAAA,CAAKshL,WAAA,GAAc;EAC3C;;;mBAPYF,sBAAA,EAAqB1oI,iBAAA,CAGbolE,eAAe;AAAA;;QAHvBsjE,sBAAA;EAAqBhrJ,SAAA;EAAAI,UAAA;EAAA1wB,QAAA,GAAA0zB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAihD,MAAA;EAAAhhD,QAAA,WAAA4nJ,+BAAA1nJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MCjBlC6uC,cAAA;MAAqBC,MAAA;MAAgBC,YAAA;MACrCF,cAAA,6BAAgC;MACoBC,MAAA;MAAqBC,YAAA;MACxEF,cAAA;MAA+EC,MAAA;MAAsBC,YAAA,GAAS;;;MAH1FC,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA3e,IAAA,CAAAgc,KAAA;MAEI6sD,SAAA;MAAAP,UAAA;MAA2BO,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA3e,IAAA,CAAAqhL,UAAA;MACdx4G,SAAA;MAAAP,UAAA;MAA0CO,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA3e,IAAA,CAAAshL,WAAA;;;iBDUrEr8F,eAAA,EAAe1C,SAAA,EAAE49B,cAAA,EAAkCS,gBAAA,EAAkBpB,cAAc;AAAA;AAIxF,IAAOgiE,qBAAA,GAAPJ,sBAAA;;wEAAOI,qBAAA,EAAqB;IAAAniG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AEjB3B,IAAMC,WAAA,GAAc;EAC1BC,UAAA,EAAY;EACZC,MAAA,EAAQ;EACRC,OAAA,EAAS;EACTC,OAAA,EAAS;;;;ACMJ,IAAOC,YAAA,GAAP,MAAOA,YAAA,CAAW;EAHxBt1L,YAAA;IAIoB,KAAAu1L,IAAA,GAAmB/pL,MAAA,CAAOX,UAAU;IAEtC,KAAA2qL,aAAA,GAAgB,GAAGP,WAAA,CAAYE,MAAM,GAAGF,WAAA,CAAYG,OAAA,GAAU,MAAMH,WAAA,CAAYG,OAAA,GAAU,EAAE,GAAGH,WAAA,CAAYI,OAAO;;EAE5HnzL,OAAA,EAAM;IACZ,OAAO,KAAKqzL,IAAA,CAAKp0L,GAAA,CAAa,KAAKq0L,aAAa;EACjD;EAEOC,QAAQnwK,EAAA,EAAU;IACxB,OAAO,KAAKiwK,IAAA,CAAKp0L,GAAA,CAAW,GAAG,KAAKq0L,aAAa,IAAIlwK,EAAE,EAAE;EAC1D;EAEOI,OAAOpS,IAAA,EAAiB;IAC9B,OAAO,KAAKiiL,IAAA,CAAKlrL,IAAA,CAAY,KAAKmrL,aAAA,EAAeliL,IAAI;EACtD;EAEO7Q,OAAO6iB,EAAA,EAAYhS,IAAA,EAA0B;IACnD,OAAO,KAAKiiL,IAAA,CAAKjrL,GAAA,CAAW,GAAG,KAAKkrL,aAAa,IAAIlwK,EAAE,IAAIhS,IAAI;EAChE;EAEOoiL,WAAWpwK,EAAA,EAAU;IAC3B,OAAO,KAAKiwK,IAAA,CAAKjzL,MAAA,CAAc,GAAG,KAAKkzL,aAAa,IAAIlwK,EAAE,EAAE;EAC7D;;;mBAvBYgwK,YAAA,EAAW;AAAA;;SAAXA,YAAA;EAAW1qL,OAAA,EAAX0qL,YAAA,CAAW/qL,IAAA;EAAA8M,UAAA,EAFX;AAAM;AAEb,IAAOs+K,WAAA,GAAPL,YAAA;;;ACPC,IAAMM,OAAA,GAAU,CAAC,MAAM,IAAI;AAE3B,IAAMC,WAAA,GAAuC;EACnD,CAAC,IAAI,cAAG;EACR,CAAC,IAAI;;AAGC,IAAMC,eAAA,GAA0C;EACtD,CAAC,MAAM,cAAG;EACV,CAAC,QAAQ;;;;;;ICXV95G,cAAA;IAA4DC,MAAA;IAAgBC,YAAA;;;;IAAtE86E,sBAAA,kBAAAt7E,MAAA,CAAApoE,IAAA,CAAAzL,IAAA;IAAsDs0E,SAAA;IAAAo7C,iBAAA,CAAA77C,MAAA,CAAApoE,IAAA,CAAAgc,KAAA;;;;;IAE5D0sD,cAAA;IAAyCC,MAAA;IAAkBC,YAAA;;;;IAAlBC,SAAA;IAAAo7C,iBAAA,CAAA77C,MAAA,CAAApoE,IAAA,CAAArK,OAAA;;;ACWzC,IAAM8sL,iBAAA,GAA8C;EACnD,CAAC,OAAO;;AAUH,IAAOC,eAAA,GAAP,MAAOA,eAAA,CAAc;EAG1B,IAA0BC,UAAA,EAAS;IAClC,OAAO,gBAAgB,KAAK3iL,IAAA,CAAKzL,IAAI;EACtC;EAEA7H,YAA+CsT,IAAA,EAAW;IAAX,KAAAA,IAAA,GAAAA,IAAA;IANtC,KAAA28K,WAAA,GAAczkL,MAAA,CAAOyiL,cAAc;IAO3C,IAAI36K,IAAA,CAAKzL,IAAA,KAAS,WAAW,CAACyL,IAAA,CAAKgc,KAAA,EAAOhc,IAAA,CAAKgc,KAAA,GAAQymK,iBAAA,CAAkB,OAAO;EACjF;;;mBATYC,eAAA,EAAchqI,iBAAA,CAONkjI,kBAAkB;AAAA;;QAP1B8G,eAAA;EAActsJ,SAAA;EAAA2iB,QAAA;EAAAC,YAAA,WAAA4pI,4BAAA/oJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MAAdwoD,UAAA,CAAA1jE,GAAA,CAAAgkK,SAAA;;;;;;;;;;MDzBbzlG,UAAA,IAAA2lG,qCAAA,mBAAkB,GAAAC,qCAAA;MAKlBp6G,cAAA,eAAyC;MACHxvB,UAAA,mBAAA6pI,gDAAA;QAAA,OAASpkK,GAAA,CAAAg+J,WAAA,CAAAvB,iBAAA;MAA+B;MAC5E1yG,cAAA;MAAUC,MAAA;MAAKC,YAAA,GAAW,EAClB;;;MARVuU,aAAA,IAAAx+D,GAAA,CAAA3e,IAAA,CAAAgc,KAAA;MAEE6sD,SAAA;MAAAsU,aAAA,IAAAx+D,GAAA,CAAA3e,IAAA,CAAArK,OAAA;;;iBCmBSsvF,eAAA,EAAe1C,SAAA,EAAEm1C,aAAA,EAAaH,OAAA,EAAE4kD,gBAAA,EAAkBG,kBAAA,EAAoBG,iBAAiB;EAAAxuK,MAAA;AAAA;AAI5F,IAAO+0K,cAAA,GAAPN,eAAA;;wEAAOM,cAAA,EAAc;IAAA3jG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;;;;;ICNxBh5G,cAAA;IAAsDC,MAAA;IAA8BC,YAAA;;;;;IAA9BC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAC,gBAAA,CAAAC,SAAA;;;;;IAEtDz6G,cAAA;IAAuCC,MAAA;;IAA6FC,YAAA;;;;;;IAA7FC,SAAA;IAAAo7C,iBAAA,CAAAk/D,SAAA,gBAAAF,MAAA,CAAAT,eAAA,CAAAY,UAAA,CAAAD,SAAA,KAAAE,WAAA,OAAAD,UAAA,CAAAD,SAAA;;;;;IAHxCxQ,uBAAA;IACCz1F,UAAA,IAAAomG,4DAAA,kBAAsD,GAAAC,4DAAA;;;;;IADzCj7G,UAAA,iBAAA66G,SAAA;;;;;IAObz6G,cAAA;IAAsCC,MAAA;IAAmCC,YAAA;;;;;IAAnCC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAO,qBAAA,CAAAL,SAAA;;;;;;IAEtCz6G,cAAA,cAAuC;IACkCxvB,UAAA,mBAAAuqI,qFAAA;MAAA,MAAAC,UAAA,GAAA11D,aAAA,CAAAqmC,GAAA,EAAA/sE,SAAA;MAAA,MAAA67F,SAAA,GAAA96G,aAAA,IAAAif,SAAA;MAAA,MAAA27F,MAAA,GAAA56G,aAAA;MAAA,OAAA4lD,WAAA,CAASg1D,MAAA,CAAAU,QAAA,CAAAR,SAAA,EAAAO,UAAA,CAAyB;IAAA;IACzGh7G,cAAA;IAAwBC,MAAA;IAAYC,YAAA,GAAW,EACvC;;;;IAFYC,SAAA;IAAAP,UAAA,UAAA66G,SAAA;IACIt6G,SAAA;IAAAo7C,iBAAA,CAAAk/D,SAAA;;;;;IAL3BxQ,uBAAA;IACCz1F,UAAA,IAAA0mG,4DAAA,kBAAsC,GAAAC,4DAAA;;;;;IADzBv7G,UAAA,iBAAA66G,SAAA;;;;;IAPmCjmG,UAAA,IAAA4mG,uDAAA,4BAAgD,GAAAC,uDAAA;;;;IAAhD5mG,aAAA,IAAAgmG,SAAA,eAAAA,SAAA;;;;;IAkBjDrpJ,SAAA;;;;;IACAA,SAAA;;;;;IAIC4uC,cAAA;IAAiCC,MAAA;IAAqEC,YAAA;;;;;IAArEC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAe,iBAAA,6BAAAC,QAAA,CAAAx2L,KAAA;;;;;IAEjCi7E,cAAA;IAAiCC,MAAA;IAAkCC,YAAA;;;;IAAlCC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAe,iBAAA;;;;;IAJlCt7G,cAAA;IACCwU,UAAA,IAAAgnG,sDAAA,kBAAwB,GAAAC,sDAAA;IAKzBv7G,YAAA;;;;IALCC,SAAA;IAAAsU,aAAA,IAAA8lG,MAAA,CAAAxY,UAAA,CAAA/6K,MAAA;;;;;IAxBHg5E,cAAA,cAA2B;IAEzBwqF,gBAAA,IAAAkxB,yCAAA,oBAAAC,sBAAA;IAkBAnnG,UAAA,IAAAonG,wCAAA,iBAAuD,GAAAC,wCAAA,iBACK,GAAAC,wCAAA;IAS7D57G,YAAA,GAAQ;;;;IA7BSC,SAAA;IAAAP,UAAA,eAAA26G,MAAA,CAAAxY,UAAA;IAChB5hG,SAAA;IAAA2qF,UAAA,CAAAyvB,MAAA,CAAAwB,gBAAA;IAkBoB57G,SAAA;IAAAP,UAAA,oBAAA26G,MAAA,CAAAwB,gBAAA;IACa57G,SAAA;IAAAP,UAAA,qBAAA26G,MAAA,CAAAwB,gBAAA;;;;;IAYnC/7G,cAAA;IACC5uC,SAAA;IACD8uC,YAAA;;;;;IAEAF,cAAA;IAAGC,MAAA;IAAgCC,YAAA;;;;IAAhCC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAe,iBAAA;;;AChBH,IAAMU,qBAAA,GAAsD;EAC3D,CAAC,MAAM,WAAG;EACV,CAAC,QAAQ;;AAWV,IAAMC,oBAAA,GAAoD;EACzD,CAAC,OAAO,iDAAG;EACX,CAAC,YAAY,aAAG;EAChB,CAAC,aAAa;;AAWf,IAAMlC,qBAA8C;EACnD,CAAC,kBAAkB,8CAAG;EACtB,CAAC,SAAS,6BAAG;EACb,CAAC,OAAO,mDAAG;EACX,CAAC,QAAQ,YAAG;EACZ,CAAC,gBAAgB,4BAAG;EACpB,CAAC,KAAK,6BAAG;EACT,CAAC,SAAS;;AAyBL,IAAOmC,kBAAA,GAAP,MAAOA,kBAAA,SAA0BzD,eAAA,CAAe;EAnBtDz0L,YAAA;;IAuBoB,KAAAuhD,MAAA,GAAiB/1C,MAAA,CAAOo/C,MAAM;IAK9B,KAAA+hE,MAAA,GAAoBnhH,MAAA,CAAO0mH,SAAS;IAKpC,KAAAimE,WAAA,GAA2B3sL,MAAA,CAAOmqL,WAAW;IAezD,KAAA5X,UAAA,GAAwC,IAAI4N,kBAAA,CAAkB;IAK9D,KAAAyM,YAAA,GAAgC,IAAIl6I,OAAA,CAAO;IAK3C,KAAA4uI,eAAA,GAA4D,CAACx5K,IAAA,EAAatQ,YAAkB;MAClG,OACCsQ,IAAA,CAAK+kL,UAAA,CAAWv3L,WAAA,CAAW,EAAGspI,QAAA,CAASpnI,OAAM,KAC7CsQ,IAAA,CAAKglL,SAAA,CAAUx3L,WAAA,CAAW,EAAGspI,QAAA,CAASpnI,OAAM,KAC5CsQ,IAAA,CAAKilL,SAAA,CAAUz3L,WAAA,CAAW,EAAGspI,QAAA,CAASpnI,OAAM;IAE9C;IAKmB,KAAA+0L,gBAAA,GAAmD,CAAC,cAAc,aAAa,aAAa,UAAU,QAAQ,QAAQ;IAKtH,KAAAjC,eAAA,GAA0CA,eAAA;IAK1C,KAAAU,gBAAA,GAAgDjhI,iBAAA;IAKhD,KAAAuhI,qBAAA,GAAsDkB,qBAAA;IAKtD,KAAAV,iBAAA,GAA8CvB;IAK9C,KAAA7gI,SAAA,GAAYA,SAAA;IAKZ,KAAAC,gBAAA,GAAmBA,gBAAA;;;;;EAK7Bm/H,KAAA,EAAI;IACZ,KAAKD,aAAA,CAAcjzL,IAAA,CAClB,KAAK+2L,WAAA,CAAYj2L,MAAA,CAAM,EAAG4oC,SAAA,CAAU;MACnCh+B,IAAA,EAAOwG,IAAA,IAAQ;QACd,IAAI,CAACA,IAAA,CAAKxR,MAAA,EAAQ;QAElB,KAAKi8K,UAAA,CAAWzqK,IAAA,GAAOA,IAAA;MACxB;MACApK,KAAA,EAAQA,KAAA,IAAS;QAChB,IAAIsvL,SAAA,CAAS,GAAI/nK,OAAA,CAAQvnB,KAAA,CAAMA,KAAK;MACrC;KACA,GAED,KAAKkvL,YAAA,CAAaxuL,IAAA,CAAKu0D,YAAA,CAAa,GAAG,GAAG0T,oBAAA,CAAoB,CAAE,EAAE/mC,SAAA,CAAW2tJ,WAAA,IAAe;MAC3F,KAAK1a,UAAA,CAAW/6K,MAAA,GAASy1L,WAAA,CAAYz3L,IAAA,CAAI,EAAGF,WAAA,CAAW;MAEvD,IAAI,CAAC,KAAKi9K,UAAA,CAAWiO,SAAA,EAAW;MAChC,KAAKjO,UAAA,CAAWiO,SAAA,CAAUzkB,SAAA,CAAS;MACnC,KAAKwW,UAAA,CAAWyP,gBAAA,CAAiB,KAAKzP,UAAA,CAAWoP,YAAA,CAAarrL,MAAM;IACrE,CAAC,CAAC;EAEJ;;;;EAKAq2E,gBAAA,EAAe;IACd,KAAK6zG,SAAA,CAAU9kB,KAAA,CAAMC,iBAAA,GAAoB4uB,mBAAkB,gBAAgB;IAC3E,KAAKhY,UAAA,CAAWiO,SAAA,GAAY,KAAKA,SAAA;IACjC,KAAKjO,UAAA,CAAWpoJ,IAAA,GAAO,KAAKA,IAAA;IAC5B,KAAKooJ,UAAA,CAAW+O,eAAA,GAAkB,KAAKA,eAAA;EACxC;;;;;EAMU4L,YAAY1uL,KAAA,EAAY;IACjC,MAAMyuL,WAAA,GAAezuL,KAAA,CAAMiT,MAAA,CAA4Blc,KAAA;IAEvD,KAAKq3L,YAAA,CAAatrL,IAAA,CAAK2rL,WAAW;EACnC;;;;;;EAOUxB,SAASxvI,MAAA,EAAsBkxI,IAAA,EAAW;IACnD,KAAKlxI,MAAM,EAAEkxI,IAAI;EAClB;;;;;EAMQC,KAAKD,IAAA,EAAW;IACvB,KAAKp3I,MAAA,CAAO6I,QAAA,CAAS,CAAC8K,SAAA,CAAUG,MAAA,EAAQF,gBAAA,CAAiB0jI,IAAA,EAAMF,IAAA,CAAKrzK,EAAE,CAAC;EACxE;;;;;;EAOQhjB,OAAOq2L,IAAA,EAAW;IACzB,MAAMxsE,SAAA,GAAY,KAAKQ,MAAA,CAAOh3G,IAAA,CAAKm/K,qBAAA,EAAuB;MACzDxhL,IAAA,EAAM;QACLgc,KAAA,EAAO,GAAG2oK,oBAAA,CAAqB,OAAO,CAAC,GAAGU,IAAA,CAAKJ,SAAS;QACxD5D,UAAA,EAAYsD,oBAAA,CAAqB,YAAY;QAC7CrD,WAAA,EAAaqD,oBAAA,CAAqB,aAAa;;KAEhD;IAED,KAAK5D,aAAA,CAAcjzL,IAAA,CAClB+qH,SAAA,CAAUhV,aAAA,CAAa,EAAGrsE,SAAA,CAAW8J,CAAA,IAAMu3E,SAAA,CAAUja,KAAA,CAAK,CAAE,GAE5Dia,SAAA,CAAU6E,WAAA,CAAW,EAAGlmF,SAAA,CAAWtgB,MAAA,IAAU;MAC5C,IAAI,CAACA,MAAA,EAAQ;MAEb,KAAK6pK,aAAA,CAAcjzL,IAAA,CAClB,KAAK+2L,WAAA,CAAYzC,UAAA,CAAWiD,IAAA,CAAKrzK,EAAE,EAAEwlB,SAAA,CAAU;QAC9Ch+B,IAAA,EAAO8nC,CAAA,IAAK;UACX,MAAMn0C,KAAA,GAAQ,KAAKs9K,UAAA,CAAWzqK,IAAA,CAAKwlL,SAAA,CAAWvlJ,IAAA,IAASA,IAAA,CAAKjuB,EAAA,KAAOqzK,IAAA,CAAKrzK,EAAE;UAE1E,KAAKy4J,UAAA,CAAWzqK,IAAA,CAAK1N,MAAA,CAAOnF,KAAA,EAAO,CAAC;UACpC,KAAKs9K,UAAA,CAAWgO,yBAAA,CAAyB;UAEzC,KAAKqI,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;YAC1E1jH,QAAA,EAAU;YACVt/D,IAAA,EAAM;cACLgc,KAAA,EAAO,GAAGqpK,IAAA,CAAKJ,SAAS,IAAIxC,mBAAkB,SAAS,CAAC;cACxDluL,IAAA,EAAM;;WAEP;QACF;QACAqB,KAAA,EAAQA,KAAA,IAAS;UAChB,IAAIsvL,SAAA,CAAS,GAAI/nK,OAAA,CAAQvnB,KAAA,CAAMA,KAAK;UAEpC,KAAKkrL,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;YAC1E1jH,QAAA,EAAU;YACVt/D,IAAA,EAAM;cACLzL,IAAA,EAAM;;WAEP;QACF;OACA,CAAC;IAEJ,CAAC,CAAC;EAEJ;;;;;sGAnMYqwL,kBAAiB,IAAAtzL,CAAA,IAAjBszL,kBAAiB;EAAA;AAAA;;QAAjBA,kBAAA;EAAiBxuJ,SAAA;EAAAsmD,SAAA,WAAA+oG,wBAAA5rJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;kBAmBlBs9H,YAAA,EAAY;kBAKZwD,OAAA,EAAO;;;;;;;;;;;;;;;;MDvHnBjyF,cAAA,cAAuC,qBACtB;MACJC,MAAA;MAAiCC,YAAA;MAE5CF,cAAA;MAAgBxvB,UAAA,mBAAAwsI,kDAAAtsI,MAAA;QAAA40E,aAAA,CAAAJ,GAAA;QAAA,OAAAK,WAAA,CAAStvG,GAAA,CAAAymK,WAAA,CAAAhsI,MAAA,CAAmB;MAAA;MAA5CwvB,YAAA,GAAyE;MAG1EF,cAAA,YAAyG;MAC9FC,MAAA;MAAGC,YAAA;MAEbF,cAAA;MAAMC,MAAA;MAA8BC,YAAA,GAAO,EACxC;MAGLsU,UAAA,KAAAyoG,mCAAA,QAuCC,IAAAC,0CAAA,QAFA,IAAAC,wCAAA;MArCDC,OAAA,SAAAC,iCAAA,yBAAAC,4BAAA;MAyCAlsJ,SAAA;;;MAvDuBwuC,UAAA;MAEVO,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAAqlK,iBAAA;MAKuBn7G,SAAA;MAAAP,UAAA,qBAAA3pD,GAAA,CAAAijC,SAAA,CAAAG,MAAA,SAAApjC,GAAA,CAAAkjC,gBAAA,CAAAokI,MAAA;MAG5Bp9G,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAAqlK,iBAAA;MAIAn7G,SAAA;MAAAq9G,WAAA,CAAAvnK,GAAA,CAAA8rJ,UAAA;MAyC0B5hG,SAAA;MAAAP,UAAA,gBAAc,gBAAgB,mBAAA69G,eAAA,IAAAr+G,KAAA;;;iBCyB9DluD,YAAA,EACA0nC,YAAA,EAAY5H,UAAA,EACZurC,eAAA,EAAerC,SAAA,EACf8rC,kBAAA,EAAkBL,YAAA,EAAA/J,QAAA,EAClBoT,aAAA,EAAaH,OAAA,EACbsrB,cAAA,EAAcH,QAAA,EACdyU,YAAA,EACAiC,wBAAA,EAAwBJ,kBAAA,EACxB8E,aAAA,EACAqa,cAAA,CAAc;EAAAlqK,MAAA;AAAA;AAMV,IAAOm4K,iBAAA,GAAPxB,kBAAA;;wEAAOwB,iBAAA,EAAiB;IAAA/mG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AC7FxB,SAAU2E,eAAiCC,UAAA,KAAkBC,WAAA,EAAwB;EAC1F,IAAIA,WAAA,CAAY/3L,MAAA,EACf,OAAOH,MAAA,CAAOI,IAAA,CAAK63L,UAAU,EAAE52L,MAAA,CAAQnC,GAAA,IAAQ,CAACg5L,WAAA,CAAYzvD,QAAA,CAASvpI,GAAc,CAAC;EACrF,OAAOc,MAAA,CAAOI,IAAA,CAAK63L,UAAU;AAC9B;;;;;;;;ICIG59G,cAAA;IAA4CC,MAAA;IAAkBC,YAAA;;;;IAAvCN,UAAA,UAAAk+G,SAAA,CAAAj5L,GAAA;IAAqBs7E,SAAA;IAAAo7C,iBAAA,CAAAuiE,SAAA,CAAA/4L,KAAA;;;;;IAF7Ci7E,cAAA;IACCwqF,gBAAA,IAAAuzB,oDAAA,yBAAApC,sBAAA;;IAGDz7G,YAAA;;;;;IAJY89G,qBAAA,oBAAAC,QAAA;IACX99G,SAAA;IAAA2qF,UAAA,CAAA6vB,WAAA,OAAAJ,MAAA,CAAA2D,cAAA,CAAAD,QAAA;;;;;IAKD7sJ,SAAA;;;;IAAqE4sJ,qBAAA,oBAAAC,QAAA;IAA9Dr+G,UAAA,YAAAu+G,eAAA,IAAA/+G,OAAA6+G,QAAA;;;;;IAZRj+G,cAAA,yBAAqC;IACzBC,MAAA;IAA8BC,YAAA;IAEzCF,cAAA;IAAoBC,MAAA;IAA0BC,YAAA;IAE9CsU,UAAA,IAAA4pG,8CAAA,yBAA4B,GAAAC,8CAAA;IAS7Bn+G,YAAA;;;;;IAbYC,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAAhhI,iBAAA,CAAA0kI,QAAA;IAES99G,SAAA;IAAAo7C,iBAAA,CAAAg/D,MAAA,CAAA+D,aAAA,CAAAL,QAAA;IAEpB99G,SAAA;IAAAsU,aAAA,IAAA8lG,MAAA,CAAAgE,aAAA,CAAAN,QAAA;;;ACsBF,IAAMO,YAAA,GAAe,CAAC,mBAAmB,UAAU,cAAc,kBAAkB;AAUnF,IAAMF,aAAA,GAAmD;EACxD,CAAC,YAAY,GAAG;EAChB,CAAC,WAAW,GAAG;EACf,CAAC,WAAW,GAAG;EACf,CAAC,iBAAiB,GAAG;EACrB,CAAC,QAAQ,GAAG;EACZ,CAAC,YAAY,GAAG;EAChB,CAAC,YAAY,GAAG;EAChB,CAAC,kBAAkB,GAAG;;AAWvB,IAAMvE,qBAA8C;EACnD,CAAC,cAAc,oDAAG;EAClB,CAAC,SAAS,yBAAG;EACb,CAAC,SAAS;;AAaL,IAAO0E,kBAAA,GAAP,MAAOA,kBAAA,SAA0BhG,eAAA,CAAe;EAPtDz0L,YAAA;;IAWoB,KAAAuhD,MAAA,GAAiB/1C,MAAA,CAAOo/C,MAAM;IAK9B,KAAA8vI,EAAA,GAAkBlvL,MAAA,CAAOymJ,WAAW;IAKpC,KAAA59H,KAAA,GAAwB7oB,MAAA,CAAOs5B,cAAc;IAK7C,KAAAqzJ,WAAA,GAA2B3sL,MAAA,CAAOmqL,WAAW;IAUhD,KAAAgF,UAAA,GAAqB;IAKrB,KAAAC,SAAA,GAAoB;IAKpB,KAAAjG,UAAA,GAAqB;IAK9B,KAAAhwG,IAAA,GAAoC,KAAKk2G,QAAA,CAAQ;IAKjD,KAAAv1K,EAAA,GAAoB,KAAK+O,KAAA,CAAM0N,QAAA,CAAS99B,MAAA,CAAO,IAAI,KAAK;IAK/C,KAAA62L,MAAA,GAAgCnB,cAAA,CAAepkI,iBAAA,EAAmB,IAAI;IAKtE,KAAA2kI,cAAA,GAA8D;MAC7E,CAAC,iBAAiB,GAAG1kI,iCAAA;MACrB,CAAC,QAAQ,GAAGsgI,eAAA;MACZ,CAAC,YAAY,GAAGrgI,uBAAA;MAChB,CAAC,kBAAkB,GAAGC;;IAMJ,KAAAH,iBAAA,GAAoBA,iBAAA;IAKpB,KAAA+kI,aAAA,GAAgBA,aAAA;IAKhB,KAAAplI,SAAA,GAAYA,SAAA;;;;;EAKtBo/H,KAAA,EAAI;IACZ,IAAI,KAAKyG,OAAA,KAAY,YAAY,CAAC,KAAKz1K,EAAA,EAAI;IAE3C,KAAK+uK,aAAA,CAAcjzL,IAAA,CAClB,KAAK+2L,WAAA,CAAY1C,OAAA,CAAQ,KAAKnwK,EAAE,EAAEwlB,SAAA,CAAW6tJ,IAAA,IAAQ;MACpD,KAAKh0G,IAAA,CAAK64D,UAAA,CAAWm7C,IAAI;IAC1B,CAAC,CAAC;EAEJ;;;;EAKQkC,SAAA,EAAQ;IACf,OAAO,KAAKH,EAAA,CAAGr3C,WAAA,CAAYnkH,KAAA,CAAM;MAChCm5J,UAAA,EAAY,KAAKqC,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAQ,IAAI8yD,UAAA,CAAW/9C,QAAQ;MAC/D6kG,SAAA,EAAW,KAAKoC,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAQ,IAAI8yD,UAAA,CAAW/9C,QAAQ;MAC9D8kG,SAAA,EAAW,KAAKmC,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAQ,IAAI8yD,UAAA,CAAW/9C,QAAQ;MAC9DunG,UAAA,EAAY,KAAKN,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAQ,IAAI8yD,UAAA,CAAW/9C,QAAQ;MAC/DwnG,eAAA,EAAiB,KAAKP,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAkC,UAAU8yD,UAAA,CAAW/9C,QAAQ;MACpGynG,MAAA,EAAQ,KAAKR,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAgB,QAAQ8yD,UAAA,CAAW/9C,QAAQ;MACvE0nG,UAAA,EAAY,KAAKT,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAAwB,UAAU8yD,UAAA,CAAW/9C,QAAQ;MACrF2nG,gBAAA,EAAkB,KAAKV,EAAA,CAAGr3C,WAAA,CAAY3kE,OAAA,CAA6B,YAAY8yD,UAAA,CAAW/9C,QAAQ;KAClG;EACF;;;;;;EAOU8mG,cAAcc,KAAA,EAAwB;IAC/C,OAAOb,YAAA,CAAa1B,SAAA,CAAWwC,WAAA,IAAgBA,WAAA,KAAgBD,KAAK,MAAM;EAC3E;;;;EAKO34C,UAAA,EAAS;IACf,KAAK/9D,IAAA,CAAK2nD,KAAA,CAAK;IACf,KAAK3nD,IAAA,CAAKq2D,cAAA,CAAc;IACxB,KAAKr2D,IAAA,CAAKk2D,eAAA,CAAe;EAC1B;;;;EAKO0gD,WAAA,EAAU;IAChB,KAAK52G,IAAA,CAAKi2D,gBAAA,CAAgB;IAC1B,IAAI,CAAC,KAAKj2D,IAAA,CAAK+vD,KAAA,EAAO;MACrB,KAAK0/C,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;QAC1E1jH,QAAA,EAAU;QACVt/D,IAAA,EAAM;UACLgc,KAAA,EAAO,GAAGymK,mBAAkB,cAAc,CAAC;UAC3CluL,IAAA,EAAM;;OAEP;MACD;IACD;IAEA,KAAK,KAAKkzL,OAAO,EAAC;EACnB;;;;EAKQr1K,OAAA,EAAM;IACb,KAAK2uK,aAAA,CAAcjzL,IAAA,CAClB,KAAK+2L,WAAA,CAAYzyK,MAAA,CAAO,KAAKi/D,IAAA,CAAK+2D,WAAA,CAAW,CAAE,EAAE5wG,SAAA,CAAU;MAC1Dh+B,IAAA,EAAO6rL,IAAA,IAAQ;QACd,KAAKp3I,MAAA,CAAO6I,QAAA,CAAS,CAAC8K,SAAA,CAAUG,MAAA,EAAQF,gBAAA,CAAiBG,IAAI,CAAC;QAE9D,KAAK8+H,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;UAC1E1jH,QAAA,EAAU;UACVt/D,IAAA,EAAM;YACLgc,KAAA,EAAO,GAAGqpK,IAAA,CAAKJ,SAAS,IAAIxC,mBAAkB,SAAS,CAAC;YACxDluL,IAAA,EAAM;;SAEP;MACF;MACAqB,KAAA,EAAQA,KAAA,IAAS;QAChB,IAAIsvL,SAAA,CAAS,GAAI/nK,OAAA,CAAQvnB,KAAA,CAAMA,KAAK;QAEpC,KAAKkrL,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;UAC1E1jH,QAAA,EAAU;UACVt/D,IAAA,EAAM;YAAEzL,IAAA,EAAM;UAAO;SACrB;MACF;KACA,CAAC;EAEJ;;;;EAKQpF,OAAA,EAAM;IACb,IAAI,CAAC,KAAK6iB,EAAA,EAAI;IAEd,KAAK+uK,aAAA,CAAcjzL,IAAA,CAClB,KAAK+2L,WAAA,CAAY11L,MAAA,CAAO,KAAK6iB,EAAA,EAAI,KAAKq/D,IAAA,CAAK5jF,KAAK,EAAE+pC,SAAA,CAAU;MAC3Dh+B,IAAA,EAAO6rL,IAAA,IAAQ;QACd,KAAKp3I,MAAA,CAAO6I,QAAA,CAAS,CAAC8K,SAAA,CAAUG,MAAA,EAAQF,gBAAA,CAAiBG,IAAI,CAAC;QAE9D,KAAK8+H,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;UAC1E1jH,QAAA,EAAU;UACVt/D,IAAA,EAAM;YACLgc,KAAA,EAAO,GAAGqpK,IAAA,CAAKJ,SAAS,IAAIxC,mBAAkB,SAAS,CAAC;YACxDluL,IAAA,EAAM;;SAEP;MACF;MACAqB,KAAA,EAAQA,KAAA,IAAS;QAChB,IAAIsvL,SAAA,CAAS,GAAI/nK,OAAA,CAAQvnB,KAAA,CAAMA,KAAK;QAEpC,KAAKkrL,YAAA,CAAajB,iBAAA,CAAyCmD,cAAA,EAAgB;UAC1E1jH,QAAA,EAAU;UACVt/D,IAAA,EAAM;YAAEzL,IAAA,EAAM;UAAO;SACrB;MACF;KACA,CAAC;EAEJ;;;;;sGA7MY4yL,kBAAiB,IAAA71L,CAAA,IAAjB61L,kBAAiB;EAAA;AAAA;;QAAjBA,kBAAA;EAAiB/wJ,SAAA;EAAAC,MAAA;IAAAoxJ,OAAA;IAAAJ,UAAA;IAAAC,SAAA;IAAAjG,UAAA;EAAA;EAAA7qJ,UAAA;EAAA1wB,QAAA,GAAAk8E,0BAAA,EAAAxoD,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAihD,MAAA;EAAAhhD,QAAA,WAAAuuJ,2BAAAruJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MD1E9B6uC,cAAA;MACCwqF,gBAAA,IAAAi1B,gCAAA,6BAAA9D,sBAAA;MAkBA37G,cAAA,cAAqB,gBACuD;MAChEC,MAAA;MAAKC,YAAA;MAEfF,cAAA;MAAMC,MAAA;MAAgBC,YAAA,GAAO;MAG9BF,cAAA;MAAuCxvB,UAAA,mBAAAkvI,mDAAA;QAAA,OAASzpK,GAAA,CAAAywH,SAAA;MAAW;MAC1D1mE,cAAA;MAAUC,MAAA;MAAWC,YAAA;MAErBF,cAAA;MAAMC,MAAA;MAAeC,YAAA,GAAO;MAG7BF,cAAA;MAAwCxvB,UAAA,mBAAAmvI,oDAAA;QAAA,OAAS1pK,GAAA,CAAAspK,UAAA;MAAY;MAC5Dv/G,cAAA;MAAUC,MAAA;MAAKC,YAAA;MAEfF,cAAA;MAAMC,MAAA;MAAgBC,YAAA,GAAO,EACrB,EACJ;;;MArCwBN,UAAA,cAAA3pD,GAAA,CAAA0yD,IAAA;MAC9BxI,SAAA;MAAA2qF,UAAA,CAAA70I,GAAA,CAAA6oK,MAAA;MAmBsC3+G,SAAA;MAAAP,UAAA,qBAAA3pD,GAAA,CAAAijC,SAAA,CAAAG,MAAA;MAG9B8mB,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA0iK,UAAA;MAMAx4G,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA2oK,SAAA;MAMAz+G,SAAA;MAAAo7C,iBAAA,CAAAtlG,GAAA,CAAA0oK,UAAA;;;iBCmCEztK,YAAA,EAAY+wI,OAAA,EAAA29B,YAAA,EAAEhnI,YAAA,EAAY5H,UAAA,EAAEimG,mBAAA,EAAmBzN,aAAA,EAAArV,oBAAA,EAAAyG,eAAA,EAAAK,oBAAA,EAAAsR,kBAAA,EAAA4B,eAAA,EAAE5xD,eAAA,EAAe1C,SAAA,EAAEmsC,kBAAA,EAAkBL,YAAA,EAAA/J,QAAA,EAAAkB,SAAA,EAAEkS,aAAA,EAAaH,OAAA,EAAEsrB,cAAA,EAAcH,QAAA,EAAEwI,eAAA,EAAeN,SAAA,EAAAxtE,SAAA;EAAAnvE,MAAA;AAAA;AAIzI,IAAOs6K,iBAAA,GAAPpB,kBAAA;;wEAAOoB,iBAAA,EAAiB;IAAAlpG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AC7DxB,IAAO8G,oBAAA,GAAP,MAAOA,oBAAA,CAAmB;EAPhC97L,YAAA;IAWQ,KAAA26L,UAAA,GAAqB;;;;mBAJhBmB,oBAAA,EAAmB;AAAA;;QAAnBA,oBAAA;EAAmBpyJ,SAAA;EAAAI,UAAA;EAAA1wB,QAAA,GAAA0zB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAihD,MAAA;EAAAhhD,QAAA,WAAA8uJ,6BAAA5uJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MCbhCC,SAAA;;;MAA4BwuC,UAAA,eAAA3pD,GAAA,CAAA0oK,UAAA;;;iBDSjBkB,iBAAiB;EAAAt6K,MAAA;AAAA;AAItB,IAAOy6K,mBAAA,GAAPF,oBAAA;;wEAAOE,mBAAA,EAAmB;IAAArpG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AEH1B,IAAOiH,kBAAA,GAAP,MAAOA,kBAAA,CAAiB;;mBAAjBA,kBAAA,EAAiB;AAAA;;QAAjBA,kBAAA;EAAiBvyJ,SAAA;EAAAI,UAAA;EAAA1wB,QAAA,GAAA0zB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAihD,MAAA;EAAAhhD,QAAA,WAAAivJ,2BAAA/uJ,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MCV9BC,SAAA;;;iBDMWyuJ,iBAAiB;AAAA;AAItB,IAAOM,iBAAA,GAAPF,kBAAA;;wEAAOE,iBAAA,EAAiB;IAAAxpG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AEJvB,IAAMoH,YAAA,GAAuB,CACnC;EACC9nK,IAAA,EAAM;EACN6X,UAAA,EAAYgpB,gBAAA,CAAiBG,IAAA;EAC7B/gC,SAAA,EAAW;GAEZ;EACCD,IAAA,EAAM6gC,gBAAA,CAAiBG,IAAA;EACvB5sC,SAAA,EAAWgxK;GAEZ;EACCplK,IAAA,EAAM6gC,gBAAA,CAAiBokI,MAAA;EACvB7wK,SAAA,EAAWszK;GAEZ;EACC1nK,IAAA,EAAM,GAAG6gC,gBAAA,CAAiB0jI,IAAI;EAC9BnwK,SAAA,EAAWyzK;GAEZ;EAAE7nK,IAAA,EAAM;EAAM6X,UAAA,EAAYgpB,gBAAA,CAAiBG;AAAI;;;ACpBzC,IAAMzmB,MAAA,GAAiB,CAC7B;EACCva,IAAA,EAAM;EACN6X,UAAA,EAAY+oB,SAAA,CAAUG,MAAA;EACtB9gC,SAAA,EAAW;GAEZ;EACCD,IAAA,EAAM4gC,SAAA,CAAUG,MAAA;EAChBhnB,YAAA,EAAcA,CAAA,KAAM+tJ;GAErB;EAAE9nK,IAAA,EAAM;EAAM6X,UAAA,EAAY+oB,SAAA,CAAUG;AAAM;;;ACJ3C,IAAMgnI,gBAAA,GAAmB;AACzB,IAAMC,8BAAA,GAAN,MAAMA,8BAAA,CAA8B;EAAA;AAAA;AAAA;AAAA;EAKlCt8L,YAAY0X,GAAA,EAAK6kL,QAAA,EAAUzxK,IAAA,EAAM0xK,aAAA,EAAeC,UAAA,EAAY;IAC1D,KAAK/kL,GAAA,GAAMA,GAAA;IACX,KAAK6kL,QAAA,GAAWA,QAAA;IAChB,KAAKzxK,IAAA,GAAOA,IAAA;IACZ,KAAK0xK,aAAA,GAAgBA,aAAA;IACrB,KAAKC,UAAA,GAAaA,UAAA;IAClB,KAAKC,uBAAA,GAA0B;IAC/B,KAAKC,SAAA,GAAYnxL,MAAA,CAAOoxL,wBAAA,EAA2B;MACjDlxL,QAAA,EAAU;IACZ,CAAC;EACH;EAAA;EAEAoW,YAAA,EAAc;IAOZ,KAAK+6K,OAAA,EAASC,KAAA,CAAM;EACtB;EAAA;AAAA;AAAA;EAIAC,SAAA,EAAW;IACT,MAAMN,UAAA,GAAa,KAAKA,UAAA,IAAc,OAAO,qBAA6B;IAC1E,OAAOA,UAAA,CAAWzrK,KAAA,CAAM+hB,CAAA,IAAK;MAC3B,MAAM,IAAIz9B,YAAA,CAAc,OAAuE,OAAO7T,SAAA,KAAc,eAAeA,SAAA,KAAc,yLAAoM;IACvV,CAAC,EAAE6K,IAAA,CAAK,CAAC;MACP0wL,aAAA;MACAC;IACF,MAAM;MAGJ,KAAKJ,OAAA,GAAUG,aAAA,CAAc,KAAKR,aAAA,EAAe,KAAK9kL,GAAA,EAAK,KAAKilL,SAAS;MACzE,MAAMO,eAAA,GAAkB,IAAID,yBAAA,CAA0B,KAAKV,QAAA,EAAU,KAAKM,OAAA,EAAS,KAAK/xK,IAAI;MAC5F,KAAKyxK,QAAA,GAAWW,eAAA;MAChB,OAAOA,eAAA;IACT,CAAC;EACH;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASAx4K,eAAew+C,WAAA,EAAai6H,YAAA,EAAc;IACxC,MAAMn4K,QAAA,GAAW,KAAKu3K,QAAA,CAAS73K,cAAA,CAAew+C,WAAA,EAAai6H,YAAY;IACvE,IAAIn4K,QAAA,CAASo4K,KAAA,KAAU,GAAuC;MAE5D,OAAOp4K,QAAA;IACT;IAEA,IAAI,OAAOA,QAAA,CAASW,qBAAA,KAA0B,WAAW;MACvDX,QAAA,CAASW,qBAAA,GAAwB;IACnC;IAEA,MAAM03K,eAAA,GAAkB,IAAIC,yBAAA,CAA0Bt4K,QAAQ;IAG9D,IAAIm4K,YAAA,EAAc7pL,IAAA,GAAO,WAAW,KAAK,CAAC,KAAKopL,uBAAA,EAAyB;MACtE,KAAKA,uBAAA,GAA0B,KAAKK,QAAA,CAAS;IAC/C;IACA,KAAKL,uBAAA,EAAyBpwL,IAAA,CAAKixL,wBAAA,IAA4B;MAC7D,MAAMC,iBAAA,GAAoBD,wBAAA,CAAyB74K,cAAA,CAAew+C,WAAA,EAAai6H,YAAY;MAC3FE,eAAA,CAAgBI,GAAA,CAAID,iBAAiB;IACvC,CAAC,EAAExsK,KAAA,CAAM+hB,CAAA,IAAK;MAEZsqJ,eAAA,CAAgBI,GAAA,CAAIz4K,QAAQ;IAC9B,CAAC;IACD,OAAOq4K,eAAA;EACT;EACAK,MAAA,EAAQ;IACN,KAAKnB,QAAA,CAASmB,KAAA,GAAQ;EACxB;EACA1+F,IAAA,EAAM;IACJ,KAAKu9F,QAAA,CAASv9F,GAAA,GAAM;EACtB;EACA2+F,kBAAA,EAAoB;IAClB,OAAO,KAAKpB,QAAA,CAASoB,iBAAA,GAAoB,KAAK7qL,OAAA,CAAQC,OAAA,CAAQ;EAChE;AAYF;AAVIupL,8BAAA,CAAK/xL,IAAA,GAAO,SAASqzL,sCAAsCh5L,CAAA,EAAG;EACzD8sD,gBAAA,CAAiB;AACtB;AAGA4qI,8BAAA,CAAK5xL,KAAA,GAAuB,eAAGC,kBAAA,CAAmB;EAChD7E,KAAA,EAAOw2L,8BAAA;EACP1xL,OAAA,EAAS0xL,8BAAA,CAA8B/xL;AACzC,CAAC;AAjGL,IAAMszL,6BAAA,GAANvB,8BAAA;AAAA,CAoGC,MAAM;EACL,CAAC,OAAO76L,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+yL,6BAAA,EAA+B,CAAC;IACtGh2L,IAAA,EAAMkD;EACR,CAAC,GAAG,MAAM,CAAC;IACTlD,IAAA,EAAMwb;EACR,GAAG;IACDxb,IAAA,EAAS+kB;EACX,GAAG;IACD/kB,IAAA,EAASkE;EACX,GAAG;IACDlE,IAAA,EAAM;EACR,GAAG;IACDA,IAAA,EAAMiL;EACR,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAMwqL,yBAAA,GAAN,MAAgC;EAC9Bt9L,YAAYu8L,QAAA,EAAU;IACpB,KAAKA,QAAA,GAAWA,QAAA;IAEhB,KAAKuB,MAAA,GAAS,EAAC;IACf,KAAKV,KAAA,GAAQ;EACf;EACAK,IAAIM,IAAA,EAAM;IACR,KAAKxB,QAAA,GAAWwB,IAAA;IAChB,IAAI,KAAKD,MAAA,KAAW,MAAM;MAGxB,WAAWz6L,EAAA,IAAM,KAAKy6L,MAAA,EAAQ;QAC5Bz6L,EAAA,CAAG06L,IAAI;MACT;MAGA,KAAKD,MAAA,GAAS;IAChB;EACF;EACA,IAAIxqL,KAAA,EAAO;IACT,OAAO,KAAKipL,QAAA,CAASjpL,IAAA;EACvB;EACAuS,QAAA,EAAU;IACR,KAAKi4K,MAAA,GAAS;IACd,KAAKvB,QAAA,CAAS12K,OAAA,CAAQ;EACxB;EACA1S,cAAcxS,IAAA,EAAMmlB,SAAA,EAAW;IAC7B,OAAO,KAAKy2K,QAAA,CAASppL,aAAA,CAAcxS,IAAA,EAAMmlB,SAAS;EACpD;EACAE,cAAcjlB,KAAA,EAAO;IACnB,OAAO,KAAKw7L,QAAA,CAASv2K,aAAA,CAAcjlB,KAAK;EAC1C;EACAklB,WAAWllB,KAAA,EAAO;IAChB,OAAO,KAAKw7L,QAAA,CAASt2K,UAAA,CAAWllB,KAAK;EACvC;EACA,IAAI6kB,YAAA,EAAc;IAChB,OAAO,KAAK22K,QAAA,CAAS32K,WAAA;EACvB;EACA/R,YAAYsS,MAAA,EAAQC,QAAA,EAAU;IAC5B,KAAKm2K,QAAA,CAAS1oL,WAAA,CAAYsS,MAAA,EAAQC,QAAQ;EAC5C;EACAI,aAAaL,MAAA,EAAQC,QAAA,EAAUK,QAAA,EAAUu3K,MAAA,EAAQ;IAC/C,KAAKzB,QAAA,CAAS/1K,YAAA,CAAaL,MAAA,EAAQC,QAAA,EAAUK,QAAA,EAAUu3K,MAAM;EAC/D;EACAvqL,YAAY0S,MAAA,EAAQO,QAAA,EAAUu3K,aAAA,EAAe;IAC3C,KAAK1B,QAAA,CAAS9oL,WAAA,CAAY0S,MAAA,EAAQO,QAAA,EAAUu3K,aAAa;EAC3D;EACAt3K,kBAAkBC,cAAA,EAAgBC,eAAA,EAAiB;IACjD,OAAO,KAAK01K,QAAA,CAAS51K,iBAAA,CAAkBC,cAAA,EAAgBC,eAAe;EACxE;EACArT,WAAWN,IAAA,EAAM;IACf,OAAO,KAAKqpL,QAAA,CAAS/oL,UAAA,CAAWN,IAAI;EACtC;EACA4T,YAAY5T,IAAA,EAAM;IAChB,OAAO,KAAKqpL,QAAA,CAASz1K,WAAA,CAAY5T,IAAI;EACvC;EACA6P,aAAa5G,EAAA,EAAIxb,IAAA,EAAMI,KAAA,EAAO+kB,SAAA,EAAW;IACvC,KAAKy2K,QAAA,CAASx5K,YAAA,CAAa5G,EAAA,EAAIxb,IAAA,EAAMI,KAAA,EAAO+kB,SAAS;EACvD;EACAhD,gBAAgB3G,EAAA,EAAIxb,IAAA,EAAMmlB,SAAA,EAAW;IACnC,KAAKy2K,QAAA,CAASz5K,eAAA,CAAgB3G,EAAA,EAAIxb,IAAA,EAAMmlB,SAAS;EACnD;EACAoB,SAAS/K,EAAA,EAAIxb,IAAA,EAAM;IACjB,KAAK47L,QAAA,CAASr1K,QAAA,CAAS/K,EAAA,EAAIxb,IAAI;EACjC;EACAymB,YAAYjL,EAAA,EAAIxb,IAAA,EAAM;IACpB,KAAK47L,QAAA,CAASn1K,WAAA,CAAYjL,EAAA,EAAIxb,IAAI;EACpC;EACA0mB,SAASlL,EAAA,EAAIqF,QAAOzgB,KAAA,EAAOumB,KAAA,EAAO;IAChC,KAAKi1K,QAAA,CAASl1K,QAAA,CAASlL,EAAA,EAAIqF,QAAOzgB,KAAA,EAAOumB,KAAK;EAChD;EACAK,YAAYxL,EAAA,EAAIqF,QAAO8F,KAAA,EAAO;IAC5B,KAAKi1K,QAAA,CAAS50K,WAAA,CAAYxL,EAAA,EAAIqF,QAAO8F,KAAK;EAC5C;EACAI,YAAYvL,EAAA,EAAIxb,IAAA,EAAMI,KAAA,EAAO;IAG3B,IAAI,KAAKm9L,YAAA,CAAav9L,IAAI,GAAG;MAC3B,KAAKm9L,MAAA,CAAO18L,IAAA,CAAK4jB,QAAA,IAAYA,QAAA,CAAS0C,WAAA,CAAYvL,EAAA,EAAIxb,IAAA,EAAMI,KAAK,CAAC;IACpE;IACA,KAAKw7L,QAAA,CAAS70K,WAAA,CAAYvL,EAAA,EAAIxb,IAAA,EAAMI,KAAK;EAC3C;EACA+mB,SAAS5U,IAAA,EAAMnS,KAAA,EAAO;IACpB,KAAKw7L,QAAA,CAASz0K,QAAA,CAAS5U,IAAA,EAAMnS,KAAK;EACpC;EACAinB,OAAO/K,MAAA,EAAQiD,SAAA,EAAWjN,QAAA,EAAU;IAGlC,IAAI,KAAKirL,YAAA,CAAah+K,SAAS,GAAG;MAChC,KAAK49K,MAAA,CAAO18L,IAAA,CAAK4jB,QAAA,IAAYA,QAAA,CAASgD,MAAA,CAAO/K,MAAA,EAAQiD,SAAA,EAAWjN,QAAQ,CAAC;IAC3E;IACA,OAAO,KAAKspL,QAAA,CAASv0K,MAAA,CAAO/K,MAAA,EAAQiD,SAAA,EAAWjN,QAAQ;EACzD;EACAirL,aAAaC,eAAA,EAAiB;IAE5B,OAAO,KAAKL,MAAA,KAAW,QAAQK,eAAA,CAAgB3lL,UAAA,CAAW6jL,gBAAgB;EAC5E;AACF;AA8BA,SAAS+B,uBAAuBv2L,IAAA,GAAO,cAAc;EACnDw2L,sBAAA,CAAwB,mBAAmB;EAC3C,OAAOtkL,wBAAA,CAAyB,CAAC;IAC/BN,OAAA,EAASmT,gBAAA;IACTzS,UAAA,EAAYA,CAACzC,GAAA,EAAKsN,QAAA,EAAU8F,IAAA,KAAS;MACnC,OAAO,IAAI+yK,6BAAA,CAA8BnmL,GAAA,EAAKsN,QAAA,EAAU8F,IAAA,EAAMjjB,IAAI;IACpE;IACAokB,IAAA,EAAM,CAAC7X,QAAA,EAAUqR,mBAAA,EAAsB1Z,MAAM;EAC/C,GAAG;IACD0N,OAAA,EAAS0yE,qBAAA;IACTxyE,QAAA,EAAU9R,IAAA,KAAS,SAAS,mBAAmB;EACjD,CAAC,CAAC;AACJ;;;ACvQO,IAAMy2L,SAAA,GAA+B;EAC1CtlL,SAAA,EAAW,CAAC64C,aAAA,CAAchjB,MAAM,GAAGuvJ,sBAAA,CAAsB,GAAIjlL,iBAAA,CAAiB,CAAE;;;;ACD5E,IAAOolL,oBAAA,GAAP,MAAOA,oBAAA,CAAmB;EAI/Bv+L,YAAA;IAHS,KAAAw+L,YAAA,GAA0B;IACnB,KAAAC,MAAA,GAAS,IAAIh6J,eAAA,CAA2B,KAAK+5J,YAAY;IAGxE,KAAKA,YAAA,GAAe/rL,MAAA,CAAO0sD,UAAA,CAAW,8BAA8B,EAAEO,OAAA,GAAU,SAAS;EAC1F;EAEA,IAAIg/H,MAAA,EAAK;IACR,OAAO,KAAKD,MAAA,CAAO19L,KAAA;EACpB;EAEA,IAAI29L,MAAMA,KAAA,EAAgB;IACzB,KAAKD,MAAA,CAAO3xL,IAAA,CAAK4xL,KAAK;IACtB9rL,QAAA,CAAS7L,IAAA,CAAK4rF,SAAA,GAAY+rG,KAAA,GAAQ;EACnC;EAEAC,YAAA,EAAW;IACV,KAAKD,KAAA,GAAQ,KAAKA,KAAA,KAAU,SAAS,UAAU;EAChD;;;mBAnBYH,oBAAA,EAAmB;AAAA;;SAAnBA,oBAAA;EAAmB3zL,OAAA,EAAnB2zL,oBAAA,CAAmBh0L,IAAA;EAAA8M,UAAA,EAFnB;AAAM;AAEb,IAAOunL,mBAAA,GAAPL,oBAAA;;;ACFN,IAAMnjH,QAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC;AACvC,IAAMC,OAAM,CAAC,KAAK,iBAAiB;AACnC,IAAMwjH,cAAA,GAAN,MAAMA,cAAA,CAAc,EAepB;AAbIA,cAAA,CAAKt0L,IAAA,GAAO,SAASu0L,sBAAsBl6L,CAAA,EAAG;EAC5C,OAAO,KAAKA,CAAA,IAAKi6L,cAAA,EAAe;AAClC;AAGAA,cAAA,CAAKr1J,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAMg3L,cAAA;EACNn1J,SAAA,EAAW,CAAC,CAAC,iBAAiB,CAAC;EAC/B47C,SAAA,EAAW,CAAC,GAAG,iBAAiB;EAChCz7C,QAAA,EAAU,CAAC,eAAe;EAC1BC,UAAA,EAAY;AACd,CAAC;AAbL,IAAMi1J,aAAA,GAANF,cAAA;AAAA,CAgBC,MAAM;EACL,CAAC,OAAOp9L,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi0L,aAAA,EAAe,CAAC;IACtFl3L,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;MACX;MACA4qB,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMk1J,WAAA,GAAN,MAAMA,WAAA,CAAW;EACfh/L,YAAYg+D,WAAA,EAAagB,SAAA,EAAWpsD,WAAU;IAC5C,KAAKorD,WAAA,GAAcA,WAAA;IACnB,KAAKgB,SAAA,GAAYA,SAAA;IAEjB,KAAKnzC,SAAA,GAAYjZ;EACnB;EACAulE,gBAAA,EAAkB;IAChB,IAAI,KAAKnZ,SAAA,CAAUhJ,SAAA,EAAW;MAC5B,KAAKipI,uBAAA,CAAwB;MAC7B,KAAKC,YAAA,CAAap3J,OAAA,CAAQgD,SAAA,CAAU,MAAM,KAAKm0J,uBAAA,CAAwB,CAAC;IAC1E;EACF;EAAA;AAAA;AAAA;EAIAA,wBAAA,EAA0B;IACxB,IAAI,KAAKC,YAAA,CAAap9L,MAAA,KAAW,OAAOL,SAAA,KAAc,eAAeA,SAAA,GAAY;MAG/E,MAAM09L,eAAA,GAAkBn9L,KAAA,CAAMC,IAAA,CAAK,KAAK+7D,WAAA,CAAY/S,aAAA,CAAcgZ,UAAU,EAAEjhE,MAAA,CAAOkQ,IAAA,IAAQ,EAAEA,IAAA,CAAKiU,SAAA,IAAajU,IAAA,CAAKiU,SAAA,CAAUioD,QAAA,CAAS,iBAAiB,EAAE,EAAEpsE,MAAA,CAAOkQ,IAAA,IAAQA,IAAA,CAAKyJ,QAAA,MAAc,KAAKkP,SAAA,GAAY,KAAKA,SAAA,CAAUuzK,YAAA,GAAe,EAAE,EAAEt/J,IAAA,CAAK5sB,IAAA,IAAQ,CAAC,EAAEA,IAAA,CAAKsP,WAAA,IAAetP,IAAA,CAAKsP,WAAA,CAAYxhB,IAAA,CAAK,EAAE;MAC/S,IAAIm+L,eAAA,EAAiB;QACnBE,2BAAA,CAA4B;MAC9B;IACF;EACF;AAgDF;AA9CIL,WAAA,CAAKz0L,IAAA,GAAO,SAAS+0L,mBAAmB16L,CAAA,EAAG;EACzC,OAAO,KAAKA,CAAA,IAAKo6L,WAAA,EAAehzI,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6K,QAAQ,GAAM7K,iBAAA,CAAkB53C,QAAQ,CAAC;AACrI;AAGA4qL,WAAA,CAAKpyJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMm3L,WAAA;EACNt1J,SAAA,EAAW,CAAC,CAAC,aAAa,CAAC;EAC3BklB,cAAA,EAAgB,SAAS2wI,0BAA0BpyJ,EAAA,EAAIlb,GAAA,EAAK68B,QAAA,EAAU;IACpE,IAAI3hB,EAAA,GAAK,GAAG;MACP4hB,cAAA,CAAeD,QAAA,EAAUiwI,aAAA,EAAe,CAAC;IAC9C;IACA,IAAI5xJ,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIitK,YAAA,GAAelwI,EAAA;IAClE;EACF;EACAs2B,SAAA,EAAW,CAAC,GAAG,aAAa;EAC5Bj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAASkzI,wBAAwBryJ,EAAA,EAAIlb,GAAA,EAAK;IACtD,IAAIkb,EAAA,GAAK,GAAG;MACPwoD,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,6BAA6Bp6D,GAAA,CAAIitK,YAAA,CAAap9L,MAAA,GAAS,CAAC,EAAE,0BAA0BmwB,GAAA,CAAIitK,YAAA,CAAap9L,MAAA,KAAW,CAAC;IAClI;EACF;EACA6nC,MAAA,EAAQ;IACN6+C,KAAA,EAAO;EACT;EACA3+C,QAAA,EAAU,CAAC,YAAY;EACvBC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI0zB,mBAAmB;EACjCkhD,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,QAAA,EAAU,SAASwyJ,oBAAoBtyJ,EAAA,EAAIlb,GAAA,EAAK;IAC9C,IAAIkb,EAAA,GAAK,GAAG;MACPghD,eAAA,CAAgB/S,KAAG;MACnBgT,YAAA,CAAa,CAAC;MACdA,YAAA,CAAa,GAAG,CAAC;IACtB;EACF;EACA7sE,MAAA,EAAQ,CAAC,0sDAA0sD;EACntDoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAvEL,IAAM0yG,UAAA,GAANV,WAAA;AAAA,CA0EC,MAAM;EACL,CAAC,OAAOv9L,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB40L,UAAA,EAAY,CAAC;IACnF73L,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVyb,QAAA,EAAU;MACV3qB,IAAA,EAAM;QACJ,SAAS;QACT,WAAW;QACX,qCAAqC;QACrC,kCAAkC;MACpC;MACA8tE,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCxoE,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjCpqC,UAAA,EAAY;MACZmD,QAAA,EAAU;MACV1rB,MAAA,EAAQ,CAAC,0sDAA0sD;IACrtD,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgvD;EACX,GAAG;IACDhvD,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACJ,QAAQ;IACjB,CAAC;EACH,CAAC,GAAG;IACFo0E,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACDg1J,YAAA,EAAc,CAAC;MACbr3L,IAAA,EAAMunD,eAAA;MACN56C,IAAA,EAAM,CAACuqL,aAAA,EAAe;QACpB9iJ,WAAA,EAAa;MACf,CAAC;IACH,CAAC;EACH,CAAC;AACH,GAAG;AAKH,SAASojJ,4BAAA,EAA8B;EACrC,MAAM/7L,KAAA,CAAM,gMAA0M;AACxN;AACA,IAAMq8L,iBAAA,GAAN,MAAMA,iBAAA,CAAiB,EAgBvB;AAdIA,iBAAA,CAAKp1L,IAAA,GAAO,SAASq1L,yBAAyBh7L,CAAA,EAAG;EAC/C,OAAO,KAAKA,CAAA,IAAK+6L,iBAAA,EAAkB;AACrC;AAGAA,iBAAA,CAAK9kL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAM83L;AACR,CAAC;AAGDA,iBAAA,CAAK5kL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAAC4wD,eAAA,EAAiBA,eAAe;AAC5C,CAAC;AAdL,IAAMgiH,gBAAA,GAANF,iBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOl+L,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB+0L,gBAAA,EAAkB,CAAC;IACzFh4L,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAAC4wD,eAAA,EAAiB6hH,UAAA,EAAYX,aAAa;MACpD1xK,OAAA,EAAS,CAACqyK,UAAA,EAAYX,aAAA,EAAelhH,eAAe;IACtD,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC/KH,IAAMzC,QAAM,CAAC,QAAQ;AACrB,IAAMC,QAAM,CAAC,GAAG;AAChB,SAASykH,uCAAuC3yJ,EAAA,EAAIlb,GAAA,EAAK;EACvD,IAAIkb,EAAA,GAAK,GAAG;IACP6uC,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3B4hF,cAAA,CAAe;IACf5hF,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3B5uC,SAAA,CAAU,GAAG,QAAQ,EAAE;IACvB8uC,YAAA,CAAa;IACbF,cAAA,CAAe,GAAG,OAAO,EAAE;IAC3B5uC,SAAA,CAAU,GAAG,QAAQ,EAAE;IACvB8uC,YAAA,CAAa,EAAE;EACpB;AACF;AACA,IAAM6jH,gCAAA,GAAmC,IAAI5vL,cAAA,CAAe,oCAAoC;EAC9FkH,UAAA,EAAY;EACZzM,OAAA,EAASA,CAAA,MAAO;IACdo1L,kBAAA,EAAoB;IACpBC,QAAA,EAAU;EACZ;AACF,CAAC;AAMD,IAAMC,+BAAA,GAAkC;EACtCzmL,OAAA,EAAS81H,iBAAA;EACT71H,WAAA,EAAaoY,UAAA,CAAW,MAAMquK,cAAc;EAC5CvmL,KAAA,EAAO;AACT;AAEA,IAAMwmL,oBAAA,GAAN,MAA2B;EACzBpgM,YACAuV,MAAA,EACAy6H,OAAA,EAAS;IACP,KAAKz6H,MAAA,GAASA,MAAA;IACd,KAAKy6H,OAAA,GAAUA,OAAA;EACjB;AACF;AAEA,IAAIhsB,gBAAe;AACnB,IAAMq8E,eAAA,GAAN,MAAMA,eAAA,CAAe;EACnBC,mBAAmBC,SAAA,EAAW;IAC5B,OAAO,IAAIH,oBAAA,CAAqB,MAAMG,SAAS;EACjD;EAAA;EAEA,IAAIC,SAAA,EAAW;IACb,OAAO,GAAG,KAAKl7K,EAAA,IAAM,KAAKm7K,SAAS;EACrC;EAAA;EAEAvzH,MAAA,EAAQ;IACN,KAAKwzH,cAAA,CAAez1I,aAAA,CAAciiB,KAAA,CAAM;EAC1C;EAAA;EAEA,IAAI8iE,QAAA,EAAU;IACZ,OAAO,KAAK2wD,QAAA;EACd;EACA,IAAI3wD,QAAQjvI,KAAA,EAAO;IACjB,KAAK4/L,QAAA,GAAW5/L,KAAA;IAChB,KAAKguF,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEA,IAAIs3J,QAAA,EAAU;IACZ,OAAO,GAAG,KAAKt7K,EAAA,IAAM,KAAKm7K,SAAS;EACrC;EACAzgM,YAAYg+D,WAAA,EAAa+Z,aAAA,EAAegX,kBAAA,EAAoB5kB,QAAA,EAAUksB,WAAUpB,aAAA,EAAe;IAC7F,KAAKj3B,WAAA,GAAcA,WAAA;IACnB,KAAK+Z,aAAA,GAAgBA,aAAA;IACrB,KAAKgX,kBAAA,GAAqBA,kBAAA;IAC1B,KAAKsH,QAAA,GAAWA;IAChB,KAAK8sD,SAAA,GAAYvuG,CAAA,IAAK,CAAC;IACvB,KAAK4kH,UAAA,GAAa,MAAM,CAAC;IACzB,KAAKqnC,kBAAA,GAAqB,MAAM,CAAC;IACjC,KAAKF,QAAA,GAAW;IAEhB,KAAKhgM,IAAA,GAAO;IAEZ,KAAK0yF,aAAA,GAAgB;IAErB,KAAKzuB,SAAA,GAAY;IAEjB,KAAKo4F,cAAA,GAAiB;IAEtB,KAAKv/F,QAAA,GAAW;IAEhB,KAAKoxB,aAAA,GAAgB;IAErB,KAAK1kB,QAAA,GAAW;IAEhB,KAAKpE,MAAA,GAAS,IAAIh/B,YAAA,CAAa;IAM/B,KAAK+5J,YAAA,GAAe,IAAI/5J,YAAA,CAAa;IACrC,KAAKojC,QAAA,GAAWc,QAAA,CAASd,QAAQ,KAAK;IACtC,KAAKqe,KAAA,GAAQ6N,UAAS7N,KAAA,IAAS;IAC/B,KAAKijF,eAAA,GAAkBx2E,aAAA,KAAkB;IACzC,KAAK3vE,EAAA,GAAK,KAAKm7K,SAAA,GAAY,wBAAwB,EAAEz8E,aAAY;IACjE,KAAKi8E,QAAA,GAAW5pG,UAAS4pG,QAAA,IAAY;IACrC,KAAKtyG,QAAA,GAAW,KAAK8yG,SAAA,GAAY;EACnC;EACA3yI,mBAAA,EAAqB;IACnB,KAAKiqB,aAAA,CAAcvC,OAAA,CAAQ,KAAKxX,WAAA,EAAa,IAAI,EAAElzB,SAAA,CAAUotC,WAAA,IAAe;MAC1E,IAAIA,WAAA,KAAgB,cAAcA,WAAA,KAAgB,WAAW;QAC3D,KAAKsgF,QAAA,GAAW;QAChB,KAAKzpE,kBAAA,CAAmBzlD,YAAA,CAAa;MACvC,WAAW,CAAC4uC,WAAA,EAAa;QAMvBplE,OAAA,CAAQC,OAAA,CAAQ,EAAEzG,IAAA,CAAK,MAAM;UAC3B,KAAKksJ,QAAA,GAAW;UAChB,KAAKgB,UAAA,CAAW;UAChB,KAAKzqE,kBAAA,CAAmBzlD,YAAA,CAAa;QACvC,CAAC;MACH;IACF,CAAC;EACH;EACAzB,YAAYC,OAAA,EAAS;IACnB,IAAIA,OAAA,CAAQ,UAAU,GAAG;MACvB,KAAK+4J,kBAAA,CAAmB;IAC1B;EACF;EACA/+K,YAAA,EAAc;IACZ,KAAKi2D,aAAA,CAAcjC,cAAA,CAAe,KAAK9X,WAAW;EACpD;EAAA;EAEA2xE,WAAW5uI,KAAA,EAAO;IAChB,KAAKivI,OAAA,GAAU,CAAC,CAACjvI,KAAA;EACnB;EAAA;EAEAguI,iBAAiB1rI,EAAA,EAAI;IACnB,KAAK8/I,SAAA,GAAY9/I,EAAA;EACnB;EAAA;EAEAyrI,kBAAkBzrI,EAAA,EAAI;IACpB,KAAKm2J,UAAA,GAAan2J,EAAA;EACpB;EAAA;EAEAiwI,SAAS50D,OAAA,EAAS;IAChB,OAAO,KAAK+U,QAAA,IAAY/U,OAAA,CAAQ39E,KAAA,KAAU,OAAO;MAC/C,YAAY;IACd,IAAI;EACN;EAAA;EAEAs+I,0BAA0Bh8I,EAAA,EAAI;IAC5B,KAAKw9L,kBAAA,GAAqBx9L,EAAA;EAC5B;EAAA;EAEA2rI,iBAAiB1lE,UAAA,EAAY;IAC3B,KAAK7L,QAAA,GAAW6L,UAAA;IAChB,KAAKylB,kBAAA,CAAmBzlD,YAAA,CAAa;EACvC;EAAA;EAEA2tC,OAAA,EAAS;IACP,KAAK+4D,OAAA,GAAU,CAAC,KAAKA,OAAA;IACrB,KAAKmT,SAAA,CAAU,KAAKnT,OAAO;EAC7B;EAAA;AAAA;AAAA;EAIAp0C,iBAAA,EAAmB;IACjB,KAAKunD,SAAA,CAAU,KAAKnT,OAAO;IAC3B,KAAKjqE,MAAA,CAAOj9B,IAAA,CAAK,KAAKw3J,kBAAA,CAAmB,KAAKtwD,OAAO,CAAC;EACxD;EAAA;EAEAsgC,aAAA,EAAe;IACb,KAAKwwB,YAAA,CAAah4J,IAAA,CAAK;IACvB,IAAI,CAAC,KAAKutD,QAAA,CAAS2pG,kBAAA,EAAoB;MACrC,KAAKhwD,OAAA,GAAU,CAAC,KAAKA,OAAA;MACrB,KAAKmT,SAAA,CAAU,KAAKnT,OAAO;MAC3B,KAAKjqE,MAAA,CAAOj9B,IAAA,CAAK,IAAIs3J,oBAAA,CAAqB,MAAM,KAAKpwD,OAAO,CAAC;IAC/D;EACF;EACA+wD,mBAAA,EAAqB;IACnB,IAAI,KAAK/jC,cAAA,EAAgB;MACvB,OAAO,KAAKA,cAAA;IACd;IAGA,OAAO,KAAKp4F,SAAA,GAAY,OAAO,KAAK+oB,QAAA;EACtC;AA2GF;AAzGI0yG,eAAA,CAAK91L,IAAA,GAAO,SAASy2L,uBAAuBp8L,CAAA,EAAG;EAC7C,OAAO,KAAKA,CAAA,IAAKy7L,eAAA,EAAmBr0I,iBAAA,CAAqBG,UAAU,GAAMH,iBAAA,CAAqB6rB,YAAY,GAAM7rB,iBAAA,CAAqBzkB,iBAAiB,GAAM0kB,iBAAA,CAAkB,UAAU,GAAMD,iBAAA,CAAkB+zI,gCAAgC,GAAM/zI,iBAAA,CAAkBmgC,qBAAA,EAAuB,CAAC,CAAC;AACnS;AAGAk0G,eAAA,CAAKzzJ,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9ChlC,IAAA,EAAMw4L,eAAA;EACN32J,SAAA,EAAW,CAAC,CAAC,kBAAkB,CAAC;EAChCsmD,SAAA,EAAW,SAASixG,qBAAqB9zJ,EAAA,EAAIlb,GAAA,EAAK;IAChD,IAAIkb,EAAA,GAAK,GAAG;MACP+iD,WAAA,CAAY9U,OAAK,CAAC;IACvB;IACA,IAAIjuC,EAAA,GAAK,GAAG;MACV,IAAI6hB,EAAA;MACDC,cAAA,CAAeD,EAAA,GAAQE,WAAA,CAAY,CAAC,MAAMj9B,GAAA,CAAIyuK,cAAA,GAAiB1xI,EAAA,CAAGxlD,KAAA;IACvE;EACF;EACA87E,SAAA,EAAW,CAAC,GAAG,sBAAsB;EACrCj5B,QAAA,EAAU;EACVC,YAAA,EAAc,SAAS40I,4BAA4B/zJ,EAAA,EAAIlb,GAAA,EAAK;IAC1D,IAAIkb,EAAA,GAAK,GAAG;MACPmjD,cAAA,CAAe,MAAMr+D,GAAA,CAAI3M,EAAE;MAC3BqnC,WAAA,CAAY,YAAY,IAAI,EAAE,cAAc,IAAI,EAAE,QAAQ,IAAI,EAAE,mBAAmB,IAAI;MACvFgpC,UAAA,CAAW1jE,GAAA,CAAIu2D,KAAA,GAAQ,SAASv2D,GAAA,CAAIu2D,KAAA,GAAQ,EAAE;MAC9C6D,WAAA,CAAY,gCAAgCp6D,GAAA,CAAIumI,QAAQ,EAAE,gCAAgCvmI,GAAA,CAAI+9G,OAAO,EAAE,2BAA2B/9G,GAAA,CAAIw5I,eAAe;IAC1J;EACF;EACA9hI,MAAA,EAAQ;IACNhpC,IAAA,EAAM;IACN2kB,EAAA,EAAI;IACJ+tE,aAAA,EAAe;IACfzuB,SAAA,EAAW,CAAIhY,UAAA,CAAasnB,IAAA,EAAM,cAAc,WAAW;IAC3D8oF,cAAA,EAAgB,CAAIpwG,UAAA,CAAasnB,IAAA,EAAM,mBAAmB,gBAAgB;IAC1EitH,eAAA,EAAiB,CAAIv0I,UAAA,CAAasnB,IAAA,EAAM,oBAAoB,iBAAiB;IAC7Euf,QAAA,EAAU,CAAI7mC,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F07B,KAAA,EAAO;IACP/qB,QAAA,EAAU,CAAI7Q,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;IAC/F+hC,aAAA,EAAe,CAAIjiC,UAAA,CAAaC,0BAAA,EAA4B,iBAAiB,iBAAiBC,gBAAgB;IAC9Gqd,QAAA,EAAU,CAAIvd,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAY9rD,KAAA,IAASA,KAAA,IAAS,OAAO,IAAIs0F,eAAA,CAAgBt0F,KAAK,CAAC;IAClIivI,OAAA,EAAS,CAAIpjF,UAAA,CAAaC,0BAAA,EAA4B,WAAW,WAAWC,gBAAgB;IAC5FmzI,QAAA,EAAU,CAAIrzI,UAAA,CAAaC,0BAAA,EAA4B,YAAY,YAAYC,gBAAgB;EACjG;EACAljB,OAAA,EAAS;IACPm8B,MAAA,EAAQ;IACR+6H,YAAA,EAAc;EAChB;EACAj3J,QAAA,EAAU,CAAC,gBAAgB;EAC3BC,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACmlH,+BAAA,EAAiC;IACjEzmL,OAAA,EAAS43H,aAAA;IACT33H,WAAA,EAAa2mL,eAAA;IACbzmL,KAAA,EAAO;EACT,CAAC,CAAC,GAAMmzC,wBAAA,EAA6BhjB,oBAAA,EAAyB+C,mBAAmB;EACjFkhD,kBAAA,EAAoB3S;EACpBtuC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNihD,MAAA,EAAQ,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,2BAA2B,IAAI,GAAG,eAAe,GAAG,CAAC,QAAQ,UAAU,QAAQ,UAAU,GAAG,cAAc,GAAG,SAAS,YAAY,UAAU,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,GAAG,oBAAoB,GAAG,CAAC,GAAG,oBAAoB,GAAG,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,oBAAoB,GAAG,CAAC,cAAc,IAAI,GAAG,+BAA+B,2BAA2B,GAAG,oBAAoB,qBAAqB,mBAAmB,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,aAAa,GAAG,SAAS,KAAK,GAAG,CAAC,WAAW,aAAa,eAAe,QAAQ,GAAG,oBAAoB,sBAAsB,GAAG,CAAC,KAAK,qEAAqE,GAAG,CAAC,WAAW,aAAa,eAAe,QAAQ,GAAG,oBAAoB,uBAAuB,GAAG,CAAC,KAAK,mBAAmB,CAAC;EAC70BhhD,QAAA,EAAU,SAASm0J,wBAAwBj0J,EAAA,EAAIlb,GAAA,EAAK;IAClD,IAAIkb,EAAA,GAAK,GAAG;MACV,MAAM+zF,GAAA,GAASC,gBAAA,CAAiB;MAC7BhzC,eAAA,CAAgB;MAChBnS,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,UAAU,GAAG,CAAC;MAC7CxvB,UAAA,CAAW,SAAS,SAAS60I,gDAAA,EAAkD;QAC7E//D,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAYtvG,GAAA,CAAIq+I,YAAA,CAAa,CAAC;MAC1C,CAAC;MACEljI,SAAA,CAAU,GAAG,OAAO,CAAC;MACrB4uC,cAAA,CAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;MACpD5uC,SAAA,CAAU,GAAG,OAAO,CAAC;MACrB8uC,YAAA,CAAa;MACbF,cAAA,CAAe,GAAG,OAAO,CAAC;MAC1B5uC,SAAA,CAAU,GAAG,OAAO,CAAC;MACrB8uC,YAAA,CAAa;MACbsU,UAAA,CAAW,IAAIsvG,sCAAA,EAAwC,GAAG,GAAG,OAAO,EAAE;MACtE5jH,YAAA,CAAa,EAAE,EAAE;MACjBF,cAAA,CAAe,IAAI,SAAS,EAAE;MAC9BxvB,UAAA,CAAW,SAAS,SAAS80I,gDAAgD50I,MAAA,EAAQ;QACnF40E,aAAA,CAAcJ,GAAG;QACpB,OAAUK,WAAA,CAAY70E,MAAA,CAAOi1G,eAAA,CAAgB,CAAC;MAChD,CAAC;MACEvzE,YAAA,CAAa,EAAE;MACflS,YAAA,CAAa,EAAE;IACpB;IACA,IAAI/uC,EAAA,GAAK,GAAG;MACV,MAAMo0J,SAAA,GAAe9qE,WAAA,CAAY,CAAC;MAC/B76C,UAAA,CAAW,iBAAiB3pD,GAAA,CAAIohE,aAAa;MAC7ClX,SAAA,CAAU;MACVkQ,WAAA,CAAY,wBAAwBp6D,GAAA,CAAI+9G,OAAO,EAAE,0BAA0B,CAAC/9G,GAAA,CAAI+9G,OAAO,EAAE,uBAAuB/9G,GAAA,CAAI+9G,OAAO,EAAE,wBAAwB/9G,GAAA,CAAIwrC,QAAQ;MACjKme,UAAA,CAAW,YAAY3pD,GAAA,CAAIwrC,QAAA,GAAW,KAAKxrC,GAAA,CAAIk4C,QAAQ,EAAE,YAAYl4C,GAAA,CAAIwrC,QAAQ;MACjF9Q,WAAA,CAAY,MAAM16B,GAAA,CAAIuuK,QAAQ,EAAE,QAAQvuK,GAAA,CAAItxB,IAAI,EAAE,cAAcsxB,GAAA,CAAI2yC,SAAS,EAAE,mBAAmB3yC,GAAA,CAAI8uK,kBAAA,CAAmB,CAAC,EAAE,oBAAoB9uK,GAAA,CAAIkvK,eAAe,EAAE,iBAAiBlvK,GAAA,CAAIwhE,QAAA,IAAY,IAAI,EAAE,gBAAgBxhE,GAAA,CAAI+9G,OAAO;MACvO7zD,SAAA,CAAU,CAAC;MACXP,UAAA,CAAW,oBAAoB2lH,SAAS,EAAE,qBAAqBtvK,GAAA,CAAI48D,aAAA,IAAiB58D,GAAA,CAAIwrC,QAAQ,EAAE,qBAAqB,IAAI;MAC3H0e,SAAA,CAAU;MACVsU,aAAA,CAAc,IAAI,CAACx+D,GAAA,CAAIguK,QAAA,GAAW,KAAK,EAAE;MACzC9jH,SAAA,CAAU;MACVP,UAAA,CAAW,OAAO3pD,GAAA,CAAIuuK,QAAQ;MAC9B7zI,WAAA,CAAY,MAAM16B,GAAA,CAAI07D,QAAQ;IACnC;EACF;EACAtgD,YAAA,EAAc,CAACk/C,SAAA,EAAWiH,qBAAqB;EAC/CjyE,MAAA,EAAQ,CAAC,g/fAAw/f;EACjggBoD,aAAA,EAAe;EACfqoE,eAAA,EAAiB;AACnB,CAAC;AAzPL,IAAMmzG,cAAA,GAANE,eAAA;AAAA,CA4PC,MAAM;EACL,CAAC,OAAO5+L,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBq1L,cAAA,EAAgB,CAAC;IACvFt4L,IAAA,EAAM0lC,SAAA;IACN/4B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;MACVlP,IAAA,EAAM;QACJ,SAAS;QACT,QAAQ;QAAA;QAER,mBAAmB;QACnB,qBAAqB;QACrB,eAAe;QACf,0BAA0B;QAC1B,wCAAwC;QACxC,wCAAwC;QACxC,mCAAmC;QACnC,WAAW;MACb;MACA2qB,QAAA,EAAU;MACVllB,aAAA,EAAeC,mBAAA,CAAkBsvD,IAAA;MACjC8Y,eAAA,EAAiBE,uBAAA,CAAwBC,MAAA;MACzCn0E,SAAA,EAAW,CAACknL,+BAAA,EAAiC;QAC3CzmL,OAAA,EAAS43H,aAAA;QACT33H,WAAA,EAAaymL,cAAA;QACbvmL,KAAA,EAAO;MACT,CAAC;MACDkwB,UAAA,EAAY;MACZ7c,OAAA,EAAS,CAACs/D,SAAA,EAAWiH,qBAAqB;MAC1CvmD,QAAA,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;MACV1rB,MAAA,EAAQ,CAAC,g/fAAw/f;IACnggB,CAAC;EACH,CAAC,GAAG,MAAM,CAAC;IACT1Z,IAAA,EAASskD;EACX,GAAG;IACDtkD,IAAA,EAASgwE;EACX,GAAG;IACDhwE,IAAA,EAAS0/B;EACX,GAAG;IACD1/B,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMolD,SAAA;MACNz4C,IAAA,EAAM,CAAC,UAAU;IACnB,CAAC;EACH,GAAG;IACD3M,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAACurL,gCAAgC;IACzC,CAAC;EACH,GAAG;IACDl4L,IAAA,EAAM;IACNyM,UAAA,EAAY,CAAC;MACXzM,IAAA,EAAMyb;IACR,GAAG;MACDzb,IAAA,EAAM0M,MAAA;MACNC,IAAA,EAAM,CAAC23E,qBAAqB;IAC9B,CAAC;EACH,CAAC,GAAG;IACFu0G,cAAA,EAAgB,CAAC;MACf74L,IAAA,EAAM8oF,SAAA;MACNn8E,IAAA,EAAM,CAAC,QAAQ;IACjB,CAAC;IACD7T,IAAA,EAAM,CAAC;MACLkH,IAAA,EAAMqiC;IACR,CAAC;IACD5kB,EAAA,EAAI,CAAC;MACHzd,IAAA,EAAMqiC;IACR,CAAC;IACDmpD,aAAA,EAAe,CAAC;MACdxrF,IAAA,EAAMqiC;IACR,CAAC;IACD06B,SAAA,EAAW,CAAC;MACV/8D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,YAAY;IACrB,CAAC;IACDwoJ,cAAA,EAAgB,CAAC;MACfn1J,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,iBAAiB;IAC1B,CAAC;IACD2sL,eAAA,EAAiB,CAAC;MAChBt5L,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC,kBAAkB;IAC3B,CAAC;IACDi/E,QAAA,EAAU,CAAC;MACT5rF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD07B,KAAA,EAAO,CAAC;MACN3gF,IAAA,EAAMqiC;IACR,CAAC;IACDuzB,QAAA,EAAU,CAAC;MACT51D,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACD+hC,aAAA,EAAe,CAAC;MACdhnF,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDqd,QAAA,EAAU,CAAC;MACTtiE,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWpsD,KAAA,IAASA,KAAA,IAAS,OAAO,IAAIs0F,eAAA,CAAgBt0F,KAAK;MAC/D,CAAC;IACH,CAAC;IACDivI,OAAA,EAAS,CAAC;MACRnoI,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDmzI,QAAA,EAAU,CAAC;MACTp4L,IAAA,EAAMqiC,KAAA;MACN11B,IAAA,EAAM,CAAC;QACL24C,SAAA,EAAWL;MACb,CAAC;IACH,CAAC;IACDiZ,MAAA,EAAQ,CAAC;MACPl+D,IAAA,EAAMsiC;IACR,CAAC;IACD22J,YAAA,EAAc,CAAC;MACbj5L,IAAA,EAAMsiC;IACR,CAAC;EACH,CAAC;AACH,GAAG;AAMH,IAAMq3J,mCAAA,GAAsC;EAC1C/nL,OAAA,EAAS43H,aAAA;EACT33H,WAAA,EAAaoY,UAAA,CAAW,MAAM2vK,+BAA+B;EAC7D7nL,KAAA,EAAO;AACT;AAYA,IAAM8nL,gCAAA,GAAN,MAAMA,gCAAA,SAAwCnzC,yBAAA,CAA0B,EAiBxE;AAfImzC,gCAAA,CAAKn3L,IAAA,GAAuB,sBAAM;EAChC,IAAIo3L,4CAAA;EACJ,OAAO,SAASC,wCAAwCh9L,CAAA,EAAG;IACzD,QAAQ+8L,4CAAA,KAAiDA,4CAAA,GAAkD18I,qBAAA,CAAsBy8I,gCAA+B,IAAI98L,CAAA,IAAK88L,gCAA+B;EAC1M;AACF,GAAG;AAGHA,gCAAA,CAAKl4J,IAAA,GAAsB,eAAGC,iBAAA,CAAkB;EAC9C5hC,IAAA,EAAM65L,gCAAA;EACNh4J,SAAA,EAAW,CAAC,CAAC,oBAAoB,YAAY,IAAI,mBAAmB,EAAE,GAAG,CAAC,oBAAoB,YAAY,IAAI,eAAe,EAAE,GAAG,CAAC,oBAAoB,YAAY,IAAI,WAAW,EAAE,CAAC;EACrLI,UAAA,EAAY;EACZ1wB,QAAA,EAAU,CAAI2hE,kBAAA,CAAmB,CAACymH,mCAAmC,CAAC,GAAMlsG,0BAA0B;AACxG,CAAC;AAfL,IAAMmsG,+BAAA,GAANC,gCAAA;AAAA,CAkBC,MAAM;EACL,CAAC,OAAOjgM,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkB22L,+BAAA,EAAiC,CAAC;IACxG55L,IAAA,EAAMoiC,SAAA;IACNz1B,IAAA,EAAM,CAAC;MACL4Z,QAAA,EAAU;AAAA;MAEVpV,SAAA,EAAW,CAACwoL,mCAAmC;MAC/C13J,UAAA,EAAY;IACd,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAM+3J,uCAAA,GAAN,MAAMA,uCAAA,CAAuC,EAc7C;AAZIA,uCAAA,CAAKt3L,IAAA,GAAO,SAASu3L,+CAA+Cl9L,CAAA,EAAG;EACrE,OAAO,KAAKA,CAAA,IAAKi9L,uCAAA,EAAwC;AAC3D;AAGAA,uCAAA,CAAKhnL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMg6L;AACR,CAAC;AAGDA,uCAAA,CAAK9mL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB,CAAC,CAAC;AAZrD,IAAM+mL,sCAAA,GAANF,uCAAA;AAAA,CAeC,MAAM;EACL,CAAC,OAAOpgM,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBi3L,sCAAA,EAAwC,CAAC;IAC/Gl6L,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACw0K,+BAA+B;MACzCp0K,OAAA,EAAS,CAACo0K,+BAA+B;IAC3C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAMO,qBAAA,GAAN,MAAMA,qBAAA,CAAqB,EAgB3B;AAdIA,qBAAA,CAAKz3L,IAAA,GAAO,SAAS03L,6BAA6Br9L,CAAA,EAAG;EACnD,OAAO,KAAKA,CAAA,IAAKo9L,qBAAA,EAAsB;AACzC;AAGAA,qBAAA,CAAKnnL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CjT,IAAA,EAAMm6L;AACR,CAAC;AAGDA,qBAAA,CAAKjnL,IAAA,GAAsB,eAAGC,gBAAA,CAAiB;EAC7CiS,OAAA,EAAS,CAACkzK,cAAA,EAAgBtiH,eAAA,EAAiBA,eAAe;AAC5D,CAAC;AAdL,IAAMqkH,oBAAA,GAANF,qBAAA;AAAA,CAiBC,MAAM;EACL,CAAC,OAAOvgM,SAAA,KAAc,eAAeA,SAAA,KAAiBqJ,gBAAA,CAAkBo3L,oBAAA,EAAsB,CAAC;IAC7Fr6L,IAAA,EAAMqT,QAAA;IACN1G,IAAA,EAAM,CAAC;MACLyY,OAAA,EAAS,CAACkzK,cAAA,EAAgBtiH,eAAe;MACzCxwD,OAAA,EAAS,CAAC8yK,cAAA,EAAgBtiH,eAAe;IAC3C,CAAC;EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;;IC9gBC7B,cAAA;IAAgGC,MAAA;IAAeC,YAAA;;;;IAArEN,UAAA,eAAAumH,MAAA,CAAAthM,GAAA;IAAsDs7E,SAAA;IAAAo7C,iBAAA,CAAA4qE,MAAA,CAAAphM,KAAA;;;;;IAU9Fi7E,cAAA;IACC5uC,SAAA;IACA6uC,MAAA;IACDC,YAAA;;;;IAHuBN,UAAA,UAAAwmH,SAAA,CAAAvhM,GAAA,EAAoB,oBAAAuhM,SAAA,CAAAvhM,GAAA;IACrCs7E,SAAA;IAAAP,UAAA,gCAAAwmH,SAAA,CAAAvhM,GAAA,WAAAwhM,aAAA,EAAmD,OAAAD,SAAA,CAAArhM,KAAA;IACxDo7E,SAAA;IAAAC,kBAAA,MAAAgmH,SAAA,CAAArhM,KAAA;;;ACED,IAAOuhM,gBAAA,GAAP,MAAOA,gBAAA,CAAe;EAP5BtiM,YAAA;IAWoB,KAAAuhD,MAAA,GAAiB/1C,MAAA,CAAOo/C,MAAM;IAK9B,KAAA23I,mBAAA,GAA2C/2L,MAAA,CAAOozL,mBAAmB;IAUjF,KAAA4D,cAAA,GAA0B,KAAKC,oBAAA,CAAqB,KAAKlhJ,MAAA,CAAO36C,GAAG;IAK1D,KAAA87L,IAAA,GAAOttI,qBAAA;IAKP,KAAAutI,OAAA,GAAU9M,WAAA;IAKP,KAAA3gI,SAAA,GAAYA,SAAA;IAKd,KAAA0tI,GAAA,GAChB;IAKgB,KAAAC,IAAA,GAChB;;;;;EAKD1qH,gBAAA,EAAe;IACd,IAAI,CAAC,KAAKl4D,OAAA,EAAS;IAEnB,MAAMu+K,YAAA,GAAe,KAAK+D,mBAAA,CAAoB7D,KAAA;IAE9C,KAAKz+K,OAAA,CAAQgrC,aAAA,CACXrtC,aAAA,CAAc,uBAAuB,EACrCimB,UAAA,CAAW9gB,YAAA,CAAa,KAAKy7K,YAAA,KAAiB,UAAU,KAAKqE,IAAA,GAAO,KAAKD,GAAG;IAC9E,KAAK3iL,OAAA,CAAQgrC,aAAA,CACXrtC,aAAA,CAAc,wBAAwB,EACtCimB,UAAA,CAAW9gB,YAAA,CAAa,KAAKy7K,YAAA,KAAiB,UAAU,KAAKoE,GAAA,GAAM,KAAKC,IAAI;EAC/E;;;;;;EAOQJ,qBAAqB77L,GAAA,EAAW;IACvC,MAAM64E,MAAA,GAAS74E,GAAA,CAAItG,KAAA,CAAM,GAAG,EAAE,CAAC;IAE/B,OAAOs1L,OAAA,CAAQxrD,QAAA,CAAS3qD,MAAM,IAAIA,MAAA,GAAS;EAC5C;;;;EAKAk/G,YAAA,EAAW;IACV,KAAK4D,mBAAA,CAAoB5D,WAAA,CAAW;EACrC;;;mBAhFY2D,gBAAA,EAAe;AAAA;;QAAfA,gBAAA;EAAe54J,SAAA;EAAAsmD,SAAA,WAAA8yG,sBAAA31J,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;4BAcMgf,UAAU;;;;;;;;;;;;;;;MDrC5C6vB,cAAA,iBAAuB,qBACO;MAE3B5uC,SAAA;MACD8uC,YAAA;MAEAF,cAAA,cAAmB;MAEjBwqF,gBAAA,IAAAu8B,8BAAA,gBAAApL,sBAAA;MAGDz7G,YAAA;MAEAF,cAAA,cAAsB;MAEpB5uC,SAAA;MAEA4uC,cAAA;MAAYgnH,gBAAA,yBAAAC,4DAAAv2I,MAAA;QAAA40E,aAAA,CAAAJ,GAAA;QAAAgiE,kBAAA,CAAAjxK,GAAA,CAAAuwK,cAAA,EAAA91I,MAAA,MAAAz6B,GAAA,CAAAuwK,cAAA,GAAA91I,MAAA;QAAA,OAAA60E,WAAA,CAAA70E,MAAA;MAAA;MACX85G,gBAAA,KAAA28B,+BAAA,0BAAAxL,sBAAA;;MAMDz7G,YAAA,GAAa;MAGdF,cAAA;MAA8BxvB,UAAA,oBAAA42I,6DAAA;QAAA9hE,aAAA,CAAAJ,GAAA;QAAA,OAAAK,WAAA,CAAUtvG,GAAA,CAAA0sK,WAAA,EAAa;MAAA;MAArDziH,YAAA,GAA6H,EACxH,EACD,EACO;;;MAtBXC,SAAA;MAAA2qF,UAAA,CAAA70I,GAAA,CAAAywK,IAAA;MAOgBvmH,SAAA;MAAAP,UAAA,gCAAA3pD,GAAA,CAAAuwK,cAAA,WAAAH,aAAA,EAAuD,OAAApwK,GAAA,CAAAuwK,cAAA;MAE1DrmH,SAAA;MAAAknH,gBAAA,UAAApxK,GAAA,CAAAuwK,cAAA;MACXrmH,SAAA;MAAA2qF,UAAA,CAAA6vB,WAAA,QAAA1kK,GAAA,CAAA0wK,OAAA;;;iBCCKz1K,YAAA,EAAY0uK,YAAA,EAAEhnI,YAAA,EAAY5H,UAAA,EAAAmC,gBAAA,EAAEopC,eAAA,EAAerC,SAAA,EAAEyrC,YAAA,EAAc68B,eAAA,EAAe1lC,SAAA,EAAAolC,SAAA,EAAAxtE,SAAA,EAAEwxG,oBAAA,EAAoB/B,cAAA,EAAEN,gBAAA,EAAgBH,UAAA;EAAAn+K,MAAA;AAAA;AAIvH,IAAO+hL,eAAA,GAAPhB,gBAAA;;wEAAOgB,eAAA,EAAe;IAAA3wG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;ACZtB,IAAOuO,aAAA,GAAP,MAAOA,aAAA,CAAY;EAPzBvjM,YAAA;IAQC,KAAAsvB,KAAA,GAAQ;;;;mBADIi0K,aAAA,EAAY;AAAA;;QAAZA,aAAA;EAAY75J,SAAA;EAAAI,UAAA;EAAA1wB,QAAA,GAAA0zB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAihD,MAAA;EAAAhhD,QAAA,WAAAu2J,sBAAAr2J,EAAA,EAAAlb,GAAA;IAAA,IAAAkb,EAAA;MCXzBC,SAAA;MAEA4uC,cAAA;MACC5uC,SAAA;MACD8uC,YAAA;;;iBDGWlyC,YAAA,EAAcs5J,eAAe;EAAA/hL,MAAA;AAAA;AAIlC,IAAOkiL,YAAA,GAAPF,aAAA;;wEAAOE,YAAA,EAAY;IAAA9wG,SAAA;IAAAoiG,QAAA;IAAAC,UAAA;EAAA;AAAA;;;AELzB9pK,oBAAA,CAAqBu4K,YAAA,EAAcnF,SAAS,EACzCttK,KAAA,CAAO+yB,GAAA,IAAQtzB,OAAA,CAAQvnB,KAAA,CAAM66C,GAAG,CAAC","names":["HttpHandler","HttpBackend","HttpHeaders","_HttpHeaders","constructor","headers","normalizedNames","Map","lazyUpdate","lazyInit","split","forEach","line","index","indexOf","name","slice","key","toLowerCase","value","trim","maybeSetNormalizedName","has","get","push","set","Headers","values","setHeaderEntries","ngDevMode","assertValidHeaders","Object","entries","init","length","keys","Array","from","getAll","append","clone","op","delete","lcName","copyFrom","update","applyUpdate","other","concat","base","toDelete","existing","filter","headerValues","isArray","map","toString","fn","Error","HttpUrlEncodingCodec","encodeKey","standardEncoding","encodeValue","decodeKey","decodeURIComponent","decodeValue","paramParser","rawParams","codec","params","replace","param","eqIdx","val","list","STANDARD_ENCODING_REGEX","STANDARD_ENCODING_REPLACEMENTS","v","encodeURIComponent","s","t","valueToString","HttpParams","_HttpParams","options","updates","cloneFrom","encoder","fromString","fromObject","res","appendAll","_value","eKey","join","idx","splice","HttpContext","token","defaultValue","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","isUrlSearchParams","URLSearchParams","HttpRequest","_HttpRequest","url","third","fourth","body","reportProgress","withCredentials","responseType","toUpperCase","context","transferCache","urlWithParams","qIdx","sep","serializeBody","JSON","stringify","detectContentTypeHeader","type","setHeaders","reduce","setParams","HttpEventType","HttpResponseBase","defaultStatus","HttpStatusCode","Ok","defaultStatusText","status","statusText","ok","HttpHeaderResponse","_HttpHeaderResponse","ResponseHeader","HttpResponse","_HttpResponse","Response","HttpErrorResponse","message","error","addBody","observe","_HttpClient","handler","request","first","req","events$","of","pipe","concatMap","handle","res$","event","head","jsonp","callbackParam","patch","post","put","ɵfac","HttpClient_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","HttpClient","setClassMetadata","Injectable","XSSI_PREFIX$1","REQUEST_URL_HEADER","getResponseUrl$1","response","xRequestUrl","toLocaleLowerCase","_FetchBackend","fetchImpl","inject","FetchFactory","optional","fetch","bind","globalThis","ngZone","NgZone","Observable","observer","aborter","AbortController","doRequest","signal","then","noop","abort","__async","createRequestInit","fetchPromise","__spreadValues","silenceSuperfluousUnhandledPromiseRejection","next","Sent","contentLength","chunks","reader","getReader","receivedLength","decoder","partialText","reqZone","Zone","current","runOutsideAngular","done","read","TextDecoder","decode","stream","DownloadProgress","total","loaded","run","chunksAll","concatChunks","contentType","parseBody","complete","binContent","text","parse","buffer","credentials","detectedType","totalLength","Uint8Array","position","chunk","FetchBackend_Factory","FetchBackend","promise","interceptorChainEndFn","finalHandlerFn","adaptLegacyInterceptorToChain","chainTailFn","interceptor","initialRequest","intercept","downstreamRequest","chainedInterceptorFn","interceptorFn","injector","runInInjectionContext","HTTP_INTERCEPTORS","InjectionToken","HTTP_INTERCEPTOR_FNS","HTTP_ROOT_INTERCEPTOR_FNS","PRIMARY_HTTP_BACKEND","legacyInterceptorFnFactory","chain","interceptors","reduceRight","pendingTasks","PendingTasks","taskId","add","finalize","remove","fetchBackendWarningDisplayed","_HttpInterceptorHandler","backend","primaryHttpBackend","isServer","isPlatformServer","PLATFORM_ID","Console","warn","formatRuntimeError","dedupedInterceptorFns","Set","nextSequencedFn","HttpInterceptorHandler_Factory","EnvironmentInjector","HttpInterceptorHandler","nextRequestId","foreignDocument","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONP_ERR_WRONG_RESPONSE_TYPE","JSONP_ERR_HEADERS_NOT_SUPPORTED","JsonpCallbackContext","jsonpCallbackContext","window","_JsonpClientBackend","callbackMap","document","resolvedPromise","Promise","resolve","nextCallback","callback","node","createElement","src","finished","data","cleanup","parentNode","removeChild","onLoad","onError","addEventListener","appendChild","removeListeners","script","implementation","createHTMLDocument","adoptNode","JsonpClientBackend_Factory","DOCUMENT","JsonpClientBackend","decorators","Inject","args","jsonpInterceptorFn","_JsonpInterceptor","JsonpInterceptor_Factory","JsonpInterceptor","XSSI_PREFIX","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","_HttpXhrBackend","xhrFactory","RuntimeError","source","ɵloadImpl","switchMap","build","open","setRequestHeader","reqBody","headerResponse","partialFromXhr","NoContent","responseText","originalBody","sentHeaders","onDownProgress","progressEvent","lengthComputable","onUpProgress","progress","UploadProgress","upload","send","removeEventListener","readyState","DONE","HttpXhrBackend_Factory","XhrFactory","HttpXhrBackend","XSRF_ENABLED","XSRF_DEFAULT_COOKIE_NAME","XSRF_COOKIE_NAME","providedIn","XSRF_DEFAULT_HEADER_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","_HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","getToken","cookieString","cookie","parseCookieValue","HttpXsrfCookieExtractor_Factory","HttpXsrfCookieExtractor","xsrfInterceptorFn","lcUrl","startsWith","headerName","_HttpXsrfInterceptor","HttpXsrfInterceptor_Factory","HttpXsrfInterceptor","HttpFeatureKind","makeHttpFeature","kind","providers","ɵkind","ɵproviders","provideHttpClient","features","featureKinds","f","NoXsrfProtection","CustomXsrfConfiguration","provide","useExisting","useValue","multi","useClass","feature","makeEnvironmentProviders","LEGACY_INTERCEPTOR_FN","withInterceptorsFromDi","LegacyInterceptors","useFactory","withXsrfConfiguration","withNoXsrfProtection","withJsonpSupport","JsonpSupport","_HttpClientXsrfModule","disable","ngModule","withOptions","HttpClientXsrfModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","HttpClientXsrfModule","NgModule","_HttpClientModule","HttpClientModule_Factory","HttpClientModule","_HttpClientJsonpModule","HttpClientJsonpModule_Factory","HttpClientJsonpModule","CACHE_OPTIONS","GenericBrowserDomAdapter","DomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","_BrowserDomAdapter","makeCurrent","setRootDomAdapter","onAndCancel","el","evt","listener","dispatchEvent","tagName","getDefaultDocument","createHtmlDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","querySelector","getAttribute","URL","baseURI","pathname","BrowserGetTestability","addToWindow","registry","_global","elem","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","whenAllStable","testabilities","count","decrement","whenStable","getTestability","getDOM","host","parentElement","_BrowserXhr","XMLHttpRequest","BrowserXhr_Factory","BrowserXhr","EVENT_MANAGER_PLUGINS","_EventManager","plugins","_zone","_eventNameToPlugin","plugin","manager","_plugins","reverse","element","eventName","_findPluginFor","getZone","find","supports","EventManager_Factory","EventManager","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","_SharedStylesHost","appId","nonce","platformId","styleRef","hostNodes","styleNodesInDOM","collectServerRenderedStyles","platformIsServer","resetHostNodes","addStyles","styles","style","usageCount","changeUsageCount","onStyleAdded","removeStyles","onStyleRemoved","ngOnDestroy","clear","getAllStyles","addHost","hostNode","addStyleToHost","removeHost","elements","querySelectorAll","styleMap","textContent","delta","styleRefValue","usage","getStyleElement","styleEl","removeAttribute","setAttribute","styleElRef","SharedStylesHost_Factory","APP_ID","CSP_NONCE","SharedStylesHost","Document","Optional","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","shimContentAttribute","componentShortId","shimHostAttribute","shimStylesContent","compId","_DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestroy","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","ViewEncapsulation$1","ShadowDom","__spreadProps","Emulated","renderer","getOrCreateRenderer","EmulatedEncapsulationDomRenderer2","applyToHost","NoneEncapsulationDomRenderer","applyStyles","id","ShadowDomRenderer","DomRendererFactory2_Factory","DomRendererFactory2","create","throwOnSyntheticProps","destroyNode","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","RendererStyleFlags2","DashCase","Important","setProperty","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","decoratePreventDefault","eventHandler","allowDefaultBehavior","runGuarded","preventDefault","AT_CHARCODE","charCodeAt","nameKind","hostEl","component","shadowRoot","attachShadow","mode","nodeOrShadowRoot","contentAttr","hostAttr","_DomEventsPlugin","DomEventsPlugin_Factory","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","_KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","domEventName","shift","_normalizeKey","pop","fullKey","codeIX","modifierName","result","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","keyName","KeyEventsPlugin_Factory","KeyEventsPlugin","bootstrapApplication","rootComponent","internalCreateApplication","createProvidersConfig","appProviders","BROWSER_MODULE_PROVIDERS","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","errorHandler","ErrorHandler","_document","setDocument","PLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","deps","platformBrowser","createPlatformFactory","platformCore","BROWSER_MODULE_PROVIDERS_MARKER","TESTABILITY_PROVIDERS","TESTABILITY_GETTER","TESTABILITY","Testability","TestabilityRegistry","INJECTOR_SCOPE","RendererFactory2","_BrowserModule","providersAlreadyPresent","withServerTransition","BrowserModule_Factory","imports","CommonModule","ApplicationModule","BrowserModule","exports","SkipSelf","_Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","getElementsByTagName","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","Meta","httpEquiv","_Title","getTitle","title","setTitle","newTitle","Title_Factory","Title","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","_HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGestureConfig_Factory","HammerGestureConfig","_HammerGesturesPlugin","_config","console","loader","_loaderPromise","hasOwnProperty","isCustomEvent","cancelRegistration","deregister","catch","eventObj","on","off","HammerGesturesPlugin_Factory","HammerGesturesPlugin","_HammerModule","HammerModule_Factory","HammerModule","_DomSanitizer","DomSanitizer_Factory","r","DomSanitizerImpl","DomSanitizer","forwardRef","_DomSanitizerImpl","sanitize","ctx","SecurityContext","NONE","HTML","allowSanitizationBypassAndThrow","unwrapSafeValue","_sanitizeHtml","String","STYLE","SCRIPT","_sanitizeUrl","RESOURCE_URL","XSS_SECURITY_URL","bypassSecurityTrustHtml","bypassSanitizationTrustHtml","bypassSecurityTrustStyle","bypassSanitizationTrustStyle","bypassSecurityTrustScript","bypassSanitizationTrustScript","bypassSecurityTrustUrl","bypassSanitizationTrustUrl","bypassSecurityTrustResourceUrl","bypassSanitizationTrustResourceUrl","DomSanitizerImpl_Factory","HydrationFeatureKind","VERSION","Version","PRIMARY_OUTLET","RouteTitleKey","Symbol","ParamsAsMap","prototype","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","route","path","pathMatch","hasChildren","posParams","part","segment","isParameter","substring","consumed","shallowEqualArrays","a","b","i","shallowEqual","k1","getDataKeys","k2","equalArraysOrString","obj","getOwnPropertySymbols","aSorted","sort","bSorted","last","wrapIntoObservable","isObservable","isPromise","pathCompareMap","equalSegmentGroups","containsSegmentGroup","paramCompareMap","equalParams","containsParams","ignored","containsTree","container","containee","paths","root","matrixParams","queryParams","fragment","equalPath","matrixParamsMatch","numberOfChildren","c","children","containsSegmentGroupHelper","containeePaths","containerPaths","containeeSegment","parameters","UrlTree","UrlSegmentGroup","queryParamMap","_queryParamMap","DEFAULT_SERIALIZER","serialize","serializePaths","UrlSegment","parameterMap","_parameterMap","serializePath","equalSegments","as","bs","mapChildrenIntoArray","childOutlet","child","_UrlSerializer","UrlSerializer_Factory","DefaultUrlSerializer","UrlSerializer","p","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","primary","k","encodeUriString","encodeUriQuery","encodeURI","encodeUriSegment","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","MATRIX_PARAM_SEGMENT_RE","matchMatrixKeySegments","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","createRoot","rootCandidate","squashSegmentGroup","newChildren","childCandidate","grandChildOutlet","grandChild","mergeTrivialChildren","isUrlTree","createUrlTreeFromSnapshot","relativeTo","commands","relativeToUrlSegmentGroup","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","targetGroup","createSegmentGroupFromRouteRecursive","currentRoute","childOutlets","childSnapshot","outlet","rootSegmentGroup","nav","computeNavigation","toRoot","findStartingPositionForTargetGroup","newSegmentGroup","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","isCommandWithOutlets","oldRoot","oldSegmentGroup","qp","replaceSegment","newRoot","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","cmd","cmdIdx","urlPart","partIndex","Position","NaN","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getOutlets","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","some","o","childrenOfEmptyChild","currentCommandIndex","currentPathIndex","noMatch","curr","compare","createNewSegmentChildren","IMPERATIVE_NAVIGATION","EventType","RouterEvent","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancellationCode","NavigationSkippedCode","NavigationCancel","reason","NavigationSkipped","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","anchor","pos","BeforeActivateRoutes","RedirectRequest","stringifyEvent","OutletContext","ChildrenOutletContexts","attachRef","_ChildrenOutletContexts","contexts","onChildOutletCreated","childName","getOrCreateContext","onChildOutletDestroyed","getContext","onOutletDeactivated","onOutletReAttached","ChildrenOutletContexts_Factory","Tree","_root","pathFromRoot","n","findNode","firstChild","siblings","findPath","cc","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","urlSubject","paramsSubject","queryParamsSubject","fragmentSubject","dataSubject","futureSnapshot","_futureSnapshot","d","_routerState","paramMap","_paramMap","getInherited","paramsInheritanceStrategy","inherited","loadComponent","_resolvedData","hasStaticTitle","_resolve","matched","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","config","_RouterOutlet","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","attachEvents","detachEvents","parentContexts","location","ViewContainerRef","changeDetector","ChangeDetectorRef","environmentInjector","inputBinder","INPUT_BINDER","supportsBindingToComponentInputs","activatedComponentRef","ngOnChanges","changes","firstChange","previousValue","isTrackedInParentContexts","deactivate","initializeOutletWithName","unsubscribeFromRouteData","ngOnInit","attach","activateWith","isActivated","instance","activatedRoute","activatedRouteData","detach","cmp","emit","ref","insert","hostView","bindActivatedRouteToOutletComponent","childContexts","OutletInjector","createComponent","markForCheck","RouterOutlet_Factory","ɵdir","ɵɵdefineDirective","selectors","inputs","outputs","exportAs","standalone","ɵɵNgOnChangesFeature","RouterOutlet","Directive","Input","Output","_OutletInjector","__ngOutletInjector","parentInjector","notFoundValue","_RoutedComponentInputBinder","outletDataSubscriptions","subscribeToRouteData","unsubscribe","dataSubscription","combineLatest","subscribe","mirror","reflectComponentType","templateName","setInput","RoutedComponentInputBinder_Factory","RoutedComponentInputBinder","createRouterState","routeReuseStrategy","prevState","createNode","shouldReuseRoute","createOrReuseChildren","shouldAttach","detachedRouteHandle","retrieve","createActivatedRoute","NAVIGATION_CANCELING_ERROR","redirectingNavigationError","urlSerializer","redirect","redirectTo","navigationBehaviorOptions","navigationCancelingError","Redirect","cancellationCode","isRedirectingNavigationCancelingError","isNavigationCancelingError","_ɵEmptyOutletComponent","ɵEmptyOutletComponent_Factory","ɵcmp","ɵɵdefineComponent","ɵɵStandaloneFeature","decls","vars","template","_EmptyOutletComponent_Template","rf","ɵɵelement","dependencies","ɵEmptyOutletComponent","Component","getOrCreateRouteInjectorIfNeeded","currentInjector","_injector","createEnvironmentInjector","validateConfig","parentPath","requireStandaloneComponents","fullPath","getFullPath","validateNode","assertStandalone","isNgModule","isStandalone","loadChildren","canActivate","matcher","charAt","exp","standardizeConfig","getOutlet","sortByMatchingOutlets","routes","sortedConfig","getClosestRouteInjector","_loadedInjector","warnedAboutUnsupportedInputBinding","activateRoutes","rootContexts","forwardEvent","inputBindingEnabled","ActivateRoutes","targetRouterState","currentRouterState","activate","futureState","currState","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","futureChild","childOutletName","deactivateRoutes","deactivateRouteAndItsChildren","parentContext","future","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","treeNode","componentRef","store","stored","CanActivate","CanDeactivate","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","canActivateChild","guards","getTokenOrFunctionIdentity","tokenOrFunction","NOT_FOUND","isInjectable","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","getRouteGuards","shouldRun","shouldRunGuardsAndResolvers","runGuardsAndResolvers","isFunction","isBoolean","isCanLoad","guard","canLoad","isCanActivate","isCanActivateChild","isCanDeactivate","canDeactivate","isCanMatch","canMatch","isEmptyError","e","EmptyError","INITIAL_VALUE","prioritizedGuardValue","obs","take","startWith","results","item","checkGuards","mergeMap","targetSnapshot","guardsResult","runCanDeactivateChecks","runCanActivateChecks","futureRSS","currRSS","check","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","futureARS","canActivateObservables","defer","closestInjector","guardVal","canActivateChildGuards","_","canActivateChildGuardsMapped","guardsMapped","currARS","canDeactivateObservables","runCanLoadGuards","canLoadObservables","injectionToken","redirectIfUrlTree","tap","runCanMatchGuards","canMatchObservables","NoMatch","AbsoluteRedirect","urlTree","noMatch$1","throwError","namedOutletsRedirect","canLoadFails","GuardRejected","ApplyRedirects","lineralizeSegments","applyRedirectCommands","newTree","applyRedirectCreateUrlTree","createSegmentGroup","createQueryParams","redirectToParams","actualParams","copySourceValue","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","consumedSegments","remainingSegments","positionalParamSegments","matchWithChecks","createWildcardMatchResult","slicedSegments","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","primarySegment","isImmediateMatch","rawSegment","noLeftoversInUrl","NoLeftoversInUrl","recognize$1","configLoader","rootComponentType","Recognizer","recognize","MAX_ALLOWED_REDIRECTS","applyRedirects","absoluteRedirectCount","allowRedirects","noMatchError","freeze","rootNode","routeState","inheritParamsAndData","expanded$","processSegmentGroup","catchError","routeNode","processSegment","scan","outletChildren","defaultIfEmpty","mergedChildren","mergeEmptyPathMatches","checkOutletNameUniqueness","sortActivatedRouteSnapshots","processSegmentAgainstRoute","x","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","newSegments","matchResult","getChildConfig","childConfig","childInjector","getData","_loadedComponent","getResolve","matchedOnOutlet","_loadedRoutes","shouldLoadResult","cfg","nodes","localeCompare","hasEmptyPathConfig","mergedNodes","duplicateEmptyPathNode","resultNode","mergedNode","names","routeWithSameOutletName","serializer","extractedUrl","resolveData","routesWithResolversToRun","routesNeedingDataUpdates","newRoute","flattenRouteTree","routesProcessed","runResolve","takeLast","size","EMPTY","descendants","flat","resolveNode","resolvedData","getResolver","mapTo","resolver","resolverValue","switchTap","nextResult","_TitleStrategy","buildTitle","pageTitle","getResolvedTitleForRoute","TitleStrategy_Factory","DefaultTitleStrategy","TitleStrategy","_DefaultTitleStrategy","updateTitle","DefaultTitleStrategy_Factory","ROUTER_CONFIGURATION","ROUTES","_RouterConfigLoader","componentLoaders","WeakMap","childrenLoaders","compiler","Compiler","onLoadStartListener","loadRunner","maybeUnwrapDefaultExport","onLoadEndListener","ConnectableObservable","Subject","refCount","moduleFactoryOrRoutes$","RouterConfigLoader_Factory","RouterConfigLoader","NgModuleFactory$1","compileModuleAsync","factoryOrRoutes","rawRoutes","self","isWrappedDefaultExport","input","_UrlHandlingStrategy","UrlHandlingStrategy_Factory","DefaultUrlHandlingStrategy","UrlHandlingStrategy","_DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","DefaultUrlHandlingStrategy_Factory","CREATE_VIEW_TRANSITION","VIEW_TRANSITION_OPTIONS","createViewTransition","to","transitionOptions","startViewTransition","skipNextTransition","setTimeout","resolveViewTransitionStarted","viewTransitionStarted","transition","createRenderPromise","onViewTransitionCreated","afterNextRender","_NavigationTransitions","hasRequestedNavigation","navigationId","currentNavigation","currentTransition","lastSuccessfulNavigation","transitionAbortSubject","Location","titleStrategy","urlHandlingStrategy","afterPreactivation","onLoadStart","onLoadEnd","transitions","handleNavigationRequest","setupNavigations","router","initialUrlTree","initialRouterState","currentUrlTree","currentRawUrl","rawUrl","extras","reject","overallTransitionState","completed","errored","cancellationReason","cancelNavigationTransition","SupersededByNewNavigation","initialUrl","trigger","previousNavigation","urlTransition","navigated","isUpdatingInternalState","isUpdatedBrowserUrl","onSameUrlNavigation","IgnoredSameUrlNavigation","getValue","finalUrl","routesRecognized","navStart","skipLocationChange","replaceUrl","IgnoredByUrlHandlingStrategy","guardsStart","guardsEnd","resolveStart","dataResolved","NoDataFromResolver","resolveEnd","loadComponents","loaders","loadedComponent","takeUntil","err","cancelationReason","ee","resolveNavigationPromiseOnError","navCancel","extractedBrowserUrl","NavigationTransitions_Factory","NavigationTransitions","isBrowserTriggeredNavigation","_RouteReuseStrategy","RouteReuseStrategy_Factory","DefaultRouteReuseStrategy","RouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","_DefaultRouteReuseStrategy","ɵDefaultRouteReuseStrategy_BaseFactory","DefaultRouteReuseStrategy_Factory","ɵɵgetInheritedFactory","_StateManager","StateManager_Factory","HistoryStateManager","StateManager","_HistoryStateManager","canceledNavigationResolution","urlUpdateStrategy","rawUrlTree","currentPageId","lastSuccessfulId","routerState","stateMemento","createStateMemento","getCurrentUrlTree","getRawUrlTree","getState","browserPageId","ɵrouterPageId","getRouterState","registerNonRouterCurrentEntryChangeListener","handleRouterEvent","setBrowserUrl","restoreHistory","isCurrentPathEqualTo","currentBrowserPageId","generateNgRouterState","replaceState","go","navigation","restoringFromCaughtError","targetPagePosition","historyGo","resetState","resetUrlToCurrentUrlTree","routerPageId","ɵHistoryStateManager_BaseFactory","HistoryStateManager_Factory","NavigationResult","afterNextNavigation","action","COMPLETE","redirecting","REDIRECTING","FAILED","defaultErrorHandler","exactMatchOptions","subsetMatchOptions","_Router","stateManager","_events","disposed","isNgZoneEnabled","navigationTransitions","componentInputBindingEnabled","eventsSubscription","Subscription","isInAngularZone","resetConfig","subscribeToNavigationEvents","subscription","mergedTree","info","scheduleNavigation","isPublicRouterEvent","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateToSyncWithBrowser","nonRouterCurrentEntryChangeSubscription","stateCopy","parseUrl","serializeUrl","getCurrentNavigation","dispose","createUrlTree","navigationExtras","queryParamsHandling","preserveFragment","q","removeEmptyProps","relativeToSnapshot","navigateByUrl","navigate","validateCommands","isActive","matchOptions","priorPromise","rej","queueMicrotask","Router_Factory","Router","_RouterLink","tabIndexAttribute","locationStrategy","onChanges","nativeElement","isAnchorElement","updateHref","setTabIndexIfNotOnNativeEl","newTabIndex","applyAttributeValue","routerLink","onClick","button","prepareExternalUrl","sanitizedValue","ɵɵsanitizeUrlOrResourceUrl","attrName","attrValue","RouterLink_Factory","ɵɵdirectiveInject","ɵɵinjectAttribute","Renderer2","ElementRef","LocationStrategy","hostVars","hostBindings","RouterLink_HostBindings","ɵɵlistener","RouterLink_click_HostBindingHandler","$event","ɵɵattribute","InputFlags","HasDecoratorInputTransform","booleanAttribute","ɵɵInputTransformsFeature","RouterLink","Attribute","HostBinding","transform","HostListener","_RouterLinkActive","_isActive","cdr","link","classes","routerLinkActiveOptions","exact","isActiveChange","routerEventsSubscription","ngAfterContentInit","links","mergeAll","subscribeToEachLinkOnChanges","linkInputChangesSubscription","allLinkChanges","toArray","isLinkActive","routerLinkActive","hasActiveLinks","ariaCurrentWhenActive","isActiveMatchOptions","isActiveCheckFn","RouterLinkActive_Factory","contentQueries","RouterLinkActive_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","RouterLinkActive","ContentChildren","PreloadingStrategy","_PreloadAllModules","preload","PreloadAllModules_Factory","PreloadAllModules","_NoPreloading","NoPreloading_Factory","NoPreloading","_RouterPreloader","preloadingStrategy","setUpPreloading","processRoutes","injectorForCurrentRoute","injectorForChildren","preloadConfig","loadedChildren$","recursiveLoadChildren$","loadComponent$","RouterPreloader_Factory","RouterPreloader","ROUTER_SCROLLER","_RouterScroller","viewportScroller","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","setHistoryScrollRestoration","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","RouterScroller_Factory","ɵɵinvalidFactory","RouterScroller","ViewportScroller","provideRouter","ROUTER_IS_PROVIDED","rootRoute","APP_BOOTSTRAP_LISTENER","getBootstrapListener","routerFeature","Injector","bootstrappedComponentRef","ApplicationRef","components","bootstrapDone","BOOTSTRAP_DONE","INITIAL_NAVIGATION","ROUTER_PRELOADER","InjectFlags","componentTypes","closed","withEnabledBlockingInitialNavigation","APP_INITIALIZER","locationInitialized","LOCATION_INITIALIZED","withDisabledInitialNavigation","withDebugTracing","ENVIRONMENT_INITIALIZER","log","groupEnd","withPreloading","withComponentInputBinding","withViewTransitions","skipInitialTransition","ROUTER_DIRECTIVES","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","_RouterModule","forRoot","enableTracing","provideForRootGuard","useHash","provideHashLocationStrategy","providePathLocationStrategy","provideRouterScroller","provideInitialNavigation","bindToComponentInputs","enableViewTransitions","provideRouterInitializer","forChild","RouterModule_Factory","RouterModule","scrollOffset","setOffset","HashLocationStrategy","PathLocationStrategy","ROUTER_INITIALIZER","RouteEnum","HeroSubRouteEnum","NavbarRoutesLocalized","HEROES","LIST","HeroKeysLocalized","HeroSecretIdentityStatusLocalized","HeroSuperpowerLocalized","HeroTeamAffiliationLocalized","hasV8BreakIterator","Intl","v8BreakIterator","_Platform","_platformId","isBrowser","isPlatformBrowser","EDGE","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","Platform","_PlatformModule","PlatformModule_Factory","PlatformModule","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","documentElement","scrollToFunction","scrollTo","getRtlScrollAxisType","NORMAL","scrollContainer","containerStyle","dir","width","overflow","visibility","pointerEvents","contentStyle","height","scrollLeft","NEGATED","INVERTED","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","_getShadowRoot","getRootNode","ShadowRoot","_getFocusedElementPierceShadowDom","activeElement","newActiveElement","_getEventTarget","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","TAB","ENTER","SHIFT","CONTROL","ALT","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","ZERO","NINE","A","Z","META","MAC_META","hasModifierKey","modifiers","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","coerceCssPixelValue","coerceElement","elementOrRef","shouldIgnoreRecord","record","Comment","addedNodes","removedNodes","_MutationObserverFactory","MutationObserver","MutationObserverFactory_Factory","MutationObserverFactory","_ContentObserver","_mutationObserverFactory","_observedElements","_cleanupObserver","_observeElement","records","_unobserveElement","mutations","characterData","childList","subtree","disconnect","ContentObserver_Factory","ContentObserver","_CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","_currentSubscription","debounceTime","CdkObserveContent_Factory","CdkObserveContent","alias","_ObserversModule","ObserversModule_Factory","ObserversModule","_LayoutModule","LayoutModule_Factory","LayoutModule","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","_MediaMatcher","_platform","_nonce","_matchMedia","matchMedia","noopMatchMedia","createEmptyStyleRule","MediaMatcher_Factory","MediaMatcher","sheet","insertRule","matches","media","addListener","removeListener","_BreakpointObserver","_mediaMatcher","_queries","_destroySubject","isMatched","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","skip","breakpointStates","breakpoints","queryObservable","output","BreakpointObserver_Factory","BreakpointObserver","a1","a2","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","ID_DELIMITER","addAriaReferencedId","ids","getAriaReferenceIds","existingId","removeAriaReferencedId","filteredIds","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","_AriaDescriber","_messageRegistry","_messagesContainer","_id","describe","hostElement","role","_canBeDescribed","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","describedElements","_removeCdkDescribedByReferenceIds","_createMessagesContainer","containerClassName","serverContainers","messagesContainer","originalReferenceIds","referenceIds","messageId","trimmedMessage","ariaLabel","AriaDescriber_Factory","AriaDescriber","serviceId","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","_skipPredicateFn","_pressedLetters","tabOut","change","QueryList","_itemChangesSubscription","newItems","_itemsChanged","isSignal","_effectRef","effect","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","withTypeAhead","debounceInterval","items","_getItemsArray","getLabel","letter","inputString","setActiveItem","cancelTypeahead","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","onKeydown","keyCode","isModifierAllowed","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","toLocaleUpperCase","fromCharCode","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","itemArray","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","newIndex","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","_InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","tabIndexValue","isPotentiallyTabbableIOS","tabIndex","isFocusable","isPotentiallyFocusable","ignoreVisibility","InteractivityChecker_Factory","InteractivityChecker","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","hasValidTabIndex","parseInt","inputType","ownerDocument","defaultView","FocusTrap","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","endAnchor","_createAnchor","focusInitialElementWhenReady","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","focusableChild","focus","hasAttached","tabbableChild","isEnabled","toggleAnchors","isStable","onStable","_FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","FocusTrapFactory","_CdkTrapFocus","focusTrap","_focusTrapFactory","_previouslyFocusedElement","autoCapture","_captureFocus","ngDoCheck","autoCaptureChange","CdkTrapFocus_Factory","CdkTrapFocus","ConfigurableFocusTrap","_focusTrapManager","register","_inertStrategy","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","focusTrapRoot","contains","closest","_FocusTrapManager","_focusTrapStack","ft","stack","FocusTrapManager_Factory","FocusTrapManager","_ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","ConfigurableFocusTrapFactory","isFakeMousedownFromScreenReader","buttons","detail","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","_InputModalityDetector","mostRecentModality","_modality","_mostRecentTarget","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","now","_onTouchstart","modalityDetected","modalityChanged","distinctUntilChanged","InputModalityDetector_Factory","InputModalityDetector","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","_LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","LiveAnnouncer","_CdkAriaLive","_politeness","_subscription","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","None","CdkAriaLive","FocusMonitorDetectionMode","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","_FocusMonitor","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","_onFocus","_onBlur","_detectionMode","detectionMode","IMMEDIATE","monitor","checkChildren","_getDocument","cachedInfo","subject","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","origin","focusedElement","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","EVENTUAL","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","_emitOrigin","observers","rootNodeFocusListeners","modality","mostRecentTarget","labels","FocusMonitor_Factory","FocusMonitor","_CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","CdkMonitorFocus_Factory","CdkMonitorFocus","HighContrastMode","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","_HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","documentWindow","computedStyle","computedColor","WHITE_ON_BLACK","BLACK_ON_WHITE","bodyClasses","HighContrastModeDetector_Factory","HighContrastModeDetector","_A11yModule","highContrastModeDetector","A11yModule_Factory","A11yModule","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","language","_Directionality","bodyDir","htmlDir","Directionality_Factory","Directionality","_Dir","_dir","_isInitialized","_rawDir","Dir_Factory","Dir_HostBindings","ɵɵProvidersFeature","Dir","_BidiModule","BidiModule_Factory","BidiModule","_c0","_c1","_c2","_c3","_c4","MatOption_Conditional_0_Template","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","label","_c5","_c6","_AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationCurves","_AnimationDurations","COMPLEX","ENTERING","EXITING","AnimationDurations","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","_MatCommonModule","_sanityChecks","_hasDoneGlobalChecks","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","MatCommonModule_Factory","MatCommonModule","doctype","display","full","_ErrorStateTracker","_defaultMatcher","ngControl","_parentFormGroup","_parentForm","_stateChanges","errorState","updateErrorState","oldState","control","newState","isErrorState","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","LOCALE_ID","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","valueFunction","valuesArray","_NativeDateAdapter","matDateLocale","useUtcForDisplay","_matDateLocale","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","DateTimeFormat","month","timeZone","_format","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","getTime","createDate","today","parseFormat","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","setFullYear","setHours","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","NativeDateAdapter","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","_NativeDateModule","NativeDateModule_Factory","NativeDateModule","_MatNativeDateModule","MatNativeDateModule_Factory","provideNativeDateAdapter","MatNativeDateModule","formats","_ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ShowOnDirtyErrorStateMatcher","_ErrorStateMatcher","touched","ErrorStateMatcher_Factory","ErrorStateMatcher","_MatLine","MatLine_Factory","hostAttrs","MatLine","_MatLineModule","MatLineModule_Factory","MatLineModule","RippleState","RippleRef","_renderer","_animationForciblyDisabledThroughCss","HIDDEN","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","RippleEventManager","_delegateEventHandler","handlers","handleEvent","addHandler","handlersForEvent","handlersForElement","removeHandler","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","_RippleRenderer","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","top","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","color","transitionDuration","computedStyles","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","FADING_IN","persistent","_mostRecentTransientRipple","eventListeners","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","FADING_OUT","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_eventManager","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","VISIBLE","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","clientX","clientY","rippleConfig","terminateOnPointerUp","RippleRenderer","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","_MatRipple","_setupTriggerEventsIfEnabled","_trigger","globalOptions","_animationMode","_globalOptions","_rippleRenderer","launch","configOrX","MatRipple_Factory","ANIMATION_MODULE_TYPE","MatRipple_HostBindings","ɵɵclassProp","unbounded","MatRipple","_MatRippleModule","MatRippleModule_Factory","MatRippleModule","_MatPseudoCheckbox","appearance","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","changeDetection","MatPseudoCheckbox","ChangeDetectionStrategy","OnPush","_MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_uniqueOptgroupIdCounter","MAT_OPTGROUP","_MatOptgroup","_labelId","_inert","inertGroups","MatOptgroup_Factory","MatOptgroup_HostBindings","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","MatOptgroup","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","_MatOption","multiple","_parent","_selected","disableRipple","hideSingleSelectionIndicator","_changeDetectorRef","_active","_mostRecentViewValue","onSelectionChange","active","viewValue","_text","select","emitEvent","_emitSelectionChangeEvent","deselect","_getHostElement","_handleKeydown","_selectViaInteraction","_getTabIndex","ngAfterViewChecked","MatOption_Factory","viewQuery","MatOption_Query","ɵɵviewQuery","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","ɵɵhostProperty","MatOption_Template","ɵɵtemplate","ɵɵconditional","MatOption","ViewChild","static","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","_MatOptionModule","MatOptionModule_Factory","MatOptionModule","eventListenerOptions","rippleInteractionEvents","matRippleUninitialized","matRippleClassName","matRippleCentered","matRippleDisabled","_MatRippleLoader","_globalRippleOptions","_hosts","_onInteraction","HTMLElement","eventTarget","_createRipple","hosts","destroyRipple","configureRipple","className","getRipple","setDisabled","existingRipple","attachRipple","MatRippleLoader_Factory","MatRippleLoader","__MatInternalFormField","_MatInternalFormField_Factory","_MatInternalFormField_HostBindings","labelPosition","attrs","_MatInternalFormField_Template","_MatInternalFormField","required","_c7","_c8","_c9","_c10","MAT_BUTTON_CONFIG","MAT_BUTTON_HOST","HOST_SELECTOR_MDC_CLASS_PAIR","attribute","mdcClasses","_MatButtonBase","_rippleLoader","_disableRipple","_updateRippleDisabled","_isFab","disabledInteractive","_getAriaDisabled","ariaDisabled","_getDisabledAttribute","MatButtonBase_Factory","MatButtonBase","MAT_ANCHOR_HOST","_MatAnchorBase","elementRef","animationMode","_haltDisabledEvents","stopImmediatePropagation","MatAnchorBase_Factory","numberAttribute","ɵɵInheritDefinitionFeature","MatAnchorBase","_MatButton","MatButton_Factory","MatButton_HostBindings","ɵɵclassMap","MatButton_Template","MatButton","_MatAnchor","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_Template","MatAnchor","MAT_FAB_DEFAULT_OPTIONS","MAT_FAB_DEFAULT_OPTIONS_FACTORY","defaults","_MatFabButton","MatFabButton_Factory","MatFabButton_HostBindings","extended","MatFabButton_Template","MatFabButton","_MatMiniFabButton","MatMiniFabButton_Factory","MatMiniFabButton_HostBindings","MatMiniFabButton_Template","MatMiniFabButton","_MatFabAnchor","MatFabAnchor_Factory","MatFabAnchor_HostBindings","MatFabAnchor_Template","MatFabAnchor","_MatMiniFabAnchor","MatMiniFabAnchor_Factory","MatMiniFabAnchor_HostBindings","MatMiniFabAnchor_Template","MatMiniFabAnchor","_MatIconButton","MatIconButton_Factory","MatIconButton_HostBindings","MatIconButton_Template","MatIconButton","_MatIconAnchor","MatIconAnchor_Factory","MatIconAnchor_HostBindings","MatIconAnchor_Template","MatIconAnchor","_MatButtonModule","MatButtonModule_Factory","MatButtonModule","DataSource","isDataSource","connect","ArrayDataSource","_data","_ViewRepeaterOperation","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","applyChanges","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","INSERTED","REMOVED","move","MOVED","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","REPLACED","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","SelectionModel","_selection","_multiple","initiallySelectedValues","_emitChanges","compareWith","_deselectedToEmit","_selectedToEmit","changed","_markSelected","_verifyValueAssignment","_hasQueuedChanges","_emitChangeEvent","_unmarkSelected","setSelection","oldValues","newSelectedSet","_getConcreteValue","isSelected","flushEvent","_unmarkAll","isEmpty","hasValue","isMultipleSelection","added","removed","getMultipleValuesInSingleSelectionError","inputValue","selection","selectedValue","_UniqueSelectionDispatcher","_listeners","notify","registered","UniqueSelectionDispatcher_Factory","UniqueSelectionDispatcher","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","_CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","CdkFixedSizeVirtualScroll","DEFAULT_SCROLL_TIME","_ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","scrollable","elementScrolled","scrollableReference","scrolled","auditTimeInMs","_addGlobalListener","auditTime","_removeGlobalListener","ancestorScrolled","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","getElementRef","fromEvent","ScrollDispatcher_Factory","ScrollDispatcher","_CdkScrollable","scrollDispatcher","_destroyed","_elementScrolled","isRtl","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","CdkScrollable","DEFAULT_RESIZE_TIME","_ViewportRuler","_change","_changeListener","_viewportSize","_updateViewportSize","getViewportRect","scrollPosition","getViewportScrollPosition","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","ViewportRuler","VIRTUAL_SCROLLABLE","_CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","CdkVirtualScrollable_Factory","CdkVirtualScrollable","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","animationFrameScheduler","asapScheduler","_CdkVirtualScrollViewport","_orientation","_calculateSpacerSize","viewportRuler","_detachedSubject","_renderedRangeSubject","appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","getOffsetToRenderedContentStart","offset","isHorizontal","axis","axisDirection","_renderedContentTransform","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","_contentWrapper","measureRangeSize","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","CdkVirtualScrollViewport_Query","CdkVirtualScrollViewport_HostBindings","virtualScrollable","CdkVirtualScrollViewport_Template","ɵɵstyleProp","CdkVirtualScrollViewport","getOffset","_CdkVirtualForOf","cdkVirtualForOf","_cdkVirtualForOf","_dataSourceChanges","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","cdkVirtualForTemplate","_template","cdkVirtualForTemplateCacheSize","_viewRepeater","_viewContainerRef","_differs","viewChange","pairwise","prev","cur","_changeDataSource","shareReplay","_differ","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","rootNodes","diff","_renderedItems","_updateContext","_applyChanges","oldDs","newDs","_updateComputedContextProperties","detectChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","even","odd","CdkVirtualForOf_Factory","TemplateRef","IterableDiffers","CdkVirtualForOf","_CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableElement","_CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkVirtualScrollableWindow","_CdkScrollableModule","CdkScrollableModule_Factory","CdkScrollableModule","_ScrollingModule","ScrollingModule_Factory","ScrollingModule","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","isAttached","setAttachedHost","ComponentPortal","componentFactoryResolver","projectableNodes","TemplatePortal","DomPortal","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","setDisposeFn","_disposeFn","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","anchorNode","replaceChild","componentFactory","resolveComponentFactory","NULL","attachView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","_CdkPortal","CdkPortal_Factory","CdkPortal","_TemplatePortalDirective","ɵTemplatePortalDirective_BaseFactory","TemplatePortalDirective_Factory","TemplatePortalDirective","_CdkPortalOutlet","attached","_getRootNode","attachedRef","_attachedRef","CdkPortalOutlet_Factory","ComponentFactoryResolver$1","CdkPortalOutlet","_PortalHostDirective","ɵPortalHostDirective_BaseFactory","PortalHostDirective_Factory","PortalHostDirective","_PortalModule","PortalModule_Factory","PortalModule","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","_canBeEnabled","_previousScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_scrollSubscription","_detach","_overlayRef","overlayRef","overlayElement","threshold","_initialScrollPosition","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","parentRects","_ScrollStrategyOptions","close","block","reposition","ScrollStrategyOptions_Factory","ScrollStrategyOptions","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","_BaseOverlayDispatcher","_attachedOverlays","BaseOverlayDispatcher_Factory","BaseOverlayDispatcher","_OverlayKeyboardDispatcher","_keydownListener","overlays","_keydownEvents","keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OverlayKeyboardDispatcher","_OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","_outsidePointerEvents","outsidePointerEvents","_addEventListeners","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","OverlayOutsideClickDispatcher","_OverlayContainer","getContainerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OverlayContainer","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_positionStrategy","positionStrategy","backdropElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","_togglePointerEvents","_attachBackdrop","_toggleClasses","onDestroy","detachBackdrop","detachmentResult","_detachContentWhenStable","_disposeScrollStrategy","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","addPanelClass","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","showingClass","backdropToDetach","_backdropTimeout","cssClasses","isAdd","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","withDefaultOffsetY","withTransformOriginOn","_transformOriginSelector","originX","startX","_isRtl","endX","originY","overlayStartX","overlayX","overlayStartY","overlayY","point","rawOverlayRect","overlay","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","scrollVisibility","_getScrollVisibility","_lastScrollVisibility","compareScrollVisibility","changeEvent","xOrigin","yOrigin","transformOrigin","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","documentHeight","horizontalStyleProperty","documentWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","pair","cssClass","destination","units","clientRect","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","_OverlayPositionBuilder","global","flexibleConnectedTo","OverlayPositionBuilder_Factory","OverlayPositionBuilder","nextUniqueId","_Overlay","scrollStrategies","_positionBuilder","_directionality","_animationsModuleType","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","Overlay_Factory","Overlay","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","_CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkOverlayOrigin","_CdkConnectedOverlay","_position","_updatePositionStrategy","_disposeOnNavigation","_overlay","scrollStrategyFactory","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","disableClose","lockPosition","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","_getOriginElement","_createPositionStrategy","currentPosition","_getOrigin","transformOriginSelector","takeWhile","CdkConnectedOverlay_Factory","CdkConnectedOverlay","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","_OverlayModule","OverlayModule_Factory","OverlayModule","_FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","FullscreenOverlayContainer","CdkDialogContainer_ng_template_0_Template","DialogConfig","ariaDescribedBy","ariaLabelledBy","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","throwDialogContentAlreadyAttachedError","_CdkDialogContainer","_interactivityChecker","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_contentAttached","_addAriaLabelledBy","_removeAriaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_restoreFocus","_recaptureFocus","_containsFocus","_forceFocus","_focusByCssSelector","elementToFocus","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","CdkDialogContainer_Factory","CdkDialogContainer_Query","CdkDialogContainer_HostBindings","CdkDialogContainer_Template","CdkDialogContainer","Default","DialogRef","containerInstance","closedSubject","componentInstance","DIALOG_SCROLL_STRATEGY","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","uniqueId","_Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_afterAllClosedAtThisLevel","_ariaHiddenElements","afterAllClosed","_getAfterAllClosed","componentOrTemplateRef","getDialogById","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","userInjector","containerType","containerPortal","containerRef","_createInjector","templateContext","contentRef","fallbackInjector","overlayContainer","sibling","Dialog_Factory","Dialog","_DialogModule","DialogModule_Factory","DialogModule","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","_MatDialogContainer","focusTrapFactory","dialogConfig","interactivityChecker","focusMonitor","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","totalTime","_startOpenAnimation","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","_waitForAnimationToComplete","_startExitAnimation","_updateActionSectionCount","MatDialogContainer_Factory","MatDialogContainer_HostBindings","MatDialogContainer_Template","MatDialogContainer","time","endsWith","MatDialogState","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","OPEN","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","CLOSING","afterClosed","beforeClosed","CLOSED","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","_MatDialog","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","MatDialog_Factory","MatDialog","dialogElementUid","_MatDialogClose","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogClose","_MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","MatDialogLayoutSection_Factory","MatDialogLayoutSection","_MatDialogTitle","ɵMatDialogTitle_BaseFactory","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogTitle","_MatDialogContent","MatDialogContent_Factory","MatDialogContent","_MatDialogActions","ɵMatDialogActions_BaseFactory","MatDialogActions_Factory","MatDialogActions_HostBindings","align","MatDialogActions","DIRECTIVES","_MatDialogModule","MatDialogModule_Factory","MatDialogModule","_defaultParams","matDialogAnimations","animate","animateChild","loopLimitExceededErrorHandler","ErrorEvent","SingleBoxSharedResizeObserver","_box","_resizeSubject","_elementObservables","ResizeObserver","_resizeObserver","box","unobserve","entry","bufferSize","_SharedResizeObserver","_observers","SharedResizeObserver_Factory","SharedResizeObserver","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","MatFormField_ng_template_0_Conditional_0_Template","ctx_r1","_shouldLabelFloat","_hasOutline","_control","disableAutomaticLabeling","hideRequiredMarker","MatFormField_ng_template_0_Template","_hasFloatingLabel","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","labelTemplate_r3","ɵɵreference","MatFormField_Conditional_6_Template","_forceDisplayInfixLabel","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_16_Template","_subscriptAnimationState","MatFormField_Case_17_Conditional_1_Template","_hintLabelId","ɵɵtextInterpolate","hintLabel","MatFormField_Case_17_Template","_MatLabel","MatLabel_Factory","MatLabel","nextUniqueId$2","MAT_ERROR","_MatError","ariaLive","MatError_Factory","MatError_HostBindings","MatError","nextUniqueId$1","_MatHint","MatHint_Factory","MatHint_HostBindings","MatHint","MAT_PREFIX","_MatPrefix","_isText","_isTextSelector","MatPrefix_Factory","MatPrefix","MAT_SUFFIX","_MatSuffix","MatSuffix_Factory","MatSuffix","FLOATING_LABEL_PARENT","_MatFormFieldFloatingLabel","floating","_floating","monitorResize","_handleResize","_monitorResize","_subscribeToResize","getWidth","estimateScrollWidth","_handleLabelResized","MatFormFieldFloatingLabel_Factory","MatFormFieldFloatingLabel_HostBindings","MatFormFieldFloatingLabel","htmlEl","offsetParent","cloneNode","ACTIVATE_CLASS","DEACTIVATING_CLASS","_MatFormFieldLineRipple","_handleTransitionEnd","isDeactivating","propertyName","MatFormFieldLineRipple_Factory","MatFormFieldLineRipple","_MatFormFieldNotchedOutline","_setNotchWidth","labelWidth","_notch","NOTCH_ELEMENT_PADDING","NOTCH_ELEMENT_BORDER","MatFormFieldNotchedOutline_Factory","MatFormFieldNotchedOutline_Query","MatFormFieldNotchedOutline_HostBindings","MatFormFieldNotchedOutline_Template","MatFormFieldNotchedOutline","matFormFieldAnimations","transitionMessages","_MatFormFieldControl","MatFormFieldControl_Factory","MatFormFieldControl","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","MAT_FORM_FIELD","MAT_FORM_FIELD_DEFAULT_OPTIONS","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","_MatFormField","_hideRequiredMarker","floatLabel","_floatLabel","_defaults","_appearance","oldValue","newAppearance","_needsOutlineLabelOffsetUpdateOnStable","subscriptSizing","_subscriptSizing","_hintLabel","_processHints","_explicitFormFieldControl","_formFieldControl","_unusedDocument","_hasIconPrefix","_hasTextPrefix","_hasIconSuffix","_hasTextSuffix","_isFocused","Boolean","_updateFocusState","_assertFormFieldControl","_initializeControl","_initializeSubscript","_initializePrefixAndSuffix","_initializeOutlineLabelOffsetSubscriptions","ngAfterContentChecked","getLabelId","getConnectedOverlayOrigin","_textField","_animateAndLockLabel","controlType","stateChanges","_syncDescribedByIds","valueChanges","_checkPrefixAndSuffixTypes","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","_validateHints","focused","_lineRipple","_updateOutlineLabelOffset","_shouldAlwaysFloat","_labelChildNonStatic","_labelChildStatic","shouldLabelFloat","_shouldForward","_getDisplayedMessages","_refreshOutlineNotchWidth","_floatingLabel","_notchedOutline","startHint","endHint","hint","userAriaDescribedBy","setDescribedByIds","floatingLabel","_iconPrefixContainer","_textPrefixContainer","_isAttachedToDom","iconPrefixContainer","textPrefixContainer","iconPrefixContainerWidth","textPrefixContainerWidth","negate","prefixWidth","labelOffset","labelHorizontalOffset","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","MatFormField_HostBindings","autofilled","MatFormField_Template","_r1","ɵɵgetCurrentView","ɵɵtemplateRefExtractor","MatFormField_Template_div_click_2_listener","ɵɵrestoreView","ɵɵresetView","onContainerClick","tmp_16_0","NgTemplateOutlet","MatFormField","animations","ContentChild","_MatFormFieldModule","MatFormFieldModule_Factory","MatFormFieldModule","policy","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","trustedHTMLFromString","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","_MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","_addSvgIconConfig","addSvgIconResolver","cleanLiteral","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","classNames","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","errorMessage","handleError","forkJoin","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","_setSvgAttributes","_toSvgElement","_svgElementFromString","div","innerHTML","attributes","viewBox","iconConfig","inProgressFetch","share","configNamespace","svgElement","isSafeUrlWithOptions","MatIconRegistry_Factory","MatIconRegistry","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","ICON_REGISTRY_PROVIDER","MAT_ICON_DEFAULT_OPTIONS","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","getPathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","_MatIcon","_color","_defaultColor","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_iconRegistry","ariaHidden","inline","_previousFontSetClass","_currentIconFetch","_splitIconName","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","_cacheChildrenWithExternalReferences","layoutElement","childCount","fontSetClasses","_previousFontIconClass","includes","elementsWithFuncIri","elementWithReference","rawName","_svgNamespace","_svgName","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIcon","_MatIconModule","MatIconModule_Factory","MatIconModule","listenerOptions","_AutofillMonitor","_monitoredElements","animationName","isAutofilled","unlisten","AutofillMonitor_Factory","AutofillMonitor","_CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkAutofill","_CdkTextareaAutosize","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","resizeToFitContent","reset","placeholder","_textareaElement","_cachedPlaceholderHeight","_cacheTextareaPlaceholderHeight","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_cachedLineHeight","_initialHeight","_cacheTextareaLineHeight","textareaClone","rows","border","padding","_measureScrollHeight","previousMargin","isFirefox","needsMarginFiller","measuringClass","force","textarea","_previousValue","_scrollToCaretPosition","_noopInputHandler","selectionStart","selectionEnd","isStopped","setSelectionRange","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","CdkTextareaAutosize","_TextFieldModule","TextFieldModule_Factory","TextFieldModule","_BaseControlValueAccessor","onChange","onTouched","registerOnTouched","registerOnChange","setDisabledState","BaseControlValueAccessor_Factory","BaseControlValueAccessor","_BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","BuiltInControlValueAccessor_Factory","BuiltInControlValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","_CheckboxControlValueAccessor","writeValue","ɵCheckboxControlValueAccessor_BaseFactory","CheckboxControlValueAccessor_Factory","CheckboxControlValueAccessor_HostBindings","CheckboxControlValueAccessor_change_HostBindingHandler","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","COMPOSITION_BUFFER_MODE","_DefaultValueAccessor","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","DefaultValueAccessor_compositionend_HostBindingHandler","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","minValidator","maxValidator","requiredValidator","requiredTrue","requiredTrueValidator","email","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","compose","validators","composeAsync","regex","regexStr","RegExp","isPresent","toObservable","isSubscribable","mergeErrors","arrayOfErrors","errors","executeValidators","validator","isValidatorFn","validate","normalizeValidators","presentValidators","composeValidators","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","_rawValidators","getControlAsyncValidators","_rawAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","validatorsToAdd","removeValidators","AbstractControlDirective","_onDestroyCallbacks","valid","pending","pristine","untouched","statusChanges","_setValidators","_composedValidatorFn","_setAsyncValidators","_composedAsyncValidatorFn","asyncValidator","_registerOnDestroy","_invokeOnDestroyCallbacks","hasError","errorCode","getError","ControlContainer","formDirective","NgControl","valueAccessor","AbstractControlStatus","cd","_cd","isTouched","isUntouched","isPristine","isDirty","isInvalid","isPending","isSubmitted","ngControlStatusHost","ngGroupStatusHost","_NgControlStatus","NgControlStatus_Factory","NgControlStatus_HostBindings","NgControlStatus","Self","_NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","NgControlStatusGroup","formControlNameExample","formGroupNameExample","formArrayNameExample","ngModelGroupExample","ngModelWithFormGroupExample","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","asyncValidatorsDroppedWithOptsWarning","ngModelWarning","directiveName","describeKey","isFormGroup","noControlsError","missingControlError","missingControlValueError","VALID","INVALID","PENDING","DISABLED","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","pickAsyncValidators","asyncValidators","coerceToAsyncValidator","assertControlPresent","isGroup","controls","collection","assertAllValuesPresent","_forEachChild","AbstractControl","_pendingDirty","_hasOwnPendingAsyncValidator","_pendingTouched","_onCollectionChange","_onDisabledChange","_assignValidators","_assignAsyncValidators","validatorFn","asyncValidatorFn","updateOn","_updateOn","setValidators","setAsyncValidators","addAsyncValidators","removeAsyncValidators","hasAsyncValidator","clearValidators","clearAsyncValidators","markAsTouched","opts","onlySelf","markAllAsTouched","markAsUntouched","_updateTouched","markAsDirty","markAsPristine","_updatePristine","markAsPending","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","updateValueAndValidity","setParent","getRawValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","currPath","_find","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_registerOnCollectionChange","_setUpdateStrategy","parentDirty","FormGroup","validateFormGroupControls","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","patchValue","_reduceChildren","acc","_syncPendingControls","subtreeUpdated","updated","cb","_reduceValue","condition","initValue","invalidKeys","FormRecord","CALL_SET_DISABLED_STATE","setDisabledStateDefault","controlPath","setUpControl","callSetDisabledState","_throwError","_throwMissingValueAccessorError","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop2","_noControlError","cleanUpValidators","registerOnValidatorChange","onDisabledChange","registerOnDisabledChange","_unregisterOnDisabledChange","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","_pendingValue","_pendingChange","updateControl","emitModelToViewChange","viewToModelUpdate","emitModelEvent","_unregisterOnChange","setUpFormContainer","cleanUpFormContainer","messageEnd","_describeControlLocation","loc","_throwInvalidValueAccessorError","isPropertyUpdated","viewModel","isFirstChange","is","isBuiltInAccessor","getPrototypeOf","syncPendingControls","directives","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeListItem$1","_ngModelWarning","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","formDirectiveProvider$1","NgForm","resolvedPromise$1","_NgForm","_directives","ngSubmit","_findContainer","getControl","addFormGroup","removeFormGroup","getFormGroup","updateModel","onSubmit","onReset","resetForm","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","NgForm_reset_HostBindingHandler","removeListItem","isFormControlState","formState","FormControl","_onChange","_applyFormState","nonNullable","initialValueIsDefault","emitViewToModelChange","isFormControl","_AbstractFormGroupDirective","_checkParentType","ɵAbstractFormGroupDirective_BaseFactory","AbstractFormGroupDirective_Factory","AbstractFormGroupDirective","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","modelGroupProvider","NgModelGroup","_NgModelGroup","NgModelGroup_Factory","Host","formControlBinding$1","NgModel","_NgModel","_registered","_checkForErrors","_checkName","oldName","_getPath","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","disabledValue","NgModel_Factory","_ɵNgNoValidate","ɵNgNoValidate_Factory","ɵNgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","_NumberValueAccessor","ɵNumberValueAccessor_BaseFactory","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","throwNameError","_RadioControlRegistry","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","RadioControlRegistry_Factory","RadioControlRegistry","_RadioControlValueAccessor","_registry","setDisabledStateFired","_fn","formControlName","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","RANGE_VALUE_ACCESSOR","RangeValueAccessor","_RangeValueAccessor","ɵRangeValueAccessor_BaseFactory","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding","FormControlDirective","_FormControlDirective","_ngModelWarningConfig","_isControlChanged","previousForm","FormControlDirective_Factory","formDirectiveProvider","FormGroupDirective","_FormGroupDirective","_updateDomValue","_checkFormPresent","_updateValidators","_updateRegistrations","_oldForm","_setUpFormContainer","_cleanUpFormContainer","addFormArray","removeFormArray","getFormArray","oldCtrl","newCtrl","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_FormGroupName","_hasInvalidParent","FormGroupName_Factory","formArrayNameProvider","FormArrayName","_FormArrayName","FormArrayName_Factory","controlNameBinding","FormControlName","_FormControlName","_added","FormControlName_Factory","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString$1","_extractId$1","valueString","_SelectControlValueAccessor","_optionMap","_idCounter","_compareWith","_getOptionId","_getOptionValue","_registerOption","ɵSelectControlValueAccessor_BaseFactory","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","_NgSelectOption","_select","ngValue","_setElementValue","NgSelectOption_Factory","NgSelectOption","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString","_extractId","_SelectMultipleControlValueAccessor","optionSelectedStateSetter","opt","_setSelected","selectedOptions","ɵSelectMultipleControlValueAccessor_BaseFactory","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","_ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","ɵNgSelectMultipleOption","toInteger","toFloat","_AbstractValidatorDirective","_validator","inputName","normalizeInput","createValidator","AbstractValidatorDirective_Factory","AbstractValidatorDirective","MAX_VALIDATOR","MaxValidator","_MaxValidator","ɵMaxValidator_BaseFactory","MaxValidator_Factory","MaxValidator_HostBindings","MIN_VALIDATOR","MinValidator","_MinValidator","ɵMinValidator_BaseFactory","MinValidator_Factory","MinValidator_HostBindings","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_RequiredValidator","ɵRequiredValidator_BaseFactory","RequiredValidator_Factory","RequiredValidator_HostBindings","_CheckboxRequiredValidator","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_Factory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","_EmailValidator","ɵEmailValidator_BaseFactory","EmailValidator_Factory","MIN_LENGTH_VALIDATOR","MinLengthValidator","_MinLengthValidator","minlength","ɵMinLengthValidator_BaseFactory","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","_MaxLengthValidator","maxlength","ɵMaxLengthValidator_BaseFactory","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","_PatternValidator","ɵPatternValidator_BaseFactory","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","_ɵInternalFormsSharedModule","ɵInternalFormsSharedModule_Factory","ɵInternalFormsSharedModule","declarations","FormArray","at","_adjustIndex","_registerControl","removeAt","adjustedIndex","isAbstractControlOptions","_FormBuilder","useNonNullable","nnfb","reducedControls","_reduceControls","newOptions","array","createdControls","_createControl","FormBuilder_Factory","FormBuilder","_NonNullableFormBuilder","NonNullableFormBuilder_Factory","NonNullableFormBuilder","_UntypedFormBuilder","controlsConfig","ɵUntypedFormBuilder_BaseFactory","UntypedFormBuilder_Factory","UntypedFormBuilder","_FormsModule","withConfig","FormsModule_Factory","FormsModule","_ReactiveFormsModule","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","ReactiveFormsModule","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInput","_uid","_required","_type","_validateType","_isTextarea","errorStateMatcher","_errorStateTracker","_inputValueAccessor","readonly","_readonly","parentForm","parentFormGroup","defaultErrorStateMatcher","inputValueAccessor","_formField","_neverEmptyInputTypes","_iOSKeyupListener","_previousNativeValue","_isServer","_isNativeSelect","_isInFormField","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","_getPlaceholder","_previousPlaceholder","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","_isInlineSelect","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","MatInput","_MatInputModule","MatInputModule_Factory","MatInputModule","MatSelect_Conditional_4_Template","MatSelect_Conditional_5_Conditional_1_Template","MatSelect_Conditional_5_Conditional_2_Template","triggerValue","MatSelect_Conditional_5_Template","customTrigger","MatSelect_ng_template_10_Template","_r3","MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_10_Template_div_keydown_0_listener","ɵɵclassMapInterpolate1","_getPanelTheme","_getPanelAriaLabelledby","matSelectAnimations","transformPanelWrap","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_TRIGGER","MatSelectChange","_MatSelect","_scrollOptionIntoView","option","panel","labelCount","offsetTop","_positioningSettled","_keyManager","_getChangeEvent","_focused","_panelOpen","_hideSingleSelectionIndicator","_syncParentProperties","_placeholder","_selectionModel","_initializeSelection","hasAssigned","_assignValue","_unusedNgZone","_parentFormField","_positions","o1","o2","_triggerAriaLabelledBy","_destroy","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","disableOptionCentering","panelWidth","_initialized","optionSelectionChanges","openedChange","_openedStream","_closedStream","selectionChange","valueChange","_trackedModal","_skipPredicate","panelOpen","typeaheadDebounceInterval","_panelDoneAnimating","_overlayWidth","_getOverlayWidth","_preferredOverlayOrigin","_initKeyManager","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","_clearFromModal","_canOpen","_applyModalPanelOwnership","_highlightCorrectOption","panelId","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","previouslySelectedOption","selectedOption","hasDeselectedOptions","previouslyFocusedIndex","_onAttached","_overlayDir","_setSelectionByValue","_selectOptionByValue","_sortValues","correspondingOption","preferredOrigin","refToMeasure","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","sortComparator","valueToEmit","firstEnabledOptionIndex","labelId","labelExpression","ariaLabelledby","_getAriaActiveDescendant","isOpen","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","MatSelect_Template","MatSelect_Template_div_click_0_listener","ɵɵnamespaceSVG","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_attach_10_listener","MatSelect_Template_ng_template_detach_10_listener","fallbackOverlayOrigin_r4","NgClass","MatSelect","_MatSelectTrigger","MatSelectTrigger_Factory","MatSelectTrigger","_MatSelectModule","MatSelectModule_Factory","MatSelectModule","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","PANEL_CLASS","passiveListenerOptions","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","_MatTooltip","_updatePosition","_tooltipInstance","show","positionAtOrigin","_positionAtOrigin","hide","_setupPointerEnterEventsIfNeeded","_showDelay","_hideDelay","_mouseLeaveHideDelay","_message","_ariaDescriber","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_tooltipClass","_setTooltipClass","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_cssClassPrefix","touchGestures","_passiveListeners","_touchstartTimeout","delay","_cancelPendingAnimations","_portal","afterHidden","existingStrategy","scrollableAncestors","_updateCurrentPositionClass","_handleBodyInteraction","stopPropagation","disableTooltipInteractivity","_getOverlayPosition","_addOffset","main","isLtr","originPosition","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","targetTouches","DEFAULT_LONGPRESS_DELAY","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","_wheelListener","touchendListener","listeners","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","MatTooltip_Factory","MatTooltip_HostBindings","MatTooltip","_TooltipComponent","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","_handleAnimationEnd","toVisible","tooltip","_tooltip","showClass","hideClass","getPropertyValue","TooltipComponent_Factory","TooltipComponent_Query","TooltipComponent_HostBindings","TooltipComponent_mouseleave_HostBindingHandler","TooltipComponent_Template","TooltipComponent_Template_div_animationend_0_listener","matTooltipAnimations","tooltipState","_MatTooltipModule","MatTooltipModule_Factory","MatTooltipModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","pageSizeOption_r3","MatPaginator_Conditional_2_Conditional_3_Template","MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener","_changePageSize","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","_formFieldAppearance","pageSize","_pageSizeLabelId","selectConfig","ɵɵrepeater","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r4","MatPaginator_Conditional_6_Template_button_click_0_listener","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r5","MatPaginator_Conditional_13_Template_button_click_0_listener","lastPage","lastPageLabel","_nextButtonsDisabled","_MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","endIndex","MatPaginatorIntl_Factory","MatPaginatorIntl","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginator","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","_initializedStream","ReplaySubject","hidePageSize","showFirstLastButtons","initialized","_intlChanges","formFieldAppearance","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","ɵɵnamespaceHTML","MatPaginator_Template_button_click_10_listener","MatPaginator","_MatPaginatorModule","MatPaginatorModule_Factory","MatPaginatorModule","MatProgressSpinner_ng_template_0_Template","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","_MatProgressSpinner","_diameter","_noopAnimations","_forceAnimations","strokeWidth","_strokeWidth","PI","_strokeDashOffset","MatProgressSpinner_Factory","MatProgressSpinner_Query","_determinateCircle","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","ɵɵelementContainer","circle_r2","MatProgressSpinner","MatSpinner","_MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatProgressSpinnerModule","MatSortHeader_Conditional_3_Template","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_MatSort","_direction","sortables","sortChange","sortable","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","MatSort_Factory","MatSort","sortOrder","SORT_ANIMATION_TRANSITION","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","keyframes","allowChildren","_MatSortHeaderIntl","MatSortHeaderIntl_Factory","MatSortHeaderIntl","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","_MatSortHeader","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_sort","_columnDef","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","_isSorted","_sortButton","_setIndicatorHintVisible","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_getAriaSortAttribute","_renderArrow","newDescription","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","MatSortHeader_Template","MatSortHeader","_MatSortModule","MatSortModule_Factory","MatSortModule","CdkTable_Conditional_2_Template","CdkTable_Conditional_3_Template","CdkTable_Conditional_4_Template","CdkTextColumn_th_1_Template","justify","headerText","CdkTextColumn_td_2_Template","data_r2","dataAccessor","CDK_TABLE","TEXT_COLUMN_OPTIONS","_CdkCellDef","CdkCellDef_Factory","CdkCellDef","_CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkHeaderCellDef","_CdkFooterCellDef","CdkFooterCellDef_Factory","CdkFooterCellDef","_CdkColumnDef","_name","_setNameInput","sticky","_sticky","_hasStickyChanged","stickyEnd","_stickyEnd","_table","hasStickyChanged","resetStickyChanged","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","CdkColumnDef_Factory","CdkColumnDef_ContentQueries","cell","headerCell","footerCell","CdkColumnDef","BaseCdkCell","columnDef","_CdkHeaderCell","CdkHeaderCell_Factory","CdkHeaderCell","_CdkFooterCell","_getCellRole","CdkFooterCell_Factory","CdkFooterCell","_CdkCell","CdkCell_Factory","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","__CoalescedStyleScheduler","_currentSchedule","schedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","_CoalescedStyleScheduler_Factory","_CoalescedStyleScheduler","CDK_ROW_TEMPLATE","_BaseRowDef","_columnsDiffer","columns","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","BaseRowDef","_CdkHeaderRowDef","CdkHeaderRowDef_Factory","_CdkFooterRowDef","CdkFooterRowDef_Factory","_CdkRowDef","CdkRowDef_Factory","when","CdkRowDef","_CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkCellOutlet","_CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","CdkHeaderRow","_CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkFooterRow","_CdkRow","CdkRow_Factory","CdkRow_Template","CdkRow","_CdkNoDataRow","_contentClassName","CdkNoDataRow_Factory","CdkNoDataRow","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","stickyDirections","elementsToClear","row","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","borderedRowIndex","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","_CdkRecycleRows","CdkRecycleRows_Factory","CdkRecycleRows","_DataRowOutlet","table","_rowOutlet","_outletAssigned","DataRowOutlet_Factory","DataRowOutlet","_HeaderRowOutlet","_headerRowOutlet","HeaderRowOutlet_Factory","HeaderRowOutlet","_FooterRowOutlet","_footerRowOutlet","FooterRowOutlet_Factory","FooterRowOutlet","_NoDataRowOutlet","_noDataRowOutlet","NoDataRowOutlet_Factory","NoDataRowOutlet","CDK_TABLE_TEMPLATE","_CdkTable","_cellRoleInternal","cellRole","trackBy","_trackByFn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","_forceRecalculateCellWidths","_stickyColumnStylesNeedReset","_stickyPositioningListener","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_hasAllOutlets","_hasInitialized","contentChanged","MAX_VALUE","_setupStickyStyler","_dataDiffer","_i","dataRow","dataIndex","_canRender","_render","def","_headerRowDefs","_footerRowDefs","_defaultRowDef","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","closestTableSection","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","_rowDefs","footerRow","_cacheRowDefs","_cacheColumnDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","columnsDiffReducer","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","_renderRow","columnName","rowOutlet","renderedRows","cellTemplate","_getCellTemplates","renderIndex","columnId","stickyCheckReducer","_noDataRow","shouldShow","CdkTable_Factory","CdkTable_ContentQueries","CdkTable_HostBindings","CdkTable_Template","CdkTable","section","uppercaseSection","_CdkTextColumn","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","CdkTextColumn","EXPORTED_DECLARATIONS","_CdkTableModule","CdkTableModule_Factory","CdkTableModule","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","_MatRecycleRows","MatRecycleRows_Factory","MatRecycleRows","_MatTable","ɵMatTable_BaseFactory","MatTable_Factory","MatTable_HostBindings","MatTable_Template","MatTable","_MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatCellDef","_MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatHeaderCellDef","_MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatFooterCellDef","_MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatColumnDef","_MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatHeaderCell","_MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatFooterCell","_MatCell","ɵMatCell_BaseFactory","MatCell_Factory","MatCell","ROW_TEMPLATE","_MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatHeaderRowDef","_MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatFooterRowDef","_MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatRowDef","_MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatHeaderRow","_MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatFooterRow","_MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatRow","_MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatNoDataRow","_MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTextColumn","_MatTableModule","MatTableModule_Factory","MatTableModule","MAX_SAFE_INTEGER","MatTableDataSource","_renderChangesSubscription","_filterData","_filter","_updateChangeSubscription","paginator","_paginator","initialData","_renderData","_internalPageChanges","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","pageChange","filteredData","orderedData","_orderData","paginatedData","_pageData","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","SimpleSnackBar_Conditional_2_Template","SimpleSnackBar_Conditional_2_Template_button_click_1_listener","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","pow","MatSnackBarRef","_afterDismissed","_onAction","_dismissedByAction","_onExit","_finishDismiss","dismiss","exit","_durationTimeoutId","dismissWithAction","closeWithAction","_dismissAfter","_open","dismissedByAction","afterDismissed","_onEnter","onAction","MAT_SNACK_BAR_DATA","MatSnackBarConfig","announcementMessage","horizontalPosition","verticalPosition","_MatSnackBarLabel","MatSnackBarLabel_Factory","MatSnackBarLabel","_MatSnackBarActions","MatSnackBarActions_Factory","MatSnackBarActions","_MatSnackBarAction","MatSnackBarAction_Factory","MatSnackBarAction","_SimpleSnackBar","snackBarRef","hasAction","SimpleSnackBar_Factory","SimpleSnackBar_Template","SimpleSnackBar","matSnackBarAnimations","snackBarState","_MatSnackBarContainer","snackBarConfig","_trackedModals","_announceDelay","_onAnnounce","_animationState","_liveElementId","_assertNotAttached","_afterPortalAttached","_live","_role","onAnimationEnd","_completeExit","onEnter","enter","_screenReaderAnnounce","_announceTimeoutId","_clearFromModals","panelClasses","_exposeToModals","_label","labelClass","inertElement","liveElement","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatSnackBarContainer_animation_state_done_HostBindingHandler","ɵɵsyntheticHostProperty","MatSnackBarContainer_Template","MatSnackBarContainer","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","_MatSnackBar","_openedSnackBarRef","_parentSnackBar","_snackBarRefAtThisLevel","_breakpointObserver","_defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","openFromComponent","_attach","openFromTemplate","_attachSnackBarContainer","userConfig","_animateSnackBar","isLeft","isRight","MatSnackBar_Factory","MatSnackBar","_MatSnackBarModule","MatSnackBarModule_Factory","MatSnackBarModule","_ToastService","snackBar","ToastService","_CommonComponent","toastService","subscriptions","load","unload","sub","CommonComponent","_ModalConfirmComponent","cancelText","confirmText","ModalConfirmComponent_Template","ModalConfirmComponent","filePath","lineNumber","environment","production","apiUrl","apiPort","apiPath","_HeroService","http","urlToEndpoint","getById","deleteById","HeroService","LOCALES","LocalesList","GenderLocalized","MessagesLocalized","_ToastComponent","hostClass","ToastComponent_HostBindings","ToastComponent_Conditional_0_Template","ToastComponent_Conditional_1_Template","ToastComponent_Template_button_click_3_listener","ToastComponent","ctx_r2","localizedColumns","column_r2","element_r4","ɵɵpipeBind1","HeroListComponent_Defer_11_For_3_Conditional_0_th_1_Template","HeroListComponent_Defer_11_For_3_Conditional_0_td_2_Template","localizedExtraColumns","HeroListComponent_Defer_11_For_3_Conditional_1_td_2_Template_button_click_1_listener","element_r6","interact","HeroListComponent_Defer_11_For_3_Conditional_1_th_1_Template","HeroListComponent_Defer_11_For_3_Conditional_1_td_2_Template","HeroListComponent_Defer_11_For_3_Conditional_0_Template","HeroListComponent_Defer_11_For_3_Conditional_1_Template","localizedMessages","input_r7","HeroListComponent_Defer_11_tr_6_Conditional_1_Template","HeroListComponent_Defer_11_tr_6_Conditional_2_Template","HeroListComponent_Defer_11_For_3_Template","ɵɵrepeaterTrackByIndex","HeroListComponent_Defer_11_tr_4_Template","HeroListComponent_Defer_11_tr_5_Template","HeroListComponent_Defer_11_tr_6_Template","displayedColumns","ExtraColumnsLocalized","DialogTextsLocalized","_HeroListComponent","heroService","filterQueue$","first_name","last_name","hero_name","isDevMode","filterValue","applyFilter","hero","edit","EDIT","findIndex","HeroListComponent_Query","HeroListComponent_Template_input_keyup_4_listener","HeroListComponent_Defer_11_Template","HeroListComponent_DeferLoading_12_Template","HeroListComponent_DeferError_13_Template","ɵɵdefer","HeroListComponent_Defer_14_DepsFn","ɵɵdeferEnableTimerScheduling","CREATE","ɵɵdeferWhen","ɵɵpureFunction0","HeroListComponent","mapKeysToArray","enumObject","omittedKeys","option_r1","HeroFormComponent_For_2_Conditional_5_For_2_Template","ɵɵpropertyInterpolate","field_r2","selectsOptions","ɵɵpureFunction1","HeroFormComponent_For_2_Conditional_5_Template","HeroFormComponent_For_2_Conditional_6_Template","HeroKeysIcons","isSelectField","SelectFields","_HeroFormComponent","fb","acceptText","resetText","initForm","fields","variant","birth_date","secret_identity","gender","superpower","team_affiliation","field","selectField","submitForm","HeroFormComponent_Template","HeroFormComponent_For_2_Template","HeroFormComponent_Template_button_click_9_listener","HeroFormComponent_Template_button_click_14_listener","KeyValuePipe","HeroFormComponent","_HeroCreateComponent","HeroCreateComponent_Template","HeroCreateComponent","_HeroEditComponent","HeroEditComponent_Template","HeroEditComponent","heroesRoutes","ANIMATION_PREFIX","_AsyncAnimationRendererFactory","delegate","animationType","moduleImpl","_rendererFactoryPromise","scheduler","ChangeDetectionScheduler","_engine","flush","loadImpl","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","rendererType","ɵtype","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","use","begin","whenRenderingDone","AsyncAnimationRendererFactory_Factory","AsyncAnimationRendererFactory","replay","impl","isMove","isHostElement","shouldReplay","propOrEventName","provideAnimationsAsync","performanceMarkFeature","appConfig","_ThemeManagerService","defaultTheme","theme$","theme","toggleTheme","ThemeManagerService","_MatToolbarRow","MatToolbarRow_Factory","MatToolbarRow","_MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbar","_MatToolbarModule","MatToolbarModule_Factory","MatToolbarModule","MatSlideToggle_Conditional_10_Template","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","hideIcon","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","_MatSlideToggle","_createChangeEvent","isChecked","buttonId","_uniqueId","_switchElement","_checked","inputId","_validatorOnChange","toggleChange","_getAriaLabelledBy","MatSlideToggle_Factory","MatSlideToggle_Query","MatSlideToggle_HostBindings","ariaDescribedby","MatSlideToggle_Template","MatSlideToggle_Template_button_click_1_listener","MatSlideToggle_Template_label_click_11_listener","switch_r2","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","_MatSlideToggleRequiredValidator","ɵMatSlideToggleRequiredValidator_BaseFactory","MatSlideToggleRequiredValidator_Factory","__MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleModule","MatSlideToggleModule_Factory","MatSlideToggleModule","tab_r2","locale_r3","ɵɵsanitizeUrl","_NavbarComponent","themeManagerService","selectedLocale","extractLocaleFromUrl","tabs","locales","sun","moon","NavbarComponent_Query","NavbarComponent_For_7_Template","ɵɵtwoWayListener","NavbarComponent_Template_mat_select_valueChange_11_listener","ɵɵtwoWayBindingSet","NavbarComponent_For_13_Template","NavbarComponent_Template_mat_slide_toggle_change_15_listener","ɵɵtwoWayProperty","NavbarComponent","_AppComponent","AppComponent_Template","AppComponent"],"ignoreList":[0,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,55,58,59],"sources":["node_modules/@angular/common/fesm2022/http.mjs","node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","node_modules/@angular/router/fesm2022/router.mjs","src/app/modules/core/constants/routes.ts","src/app/modules/features/heroes/enums/hero.enum.ts","node_modules/@angular/cdk/fesm2022/platform.mjs","node_modules/@angular/cdk/fesm2022/keycodes.mjs","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/cdk/fesm2022/observers.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/cdk/fesm2022/cdk.mjs","node_modules/@angular/material/fesm2022/core.mjs","node_modules/@angular/material/fesm2022/button.mjs","node_modules/@angular/cdk/fesm2022/collections.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/portal.mjs","node_modules/@angular/cdk/fesm2022/overlay.mjs","node_modules/@angular/cdk/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/dialog.mjs","node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/form-field.mjs","node_modules/@angular/material/fesm2022/icon.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/material/fesm2022/input.mjs","node_modules/@angular/material/fesm2022/select.mjs","node_modules/@angular/material/fesm2022/tooltip.mjs","node_modules/@angular/material/fesm2022/paginator.mjs","node_modules/@angular/material/fesm2022/progress-spinner.mjs","node_modules/@angular/material/fesm2022/sort.mjs","node_modules/@angular/cdk/fesm2022/table.mjs","node_modules/@angular/material/fesm2022/table.mjs","node_modules/@angular/material/fesm2022/snack-bar.mjs","src/app/modules/core/services/toast.service.ts","src/app/modules/core/components/common/common.component.ts","src/app/modules/core/components/modal-confirm/modal-confirm.component.ts","src/app/modules/core/components/modal-confirm/modal-confirm.component.html","src/environments/environment.dev.ts","src/app/modules/features/heroes/services/hero.service.ts","src/app/modules/shared/enums/common.enum.ts","src/app/modules/core/components/toast/toast.component.html","src/app/modules/core/components/toast/toast.component.ts","src/app/modules/features/heroes/pages/hero-list/hero-list.component.html","src/app/modules/features/heroes/pages/hero-list/hero-list.component.ts","src/app/modules/shared/utils/mappers.util.ts","src/app/modules/features/heroes/components/hero-form/hero-form.component.html","src/app/modules/features/heroes/components/hero-form/hero-form.component.ts","src/app/modules/features/heroes/pages/hero-create/hero-create.component.ts","src/app/modules/features/heroes/pages/hero-create/hero-create.component.html","src/app/modules/features/heroes/pages/hero-edit/hero-edit.component.ts","src/app/modules/features/heroes/pages/hero-edit/hero-edit.component.html","src/app/modules/features/heroes/heroes.routing.ts","src/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","src/app/modules/core/services/theme-manager.service.ts","node_modules/@angular/material/fesm2022/toolbar.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/modules/core/components/navbar/navbar.component.html","src/app/modules/core/components/navbar/navbar.component.ts","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["/**\n * @license Angular v17.3.10\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, runInInjectionContext, InjectionToken, ɵPendingTasks, PLATFORM_ID, ɵConsole, ɵformatRuntimeError, Inject, ɵRuntimeError, makeEnvironmentProviders, NgModule, TransferState, makeStateKey, ɵperformanceMarkFeature, APP_BOOTSTRAP_LISTENER, ApplicationRef, ɵwhenStable, ɵtruncateMiddle } from '@angular/core';\nimport { of, Observable, from } from 'rxjs';\nimport { concatMap, filter, map, finalize, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformServer, DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {}\n\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n  /**  Constructs a new HTTP header object with the given values.*/\n  constructor(headers) {\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     */\n    this.normalizedNames = new Map();\n    /**\n     * Queued updates to be materialized the next initialization.\n     */\n    this.lazyUpdate = null;\n    if (!headers) {\n      this.headers = new Map();\n    } else if (typeof headers === 'string') {\n      this.lazyInit = () => {\n        this.headers = new Map();\n        headers.split('\\n').forEach(line => {\n          const index = line.indexOf(':');\n          if (index > 0) {\n            const name = line.slice(0, index);\n            const key = name.toLowerCase();\n            const value = line.slice(index + 1).trim();\n            this.maybeSetNormalizedName(name, key);\n            if (this.headers.has(key)) {\n              this.headers.get(key).push(value);\n            } else {\n              this.headers.set(key, [value]);\n            }\n          }\n        });\n      };\n    } else if (typeof Headers !== 'undefined' && headers instanceof Headers) {\n      this.headers = new Map();\n      headers.forEach((values, name) => {\n        this.setHeaderEntries(name, values);\n      });\n    } else {\n      this.lazyInit = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          assertValidHeaders(headers);\n        }\n        this.headers = new Map();\n        Object.entries(headers).forEach(([name, values]) => {\n          this.setHeaderEntries(name, values);\n        });\n      };\n    }\n  }\n  /**\n   * Checks for existence of a given header.\n   *\n   * @param name The header name to check for existence.\n   *\n   * @returns True if the header exists, false otherwise.\n   */\n  has(name) {\n    this.init();\n    return this.headers.has(name.toLowerCase());\n  }\n  /**\n   * Retrieves the first value of a given header.\n   *\n   * @param name The header name.\n   *\n   * @returns The value string if the header exists, null otherwise\n   */\n  get(name) {\n    this.init();\n    const values = this.headers.get(name.toLowerCase());\n    return values && values.length > 0 ? values[0] : null;\n  }\n  /**\n   * Retrieves the names of the headers.\n   *\n   * @returns A list of header names.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.normalizedNames.values());\n  }\n  /**\n   * Retrieves a list of values for a given header.\n   *\n   * @param name The header name from which to retrieve values.\n   *\n   * @returns A string of values if the header exists, null otherwise.\n   */\n  getAll(name) {\n    this.init();\n    return this.headers.get(name.toLowerCase()) || null;\n  }\n  /**\n   * Appends a new value to the existing set of values for a header\n   * and returns them in a clone of the original instance.\n   *\n   * @param name The header name for which to append the values.\n   * @param value The value to append.\n   *\n   * @returns A clone of the HTTP headers object with the value appended to the given header.\n   */\n  append(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Sets or modifies a value for a given header in a clone of the original instance.\n   * If the header already exists, its value is replaced with the given value\n   * in the returned object.\n   *\n   * @param name The header name.\n   * @param value The value or values to set or override for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the newly set header value.\n   */\n  set(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Deletes values for a given header in a clone of the original instance.\n   *\n   * @param name The header name.\n   * @param value The value or values to delete for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the given value deleted.\n   */\n  delete(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'd'\n    });\n  }\n  maybeSetNormalizedName(name, lcName) {\n    if (!this.normalizedNames.has(lcName)) {\n      this.normalizedNames.set(lcName, name);\n    }\n  }\n  init() {\n    if (!!this.lazyInit) {\n      if (this.lazyInit instanceof HttpHeaders) {\n        this.copyFrom(this.lazyInit);\n      } else {\n        this.lazyInit();\n      }\n      this.lazyInit = null;\n      if (!!this.lazyUpdate) {\n        this.lazyUpdate.forEach(update => this.applyUpdate(update));\n        this.lazyUpdate = null;\n      }\n    }\n  }\n  copyFrom(other) {\n    other.init();\n    Array.from(other.headers.keys()).forEach(key => {\n      this.headers.set(key, other.headers.get(key));\n      this.normalizedNames.set(key, other.normalizedNames.get(key));\n    });\n  }\n  clone(update) {\n    const clone = new HttpHeaders();\n    clone.lazyInit = !!this.lazyInit && this.lazyInit instanceof HttpHeaders ? this.lazyInit : this;\n    clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n    return clone;\n  }\n  applyUpdate(update) {\n    const key = update.name.toLowerCase();\n    switch (update.op) {\n      case 'a':\n      case 's':\n        let value = update.value;\n        if (typeof value === 'string') {\n          value = [value];\n        }\n        if (value.length === 0) {\n          return;\n        }\n        this.maybeSetNormalizedName(update.name, key);\n        const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n        base.push(...value);\n        this.headers.set(key, base);\n        break;\n      case 'd':\n        const toDelete = update.value;\n        if (!toDelete) {\n          this.headers.delete(key);\n          this.normalizedNames.delete(key);\n        } else {\n          let existing = this.headers.get(key);\n          if (!existing) {\n            return;\n          }\n          existing = existing.filter(value => toDelete.indexOf(value) === -1);\n          if (existing.length === 0) {\n            this.headers.delete(key);\n            this.normalizedNames.delete(key);\n          } else {\n            this.headers.set(key, existing);\n          }\n        }\n        break;\n    }\n  }\n  setHeaderEntries(name, values) {\n    const headerValues = (Array.isArray(values) ? values : [values]).map(value => value.toString());\n    const key = name.toLowerCase();\n    this.headers.set(key, headerValues);\n    this.maybeSetNormalizedName(name, key);\n  }\n  /**\n   * @internal\n   */\n  forEach(fn) {\n    this.init();\n    Array.from(this.normalizedNames.keys()).forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n  }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings, numbers or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n  for (const [key, value] of Object.entries(headers)) {\n    if (!(typeof value === 'string' || typeof value === 'number') && !Array.isArray(value)) {\n      throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` + `Expecting either a string, a number or an array, but got: \\`${value}\\`.`);\n    }\n  }\n}\n\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n  /**\n   * Encodes a key name for a URL parameter or query-string.\n   * @param key The key name.\n   * @returns The encoded key name.\n   */\n  encodeKey(key) {\n    return standardEncoding(key);\n  }\n  /**\n   * Encodes the value of a URL parameter or query-string.\n   * @param value The value.\n   * @returns The encoded value.\n   */\n  encodeValue(value) {\n    return standardEncoding(value);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string key.\n   * @param key The encoded key name.\n   * @returns The decoded key name.\n   */\n  decodeKey(key) {\n    return decodeURIComponent(key);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string value.\n   * @param value The encoded value.\n   * @returns The decoded value.\n   */\n  decodeValue(value) {\n    return decodeURIComponent(value);\n  }\n}\nfunction paramParser(rawParams, codec) {\n  const map = new Map();\n  if (rawParams.length > 0) {\n    // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n    // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n    // may start with the `?` char, so we strip it if it's present.\n    const params = rawParams.replace(/^\\?/, '').split('&');\n    params.forEach(param => {\n      const eqIdx = param.indexOf('=');\n      const [key, val] = eqIdx == -1 ? [codec.decodeKey(param), ''] : [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n      const list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n  '40': '@',\n  '3A': ':',\n  '24': '$',\n  '2C': ',',\n  '3B': ';',\n  '3D': '=',\n  '3F': '?',\n  '2F': '/'\n};\nfunction standardEncoding(v) {\n  return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n  return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n  constructor(options = {}) {\n    this.updates = null;\n    this.cloneFrom = null;\n    this.encoder = options.encoder || new HttpUrlEncodingCodec();\n    if (!!options.fromString) {\n      if (!!options.fromObject) {\n        throw new Error(`Cannot specify both fromString and fromObject.`);\n      }\n      this.map = paramParser(options.fromString, this.encoder);\n    } else if (!!options.fromObject) {\n      this.map = new Map();\n      Object.keys(options.fromObject).forEach(key => {\n        const value = options.fromObject[key];\n        // convert the values to strings\n        const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n        this.map.set(key, values);\n      });\n    } else {\n      this.map = null;\n    }\n  }\n  /**\n   * Reports whether the body includes one or more values for a given parameter.\n   * @param param The parameter name.\n   * @returns True if the parameter has one or more values,\n   * false if it has no value or is not present.\n   */\n  has(param) {\n    this.init();\n    return this.map.has(param);\n  }\n  /**\n   * Retrieves the first value for a parameter.\n   * @param param The parameter name.\n   * @returns The first value of the given parameter,\n   * or `null` if the parameter is not present.\n   */\n  get(param) {\n    this.init();\n    const res = this.map.get(param);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Retrieves all values for a  parameter.\n   * @param param The parameter name.\n   * @returns All values in a string array,\n   * or `null` if the parameter not present.\n   */\n  getAll(param) {\n    this.init();\n    return this.map.get(param) || null;\n  }\n  /**\n   * Retrieves all the parameters for this body.\n   * @returns The parameter names in a string array.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.map.keys());\n  }\n  /**\n   * Appends a new value to existing values for a parameter.\n   * @param param The parameter name.\n   * @param value The new value to add.\n   * @return A new body with the appended value.\n   */\n  append(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Constructs a new body with appended values for the given parameter name.\n   * @param params parameters and values\n   * @return A new body with the new value.\n   */\n  appendAll(params) {\n    const updates = [];\n    Object.keys(params).forEach(param => {\n      const value = params[param];\n      if (Array.isArray(value)) {\n        value.forEach(_value => {\n          updates.push({\n            param,\n            value: _value,\n            op: 'a'\n          });\n        });\n      } else {\n        updates.push({\n          param,\n          value: value,\n          op: 'a'\n        });\n      }\n    });\n    return this.clone(updates);\n  }\n  /**\n   * Replaces the value for a parameter.\n   * @param param The parameter name.\n   * @param value The new value.\n   * @return A new body with the new value.\n   */\n  set(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Removes a given value or all values from a parameter.\n   * @param param The parameter name.\n   * @param value The value to remove, if provided.\n   * @return A new body with the given value removed, or with all values\n   * removed if no value is specified.\n   */\n  delete(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'd'\n    });\n  }\n  /**\n   * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n   * separated by `&`s.\n   */\n  toString() {\n    this.init();\n    return this.keys().map(key => {\n      const eKey = this.encoder.encodeKey(key);\n      // `a: ['1']` produces `'a=1'`\n      // `b: []` produces `''`\n      // `c: ['1', '2']` produces `'c=1&c=2'`\n      return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value)).join('&');\n    })\n    // filter out empty values because `b: []` produces `''`\n    // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n    .filter(param => param !== '').join('&');\n  }\n  clone(update) {\n    const clone = new HttpParams({\n      encoder: this.encoder\n    });\n    clone.cloneFrom = this.cloneFrom || this;\n    clone.updates = (this.updates || []).concat(update);\n    return clone;\n  }\n  init() {\n    if (this.map === null) {\n      this.map = new Map();\n    }\n    if (this.cloneFrom !== null) {\n      this.cloneFrom.init();\n      this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n      this.updates.forEach(update => {\n        switch (update.op) {\n          case 'a':\n          case 's':\n            const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n            base.push(valueToString(update.value));\n            this.map.set(update.param, base);\n            break;\n          case 'd':\n            if (update.value !== undefined) {\n              let base = this.map.get(update.param) || [];\n              const idx = base.indexOf(valueToString(update.value));\n              if (idx !== -1) {\n                base.splice(idx, 1);\n              }\n              if (base.length > 0) {\n                this.map.set(update.param, base);\n              } else {\n                this.map.delete(update.param);\n              }\n            } else {\n              this.map.delete(update.param);\n              break;\n            }\n        }\n      });\n      this.cloneFrom = this.updates = null;\n    }\n  }\n}\n\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n  constructor(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```typescript\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n  constructor() {\n    this.map = new Map();\n  }\n  /**\n   * Store a value in the context. If a value is already present it will be overwritten.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   * @param value The value to store.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  set(token, value) {\n    this.map.set(token, value);\n    return this;\n  }\n  /**\n   * Retrieve the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns The stored value or default if one is defined.\n   */\n  get(token) {\n    if (!this.map.has(token)) {\n      this.map.set(token, token.defaultValue());\n    }\n    return this.map.get(token);\n  }\n  /**\n   * Delete the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  delete(token) {\n    this.map.delete(token);\n    return this;\n  }\n  /**\n   * Checks for existence of a given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns True if the token exists, false otherwise.\n   */\n  has(token) {\n    return this.map.has(token);\n  }\n  /**\n   * @returns a list of tokens currently stored in the context.\n   */\n  keys() {\n    return this.map.keys();\n  }\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n  switch (method) {\n    case 'DELETE':\n    case 'GET':\n    case 'HEAD':\n    case 'OPTIONS':\n    case 'JSONP':\n      return false;\n    default:\n      return true;\n  }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n  return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n  return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n  return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n  return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n  constructor(method, url, third, fourth) {\n    this.url = url;\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     */\n    this.body = null;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     *\n     * Note: The `FetchBackend` doesn't support progress report on uploads.\n     */\n    this.reportProgress = false;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     */\n    this.withCredentials = false;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     */\n    this.responseType = 'json';\n    this.method = method.toUpperCase();\n    // Next, need to figure out which argument holds the HttpRequestInit\n    // options, if any.\n    let options;\n    // Check whether a body argument is expected. The only valid way to omit\n    // the body argument is to use a known no-body method like GET.\n    if (mightHaveBody(this.method) || !!fourth) {\n      // Body is the third argument, options are the fourth.\n      this.body = third !== undefined ? third : null;\n      options = fourth;\n    } else {\n      // No body required, options are the third argument. The body stays null.\n      options = third;\n    }\n    // If options have been passed, interpret them.\n    if (options) {\n      // Normalize reportProgress and withCredentials.\n      this.reportProgress = !!options.reportProgress;\n      this.withCredentials = !!options.withCredentials;\n      // Override default response type of 'json' if one is provided.\n      if (!!options.responseType) {\n        this.responseType = options.responseType;\n      }\n      // Override headers if they're provided.\n      if (!!options.headers) {\n        this.headers = options.headers;\n      }\n      if (!!options.context) {\n        this.context = options.context;\n      }\n      if (!!options.params) {\n        this.params = options.params;\n      }\n      // We do want to assign transferCache even if it's falsy (false is valid value)\n      this.transferCache = options.transferCache;\n    }\n    // If no headers have been passed in, construct a new HttpHeaders instance.\n    this.headers ??= new HttpHeaders();\n    // If no context have been passed in, construct a new HttpContext instance.\n    this.context ??= new HttpContext();\n    // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n    if (!this.params) {\n      this.params = new HttpParams();\n      this.urlWithParams = url;\n    } else {\n      // Encode the parameters to a string in preparation for inclusion in the URL.\n      const params = this.params.toString();\n      if (params.length === 0) {\n        // No parameters, the visible URL is just the URL given at creation time.\n        this.urlWithParams = url;\n      } else {\n        // Does the URL already have query parameters? Look for '?'.\n        const qIdx = url.indexOf('?');\n        // There are 3 cases to handle:\n        // 1) No existing parameters -> append '?' followed by params.\n        // 2) '?' exists and is followed by existing query string ->\n        //    append '&' followed by params.\n        // 3) '?' exists at the end of the url -> append params directly.\n        // This basically amounts to determining the character, if any, with\n        // which to join the URL and parameters.\n        const sep = qIdx === -1 ? '?' : qIdx < url.length - 1 ? '&' : '';\n        this.urlWithParams = url + sep + params;\n      }\n    }\n  }\n  /**\n   * Transform the free-form body into a serialized format suitable for\n   * transmission to the server.\n   */\n  serializeBody() {\n    // If no body is present, no need to serialize it.\n    if (this.body === null) {\n      return null;\n    }\n    // Check whether the body is already in a serialized form. If so,\n    // it can just be returned directly.\n    if (typeof this.body === 'string' || isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) || isUrlSearchParams(this.body)) {\n      return this.body;\n    }\n    // Check whether the body is an instance of HttpUrlEncodedParams.\n    if (this.body instanceof HttpParams) {\n      return this.body.toString();\n    }\n    // Check whether the body is an object or array, and serialize with JSON if so.\n    if (typeof this.body === 'object' || typeof this.body === 'boolean' || Array.isArray(this.body)) {\n      return JSON.stringify(this.body);\n    }\n    // Fall back on toString() for everything else.\n    return this.body.toString();\n  }\n  /**\n   * Examine the body and attempt to infer an appropriate MIME type\n   * for it.\n   *\n   * If no such type can be inferred, this method will return `null`.\n   */\n  detectContentTypeHeader() {\n    // An empty body has no content type.\n    if (this.body === null) {\n      return null;\n    }\n    // FormData bodies rely on the browser's content type assignment.\n    if (isFormData(this.body)) {\n      return null;\n    }\n    // Blobs usually have their own content type. If it doesn't, then\n    // no type can be inferred.\n    if (isBlob(this.body)) {\n      return this.body.type || null;\n    }\n    // Array buffers have unknown contents and thus no type can be inferred.\n    if (isArrayBuffer(this.body)) {\n      return null;\n    }\n    // Technically, strings could be a form of JSON data, but it's safe enough\n    // to assume they're plain strings.\n    if (typeof this.body === 'string') {\n      return 'text/plain';\n    }\n    // `HttpUrlEncodedParams` has its own content-type.\n    if (this.body instanceof HttpParams) {\n      return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Arrays, objects, boolean and numbers will be encoded as JSON.\n    if (typeof this.body === 'object' || typeof this.body === 'number' || typeof this.body === 'boolean') {\n      return 'application/json';\n    }\n    // No type could be inferred.\n    return null;\n  }\n  clone(update = {}) {\n    // For method, url, and responseType, take the current value unless\n    // it is overridden in the update hash.\n    const method = update.method || this.method;\n    const url = update.url || this.url;\n    const responseType = update.responseType || this.responseType;\n    // Carefully handle the transferCache to differentiate between\n    // `false` and `undefined` in the update args.\n    const transferCache = update.transferCache ?? this.transferCache;\n    // The body is somewhat special - a `null` value in update.body means\n    // whatever current body is present is being overridden with an empty\n    // body, whereas an `undefined` value in update.body implies no\n    // override.\n    const body = update.body !== undefined ? update.body : this.body;\n    // Carefully handle the boolean options to differentiate between\n    // `false` and `undefined` in the update args.\n    const withCredentials = update.withCredentials ?? this.withCredentials;\n    const reportProgress = update.reportProgress ?? this.reportProgress;\n    // Headers and params may be appended to if `setHeaders` or\n    // `setParams` are used.\n    let headers = update.headers || this.headers;\n    let params = update.params || this.params;\n    // Pass on context if needed\n    const context = update.context ?? this.context;\n    // Check whether the caller has asked to add headers.\n    if (update.setHeaders !== undefined) {\n      // Set every requested header.\n      headers = Object.keys(update.setHeaders).reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n    }\n    // Check whether the caller has asked to set params.\n    if (update.setParams) {\n      // Set every requested param.\n      params = Object.keys(update.setParams).reduce((params, param) => params.set(param, update.setParams[param]), params);\n    }\n    // Finally, construct the new HttpRequest using the pieces from above.\n    return new HttpRequest(method, url, body, {\n      params,\n      headers,\n      context,\n      reportProgress,\n      responseType,\n      withCredentials,\n      transferCache\n    });\n  }\n}\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n  /**\n   * The request was sent out over the wire.\n   */\n  HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n  /**\n   * An upload progress event was received.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n  /**\n   * The response status code and headers were received.\n   */\n  HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n  /**\n   * A download progress event was received.\n   */\n  HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n  /**\n   * The full response including the body was received.\n   */\n  HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n  /**\n   * A custom event from an interceptor or a backend.\n   */\n  HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n  /**\n   * Super-constructor for all responses.\n   *\n   * The single parameter accepted is an initialization hash. Any properties\n   * of the response passed there will override the default values.\n   */\n  constructor(init, defaultStatus = HttpStatusCode.Ok, defaultStatusText = 'OK') {\n    // If the hash has values passed, use them to initialize the response.\n    // Otherwise use the default values.\n    this.headers = init.headers || new HttpHeaders();\n    this.status = init.status !== undefined ? init.status : defaultStatus;\n    this.statusText = init.statusText || defaultStatusText;\n    this.url = init.url || null;\n    // Cache the ok value to avoid defining a getter.\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n  /**\n   * Create a new `HttpHeaderResponse` with the given parameters.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.type = HttpEventType.ResponseHeader;\n  }\n  /**\n   * Copy this `HttpHeaderResponse`, overriding its contents with the\n   * given parameter hash.\n   */\n  clone(update = {}) {\n    // Perform a straightforward initialization of the new HttpHeaderResponse,\n    // overriding the current parameters with new ones if given.\n    return new HttpHeaderResponse({\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n  /**\n   * Construct a new `HttpResponse`.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.type = HttpEventType.Response;\n    this.body = init.body !== undefined ? init.body : null;\n  }\n  clone(update = {}) {\n    return new HttpResponse({\n      body: update.body !== undefined ? update.body : this.body,\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n  constructor(init) {\n    // Initialize with a default status of 0 / Unknown Error.\n    super(init, 0, 'Unknown Error');\n    this.name = 'HttpErrorResponse';\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     */\n    this.ok = false;\n    // If the response was successful, then this was a parse error. Otherwise, it was\n    // a protocol-level failure of some sort. Either the request failed in transit\n    // or the server returned an unsuccessful status code.\n    if (this.status >= 200 && this.status < 300) {\n      this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n    } else {\n      this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n    }\n    this.error = init.error || null;\n  }\n}\n/**\n * Http status codes.\n * As per https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n * @publicApi\n */\nvar HttpStatusCode;\n(function (HttpStatusCode) {\n  HttpStatusCode[HttpStatusCode[\"Continue\"] = 100] = \"Continue\";\n  HttpStatusCode[HttpStatusCode[\"SwitchingProtocols\"] = 101] = \"SwitchingProtocols\";\n  HttpStatusCode[HttpStatusCode[\"Processing\"] = 102] = \"Processing\";\n  HttpStatusCode[HttpStatusCode[\"EarlyHints\"] = 103] = \"EarlyHints\";\n  HttpStatusCode[HttpStatusCode[\"Ok\"] = 200] = \"Ok\";\n  HttpStatusCode[HttpStatusCode[\"Created\"] = 201] = \"Created\";\n  HttpStatusCode[HttpStatusCode[\"Accepted\"] = 202] = \"Accepted\";\n  HttpStatusCode[HttpStatusCode[\"NonAuthoritativeInformation\"] = 203] = \"NonAuthoritativeInformation\";\n  HttpStatusCode[HttpStatusCode[\"NoContent\"] = 204] = \"NoContent\";\n  HttpStatusCode[HttpStatusCode[\"ResetContent\"] = 205] = \"ResetContent\";\n  HttpStatusCode[HttpStatusCode[\"PartialContent\"] = 206] = \"PartialContent\";\n  HttpStatusCode[HttpStatusCode[\"MultiStatus\"] = 207] = \"MultiStatus\";\n  HttpStatusCode[HttpStatusCode[\"AlreadyReported\"] = 208] = \"AlreadyReported\";\n  HttpStatusCode[HttpStatusCode[\"ImUsed\"] = 226] = \"ImUsed\";\n  HttpStatusCode[HttpStatusCode[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n  HttpStatusCode[HttpStatusCode[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n  HttpStatusCode[HttpStatusCode[\"Found\"] = 302] = \"Found\";\n  HttpStatusCode[HttpStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n  HttpStatusCode[HttpStatusCode[\"NotModified\"] = 304] = \"NotModified\";\n  HttpStatusCode[HttpStatusCode[\"UseProxy\"] = 305] = \"UseProxy\";\n  HttpStatusCode[HttpStatusCode[\"Unused\"] = 306] = \"Unused\";\n  HttpStatusCode[HttpStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n  HttpStatusCode[HttpStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n  HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n  HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n  HttpStatusCode[HttpStatusCode[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n  HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n  HttpStatusCode[HttpStatusCode[\"NotFound\"] = 404] = \"NotFound\";\n  HttpStatusCode[HttpStatusCode[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n  HttpStatusCode[HttpStatusCode[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n  HttpStatusCode[HttpStatusCode[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n  HttpStatusCode[HttpStatusCode[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n  HttpStatusCode[HttpStatusCode[\"Conflict\"] = 409] = \"Conflict\";\n  HttpStatusCode[HttpStatusCode[\"Gone\"] = 410] = \"Gone\";\n  HttpStatusCode[HttpStatusCode[\"LengthRequired\"] = 411] = \"LengthRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionFailed\"] = 412] = \"PreconditionFailed\";\n  HttpStatusCode[HttpStatusCode[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UriTooLong\"] = 414] = \"UriTooLong\";\n  HttpStatusCode[HttpStatusCode[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n  HttpStatusCode[HttpStatusCode[\"RangeNotSatisfiable\"] = 416] = \"RangeNotSatisfiable\";\n  HttpStatusCode[HttpStatusCode[\"ExpectationFailed\"] = 417] = \"ExpectationFailed\";\n  HttpStatusCode[HttpStatusCode[\"ImATeapot\"] = 418] = \"ImATeapot\";\n  HttpStatusCode[HttpStatusCode[\"MisdirectedRequest\"] = 421] = \"MisdirectedRequest\";\n  HttpStatusCode[HttpStatusCode[\"UnprocessableEntity\"] = 422] = \"UnprocessableEntity\";\n  HttpStatusCode[HttpStatusCode[\"Locked\"] = 423] = \"Locked\";\n  HttpStatusCode[HttpStatusCode[\"FailedDependency\"] = 424] = \"FailedDependency\";\n  HttpStatusCode[HttpStatusCode[\"TooEarly\"] = 425] = \"TooEarly\";\n  HttpStatusCode[HttpStatusCode[\"UpgradeRequired\"] = 426] = \"UpgradeRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionRequired\"] = 428] = \"PreconditionRequired\";\n  HttpStatusCode[HttpStatusCode[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n  HttpStatusCode[HttpStatusCode[\"RequestHeaderFieldsTooLarge\"] = 431] = \"RequestHeaderFieldsTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UnavailableForLegalReasons\"] = 451] = \"UnavailableForLegalReasons\";\n  HttpStatusCode[HttpStatusCode[\"InternalServerError\"] = 500] = \"InternalServerError\";\n  HttpStatusCode[HttpStatusCode[\"NotImplemented\"] = 501] = \"NotImplemented\";\n  HttpStatusCode[HttpStatusCode[\"BadGateway\"] = 502] = \"BadGateway\";\n  HttpStatusCode[HttpStatusCode[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n  HttpStatusCode[HttpStatusCode[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n  HttpStatusCode[HttpStatusCode[\"HttpVersionNotSupported\"] = 505] = \"HttpVersionNotSupported\";\n  HttpStatusCode[HttpStatusCode[\"VariantAlsoNegotiates\"] = 506] = \"VariantAlsoNegotiates\";\n  HttpStatusCode[HttpStatusCode[\"InsufficientStorage\"] = 507] = \"InsufficientStorage\";\n  HttpStatusCode[HttpStatusCode[\"LoopDetected\"] = 508] = \"LoopDetected\";\n  HttpStatusCode[HttpStatusCode[\"NotExtended\"] = 510] = \"NotExtended\";\n  HttpStatusCode[HttpStatusCode[\"NetworkAuthenticationRequired\"] = 511] = \"NetworkAuthenticationRequired\";\n})(HttpStatusCode || (HttpStatusCode = {}));\n\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n  return {\n    body,\n    headers: options.headers,\n    context: options.context,\n    observe: options.observe,\n    params: options.params,\n    reportProgress: options.reportProgress,\n    responseType: options.responseType,\n    withCredentials: options.withCredentials,\n    transferCache: options.transferCache\n  };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/tour-of-heroes/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/understanding-communicating-with-http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nclass HttpClient {\n  constructor(handler) {\n    this.handler = handler;\n  }\n  /**\n   * Constructs an observable for a generic HTTP request that, when subscribed,\n   * fires the request through the chain of registered interceptors and on to the\n   * server.\n   *\n   * You can pass an `HttpRequest` directly as the only parameter. In this case,\n   * the call returns an observable of the raw `HttpEvent` stream.\n   *\n   * Alternatively you can pass an HTTP method as the first parameter,\n   * a URL string as the second, and an options hash containing the request body as the third.\n   * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n   * type of returned observable.\n   *   * The `responseType` value determines how a successful response body is parsed.\n   *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n   * object as a type parameter to the call.\n   *\n   * The `observe` value determines the return type, according to what you are interested in\n   * observing.\n   *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n   * progress events by default.\n   *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n   * where the `T` parameter depends on the `responseType` and any optionally provided type\n   * parameter.\n   *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n   *\n   */\n  request(first, url, options = {}) {\n    let req;\n    // First, check whether the primary argument is an instance of `HttpRequest`.\n    if (first instanceof HttpRequest) {\n      // It is. The other arguments must be undefined (per the signatures) and can be\n      // ignored.\n      req = first;\n    } else {\n      // It's a string, so it represents a URL. Construct a request based on it,\n      // and incorporate the remaining arguments (assuming `GET` unless a method is\n      // provided.\n      // Figure out the headers.\n      let headers = undefined;\n      if (options.headers instanceof HttpHeaders) {\n        headers = options.headers;\n      } else {\n        headers = new HttpHeaders(options.headers);\n      }\n      // Sort out parameters.\n      let params = undefined;\n      if (!!options.params) {\n        if (options.params instanceof HttpParams) {\n          params = options.params;\n        } else {\n          params = new HttpParams({\n            fromObject: options.params\n          });\n        }\n      }\n      // Construct the request.\n      req = new HttpRequest(first, url, options.body !== undefined ? options.body : null, {\n        headers,\n        context: options.context,\n        params,\n        reportProgress: options.reportProgress,\n        // By default, JSON is assumed to be returned for all calls.\n        responseType: options.responseType || 'json',\n        withCredentials: options.withCredentials,\n        transferCache: options.transferCache\n      });\n    }\n    // Start with an Observable.of() the initial request, and run the handler (which\n    // includes all interceptors) inside a concatMap(). This way, the handler runs\n    // inside an Observable chain, which causes interceptors to be re-run on every\n    // subscription (this also makes retries re-run the handler, including interceptors).\n    const events$ = of(req).pipe(concatMap(req => this.handler.handle(req)));\n    // If coming via the API signature which accepts a previously constructed HttpRequest,\n    // the only option is to get the event stream. Otherwise, return the event stream if\n    // that is what was requested.\n    if (first instanceof HttpRequest || options.observe === 'events') {\n      return events$;\n    }\n    // The requested stream contains either the full response or the body. In either\n    // case, the first step is to filter the event stream to extract a stream of\n    // responses(s).\n    const res$ = events$.pipe(filter(event => event instanceof HttpResponse));\n    // Decide which stream to return.\n    switch (options.observe || 'body') {\n      case 'body':\n        // The requested stream is the body. Map the response stream to the response\n        // body. This could be done more simply, but a misbehaving interceptor might\n        // transform the response body into a different format and ignore the requested\n        // responseType. Guard against this by validating that the response is of the\n        // requested type.\n        switch (req.responseType) {\n          case 'arraybuffer':\n            return res$.pipe(map(res => {\n              // Validate that the body is an ArrayBuffer.\n              if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                throw new Error('Response is not an ArrayBuffer.');\n              }\n              return res.body;\n            }));\n          case 'blob':\n            return res$.pipe(map(res => {\n              // Validate that the body is a Blob.\n              if (res.body !== null && !(res.body instanceof Blob)) {\n                throw new Error('Response is not a Blob.');\n              }\n              return res.body;\n            }));\n          case 'text':\n            return res$.pipe(map(res => {\n              // Validate that the body is a string.\n              if (res.body !== null && typeof res.body !== 'string') {\n                throw new Error('Response is not a string.');\n              }\n              return res.body;\n            }));\n          case 'json':\n          default:\n            // No validation needed for JSON responses, as they can be of any type.\n            return res$.pipe(map(res => res.body));\n        }\n      case 'response':\n        // The response stream was requested directly, so return it.\n        return res$;\n      default:\n        // Guard against new future observe types being added.\n        throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n    }\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `DELETE` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   *\n   * @param url     The endpoint URL.\n   * @param options The HTTP options to send with the request.\n   *\n   */\n  delete(url, options = {}) {\n    return this.request('DELETE', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `GET` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   */\n  get(url, options = {}) {\n    return this.request('GET', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `HEAD` request to execute on the server. The `HEAD` method returns\n   * meta information about the resource without transferring the\n   * resource itself. See the individual overloads for\n   * details on the return type.\n   */\n  head(url, options = {}) {\n    return this.request('HEAD', url, options);\n  }\n  /**\n   * Constructs an `Observable` that, when subscribed, causes a request with the special method\n   * `JSONP` to be dispatched via the interceptor pipeline.\n   * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n   * API endpoints that don't support newer,\n   * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n   * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n   * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n   * application making the request.\n   * The endpoint API must support JSONP callback for JSONP requests to work.\n   * The resource API returns the JSON response wrapped in a callback function.\n   * You can pass the callback function name as one of the query parameters.\n   * Note that JSONP requests can only be used with `GET` requests.\n   *\n   * @param url The resource URL.\n   * @param callbackParam The callback function name.\n   *\n   */\n  jsonp(url, callbackParam) {\n    return this.request('JSONP', url, {\n      params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n      observe: 'body',\n      responseType: 'json'\n    });\n  }\n  /**\n   * Constructs an `Observable` that, when subscribed, causes the configured\n   * `OPTIONS` request to execute on the server. This method allows the client\n   * to determine the supported HTTP methods and other capabilities of an endpoint,\n   * without implying a resource action. See the individual overloads for\n   * details on the return type.\n   */\n  options(url, options = {}) {\n    return this.request('OPTIONS', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `PATCH` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   */\n  patch(url, body, options = {}) {\n    return this.request('PATCH', url, addBody(options, body));\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `POST` request to execute on the server. The server responds with the location of\n   * the replaced resource. See the individual overloads for\n   * details on the return type.\n   */\n  post(url, body, options = {}) {\n    return this.request('POST', url, addBody(options, body));\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n   * with a new set of values.\n   * See the individual overloads for details on the return type.\n   */\n  put(url, body, options = {}) {\n    return this.request('PUT', url, addBody(options, body));\n  }\n  static {\n    this.ɵfac = function HttpClient_Factory(t) {\n      return new (t || HttpClient)(i0.ɵɵinject(HttpHandler));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpClient,\n      factory: HttpClient.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClient, [{\n    type: Injectable\n  }], () => [{\n    type: HttpHandler\n  }], null);\n})();\nconst XSSI_PREFIX$1 = /^\\)\\]\\}',?\\n/;\nconst REQUEST_URL_HEADER = `X-Request-URL`;\n/**\n * Determine an appropriate URL for the response, by checking either\n * response url or the X-Request-URL header.\n */\nfunction getResponseUrl$1(response) {\n  if (response.url) {\n    return response.url;\n  }\n  // stored as lowercase in the map\n  const xRequestUrl = REQUEST_URL_HEADER.toLocaleLowerCase();\n  return response.headers.get(xRequestUrl);\n}\n/**\n * Uses `fetch` to send requests to a backend server.\n *\n * This `FetchBackend` requires the support of the\n * [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which is available on all\n * supported browsers and on Node.js v18 or later.\n *\n * @see {@link HttpHandler}\n *\n * @publicApi\n */\nclass FetchBackend {\n  constructor() {\n    // We need to bind the native fetch to its context or it will throw an \"illegal invocation\"\n    this.fetchImpl = inject(FetchFactory, {\n      optional: true\n    })?.fetch ?? fetch.bind(globalThis);\n    this.ngZone = inject(NgZone);\n  }\n  handle(request) {\n    return new Observable(observer => {\n      const aborter = new AbortController();\n      this.doRequest(request, aborter.signal, observer).then(noop, error => observer.error(new HttpErrorResponse({\n        error\n      })));\n      return () => aborter.abort();\n    });\n  }\n  async doRequest(request, signal, observer) {\n    const init = this.createRequestInit(request);\n    let response;\n    try {\n      const fetchPromise = this.fetchImpl(request.urlWithParams, {\n        signal,\n        ...init\n      });\n      // Make sure Zone.js doesn't trigger false-positive unhandled promise\n      // error in case the Promise is rejected synchronously. See function\n      // description for additional information.\n      silenceSuperfluousUnhandledPromiseRejection(fetchPromise);\n      // Send the `Sent` event before awaiting the response.\n      observer.next({\n        type: HttpEventType.Sent\n      });\n      response = await fetchPromise;\n    } catch (error) {\n      observer.error(new HttpErrorResponse({\n        error,\n        status: error.status ?? 0,\n        statusText: error.statusText,\n        url: request.urlWithParams,\n        headers: error.headers\n      }));\n      return;\n    }\n    const headers = new HttpHeaders(response.headers);\n    const statusText = response.statusText;\n    const url = getResponseUrl$1(response) ?? request.urlWithParams;\n    let status = response.status;\n    let body = null;\n    if (request.reportProgress) {\n      observer.next(new HttpHeaderResponse({\n        headers,\n        status,\n        statusText,\n        url\n      }));\n    }\n    if (response.body) {\n      // Read Progress\n      const contentLength = response.headers.get('content-length');\n      const chunks = [];\n      const reader = response.body.getReader();\n      let receivedLength = 0;\n      let decoder;\n      let partialText;\n      // We have to check whether the Zone is defined in the global scope because this may be called\n      // when the zone is nooped.\n      const reqZone = typeof Zone !== 'undefined' && Zone.current;\n      // Perform response processing outside of Angular zone to\n      // ensure no excessive change detection runs are executed\n      // Here calling the async ReadableStreamDefaultReader.read() is responsible for triggering CD\n      await this.ngZone.runOutsideAngular(async () => {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            break;\n          }\n          chunks.push(value);\n          receivedLength += value.length;\n          if (request.reportProgress) {\n            partialText = request.responseType === 'text' ? (partialText ?? '') + (decoder ??= new TextDecoder()).decode(value, {\n              stream: true\n            }) : undefined;\n            const reportProgress = () => observer.next({\n              type: HttpEventType.DownloadProgress,\n              total: contentLength ? +contentLength : undefined,\n              loaded: receivedLength,\n              partialText\n            });\n            reqZone ? reqZone.run(reportProgress) : reportProgress();\n          }\n        }\n      });\n      // Combine all chunks.\n      const chunksAll = this.concatChunks(chunks, receivedLength);\n      try {\n        const contentType = response.headers.get('Content-Type') ?? '';\n        body = this.parseBody(request, chunksAll, contentType);\n      } catch (error) {\n        // Body loading or parsing failed\n        observer.error(new HttpErrorResponse({\n          error,\n          headers: new HttpHeaders(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          url: getResponseUrl$1(response) ?? request.urlWithParams\n        }));\n        return;\n      }\n    }\n    // Same behavior as the XhrBackend\n    if (status === 0) {\n      status = body ? HttpStatusCode.Ok : 0;\n    }\n    // ok determines whether the response will be transmitted on the event or\n    // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n    // but a successful status code can still result in an error if the user\n    // asked for JSON data and the body cannot be parsed as such.\n    const ok = status >= 200 && status < 300;\n    if (ok) {\n      observer.next(new HttpResponse({\n        body,\n        headers,\n        status,\n        statusText,\n        url\n      }));\n      // The full body has been received and delivered, no further events\n      // are possible. This request is complete.\n      observer.complete();\n    } else {\n      observer.error(new HttpErrorResponse({\n        error: body,\n        headers,\n        status,\n        statusText,\n        url\n      }));\n    }\n  }\n  parseBody(request, binContent, contentType) {\n    switch (request.responseType) {\n      case 'json':\n        // stripping the XSSI when present\n        const text = new TextDecoder().decode(binContent).replace(XSSI_PREFIX$1, '');\n        return text === '' ? null : JSON.parse(text);\n      case 'text':\n        return new TextDecoder().decode(binContent);\n      case 'blob':\n        return new Blob([binContent], {\n          type: contentType\n        });\n      case 'arraybuffer':\n        return binContent.buffer;\n    }\n  }\n  createRequestInit(req) {\n    // We could share some of this logic with the XhrBackend\n    const headers = {};\n    const credentials = req.withCredentials ? 'include' : undefined;\n    // Setting all the requested headers.\n    req.headers.forEach((name, values) => headers[name] = values.join(','));\n    // Add an Accept header if one isn't present already.\n    headers['Accept'] ??= 'application/json, text/plain, */*';\n    // Auto-detect the Content-Type header if one isn't present already.\n    if (!headers['Content-Type']) {\n      const detectedType = req.detectContentTypeHeader();\n      // Sometimes Content-Type detection fails.\n      if (detectedType !== null) {\n        headers['Content-Type'] = detectedType;\n      }\n    }\n    return {\n      body: req.serializeBody(),\n      method: req.method,\n      headers,\n      credentials\n    };\n  }\n  concatChunks(chunks, totalLength) {\n    const chunksAll = new Uint8Array(totalLength);\n    let position = 0;\n    for (const chunk of chunks) {\n      chunksAll.set(chunk, position);\n      position += chunk.length;\n    }\n    return chunksAll;\n  }\n  static {\n    this.ɵfac = function FetchBackend_Factory(t) {\n      return new (t || FetchBackend)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FetchBackend,\n      factory: FetchBackend.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FetchBackend, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Abstract class to provide a mocked implementation of `fetch()`\n */\nclass FetchFactory {}\nfunction noop() {}\n/**\n * Zone.js treats a rejected promise that has not yet been awaited\n * as an unhandled error. This function adds a noop `.then` to make\n * sure that Zone.js doesn't throw an error if the Promise is rejected\n * synchronously.\n */\nfunction silenceSuperfluousUnhandledPromiseRejection(promise) {\n  promise.then(noop, noop);\n}\nfunction interceptorChainEndFn(req, finalHandlerFn) {\n  return finalHandlerFn(req);\n}\n/**\n * Constructs a `ChainedInterceptorFn` which adapts a legacy `HttpInterceptor` to the\n * `ChainedInterceptorFn` interface.\n */\nfunction adaptLegacyInterceptorToChain(chainTailFn, interceptor) {\n  return (initialRequest, finalHandlerFn) => interceptor.intercept(initialRequest, {\n    handle: downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)\n  });\n}\n/**\n * Constructs a `ChainedInterceptorFn` which wraps and invokes a functional interceptor in the given\n * injector.\n */\nfunction chainedInterceptorFn(chainTailFn, interceptorFn, injector) {\n  // clang-format off\n  return (initialRequest, finalHandlerFn) => runInInjectionContext(injector, () => interceptorFn(initialRequest, downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)));\n  // clang-format on\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTORS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s.\n */\nconst HTTP_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTOR_FNS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s that are only set in root.\n */\nconst HTTP_ROOT_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_ROOT_INTERCEPTOR_FNS' : '');\n/**\n * A provider to set a global primary http backend. If set, it will override the default one\n */\nconst PRIMARY_HTTP_BACKEND = new InjectionToken(ngDevMode ? 'PRIMARY_HTTP_BACKEND' : '');\n/**\n * Creates an `HttpInterceptorFn` which lazily initializes an interceptor chain from the legacy\n * class-based interceptors and runs the request through it.\n */\nfunction legacyInterceptorFnFactory() {\n  let chain = null;\n  return (req, handler) => {\n    if (chain === null) {\n      const interceptors = inject(HTTP_INTERCEPTORS, {\n        optional: true\n      }) ?? [];\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `interceptors` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      chain = interceptors.reduceRight(adaptLegacyInterceptorToChain, interceptorChainEndFn);\n    }\n    const pendingTasks = inject(ɵPendingTasks);\n    const taskId = pendingTasks.add();\n    return chain(req, handler).pipe(finalize(() => pendingTasks.remove(taskId)));\n  };\n}\nlet fetchBackendWarningDisplayed = false;\n/** Internal function to reset the flag in tests */\nfunction resetFetchBackendWarningFlag() {\n  fetchBackendWarningDisplayed = false;\n}\nclass HttpInterceptorHandler extends HttpHandler {\n  constructor(backend, injector) {\n    super();\n    this.backend = backend;\n    this.injector = injector;\n    this.chain = null;\n    this.pendingTasks = inject(ɵPendingTasks);\n    // Check if there is a preferred HTTP backend configured and use it if that's the case.\n    // This is needed to enable `FetchBackend` globally for all HttpClient's when `withFetch`\n    // is used.\n    const primaryHttpBackend = inject(PRIMARY_HTTP_BACKEND, {\n      optional: true\n    });\n    this.backend = primaryHttpBackend ?? backend;\n    // We strongly recommend using fetch backend for HTTP calls when SSR is used\n    // for an application. The logic below checks if that's the case and produces\n    // a warning otherwise.\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !fetchBackendWarningDisplayed) {\n      const isServer = isPlatformServer(injector.get(PLATFORM_ID));\n      if (isServer && !(this.backend instanceof FetchBackend)) {\n        fetchBackendWarningDisplayed = true;\n        injector.get(ɵConsole).warn(ɵformatRuntimeError(2801 /* RuntimeErrorCode.NOT_USING_FETCH_BACKEND_IN_SSR */, 'Angular detected that `HttpClient` is not configured ' + \"to use `fetch` APIs. It's strongly recommended to \" + 'enable `fetch` for applications that use Server-Side Rendering ' + 'for better performance and compatibility. ' + 'To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` ' + 'call at the root of the application.'));\n      }\n    }\n  }\n  handle(initialRequest) {\n    if (this.chain === null) {\n      const dedupedInterceptorFns = Array.from(new Set([...this.injector.get(HTTP_INTERCEPTOR_FNS), ...this.injector.get(HTTP_ROOT_INTERCEPTOR_FNS, [])]));\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `dedupedInterceptorFns` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      this.chain = dedupedInterceptorFns.reduceRight((nextSequencedFn, interceptorFn) => chainedInterceptorFn(nextSequencedFn, interceptorFn, this.injector), interceptorChainEndFn);\n    }\n    const taskId = this.pendingTasks.add();\n    return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest)).pipe(finalize(() => this.pendingTasks.remove(taskId)));\n  }\n  static {\n    this.ɵfac = function HttpInterceptorHandler_Factory(t) {\n      return new (t || HttpInterceptorHandler)(i0.ɵɵinject(HttpBackend), i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpInterceptorHandler,\n      factory: HttpInterceptorHandler.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpInterceptorHandler, [{\n    type: Injectable\n  }], () => [{\n    type: HttpBackend\n  }, {\n    type: i0.EnvironmentInjector\n  }], null);\n})();\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n  if (typeof window === 'object') {\n    return window;\n  }\n  return {};\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see {@link HttpHandler}\n * @see {@link HttpXhrBackend}\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n  constructor(callbackMap, document) {\n    this.callbackMap = callbackMap;\n    this.document = document;\n    /**\n     * A resolved promise that can be used to schedule microtasks in the event handlers.\n     */\n    this.resolvedPromise = Promise.resolve();\n  }\n  /**\n   * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n   */\n  nextCallback() {\n    return `ng_jsonp_callback_${nextRequestId++}`;\n  }\n  /**\n   * Processes a JSONP request and returns an event stream of the results.\n   * @param req The request object.\n   * @returns An observable of the response events.\n   *\n   */\n  handle(req) {\n    // Firstly, check both the method and response type. If either doesn't match\n    // then the request was improperly routed here and cannot be handled.\n    if (req.method !== 'JSONP') {\n      throw new Error(JSONP_ERR_WRONG_METHOD);\n    } else if (req.responseType !== 'json') {\n      throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n    }\n    // Check the request headers. JSONP doesn't support headers and\n    // cannot set any that were supplied.\n    if (req.headers.keys().length > 0) {\n      throw new Error(JSONP_ERR_HEADERS_NOT_SUPPORTED);\n    }\n    // Everything else happens inside the Observable boundary.\n    return new Observable(observer => {\n      // The first step to make a request is to generate the callback name, and replace the\n      // callback placeholder in the URL with the name. Care has to be taken here to ensure\n      // a trailing &, if matched, gets inserted back into the URL in the correct place.\n      const callback = this.nextCallback();\n      const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n      // Construct the <script> tag and point it at the URL.\n      const node = this.document.createElement('script');\n      node.src = url;\n      // A JSONP request requires waiting for multiple callbacks. These variables\n      // are closed over and track state across those callbacks.\n      // The response object, if one has been received, or null otherwise.\n      let body = null;\n      // Whether the response callback has been called.\n      let finished = false;\n      // Set the response callback in this.callbackMap (which will be the window\n      // object in the browser. The script being loaded via the <script> tag will\n      // eventually call this callback.\n      this.callbackMap[callback] = data => {\n        // Data has been received from the JSONP script. Firstly, delete this callback.\n        delete this.callbackMap[callback];\n        // Set state to indicate data was received.\n        body = data;\n        finished = true;\n      };\n      // cleanup() is a utility closure that removes the <script> from the page and\n      // the response callback from the window. This logic is used in both the\n      // success, error, and cancellation paths, so it's extracted out for convenience.\n      const cleanup = () => {\n        // Remove the <script> tag if it's still on the page.\n        if (node.parentNode) {\n          node.parentNode.removeChild(node);\n        }\n        // Remove the response callback from the callbackMap (window object in the\n        // browser).\n        delete this.callbackMap[callback];\n      };\n      // onLoad() is the success callback which runs after the response callback\n      // if the JSONP script loads successfully. The event itself is unimportant.\n      // If something went wrong, onLoad() may run without the response callback\n      // having been invoked.\n      const onLoad = event => {\n        // We wrap it in an extra Promise, to ensure the microtask\n        // is scheduled after the loaded endpoint has executed any potential microtask itself,\n        // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n        this.resolvedPromise.then(() => {\n          // Cleanup the page.\n          cleanup();\n          // Check whether the response callback has run.\n          if (!finished) {\n            // It hasn't, something went wrong with the request. Return an error via\n            // the Observable error path. All JSONP errors have status 0.\n            observer.error(new HttpErrorResponse({\n              url,\n              status: 0,\n              statusText: 'JSONP Error',\n              error: new Error(JSONP_ERR_NO_CALLBACK)\n            }));\n            return;\n          }\n          // Success. body either contains the response body or null if none was\n          // returned.\n          observer.next(new HttpResponse({\n            body,\n            status: HttpStatusCode.Ok,\n            statusText: 'OK',\n            url\n          }));\n          // Complete the stream, the response is over.\n          observer.complete();\n        });\n      };\n      // onError() is the error callback, which runs if the script returned generates\n      // a Javascript error. It emits the error via the Observable error channel as\n      // a HttpErrorResponse.\n      const onError = error => {\n        cleanup();\n        // Wrap the error in a HttpErrorResponse.\n        observer.error(new HttpErrorResponse({\n          error,\n          status: 0,\n          statusText: 'JSONP Error',\n          url\n        }));\n      };\n      // Subscribe to both the success (load) and error events on the <script> tag,\n      // and add it to the page.\n      node.addEventListener('load', onLoad);\n      node.addEventListener('error', onError);\n      this.document.body.appendChild(node);\n      // The request has now been successfully sent.\n      observer.next({\n        type: HttpEventType.Sent\n      });\n      // Cancellation handler.\n      return () => {\n        if (!finished) {\n          this.removeListeners(node);\n        }\n        // And finally, clean up the page.\n        cleanup();\n      };\n    });\n  }\n  removeListeners(script) {\n    // Issue #34818\n    // Changing <script>'s ownerDocument will prevent it from execution.\n    // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n    foreignDocument ??= this.document.implementation.createHTMLDocument();\n    foreignDocument.adoptNode(script);\n  }\n  static {\n    this.ɵfac = function JsonpClientBackend_Factory(t) {\n      return new (t || JsonpClientBackend)(i0.ɵɵinject(JsonpCallbackContext), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: JsonpClientBackend,\n      factory: JsonpClientBackend.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonpClientBackend, [{\n    type: Injectable\n  }], () => [{\n    type: JsonpCallbackContext\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Identifies requests with the method JSONP and shifts them to the `JsonpClientBackend`.\n */\nfunction jsonpInterceptorFn(req, next) {\n  if (req.method === 'JSONP') {\n    return inject(JsonpClientBackend).handle(req);\n  }\n  // Fall through for normal HTTP requests.\n  return next(req);\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see {@link HttpInterceptor}\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n  constructor(injector) {\n    this.injector = injector;\n  }\n  /**\n   * Identifies and handles a given JSONP request.\n   * @param initialRequest The outgoing request object to handle.\n   * @param next The next interceptor in the chain, or the backend\n   * if no interceptors remain in the chain.\n   * @returns An observable of the event stream.\n   */\n  intercept(initialRequest, next) {\n    return runInInjectionContext(this.injector, () => jsonpInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n  }\n  static {\n    this.ɵfac = function JsonpInterceptor_Factory(t) {\n      return new (t || JsonpInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: JsonpInterceptor,\n      factory: JsonpInterceptor.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonpInterceptor, [{\n    type: Injectable\n  }], () => [{\n    type: i0.EnvironmentInjector\n  }], null);\n})();\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n  if ('responseURL' in xhr && xhr.responseURL) {\n    return xhr.responseURL;\n  }\n  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader('X-Request-URL');\n  }\n  return null;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see {@link HttpHandler}\n * @see {@link JsonpClientBackend}\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n  constructor(xhrFactory) {\n    this.xhrFactory = xhrFactory;\n  }\n  /**\n   * Processes a request and returns a stream of response events.\n   * @param req The request object.\n   * @returns An observable of the response events.\n   */\n  handle(req) {\n    // Quick check to give a better error message when a user attempts to use\n    // HttpClient.jsonp() without installing the HttpClientJsonpModule\n    if (req.method === 'JSONP') {\n      throw new ɵRuntimeError(-2800 /* RuntimeErrorCode.MISSING_JSONP_MODULE */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`);\n    }\n    // Check whether this factory has a special function to load an XHR implementation\n    // for various non-browser environments. We currently limit it to only `ServerXhr`\n    // class, which needs to load an XHR implementation.\n    const xhrFactory = this.xhrFactory;\n    const source = xhrFactory.ɵloadImpl ? from(xhrFactory.ɵloadImpl()) : of(null);\n    return source.pipe(switchMap(() => {\n      // Everything happens on Observable subscription.\n      return new Observable(observer => {\n        // Start by setting up the XHR object with request method, URL, and withCredentials\n        // flag.\n        const xhr = xhrFactory.build();\n        xhr.open(req.method, req.urlWithParams);\n        if (req.withCredentials) {\n          xhr.withCredentials = true;\n        }\n        // Add all the requested headers.\n        req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n        // Add an Accept header if one isn't present already.\n        if (!req.headers.has('Accept')) {\n          xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n        }\n        // Auto-detect the Content-Type header if one isn't present already.\n        if (!req.headers.has('Content-Type')) {\n          const detectedType = req.detectContentTypeHeader();\n          // Sometimes Content-Type detection fails.\n          if (detectedType !== null) {\n            xhr.setRequestHeader('Content-Type', detectedType);\n          }\n        }\n        // Set the responseType if one was requested.\n        if (req.responseType) {\n          const responseType = req.responseType.toLowerCase();\n          // JSON responses need to be processed as text. This is because if the server\n          // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n          // xhr.response will be null, and xhr.responseText cannot be accessed to\n          // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n          // is parsed by first requesting text and then applying JSON.parse.\n          xhr.responseType = responseType !== 'json' ? responseType : 'text';\n        }\n        // Serialize the request body if one is present. If not, this will be set to null.\n        const reqBody = req.serializeBody();\n        // If progress events are enabled, response headers will be delivered\n        // in two events - the HttpHeaderResponse event and the full HttpResponse\n        // event. However, since response headers don't change in between these\n        // two events, it doesn't make sense to parse them twice. So headerResponse\n        // caches the data extracted from the response whenever it's first parsed,\n        // to ensure parsing isn't duplicated.\n        let headerResponse = null;\n        // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n        // state, and memoizes it into headerResponse.\n        const partialFromXhr = () => {\n          if (headerResponse !== null) {\n            return headerResponse;\n          }\n          const statusText = xhr.statusText || 'OK';\n          // Parse headers from XMLHttpRequest - this step is lazy.\n          const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n          // Read the response URL from the XMLHttpResponse instance and fall back on the\n          // request URL.\n          const url = getResponseUrl(xhr) || req.url;\n          // Construct the HttpHeaderResponse and memoize it.\n          headerResponse = new HttpHeaderResponse({\n            headers,\n            status: xhr.status,\n            statusText,\n            url\n          });\n          return headerResponse;\n        };\n        // Next, a few closures are defined for the various events which XMLHttpRequest can\n        // emit. This allows them to be unregistered as event listeners later.\n        // First up is the load event, which represents a response being fully available.\n        const onLoad = () => {\n          // Read response state from the memoized partial data.\n          let {\n            headers,\n            status,\n            statusText,\n            url\n          } = partialFromXhr();\n          // The body will be read out if present.\n          let body = null;\n          if (status !== HttpStatusCode.NoContent) {\n            // Use XMLHttpRequest.response if set, responseText otherwise.\n            body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n          }\n          // Normalize another potential bug (this one comes from CORS).\n          if (status === 0) {\n            status = !!body ? HttpStatusCode.Ok : 0;\n          }\n          // ok determines whether the response will be transmitted on the event or\n          // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n          // but a successful status code can still result in an error if the user\n          // asked for JSON data and the body cannot be parsed as such.\n          let ok = status >= 200 && status < 300;\n          // Check whether the body needs to be parsed as JSON (in many cases the browser\n          // will have done that already).\n          if (req.responseType === 'json' && typeof body === 'string') {\n            // Save the original body, before attempting XSSI prefix stripping.\n            const originalBody = body;\n            body = body.replace(XSSI_PREFIX, '');\n            try {\n              // Attempt the parse. If it fails, a parse error should be delivered to the\n              // user.\n              body = body !== '' ? JSON.parse(body) : null;\n            } catch (error) {\n              // Since the JSON.parse failed, it's reasonable to assume this might not have\n              // been a JSON response. Restore the original body (including any XSSI prefix)\n              // to deliver a better error response.\n              body = originalBody;\n              // If this was an error request to begin with, leave it as a string, it\n              // probably just isn't JSON. Otherwise, deliver the parsing error to the user.\n              if (ok) {\n                // Even though the response status was 2xx, this is still an error.\n                ok = false;\n                // The parse error contains the text of the body that failed to parse.\n                body = {\n                  error,\n                  text: body\n                };\n              }\n            }\n          }\n          if (ok) {\n            // A successful response is delivered on the event stream.\n            observer.next(new HttpResponse({\n              body,\n              headers,\n              status,\n              statusText,\n              url: url || undefined\n            }));\n            // The full body has been received and delivered, no further events\n            // are possible. This request is complete.\n            observer.complete();\n          } else {\n            // An unsuccessful request is delivered on the error channel.\n            observer.error(new HttpErrorResponse({\n              // The error in this case is the response body (error from the server).\n              error: body,\n              headers,\n              status,\n              statusText,\n              url: url || undefined\n            }));\n          }\n        };\n        // The onError callback is called when something goes wrong at the network level.\n        // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n        // transmitted on the error channel.\n        const onError = error => {\n          const {\n            url\n          } = partialFromXhr();\n          const res = new HttpErrorResponse({\n            error,\n            status: xhr.status || 0,\n            statusText: xhr.statusText || 'Unknown Error',\n            url: url || undefined\n          });\n          observer.error(res);\n        };\n        // The sentHeaders flag tracks whether the HttpResponseHeaders event\n        // has been sent on the stream. This is necessary to track if progress\n        // is enabled since the event will be sent on only the first download\n        // progress event.\n        let sentHeaders = false;\n        // The download progress event handler, which is only registered if\n        // progress events are enabled.\n        const onDownProgress = event => {\n          // Send the HttpResponseHeaders event if it hasn't been sent already.\n          if (!sentHeaders) {\n            observer.next(partialFromXhr());\n            sentHeaders = true;\n          }\n          // Start building the download progress event to deliver on the response\n          // event stream.\n          let progressEvent = {\n            type: HttpEventType.DownloadProgress,\n            loaded: event.loaded\n          };\n          // Set the total number of bytes in the event if it's available.\n          if (event.lengthComputable) {\n            progressEvent.total = event.total;\n          }\n          // If the request was for text content and a partial response is\n          // available on XMLHttpRequest, include it in the progress event\n          // to allow for streaming reads.\n          if (req.responseType === 'text' && !!xhr.responseText) {\n            progressEvent.partialText = xhr.responseText;\n          }\n          // Finally, fire the event.\n          observer.next(progressEvent);\n        };\n        // The upload progress event handler, which is only registered if\n        // progress events are enabled.\n        const onUpProgress = event => {\n          // Upload progress events are simpler. Begin building the progress\n          // event.\n          let progress = {\n            type: HttpEventType.UploadProgress,\n            loaded: event.loaded\n          };\n          // If the total number of bytes being uploaded is available, include\n          // it.\n          if (event.lengthComputable) {\n            progress.total = event.total;\n          }\n          // Send the event.\n          observer.next(progress);\n        };\n        // By default, register for load and error events.\n        xhr.addEventListener('load', onLoad);\n        xhr.addEventListener('error', onError);\n        xhr.addEventListener('timeout', onError);\n        xhr.addEventListener('abort', onError);\n        // Progress events are only enabled if requested.\n        if (req.reportProgress) {\n          // Download progress is always enabled if requested.\n          xhr.addEventListener('progress', onDownProgress);\n          // Upload progress depends on whether there is a body to upload.\n          if (reqBody !== null && xhr.upload) {\n            xhr.upload.addEventListener('progress', onUpProgress);\n          }\n        }\n        // Fire the request, and notify the event stream that it was fired.\n        xhr.send(reqBody);\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        // This is the return from the Observable function, which is the\n        // request cancellation handler.\n        return () => {\n          // On a cancellation, remove all registered event listeners.\n          xhr.removeEventListener('error', onError);\n          xhr.removeEventListener('abort', onError);\n          xhr.removeEventListener('load', onLoad);\n          xhr.removeEventListener('timeout', onError);\n          if (req.reportProgress) {\n            xhr.removeEventListener('progress', onDownProgress);\n            if (reqBody !== null && xhr.upload) {\n              xhr.upload.removeEventListener('progress', onUpProgress);\n            }\n          }\n          // Finally, abort the in-flight request.\n          if (xhr.readyState !== xhr.DONE) {\n            xhr.abort();\n          }\n        };\n      });\n    }));\n  }\n  static {\n    this.ɵfac = function HttpXhrBackend_Factory(t) {\n      return new (t || HttpXhrBackend)(i0.ɵɵinject(i1.XhrFactory));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXhrBackend,\n      factory: HttpXhrBackend.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXhrBackend, [{\n    type: Injectable\n  }], () => [{\n    type: i1.XhrFactory\n  }], null);\n})();\nconst XSRF_ENABLED = new InjectionToken(ngDevMode ? 'XSRF_ENABLED' : '');\nconst XSRF_DEFAULT_COOKIE_NAME = 'XSRF-TOKEN';\nconst XSRF_COOKIE_NAME = new InjectionToken(ngDevMode ? 'XSRF_COOKIE_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_COOKIE_NAME\n});\nconst XSRF_DEFAULT_HEADER_NAME = 'X-XSRF-TOKEN';\nconst XSRF_HEADER_NAME = new InjectionToken(ngDevMode ? 'XSRF_HEADER_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_HEADER_NAME\n});\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n  constructor(doc, platform, cookieName) {\n    this.doc = doc;\n    this.platform = platform;\n    this.cookieName = cookieName;\n    this.lastCookieString = '';\n    this.lastToken = null;\n    /**\n     * @internal for testing\n     */\n    this.parseCount = 0;\n  }\n  getToken() {\n    if (this.platform === 'server') {\n      return null;\n    }\n    const cookieString = this.doc.cookie || '';\n    if (cookieString !== this.lastCookieString) {\n      this.parseCount++;\n      this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n      this.lastCookieString = cookieString;\n    }\n    return this.lastToken;\n  }\n  static {\n    this.ɵfac = function HttpXsrfCookieExtractor_Factory(t) {\n      return new (t || HttpXsrfCookieExtractor)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(XSRF_COOKIE_NAME));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXsrfCookieExtractor,\n      factory: HttpXsrfCookieExtractor.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [XSRF_COOKIE_NAME]\n    }]\n  }], null);\n})();\nfunction xsrfInterceptorFn(req, next) {\n  const lcUrl = req.url.toLowerCase();\n  // Skip both non-mutating requests and absolute URLs.\n  // Non-mutating requests don't require a token, and absolute URLs require special handling\n  // anyway as the cookie set\n  // on our origin is not the same as the token expected by another origin.\n  if (!inject(XSRF_ENABLED) || req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') || lcUrl.startsWith('https://')) {\n    return next(req);\n  }\n  const token = inject(HttpXsrfTokenExtractor).getToken();\n  const headerName = inject(XSRF_HEADER_NAME);\n  // Be careful not to overwrite an existing header of the same name.\n  if (token != null && !req.headers.has(headerName)) {\n    req = req.clone({\n      headers: req.headers.set(headerName, token)\n    });\n  }\n  return next(req);\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n  constructor(injector) {\n    this.injector = injector;\n  }\n  intercept(initialRequest, next) {\n    return runInInjectionContext(this.injector, () => xsrfInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n  }\n  static {\n    this.ɵfac = function HttpXsrfInterceptor_Factory(t) {\n      return new (t || HttpXsrfInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXsrfInterceptor,\n      factory: HttpXsrfInterceptor.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n    type: Injectable\n  }], () => [{\n    type: i0.EnvironmentInjector\n  }], null);\n})();\n\n/**\n * Identifies a particular kind of `HttpFeature`.\n *\n * @publicApi\n */\nvar HttpFeatureKind;\n(function (HttpFeatureKind) {\n  HttpFeatureKind[HttpFeatureKind[\"Interceptors\"] = 0] = \"Interceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"LegacyInterceptors\"] = 1] = \"LegacyInterceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"CustomXsrfConfiguration\"] = 2] = \"CustomXsrfConfiguration\";\n  HttpFeatureKind[HttpFeatureKind[\"NoXsrfProtection\"] = 3] = \"NoXsrfProtection\";\n  HttpFeatureKind[HttpFeatureKind[\"JsonpSupport\"] = 4] = \"JsonpSupport\";\n  HttpFeatureKind[HttpFeatureKind[\"RequestsMadeViaParent\"] = 5] = \"RequestsMadeViaParent\";\n  HttpFeatureKind[HttpFeatureKind[\"Fetch\"] = 6] = \"Fetch\";\n})(HttpFeatureKind || (HttpFeatureKind = {}));\nfunction makeHttpFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * Configures Angular's `HttpClient` service to be available for injection.\n *\n * By default, `HttpClient` will be configured for injection with its default options for XSRF\n * protection of outgoing requests. Additional configuration options can be provided by passing\n * feature functions to `provideHttpClient`. For example, HTTP interceptors can be added using the\n * `withInterceptors(...)` feature.\n *\n * <div class=\"alert is-helpful\">\n *\n * It's strongly recommended to enable\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for applications that use\n * Server-Side Rendering for better performance and compatibility. To enable `fetch`, add\n * `withFetch()` feature to the `provideHttpClient()` call at the root of the application:\n *\n * ```\n * provideHttpClient(withFetch());\n * ```\n *\n * </div>\n *\n * @see {@link withInterceptors}\n * @see {@link withInterceptorsFromDi}\n * @see {@link withXsrfConfiguration}\n * @see {@link withNoXsrfProtection}\n * @see {@link withJsonpSupport}\n * @see {@link withRequestsMadeViaParent}\n * @see {@link withFetch}\n */\nfunction provideHttpClient(...features) {\n  if (ngDevMode) {\n    const featureKinds = new Set(features.map(f => f.ɵkind));\n    if (featureKinds.has(HttpFeatureKind.NoXsrfProtection) && featureKinds.has(HttpFeatureKind.CustomXsrfConfiguration)) {\n      throw new Error(ngDevMode ? `Configuration error: found both withXsrfConfiguration() and withNoXsrfProtection() in the same call to provideHttpClient(), which is a contradiction.` : '');\n    }\n  }\n  const providers = [HttpClient, HttpXhrBackend, HttpInterceptorHandler, {\n    provide: HttpHandler,\n    useExisting: HttpInterceptorHandler\n  }, {\n    provide: HttpBackend,\n    useExisting: HttpXhrBackend\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: xsrfInterceptorFn,\n    multi: true\n  }, {\n    provide: XSRF_ENABLED,\n    useValue: true\n  }, {\n    provide: HttpXsrfTokenExtractor,\n    useClass: HttpXsrfCookieExtractor\n  }];\n  for (const feature of features) {\n    providers.push(...feature.ɵproviders);\n  }\n  return makeEnvironmentProviders(providers);\n}\n/**\n * Adds one or more functional-style HTTP interceptors to the configuration of the `HttpClient`\n * instance.\n *\n * @see {@link HttpInterceptorFn}\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withInterceptors(interceptorFns) {\n  return makeHttpFeature(HttpFeatureKind.Interceptors, interceptorFns.map(interceptorFn => {\n    return {\n      provide: HTTP_INTERCEPTOR_FNS,\n      useValue: interceptorFn,\n      multi: true\n    };\n  }));\n}\nconst LEGACY_INTERCEPTOR_FN = new InjectionToken(ngDevMode ? 'LEGACY_INTERCEPTOR_FN' : '');\n/**\n * Includes class-based interceptors configured using a multi-provider in the current injector into\n * the configured `HttpClient` instance.\n *\n * Prefer `withInterceptors` and functional interceptors instead, as support for DI-provided\n * interceptors may be phased out in a later release.\n *\n * @see {@link HttpInterceptor}\n * @see {@link HTTP_INTERCEPTORS}\n * @see {@link provideHttpClient}\n */\nfunction withInterceptorsFromDi() {\n  // Note: the legacy interceptor function is provided here via an intermediate token\n  // (`LEGACY_INTERCEPTOR_FN`), using a pattern which guarantees that if these providers are\n  // included multiple times, all of the multi-provider entries will have the same instance of the\n  // interceptor function. That way, the `HttpINterceptorHandler` will dedup them and legacy\n  // interceptors will not run multiple times.\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [{\n    provide: LEGACY_INTERCEPTOR_FN,\n    useFactory: legacyInterceptorFnFactory\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useExisting: LEGACY_INTERCEPTOR_FN,\n    multi: true\n  }]);\n}\n/**\n * Customizes the XSRF protection for the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withNoXsrfProtection` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withXsrfConfiguration({\n  cookieName,\n  headerName\n}) {\n  const providers = [];\n  if (cookieName !== undefined) {\n    providers.push({\n      provide: XSRF_COOKIE_NAME,\n      useValue: cookieName\n    });\n  }\n  if (headerName !== undefined) {\n    providers.push({\n      provide: XSRF_HEADER_NAME,\n      useValue: headerName\n    });\n  }\n  return makeHttpFeature(HttpFeatureKind.CustomXsrfConfiguration, providers);\n}\n/**\n * Disables XSRF protection in the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withXsrfConfiguration` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withNoXsrfProtection() {\n  return makeHttpFeature(HttpFeatureKind.NoXsrfProtection, [{\n    provide: XSRF_ENABLED,\n    useValue: false\n  }]);\n}\n/**\n * Add JSONP support to the configuration of the current `HttpClient` instance.\n *\n * @see {@link provideHttpClient}\n */\nfunction withJsonpSupport() {\n  return makeHttpFeature(HttpFeatureKind.JsonpSupport, [JsonpClientBackend, {\n    provide: JsonpCallbackContext,\n    useFactory: jsonpCallbackContext\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: jsonpInterceptorFn,\n    multi: true\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests via the parent injector's\n * `HttpClient` instead of directly.\n *\n * By default, `provideHttpClient` configures `HttpClient` in its injector to be an independent\n * instance. For example, even if `HttpClient` is configured in the parent injector with\n * one or more interceptors, they will not intercept requests made via this instance.\n *\n * With this option enabled, once the request has passed through the current injector's\n * interceptors, it will be delegated to the parent injector's `HttpClient` chain instead of\n * dispatched directly, and interceptors in the parent configuration will be applied to the request.\n *\n * If there are several `HttpClient` instances in the injector hierarchy, it's possible for\n * `withRequestsMadeViaParent` to be used at multiple levels, which will cause the request to\n * \"bubble up\" until either reaching the root level or an `HttpClient` which was not configured with\n * this option.\n *\n * @see {@link provideHttpClient}\n * @developerPreview\n */\nfunction withRequestsMadeViaParent() {\n  return makeHttpFeature(HttpFeatureKind.RequestsMadeViaParent, [{\n    provide: HttpBackend,\n    useFactory: () => {\n      const handlerFromParent = inject(HttpHandler, {\n        skipSelf: true,\n        optional: true\n      });\n      if (ngDevMode && handlerFromParent === null) {\n        throw new Error('withRequestsMadeViaParent() can only be used when the parent injector also configures HttpClient');\n      }\n      return handlerFromParent;\n    }\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests using the fetch API.\n *\n * This `FetchBackend` requires the support of the Fetch API which is available on all evergreen\n * browsers and on NodeJS from v18 onward.\n *\n * Note: The Fetch API doesn't support progress report on uploads.\n *\n * @publicApi\n */\nfunction withFetch() {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && typeof fetch !== 'function') {\n    // TODO: Create a runtime error\n    // TODO: Use ENVIRONMENT_INITIALIZER to contextualize the error message (browser or server)\n    throw new Error('The `withFetch` feature of HttpClient requires the `fetch` API to be available. ' + 'If you run the code in a Node environment, make sure you use Node v18.10 or later.');\n  }\n  return makeHttpFeature(HttpFeatureKind.Fetch, [FetchBackend, {\n    provide: HttpBackend,\n    useExisting: FetchBackend\n  }, {\n    provide: PRIMARY_HTTP_BACKEND,\n    useExisting: FetchBackend\n  }]);\n}\n\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n  /**\n   * Disable the default XSRF protection.\n   */\n  static disable() {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: [withNoXsrfProtection().ɵproviders]\n    };\n  }\n  /**\n   * Configure XSRF protection.\n   * @param options An object that can specify either or both\n   * cookie name or header name.\n   * - Cookie name default is `XSRF-TOKEN`.\n   * - Header name default is `X-XSRF-TOKEN`.\n   *\n   */\n  static withOptions(options = {}) {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: withXsrfConfiguration(options).ɵproviders\n    };\n  }\n  static {\n    this.ɵfac = function HttpClientXsrfModule_Factory(t) {\n      return new (t || HttpClientXsrfModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientXsrfModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [HttpXsrfInterceptor, {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: HttpXsrfInterceptor,\n        multi: true\n      }, {\n        provide: HttpXsrfTokenExtractor,\n        useClass: HttpXsrfCookieExtractor\n      }, withXsrfConfiguration({\n        cookieName: XSRF_DEFAULT_COOKIE_NAME,\n        headerName: XSRF_DEFAULT_HEADER_NAME\n      }).ɵproviders, {\n        provide: XSRF_ENABLED,\n        useValue: true\n      }]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n    type: NgModule,\n    args: [{\n      providers: [HttpXsrfInterceptor, {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: HttpXsrfInterceptor,\n        multi: true\n      }, {\n        provide: HttpXsrfTokenExtractor,\n        useClass: HttpXsrfCookieExtractor\n      }, withXsrfConfiguration({\n        cookieName: XSRF_DEFAULT_COOKIE_NAME,\n        headerName: XSRF_DEFAULT_HEADER_NAME\n      }).ɵproviders, {\n        provide: XSRF_ENABLED,\n        useValue: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n  static {\n    this.ɵfac = function HttpClientModule_Factory(t) {\n      return new (t || HttpClientModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideHttpClient(withInterceptorsFromDi())]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientModule, [{\n    type: NgModule,\n    args: [{\n      /**\n       * Configures the [dependency injector](guide/glossary#injector) where it is imported\n       * with supporting services for HTTP communications.\n       */\n      providers: [provideHttpClient(withInterceptorsFromDi())]\n    }]\n  }], null, null);\n})();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n  static {\n    this.ɵfac = function HttpClientJsonpModule_Factory(t) {\n      return new (t || HttpClientJsonpModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientJsonpModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [withJsonpSupport().ɵproviders]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n    type: NgModule,\n    args: [{\n      providers: [withJsonpSupport().ɵproviders]\n    }]\n  }], null, null);\n})();\n\n/**\n * Keys within cached response data structure.\n */\nconst BODY = 'b';\nconst HEADERS = 'h';\nconst STATUS = 's';\nconst STATUS_TEXT = 'st';\nconst URL = 'u';\nconst RESPONSE_TYPE = 'rt';\nconst CACHE_OPTIONS = new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_STATE_CACHE_OPTIONS' : '');\n/**\n * A list of allowed HTTP methods to cache.\n */\nconst ALLOWED_METHODS = ['GET', 'HEAD'];\nfunction transferCacheInterceptorFn(req, next) {\n  const {\n    isCacheActive,\n    ...globalOptions\n  } = inject(CACHE_OPTIONS);\n  const {\n    transferCache: requestOptions,\n    method: requestMethod\n  } = req;\n  // In the following situations we do not want to cache the request\n  if (!isCacheActive ||\n  // POST requests are allowed either globally or at request level\n  requestMethod === 'POST' && !globalOptions.includePostRequests && !requestOptions || requestMethod !== 'POST' && !ALLOWED_METHODS.includes(requestMethod) || requestOptions === false ||\n  //\n  globalOptions.filter?.(req) === false) {\n    return next(req);\n  }\n  const transferState = inject(TransferState);\n  const storeKey = makeCacheKey(req);\n  const response = transferState.get(storeKey, null);\n  let headersToInclude = globalOptions.includeHeaders;\n  if (typeof requestOptions === 'object' && requestOptions.includeHeaders) {\n    // Request-specific config takes precedence over the global config.\n    headersToInclude = requestOptions.includeHeaders;\n  }\n  if (response) {\n    const {\n      [BODY]: undecodedBody,\n      [RESPONSE_TYPE]: responseType,\n      [HEADERS]: httpHeaders,\n      [STATUS]: status,\n      [STATUS_TEXT]: statusText,\n      [URL]: url\n    } = response;\n    // Request found in cache. Respond using it.\n    let body = undecodedBody;\n    switch (responseType) {\n      case 'arraybuffer':\n        body = new TextEncoder().encode(undecodedBody).buffer;\n        break;\n      case 'blob':\n        body = new Blob([undecodedBody]);\n        break;\n    }\n    // We want to warn users accessing a header provided from the cache\n    // That HttpTransferCache alters the headers\n    // The warning will be logged a single time by HttpHeaders instance\n    let headers = new HttpHeaders(httpHeaders);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Append extra logic in dev mode to produce a warning when a header\n      // that was not transferred to the client is accessed in the code via `get`\n      // and `has` calls.\n      headers = appendMissingHeadersDetection(req.url, headers, headersToInclude ?? []);\n    }\n    return of(new HttpResponse({\n      body,\n      headers,\n      status,\n      statusText,\n      url\n    }));\n  }\n  const isServer = isPlatformServer(inject(PLATFORM_ID));\n  // Request not found in cache. Make the request and cache it if on the server.\n  return next(req).pipe(tap(event => {\n    if (event instanceof HttpResponse && isServer) {\n      transferState.set(storeKey, {\n        [BODY]: event.body,\n        [HEADERS]: getFilteredHeaders(event.headers, headersToInclude),\n        [STATUS]: event.status,\n        [STATUS_TEXT]: event.statusText,\n        [URL]: event.url || '',\n        [RESPONSE_TYPE]: req.responseType\n      });\n    }\n  }));\n}\nfunction getFilteredHeaders(headers, includeHeaders) {\n  if (!includeHeaders) {\n    return {};\n  }\n  const headersMap = {};\n  for (const key of includeHeaders) {\n    const values = headers.getAll(key);\n    if (values !== null) {\n      headersMap[key] = values;\n    }\n  }\n  return headersMap;\n}\nfunction sortAndConcatParams(params) {\n  return [...params.keys()].sort().map(k => `${k}=${params.getAll(k)}`).join('&');\n}\nfunction makeCacheKey(request) {\n  // make the params encoded same as a url so it's easy to identify\n  const {\n    params,\n    method,\n    responseType,\n    url\n  } = request;\n  const encodedParams = sortAndConcatParams(params);\n  let serializedBody = request.serializeBody();\n  if (serializedBody instanceof URLSearchParams) {\n    serializedBody = sortAndConcatParams(serializedBody);\n  } else if (typeof serializedBody !== 'string') {\n    serializedBody = '';\n  }\n  const key = [method, responseType, url, serializedBody, encodedParams].join('|');\n  const hash = generateHash(key);\n  return makeStateKey(hash);\n}\n/**\n * A method that returns a hash representation of a string using a variant of DJB2 hash\n * algorithm.\n *\n * This is the same hashing logic that is used to generate component ids.\n */\nfunction generateHash(value) {\n  let hash = 0;\n  for (const char of value) {\n    hash = Math.imul(31, hash) + char.charCodeAt(0) << 0;\n  }\n  // Force positive number hash.\n  // 2147483647 = equivalent of Integer.MAX_VALUE.\n  hash += 2147483647 + 1;\n  return hash.toString();\n}\n/**\n * Returns the DI providers needed to enable HTTP transfer cache.\n *\n * By default, when using server rendering, requests are performed twice: once on the server and\n * other one on the browser.\n *\n * When these providers are added, requests performed on the server are cached and reused during the\n * bootstrapping of the application in the browser thus avoiding duplicate requests and reducing\n * load time.\n *\n */\nfunction withHttpTransferCache(cacheOptions) {\n  return [{\n    provide: CACHE_OPTIONS,\n    useFactory: () => {\n      ɵperformanceMarkFeature('NgHttpTransferCache');\n      return {\n        isCacheActive: true,\n        ...cacheOptions\n      };\n    }\n  }, {\n    provide: HTTP_ROOT_INTERCEPTOR_FNS,\n    useValue: transferCacheInterceptorFn,\n    multi: true,\n    deps: [TransferState, CACHE_OPTIONS]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: () => {\n      const appRef = inject(ApplicationRef);\n      const cacheState = inject(CACHE_OPTIONS);\n      return () => {\n        ɵwhenStable(appRef).then(() => {\n          cacheState.isCacheActive = false;\n        });\n      };\n    }\n  }];\n}\n/**\n * This function will add a proxy to an HttpHeader to intercept calls to get/has\n * and log a warning if the header entry requested has been removed\n */\nfunction appendMissingHeadersDetection(url, headers, headersToInclude) {\n  const warningProduced = new Set();\n  return new Proxy(headers, {\n    get(target, prop) {\n      const value = Reflect.get(target, prop);\n      const methods = new Set(['get', 'has', 'getAll']);\n      if (typeof value !== 'function' || !methods.has(prop)) {\n        return value;\n      }\n      return headerName => {\n        // We log when the key has been removed and a warning hasn't been produced for the header\n        const key = (prop + ':' + headerName).toLowerCase(); // e.g. `get:cache-control`\n        if (!headersToInclude.includes(headerName) && !warningProduced.has(key)) {\n          warningProduced.add(key);\n          const truncatedUrl = ɵtruncateMiddle(url);\n          // TODO: create Error guide for this warning\n          console.warn(ɵformatRuntimeError(2802 /* RuntimeErrorCode.HEADERS_ALTERED_BY_TRANSFER_CACHE */, `Angular detected that the \\`${headerName}\\` header is accessed, but the value of the header ` + `was not transferred from the server to the client by the HttpTransferCache. ` + `To include the value of the \\`${headerName}\\` header for the \\`${truncatedUrl}\\` request, ` + `use the \\`includeHeaders\\` list. The \\`includeHeaders\\` can be defined either ` + `on a request level by adding the \\`transferCache\\` parameter, or on an application ` + `level by adding the \\`httpCacheTransfer.includeHeaders\\` argument to the ` + `\\`provideClientHydration()\\` call. `));\n        }\n        // invoking the original method\n        return value.apply(target, [headerName]);\n      };\n    }\n  });\n}\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FetchBackend, HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration, HTTP_ROOT_INTERCEPTOR_FNS as ɵHTTP_ROOT_INTERCEPTOR_FNS, HttpInterceptorHandler as ɵHttpInterceptingHandler, HttpInterceptorHandler as ɵHttpInterceptorHandler, PRIMARY_HTTP_BACKEND as ɵPRIMARY_HTTP_BACKEND, withHttpTransferCache as ɵwithHttpTransferCache };\n","/**\n * @license Angular v17.3.10\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = callback => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      const decrement = function () {\n        count--;\n        if (count == 0) {\n          callback();\n        }\n      };\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n  static {\n    this.ɵfac = function BrowserXhr_Factory(t) {\n      return new (t || BrowserXhr)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserXhr,\n      factory: BrowserXhr.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(plugin => {\n      plugin.manager = this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone() {\n    return this._zone;\n  }\n  /** @internal */\n  _findPluginFor(eventName) {\n    let plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n    const plugins = this._plugins;\n    plugin = plugins.find(plugin => plugin.supports(eventName));\n    if (!plugin) {\n      throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n    }\n    this._eventNameToPlugin.set(eventName, plugin);\n    return plugin;\n  }\n  static {\n    this.ɵfac = function EventManager_Factory(t) {\n      return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: EventManager,\n      factory: EventManager.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [EVENT_MANAGER_PLUGINS]\n    }]\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n  // TODO: remove (has some usage in G3)\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n  constructor(doc, appId, nonce, platformId = {}) {\n    this.doc = doc;\n    this.appId = appId;\n    this.nonce = nonce;\n    this.platformId = platformId;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    this.styleRef = new Map();\n    this.hostNodes = new Set();\n    this.styleNodesInDOM = this.collectServerRenderedStyles();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.resetHostNodes();\n  }\n  addStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, 1);\n      if (usageCount === 1) {\n        this.onStyleAdded(style);\n      }\n    }\n  }\n  removeStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, -1);\n      if (usageCount <= 0) {\n        this.onStyleRemoved(style);\n      }\n    }\n  }\n  ngOnDestroy() {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    if (styleNodesInDOM) {\n      styleNodesInDOM.forEach(node => node.remove());\n      styleNodesInDOM.clear();\n    }\n    for (const style of this.getAllStyles()) {\n      this.onStyleRemoved(style);\n    }\n    this.resetHostNodes();\n  }\n  addHost(hostNode) {\n    this.hostNodes.add(hostNode);\n    for (const style of this.getAllStyles()) {\n      this.addStyleToHost(hostNode, style);\n    }\n  }\n  removeHost(hostNode) {\n    this.hostNodes.delete(hostNode);\n  }\n  getAllStyles() {\n    return this.styleRef.keys();\n  }\n  onStyleAdded(style) {\n    for (const host of this.hostNodes) {\n      this.addStyleToHost(host, style);\n    }\n  }\n  onStyleRemoved(style) {\n    const styleRef = this.styleRef;\n    styleRef.get(style)?.elements?.forEach(node => node.remove());\n    styleRef.delete(style);\n  }\n  collectServerRenderedStyles() {\n    const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n    if (styles?.length) {\n      const styleMap = new Map();\n      styles.forEach(style => {\n        if (style.textContent != null) {\n          styleMap.set(style.textContent, style);\n        }\n      });\n      return styleMap;\n    }\n    return null;\n  }\n  changeUsageCount(style, delta) {\n    const map = this.styleRef;\n    if (map.has(style)) {\n      const styleRefValue = map.get(style);\n      styleRefValue.usage += delta;\n      return styleRefValue.usage;\n    }\n    map.set(style, {\n      usage: delta,\n      elements: []\n    });\n    return delta;\n  }\n  getStyleElement(host, style) {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    const styleEl = styleNodesInDOM?.get(style);\n    if (styleEl?.parentNode === host) {\n      // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n      styleNodesInDOM.delete(style);\n      styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This attribute is solely used for debugging purposes.\n        styleEl.setAttribute('ng-style-reused', '');\n      }\n      return styleEl;\n    } else {\n      const styleEl = this.doc.createElement('style');\n      if (this.nonce) {\n        styleEl.setAttribute('nonce', this.nonce);\n      }\n      styleEl.textContent = style;\n      if (this.platformIsServer) {\n        styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n      host.appendChild(styleEl);\n      return styleEl;\n    }\n  }\n  addStyleToHost(host, style) {\n    const styleEl = this.getStyleElement(host, style);\n    const styleRef = this.styleRef;\n    const styleElRef = styleRef.get(style)?.elements;\n    if (styleElRef) {\n      styleElRef.push(styleEl);\n    } else {\n      styleRef.set(style, {\n        elements: [styleEl],\n        usage: 1\n      });\n    }\n  }\n  resetHostNodes() {\n    const hostNodes = this.hostNodes;\n    hostNodes.clear();\n    // Re-add the head element back since this is the default host.\n    hostNodes.add(this.doc.head);\n  }\n  static {\n    this.ɵfac = function SharedStylesHost_Factory(t) {\n      return new (t || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedStylesHost,\n      factory: SharedStylesHost.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CSP_NONCE]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.doc = doc;\n    this.platformId = platformId;\n    this.ngZone = ngZone;\n    this.nonce = nonce;\n    this.rendererByCompId = new Map();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n  }\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n      // Domino does not support shadow DOM.\n      type = {\n        ...type,\n        encapsulation: ViewEncapsulation.Emulated\n      };\n    }\n    const renderer = this.getOrCreateRenderer(element, type);\n    // Renderers have different logic due to different encapsulation behaviours.\n    // Ex: for emulated, an attribute is added to the element.\n    if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n      renderer.applyToHost(element);\n    } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n      renderer.applyStyles();\n    }\n    return renderer;\n  }\n  getOrCreateRenderer(element, type) {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n      const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n      const platformIsServer = this.platformIsServer;\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n        default:\n          renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n      }\n      rendererByCompId.set(type.id, renderer);\n    }\n    return renderer;\n  }\n  ngOnDestroy() {\n    this.rendererByCompId.clear();\n  }\n  static {\n    this.ɵfac = function DomRendererFactory2_Factory(t) {\n      return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomRendererFactory2,\n      factory: DomRendererFactory2.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], () => [{\n    type: EventManager\n  }, {\n    type: SharedStylesHost\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n    }]\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CSP_NONCE]\n    }]\n  }], null);\n})();\nclass DefaultDomRenderer2 {\n  constructor(eventManager, doc, ngZone, platformIsServer) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.data = Object.create(null);\n    /**\n     * By default this renderer throws when encountering synthetic properties\n     * This can be disabled for example by the AsyncAnimationRendererFactory\n     */\n    this.throwOnSyntheticProps = true;\n    this.destroyNode = null;\n  }\n  destroy() {}\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    if (el == null) {\n      return;\n    }\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n  }\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  }\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName) {\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n  static {\n    this.ɵfac = function DomEventsPlugin_Factory(t) {\n      return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomEventsPlugin,\n      factory: DomEventsPlugin.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n  static matchEventFullKeyCode(event, fullKeyCode) {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    }\n    // the keycode could be unidentified so we have to check here\n    if (keycode == null || !keycode) return false;\n    keycode = keycode.toLowerCase();\n    if (keycode === ' ') {\n      keycode = 'space'; // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot'; // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey, handler, zone) {\n    return event => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n  /** @internal */\n  static _normalizeKey(keyName) {\n    return keyName === 'esc' ? 'escape' : keyName;\n  }\n  static {\n    this.ɵfac = function KeyEventsPlugin_Factory(t) {\n      return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: KeyEventsPlugin,\n      factory: KeyEventsPlugin.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  // Also provide as `Testability` for backwards-compatibility.\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n  constructor(providersAlreadyPresent) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n      throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @deprecated Use {@link APP_ID} instead to set the application ID.\n   */\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function BrowserModule_Factory(t) {\n      return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrowserModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      imports: [CommonModule, ApplicationModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [BROWSER_MODULE_PROVIDERS_MARKER]\n    }]\n  }], null);\n})();\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n    const element = this._dom.createElement('meta');\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n  static {\n    this.ɵfac = function Meta_Factory(t) {\n      return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Meta,\n      factory: Meta.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n  static {\n    this.ɵfac = function Title_Factory(t) {\n      return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Title,\n      factory: Title.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n    const start = performance.now();\n    let numTicks = 0;\n    while (numTicks < 5 || performance.now() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performance.now();\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n    return mc;\n  }\n  static {\n    this.ɵfac = function HammerGestureConfig_Factory(t) {\n      return new (t || HammerGestureConfig)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGestureConfig,\n      factory: HammerGestureConfig.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n      zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n          }\n          deregister = () => {};\n          return;\n        }\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to\n          // removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n        }\n        deregister = () => {};\n      }));\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n  static {\n    this.ɵfac = function HammerGesturesPlugin_Factory(t) {\n      return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGesturesPlugin,\n      factory: HammerGesturesPlugin.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: HammerGestureConfig,\n    decorators: [{\n      type: Inject,\n      args: [HAMMER_GESTURE_CONFIG]\n    }]\n  }, {\n    type: i0.ɵConsole\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }], null);\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nclass HammerModule {\n  static {\n    this.ɵfac = function HammerModule_Factory(t) {\n      return new (t || HammerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HammerModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n  static {\n    this.ɵfac = function DomSanitizer_Factory(t) {\n      return new (t || DomSanitizer)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizer,\n      factory: function DomSanitizer_Factory(t) {\n        let r = null;\n        if (t) {\n          r = new (t || DomSanitizer)();\n        } else {\n          r = i0.ɵɵinject(DomSanitizerImpl);\n        }\n        return r;\n      },\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n  sanitize(ctx, value) {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return value;\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n      default:\n        throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n    }\n  }\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n  static {\n    this.ɵfac = function DomSanitizerImpl_Factory(t) {\n      return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizerImpl,\n      factory: DomSanitizerImpl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n  HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n  HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n  return {\n    ɵkind,\n    ɵproviders\n  };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.');\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  if (typeof ngDevMode !== 'undefined' && ngDevMode && featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], ɵwithDomHydration(), featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions ? [] : ɵwithHttpTransferCache({}), providers]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.10');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withHttpTransferCacheOptions, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n","/**\n * @license Angular v17.3.10\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵisPromise, ɵRuntimeError, Injectable, EventEmitter, inject, ViewContainerRef, ChangeDetectorRef, EnvironmentInjector, Directive, Input, Output, InjectionToken, reflectComponentType, Component, createEnvironmentInjector, ɵisNgModule, isStandalone, ɵisInjectable, runInInjectionContext, Compiler, NgModuleFactory, NgZone, afterNextRender, ɵConsole, ɵPendingTasks, ɵɵsanitizeUrlOrResourceUrl, booleanAttribute, Attribute, HostBinding, HostListener, Optional, ContentChildren, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, ENVIRONMENT_INITIALIZER, Injector, ApplicationRef, InjectFlags, APP_INITIALIZER, SkipSelf, NgModule, Inject, Version } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Subscription } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, Location, ViewportScroller, LOCATION_INITIALIZED, LocationStrategy, HashLocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, mapTo, finalize, refCount, takeUntil, mergeAll } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */Symbol('RouteTitle');\nclass ParamsAsMap {\n  constructor(params) {\n    this.params = params || {};\n  }\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.params, name);\n  }\n  get(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n    return null;\n  }\n  getAll(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n    return [];\n  }\n  get keys() {\n    return Object.keys(this.params);\n  }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  const parts = route.path.split('/');\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n  const posParams = {};\n  // Check each config part against the actual URL\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const segment = segments[index];\n    const isParameter = part.startsWith(':');\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams\n  };\n}\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\nfunction shallowEqual(a, b) {\n  // While `undefined` should never be possible, it would sometimes be the case in IE 11\n  // and pre-chromium Edge. The check below accounts for this edge case.\n  const k1 = a ? getDataKeys(a) : undefined;\n  const k2 = b ? getDataKeys(b) : undefined;\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n  let key;\n  for (let i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n  return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    const aSorted = [...a].sort();\n    const bSorted = [...b].sort();\n    return aSorted.every((val, index) => bSorted[index] === val);\n  } else {\n    return a === b;\n  }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n  if (isObservable(value)) {\n    return value;\n  }\n  if (ɵisPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n  return of(value);\n}\nconst pathCompareMap = {\n  'exact': equalSegmentGroups,\n  'subset': containsSegmentGroup\n};\nconst paramCompareMap = {\n  'exact': equalParams,\n  'subset': containsParams,\n  'ignored': () => true\n};\nfunction containsTree(container, containee, options) {\n  return pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) && paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) && !(options.fragment === 'exact' && container.fragment !== containee.fragment);\n}\nfunction equalParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams)) return false;\n  }\n  return true;\n}\nfunction containsParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n  return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    if (!matrixParamsMatch(current, containeePaths, matrixParams)) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!matrixParamsMatch(container.segments, containeePaths, matrixParams)) return false;\n    for (const c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!matrixParamsMatch(container.segments, current, matrixParams)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n  }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n  return containeePaths.every((containeeSegment, i) => {\n    return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n  });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n  constructor( /** The root segment group of the URL tree */\n  root = new UrlSegmentGroup([], {}), /** The query params of the URL */\n  queryParams = {}, /** The fragment of the URL */\n  fragment = null) {\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (root.segments.length > 0) {\n        throw new ɵRuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' + 'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n      }\n    }\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return DEFAULT_SERIALIZER.serialize(this);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n  constructor( /** The URL segments of this group. See `UrlSegment` for more information */\n  segments, /** The list of children of this group */\n  children) {\n    this.segments = segments;\n    this.children = children;\n    /** The parent node in the url tree */\n    this.parent = null;\n    Object.values(children).forEach(v => v.parent = this);\n  }\n  /** Whether the segment has child segments */\n  hasChildren() {\n    return this.numberOfChildren > 0;\n  }\n  /** Number of child segments */\n  get numberOfChildren() {\n    return Object.keys(this.children).length;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePaths(this);\n  }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n  constructor( /** The path part of a URL segment */\n  path, /** The matrix parameters associated with a segment */\n  parameters) {\n    this.path = path;\n    this.parameters = parameters;\n  }\n  get parameterMap() {\n    this._parameterMap ??= convertToParamMap(this.parameters);\n    return this._parameterMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePath(this);\n  }\n}\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n  let res = [];\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nclass UrlSerializer {\n  static {\n    this.ɵfac = function UrlSerializer_Factory(t) {\n      return new (t || UrlSerializer)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlSerializer,\n      factory: () => (() => new DefaultUrlSerializer())(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlSerializer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => new DefaultUrlSerializer()\n    }]\n  }], null, null);\n})();\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n  /** Parses a url into a `UrlTree` */\n  parse(url) {\n    const p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n  /** Converts a `UrlTree` into a url */\n  serialize(tree) {\n    const segment = `/${serializeSegment(tree.root, true)}`;\n    const query = serializeQueryParams(tree.queryParams);\n    const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n    return `${segment}${query}${fragment}`;\n  }\n}\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n  if (root) {\n    const primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    const children = [];\n    Object.entries(segment.children).forEach(([k, v]) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n  } else {\n    const children = mapChildrenIntoArray(segment, (v, k) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n      return [`${k}:${serializeSegment(v, false)}`];\n    });\n    // use no parenthesis if the only child is a primary outlet route\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return `${serializePaths(segment)}/${children[0]}`;\n    }\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n  return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n  return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n  return Object.entries(params).map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`).join('');\n}\nfunction serializeQueryParams(params) {\n  const strParams = Object.entries(params).map(([name, value]) => {\n    return Array.isArray(value) ? value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n  }).filter(s => s);\n  return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n  const match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n  const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n  const match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n  const match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\n  constructor(url) {\n    this.url = url;\n    this.remaining = url;\n  }\n  parseRootSegment() {\n    this.consumeOptional('/');\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n  parseQueryParams() {\n    const params = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n  parseFragment() {\n    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n  }\n  parseChildren() {\n    if (this.remaining === '') {\n      return {};\n    }\n    this.consumeOptional('/');\n    const segments = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n    let children = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n    let res = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n    return res;\n  }\n  // parse a segment with its matrix parameters\n  // ie `name;k1=v1;k2`\n  parseSegment() {\n    const path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new ɵRuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n  parseMatrixParams() {\n    const params = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n  parseParam(params) {\n    const key = matchMatrixKeySegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    params[decode(key)] = decode(value);\n  }\n  // Parse a single query parameter `name[=value]`\n  parseQueryParam(params) {\n    const key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    const decodedKey = decodeQuery(key);\n    const decodedVal = decodeQuery(value);\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n  // parse `(a/b//outlet_name:c/d)`\n  parseParens(allowPrimary) {\n    const segments = {};\n    this.capture('(');\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const path = matchSegments(this.remaining);\n      const next = this.remaining[path.length];\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new ɵRuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n      }\n      let outletName = undefined;\n      if (path.indexOf(':') > -1) {\n        outletName = path.slice(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n      const children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n    return segments;\n  }\n  peekStartsWith(str) {\n    return this.remaining.startsWith(str);\n  }\n  // Consumes the prefix when it is present and returns whether it has been consumed\n  consumeOptional(str) {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n  capture(str) {\n    if (!this.consumeOptional(str)) {\n      throw new ɵRuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n    }\n  }\n}\nfunction createRoot(rootCandidate) {\n  return rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], {\n    [PRIMARY_OUTLET]: rootCandidate\n  }) : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n  const newChildren = {};\n  for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n    const childCandidate = squashSegmentGroup(child);\n    // moves named children in an empty path primary child into this group\n    if (childOutlet === PRIMARY_OUTLET && childCandidate.segments.length === 0 && childCandidate.hasChildren()) {\n      for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n        newChildren[grandChildOutlet] = grandChild;\n      }\n    } // don't add empty children\n    else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n      newChildren[childOutlet] = childCandidate;\n    }\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n  return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n  return s;\n}\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n  const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n  return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n  let targetGroup;\n  function createSegmentGroupFromRouteRecursive(currentRoute) {\n    const childOutlets = {};\n    for (const childSnapshot of currentRoute.children) {\n      const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n      childOutlets[childSnapshot.outlet] = root;\n    }\n    const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n    if (currentRoute === route) {\n      targetGroup = segmentGroup;\n    }\n    return segmentGroup;\n  }\n  const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n  const rootSegmentGroup = createRoot(rootCandidate);\n  return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n  let root = relativeTo;\n  while (root.parent) {\n    root = root.parent;\n  }\n  // There are no commands so the `UrlTree` goes to the same path as the one created from the\n  // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n  // applying any other logic.\n  if (commands.length === 0) {\n    return tree(root, root, root, queryParams, fragment);\n  }\n  const nav = computeNavigation(commands);\n  if (nav.toRoot()) {\n    return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n  }\n  const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n  const newSegmentGroup = position.processChildren ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands) : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n  return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n  return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n  let qp = {};\n  if (queryParams) {\n    Object.entries(queryParams).forEach(([name, value]) => {\n      qp[name] = Array.isArray(value) ? value.map(v => `${v}`) : `${value}`;\n    });\n  }\n  let rootCandidate;\n  if (oldRoot === oldSegmentGroup) {\n    rootCandidate = newSegmentGroup;\n  } else {\n    rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n  }\n  const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n  return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n  const children = {};\n  Object.entries(current.children).forEach(([outletName, c]) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n  constructor(isAbsolute, numberOfDoubleDots, commands) {\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new ɵRuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Root segment cannot have matrix parameters');\n    }\n    const cmdWithOutlet = commands.find(isCommandWithOutlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new ɵRuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && '{outlets:{}} has to be the last command');\n    }\n  }\n  toRoot() {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const outlets = {};\n        Object.entries(cmd.outlets).forEach(([name, commands]) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {\n          outlets\n        }];\n      }\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') {\n          // skip './a'\n        } else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n    return [...res, cmd];\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n  constructor(segmentGroup, processChildren, index) {\n    this.segmentGroup = segmentGroup;\n    this.processChildren = processChildren;\n    this.index = index;\n  }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n  if (nav.isAbsolute) {\n    return new Position(root, true, 0);\n  }\n  if (!target) {\n    // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n    // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n    // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n    // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n    return new Position(root, false, NaN);\n  }\n  if (target.parent === null) {\n    return new Position(target, true, 0);\n  }\n  const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const index = target.segments.length - 1 + modifier;\n  return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  let g = group;\n  let ci = index;\n  let dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n    if (!g) {\n      throw new ɵRuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n  if (isCommandWithOutlets(commands[0])) {\n    return commands[0].outlets;\n  }\n  return {\n    [PRIMARY_OUTLET]: commands\n  };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  segmentGroup ??= new UrlSegmentGroup([], {});\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n  const m = prefixedWith(segmentGroup, startIndex, commands);\n  const slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const outlets = getOutlets(commands);\n    const children = {};\n    // If the set of commands applies to anything other than the primary outlet and the child\n    // segment is an empty path primary segment on its own, we want to apply the commands to the\n    // empty child path rather than here. The outcome is that the empty primary child is effectively\n    // removed from the final output UrlTree. Imagine the following config:\n    //\n    // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n    //\n    // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n    // navigation with commands\n    // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n    // root segment because that would result in\n    // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n    // the `ActivatedRoute` rather than updating the existing one.\n    //\n    // Because empty paths do not appear in the URL segments and the fact that the segments used in\n    // the output `UrlTree` are squashed to eliminate these empty paths where possible\n    // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n    // it can be hard to determine what is the right thing to do when applying commands to a\n    // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n    // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n    // the same level of the tree.\n    if (Object.keys(outlets).some(o => o !== PRIMARY_OUTLET) && segmentGroup.children[PRIMARY_OUTLET] && segmentGroup.numberOfChildren === 1 && segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n      const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n      return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n    }\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n      if (typeof commands === 'string') {\n        commands = [commands];\n      }\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  let currentCommandIndex = 0;\n  let currentPathIndex = startIndex;\n  const noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const path = segmentGroup.segments[currentPathIndex];\n    const command = commands[currentCommandIndex];\n    // Do not try to consume command as part of the prefixing if it has outlets because it can\n    // contain outlets other than the one being processed. Consuming the outlets command would\n    // result in other outlets being ignored.\n    if (isCommandWithOutlets(command)) {\n      break;\n    }\n    const curr = `${command}`;\n    const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  const paths = segmentGroup.segments.slice(0, startIndex);\n  let i = 0;\n  while (i < commands.length) {\n    const command = commands[i];\n    if (isCommandWithOutlets(command)) {\n      const children = createNewSegmentChildren(command.outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, stringify(commands[0])));\n      i++;\n      continue;\n    }\n    const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n    const next = i < commands.length - 1 ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n  const children = {};\n  Object.entries(outlets).forEach(([outlet, commands]) => {\n    if (typeof commands === 'string') {\n      commands = [commands];\n    }\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\nfunction stringify(params) {\n  const res = {};\n  Object.entries(params).forEach(([k, v]) => res[k] = `${v}`);\n  return res;\n}\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType;\n(function (EventType) {\n  EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n  EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n  EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n  EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n  EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n  EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n  EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n  EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n  EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n  EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n  EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n  EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n  EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n  EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n  EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n  EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n  EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n})(EventType || (EventType = {}));\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n  constructor( /** A unique ID that the router assigns to every router navigation. */\n  id, /** The URL that is the destination for this navigation. */\n  url) {\n    this.id = id;\n    this.url = url;\n  }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  navigationTrigger = 'imperative', /** @docsNotRequired */\n  restoredState = null) {\n    super(id, url);\n    this.type = EventType.NavigationStart;\n    this.navigationTrigger = navigationTrigger;\n    this.restoredState = restoredState;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.type = EventType.NavigationEnd;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode;\n(function (NavigationCancellationCode) {\n  /**\n   * A navigation failed because a guard returned a `UrlTree` to redirect.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n  /**\n   * A navigation failed because a more recent navigation started.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n  /**\n   * A navigation failed because one of the resolvers completed without emitting a value.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n  /**\n   * A navigation failed because a guard returned `false`.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n})(NavigationCancellationCode || (NavigationCancellationCode = {}));\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode;\n(function (NavigationSkippedCode) {\n  /**\n   * A navigation was skipped because the navigation URL was the same as the current Router URL.\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n  /**\n   * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n   * the current Router URL and the target of the navigation.\n   *\n   * @see {@link UrlHandlingStrategy}\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n})(NavigationSkippedCode || (NavigationSkippedCode = {}));\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n   * instead for a stable cancellation reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was canceled. This cancellation code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationCancel;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was skipped. For debug purposes only. Use `code`\n   * instead for a stable skipped reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was skipped. This code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationSkipped;\n  }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  error,\n  /**\n   * The target of the navigation when the error occurred.\n   *\n   * Note that this can be `undefined` because an error could have occurred before the\n   * `RouterStateSnapshot` was created for the navigation.\n   */\n  target) {\n    super(id, url);\n    this.error = error;\n    this.target = target;\n    this.type = EventType.NavigationError;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.RoutesRecognized;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.GuardsCheckStart;\n  }\n  toString() {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state, /** @docsNotRequired */\n  shouldActivate) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.shouldActivate = shouldActivate;\n    this.type = EventType.GuardsCheckEnd;\n  }\n  toString() {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveStart;\n  }\n  toString() {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveEnd;\n  }\n  toString() {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadStart;\n  }\n  toString() {\n    return `RouteConfigLoadStart(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadEnd;\n  }\n  toString() {\n    return `RouteConfigLoadEnd(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n  constructor( /** @docsNotRequired */\n  routerEvent, /** @docsNotRequired */\n  position, /** @docsNotRequired */\n  anchor) {\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n    this.type = EventType.Scroll;\n  }\n  toString() {\n    const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n    return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n  }\n}\nclass BeforeActivateRoutes {}\nclass RedirectRequest {\n  constructor(url) {\n    this.url = url;\n  }\n}\nfunction stringifyEvent(routerEvent) {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationStart:\n      return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.GuardsCheckEnd:\n      return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n    case EventType.GuardsCheckStart:\n      return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.NavigationCancel:\n      return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationSkipped:\n      return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationEnd:\n      return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n    case EventType.NavigationError:\n      return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n    case EventType.NavigationStart:\n      return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.ResolveEnd:\n      return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.ResolveStart:\n      return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.RouteConfigLoadEnd:\n      return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n    case EventType.RouteConfigLoadStart:\n      return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n    case EventType.RoutesRecognized:\n      return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.Scroll:\n      const pos = routerEvent.position ? `${routerEvent.position[0]}, ${routerEvent.position[1]}` : null;\n      return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n  }\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n  constructor() {\n    this.outlet = null;\n    this.route = null;\n    this.injector = null;\n    this.children = new ChildrenOutletContexts();\n    this.attachRef = null;\n  }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nclass ChildrenOutletContexts {\n  constructor() {\n    // contexts for child outlets, by name.\n    this.contexts = new Map();\n  }\n  /** Called when a `RouterOutlet` directive is instantiated */\n  onChildOutletCreated(childName, outlet) {\n    const context = this.getOrCreateContext(childName);\n    context.outlet = outlet;\n    this.contexts.set(childName, context);\n  }\n  /**\n   * Called when a `RouterOutlet` directive is destroyed.\n   * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n   * re-created later.\n   */\n  onChildOutletDestroyed(childName) {\n    const context = this.getContext(childName);\n    if (context) {\n      context.outlet = null;\n      context.attachRef = null;\n    }\n  }\n  /**\n   * Called when the corresponding route is deactivated during navigation.\n   * Because the component get destroyed, all children outlet are destroyed.\n   */\n  onOutletDeactivated() {\n    const contexts = this.contexts;\n    this.contexts = new Map();\n    return contexts;\n  }\n  onOutletReAttached(contexts) {\n    this.contexts = contexts;\n  }\n  getOrCreateContext(childName) {\n    let context = this.getContext(childName);\n    if (!context) {\n      context = new OutletContext();\n      this.contexts.set(childName, context);\n    }\n    return context;\n  }\n  getContext(childName) {\n    return this.contexts.get(childName) || null;\n  }\n  static {\n    this.ɵfac = function ChildrenOutletContexts_Factory(t) {\n      return new (t || ChildrenOutletContexts)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ChildrenOutletContexts,\n      factory: ChildrenOutletContexts.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChildrenOutletContexts, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass Tree {\n  constructor(root) {\n    this._root = root;\n  }\n  get root() {\n    return this._root.value;\n  }\n  /**\n   * @internal\n   */\n  parent(t) {\n    const p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n  /**\n   * @internal\n   */\n  children(t) {\n    const n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n  /**\n   * @internal\n   */\n  firstChild(t) {\n    const n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n  /**\n   * @internal\n   */\n  siblings(t) {\n    const p = findPath(t, this._root);\n    if (p.length < 2) return [];\n    const c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n  /**\n   * @internal\n   */\n  pathFromRoot(t) {\n    return findPath(t, this._root).map(s => s.value);\n  }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n  for (const child of node.children) {\n    const node = findNode(value, child);\n    if (node) return node;\n  }\n  return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n  for (const child of node.children) {\n    const path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n  return [];\n}\nclass TreeNode {\n  constructor(value, children) {\n    this.value = value;\n    this.children = children;\n  }\n  toString() {\n    return `TreeNode(${this.value})`;\n  }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n  const map = {};\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n  return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n  /** @internal */\n  constructor(root, /** The current snapshot of the router state */\n  snapshot) {\n    super(root);\n    this.snapshot = snapshot;\n    setRouterState(this, root);\n  }\n  toString() {\n    return this.snapshot.toString();\n  }\n}\nfunction createEmptyState(rootComponent) {\n  const snapshot = createEmptyStateSnapshot(rootComponent);\n  const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const emptyParams = new BehaviorSubject({});\n  const emptyData = new BehaviorSubject({});\n  const emptyQueryParams = new BehaviorSubject({});\n  const fragment = new BehaviorSubject('');\n  const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n  const emptyParams = {};\n  const emptyData = {};\n  const emptyQueryParams = {};\n  const fragment = '';\n  const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n  /** @internal */\n  constructor( /** @internal */\n  urlSubject, /** @internal */\n  paramsSubject, /** @internal */\n  queryParamsSubject, /** @internal */\n  fragmentSubject, /** @internal */\n  dataSubject, /** The outlet name of the route, a constant. */\n  outlet, /** The component of the route, a constant. */\n  component, futureSnapshot) {\n    this.urlSubject = urlSubject;\n    this.paramsSubject = paramsSubject;\n    this.queryParamsSubject = queryParamsSubject;\n    this.fragmentSubject = fragmentSubject;\n    this.dataSubject = dataSubject;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n    this.title = this.dataSubject?.pipe(map(d => d[RouteTitleKey])) ?? of(undefined);\n    // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n    this.url = urlSubject;\n    this.params = paramsSubject;\n    this.queryParams = queryParamsSubject;\n    this.fragment = fragmentSubject;\n    this.data = dataSubject;\n  }\n  /** The configuration used to match this route. */\n  get routeConfig() {\n    return this._futureSnapshot.routeConfig;\n  }\n  /** The root of the router state. */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree. */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree. */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree. */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route. */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  /**\n   * An Observable that contains a map of the required and optional parameters\n   * specific to the route.\n   * The map supports retrieving single and multiple values from the same parameter.\n   */\n  get paramMap() {\n    this._paramMap ??= this.params.pipe(map(p => convertToParamMap(p)));\n    return this._paramMap;\n  }\n  /**\n   * An Observable that contains a map of the query parameters available to all routes.\n   * The map supports retrieving single and multiple values from the query parameter.\n   */\n  get queryParamMap() {\n    this._queryParamMap ??= this.queryParams.pipe(map(p => convertToParamMap(p)));\n    return this._queryParamMap;\n  }\n  toString() {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n  let inherited;\n  const {\n    routeConfig\n  } = route;\n  if (parent !== null && (paramsInheritanceStrategy === 'always' ||\n  // inherit parent data if route is empty path\n  routeConfig?.path === '' ||\n  // inherit parent data if parent was componentless\n  !parent.component && !parent.routeConfig?.loadComponent)) {\n    inherited = {\n      params: {\n        ...parent.params,\n        ...route.params\n      },\n      data: {\n        ...parent.data,\n        ...route.data\n      },\n      resolve: {\n        // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n        // change data because it's not frozen...\n        // This first line could be deleted chose to break/disallow mutating the `data` object in\n        // guards.\n        // Note that data from parents still override this mutated data so anyone relying on this\n        // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n        ...route.data,\n        // Ensure inherited resolved data overrides inherited static data\n        ...parent.data,\n        // static data from the current route overrides any inherited data\n        ...routeConfig?.data,\n        // resolved data from current route overrides everything\n        ...route._resolvedData\n      }\n    };\n  } else {\n    inherited = {\n      params: {\n        ...route.params\n      },\n      data: {\n        ...route.data\n      },\n      resolve: {\n        ...route.data,\n        ...(route._resolvedData ?? {})\n      }\n    };\n  }\n  if (routeConfig && hasStaticTitle(routeConfig)) {\n    inherited.resolve[RouteTitleKey] = routeConfig.title;\n  }\n  return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n  /** The resolved route title */\n  get title() {\n    // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n    // available at the time of class instantiation.\n    return this.data?.[RouteTitleKey];\n  }\n  /** @internal */\n  constructor( /** The URL segments matched by this route */\n  url,\n  /**\n   *  The matrix parameters scoped to this route.\n   *\n   *  You can compute all params (or data) in the router state or to get params outside\n   *  of an activated component by traversing the `RouterState` tree as in the following\n   *  example:\n   *  ```\n   *  collectRouteParams(router: Router) {\n   *    let params = {};\n   *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n   *    while (stack.length > 0) {\n   *      const route = stack.pop()!;\n   *      params = {...params, ...route.params};\n   *      stack.push(...route.children);\n   *    }\n   *    return params;\n   *  }\n   *  ```\n   */\n  params, /** The query parameters shared by all the routes */\n  queryParams, /** The URL fragment shared by all the routes */\n  fragment, /** The static and resolved data of this route */\n  data, /** The outlet name of the route */\n  outlet, /** The component of the route */\n  component, routeConfig, resolve) {\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  get paramMap() {\n    this._paramMap ??= convertToParamMap(this.params);\n    return this._paramMap;\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  toString() {\n    const url = this.url.map(segment => segment.toString()).join('/');\n    const matched = this.routeConfig ? this.routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n  /** @internal */\n  constructor( /** The url from which this snapshot was created */\n  url, root) {\n    super(root);\n    this.url = url;\n    setRouterState(this, root);\n  }\n  toString() {\n    return serializeNode(this._root);\n  }\n}\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n  const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    const currentSnapshot = route.snapshot;\n    const nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParamsSubject.next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragmentSubject.next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.paramsSubject.next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.urlSubject.next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.dataSubject.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n    // this is for resolved data\n    route.dataSubject.next(route._futureSnapshot.data);\n  }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n  const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\nfunction hasStaticTitle(config) {\n  return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n * outlet and secondary route configuration\").\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterOutlet {\n  constructor() {\n    this.activated = null;\n    this._activatedRoute = null;\n    /**\n     * The name of the outlet\n     *\n     * @see [named outlets](guide/router-tutorial-toh#displaying-multiple-routes-in-named-outlets)\n     */\n    this.name = PRIMARY_OUTLET;\n    this.activateEvents = new EventEmitter();\n    this.deactivateEvents = new EventEmitter();\n    /**\n     * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n     * previously detached subtree.\n     **/\n    this.attachEvents = new EventEmitter();\n    /**\n     * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n     * subtree.\n     */\n    this.detachEvents = new EventEmitter();\n    this.parentContexts = inject(ChildrenOutletContexts);\n    this.location = inject(ViewContainerRef);\n    this.changeDetector = inject(ChangeDetectorRef);\n    this.environmentInjector = inject(EnvironmentInjector);\n    this.inputBinder = inject(INPUT_BINDER, {\n      optional: true\n    });\n    /** @nodoc */\n    this.supportsBindingToComponentInputs = true;\n  }\n  /** @internal */\n  get activatedComponentRef() {\n    return this.activated;\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (changes['name']) {\n      const {\n        firstChange,\n        previousValue\n      } = changes['name'];\n      if (firstChange) {\n        // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n        // input is set at all, we need to centrally handle the first change there.\n        return;\n      }\n      // unregister with the old name\n      if (this.isTrackedInParentContexts(previousValue)) {\n        this.deactivate();\n        this.parentContexts.onChildOutletDestroyed(previousValue);\n      }\n      // register the new name\n      this.initializeOutletWithName();\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    // Ensure that the registered outlet is this one before removing it on the context.\n    if (this.isTrackedInParentContexts(this.name)) {\n      this.parentContexts.onChildOutletDestroyed(this.name);\n    }\n    this.inputBinder?.unsubscribeFromRouteData(this);\n  }\n  isTrackedInParentContexts(outletName) {\n    return this.parentContexts.getContext(outletName)?.outlet === this;\n  }\n  /** @nodoc */\n  ngOnInit() {\n    this.initializeOutletWithName();\n  }\n  initializeOutletWithName() {\n    this.parentContexts.onChildOutletCreated(this.name, this);\n    if (this.activated) {\n      return;\n    }\n    // If the outlet was not instantiated at the time the route got activated we need to populate\n    // the outlet when it is initialized (ie inside a NgIf)\n    const context = this.parentContexts.getContext(this.name);\n    if (context?.route) {\n      if (context.attachRef) {\n        // `attachRef` is populated when there is an existing component to mount\n        this.attach(context.attachRef, context.route);\n      } else {\n        // otherwise the component defined in the configuration is created\n        this.activateWith(context.route, context.injector);\n      }\n    }\n  }\n  get isActivated() {\n    return !!this.activated;\n  }\n  /**\n   * @returns The currently activated component instance.\n   * @throws An error if the outlet is not activated.\n   */\n  get component() {\n    if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n    return this.activated.instance;\n  }\n  get activatedRoute() {\n    if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n    return this._activatedRoute;\n  }\n  get activatedRouteData() {\n    if (this._activatedRoute) {\n      return this._activatedRoute.snapshot.data;\n    }\n    return {};\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to detach the subtree\n   */\n  detach() {\n    if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n    this.location.detach();\n    const cmp = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    this.detachEvents.emit(cmp.instance);\n    return cmp;\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n   */\n  attach(ref, activatedRoute) {\n    this.activated = ref;\n    this._activatedRoute = activatedRoute;\n    this.location.insert(ref.hostView);\n    this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n    this.attachEvents.emit(ref.instance);\n  }\n  deactivate() {\n    if (this.activated) {\n      const c = this.component;\n      this.activated.destroy();\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n  activateWith(activatedRoute, environmentInjector) {\n    if (this.isActivated) {\n      throw new ɵRuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Cannot activate an already activated outlet');\n    }\n    this._activatedRoute = activatedRoute;\n    const location = this.location;\n    const snapshot = activatedRoute.snapshot;\n    const component = snapshot.component;\n    const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n    const injector = new OutletInjector(activatedRoute, childContexts, location.injector);\n    this.activated = location.createComponent(component, {\n      index: location.length,\n      injector,\n      environmentInjector: environmentInjector ?? this.environmentInjector\n    });\n    // Calling `markForCheck` to make sure we will run the change detection when the\n    // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n    this.changeDetector.markForCheck();\n    this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n    this.activateEvents.emit(this.activated.instance);\n  }\n  static {\n    this.ɵfac = function RouterOutlet_Factory(t) {\n      return new (t || RouterOutlet)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterOutlet,\n      selectors: [[\"router-outlet\"]],\n      inputs: {\n        name: \"name\"\n      },\n      outputs: {\n        activateEvents: \"activate\",\n        deactivateEvents: \"deactivate\",\n        attachEvents: \"attach\",\n        detachEvents: \"detach\"\n      },\n      exportAs: [\"outlet\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterOutlet, [{\n    type: Directive,\n    args: [{\n      selector: 'router-outlet',\n      exportAs: 'outlet',\n      standalone: true\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    activateEvents: [{\n      type: Output,\n      args: ['activate']\n    }],\n    deactivateEvents: [{\n      type: Output,\n      args: ['deactivate']\n    }],\n    attachEvents: [{\n      type: Output,\n      args: ['attach']\n    }],\n    detachEvents: [{\n      type: Output,\n      args: ['detach']\n    }]\n  });\n})();\nclass OutletInjector {\n  /**\n   * This injector has a special handing for the `ActivatedRoute` and\n   * `ChildrenOutletContexts` tokens: it returns corresponding values for those\n   * tokens dynamically. This behavior is different from the regular injector logic,\n   * when we initialize and store a value, which is later returned for all inject\n   * requests.\n   *\n   * In some cases (e.g. when using `@defer`), this dynamic behavior requires special\n   * handling. This function allows to identify an instance of the `OutletInjector` and\n   * create an instance of it without referring to the class itself (so this logic can\n   * be invoked from the `core` package). This helps to retain dynamic behavior for the\n   * mentioned tokens.\n   *\n   * Note: it's a temporary solution and we should explore how to support this case better.\n   */\n  __ngOutletInjector(parentInjector) {\n    return new OutletInjector(this.route, this.childContexts, parentInjector);\n  }\n  constructor(route, childContexts, parent) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\nconst INPUT_BINDER = new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nclass RoutedComponentInputBinder {\n  constructor() {\n    this.outletDataSubscriptions = new Map();\n  }\n  bindActivatedRouteToOutletComponent(outlet) {\n    this.unsubscribeFromRouteData(outlet);\n    this.subscribeToRouteData(outlet);\n  }\n  unsubscribeFromRouteData(outlet) {\n    this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n    this.outletDataSubscriptions.delete(outlet);\n  }\n  subscribeToRouteData(outlet) {\n    const {\n      activatedRoute\n    } = outlet;\n    const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n      data = {\n        ...queryParams,\n        ...params,\n        ...data\n      };\n      // Get the first result from the data subscription synchronously so it's available to\n      // the component as soon as possible (and doesn't require a second change detection).\n      if (index === 0) {\n        return of(data);\n      }\n      // Promise.resolve is used to avoid synchronously writing the wrong data when\n      // two of the Observables in the `combineLatest` stream emit one after\n      // another.\n      return Promise.resolve(data);\n    })).subscribe(data => {\n      // Outlet may have been deactivated or changed names to be associated with a different\n      // route\n      if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      const mirror = reflectComponentType(activatedRoute.component);\n      if (!mirror) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      for (const {\n        templateName\n      } of mirror.inputs) {\n        outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n      }\n    });\n    this.outletDataSubscriptions.set(outlet, dataSubscription);\n  }\n  static {\n    this.ɵfac = function RoutedComponentInputBinder_Factory(t) {\n      return new (t || RoutedComponentInputBinder)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RoutedComponentInputBinder,\n      factory: RoutedComponentInputBinder.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoutedComponentInputBinder, [{\n    type: Injectable\n  }], null, null);\n})();\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children);\n  } else {\n    if (routeReuseStrategy.shouldAttach(curr.value)) {\n      // retrieve an activated route that is used to be displayed, but is not currently displayed\n      const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n      if (detachedRouteHandle !== null) {\n        const tree = detachedRouteHandle.route;\n        tree.value._futureSnapshot = curr.value;\n        tree.children = curr.children.map(c => createNode(routeReuseStrategy, c));\n        return tree;\n      }\n    }\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode(value, children);\n  }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n  const {\n    redirectTo,\n    navigationBehaviorOptions\n  } = isUrlTree(redirect) ? {\n    redirectTo: redirect,\n    navigationBehaviorOptions: undefined\n  } : redirect;\n  const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\nfunction navigationCancelingError(message, code) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n  return isNavigationCancelingError(error) && isUrlTree(error.url);\n}\nfunction isNavigationCancelingError(error) {\n  return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass ɵEmptyOutletComponent {\n  static {\n    this.ɵfac = function ɵEmptyOutletComponent_Factory(t) {\n      return new (t || ɵEmptyOutletComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ɵEmptyOutletComponent,\n      selectors: [[\"ng-component\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      template: function _EmptyOutletComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [RouterOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵEmptyOutletComponent, [{\n    type: Component,\n    args: [{\n      template: `<router-outlet></router-outlet>`,\n      imports: [RouterOutlet],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n  if (route.providers && !route._injector) {\n    route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n  }\n  return route._injector ?? currentInjector;\n}\nfunction getLoadedRoutes(route) {\n  return route._loadedRoutes;\n}\nfunction getLoadedInjector(route) {\n  return route._loadedInjector;\n}\nfunction getLoadedComponent(route) {\n  return route._loadedComponent;\n}\nfunction getProvidersInjector(route) {\n  return route._injector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n  // forEach doesn't iterate undefined values\n  for (let i = 0; i < config.length; i++) {\n    const route = config[i];\n    const fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath, requireStandaloneComponents);\n  }\n}\nfunction assertStandalone(fullPath, component) {\n  if (component && ɵisNgModule(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` + `but it must be used with standalone components. Use 'loadChildren' instead.`);\n  } else if (component && !isStandalone(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n  }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!route) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.redirectTo && !route.component && !route.loadComponent && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && (route.component || route.loadComponent)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n    }\n    if (route.component && route.loadComponent) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n    }\n    if (route.redirectTo && route.canActivate) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation ` + `so canActivate will never be executed.`);\n    }\n    if (route.path && route.matcher) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.loadComponent && !route.children && !route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n      const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (requireStandaloneComponents) {\n      assertStandalone(fullPath, route.component);\n    }\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath, requireStandaloneComponents);\n  }\n}\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n  const children = r.children && r.children.map(standardizeConfig);\n  const c = children ? {\n    ...r,\n    children\n  } : {\n    ...r\n  };\n  if (!c.component && !c.loadComponent && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n  return c;\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n  const sortedConfig = routes.filter(r => getOutlet(r) === outletName);\n  sortedConfig.push(...routes.filter(r => getOutlet(r) !== outletName));\n  return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n  if (!snapshot) return null;\n  // If the current route has its own injector, which is created from the static providers on the\n  // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n  // include the lazy loaded injector from this route.\n  if (snapshot.routeConfig?._injector) {\n    return snapshot.routeConfig._injector;\n  }\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    // Note that the order here is important. `_loadedInjector` stored on the route with\n    // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n    // is created from the static providers on that parent route, so it applies to the children as\n    // well, but only if there is no lazy loaded NgModuleRef injector.\n    if (route?._loadedInjector) return route._loadedInjector;\n    if (route?._injector) return route._injector;\n  }\n  return null;\n}\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map(t => {\n  new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n  return t;\n});\nclass ActivateRoutes {\n  constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n    this.inputBindingEnabled = inputBindingEnabled;\n  }\n  activate(parentContexts) {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n  // De-activate the child route that are not re-used for the future state\n  deactivateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n    // De-activate the routes that will not be re-used\n    Object.values(children).forEach(v => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n  deactivateRoutes(futureNode, currNode, parentContext) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n  deactivateRouteAndItsChildren(route, parentContexts) {\n    // If there is no component, the Route is never attached to an outlet (because there is no\n    // component to attach).\n    if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n  detachAndStoreRouteSubtree(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context && context.outlet) {\n      const componentRef = context.outlet.detach();\n      const contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {\n        componentRef,\n        route,\n        contexts\n      });\n    }\n  }\n  deactivateRouteAndOutlet(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    // The context could be `null` if we are on a componentless route but there may still be\n    // children that need deactivating.\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context) {\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n      // Clear the information about the attached component on the context but keep the reference to\n      // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n      // info\n      context.attachRef = null;\n      context.route = null;\n    }\n  }\n  activateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, children[c.value.outlet], contexts);\n      this.forwardEvent(new ActivationEnd(c.value.snapshot));\n    });\n    if (futureNode.children.length) {\n      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n    }\n  }\n  activateRoutes(futureNode, currNode, parentContexts) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRoute(stored.route.value);\n          this.activateChildRoutes(futureNode, null, context.children);\n        } else {\n          const injector = getClosestRouteInjector(future.snapshot);\n          context.attachRef = null;\n          context.route = future;\n          context.injector = injector;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, context.injector);\n          }\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const context = parentContexts.getOrCreateContext(future.outlet);\n      const outlet = context.outlet;\n      if (outlet && this.inputBindingEnabled && !outlet.supportsBindingToComponentInputs && !warnedAboutUnsupportedInputBinding) {\n        console.warn(`'withComponentInputBinding' feature is enabled but ` + `this application is using an outlet that may not support binding to component inputs.`);\n        warnedAboutUnsupportedInputBinding = true;\n      }\n    }\n  }\n}\nclass CanActivate {\n  constructor(path) {\n    this.path = path;\n    this.route = this.path[this.path.length - 1];\n  }\n}\nclass CanDeactivate {\n  constructor(component, route) {\n    this.component = component;\n    this.route = route;\n  }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  const futureRoot = future._root;\n  const currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n  const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n  const NOT_FOUND = Symbol();\n  const result = injector.get(tokenOrFunction, NOT_FOUND);\n  if (result === NOT_FOUND) {\n    if (typeof tokenOrFunction === 'function' && !ɵisInjectable(tokenOrFunction)) {\n      // We think the token is just a function so return it as-is\n      return tokenOrFunction;\n    } else {\n      // This will throw the not found error\n      return injector.get(tokenOrFunction);\n    }\n  }\n  return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const prevChildren = nodeChildrenAsMap(currNode);\n  // Process the children of the future route\n  futureNode.children.forEach(c => {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  });\n  // Process any children left from the current route (not active for the future route)\n  Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n  return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const future = futureNode.value;\n  const curr = currNode ? currNode.value : null;\n  const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n  // reusing the node\n  if (curr && future.routeConfig === curr.routeConfig) {\n    const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    }\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n    if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n    checks.canActivateChecks.push(new CanActivate(futurePath));\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n  return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'always':\n      return true;\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  const children = nodeChildrenAsMap(route);\n  const r = route.value;\n  Object.entries(children).forEach(([childName, node]) => {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n  return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n  return e instanceof EmptyError || e?.name === 'EmptyError';\n}\nconst INITIAL_VALUE = /* @__PURE__ */Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n  return switchMap(obs => {\n    return combineLatest(obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map(results => {\n      for (const result of results) {\n        if (result === true) {\n          // If result is true, check the next one\n          continue;\n        } else if (result === INITIAL_VALUE) {\n          // If guard has not finished, we need to stop processing.\n          return INITIAL_VALUE;\n        } else if (result === false || result instanceof UrlTree) {\n          // Result finished and was not true. Return the result.\n          // Note that we only allow false/UrlTree. Other values are considered invalid and\n          // ignored.\n          return result;\n        }\n      }\n      // Everything resolved to true. Return true.\n      return true;\n    }), filter(item => item !== INITIAL_VALUE), take(1));\n  });\n}\nfunction checkGuards(injector, forwardEvent) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      currentSnapshot,\n      guards: {\n        canActivateChecks,\n        canDeactivateChecks\n      }\n    } = t;\n    if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n      return of({\n        ...t,\n        guardsResult: true\n      });\n    }\n    return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap(canDeactivate => {\n      return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent) : of(canDeactivate);\n    }), map(guardsResult => ({\n      ...t,\n      guardsResult\n    })));\n  });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n  return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first(result => {\n    return result !== true;\n  }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n  return from(checks).pipe(concatMap(check => {\n    return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n  }), first(result => {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n  return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n  const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  const canActivateObservables = canActivate.map(canActivate => {\n    return defer(() => {\n      const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n      const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n      const guardVal = isCanActivate(guard) ? guard.canActivate(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n      return wrapIntoObservable(guardVal).pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n  const futureARS = path[path.length - 1];\n  const canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(p => getCanActivateChild(p)).filter(_ => _ !== null);\n  const canActivateChildGuardsMapped = canActivateChildGuards.map(d => {\n    return defer(() => {\n      const guardsMapped = d.guards.map(canActivateChild => {\n        const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n        const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n        const guardVal = isCanActivateChild(guard) ? guard.canActivateChild(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n  const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  const canDeactivateObservables = canDeactivate.map(c => {\n    const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n    const guard = getTokenOrFunctionIdentity(c, closestInjector);\n    const guardVal = isCanDeactivate(guard) ? guard.canDeactivate(component, currARS, currRSS, futureRSS) : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n    return wrapIntoObservable(guardVal).pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n  const canLoad = route.canLoad;\n  if (canLoad === undefined || canLoad.length === 0) {\n    return of(true);\n  }\n  const canLoadObservables = canLoad.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanLoad(guard) ? guard.canLoad(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n  return pipe(tap(result => {\n    if (!isUrlTree(result)) return;\n    throw redirectingNavigationError(urlSerializer, result);\n  }), map(result => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n  const canMatch = route.canMatch;\n  if (!canMatch || canMatch.length === 0) return of(true);\n  const canMatchObservables = canMatch.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanMatch(guard) ? guard.canMatch(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nclass NoMatch {\n  constructor(segmentGroup) {\n    this.segmentGroup = segmentGroup || null;\n  }\n}\nclass AbsoluteRedirect extends Error {\n  constructor(urlTree) {\n    super();\n    this.urlTree = urlTree;\n  }\n}\nfunction noMatch$1(segmentGroup) {\n  return throwError(new NoMatch(segmentGroup));\n}\nfunction absoluteRedirect(newTree) {\n  return throwError(new AbsoluteRedirect(newTree));\n}\nfunction namedOutletsRedirect(redirectTo) {\n  return throwError(new ɵRuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n  return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n  constructor(urlSerializer, urlTree) {\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n  }\n  lineralizeSegments(route, urlTree) {\n    let res = [];\n    let c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of(res);\n      }\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect(route.redirectTo);\n      }\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n  applyRedirectCommands(segments, redirectTo, posParams) {\n    const newTree = this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    if (redirectTo.startsWith('/')) {\n      throw new AbsoluteRedirect(newTree);\n    }\n    return newTree;\n  }\n  applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n    const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n  }\n  createQueryParams(redirectToParams, actualParams) {\n    const res = {};\n    Object.entries(redirectToParams).forEach(([k, v]) => {\n      const copySourceValue = typeof v === 'string' && v.startsWith(':');\n      if (copySourceValue) {\n        const sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n  createSegmentGroup(redirectTo, group, segments, posParams) {\n    const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n    let children = {};\n    Object.entries(group.children).forEach(([name, child]) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n  createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n    return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) : this.findOrReturn(s, actualSegments));\n  }\n  findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n    const pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos) throw new ɵRuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n  findOrReturn(redirectToUrlSegment, actualSegments) {\n    let idx = 0;\n    for (const s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\nconst noMatch = {\n  matched: false,\n  consumedSegments: [],\n  remainingSegments: [],\n  parameters: {},\n  positionalParamSegments: {}\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n  const result = match(segmentGroup, route, segments);\n  if (!result.matched) {\n    return of(result);\n  }\n  // Only create the Route's `EnvironmentInjector` if it matches the attempted\n  // navigation\n  injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n  return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map(v => v === true ? result : {\n    ...noMatch\n  }));\n}\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '**') {\n    return createWildcardMatchResult(segments);\n  }\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        ...noMatch\n      };\n    }\n    return {\n      matched: true,\n      consumedSegments: [],\n      remainingSegments: segments,\n      parameters: {},\n      positionalParamSegments: {}\n    };\n  }\n  const matcher = route.matcher || defaultUrlMatcher;\n  const res = matcher(segments, segmentGroup, route);\n  if (!res) return {\n    ...noMatch\n  };\n  const posParams = {};\n  Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n    posParams[k] = v.path;\n  });\n  const parameters = res.consumed.length > 0 ? {\n    ...posParams,\n    ...res.consumed[res.consumed.length - 1].parameters\n  } : posParams;\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    remainingSegments: segments.slice(res.consumed.length),\n    // TODO(atscott): investigate combining parameters and positionalParamSegments\n    parameters,\n    positionalParamSegments: res.posParams ?? {}\n  };\n}\nfunction createWildcardMatchResult(segments) {\n  return {\n    matched: true,\n    parameters: segments.length > 0 ? last(segments).parameters : {},\n    consumedSegments: segments,\n    remainingSegments: [],\n    positionalParamSegments: {}\n  };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: s,\n      slicedSegments: []\n    };\n  }\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {\n      segmentGroup: s,\n      slicedSegments\n    };\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  return {\n    segmentGroup: s,\n    slicedSegments\n  };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  const res = {};\n  for (const r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {\n    ...children,\n    ...res\n  };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n  const res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (const r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n  return r.path === '';\n}\n/**\n * Determines if `route` is a path match for the `rawSegment`, `segments`, and `outlet` without\n * verifying that its children are a full match for the remainder of the `rawSegment` children as\n * well.\n */\nfunction isImmediateMatch(route, rawSegment, segments, outlet) {\n  // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n  // a config like\n  // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n  // or even\n  // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n  //\n  // The exception here is when the segment outlet is for the primary outlet. This would\n  // result in a match inside the named outlet because all children there are written as primary\n  // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n  // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n  // This should only match if the url is `/(x:b)`.\n  if (getOutlet(route) !== outlet && (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n    return false;\n  }\n  return match(rawSegment, route, segments).matched;\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n  return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n  return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n  constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n    this.injector = injector;\n    this.configLoader = configLoader;\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.urlSerializer = urlSerializer;\n    this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n    this.absoluteRedirectCount = 0;\n    this.allowRedirects = true;\n  }\n  noMatchError(e) {\n    return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'` : `'${e.segmentGroup}'`);\n  }\n  recognize() {\n    const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n    return this.match(rootSegmentGroup).pipe(map(children => {\n      // Use Object.freeze to prevent readers of the Router state from modifying it outside\n      // of a navigation, resulting in the router being out of sync with the browser.\n      const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({\n        ...this.urlTree.queryParams\n      }), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, {});\n      const rootNode = new TreeNode(root, children);\n      const routeState = new RouterStateSnapshot('', rootNode);\n      const tree = createUrlTreeFromSnapshot(root, [], this.urlTree.queryParams, this.urlTree.fragment);\n      // https://github.com/angular/angular/issues/47307\n      // Creating the tree stringifies the query params\n      // We don't want to do this here so reassign them to the original.\n      tree.queryParams = this.urlTree.queryParams;\n      routeState.url = this.urlSerializer.serialize(tree);\n      this.inheritParamsAndData(routeState._root, null);\n      return {\n        state: routeState,\n        tree\n      };\n    }));\n  }\n  match(rootSegmentGroup) {\n    const expanded$ = this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET);\n    return expanded$.pipe(catchError(e => {\n      if (e instanceof AbsoluteRedirect) {\n        this.urlTree = e.urlTree;\n        return this.match(e.urlTree.root);\n      }\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n      throw e;\n    }));\n  }\n  inheritParamsAndData(routeNode, parent) {\n    const route = routeNode.value;\n    const i = getInherited(route, parent, this.paramsInheritanceStrategy);\n    route.params = Object.freeze(i.params);\n    route.data = Object.freeze(i.data);\n    routeNode.children.forEach(n => this.inheritParamsAndData(n, route));\n  }\n  processSegmentGroup(injector, config, segmentGroup, outlet) {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(injector, config, segmentGroup);\n    }\n    return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true).pipe(map(child => child instanceof TreeNode ? [child] : []));\n  }\n  /**\n   * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n   * we cannot find a match for _any_ of the children.\n   *\n   * @param config - The `Routes` to match against\n   * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n   *     config.\n   */\n  processChildren(injector, config, segmentGroup) {\n    // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n    // because an absolute redirect from the primary outlet takes precedence.\n    const childOutlets = [];\n    for (const child of Object.keys(segmentGroup.children)) {\n      if (child === 'primary') {\n        childOutlets.unshift(child);\n      } else {\n        childOutlets.push(child);\n      }\n    }\n    return from(childOutlets).pipe(concatMap(childOutlet => {\n      const child = segmentGroup.children[childOutlet];\n      // Sort the config so that routes with outlets that match the one being activated\n      // appear first, followed by routes for other outlets, which might match if they have\n      // an empty path.\n      const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n      return this.processSegmentGroup(injector, sortedConfig, child, childOutlet);\n    }), scan((children, outletChildren) => {\n      children.push(...outletChildren);\n      return children;\n    }), defaultIfEmpty(null), last$1(), mergeMap(children => {\n      if (children === null) return noMatch$1(segmentGroup);\n      // Because we may have matched two outlets to the same empty path segment, we can have\n      // multiple activated results for the same outlet. We should merge the children of\n      // these results so the final return value is only one `TreeNode` per outlet.\n      const mergedChildren = mergeEmptyPathMatches(children);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This should really never happen - we are only taking the first match for each\n        // outlet and merge the empty path matches.\n        checkOutletNameUniqueness(mergedChildren);\n      }\n      sortActivatedRouteSnapshots(mergedChildren);\n      return of(mergedChildren);\n    }));\n  }\n  processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects) {\n    return from(routes).pipe(concatMap(r => {\n      return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects).pipe(catchError(e => {\n        if (e instanceof NoMatch) {\n          return of(null);\n        }\n        throw e;\n      }));\n    }), first(x => !!x), catchError(e => {\n      if (isEmptyError(e)) {\n        if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of(new NoLeftoversInUrl());\n        }\n        return noMatch$1(segmentGroup);\n      }\n      throw e;\n    }));\n  }\n  processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects) {\n    if (!isImmediateMatch(route, rawSegment, segments, outlet)) return noMatch$1(rawSegment);\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet);\n    }\n    if (this.allowRedirects && allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet);\n    }\n    return noMatch$1(rawSegment);\n  }\n  expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet) {\n    const {\n      matched,\n      consumedSegments,\n      positionalParamSegments,\n      remainingSegments\n    } = match(segmentGroup, route, segments);\n    if (!matched) return noMatch$1(segmentGroup);\n    // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n    // size exceeded in production\n    if (route.redirectTo.startsWith('/')) {\n      this.absoluteRedirectCount++;\n      if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n        if (ngDevMode) {\n          throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` + `This is currently a dev mode only error but will become a` + ` call stack size exceeded error in production in a future major version.`);\n        }\n        this.allowRedirects = false;\n      }\n    }\n    const newTree = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n    return this.applyRedirects.lineralizeSegments(route, newTree).pipe(mergeMap(newSegments => {\n      return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false);\n    }));\n  }\n  matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet) {\n    const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n    if (route.path === '**') {\n      // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n      // We should investigate a better strategy for any existing children. Otherwise, these\n      // child segments are silently dropped from the navigation.\n      // https://github.com/angular/angular/issues/40089\n      rawSegment.children = {};\n    }\n    return matchResult.pipe(switchMap(result => {\n      if (!result.matched) {\n        return noMatch$1(rawSegment);\n      }\n      // If the route has an injector created from providers, we should start using that.\n      injector = route._injector ?? injector;\n      return this.getChildConfig(injector, route, segments).pipe(switchMap(({\n        routes: childConfig\n      }) => {\n        const childInjector = route._loadedInjector ?? injector;\n        const {\n          consumedSegments,\n          remainingSegments,\n          parameters\n        } = result;\n        const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({\n          ...this.urlTree.queryParams\n        }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const {\n          segmentGroup,\n          slicedSegments\n        } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          return this.processChildren(childInjector, childConfig, segmentGroup).pipe(map(children => {\n            if (children === null) {\n              return null;\n            }\n            return new TreeNode(snapshot, children);\n          }));\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new TreeNode(snapshot, []));\n        }\n        const matchedOnOutlet = getOutlet(route) === outlet;\n        // If we matched a config due to empty path match on a different outlet, we need to\n        // continue passing the current outlet for the segment rather than switch to PRIMARY.\n        // Note that we switch to primary when we have a match because outlet configs look like\n        // this: {path: 'a', outlet: 'a', children: [\n        //  {path: 'b', component: B},\n        //  {path: 'c', component: C},\n        // ]}\n        // Notice that the children of the named outlet are configured with the primary outlet\n        return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true).pipe(map(child => {\n          return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n        }));\n      }));\n    }));\n  }\n  getChildConfig(injector, route, segments) {\n    if (route.children) {\n      // The children belong to the same module\n      return of({\n        routes: route.children,\n        injector\n      });\n    }\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedRoutes !== undefined) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap(shouldLoadResult => {\n        if (shouldLoadResult) {\n          return this.configLoader.loadChildren(injector, route).pipe(tap(cfg => {\n            route._loadedRoutes = cfg.routes;\n            route._loadedInjector = cfg.injector;\n          }));\n        }\n        return canLoadFails(route);\n      }));\n    }\n    return of({\n      routes: [],\n      injector\n    });\n  }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\nfunction hasEmptyPathConfig(node) {\n  const config = node.value.routeConfig;\n  return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n  const result = [];\n  // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n  const mergedNodes = new Set();\n  for (const node of nodes) {\n    if (!hasEmptyPathConfig(node)) {\n      result.push(node);\n      continue;\n    }\n    const duplicateEmptyPathNode = result.find(resultNode => node.value.routeConfig === resultNode.value.routeConfig);\n    if (duplicateEmptyPathNode !== undefined) {\n      duplicateEmptyPathNode.children.push(...node.children);\n      mergedNodes.add(duplicateEmptyPathNode);\n    } else {\n      result.push(node);\n    }\n  }\n  // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n  // by also merging those children. This is necessary when there are multiple empty path configs\n  // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n  // if any of those children can be combined into a single node as well.\n  for (const mergedNode of mergedNodes) {\n    const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n    result.push(new TreeNode(mergedNode.value, mergedChildren));\n  }\n  return result.filter(n => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n  const names = {};\n  nodes.forEach(n => {\n    const routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const c = n.value.url.map(s => s.toString()).join('/');\n      throw new ɵRuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\nfunction getData(route) {\n  return route.data || {};\n}\nfunction getResolve(route) {\n  return route.resolve || {};\n}\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n  return mergeMap(t => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({\n    state: targetSnapshot,\n    tree: urlAfterRedirects\n  }) => {\n    return {\n      ...t,\n      targetSnapshot,\n      urlAfterRedirects\n    };\n  })));\n}\nfunction resolveData(paramsInheritanceStrategy, injector) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      guards: {\n        canActivateChecks\n      }\n    } = t;\n    if (!canActivateChecks.length) {\n      return of(t);\n    }\n    // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n    // preserve the correct order that the resolvers should run in.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n    const routesWithResolversToRun = new Set(canActivateChecks.map(check => check.route));\n    const routesNeedingDataUpdates = new Set();\n    for (const route of routesWithResolversToRun) {\n      if (routesNeedingDataUpdates.has(route)) {\n        continue;\n      }\n      // All children under the route with a resolver to run need to recompute inherited data.\n      for (const newRoute of flattenRouteTree(route)) {\n        routesNeedingDataUpdates.add(newRoute);\n      }\n    }\n    let routesProcessed = 0;\n    return from(routesNeedingDataUpdates).pipe(concatMap(route => {\n      if (routesWithResolversToRun.has(route)) {\n        return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n      } else {\n        route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n        return of(void 0);\n      }\n    }), tap(() => routesProcessed++), takeLast(1), mergeMap(_ => routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY));\n  });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n  const descendants = route.children.map(child => flattenRouteTree(child)).flat();\n  return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n  const config = futureARS.routeConfig;\n  const resolve = futureARS._resolve;\n  if (config?.title !== undefined && !hasStaticTitle(config)) {\n    resolve[RouteTitleKey] = config.title;\n  }\n  return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map(resolvedData => {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n    return null;\n  }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n  const keys = getDataKeys(resolve);\n  if (keys.length === 0) {\n    return of({});\n  }\n  const data = {};\n  return from(keys).pipe(mergeMap(key => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap(value => {\n    data[key] = value;\n  }))), takeLast(1), mapTo(data), catchError(e => isEmptyError(e) ? EMPTY : throwError(e)));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n  const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n  const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n  const resolverValue = resolver.resolve ? resolver.resolve(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n  return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n  return switchMap(v => {\n    const nextResult = next(v);\n    if (nextResult) {\n      return from(nextResult).pipe(map(() => v));\n    }\n    return of(v);\n  });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/router#setting-the-page-title)\n */\nclass TitleStrategy {\n  /**\n   * @returns The `title` of the deepest primary route.\n   */\n  buildTitle(snapshot) {\n    let pageTitle;\n    let route = snapshot.root;\n    while (route !== undefined) {\n      pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n      route = route.children.find(child => child.outlet === PRIMARY_OUTLET);\n    }\n    return pageTitle;\n  }\n  /**\n   * Given an `ActivatedRouteSnapshot`, returns the final value of the\n   * `Route.title` property, which can either be a static string or a resolved value.\n   */\n  getResolvedTitleForRoute(snapshot) {\n    return snapshot.data[RouteTitleKey];\n  }\n  static {\n    this.ɵfac = function TitleStrategy_Factory(t) {\n      return new (t || TitleStrategy)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TitleStrategy,\n      factory: () => (() => inject(DefaultTitleStrategy))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(DefaultTitleStrategy)\n    }]\n  }], null, null);\n})();\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nclass DefaultTitleStrategy extends TitleStrategy {\n  constructor(title) {\n    super();\n    this.title = title;\n  }\n  /**\n   * Sets the title of the browser to the given value.\n   *\n   * @param title The `pageTitle` from the deepest primary route.\n   */\n  updateTitle(snapshot) {\n    const title = this.buildTitle(snapshot);\n    if (title !== undefined) {\n      this.title.setTitle(title);\n    }\n  }\n  static {\n    this.ɵfac = function DefaultTitleStrategy_Factory(t) {\n      return new (t || DefaultTitleStrategy)(i0.ɵɵinject(i1.Title));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultTitleStrategy,\n      factory: DefaultTitleStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultTitleStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Title\n  }], null);\n})();\n\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n  providedIn: 'root',\n  factory: () => ({})\n});\n\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = new InjectionToken(ngDevMode ? 'ROUTES' : '');\nclass RouterConfigLoader {\n  constructor() {\n    this.componentLoaders = new WeakMap();\n    this.childrenLoaders = new WeakMap();\n    this.compiler = inject(Compiler);\n  }\n  loadComponent(route) {\n    if (this.componentLoaders.get(route)) {\n      return this.componentLoaders.get(route);\n    } else if (route._loadedComponent) {\n      return of(route._loadedComponent);\n    }\n    if (this.onLoadStartListener) {\n      this.onLoadStartListener(route);\n    }\n    const loadRunner = wrapIntoObservable(route.loadComponent()).pipe(map(maybeUnwrapDefaultExport), tap(component => {\n      if (this.onLoadEndListener) {\n        this.onLoadEndListener(route);\n      }\n      (typeof ngDevMode === 'undefined' || ngDevMode) && assertStandalone(route.path ?? '', component);\n      route._loadedComponent = component;\n    }), finalize(() => {\n      this.componentLoaders.delete(route);\n    }));\n    // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n    const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n    this.componentLoaders.set(route, loader);\n    return loader;\n  }\n  loadChildren(parentInjector, route) {\n    if (this.childrenLoaders.get(route)) {\n      return this.childrenLoaders.get(route);\n    } else if (route._loadedRoutes) {\n      return of({\n        routes: route._loadedRoutes,\n        injector: route._loadedInjector\n      });\n    }\n    if (this.onLoadStartListener) {\n      this.onLoadStartListener(route);\n    }\n    const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n    const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n      this.childrenLoaders.delete(route);\n    }));\n    // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n    const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n    this.childrenLoaders.set(route, loader);\n    return loader;\n  }\n  static {\n    this.ɵfac = function RouterConfigLoader_Factory(t) {\n      return new (t || RouterConfigLoader)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterConfigLoader,\n      factory: RouterConfigLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterConfigLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n  return wrapIntoObservable(route.loadChildren()).pipe(map(maybeUnwrapDefaultExport), mergeMap(t => {\n    if (t instanceof NgModuleFactory || Array.isArray(t)) {\n      return of(t);\n    } else {\n      return from(compiler.compileModuleAsync(t));\n    }\n  }), map(factoryOrRoutes => {\n    if (onLoadEndListener) {\n      onLoadEndListener(route);\n    }\n    // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n    // no injector associated with lazy loading a `Route` array.\n    let injector;\n    let rawRoutes;\n    let requireStandaloneComponents = false;\n    if (Array.isArray(factoryOrRoutes)) {\n      rawRoutes = factoryOrRoutes;\n      requireStandaloneComponents = true;\n    } else {\n      injector = factoryOrRoutes.create(parentInjector).injector;\n      // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n      // will get stuck in an infinite loop. The child module's Injector will look to\n      // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n      // for it's parent module instead.\n      rawRoutes = injector.get(ROUTES, [], {\n        optional: true,\n        self: true\n      }).flat();\n    }\n    const routes = rawRoutes.map(standardizeConfig);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(routes, route.path, requireStandaloneComponents);\n    return {\n      routes,\n      injector\n    };\n  }));\n}\nfunction isWrappedDefaultExport(value) {\n  // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n  // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n  // `default` will be a renamed property.\n  return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n  // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n  // subject to property renaming, so we reference it with bracket access.\n  return isWrappedDefaultExport(input) ? input['default'] : input;\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nclass UrlHandlingStrategy {\n  static {\n    this.ɵfac = function UrlHandlingStrategy_Factory(t) {\n      return new (t || UrlHandlingStrategy)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlHandlingStrategy,\n      factory: () => (() => inject(DefaultUrlHandlingStrategy))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlHandlingStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(DefaultUrlHandlingStrategy)\n    }]\n  }], null, null);\n})();\n/**\n * @publicApi\n */\nclass DefaultUrlHandlingStrategy {\n  shouldProcessUrl(url) {\n    return true;\n  }\n  extract(url) {\n    return url;\n  }\n  merge(newUrlPart, wholeUrl) {\n    return newUrlPart;\n  }\n  static {\n    this.ɵfac = function DefaultUrlHandlingStrategy_Factory(t) {\n      return new (t || DefaultUrlHandlingStrategy)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultUrlHandlingStrategy,\n      factory: DefaultUrlHandlingStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultUrlHandlingStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/// <reference types=\"dom-view-transitions\" />\nconst CREATE_VIEW_TRANSITION = new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n  const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n  const document = injector.get(DOCUMENT);\n  // Create promises outside the Angular zone to avoid causing extra change detections\n  return injector.get(NgZone).runOutsideAngular(() => {\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n      transitionOptions.skipNextTransition = false;\n      // The timing of `startViewTransition` is closer to a macrotask. It won't be called\n      // until the current event loop exits so we use a promise resolved in a timeout instead\n      // of Promise.resolve().\n      return new Promise(resolve => setTimeout(resolve));\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise(resolve => {\n      resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n      resolveViewTransitionStarted();\n      // We don't actually update dom within the transition callback. The resolving of the above\n      // promise unblocks the Router navigation, which synchronously activates and deactivates\n      // routes (the DOM update). This view transition waits for the next change detection to\n      // complete (below), which includes the update phase of the routed components.\n      return createRenderPromise(injector);\n    });\n    const {\n      onViewTransitionCreated\n    } = transitionOptions;\n    if (onViewTransitionCreated) {\n      runInInjectionContext(injector, () => onViewTransitionCreated({\n        transition,\n        from,\n        to\n      }));\n    }\n    return viewTransitionStarted;\n  });\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n  return new Promise(resolve => {\n    afterNextRender(resolve, {\n      injector\n    });\n  });\n}\nclass NavigationTransitions {\n  get hasRequestedNavigation() {\n    return this.navigationId !== 0;\n  }\n  constructor() {\n    this.currentNavigation = null;\n    this.currentTransition = null;\n    this.lastSuccessfulNavigation = null;\n    /**\n     * These events are used to communicate back to the Router about the state of the transition. The\n     * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n     * class is not public, this event subject is not publicly exposed.\n     */\n    this.events = new Subject();\n    /**\n     * Used to abort the current transition with an error.\n     */\n    this.transitionAbortSubject = new Subject();\n    this.configLoader = inject(RouterConfigLoader);\n    this.environmentInjector = inject(EnvironmentInjector);\n    this.urlSerializer = inject(UrlSerializer);\n    this.rootContexts = inject(ChildrenOutletContexts);\n    this.location = inject(Location);\n    this.inputBindingEnabled = inject(INPUT_BINDER, {\n      optional: true\n    }) !== null;\n    this.titleStrategy = inject(TitleStrategy);\n    this.options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n    this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n    this.createViewTransition = inject(CREATE_VIEW_TRANSITION, {\n      optional: true\n    });\n    this.navigationId = 0;\n    /**\n     * Hook that enables you to pause navigation after the preactivation phase.\n     * Used by `RouterModule`.\n     *\n     * @internal\n     */\n    this.afterPreactivation = () => of(void 0);\n    /** @internal */\n    this.rootComponentType = null;\n    const onLoadStart = r => this.events.next(new RouteConfigLoadStart(r));\n    const onLoadEnd = r => this.events.next(new RouteConfigLoadEnd(r));\n    this.configLoader.onLoadEndListener = onLoadEnd;\n    this.configLoader.onLoadStartListener = onLoadStart;\n  }\n  complete() {\n    this.transitions?.complete();\n  }\n  handleNavigationRequest(request) {\n    const id = ++this.navigationId;\n    this.transitions?.next({\n      ...this.transitions.value,\n      ...request,\n      id\n    });\n  }\n  setupNavigations(router, initialUrlTree, initialRouterState) {\n    this.transitions = new BehaviorSubject({\n      id: 0,\n      currentUrlTree: initialUrlTree,\n      currentRawUrl: initialUrlTree,\n      extractedUrl: this.urlHandlingStrategy.extract(initialUrlTree),\n      urlAfterRedirects: this.urlHandlingStrategy.extract(initialUrlTree),\n      rawUrl: initialUrlTree,\n      extras: {},\n      resolve: null,\n      reject: null,\n      promise: Promise.resolve(true),\n      source: IMPERATIVE_NAVIGATION,\n      restoredState: null,\n      currentSnapshot: initialRouterState.snapshot,\n      targetSnapshot: null,\n      currentRouterState: initialRouterState,\n      targetRouterState: null,\n      guards: {\n        canActivateChecks: [],\n        canDeactivateChecks: []\n      },\n      guardsResult: null\n    });\n    return this.transitions.pipe(filter(t => t.id !== 0),\n    // Extract URL\n    map(t => ({\n      ...t,\n      extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl)\n    })),\n    // Using switchMap so we cancel executing navigations when a new one comes in\n    switchMap(overallTransitionState => {\n      let completed = false;\n      let errored = false;\n      return of(overallTransitionState).pipe(switchMap(t => {\n        // It is possible that `switchMap` fails to cancel previous navigations if a new one happens synchronously while the operator\n        // is processing the `next` notification of that previous navigation. This can happen when a new navigation (say 2) cancels a\n        // previous one (1) and yet another navigation (3) happens synchronously in response to the `NavigationCancel` event for (1).\n        // https://github.com/ReactiveX/rxjs/issues/7455\n        if (this.navigationId > overallTransitionState.id) {\n          const cancellationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n          this.cancelNavigationTransition(overallTransitionState, cancellationReason, NavigationCancellationCode.SupersededByNewNavigation);\n          return EMPTY;\n        }\n        this.currentTransition = overallTransitionState;\n        // Store the Navigation object\n        this.currentNavigation = {\n          id: t.id,\n          initialUrl: t.rawUrl,\n          extractedUrl: t.extractedUrl,\n          trigger: t.source,\n          extras: t.extras,\n          previousNavigation: !this.lastSuccessfulNavigation ? null : {\n            ...this.lastSuccessfulNavigation,\n            previousNavigation: null\n          }\n        };\n        const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n        const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n        if (!urlTransition && onSameUrlNavigation !== 'reload') {\n          const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.` : '';\n          this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n          t.resolve(null);\n          return EMPTY;\n        }\n        if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n          return of(t).pipe(\n          // Fire NavigationStart event\n          switchMap(t => {\n            const transition = this.transitions?.getValue();\n            this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n            if (transition !== this.transitions?.getValue()) {\n              return EMPTY;\n            }\n            // This delay is required to match old behavior that forced\n            // navigation to always be async\n            return Promise.resolve(t);\n          }),\n          // Recognize\n          recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy),\n          // Update URL if in `eager` update mode\n          tap(t => {\n            overallTransitionState.targetSnapshot = t.targetSnapshot;\n            overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n            this.currentNavigation = {\n              ...this.currentNavigation,\n              finalUrl: t.urlAfterRedirects\n            };\n            // Fire RoutesRecognized\n            const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n            this.events.next(routesRecognized);\n          }));\n        } else if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n          /* When the current URL shouldn't be processed, but the previous one\n           * was, we handle this \"error condition\" by navigating to the\n           * previously successful URL, but leaving the URL intact.*/\n          const {\n            id,\n            extractedUrl,\n            source,\n            restoredState,\n            extras\n          } = t;\n          const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n          this.events.next(navStart);\n          const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            targetSnapshot,\n            urlAfterRedirects: extractedUrl,\n            extras: {\n              ...extras,\n              skipLocationChange: false,\n              replaceUrl: false\n            }\n          };\n          this.currentNavigation.finalUrl = extractedUrl;\n          return of(overallTransitionState);\n        } else {\n          /* When neither the current or previous URL can be processed, do\n           * nothing other than update router's internal reference to the\n           * current \"settled\" URL. This way the next navigation will be coming\n           * from the current URL in the browser.\n           */\n          const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation was ignored because the UrlHandlingStrategy` + ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.` : '';\n          this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n          t.resolve(null);\n          return EMPTY;\n        }\n      }),\n      // --- GUARDS ---\n      tap(t => {\n        const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n        this.events.next(guardsStart);\n      }), map(t => {\n        this.currentTransition = overallTransitionState = {\n          ...t,\n          guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts)\n        };\n        return overallTransitionState;\n      }), checkGuards(this.environmentInjector, evt => this.events.next(evt)), tap(t => {\n        overallTransitionState.guardsResult = t.guardsResult;\n        if (isUrlTree(t.guardsResult)) {\n          throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n        }\n        const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n        this.events.next(guardsEnd);\n      }), filter(t => {\n        if (!t.guardsResult) {\n          this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n          return false;\n        }\n        return true;\n      }),\n      // --- RESOLVE ---\n      switchTap(t => {\n        if (t.guards.canActivateChecks.length) {\n          return of(t).pipe(tap(t => {\n            const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n            this.events.next(resolveStart);\n          }), switchMap(t => {\n            let dataResolved = false;\n            return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n              next: () => dataResolved = true,\n              complete: () => {\n                if (!dataResolved) {\n                  this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode ? `At least one route resolver didn't emit any value.` : '', NavigationCancellationCode.NoDataFromResolver);\n                }\n              }\n            }));\n          }), tap(t => {\n            const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n            this.events.next(resolveEnd);\n          }));\n        }\n        return undefined;\n      }),\n      // --- LOAD COMPONENTS ---\n      switchTap(t => {\n        const loadComponents = route => {\n          const loaders = [];\n          if (route.routeConfig?.loadComponent && !route.routeConfig._loadedComponent) {\n            loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe(tap(loadedComponent => {\n              route.component = loadedComponent;\n            }), map(() => void 0)));\n          }\n          for (const child of route.children) {\n            loaders.push(...loadComponents(child));\n          }\n          return loaders;\n        };\n        return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n      }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n        const {\n          currentSnapshot,\n          targetSnapshot\n        } = overallTransitionState;\n        const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n        // If view transitions are enabled, block the navigation until the view\n        // transition callback starts. Otherwise, continue immediately.\n        return viewTransitionStarted ? from(viewTransitionStarted).pipe(map(() => overallTransitionState)) : of(overallTransitionState);\n      }), map(t => {\n        const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n        this.currentTransition = overallTransitionState = {\n          ...t,\n          targetRouterState\n        };\n        this.currentNavigation.targetRouterState = targetRouterState;\n        return overallTransitionState;\n      }), tap(() => {\n        this.events.next(new BeforeActivateRoutes());\n      }), activateRoutes(this.rootContexts, router.routeReuseStrategy, evt => this.events.next(evt), this.inputBindingEnabled),\n      // Ensure that if some observable used to drive the transition doesn't\n      // complete, the navigation still finalizes This should never happen, but\n      // this is done as a safety measure to avoid surfacing this error (#49567).\n      take(1), tap({\n        next: t => {\n          completed = true;\n          this.lastSuccessfulNavigation = this.currentNavigation;\n          this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n          this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n          t.resolve(true);\n        },\n        complete: () => {\n          completed = true;\n        }\n      }),\n      // There used to be a lot more logic happening directly within the\n      // transition Observable. Some of this logic has been refactored out to\n      // other places but there may still be errors that happen there. This gives\n      // us a way to cancel the transition from the outside. This may also be\n      // required in the future to support something like the abort signal of the\n      // Navigation API where the navigation gets aborted from outside the\n      // transition.\n      takeUntil(this.transitionAbortSubject.pipe(tap(err => {\n        throw err;\n      }))), finalize(() => {\n        /* When the navigation stream finishes either through error or success,\n         * we set the `completed` or `errored` flag. However, there are some\n         * situations where we could get here without either of those being set.\n         * For instance, a redirect during NavigationStart. Therefore, this is a\n         * catch-all to make sure the NavigationCancel event is fired when a\n         * navigation gets cancelled but not caught by other means. */\n        if (!completed && !errored) {\n          const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n          this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n        }\n        // Only clear current navigation if it is still set to the one that\n        // finalized.\n        if (this.currentTransition?.id === overallTransitionState.id) {\n          this.currentNavigation = null;\n          this.currentTransition = null;\n        }\n      }), catchError(e => {\n        errored = true;\n        /* This error type is issued during Redirect, and is handled as a\n         * cancellation rather than an error. */\n        if (isNavigationCancelingError(e)) {\n          this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n          // When redirecting, we need to delay resolving the navigation\n          // promise and push it to the redirect navigation\n          if (!isRedirectingNavigationCancelingError(e)) {\n            overallTransitionState.resolve(false);\n          } else {\n            this.events.next(new RedirectRequest(e.url));\n          }\n          /* All other errors should reset to the router's internal URL reference\n           * to the pre-error state. */\n        } else {\n          this.events.next(new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined));\n          try {\n            overallTransitionState.resolve(router.errorHandler(e));\n          } catch (ee) {\n            // TODO(atscott): consider flipping the default behavior of\n            // resolveNavigationPromiseOnError to be `resolve(false)` when\n            // undefined. This is the most sane thing to do given that\n            // applications very rarely handle the promise rejection and, as a\n            // result, would get \"unhandled promise rejection\" console logs.\n            // The vast majority of applications would not be affected by this\n            // change so omitting a migration seems reasonable. Instead,\n            // applications that rely on rejection can specifically opt-in to the\n            // old behavior.\n            if (this.options.resolveNavigationPromiseOnError) {\n              overallTransitionState.resolve(false);\n            } else {\n              overallTransitionState.reject(ee);\n            }\n          }\n        }\n        return EMPTY;\n      }));\n      // casting because `pipe` returns observable({}) when called with 8+ arguments\n    }));\n  }\n  cancelNavigationTransition(t, reason, code) {\n    const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n    this.events.next(navCancel);\n    t.resolve(false);\n  }\n  /**\n   * @returns Whether we're navigating to somewhere that is not what the Router is\n   * currently set to.\n   */\n  isUpdatingInternalState() {\n    // TODO(atscott): The serializer should likely be used instead of\n    // `UrlTree.toString()`. Custom serializers are often written to handle\n    // things better than the default one (objects, for example will be\n    // [Object object] with the custom serializer and be \"the same\" when they\n    // aren't).\n    // (Same for isUpdatedBrowserUrl)\n    return this.currentTransition?.extractedUrl.toString() !== this.currentTransition?.currentUrlTree.toString();\n  }\n  /**\n   * @returns Whether we're updating the browser URL to something new (navigation is going\n   * to somewhere not displayed in the URL bar and we will update the URL\n   * bar if navigation succeeds).\n   */\n  isUpdatedBrowserUrl() {\n    // The extracted URL is the part of the URL that this application cares about. `extract` may\n    // return only part of the browser URL and that part may have not changed even if some other\n    // portion of the URL did.\n    const extractedBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n    return extractedBrowserUrl.toString() !== this.currentTransition?.extractedUrl.toString() && !this.currentTransition?.extras.skipLocationChange;\n  }\n  static {\n    this.ɵfac = function NavigationTransitions_Factory(t) {\n      return new (t || NavigationTransitions)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NavigationTransitions,\n      factory: NavigationTransitions.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavigationTransitions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nfunction isBrowserTriggeredNavigation(source) {\n  return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nclass RouteReuseStrategy {\n  static {\n    this.ɵfac = function RouteReuseStrategy_Factory(t) {\n      return new (t || RouteReuseStrategy)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouteReuseStrategy,\n      factory: () => (() => inject(DefaultRouteReuseStrategy))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouteReuseStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(DefaultRouteReuseStrategy)\n    }]\n  }], null, null);\n})();\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   * Always returns false for `BaseRouteReuseStrategy`.\n   * */\n  shouldDetach(route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(route, detachedTree) {}\n  /** Returns `false`, meaning the route (and its subtree) is never reattached */\n  shouldAttach(route) {\n    return false;\n  }\n  /** Returns `null` because this strategy does not store routes for later re-use. */\n  retrieve(route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and current route config are\n   * identical.\n   */\n  shouldReuseRoute(future, curr) {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\nclass DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵDefaultRouteReuseStrategy_BaseFactory;\n      return function DefaultRouteReuseStrategy_Factory(t) {\n        return (ɵDefaultRouteReuseStrategy_BaseFactory || (ɵDefaultRouteReuseStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultRouteReuseStrategy)))(t || DefaultRouteReuseStrategy);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultRouteReuseStrategy,\n      factory: DefaultRouteReuseStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultRouteReuseStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass StateManager {\n  static {\n    this.ɵfac = function StateManager_Factory(t) {\n      return new (t || StateManager)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StateManager,\n      factory: () => (() => inject(HistoryStateManager))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StateManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(HistoryStateManager)\n    }]\n  }], null, null);\n})();\nclass HistoryStateManager extends StateManager {\n  constructor() {\n    super(...arguments);\n    this.location = inject(Location);\n    this.urlSerializer = inject(UrlSerializer);\n    this.options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    this.canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n    this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n    this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    this.currentUrlTree = new UrlTree();\n    this.rawUrlTree = this.currentUrlTree;\n    /**\n     * The id of the currently active page in the router.\n     * Updated to the transition's target id on a successful navigation.\n     *\n     * This is used to track what page the router last activated. When an attempted navigation fails,\n     * the router can then use this to compute how to restore the state back to the previously active\n     * page.\n     */\n    this.currentPageId = 0;\n    this.lastSuccessfulId = -1;\n    this.routerState = createEmptyState(null);\n    this.stateMemento = this.createStateMemento();\n  }\n  getCurrentUrlTree() {\n    return this.currentUrlTree;\n  }\n  getRawUrlTree() {\n    return this.rawUrlTree;\n  }\n  restoredState() {\n    return this.location.getState();\n  }\n  /**\n   * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n   * important for computing the target page id for new navigations because we need to ensure each\n   * page id in the browser history is 1 more than the previous entry.\n   */\n  get browserPageId() {\n    if (this.canceledNavigationResolution !== 'computed') {\n      return this.currentPageId;\n    }\n    return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n  }\n  getRouterState() {\n    return this.routerState;\n  }\n  createStateMemento() {\n    return {\n      rawUrlTree: this.rawUrlTree,\n      currentUrlTree: this.currentUrlTree,\n      routerState: this.routerState\n    };\n  }\n  registerNonRouterCurrentEntryChangeListener(listener) {\n    return this.location.subscribe(event => {\n      if (event['type'] === 'popstate') {\n        listener(event['url'], event.state);\n      }\n    });\n  }\n  handleRouterEvent(e, currentTransition) {\n    if (e instanceof NavigationStart) {\n      this.stateMemento = this.createStateMemento();\n    } else if (e instanceof NavigationSkipped) {\n      this.rawUrlTree = currentTransition.initialUrl;\n    } else if (e instanceof RoutesRecognized) {\n      if (this.urlUpdateStrategy === 'eager') {\n        if (!currentTransition.extras.skipLocationChange) {\n          const rawUrl = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n          this.setBrowserUrl(rawUrl, currentTransition);\n        }\n      }\n    } else if (e instanceof BeforeActivateRoutes) {\n      this.currentUrlTree = currentTransition.finalUrl;\n      this.rawUrlTree = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n      this.routerState = currentTransition.targetRouterState;\n      if (this.urlUpdateStrategy === 'deferred') {\n        if (!currentTransition.extras.skipLocationChange) {\n          this.setBrowserUrl(this.rawUrlTree, currentTransition);\n        }\n      }\n    } else if (e instanceof NavigationCancel && (e.code === NavigationCancellationCode.GuardRejected || e.code === NavigationCancellationCode.NoDataFromResolver)) {\n      this.restoreHistory(currentTransition);\n    } else if (e instanceof NavigationError) {\n      this.restoreHistory(currentTransition, true);\n    } else if (e instanceof NavigationEnd) {\n      this.lastSuccessfulId = e.id;\n      this.currentPageId = this.browserPageId;\n    }\n  }\n  setBrowserUrl(url, transition) {\n    const path = this.urlSerializer.serialize(url);\n    if (this.location.isCurrentPathEqualTo(path) || !!transition.extras.replaceUrl) {\n      // replacements do not update the target page\n      const currentBrowserPageId = this.browserPageId;\n      const state = {\n        ...transition.extras.state,\n        ...this.generateNgRouterState(transition.id, currentBrowserPageId)\n      };\n      this.location.replaceState(path, '', state);\n    } else {\n      const state = {\n        ...transition.extras.state,\n        ...this.generateNgRouterState(transition.id, this.browserPageId + 1)\n      };\n      this.location.go(path, '', state);\n    }\n  }\n  /**\n   * Performs the necessary rollback action to restore the browser URL to the\n   * state before the transition.\n   */\n  restoreHistory(navigation, restoringFromCaughtError = false) {\n    if (this.canceledNavigationResolution === 'computed') {\n      const currentBrowserPageId = this.browserPageId;\n      const targetPagePosition = this.currentPageId - currentBrowserPageId;\n      if (targetPagePosition !== 0) {\n        this.location.historyGo(targetPagePosition);\n      } else if (this.currentUrlTree === navigation.finalUrl && targetPagePosition === 0) {\n        // We got to the activation stage (where currentUrlTree is set to the navigation's\n        // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n        // We still need to reset the router state back to what it was when the navigation started.\n        this.resetState(navigation);\n        this.resetUrlToCurrentUrlTree();\n      } else {\n        // The browser URL and router state was not updated before the navigation cancelled so\n        // there's no restoration needed.\n      }\n    } else if (this.canceledNavigationResolution === 'replace') {\n      // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n      // for `deferred` navigations that haven't change the internal state yet because guards\n      // reject. For 'eager' navigations, it seems like we also really should reset the state\n      // because the navigation was cancelled. Investigate if this can be done by running TGP.\n      if (restoringFromCaughtError) {\n        this.resetState(navigation);\n      }\n      this.resetUrlToCurrentUrlTree();\n    }\n  }\n  resetState(navigation) {\n    this.routerState = this.stateMemento.routerState;\n    this.currentUrlTree = this.stateMemento.currentUrlTree;\n    // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n    // configured to handle only part of the navigation URL. This means we would only want to reset\n    // the part of the navigation handled by the Angular router rather than the whole URL. In\n    // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n    // when merging, such as the query params so they are not lost on a refresh.\n    this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, navigation.finalUrl ?? this.rawUrlTree);\n  }\n  resetUrlToCurrentUrlTree() {\n    this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n  }\n  generateNgRouterState(navigationId, routerPageId) {\n    if (this.canceledNavigationResolution === 'computed') {\n      return {\n        navigationId,\n        ɵrouterPageId: routerPageId\n      };\n    }\n    return {\n      navigationId\n    };\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵHistoryStateManager_BaseFactory;\n      return function HistoryStateManager_Factory(t) {\n        return (ɵHistoryStateManager_BaseFactory || (ɵHistoryStateManager_BaseFactory = i0.ɵɵgetInheritedFactory(HistoryStateManager)))(t || HistoryStateManager);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HistoryStateManager,\n      factory: HistoryStateManager.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HistoryStateManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nvar NavigationResult;\n(function (NavigationResult) {\n  NavigationResult[NavigationResult[\"COMPLETE\"] = 0] = \"COMPLETE\";\n  NavigationResult[NavigationResult[\"FAILED\"] = 1] = \"FAILED\";\n  NavigationResult[NavigationResult[\"REDIRECTING\"] = 2] = \"REDIRECTING\";\n})(NavigationResult || (NavigationResult = {}));\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n  router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError || e instanceof NavigationSkipped), map(e => {\n    if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n      return NavigationResult.COMPLETE;\n    }\n    const redirecting = e instanceof NavigationCancel ? e.code === NavigationCancellationCode.Redirect || e.code === NavigationCancellationCode.SupersededByNewNavigation : false;\n    return redirecting ? NavigationResult.REDIRECTING : NavigationResult.FAILED;\n  }), filter(result => result !== NavigationResult.REDIRECTING), take(1)).subscribe(() => {\n    action();\n  });\n}\nfunction defaultErrorHandler(error) {\n  throw error;\n}\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n  paths: 'exact',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'exact'\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n  paths: 'subset',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'subset'\n};\n/**\n * @description\n *\n * A service that provides navigation among views and URL manipulation capabilities.\n *\n * @see {@link Route}\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass Router {\n  get currentUrlTree() {\n    return this.stateManager.getCurrentUrlTree();\n  }\n  get rawUrlTree() {\n    return this.stateManager.getRawUrlTree();\n  }\n  /**\n   * An event stream for routing events.\n   */\n  get events() {\n    // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n    // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n    // allowed/supported but we still have to fix these or file bugs against the teams before making\n    // the change.\n    return this._events;\n  }\n  /**\n   * The current state of routing in this NgModule.\n   */\n  get routerState() {\n    return this.stateManager.getRouterState();\n  }\n  constructor() {\n    this.disposed = false;\n    this.isNgZoneEnabled = false;\n    this.console = inject(ɵConsole);\n    this.stateManager = inject(StateManager);\n    this.options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    this.pendingTasks = inject(ɵPendingTasks);\n    this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    this.navigationTransitions = inject(NavigationTransitions);\n    this.urlSerializer = inject(UrlSerializer);\n    this.location = inject(Location);\n    this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n    /**\n     * The private `Subject` type for the public events exposed in the getter. This is used internally\n     * to push events to. The separate field allows us to expose separate types in the public API\n     * (i.e., an Observable rather than the Subject).\n     */\n    this._events = new Subject();\n    /**\n     * A handler for navigation errors in this NgModule.\n     *\n     * @deprecated Subscribe to the `Router` events and watch for `NavigationError` instead.\n     *   `provideRouter` has the `withNavigationErrorHandler` feature to make this easier.\n     * @see {@link withNavigationErrorHandler}\n     */\n    this.errorHandler = this.options.errorHandler || defaultErrorHandler;\n    /**\n     * True if at least one navigation event has occurred,\n     * false otherwise.\n     */\n    this.navigated = false;\n    /**\n     * A strategy for re-using routes.\n     *\n     * @deprecated Configure using `providers` instead:\n     *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n     */\n    this.routeReuseStrategy = inject(RouteReuseStrategy);\n    /**\n     * How to handle a navigation request to the current URL.\n     *\n     *\n     * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n     * @see {@link withRouterConfig}\n     * @see {@link provideRouter}\n     * @see {@link RouterModule}\n     */\n    this.onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n    this.config = inject(ROUTES, {\n      optional: true\n    })?.flat() ?? [];\n    /**\n     * Indicates whether the application has opted in to binding Router data to component inputs.\n     *\n     * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n     * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n     */\n    this.componentInputBindingEnabled = !!inject(INPUT_BINDER, {\n      optional: true\n    });\n    this.eventsSubscription = new Subscription();\n    this.isNgZoneEnabled = inject(NgZone) instanceof NgZone && NgZone.isInAngularZone();\n    this.resetConfig(this.config);\n    this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe({\n      error: e => {\n        this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n      }\n    });\n    this.subscribeToNavigationEvents();\n  }\n  subscribeToNavigationEvents() {\n    const subscription = this.navigationTransitions.events.subscribe(e => {\n      try {\n        const currentTransition = this.navigationTransitions.currentTransition;\n        const currentNavigation = this.navigationTransitions.currentNavigation;\n        if (currentTransition !== null && currentNavigation !== null) {\n          this.stateManager.handleRouterEvent(e, currentNavigation);\n          if (e instanceof NavigationCancel && e.code !== NavigationCancellationCode.Redirect && e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n            // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n            // however it's how things were written initially. Investigation would need to be done\n            // to determine if this can be removed.\n            this.navigated = true;\n          } else if (e instanceof NavigationEnd) {\n            this.navigated = true;\n          } else if (e instanceof RedirectRequest) {\n            const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n            const extras = {\n              // Persist transient navigation info from the original navigation request.\n              info: currentTransition.extras.info,\n              skipLocationChange: currentTransition.extras.skipLocationChange,\n              // The URL is already updated at this point if we have 'eager' URL\n              // updates or if the navigation was triggered by the browser (back\n              // button, URL bar, etc). We want to replace that item in history\n              // if the navigation is rejected.\n              replaceUrl: this.urlUpdateStrategy === 'eager' || isBrowserTriggeredNavigation(currentTransition.source)\n            };\n            this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n              resolve: currentTransition.resolve,\n              reject: currentTransition.reject,\n              promise: currentTransition.promise\n            });\n          }\n        }\n        // Note that it's important to have the Router process the events _before_ the event is\n        // pushed through the public observable. This ensures the correct router state is in place\n        // before applications observe the events.\n        if (isPublicRouterEvent(e)) {\n          this._events.next(e);\n        }\n      } catch (e) {\n        this.navigationTransitions.transitionAbortSubject.next(e);\n      }\n    });\n    this.eventsSubscription.add(subscription);\n  }\n  /** @internal */\n  resetRootComponentType(rootComponentType) {\n    // TODO: vsavkin router 4.0 should make the root component set to null\n    // this will simplify the lifecycle of the router.\n    this.routerState.root.component = rootComponentType;\n    this.navigationTransitions.rootComponentType = rootComponentType;\n  }\n  /**\n   * Sets up the location change listener and performs the initial navigation.\n   */\n  initialNavigation() {\n    this.setUpLocationChangeListener();\n    if (!this.navigationTransitions.hasRequestedNavigation) {\n      this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n    }\n  }\n  /**\n   * Sets up the location change listener. This listener detects navigations triggered from outside\n   * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n   * navigation so that the correct events, guards, etc. are triggered.\n   */\n  setUpLocationChangeListener() {\n    // Don't need to use Zone.wrap any more, because zone.js\n    // already patch onPopState, so location change callback will\n    // run into ngZone\n    this.nonRouterCurrentEntryChangeSubscription ??= this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state) => {\n      // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n      // hybrid apps.\n      setTimeout(() => {\n        this.navigateToSyncWithBrowser(url, 'popstate', state);\n      }, 0);\n    });\n  }\n  /**\n   * Schedules a router navigation to synchronize Router state with the browser state.\n   *\n   * This is done as a response to a popstate event and the initial navigation. These\n   * two scenarios represent times when the browser URL/state has been updated and\n   * the Router needs to respond to ensure its internal state matches.\n   */\n  navigateToSyncWithBrowser(url, source, state) {\n    const extras = {\n      replaceUrl: true\n    };\n    // TODO: restoredState should always include the entire state, regardless\n    // of navigationId. This requires a breaking change to update the type on\n    // NavigationStart’s restoredState, which currently requires navigationId\n    // to always be present. The Router used to only restore history state if\n    // a navigationId was present.\n    // The stored navigationId is used by the RouterScroller to retrieve the scroll\n    // position for the page.\n    const restoredState = state?.navigationId ? state : null;\n    // Separate to NavigationStart.restoredState, we must also restore the state to\n    // history.state and generate a new navigationId, since it will be overwritten\n    if (state) {\n      const stateCopy = {\n        ...state\n      };\n      delete stateCopy.navigationId;\n      delete stateCopy.ɵrouterPageId;\n      if (Object.keys(stateCopy).length !== 0) {\n        extras.state = stateCopy;\n      }\n    }\n    const urlTree = this.parseUrl(url);\n    this.scheduleNavigation(urlTree, source, restoredState, extras);\n  }\n  /** The current URL. */\n  get url() {\n    return this.serializeUrl(this.currentUrlTree);\n  }\n  /**\n   * Returns the current `Navigation` object when the router is navigating,\n   * and `null` when idle.\n   */\n  getCurrentNavigation() {\n    return this.navigationTransitions.currentNavigation;\n  }\n  /**\n   * The `Navigation` object of the most recent navigation to succeed and `null` if there\n   *     has not been a successful navigation yet.\n   */\n  get lastSuccessfulNavigation() {\n    return this.navigationTransitions.lastSuccessfulNavigation;\n  }\n  /**\n   * Resets the route configuration used for navigation and generating links.\n   *\n   * @param config The route array for the new configuration.\n   *\n   * @usageNotes\n   *\n   * ```\n   * router.resetConfig([\n   *  { path: 'team/:id', component: TeamCmp, children: [\n   *    { path: 'simple', component: SimpleCmp },\n   *    { path: 'user/:name', component: UserCmp }\n   *  ]}\n   * ]);\n   * ```\n   */\n  resetConfig(config) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n    this.config = config.map(standardizeConfig);\n    this.navigated = false;\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.dispose();\n  }\n  /** Disposes of the router. */\n  dispose() {\n    this.navigationTransitions.complete();\n    if (this.nonRouterCurrentEntryChangeSubscription) {\n      this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n      this.nonRouterCurrentEntryChangeSubscription = undefined;\n    }\n    this.disposed = true;\n    this.eventsSubscription.unsubscribe();\n  }\n  /**\n   * Appends URL segments to the current URL tree to create a new URL tree.\n   *\n   * @param commands An array of URL fragments with which to construct the new URL tree.\n   * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n   * segments, followed by the parameters for each segment.\n   * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n   * property of the options object, if supplied.\n   * @param navigationExtras Options that control the navigation strategy.\n   * @returns The new URL tree.\n   *\n   * @usageNotes\n   *\n   * ```\n   * // create /team/33/user/11\n   * router.createUrlTree(['/team', 33, 'user', 11]);\n   *\n   * // create /team/33;expand=true/user/11\n   * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n   *\n   * // you can collapse static segments like this (this works only with the first passed-in value):\n   * router.createUrlTree(['/team/33/user', userId]);\n   *\n   * // If the first segment can contain slashes, and you do not want the router to split it,\n   * // you can do the following:\n   * router.createUrlTree([{segmentPath: '/one/two'}]);\n   *\n   * // create /team/33/(user/11//right:chat)\n   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n   *\n   * // remove the right secondary node\n   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n   *\n   * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n   *\n   * // navigate to /team/33/user/11/details\n   * router.createUrlTree(['details'], {relativeTo: route});\n   *\n   * // navigate to /team/33/user/22\n   * router.createUrlTree(['../22'], {relativeTo: route});\n   *\n   * // navigate to /team/44/user/22\n   * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n   *\n   * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n   * tree should be created relative to the root.\n   * ```\n   */\n  createUrlTree(commands, navigationExtras = {}) {\n    const {\n      relativeTo,\n      queryParams,\n      fragment,\n      queryParamsHandling,\n      preserveFragment\n    } = navigationExtras;\n    const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n    let q = null;\n    switch (queryParamsHandling) {\n      case 'merge':\n        q = {\n          ...this.currentUrlTree.queryParams,\n          ...queryParams\n        };\n        break;\n      case 'preserve':\n        q = this.currentUrlTree.queryParams;\n        break;\n      default:\n        q = queryParams || null;\n    }\n    if (q !== null) {\n      q = this.removeEmptyProps(q);\n    }\n    let relativeToUrlSegmentGroup;\n    try {\n      const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n      relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n    } catch (e) {\n      // This is strictly for backwards compatibility with tests that create\n      // invalid `ActivatedRoute` mocks.\n      // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n      // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n      // the moment.\n      if (typeof commands[0] !== 'string' || !commands[0].startsWith('/')) {\n        // Navigations that were absolute in the old way of creating UrlTrees\n        // would still work because they wouldn't attempt to match the\n        // segments in the `ActivatedRoute` to the `currentUrlTree` but\n        // instead just replace the root segment with the navigation result.\n        // Non-absolute navigations would fail to apply the commands because\n        // the logic could not find the segment to replace (so they'd act like there were no\n        // commands).\n        commands = [];\n      }\n      relativeToUrlSegmentGroup = this.currentUrlTree.root;\n    }\n    return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n  }\n  /**\n   * Navigates to a view using an absolute route path.\n   *\n   * @param url An absolute path for a defined route. The function does not apply any delta to the\n   *     current URL.\n   * @param extras An object containing properties that modify the navigation strategy.\n   *\n   * @returns A Promise that resolves to 'true' when navigation succeeds,\n   * to 'false' when navigation fails, or is rejected on error.\n   *\n   * @usageNotes\n   *\n   * The following calls request navigation to an absolute path.\n   *\n   * ```\n   * router.navigateByUrl(\"/team/33/user/11\");\n   *\n   * // Navigate without updating the URL\n   * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n   * ```\n   *\n   * @see [Routing and Navigation guide](guide/router)\n   *\n   */\n  navigateByUrl(url, extras = {\n    skipLocationChange: false\n  }) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n        this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n      }\n    }\n    const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n    const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n    return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n  }\n  /**\n   * Navigate based on the provided array of commands and a starting point.\n   * If no starting route is provided, the navigation is absolute.\n   *\n   * @param commands An array of URL fragments with which to construct the target URL.\n   * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n   * segments, followed by the parameters for each segment.\n   * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n   * of the options object, if supplied.\n   * @param extras An options object that determines how the URL should be constructed or\n   *     interpreted.\n   *\n   * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n   *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n   * not `true`.\n   *\n   * @usageNotes\n   *\n   * The following calls request navigation to a dynamic route path relative to the current URL.\n   *\n   * ```\n   * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n   *\n   * // Navigate without updating the URL, overriding the default behavior\n   * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n   * ```\n   *\n   * @see [Routing and Navigation guide](guide/router)\n   *\n   */\n  navigate(commands, extras = {\n    skipLocationChange: false\n  }) {\n    validateCommands(commands);\n    return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n  }\n  /** Serializes a `UrlTree` into a string */\n  serializeUrl(url) {\n    return this.urlSerializer.serialize(url);\n  }\n  /** Parses a string into a `UrlTree` */\n  parseUrl(url) {\n    try {\n      return this.urlSerializer.parse(url);\n    } catch {\n      return this.urlSerializer.parse('/');\n    }\n  }\n  isActive(url, matchOptions) {\n    let options;\n    if (matchOptions === true) {\n      options = {\n        ...exactMatchOptions\n      };\n    } else if (matchOptions === false) {\n      options = {\n        ...subsetMatchOptions\n      };\n    } else {\n      options = matchOptions;\n    }\n    if (isUrlTree(url)) {\n      return containsTree(this.currentUrlTree, url, options);\n    }\n    const urlTree = this.parseUrl(url);\n    return containsTree(this.currentUrlTree, urlTree, options);\n  }\n  removeEmptyProps(params) {\n    return Object.entries(params).reduce((result, [key, value]) => {\n      if (value !== null && value !== undefined) {\n        result[key] = value;\n      }\n      return result;\n    }, {});\n  }\n  scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n    if (this.disposed) {\n      return Promise.resolve(false);\n    }\n    let resolve;\n    let reject;\n    let promise;\n    if (priorPromise) {\n      resolve = priorPromise.resolve;\n      reject = priorPromise.reject;\n      promise = priorPromise.promise;\n    } else {\n      promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n      });\n    }\n    // Indicate that the navigation is happening.\n    const taskId = this.pendingTasks.add();\n    afterNextNavigation(this, () => {\n      // Remove pending task in a microtask to allow for cancelled\n      // initial navigations and redirects within the same task.\n      queueMicrotask(() => this.pendingTasks.remove(taskId));\n    });\n    this.navigationTransitions.handleNavigationRequest({\n      source,\n      restoredState,\n      currentUrlTree: this.currentUrlTree,\n      currentRawUrl: this.currentUrlTree,\n      rawUrl,\n      extras,\n      resolve,\n      reject,\n      promise,\n      currentSnapshot: this.routerState.snapshot,\n      currentRouterState: this.routerState\n    });\n    // Make sure that the error is propagated even though `processNavigations` catch\n    // handler does not rethrow\n    return promise.catch(e => {\n      return Promise.reject(e);\n    });\n  }\n  static {\n    this.ɵfac = function Router_Factory(t) {\n      return new (t || Router)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Router,\n      factory: Router.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Router, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nfunction validateCommands(commands) {\n  for (let i = 0; i < commands.length; i++) {\n    const cmd = commands[i];\n    if (cmd == null) {\n      throw new ɵRuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\nfunction isPublicRouterEvent(e) {\n  return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLink {\n  constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n    this.router = router;\n    this.route = route;\n    this.tabIndexAttribute = tabIndexAttribute;\n    this.renderer = renderer;\n    this.el = el;\n    this.locationStrategy = locationStrategy;\n    /**\n     * Represents an `href` attribute value applied to a host element,\n     * when a host element is `<a>`. For other tags, the value is `null`.\n     */\n    this.href = null;\n    this.commands = null;\n    /** @internal */\n    this.onChanges = new Subject();\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#preserveFragment}\n     * @see {@link Router#createUrlTree}\n     */\n    this.preserveFragment = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#skipLocationChange}\n     * @see {@link Router#navigateByUrl}\n     */\n    this.skipLocationChange = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#replaceUrl}\n     * @see {@link Router#navigateByUrl}\n     */\n    this.replaceUrl = false;\n    const tagName = el.nativeElement.tagName?.toLowerCase();\n    this.isAnchorElement = tagName === 'a' || tagName === 'area';\n    if (this.isAnchorElement) {\n      this.subscription = router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.updateHref();\n        }\n      });\n    } else {\n      this.setTabIndexIfNotOnNativeEl('0');\n    }\n  }\n  /**\n   * Modifies the tab index if there was not a tabindex attribute on the element during\n   * instantiation.\n   */\n  setTabIndexIfNotOnNativeEl(newTabIndex) {\n    if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n      return;\n    }\n    this.applyAttributeValue('tabindex', newTabIndex);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this.isAnchorElement) {\n      this.updateHref();\n    }\n    // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n    // to the RouterLinks it's tracking.\n    this.onChanges.next(this);\n  }\n  /**\n   * Commands to pass to {@link Router#createUrlTree}.\n   *   - **array**: commands to pass to {@link Router#createUrlTree}.\n   *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n   *   - **null|undefined**: effectively disables the `routerLink`\n   * @see {@link Router#createUrlTree}\n   */\n  set routerLink(commands) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n      this.setTabIndexIfNotOnNativeEl('0');\n    } else {\n      this.commands = null;\n      this.setTabIndexIfNotOnNativeEl(null);\n    }\n  }\n  /** @nodoc */\n  onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n    const urlTree = this.urlTree;\n    if (urlTree === null) {\n      return true;\n    }\n    if (this.isAnchorElement) {\n      if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n        return true;\n      }\n      if (typeof this.target === 'string' && this.target != '_self') {\n        return true;\n      }\n    }\n    const extras = {\n      skipLocationChange: this.skipLocationChange,\n      replaceUrl: this.replaceUrl,\n      state: this.state,\n      info: this.info\n    };\n    this.router.navigateByUrl(urlTree, extras);\n    // Return `false` for `<a>` elements to prevent default action\n    // and cancel the native behavior, since the navigation is handled\n    // by the Router.\n    return !this.isAnchorElement;\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  updateHref() {\n    const urlTree = this.urlTree;\n    this.href = urlTree !== null && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) : null;\n    const sanitizedValue = this.href === null ? null :\n    // This class represents a directive that can be added to both `<a>` elements,\n    // as well as other elements. As a result, we can't define security context at\n    // compile time. So the security context is deferred to runtime.\n    // The `ɵɵsanitizeUrlOrResourceUrl` selects the necessary sanitizer function\n    // based on the tag and property names. The logic mimics the one from\n    // `packages/compiler/src/schema/dom_security_schema.ts`, which is used at compile time.\n    //\n    // Note: we should investigate whether we can switch to using `@HostBinding('attr.href')`\n    // instead of applying a value via a renderer, after a final merge of the\n    // `RouterLinkWithHref` directive.\n    ɵɵsanitizeUrlOrResourceUrl(this.href, this.el.nativeElement.tagName.toLowerCase(), 'href');\n    this.applyAttributeValue('href', sanitizedValue);\n  }\n  applyAttributeValue(attrName, attrValue) {\n    const renderer = this.renderer;\n    const nativeElement = this.el.nativeElement;\n    if (attrValue !== null) {\n      renderer.setAttribute(nativeElement, attrName, attrValue);\n    } else {\n      renderer.removeAttribute(nativeElement, attrName);\n    }\n  }\n  get urlTree() {\n    if (this.commands === null) {\n      return null;\n    }\n    return this.router.createUrlTree(this.commands, {\n      // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n      // Otherwise, we should use the value provided by the user in the input.\n      relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: this.preserveFragment\n    });\n  }\n  static {\n    this.ɵfac = function RouterLink_Factory(t) {\n      return new (t || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLink,\n      selectors: [[\"\", \"routerLink\", \"\"]],\n      hostVars: 1,\n      hostBindings: function RouterLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) {\n            return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"target\", ctx.target);\n        }\n      },\n      inputs: {\n        target: \"target\",\n        queryParams: \"queryParams\",\n        fragment: \"fragment\",\n        queryParamsHandling: \"queryParamsHandling\",\n        state: \"state\",\n        info: \"info\",\n        relativeTo: \"relativeTo\",\n        preserveFragment: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"preserveFragment\", \"preserveFragment\", booleanAttribute],\n        skipLocationChange: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"skipLocationChange\", \"skipLocationChange\", booleanAttribute],\n        replaceUrl: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"replaceUrl\", \"replaceUrl\", booleanAttribute],\n        routerLink: \"routerLink\"\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterLink, [{\n    type: Directive,\n    args: [{\n      selector: '[routerLink]',\n      standalone: true\n    }]\n  }], () => [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i3.LocationStrategy\n  }], {\n    target: [{\n      type: HostBinding,\n      args: ['attr.target']\n    }, {\n      type: Input\n    }],\n    queryParams: [{\n      type: Input\n    }],\n    fragment: [{\n      type: Input\n    }],\n    queryParamsHandling: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    info: [{\n      type: Input\n    }],\n    relativeTo: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    skipLocationChange: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    replaceUrl: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    routerLink: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event.button', '$event.ctrlKey', '$event.shiftKey', '$event.altKey', '$event.metaKey']]\n    }]\n  });\n})();\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkActive {\n  get isActive() {\n    return this._isActive;\n  }\n  constructor(router, element, renderer, cdr, link) {\n    this.router = router;\n    this.element = element;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.link = link;\n    this.classes = [];\n    this._isActive = false;\n    /**\n     * Options to configure how to determine if the router link is active.\n     *\n     * These options are passed to the `Router.isActive()` function.\n     *\n     * @see {@link Router#isActive}\n     */\n    this.routerLinkActiveOptions = {\n      exact: false\n    };\n    /**\n     *\n     * You can use the output `isActiveChange` to get notified each time the link becomes\n     * active or inactive.\n     *\n     * Emits:\n     * true  -> Route is active\n     * false -> Route is inactive\n     *\n     * ```\n     * <a\n     *  routerLink=\"/user/bob\"\n     *  routerLinkActive=\"active-link\"\n     *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n     * ```\n     */\n    this.isActiveChange = new EventEmitter();\n    this.routerEventsSubscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n  /** @nodoc */\n  ngAfterContentInit() {\n    // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n    of(this.links.changes, of(null)).pipe(mergeAll()).subscribe(_ => {\n      this.update();\n      this.subscribeToEachLinkOnChanges();\n    });\n  }\n  subscribeToEachLinkOnChanges() {\n    this.linkInputChangesSubscription?.unsubscribe();\n    const allLinkChanges = [...this.links.toArray(), this.link].filter(link => !!link).map(link => link.onChanges);\n    this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n      if (this._isActive !== this.isLinkActive(this.router)(link)) {\n        this.update();\n      }\n    });\n  }\n  set routerLinkActive(data) {\n    const classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this.update();\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.routerEventsSubscription.unsubscribe();\n    this.linkInputChangesSubscription?.unsubscribe();\n  }\n  update() {\n    if (!this.links || !this.router.navigated) return;\n    queueMicrotask(() => {\n      const hasActiveLinks = this.hasActiveLinks();\n      this.classes.forEach(c => {\n        if (hasActiveLinks) {\n          this.renderer.addClass(this.element.nativeElement, c);\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, c);\n        }\n      });\n      if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n        this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n      } else {\n        this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n      }\n      // Only emit change if the active state changed.\n      if (this._isActive !== hasActiveLinks) {\n        this._isActive = hasActiveLinks;\n        this.cdr.markForCheck();\n        // Emit on isActiveChange after classes are updated\n        this.isActiveChange.emit(hasActiveLinks);\n      }\n    });\n  }\n  isLinkActive(router) {\n    const options = isActiveMatchOptions(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions :\n    // While the types should disallow `undefined` here, it's possible without strict inputs\n    this.routerLinkActiveOptions.exact || false;\n    return link => {\n      const urlTree = link.urlTree;\n      return urlTree ? router.isActive(urlTree, options) : false;\n    };\n  }\n  hasActiveLinks() {\n    const isActiveCheckFn = this.isLinkActive(this.router);\n    return this.link && isActiveCheckFn(this.link) || this.links.some(isActiveCheckFn);\n  }\n  static {\n    this.ɵfac = function RouterLinkActive_Factory(t) {\n      return new (t || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLinkActive,\n      selectors: [[\"\", \"routerLinkActive\", \"\"]],\n      contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n        }\n      },\n      inputs: {\n        routerLinkActiveOptions: \"routerLinkActiveOptions\",\n        ariaCurrentWhenActive: \"ariaCurrentWhenActive\",\n        routerLinkActive: \"routerLinkActive\"\n      },\n      outputs: {\n        isActiveChange: \"isActiveChange\"\n      },\n      exportAs: [\"routerLinkActive\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterLinkActive, [{\n    type: Directive,\n    args: [{\n      selector: '[routerLinkActive]',\n      exportAs: 'routerLinkActive',\n      standalone: true\n    }]\n  }], () => [{\n    type: Router\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: RouterLink,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    links: [{\n      type: ContentChildren,\n      args: [RouterLink, {\n        descendants: true\n      }]\n    }],\n    routerLinkActiveOptions: [{\n      type: Input\n    }],\n    ariaCurrentWhenActive: [{\n      type: Input\n    }],\n    isActiveChange: [{\n      type: Output\n    }],\n    routerLinkActive: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n  return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nclass PreloadAllModules {\n  preload(route, fn) {\n    return fn().pipe(catchError(() => of(null)));\n  }\n  static {\n    this.ɵfac = function PreloadAllModules_Factory(t) {\n      return new (t || PreloadAllModules)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreloadAllModules,\n      factory: PreloadAllModules.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PreloadAllModules, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nclass NoPreloading {\n  preload(route, fn) {\n    return of(null);\n  }\n  static {\n    this.ɵfac = function NoPreloading_Factory(t) {\n      return new (t || NoPreloading)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NoPreloading,\n      factory: NoPreloading.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoPreloading, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nclass RouterPreloader {\n  constructor(router, compiler, injector, preloadingStrategy, loader) {\n    this.router = router;\n    this.injector = injector;\n    this.preloadingStrategy = preloadingStrategy;\n    this.loader = loader;\n  }\n  setUpPreloading() {\n    this.subscription = this.router.events.pipe(filter(e => e instanceof NavigationEnd), concatMap(() => this.preload())).subscribe(() => {});\n  }\n  preload() {\n    return this.processRoutes(this.injector, this.router.config);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  processRoutes(injector, routes) {\n    const res = [];\n    for (const route of routes) {\n      if (route.providers && !route._injector) {\n        route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n      }\n      const injectorForCurrentRoute = route._injector ?? injector;\n      const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n      // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n      // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n      // happens as a consequence of needing to descend into children for route matching immediately\n      // while component loading is deferred until route activation. Because `canLoad` guards can\n      // have side effects, we cannot execute them here so we instead skip preloading altogether\n      // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n      // at all. Code splitting and lazy loading is separate from client-side authorization checks\n      // and should not be used as a security measure to prevent loading of code.\n      if (route.loadChildren && !route._loadedRoutes && route.canLoad === undefined || route.loadComponent && !route._loadedComponent) {\n        res.push(this.preloadConfig(injectorForCurrentRoute, route));\n      }\n      if (route.children || route._loadedRoutes) {\n        res.push(this.processRoutes(injectorForChildren, route.children ?? route._loadedRoutes));\n      }\n    }\n    return from(res).pipe(mergeAll());\n  }\n  preloadConfig(injector, route) {\n    return this.preloadingStrategy.preload(route, () => {\n      let loadedChildren$;\n      if (route.loadChildren && route.canLoad === undefined) {\n        loadedChildren$ = this.loader.loadChildren(injector, route);\n      } else {\n        loadedChildren$ = of(null);\n      }\n      const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap(config => {\n        if (config === null) {\n          return of(void 0);\n        }\n        route._loadedRoutes = config.routes;\n        route._loadedInjector = config.injector;\n        // If the loaded config was a module, use that as the module/module injector going\n        // forward. Otherwise, continue using the current module/module injector.\n        return this.processRoutes(config.injector ?? injector, config.routes);\n      }));\n      if (route.loadComponent && !route._loadedComponent) {\n        const loadComponent$ = this.loader.loadComponent(route);\n        return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n      } else {\n        return recursiveLoadChildren$;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RouterPreloader_Factory(t) {\n      return new (t || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(PreloadingStrategy), i0.ɵɵinject(RouterConfigLoader));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterPreloader,\n      factory: RouterPreloader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterPreloader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: Router\n  }, {\n    type: i0.Compiler\n  }, {\n    type: i0.EnvironmentInjector\n  }, {\n    type: PreloadingStrategy\n  }, {\n    type: RouterConfigLoader\n  }], null);\n})();\nconst ROUTER_SCROLLER = new InjectionToken('');\nclass RouterScroller {\n  /** @nodoc */\n  constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n    this.urlSerializer = urlSerializer;\n    this.transitions = transitions;\n    this.viewportScroller = viewportScroller;\n    this.zone = zone;\n    this.options = options;\n    this.lastId = 0;\n    this.lastSource = 'imperative';\n    this.restoredId = 0;\n    this.store = {};\n    this.environmentInjector = inject(EnvironmentInjector);\n    // Default both options to 'disabled'\n    options.scrollPositionRestoration ||= 'disabled';\n    options.anchorScrolling ||= 'disabled';\n  }\n  init() {\n    // we want to disable the automatic scrolling because having two places\n    // responsible for scrolling results race conditions, especially given\n    // that browser don't implement this behavior consistently\n    if (this.options.scrollPositionRestoration !== 'disabled') {\n      this.viewportScroller.setHistoryScrollRestoration('manual');\n    }\n    this.routerEventsSubscription = this.createScrollEvents();\n    this.scrollEventsSubscription = this.consumeScrollEvents();\n  }\n  createScrollEvents() {\n    return this.transitions.events.subscribe(e => {\n      if (e instanceof NavigationStart) {\n        // store the scroll position of the current stable navigations.\n        this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n        this.lastSource = e.navigationTrigger;\n        this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n      } else if (e instanceof NavigationEnd) {\n        this.lastId = e.id;\n        this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n      } else if (e instanceof NavigationSkipped && e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n        this.lastSource = undefined;\n        this.restoredId = 0;\n        this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n      }\n    });\n  }\n  consumeScrollEvents() {\n    return this.transitions.events.subscribe(e => {\n      if (!(e instanceof Scroll)) return;\n      // a popstate event. The pop state event will always ignore anchor scrolling.\n      if (e.position) {\n        if (this.options.scrollPositionRestoration === 'top') {\n          this.viewportScroller.scrollToPosition([0, 0]);\n        } else if (this.options.scrollPositionRestoration === 'enabled') {\n          this.viewportScroller.scrollToPosition(e.position);\n        }\n        // imperative navigation \"forward\"\n      } else {\n        if (e.anchor && this.options.anchorScrolling === 'enabled') {\n          this.viewportScroller.scrollToAnchor(e.anchor);\n        } else if (this.options.scrollPositionRestoration !== 'disabled') {\n          this.viewportScroller.scrollToPosition([0, 0]);\n        }\n      }\n    });\n  }\n  scheduleScrollEvent(routerEvent, anchor) {\n    this.zone.runOutsideAngular(async () => {\n      // The scroll event needs to be delayed until after change detection. Otherwise we may\n      // attempt to restore the scroll position before the router outlet has fully rendered the\n      // component by executing its update block of the template function.\n      await new Promise(resolve => {\n        // TODO(atscott): Attempt to remove the setTimeout in a future PR.\n        setTimeout(() => {\n          resolve();\n        });\n        afterNextRender(() => {\n          resolve();\n        }, {\n          injector: this.environmentInjector\n        });\n      });\n      this.zone.run(() => {\n        this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n      });\n    });\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.routerEventsSubscription?.unsubscribe();\n    this.scrollEventsSubscription?.unsubscribe();\n  }\n  static {\n    this.ɵfac = function RouterScroller_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterScroller,\n      factory: RouterScroller.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterScroller, [{\n    type: Injectable\n  }], () => [{\n    type: UrlSerializer\n  }, {\n    type: NavigationTransitions\n  }, {\n    type: i3.ViewportScroller\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }], null);\n})();\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n  return makeEnvironmentProviders([{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n    provide: ROUTER_IS_PROVIDED,\n    useValue: true\n  } : [], {\n    provide: ActivatedRoute,\n    useFactory: rootRoute,\n    deps: [Router]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: getBootstrapListener\n  }, features.map(feature => feature.ɵproviders)]);\n}\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = new InjectionToken('', {\n  providedIn: 'root',\n  factory: () => false\n});\nconst routerIsProvidedDevModeCheck = {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => {\n      if (!inject(ROUTER_IS_PROVIDED)) {\n        console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' + 'This is likely a mistake.');\n      }\n    };\n  }\n};\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n  return [{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : []];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n  const providers = [{\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n    }\n  }];\n  return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n  const injector = inject(Injector);\n  return bootstrappedComponentRef => {\n    const ref = injector.get(ApplicationRef);\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n    const router = injector.get(Router);\n    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n    if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n      router.initialNavigation();\n    }\n    injector.get(ROUTER_PRELOADER, null, InjectFlags.Optional)?.setUpPreloading();\n    injector.get(ROUTER_SCROLLER, null, InjectFlags.Optional)?.init();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    if (!bootstrapDone.closed) {\n      bootstrapDone.next();\n      bootstrapDone.complete();\n      bootstrapDone.unsubscribe();\n    }\n  };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n  factory: () => {\n    return new Subject();\n  }\n});\nconst INITIAL_NAVIGATION = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', {\n  providedIn: 'root',\n  factory: () => 1 /* InitialNavigation.EnabledNonBlocking */\n});\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This value is required for\n * [server-side rendering](guide/ssr) to work.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n  const providers = [{\n    provide: INITIAL_NAVIGATION,\n    useValue: 0 /* InitialNavigation.EnabledBlocking */\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [Injector],\n    useFactory: injector => {\n      const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n      return () => {\n        return locationInitialized.then(() => {\n          return new Promise(resolve => {\n            const router = injector.get(Router);\n            const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n            afterNextNavigation(router, () => {\n              // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n              // without a redirect.\n              resolve(true);\n            });\n            injector.get(NavigationTransitions).afterPreactivation = () => {\n              // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n              // assume activation will complete successfully (even though this is not\n              // guaranteed).\n              resolve(true);\n              return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n            };\n            router.initialNavigation();\n          });\n        });\n      };\n    }\n  }];\n  return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n  const providers = [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: () => {\n      const router = inject(Router);\n      return () => {\n        router.setUpLocationChangeListener();\n      };\n    }\n  }, {\n    provide: INITIAL_NAVIGATION,\n    useValue: 2 /* InitialNavigation.Disabled */\n  }];\n  return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n  let providers = [];\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    providers = [{\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useFactory: () => {\n        const router = inject(Router);\n        return () => router.events.subscribe(e => {\n          // tslint:disable:no-console\n          console.group?.(`Router Event: ${e.constructor.name}`);\n          console.log(stringifyEvent(e));\n          console.log(e);\n          console.groupEnd?.();\n          // tslint:enable:no-console\n        });\n      }\n    }];\n  } else {\n    providers = [];\n  }\n  return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n  const providers = [{\n    provide: ROUTER_PRELOADER,\n    useExisting: RouterPreloader\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: preloadingStrategy\n  }];\n  return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n  const providers = [{\n    provide: ROUTER_CONFIGURATION,\n    useValue: options\n  }];\n  return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n  const providers = [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }];\n  return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Subscribes to the Router's navigation events and calls the given function when a\n * `NavigationError` happens.\n *\n * This function is run inside application's [injection context](guide/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link core/inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(fn) {\n  const providers = [{\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      const injector = inject(EnvironmentInjector);\n      inject(Router).events.subscribe(e => {\n        if (e instanceof NavigationError) {\n          runInInjectionContext(injector, () => fn(e));\n        }\n      });\n    }\n  }];\n  return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n  const providers = [RoutedComponentInputBinder, {\n    provide: INPUT_BINDER,\n    useExisting: RoutedComponentInputBinder\n  }];\n  return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @experimental\n */\nfunction withViewTransitions(options) {\n  const providers = [{\n    provide: CREATE_VIEW_TRANSITION,\n    useValue: createViewTransition\n  }, {\n    provide: VIEW_TRANSITION_OPTIONS,\n    useValue: {\n      skipNextTransition: !!options?.skipInitialTransition,\n      ...options\n    }\n  }];\n  return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, Router, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, RouterConfigLoader,\n// Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n// be removed when `provideRoutes` is removed.\ntypeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: ROUTER_IS_PROVIDED,\n  useValue: true\n} : []];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/router) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nclass RouterModule {\n  constructor(guard) {}\n  /**\n   * Creates and configures a module with all the router providers and directives.\n   * Optionally sets up an application listener to perform an initial navigation.\n   *\n   * When registering the NgModule at the root, import as follows:\n   *\n   * ```\n   * @NgModule({\n   *   imports: [RouterModule.forRoot(ROUTES)]\n   * })\n   * class MyNgModule {}\n   * ```\n   *\n   * @param routes An array of `Route` objects that define the navigation paths for the application.\n   * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n   * @return The new `NgModule`.\n   *\n   */\n  static forRoot(routes, config) {\n    return {\n      ngModule: RouterModule,\n      providers: [ROUTER_PROVIDERS, typeof ngDevMode === 'undefined' || ngDevMode ? config?.enableTracing ? withDebugTracing().ɵproviders : [] : [], {\n        provide: ROUTES,\n        multi: true,\n        useValue: routes\n      }, {\n        provide: ROUTER_FORROOT_GUARD,\n        useFactory: provideForRootGuard,\n        deps: [[Router, new Optional(), new SkipSelf()]]\n      }, {\n        provide: ROUTER_CONFIGURATION,\n        useValue: config ? config : {}\n      }, config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(), provideRouterScroller(), config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [], config?.initialNavigation ? provideInitialNavigation(config) : [], config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [], config?.enableViewTransitions ? withViewTransitions().ɵproviders : [], provideRouterInitializer()]\n    };\n  }\n  /**\n   * Creates a module with all the router directives and a provider registering routes,\n   * without creating a new Router service.\n   * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n   *\n   * ```\n   * @NgModule({\n   *   imports: [RouterModule.forChild(ROUTES)]\n   * })\n   * class MyNgModule {}\n   * ```\n   *\n   * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n   * @return The new NgModule.\n   *\n   */\n  static forChild(routes) {\n    return {\n      ngModule: RouterModule,\n      providers: [{\n        provide: ROUTES,\n        multi: true,\n        useValue: routes\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function RouterModule_Factory(t) {\n      return new (t || RouterModule)(i0.ɵɵinject(ROUTER_FORROOT_GUARD, 8));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RouterModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterModule, [{\n    type: NgModule,\n    args: [{\n      imports: ROUTER_DIRECTIVES,\n      exports: ROUTER_DIRECTIVES\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ROUTER_FORROOT_GUARD]\n    }]\n  }], null);\n})();\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n  return {\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const config = inject(ROUTER_CONFIGURATION);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n      }\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n    }\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy\n  };\n}\nfunction provideForRootGuard(router) {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && router) {\n    throw new ɵRuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` + ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n  return [config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [], config.initialNavigation === 'enabledBlocking' ? withEnabledBlockingInitialNavigation().ɵproviders : []];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n  return [\n  // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n  // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n  {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n  return providers.map(provider => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n  return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.10');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLink as RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, createUrlTreeFromSnapshot, defaultUrlMatcher, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, afterNextNavigation as ɵafterNextNavigation, loadChildren as ɵloadChildren };\n","import { KeyValuePair } from \"../../shared/interfaces/common.interface\";\r\n\r\nexport enum RouteEnum {\r\n\tHEROES = \"heroes\",\r\n}\r\n\r\nexport enum HeroSubRouteEnum {\r\n\tLIST = `list`,\r\n\tCREATE = `create`,\r\n\tEDIT = `edit`,\r\n}\r\n\r\nexport const NavbarRoutesLocalized: KeyValuePair[] = [\r\n\t{ key: `${RouteEnum.HEROES}/${HeroSubRouteEnum.LIST}`, value: $localize`:@@NavbarRoutes.Heroes:Heroes` },\r\n];\r\n","import { HeroSecretIdentityStatus, HeroSuperpower, HeroTeamAffiliation } from \"../../../../../../../back/src/enums/hero.enum\";\r\nimport { IHero } from \"../../../../../../../back/src/interfaces/hero.interface\";\r\n\r\n\r\nexport const HeroKeysLocalized: Record<keyof IHero, string> = {\r\n\t[\"id\"]: $localize`:@@HeroKeys.ID:ID`,\r\n\t[\"first_name\"]: $localize`:@@HeroKeys.FirstName:First Name`,\r\n\t[\"last_name\"]: $localize`:@@HeroKeys.LastName:Last Name`,\r\n\t[\"hero_name\"]: $localize`:@@HeroKeys.HeroName:Hero Name`,\r\n\t[\"birth_date\"]: $localize`:@@HeroKeys.BirthDate:Birth Date`,\r\n\t[\"secret_identity\"]: $localize`:@@HeroKeys.SecretIdentity:Secret Identity`,\r\n\t[\"gender\"]: $localize`:@@HeroKeys.Gender:Gender`,\r\n\t[\"superpower\"]: $localize`:@@HeroKeys.Superpower:Super Power`,\r\n\t[\"team_affiliation\"]: $localize`:@@HeroKeys.TeamAffiliation:Team Affiliation`,\r\n};\r\n\r\nexport const HeroSecretIdentityStatusLocalized: Record<HeroSecretIdentityStatus, string> = {\r\n\t[\"public\"]: $localize`:@@HeroSecretIdentityStatus.Public:Public`,\r\n\t[\"secret\"]: $localize`:@@HeroSecretIdentityStatus.Secret:Secret`,\r\n};\r\n\r\nexport const HeroSuperpowerLocalized: Record<HeroSuperpower, string> = {\r\n\t[\"flight\"]: $localize`:@@HeroSuperpower.Flight:Flight`,\r\n\t[\"super-strength\"]: $localize`:@@HeroSuperpower.SuperStrength:Super Strength`,\r\n\t[\"invisibility\"]: $localize`:@@HeroSuperpower.Invisibility:Invisibility`,\r\n\t[\"telekinesis\"]: $localize`:@@HeroSuperpower.Telekinesis:Telekinesis`,\r\n\t[\"teleportation\"]: $localize`:@@HeroSuperpower.Teleportation:Teleportation`,\r\n};\r\n\r\nexport const HeroTeamAffiliationLocalized: Record<HeroTeamAffiliation, string> = {\r\n\t[\"avengers\"]: $localize`:@@HeroTeamAffiliation.Avengers:Avengers`,\r\n\t[\"justice-league\"]: $localize`:@@HeroTeamAffiliation.JusticeLeague:Justice League`,\r\n\t[\"x-men\"]: $localize`:@@HeroTeamAffiliation.XMen:X-Men`,\r\n\t[\"fantastic-four\"]: $localize`:@@HeroTeamAffiliation.FantasticFour:Fantastic Four`,\r\n};\r\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n  constructor(_platformId) {\n    this._platformId = _platformId;\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n  }\n  static {\n    this.ɵfac = function Platform_Factory(t) {\n      return new (t || Platform)(i0.ɵɵinject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Platform,\n      factory: Platform.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nclass PlatformModule {\n  static {\n    this.ɵfac = function PlatformModule_Factory(t) {\n      return new (t || PlatformModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PlatformModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlatformModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n// first changing it to something else:\n// The specified value \"\" does not conform to the required format.\n// The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n  return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\n    // some projects stub out the global `document` during SSR which can throw us off.\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction = Element.prototype.scrollTo;\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n  return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n    scrollContainer.remove();\n  }\n  return rtlScrollAxisType;\n}\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n  }\n  return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n  return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n  let activeElement = typeof document !== 'undefined' && document ? document.activeElement : null;\n  while (activeElement && activeElement.shadowRoot) {\n    const newActiveElement = activeElement.shadowRoot.activeElement;\n    if (newActiveElement === activeElement) {\n      break;\n    } else {\n      activeElement = newActiveElement;\n    }\n  }\n  return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return event.composedPath ? event.composedPath()[0] : event.target;\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n  // We can't use `declare const` because it causes conflicts inside Google with the real typings\n  // for these symbols and we can't read them off the global object, because they don't appear to\n  // be attached there for some runners like Jest.\n  // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n  return (\n    // @ts-ignore\n    typeof __karma__ !== 'undefined' && !!__karma__ ||\n    // @ts-ignore\n    typeof jasmine !== 'undefined' && !!jasmine ||\n    // @ts-ignore\n    typeof jest !== 'undefined' && !!jest ||\n    // @ts-ignore\n    typeof Mocha !== 'undefined' && !!Mocha\n  );\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, RtlScrollAxisType, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\n\n// Angular may add, remove, or edit comment nodes during change detection. We don't care about\n// these changes because they don't affect the user-preceived content, and worse it can cause\n// infinite change detection cycles where the change detection updates a comment, triggering the\n// MutationObserver, triggering another change detection and kicking the cycle off again.\nfunction shouldIgnoreRecord(record) {\n  // Ignore changes to comment text.\n  if (record.type === 'characterData' && record.target instanceof Comment) {\n    return true;\n  }\n  // Ignore addition / removal of comments.\n  if (record.type === 'childList') {\n    for (let i = 0; i < record.addedNodes.length; i++) {\n      if (!(record.addedNodes[i] instanceof Comment)) {\n        return false;\n      }\n    }\n    for (let i = 0; i < record.removedNodes.length; i++) {\n      if (!(record.removedNodes[i] instanceof Comment)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // Observe everything else.\n  return false;\n}\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n  create(callback) {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\n  static {\n    this.ɵfac = function MutationObserverFactory_Factory(t) {\n      return new (t || MutationObserverFactory)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MutationObserverFactory,\n      factory: MutationObserverFactory.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MutationObserverFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n  constructor(_mutationObserverFactory) {\n    this._mutationObserverFactory = _mutationObserverFactory;\n    /** Keeps track of the existing MutationObservers so they can be reused. */\n    this._observedElements = new Map();\n  }\n  ngOnDestroy() {\n    this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n  }\n  observe(elementOrRef) {\n    const element = coerceElement(elementOrRef);\n    return new Observable(observer => {\n      const stream = this._observeElement(element);\n      const subscription = stream.pipe(map(records => records.filter(record => !shouldIgnoreRecord(record))), filter(records => !!records.length)).subscribe(observer);\n      return () => {\n        subscription.unsubscribe();\n        this._unobserveElement(element);\n      };\n    });\n  }\n  /**\n   * Observes the given element by using the existing MutationObserver if available, or creating a\n   * new one if not.\n   */\n  _observeElement(element) {\n    if (!this._observedElements.has(element)) {\n      const stream = new Subject();\n      const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n      if (observer) {\n        observer.observe(element, {\n          characterData: true,\n          childList: true,\n          subtree: true\n        });\n      }\n      this._observedElements.set(element, {\n        observer,\n        stream,\n        count: 1\n      });\n    } else {\n      this._observedElements.get(element).count++;\n    }\n    return this._observedElements.get(element).stream;\n  }\n  /**\n   * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n   * observing this element.\n   */\n  _unobserveElement(element) {\n    if (this._observedElements.has(element)) {\n      this._observedElements.get(element).count--;\n      if (!this._observedElements.get(element).count) {\n        this._cleanupObserver(element);\n      }\n    }\n  }\n  /** Clean up the underlying MutationObserver for the specified element. */\n  _cleanupObserver(element) {\n    if (this._observedElements.has(element)) {\n      const {\n        observer,\n        stream\n      } = this._observedElements.get(element);\n      if (observer) {\n        observer.disconnect();\n      }\n      stream.complete();\n      this._observedElements.delete(element);\n    }\n  }\n  static {\n    this.ɵfac = function ContentObserver_Factory(t) {\n      return new (t || ContentObserver)(i0.ɵɵinject(MutationObserverFactory));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ContentObserver,\n      factory: ContentObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContentObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: MutationObserverFactory\n  }], null);\n})();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n  /**\n   * Whether observing content is disabled. This option can be used\n   * to disconnect the underlying MutationObserver until it is needed.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n  /** Debounce interval for emitting the changes. */\n  get debounce() {\n    return this._debounce;\n  }\n  set debounce(value) {\n    this._debounce = coerceNumberProperty(value);\n    this._subscribe();\n  }\n  constructor(_contentObserver, _elementRef, _ngZone) {\n    this._contentObserver = _contentObserver;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /** Event emitted for each change in the element's content. */\n    this.event = new EventEmitter();\n    this._disabled = false;\n    this._currentSubscription = null;\n  }\n  ngAfterContentInit() {\n    if (!this._currentSubscription && !this.disabled) {\n      this._subscribe();\n    }\n  }\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n  _subscribe() {\n    this._unsubscribe();\n    const stream = this._contentObserver.observe(this._elementRef);\n    // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n    // Consider brining it back inside the zone next time we're making breaking changes.\n    // Bringing it back inside can cause things like infinite change detection loops and changed\n    // after checked errors if people's code isn't handling it properly.\n    this._ngZone.runOutsideAngular(() => {\n      this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    });\n  }\n  _unsubscribe() {\n    this._currentSubscription?.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CdkObserveContent_Factory(t) {\n      return new (t || CdkObserveContent)(i0.ɵɵdirectiveInject(ContentObserver), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkObserveContent,\n      selectors: [[\"\", \"cdkObserveContent\", \"\"]],\n      inputs: {\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkObserveContentDisabled\", \"disabled\", booleanAttribute],\n        debounce: \"debounce\"\n      },\n      outputs: {\n        event: \"cdkObserveContent\"\n      },\n      exportAs: [\"cdkObserveContent\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkObserveContent, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkObserveContent]',\n      exportAs: 'cdkObserveContent',\n      standalone: true\n    }]\n  }], () => [{\n    type: ContentObserver\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    event: [{\n      type: Output,\n      args: ['cdkObserveContent']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkObserveContentDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    debounce: [{\n      type: Input\n    }]\n  });\n})();\nclass ObserversModule {\n  static {\n    this.ɵfac = function ObserversModule_Factory(t) {\n      return new (t || ObserversModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ObserversModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MutationObserverFactory]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ObserversModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkObserveContent],\n      exports: [CdkObserveContent],\n      providers: [MutationObserverFactory]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nclass LayoutModule {\n  static {\n    this.ɵfac = function LayoutModule_Factory(t) {\n      return new (t || LayoutModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: LayoutModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n  constructor(_platform, _nonce) {\n    this._platform = _platform;\n    this._nonce = _nonce;\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n    // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n  matchMedia(query) {\n    if (this._platform.WEBKIT || this._platform.BLINK) {\n      createEmptyStyleRule(query, this._nonce);\n    }\n    return this._matchMedia(query);\n  }\n  static {\n    this.ɵfac = function MediaMatcher_Factory(t) {\n      return new (t || MediaMatcher)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(CSP_NONCE, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MediaMatcher,\n      factory: MediaMatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CSP_NONCE]\n    }]\n  }], null);\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      if (nonce) {\n        mediaQueryStyleNode.setAttribute('nonce', nonce);\n      }\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n  constructor(_mediaMatcher, _zone) {\n    this._mediaMatcher = _mediaMatcher;\n    this._zone = _zone;\n    /**  A map of all media queries currently being listened for. */\n    this._queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    this._destroySubject = new Subject();\n  }\n  /** Completes the active subject, signalling to all other observables to complete. */\n  ngOnDestroy() {\n    this._destroySubject.next();\n    this._destroySubject.complete();\n  }\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param value One or more media queries to check.\n   * @returns Whether any of the media queries match.\n   */\n  isMatched(value) {\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param value One or more media queries to check.\n   * @returns A stream of matches for the given queries.\n   */\n  observe(value) {\n    const queries = splitQueries(coerceArray(value));\n    const observables = queries.map(query => this._registerQuery(query).observable);\n    let stateObservable = combineLatest(observables);\n    // Emit the first state immediately, and then debounce the subsequent emissions.\n    stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n    return stateObservable.pipe(map(breakpointStates => {\n      const response = {\n        matches: false,\n        breakpoints: {}\n      };\n      breakpointStates.forEach(({\n        matches,\n        query\n      }) => {\n        response.matches = response.matches || matches;\n        response.breakpoints[query] = matches;\n      });\n      return response;\n    }));\n  }\n  /** Registers a specific query to be listened for. */\n  _registerQuery(query) {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return this._queries.get(query);\n    }\n    const mql = this._mediaMatcher.matchMedia(query);\n    // Create callback for match changes and add it is as a listener.\n    const queryObservable = new Observable(observer => {\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      const handler = e => this._zone.run(() => observer.next(e));\n      mql.addListener(handler);\n      return () => {\n        mql.removeListener(handler);\n      };\n    }).pipe(startWith(mql), map(({\n      matches\n    }) => ({\n      query,\n      matches\n    })), takeUntil(this._destroySubject));\n    // Add the MediaQueryList to the set of queries.\n    const output = {\n      observable: queryObservable,\n      mql\n    };\n    this._queries.set(query, output);\n    return output;\n  }\n  static {\n    this.ɵfac = function BreakpointObserver_Factory(t) {\n      return new (t || BreakpointObserver)(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BreakpointObserver,\n      factory: BreakpointObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: MediaMatcher\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, isSignal, effect, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  if (ids.some(existingId => existingId.trim() === id)) {\n    return;\n  }\n  ids.push(id);\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  const filteredIds = ids.filter(val => val !== id);\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  const attrValue = el.getAttribute(attr);\n  return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n  constructor(_document,\n  /**\n   * @deprecated To be turned into a required parameter.\n   * @breaking-change 14.0.0\n   */\n  _platform) {\n    this._platform = _platform;\n    /** Map of all registered message elements that have been placed into the document. */\n    this._messageRegistry = new Map();\n    /** Container for all registered messages. */\n    this._messagesContainer = null;\n    /** Unique ID for the service. */\n    this._id = `${nextId++}`;\n    this._document = _document;\n    this._id = inject(APP_ID) + '-' + nextId++;\n  }\n  describe(hostElement, message, role) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n    const key = getKey(message, role);\n    if (typeof message !== 'string') {\n      // We need to ensure that the element has an ID.\n      setMessageId(message, this._id);\n      this._messageRegistry.set(key, {\n        messageElement: message,\n        referenceCount: 0\n      });\n    } else if (!this._messageRegistry.has(key)) {\n      this._createMessageElement(message, role);\n    }\n    if (!this._isElementDescribedByMessage(hostElement, key)) {\n      this._addMessageReference(hostElement, key);\n    }\n  }\n  removeDescription(hostElement, message, role) {\n    if (!message || !this._isElementNode(hostElement)) {\n      return;\n    }\n    const key = getKey(message, role);\n    if (this._isElementDescribedByMessage(hostElement, key)) {\n      this._removeMessageReference(hostElement, key);\n    }\n    // If the message is a string, it means that it's one that we created for the\n    // consumer so we can remove it safely, otherwise we should leave it in place.\n    if (typeof message === 'string') {\n      const registeredMessage = this._messageRegistry.get(key);\n      if (registeredMessage && registeredMessage.referenceCount === 0) {\n        this._deleteMessageElement(key);\n      }\n    }\n    if (this._messagesContainer?.childNodes.length === 0) {\n      this._messagesContainer.remove();\n      this._messagesContainer = null;\n    }\n  }\n  /** Unregisters all created message elements and removes the message container. */\n  ngOnDestroy() {\n    const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n    for (let i = 0; i < describedElements.length; i++) {\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    this._messagesContainer?.remove();\n    this._messagesContainer = null;\n    this._messageRegistry.clear();\n  }\n  /**\n   * Creates a new element in the visually hidden message container element with the message\n   * as its content and adds it to the message registry.\n   */\n  _createMessageElement(message, role) {\n    const messageElement = this._document.createElement('div');\n    setMessageId(messageElement, this._id);\n    messageElement.textContent = message;\n    if (role) {\n      messageElement.setAttribute('role', role);\n    }\n    this._createMessagesContainer();\n    this._messagesContainer.appendChild(messageElement);\n    this._messageRegistry.set(getKey(message, role), {\n      messageElement,\n      referenceCount: 0\n    });\n  }\n  /** Deletes the message element from the global messages container. */\n  _deleteMessageElement(key) {\n    this._messageRegistry.get(key)?.messageElement?.remove();\n    this._messageRegistry.delete(key);\n  }\n  /** Creates the global container for all aria-describedby messages. */\n  _createMessagesContainer() {\n    if (this._messagesContainer) {\n      return;\n    }\n    const containerClassName = 'cdk-describedby-message-container';\n    const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n    for (let i = 0; i < serverContainers.length; i++) {\n      // When going from the server to the client, we may end up in a situation where there's\n      // already a container on the page, but we don't have a reference to it. Clear the\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\n      // container, should be slightly faster.\n      serverContainers[i].remove();\n    }\n    const messagesContainer = this._document.createElement('div');\n    // We add `visibility: hidden` in order to prevent text in this container from\n    // being searchable by the browser's Ctrl + F functionality.\n    // Screen-readers will still read the description for elements with aria-describedby even\n    // when the description element is not visible.\n    messagesContainer.style.visibility = 'hidden';\n    // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n    // the description element doesn't impact page layout.\n    messagesContainer.classList.add(containerClassName);\n    messagesContainer.classList.add('cdk-visually-hidden');\n    // @breaking-change 14.0.0 Remove null check for `_platform`.\n    if (this._platform && !this._platform.isBrowser) {\n      messagesContainer.setAttribute('platform', 'server');\n    }\n    this._document.body.appendChild(messagesContainer);\n    this._messagesContainer = messagesContainer;\n  }\n  /** Removes all cdk-describedby messages that are hosted through the element. */\n  _removeCdkDescribedByReferenceIds(element) {\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n  }\n  /**\n   * Adds a message reference to the element using aria-describedby and increments the registered\n   * message's reference count.\n   */\n  _addMessageReference(element, key) {\n    const registeredMessage = this._messageRegistry.get(key);\n    // Add the aria-describedby reference and set the\n    // describedby_host attribute to mark the element.\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n    registeredMessage.referenceCount++;\n  }\n  /**\n   * Removes a message reference from the element using aria-describedby\n   * and decrements the registered message's reference count.\n   */\n  _removeMessageReference(element, key) {\n    const registeredMessage = this._messageRegistry.get(key);\n    registeredMessage.referenceCount--;\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n  }\n  /** Returns true if the element has been described by the provided message ID. */\n  _isElementDescribedByMessage(element, key) {\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n    const registeredMessage = this._messageRegistry.get(key);\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\n  }\n  /** Determines whether a message can be described on a particular element. */\n  _canBeDescribed(element, message) {\n    if (!this._isElementNode(element)) {\n      return false;\n    }\n    if (message && typeof message === 'object') {\n      // We'd have to make some assumptions about the description element's text, if the consumer\n      // passed in an element. Assume that if an element is passed in, the consumer has verified\n      // that it can be used as a description.\n      return true;\n    }\n    const trimmedMessage = message == null ? '' : `${message}`.trim();\n    const ariaLabel = element.getAttribute('aria-label');\n    // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n    // element, because screen readers will end up reading out the same text twice in a row.\n    return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n  }\n  /** Checks whether a node is an Element node. */\n  _isElementNode(element) {\n    return element.nodeType === this._document.ELEMENT_NODE;\n  }\n  static {\n    this.ɵfac = function AriaDescriber_Factory(t) {\n      return new (t || AriaDescriber)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Platform));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AriaDescriber,\n      factory: AriaDescriber.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AriaDescriber, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1.Platform\n  }], null);\n})();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n  return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n  if (!element.id) {\n    element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n  }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n  constructor(_items, injector) {\n    this._items = _items;\n    this._activeItemIndex = -1;\n    this._activeItem = null;\n    this._wrap = false;\n    this._letterKeyStream = new Subject();\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._vertical = true;\n    this._allowedModifierKeys = [];\n    this._homeAndEnd = false;\n    this._pageUpAndDown = {\n      enabled: false,\n      delta: 10\n    };\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    this._skipPredicateFn = item => item.disabled;\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    this._pressedLetters = [];\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    this.tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      this._itemChangesSubscription = _items.changes.subscribe(newItems => this._itemsChanged(newItems.toArray()));\n    } else if (isSignal(_items)) {\n      if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('ListKeyManager constructed with a signal must receive an injector');\n      }\n      this._effectRef = effect(() => this._itemsChanged(_items()), {\n        injector\n      });\n    }\n  }\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate) {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true) {\n    this._wrap = shouldWrap;\n    return this;\n  }\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled = true) {\n    this._vertical = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction) {\n    this._horizontal = direction;\n    return this;\n  }\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys) {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval = 200) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const items = this._getItemsArray();\n      if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n        throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n      }\n    }\n    this._typeaheadSubscription.unsubscribe();\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n      const items = this._getItemsArray();\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n        if (!this._skipPredicateFn(item) && item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n          this.setActiveItem(index);\n          break;\n        }\n      }\n      this._pressedLetters = [];\n    });\n    return this;\n  }\n  /** Cancels the current typeahead sequence. */\n  cancelTypeahead() {\n    this._pressedLetters = [];\n    return this;\n  }\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled = true) {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n   * respectively when the Page-Up or Page-Down key is pressed.\n   * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n   * @param delta Whether pressing the Home or End key activates the first/last item.\n   */\n  withPageUpDown(enabled = true, delta = 10) {\n    this._pageUpAndDown = {\n      enabled,\n      delta\n    };\n    return this;\n  }\n  setActiveItem(item) {\n    const previousActiveItem = this._activeItem;\n    this.updateActiveItem(item);\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event) {\n    const keyCode = event.keyCode;\n    const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n      case PAGE_UP:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n          this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n          break;\n        } else {\n          return;\n        }\n      case PAGE_DOWN:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n          const itemsLength = this._getItemsArray().length;\n          this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n          break;\n        } else {\n          return;\n        }\n      default:\n        if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if (keyCode >= A && keyCode <= Z || keyCode >= ZERO && keyCode <= NINE) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  get activeItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The active item. */\n  get activeItem() {\n    return this._activeItem;\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return this._pressedLetters.length > 0;\n  }\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive() {\n    this._setActiveItemByIndex(0, 1);\n  }\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive() {\n    this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n  }\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive() {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive() {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);\n  }\n  updateActiveItem(item) {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._itemChangesSubscription?.unsubscribe();\n    this._effectRef?.destroy();\n    this._letterKeyStream.complete();\n    this.tabOut.complete();\n    this.change.complete();\n    this._pressedLetters = [];\n  }\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  _setActiveItemByDelta(delta) {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  _setActiveInWrapMode(delta) {\n    const items = this._getItemsArray();\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n      const item = items[index];\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  _setActiveInDefaultMode(delta) {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  _setActiveItemByIndex(index, fallbackDelta) {\n    const items = this._getItemsArray();\n    if (!items[index]) {\n      return;\n    }\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n      if (!items[index]) {\n        return;\n      }\n    }\n    this.setActiveItem(index);\n  }\n  /** Returns the items as an array. */\n  _getItemsArray() {\n    if (isSignal(this._items)) {\n      return this._items();\n    }\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n  /** Callback for when the items have changed. */\n  _itemsChanged(newItems) {\n    if (this._activeItem) {\n      const newIndex = newItems.indexOf(this._activeItem);\n      if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n        this._activeItemIndex = newIndex;\n      }\n    }\n  }\n}\nclass ActiveDescendantKeyManager extends ListKeyManager {\n  setActiveItem(index) {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n}\nclass FocusKeyManager extends ListKeyManager {\n  constructor() {\n    super(...arguments);\n    this._origin = 'program';\n  }\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  setActiveItem(item) {\n    super.setActiveItem(item);\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n  constructor() {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    this.ignoreVisibility = false;\n  }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n  constructor(_platform) {\n    this._platform = _platform;\n  }\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element) {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element) {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element) {\n    // Nothing is tabbable on the server 😎\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n    const frameElement = getFrameElement(getWindow(element));\n    if (frameElement) {\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n      // Browsers disable tabbing to an element inside of an invisible frame.\n      if (!this.isVisible(frameElement)) {\n        return false;\n      }\n    }\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n    if (nodeName === 'iframe' || nodeName === 'object') {\n      // The frame or object's content may be tabbable depending on the content, but it's\n      // not possibly to reliably detect the content of the frames. We always consider such\n      // elements as non-tabbable.\n      return false;\n    }\n    // In iOS, the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n    if (nodeName === 'audio') {\n      // Audio elements without controls enabled are never tabbable, regardless\n      // of the tabindex attribute explicitly being set.\n      if (!element.hasAttribute('controls')) {\n        return false;\n      }\n      // Audio elements with controls are by default tabbable unless the\n      // tabindex attribute is set to `-1` explicitly.\n      return tabIndexValue !== -1;\n    }\n    if (nodeName === 'video') {\n      // For all video elements, if the tabindex attribute is set to `-1`, the video\n      // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n      // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n      // tabindex attribute is the source of truth here.\n      if (tabIndexValue === -1) {\n        return false;\n      }\n      // If the tabindex is explicitly set, and not `-1` (as per check before), the\n      // video element is always tabbable (regardless of whether it has controls or not).\n      if (tabIndexValue !== null) {\n        return true;\n      }\n      // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n      // has controls enabled. Firefox is special as videos are always tabbable regardless\n      // of whether there are controls or not.\n      return this._platform.FIREFOX || element.hasAttribute('controls');\n    }\n    return element.tabIndex >= 0;\n  }\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @param config The config object with options to customize this method's behavior\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element, config) {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));\n  }\n  static {\n    this.ɵfac = function InteractivityChecker_Factory(t) {\n      return new (t || InteractivityChecker)(i0.ɵɵinject(i1.Platform));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InteractivityChecker,\n      factory: InteractivityChecker.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InteractivityChecker, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }], null);\n})();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n  try {\n    return window.frameElement;\n  } catch {\n    return null;\n  }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n  let tabIndex = element.getAttribute('tabindex');\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && element.type;\n  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n */\nclass FocusTrap {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n    this._element = _element;\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    this.startAnchorListener = () => this.focusLastTabbableElement();\n    this.endAnchorListener = () => this.focusFirstTabbableElement();\n    this._enabled = true;\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n      startAnchor.remove();\n    }\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n      endAnchor.remove();\n    }\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfully. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors() {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor.addEventListener('focus', this.startAnchorListener);\n      }\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n    return this._hasAttached;\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusInitialElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusFirstTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusLastTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n    });\n  }\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  _getRegionBoundary(bound) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      for (let i = 0; i < markers.length; i++) {\n        // @breaking-change 8.0.0\n        if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);\n        } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);\n        }\n      }\n    }\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfully.\n   */\n  focusInitialElement(options) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);\n      }\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n      if (!this._checker.isFocusable(redirectToElement)) {\n        const focusableChild = this._getFirstTabbableElement(redirectToElement);\n        focusableChild?.focus(options);\n        return !!focusableChild;\n      }\n      redirectToElement.focus(options);\n      return true;\n    }\n    return this.focusFirstTabbableElement(options);\n  }\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusFirstTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusLastTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Checks whether the focus trap has successfully been attached.\n   */\n  hasAttached() {\n    return this._hasAttached;\n  }\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  _getFirstTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  _getLastTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    // Iterate in reverse DOM order.\n    const children = root.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Creates an anchor element. */\n  _createAnchor() {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  _toggleAnchorTabIndex(isEnabled, anchor) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  toggleAnchors(enabled) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n  /** Executes a function when the zone is stable. */\n  _executeOnStable(fn) {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n  constructor(_checker, _ngZone, _document) {\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n  }\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n   *     manually by the user.\n   * @returns The created focus trap instance.\n   */\n  create(element, deferCaptureElements = false) {\n    return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n  }\n  static {\n    this.ɵfac = function FocusTrapFactory_Factory(t) {\n      return new (t || FocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FocusTrapFactory,\n      factory: FocusTrapFactory.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusTrapFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: InteractivityChecker\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this.focusTrap?.enabled || false;\n  }\n  set enabled(value) {\n    if (this.focusTrap) {\n      this.focusTrap.enabled = value;\n    }\n  }\n  constructor(_elementRef, _focusTrapFactory,\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 13.0.0\n   */\n  _document) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n    this._previouslyFocusedElement = null;\n    const platform = inject(Platform);\n    if (platform.isBrowser) {\n      this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n  }\n  ngOnDestroy() {\n    this.focusTrap?.destroy();\n    // If we stored a previously focused element when using autoCapture, return focus to that\n    // element now that the trapped region is being destroyed.\n    if (this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n      this._previouslyFocusedElement = null;\n    }\n  }\n  ngAfterContentInit() {\n    this.focusTrap?.attachAnchors();\n    if (this.autoCapture) {\n      this._captureFocus();\n    }\n  }\n  ngDoCheck() {\n    if (this.focusTrap && !this.focusTrap.hasAttached()) {\n      this.focusTrap.attachAnchors();\n    }\n  }\n  ngOnChanges(changes) {\n    const autoCaptureChange = changes['autoCapture'];\n    if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap?.hasAttached()) {\n      this._captureFocus();\n    }\n  }\n  _captureFocus() {\n    this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n    this.focusTrap?.focusInitialElementWhenReady();\n  }\n  static {\n    this.ɵfac = function CdkTrapFocus_Factory(t) {\n      return new (t || CdkTrapFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkTrapFocus,\n      selectors: [[\"\", \"cdkTrapFocus\", \"\"]],\n      inputs: {\n        enabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocus\", \"enabled\", booleanAttribute],\n        autoCapture: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute]\n      },\n      exportAs: [\"cdkTrapFocus\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTrapFocus, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkTrapFocus]',\n      exportAs: 'cdkTrapFocus',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: FocusTrapFactory\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    enabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTrapFocus',\n        transform: booleanAttribute\n      }]\n    }],\n    autoCapture: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTrapFocusAutoCapture',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager = _focusTrapManager;\n    this._inertStrategy = _inertStrategy;\n    this._focusTrapManager.register(this);\n  }\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n  constructor() {\n    /** Focus event handler. */\n    this._listener = null;\n  }\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap) {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener, true);\n    }\n    this._listener = e => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener, true);\n    });\n  }\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap) {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener, true);\n    this._listener = null;\n  }\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  _trapFocus(focusTrap, event) {\n    const target = event.target;\n    const focusTrapRoot = focusTrap._element;\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n      // Some legacy FocusTrap usages have logic that focuses some element on the page\n      // just before FocusTrap is destroyed. For backwards compatibility, wait\n      // to be sure FocusTrap is still enabled before refocusing.\n      setTimeout(() => {\n        // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n        if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n          focusTrap.focusFirstTabbableElement();\n        }\n      });\n    }\n  }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n  constructor() {\n    // A stack of the FocusTraps on the page. Only the FocusTrap at the\n    // top of the stack is active.\n    this._focusTrapStack = [];\n  }\n  /**\n   * Disables the FocusTrap at the top of the stack, and then pushes\n   * the new FocusTrap onto the stack.\n   */\n  register(focusTrap) {\n    // Dedupe focusTraps that register multiple times.\n    this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n    let stack = this._focusTrapStack;\n    if (stack.length) {\n      stack[stack.length - 1]._disable();\n    }\n    stack.push(focusTrap);\n    focusTrap._enable();\n  }\n  /**\n   * Removes the FocusTrap from the stack, and activates the\n   * FocusTrap that is the new top of the stack.\n   */\n  deregister(focusTrap) {\n    focusTrap._disable();\n    const stack = this._focusTrapStack;\n    const i = stack.indexOf(focusTrap);\n    if (i !== -1) {\n      stack.splice(i, 1);\n      if (stack.length) {\n        stack[stack.length - 1]._enable();\n      }\n    }\n  }\n  static {\n    this.ɵfac = function FocusTrapManager_Factory(t) {\n      return new (t || FocusTrapManager)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FocusTrapManager,\n      factory: FocusTrapManager.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusTrapManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n  constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._focusTrapManager = _focusTrapManager;\n    this._document = _document;\n    // TODO split up the strategies into different modules, similar to DateAdapter.\n    this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n  }\n  create(element, config = {\n    defer: false\n  }) {\n    let configObject;\n    if (typeof config === 'boolean') {\n      configObject = {\n        defer: config\n      };\n    } else {\n      configObject = config;\n    }\n    return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n  }\n  static {\n    this.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) {\n      return new (t || ConfigurableFocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(FocusTrapManager), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ConfigurableFocusTrapFactory,\n      factory: ConfigurableFocusTrapFactory.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: InteractivityChecker\n  }, {\n    type: i0.NgZone\n  }, {\n    type: FocusTrapManager\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FOCUS_TRAP_INERT_STRATEGY]\n    }]\n  }], null);\n})();\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n  ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT]\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n  /** The most recently detected input modality. */\n  get mostRecentModality() {\n    return this._modality.value;\n  }\n  constructor(_platform, ngZone, document, options) {\n    this._platform = _platform;\n    /**\n     * The most recently detected input modality event target. Is null if no input modality has been\n     * detected or if the associated event target is null for some unknown reason.\n     */\n    this._mostRecentTarget = null;\n    /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n    this._modality = new BehaviorSubject(null);\n    /**\n     * The timestamp of the last touch input modality. Used to determine whether mousedown events\n     * should be attributed to mouse or touch.\n     */\n    this._lastTouchMs = 0;\n    /**\n     * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n     * bound.\n     */\n    this._onKeydown = event => {\n      // If this is one of the keys we should ignore, then ignore it and don't update the input\n      // modality to keyboard.\n      if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n        return;\n      }\n      this._modality.next('keyboard');\n      this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    this._onMousedown = event => {\n      // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n      // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n      // after the previous touch event.\n      if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n        return;\n      }\n      // Fake mousedown events are fired by some screen readers when controls are activated by the\n      // screen reader. Attribute them to keyboard input modality.\n      this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n      this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    this._onTouchstart = event => {\n      // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n      // events are fired. Again, attribute to keyboard input modality.\n      if (isFakeTouchstartFromScreenReader(event)) {\n        this._modality.next('keyboard');\n        return;\n      }\n      // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n      // triggered via mouse vs touch.\n      this._lastTouchMs = Date.now();\n      this._modality.next('touch');\n      this._mostRecentTarget = _getEventTarget(event);\n    };\n    this._options = {\n      ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n      ...options\n    };\n    // Skip the first emission as it's null.\n    this.modalityDetected = this._modality.pipe(skip(1));\n    this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n    // If we're not in a browser, this service should do nothing, as there's no relevant input\n    // modality to detect.\n    if (_platform.isBrowser) {\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n        document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n        document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n      });\n    }\n  }\n  ngOnDestroy() {\n    this._modality.complete();\n    if (this._platform.isBrowser) {\n      document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n      document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n      document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n    }\n  }\n  static {\n    this.ɵfac = function InputModalityDetector_Factory(t) {\n      return new (t || InputModalityDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INPUT_MODALITY_DETECTOR_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InputModalityDetector,\n      factory: InputModalityDetector.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputModalityDetector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n    }]\n  }], null);\n})();\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n  providedIn: 'root',\n  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n  return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n  constructor(elementToken, _ngZone, _document, _defaultOptions) {\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    // We inject the live element and document as `any` because the constructor signature cannot\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n    // a class decorator causes TypeScript to preserve the constructor signature types.\n    this._document = _document;\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n  announce(message, ...args) {\n    const defaultOptions = this._defaultOptions;\n    let politeness;\n    let duration;\n    if (args.length === 1 && typeof args[0] === 'number') {\n      duration = args[0];\n    } else {\n      [politeness, duration] = args;\n    }\n    this.clear();\n    clearTimeout(this._previousTimeout);\n    if (!politeness) {\n      politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n    }\n    if (duration == null && defaultOptions) {\n      duration = defaultOptions.duration;\n    }\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n    if (this._liveElement.id) {\n      this._exposeAnnouncerToModals(this._liveElement.id);\n    }\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    return this._ngZone.runOutsideAngular(() => {\n      if (!this._currentPromise) {\n        this._currentPromise = new Promise(resolve => this._currentResolve = resolve);\n      }\n      clearTimeout(this._previousTimeout);\n      this._previousTimeout = setTimeout(() => {\n        this._liveElement.textContent = message;\n        if (typeof duration === 'number') {\n          this._previousTimeout = setTimeout(() => this.clear(), duration);\n        }\n        // For some reason in tests this can be undefined\n        // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n      }, 100);\n      return this._currentPromise;\n    });\n  }\n  /**\n   * Clears the current text from the announcer element. Can be used to prevent\n   * screen readers from reading the text out again while the user is going\n   * through the page landmarks.\n   */\n  clear() {\n    if (this._liveElement) {\n      this._liveElement.textContent = '';\n    }\n  }\n  ngOnDestroy() {\n    clearTimeout(this._previousTimeout);\n    this._liveElement?.remove();\n    this._liveElement = null;\n    this._currentResolve?.();\n    this._currentPromise = this._currentResolve = undefined;\n  }\n  _createLiveElement() {\n    const elementClass = 'cdk-live-announcer-element';\n    const previousElements = this._document.getElementsByClassName(elementClass);\n    const liveEl = this._document.createElement('div');\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n    for (let i = 0; i < previousElements.length; i++) {\n      previousElements[i].remove();\n    }\n    liveEl.classList.add(elementClass);\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n    liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n    this._document.body.appendChild(liveEl);\n    return liveEl;\n  }\n  /**\n   * Some browsers won't expose the accessibility node of the live announcer element if there is an\n   * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n   * pointing the `aria-owns` of all modals to the live announcer element.\n   */\n  _exposeAnnouncerToModals(id) {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `SnakBarContainer` and other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    for (let i = 0; i < modals.length; i++) {\n      const modal = modals[i];\n      const ariaOwns = modal.getAttribute('aria-owns');\n      if (!ariaOwns) {\n        modal.setAttribute('aria-owns', id);\n      } else if (ariaOwns.indexOf(id) === -1) {\n        modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function LiveAnnouncer_Factory(t) {\n      return new (t || LiveAnnouncer)(i0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: LiveAnnouncer,\n      factory: LiveAnnouncer.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveAnnouncer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n    }]\n  }], null);\n})();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n  /** The aria-live politeness level to use when announcing messages. */\n  get politeness() {\n    return this._politeness;\n  }\n  set politeness(value) {\n    this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n    if (this._politeness === 'off') {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n        this._subscription = null;\n      }\n    } else if (!this._subscription) {\n      this._subscription = this._ngZone.runOutsideAngular(() => {\n        return this._contentObserver.observe(this._elementRef).subscribe(() => {\n          // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n          const elementText = this._elementRef.nativeElement.textContent;\n          // The `MutationObserver` fires also for attribute\n          // changes which we don't want to announce.\n          if (elementText !== this._previousAnnouncedText) {\n            this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n            this._previousAnnouncedText = elementText;\n          }\n        });\n      });\n    }\n  }\n  constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n    this._elementRef = _elementRef;\n    this._liveAnnouncer = _liveAnnouncer;\n    this._contentObserver = _contentObserver;\n    this._ngZone = _ngZone;\n    this._politeness = 'polite';\n  }\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n  static {\n    this.ɵfac = function CdkAriaLive_Factory(t) {\n      return new (t || CdkAriaLive)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LiveAnnouncer), i0.ɵɵdirectiveInject(i1$1.ContentObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkAriaLive,\n      selectors: [[\"\", \"cdkAriaLive\", \"\"]],\n      inputs: {\n        politeness: [i0.ɵɵInputFlags.None, \"cdkAriaLive\", \"politeness\"],\n        duration: [i0.ɵɵInputFlags.None, \"cdkAriaLiveDuration\", \"duration\"]\n      },\n      exportAs: [\"cdkAriaLive\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAriaLive, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkAriaLive]',\n      exportAs: 'cdkAriaLive',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: LiveAnnouncer\n  }, {\n    type: i1$1.ContentObserver\n  }, {\n    type: i0.NgZone\n  }], {\n    politeness: [{\n      type: Input,\n      args: ['cdkAriaLive']\n    }],\n    duration: [{\n      type: Input,\n      args: ['cdkAriaLiveDuration']\n    }]\n  });\n})();\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode;\n(function (FocusMonitorDetectionMode) {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n})(FocusMonitorDetectionMode || (FocusMonitorDetectionMode = {}));\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n  constructor(_ngZone, _platform, _inputModalityDetector, /** @breaking-change 11.0.0 make document required */\n  document, options) {\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._inputModalityDetector = _inputModalityDetector;\n    /** The focus origin that the next focus event is a result of. */\n    this._origin = null;\n    /** Whether the window has just been focused. */\n    this._windowFocused = false;\n    /**\n     * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n     * focus events to touch interactions requires special logic.\n     */\n    this._originFromTouchInteraction = false;\n    /** Map of elements being monitored to their info. */\n    this._elementInfo = new Map();\n    /** The number of elements currently being monitored. */\n    this._monitoredElementCount = 0;\n    /**\n     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n     * as well as the number of monitored elements that they contain. We have to treat focus/blur\n     * handlers differently from the rest of the events, because the browser won't emit events\n     * to the document when focus moves inside of a shadow root.\n     */\n    this._rootNodeFocusListenerCount = new Map();\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    this._windowFocusListener = () => {\n      // Make a note of when the window regains focus, so we can\n      // restore the origin info for the focused element.\n      this._windowFocused = true;\n      this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = false);\n    };\n    /** Subject for stopping our InputModalityDetector subscription. */\n    this._stopInputModalityDetector = new Subject();\n    /**\n     * Event listener for `focus` and 'blur' events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    this._rootNodeFocusAndBlurListener = event => {\n      const target = _getEventTarget(event);\n      // We need to walk up the ancestor chain in order to support `checkChildren`.\n      for (let element = target; element; element = element.parentElement) {\n        if (event.type === 'focus') {\n          this._onFocus(event, element);\n        } else {\n          this._onBlur(event, element);\n        }\n      }\n    };\n    this._document = document;\n    this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n  }\n  monitor(element, checkChildren = false) {\n    const nativeElement = coerceElement(element);\n    // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n    if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n      // Note: we don't want the observable to emit at all so we don't pass any parameters.\n      return of();\n    }\n    // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n    // the shadow root, rather than the `document`, because the browser won't emit focus events\n    // to the `document`, if focus is moving within the same shadow root.\n    const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n    const cachedInfo = this._elementInfo.get(nativeElement);\n    // Check if we're already monitoring this element.\n    if (cachedInfo) {\n      if (checkChildren) {\n        // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n        // observers into ones that behave as if `checkChildren` was turned on. We need a more\n        // robust solution.\n        cachedInfo.checkChildren = true;\n      }\n      return cachedInfo.subject;\n    }\n    // Create monitored element info.\n    const info = {\n      checkChildren: checkChildren,\n      subject: new Subject(),\n      rootNode\n    };\n    this._elementInfo.set(nativeElement, info);\n    this._registerGlobalListeners(info);\n    return info.subject;\n  }\n  stopMonitoring(element) {\n    const nativeElement = coerceElement(element);\n    const elementInfo = this._elementInfo.get(nativeElement);\n    if (elementInfo) {\n      elementInfo.subject.complete();\n      this._setClasses(nativeElement);\n      this._elementInfo.delete(nativeElement);\n      this._removeGlobalListeners(elementInfo);\n    }\n  }\n  focusVia(element, origin, options) {\n    const nativeElement = coerceElement(element);\n    const focusedElement = this._getDocument().activeElement;\n    // If the element is focused already, calling `focus` again won't trigger the event listener\n    // which means that the focus classes won't be updated. If that's the case, update the classes\n    // directly without waiting for an event.\n    if (nativeElement === focusedElement) {\n      this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n    } else {\n      this._setOrigin(origin);\n      // `focus` isn't available on the server\n      if (typeof nativeElement.focus === 'function') {\n        nativeElement.focus(options);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n  }\n  /** Access injected document if available or fallback to global document reference */\n  _getDocument() {\n    return this._document || document;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n  _getFocusOrigin(focusEventTarget) {\n    if (this._origin) {\n      // If the origin was realized via a touch interaction, we need to perform additional checks\n      // to determine whether the focus origin should be attributed to touch or program.\n      if (this._originFromTouchInteraction) {\n        return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n      } else {\n        return this._origin;\n      }\n    }\n    // If the window has just regained focus, we can restore the most recent origin from before the\n    // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n    // focus. This typically means one of two things happened:\n    //\n    // 1) The element was programmatically focused, or\n    // 2) The element was focused via screen reader navigation (which generally doesn't fire\n    //    events).\n    //\n    // Because we can't distinguish between these two cases, we default to setting `program`.\n    if (this._windowFocused && this._lastFocusOrigin) {\n      return this._lastFocusOrigin;\n    }\n    // If the interaction is coming from an input label, we consider it a mouse interactions.\n    // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n    // our detection, because all our assumptions are for `mousedown`. We need to handle this\n    // special case, because it's very common for checkboxes and radio buttons.\n    if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n      return 'mouse';\n    }\n    return 'program';\n  }\n  /**\n   * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n   * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n   * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n   * event was directly caused by the touch interaction or (2) the focus event was caused by a\n   * subsequent programmatic focus call triggered by the touch interaction.\n   * @param focusEventTarget The target of the focus event under examination.\n   */\n  _shouldBeAttributedToTouch(focusEventTarget) {\n    // Please note that this check is not perfect. Consider the following edge case:\n    //\n    // <div #parent tabindex=\"0\">\n    //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n    // #child, #parent is programmatically focused. This code will attribute the focus to touch\n    // instead of program. This is a relatively minor edge-case that can be worked around by using\n    // focusVia(parent, 'program') to focus #parent.\n    return this._detectionMode === FocusMonitorDetectionMode.EVENTUAL || !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget);\n  }\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  _setClasses(element, origin) {\n    element.classList.toggle('cdk-focused', !!origin);\n    element.classList.toggle('cdk-touch-focused', origin === 'touch');\n    element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n    element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n    element.classList.toggle('cdk-program-focused', origin === 'program');\n  }\n  /**\n   * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n   * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n   * the origin being set.\n   * @param origin The origin to set.\n   * @param isFromInteraction Whether we are setting the origin from an interaction event.\n   */\n  _setOrigin(origin, isFromInteraction = false) {\n    this._ngZone.runOutsideAngular(() => {\n      this._origin = origin;\n      this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n      // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n      // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n      // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n      // a touch event because when a touch event is fired, the associated focus event isn't yet in\n      // the event queue. Before doing so, clear any pending timeouts.\n      if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n        clearTimeout(this._originTimeoutId);\n        const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n        this._originTimeoutId = setTimeout(() => this._origin = null, ms);\n      }\n    });\n  }\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  _onFocus(event, element) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const elementInfo = this._elementInfo.get(element);\n    const focusEventTarget = _getEventTarget(event);\n    if (!elementInfo || !elementInfo.checkChildren && element !== focusEventTarget) {\n      return;\n    }\n    this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n  }\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  _onBlur(event, element) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {\n      return;\n    }\n    this._setClasses(element);\n    this._emitOrigin(elementInfo, null);\n  }\n  _emitOrigin(info, origin) {\n    if (info.subject.observers.length) {\n      this._ngZone.run(() => info.subject.next(origin));\n    }\n  }\n  _registerGlobalListeners(elementInfo) {\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const rootNode = elementInfo.rootNode;\n    const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n    if (!rootNodeFocusListeners) {\n      this._ngZone.runOutsideAngular(() => {\n        rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n      });\n    }\n    this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n    // Register global listeners when first element is monitored.\n    if (++this._monitoredElementCount === 1) {\n      // Note: we listen to events in the capture phase so we\n      // can detect them even if the user stops propagation.\n      this._ngZone.runOutsideAngular(() => {\n        const window = this._getWindow();\n        window.addEventListener('focus', this._windowFocusListener);\n      });\n      // The InputModalityDetector is also just a collection of global listeners.\n      this._inputModalityDetector.modalityDetected.pipe(takeUntil(this._stopInputModalityDetector)).subscribe(modality => {\n        this._setOrigin(modality, true /* isFromInteraction */);\n      });\n    }\n  }\n  _removeGlobalListeners(elementInfo) {\n    const rootNode = elementInfo.rootNode;\n    if (this._rootNodeFocusListenerCount.has(rootNode)) {\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n      if (rootNodeFocusListeners > 1) {\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n      } else {\n        rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        this._rootNodeFocusListenerCount.delete(rootNode);\n      }\n    }\n    // Unregister global listeners when last element is unmonitored.\n    if (! --this._monitoredElementCount) {\n      const window = this._getWindow();\n      window.removeEventListener('focus', this._windowFocusListener);\n      // Equivalently, stop our InputModalityDetector subscription.\n      this._stopInputModalityDetector.next();\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n      clearTimeout(this._windowFocusTimeoutId);\n      clearTimeout(this._originTimeoutId);\n    }\n  }\n  /** Updates all the state on an element once its focus origin has changed. */\n  _originChanged(element, origin, elementInfo) {\n    this._setClasses(element, origin);\n    this._emitOrigin(elementInfo, origin);\n    this._lastFocusOrigin = origin;\n  }\n  /**\n   * Collects the `MonitoredElementInfo` of a particular element and\n   * all of its ancestors that have enabled `checkChildren`.\n   * @param element Element from which to start the search.\n   */\n  _getClosestElementsInfo(element) {\n    const results = [];\n    this._elementInfo.forEach((info, currentElement) => {\n      if (currentElement === element || info.checkChildren && currentElement.contains(element)) {\n        results.push([currentElement, info]);\n      }\n    });\n    return results;\n  }\n  /**\n   * Returns whether an interaction is likely to have come from the user clicking the `label` of\n   * an `input` or `textarea` in order to focus it.\n   * @param focusEventTarget Target currently receiving focus.\n   */\n  _isLastInteractionFromInputLabel(focusEventTarget) {\n    const {\n      _mostRecentTarget: mostRecentTarget,\n      mostRecentModality\n    } = this._inputModalityDetector;\n    // If the last interaction used the mouse on an element contained by one of the labels\n    // of an `input`/`textarea` that is currently focused, it is very likely that the\n    // user redirected focus using the label.\n    if (mostRecentModality !== 'mouse' || !mostRecentTarget || mostRecentTarget === focusEventTarget || focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA' || focusEventTarget.disabled) {\n      return false;\n    }\n    const labels = focusEventTarget.labels;\n    if (labels) {\n      for (let i = 0; i < labels.length; i++) {\n        if (labels[i].contains(mostRecentTarget)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  static {\n    this.ɵfac = function FocusMonitor_Factory(t) {\n      return new (t || FocusMonitor)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(InputModalityDetector), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FocusMonitor,\n      factory: FocusMonitor.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusMonitor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i1.Platform\n  }, {\n    type: InputModalityDetector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n    }]\n  }], null);\n})();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n  constructor(_elementRef, _focusMonitor) {\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._focusOrigin = null;\n    this.cdkFocusChange = new EventEmitter();\n  }\n  get focusOrigin() {\n    return this._focusOrigin;\n  }\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n    this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(origin => {\n      this._focusOrigin = origin;\n      this.cdkFocusChange.emit(origin);\n    });\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    if (this._monitorSubscription) {\n      this._monitorSubscription.unsubscribe();\n    }\n  }\n  static {\n    this.ɵfac = function CdkMonitorFocus_Factory(t) {\n      return new (t || CdkMonitorFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusMonitor));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkMonitorFocus,\n      selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]],\n      outputs: {\n        cdkFocusChange: \"cdkFocusChange\"\n      },\n      exportAs: [\"cdkMonitorFocus\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkMonitorFocus, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n      exportAs: 'cdkMonitorFocus',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: FocusMonitor\n  }], {\n    cdkFocusChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode;\n(function (HighContrastMode) {\n  HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n  HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n  HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n})(HighContrastMode || (HighContrastMode = {}));\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n  constructor(_platform, document) {\n    this._platform = _platform;\n    this._document = document;\n    this._breakpointSubscription = inject(BreakpointObserver).observe('(forced-colors: active)').subscribe(() => {\n      if (this._hasCheckedHighContrastMode) {\n        this._hasCheckedHighContrastMode = false;\n        this._applyBodyHighContrastModeCssClasses();\n      }\n    });\n  }\n  /** Gets the current high-contrast-mode for the page. */\n  getHighContrastMode() {\n    if (!this._platform.isBrowser) {\n      return HighContrastMode.NONE;\n    }\n    // Create a test element with an arbitrary background-color that is neither black nor\n    // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n    // appending the test element to the DOM does not affect layout by absolutely positioning it\n    const testElement = this._document.createElement('div');\n    testElement.style.backgroundColor = 'rgb(1,2,3)';\n    testElement.style.position = 'absolute';\n    this._document.body.appendChild(testElement);\n    // Get the computed style for the background color, collapsing spaces to normalize between\n    // browsers. Once we get this color, we no longer need the test element. Access the `window`\n    // via the document so we can fake it in tests. Note that we have extra null checks, because\n    // this logic will likely run during app bootstrap and throwing can break the entire app.\n    const documentWindow = this._document.defaultView || window;\n    const computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;\n    const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n    testElement.remove();\n    switch (computedColor) {\n      // Pre Windows 11 dark theme.\n      case 'rgb(0,0,0)':\n      // Windows 11 dark themes.\n      case 'rgb(45,50,54)':\n      case 'rgb(32,32,32)':\n        return HighContrastMode.WHITE_ON_BLACK;\n      // Pre Windows 11 light theme.\n      case 'rgb(255,255,255)':\n      // Windows 11 light theme.\n      case 'rgb(255,250,239)':\n        return HighContrastMode.BLACK_ON_WHITE;\n    }\n    return HighContrastMode.NONE;\n  }\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n  }\n  /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n  _applyBodyHighContrastModeCssClasses() {\n    if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n      const bodyClasses = this._document.body.classList;\n      bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n      this._hasCheckedHighContrastMode = true;\n      const mode = this.getHighContrastMode();\n      if (mode === HighContrastMode.BLACK_ON_WHITE) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n      } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function HighContrastModeDetector_Factory(t) {\n      return new (t || HighContrastModeDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HighContrastModeDetector,\n      factory: HighContrastModeDetector.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighContrastModeDetector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass A11yModule {\n  constructor(highContrastModeDetector) {\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n  }\n  static {\n    this.ɵfac = function A11yModule_Factory(t) {\n      return new (t || A11yModule)(i0.ɵɵinject(HighContrastModeDetector));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: A11yModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ObserversModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(A11yModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n      exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n    }]\n  }], () => [{\n    type: HighContrastModeDetector\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n  constructor(_document) {\n    /** The current 'ltr' or 'rtl' value. */\n    this.value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    this.change = new EventEmitter();\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n    }\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static {\n    this.ɵfac = function Directionality_Factory(t) {\n      return new (t || Directionality)(i0.ɵɵinject(DIR_DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Directionality,\n      factory: Directionality.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DIR_DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n  constructor() {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    this._dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n    this._isInitialized = false;\n    /** Event emitted when the direction changes. */\n    this.change = new EventEmitter();\n  }\n  /** @docs-private */\n  get dir() {\n    return this._dir;\n  }\n  set dir(value) {\n    const previousValue = this._dir;\n    // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n    // whereas the browser does it based on the content of the element. Since doing so based\n    // on the content can be expensive, for now we're doing the simpler matching.\n    this._dir = _resolveDirectionality(value);\n    this._rawDir = value;\n    if (previousValue !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static {\n    this.ɵfac = function Dir_Factory(t) {\n      return new (t || Dir)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Dir,\n      selectors: [[\"\", \"dir\", \"\"]],\n      hostVars: 1,\n      hostBindings: function Dir_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"dir\", ctx._rawDir);\n        }\n      },\n      inputs: {\n        dir: \"dir\"\n      },\n      outputs: {\n        change: \"dirChange\"\n      },\n      exportAs: [\"dir\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: Directionality,\n        useExisting: Dir\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir',\n      standalone: true\n    }]\n  }], null, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\nclass BidiModule {\n  static {\n    this.ɵfac = function BidiModule_Factory(t) {\n      return new (t || BidiModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BidiModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Dir],\n      exports: [Dir]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { Version } from '@angular/core';\n\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('17.3.10');\n\nexport { VERSION };\n\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, ANIMATION_MODULE_TYPE, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, booleanAttribute, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.group.label, \")\");\n  }\n}\nconst _c5 = [\"mat-internal-form-field\", \"\"];\nconst _c6 = [\"*\"];\nconst VERSION = new Version('17.3.10');\n\n/** @docs-private */\nclass AnimationCurves {\n  static {\n    this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  }\n  static {\n    this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  }\n  static {\n    this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  }\n  static {\n    this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n  }\n}\n/** @docs-private */\nclass AnimationDurations {\n  static {\n    this.COMPLEX = '375ms';\n  }\n  static {\n    this.ENTERING = '225ms';\n  }\n  static {\n    this.EXITING = '195ms';\n  }\n}\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  constructor(highContrastModeDetector, _sanityChecks, _document) {\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Inject in here so the reference to `Platform` can be removed in production mode.\n        const platform = inject(Platform, {\n          optional: true\n        });\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n        }\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n  _checkIsEnabled(name) {\n    if (_isTestEnvironment()) {\n      return false;\n    }\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n    return !!this._sanityChecks[name];\n  }\n  static {\n    this.ɵfac = function MatCommonModule_Factory(t) {\n      return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatCommonModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, BidiModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], () => [{\n    type: i1.HighContrastModeDetector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\n\n/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n  constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n    this._defaultMatcher = _defaultMatcher;\n    this.ngControl = ngControl;\n    this._parentFormGroup = _parentFormGroup;\n    this._parentForm = _parentForm;\n    this._stateChanges = _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    this.errorState = false;\n  }\n  /** Updates the error state based on the provided error state matcher. */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const matcher = this.matcher || this._defaultMatcher;\n    const control = this.ngControl ? this.ngControl.control : null;\n    const newState = matcher?.isErrorState(control, parent) ?? false;\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this._stateChanges.next();\n    }\n  }\n}\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    get errorState() {\n      return this._getTracker().errorState;\n    }\n    set errorState(value) {\n      this._getTracker().errorState = value;\n    }\n    /** An object used to control the error state of the component. */\n    get errorStateMatcher() {\n      return this._getTracker().matcher;\n    }\n    set errorStateMatcher(value) {\n      this._getTracker().matcher = value;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      this._getTracker().updateErrorState();\n    }\n    _getTracker() {\n      if (!this._tracker) {\n        this._tracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, this.ngControl, this._parentFormGroup, this._parentForm, this.stateChanges);\n      }\n      return this._tracker;\n    }\n    constructor(...args) {\n      super(...args);\n    }\n  };\n}\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @deprecated Track the initialized state manually.\n * @breaking-change 19.0.0\n */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  constructor(\n  /**\n   * @deprecated Now injected via inject(), param to be removed.\n   * @breaking-change 18.0.0\n   */\n  matDateLocale) {\n    super();\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    this.useUtcForDisplay = false;\n    /** The injected locale. */\n    this._matDateLocale = inject(MAT_DATE_LOCALE, {\n      optional: true\n    });\n    if (matDateLocale !== undefined) {\n      this._matDateLocale = matDateLocale;\n    }\n    super.setLocale(this._matDateLocale);\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n  static {\n    this.ɵfac = function NativeDateAdapter_Factory(t) {\n      return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NativeDateAdapter,\n      factory: NativeDateAdapter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }], null);\n})();\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nclass NativeDateModule {\n  static {\n    this.ɵfac = function NativeDateModule_Factory(t) {\n      return new (t || NativeDateModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NativeDateModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\nclass MatNativeDateModule {\n  static {\n    this.ɵfac = function MatNativeDateModule_Factory(t) {\n      return new (t || MatNativeDateModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatNativeDateModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideNativeDateAdapter()]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideNativeDateAdapter()]\n    }]\n  }], null, null);\n})();\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n  return [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n}\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n  static {\n    this.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n      return new (t || ShowOnDirtyErrorStateMatcher)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ShowOnDirtyErrorStateMatcher,\n      factory: ShowOnDirtyErrorStateMatcher.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n  static {\n    this.ɵfac = function ErrorStateMatcher_Factory(t) {\n      return new (t || ErrorStateMatcher)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ErrorStateMatcher,\n      factory: ErrorStateMatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n  static {\n    this.ɵfac = function MatLine_Factory(t) {\n      return new (t || MatLine)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatLine,\n      selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n      hostAttrs: [1, \"mat-line\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n  static {\n    this.ɵfac = function MatLineModule_Factory(t) {\n      return new (t || MatLineModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatLineModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatLine],\n      exports: [MatLine, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n  RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n  RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n  RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config, /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = RippleState.HIDDEN;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static {\n    this._eventManager = new RippleEventManager();\n  }\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n    // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' ||\n    // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0;\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = RippleState.FADING_IN;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel\n        };\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === RippleState.FADING_IN) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === RippleState.FADING_OUT) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = RippleState.VISIBLE;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = RippleState.HIDDEN;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n    rippleRef.element.remove();\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n        this._pointerUpEventsRegistered = false;\n      }\n    }\n  }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /** Fades out all currently showing non-persistent ripple elements. */\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {\n        ...this.rippleConfig,\n        ...config\n      });\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {\n        ...this.rippleConfig,\n        ...configOrX\n      });\n    }\n  }\n  static {\n    this.ɵfac = function MatRipple_Factory(t) {\n      return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRipple,\n      selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n      hostAttrs: [1, \"mat-ripple\"],\n      hostVars: 2,\n      hostBindings: function MatRipple_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n        }\n      },\n      inputs: {\n        color: [i0.ɵɵInputFlags.None, \"matRippleColor\", \"color\"],\n        unbounded: [i0.ɵɵInputFlags.None, \"matRippleUnbounded\", \"unbounded\"],\n        centered: [i0.ɵɵInputFlags.None, \"matRippleCentered\", \"centered\"],\n        radius: [i0.ɵɵInputFlags.None, \"matRippleRadius\", \"radius\"],\n        animation: [i0.ɵɵInputFlags.None, \"matRippleAnimation\", \"animation\"],\n        disabled: [i0.ɵɵInputFlags.None, \"matRippleDisabled\", \"disabled\"],\n        trigger: [i0.ɵɵInputFlags.None, \"matRippleTrigger\", \"trigger\"]\n      },\n      exportAs: [\"matRipple\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1$1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  });\n})();\nclass MatRippleModule {\n  static {\n    this.ɵfac = function MatRippleModule_Factory(t) {\n      return new (t || MatRippleModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatRippleModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRipple],\n      exports: [MatRipple, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    this.disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    this.appearance = 'full';\n  }\n  static {\n    this.ɵfac = function MatPseudoCheckbox_Factory(t) {\n      return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatPseudoCheckbox,\n      selectors: [[\"mat-pseudo-checkbox\"]],\n      hostAttrs: [1, \"mat-pseudo-checkbox\"],\n      hostVars: 12,\n      hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        state: \"state\",\n        disabled: \"disabled\",\n        appearance: \"appearance\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function MatPseudoCheckbox_Template(rf, ctx) {},\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      standalone: true,\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\nclass MatPseudoCheckboxModule {\n  static {\n    this.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n      return new (t || MatPseudoCheckboxModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatPseudoCheckboxModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatPseudoCheckbox],\n      exports: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n  constructor(parent) {\n    /** whether the option group is disabled. */\n    this.disabled = false;\n    /** Unique id for the underlying label. */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = parent?.inertGroups ?? false;\n  }\n  static {\n    this.ɵfac = function MatOptgroup_Factory(t) {\n      return new (t || MatOptgroup)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatOptgroup,\n      selectors: [[\"mat-optgroup\"]],\n      hostAttrs: [1, \"mat-mdc-optgroup\"],\n      hostVars: 3,\n      hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        }\n      },\n      inputs: {\n        label: \"label\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      exportAs: [\"matOptgroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 4,\n      consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n      template: function MatOptgroup_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵprojection(4, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n          i0.ɵɵproperty(\"id\", ctx._labelId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n        }\n      },\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      standalone: true,\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }, {\n      type: Optional\n    }]\n  }], {\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return !!(this._parent && this._parent.disableRipple);\n  }\n  /** Whether to display checkmark for single-selection. */\n  get hideSingleSelectionIndicator() {\n    return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n  }\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n  /** Selects the option. */\n  select(emitEvent = true) {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Deselects the option. */\n  deselect(emitEvent = true) {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n  // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n  // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n  static {\n    this.ɵfac = function MatOption_Factory(t) {\n      return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatOption,\n      selectors: [[\"mat-option\"]],\n      viewQuery: function MatOption_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c2, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n      hostVars: 11,\n      hostBindings: function MatOption_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n            return ctx._selectViaInteraction();\n          })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n          i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        id: \"id\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        onSelectionChange: \"onSelectionChange\"\n      },\n      exportAs: [\"matOption\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c4,\n      decls: 8,\n      vars: 5,\n      consts: [[\"text\", \"\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n      template: function MatOption_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 1);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 2, 0);\n          i0.ɵɵprojection(4, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n          i0.ɵɵelement(7, \"div\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.multiple ? 0 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(5, !ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(6, ctx.group && ctx.group._inert ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatPseudoCheckbox, MatRipple],\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n        // [WAI ARIA Listbox authoring practices guide](\n        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n        // selected option has either aria-selected or aria-checked  set to true. All options that are\n        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n        // aria-selected implementation of Chips and List components.\n        //\n        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n        // every option as \"selected\" (#21491).\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mdc-list-item'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatPseudoCheckbox, MatRipple],\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTGROUP]\n    }]\n  }], {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nclass MatOptionModule {\n  static {\n    this.ɵfac = function MatOptionModule_Factory(t) {\n      return new (t || MatOptionModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatOptionModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n      exports: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {\n  capture: true\n};\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nclass MatRippleLoader {\n  constructor() {\n    this._document = inject(DOCUMENT, {\n      optional: true\n    });\n    this._animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    this._platform = inject(Platform);\n    this._ngZone = inject(NgZone);\n    this._hosts = new Map();\n    /** Handles creating and attaching component internals when a component it is initially interacted with. */\n    this._onInteraction = event => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      const eventTarget = event.target;\n      // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n      const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n      if (element) {\n        this._createRipple(element);\n      }\n    };\n    this._ngZone.runOutsideAngular(() => {\n      for (const event of rippleInteractionEvents) {\n        this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    });\n  }\n  ngOnDestroy() {\n    const hosts = this._hosts.keys();\n    for (const host of hosts) {\n      this.destroyRipple(host);\n    }\n    for (const event of rippleInteractionEvents) {\n      this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n    }\n  }\n  /**\n   * Configures the ripple that will be rendered by the ripple loader.\n   *\n   * Stores the given information about how the ripple should be configured on the host\n   * element so that it can later be retrived & used when the ripple is actually created.\n   */\n  configureRipple(host, config) {\n    // Indicates that the ripple has not yet been rendered for this component.\n    host.setAttribute(matRippleUninitialized, '');\n    // Store the additional class name(s) that should be added to the ripple element.\n    if (config.className || !host.hasAttribute(matRippleClassName)) {\n      host.setAttribute(matRippleClassName, config.className || '');\n    }\n    // Store whether the ripple should be centered.\n    if (config.centered) {\n      host.setAttribute(matRippleCentered, '');\n    }\n    if (config.disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    }\n  }\n  /** Returns the ripple instance for the given host element. */\n  getRipple(host) {\n    const ripple = this._hosts.get(host);\n    return ripple || this._createRipple(host);\n  }\n  /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n  setDisabled(host, disabled) {\n    const ripple = this._hosts.get(host);\n    // If the ripple has already been instantiated, just disable it.\n    if (ripple) {\n      ripple.disabled = disabled;\n      return;\n    }\n    // Otherwise, set an attribute so we know what the\n    // disabled state should be when the ripple is initialized.\n    if (disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    } else {\n      host.removeAttribute(matRippleDisabled);\n    }\n  }\n  /** Creates a MatRipple and appends it to the given element. */\n  _createRipple(host) {\n    if (!this._document) {\n      return;\n    }\n    const existingRipple = this._hosts.get(host);\n    if (existingRipple) {\n      return existingRipple;\n    }\n    // Create the ripple element.\n    host.querySelector('.mat-ripple')?.remove();\n    const rippleEl = this._document.createElement('span');\n    rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n    host.append(rippleEl);\n    // Create the MatRipple.\n    const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n    ripple._isInitialized = true;\n    ripple.trigger = host;\n    ripple.centered = host.hasAttribute(matRippleCentered);\n    ripple.disabled = host.hasAttribute(matRippleDisabled);\n    this.attachRipple(host, ripple);\n    return ripple;\n  }\n  attachRipple(host, ripple) {\n    host.removeAttribute(matRippleUninitialized);\n    this._hosts.set(host, ripple);\n  }\n  destroyRipple(host) {\n    const ripple = this._hosts.get(host);\n    if (ripple) {\n      // Since this directive is created manually, it needs to be destroyed manually too.\n      // tslint:disable-next-line:no-lifecycle-invocation\n      ripple.ngOnDestroy();\n      this._hosts.delete(host);\n    }\n  }\n  static {\n    this.ɵfac = function MatRippleLoader_Factory(t) {\n      return new (t || MatRippleLoader)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatRippleLoader,\n      factory: MatRippleLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n  static {\n    this.ɵfac = function _MatInternalFormField_Factory(t) {\n      return new (t || _MatInternalFormField)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: _MatInternalFormField,\n      selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n      hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n      hostVars: 2,\n      hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n        }\n      },\n      inputs: {\n        labelPosition: \"labelPosition\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c5,\n      ngContentSelectors: _c6,\n      decls: 1,\n      vars: 0,\n      template: function _MatInternalFormField_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-form-field{font-family:var(--mdc-form-field-label-text-font);line-height:var(--mdc-form-field-label-text-line-height);font-size:var(--mdc-form-field-label-text-size);font-weight:var(--mdc-form-field-label-text-weight);letter-spacing:var(--mdc-form-field-label-text-tracking);color:var(--mdc-form-field-label-text-color)}.mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatInternalFormField, [{\n    type: Component,\n    args: [{\n      selector: 'div[mat-internal-form-field]',\n      standalone: true,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mdc-form-field mat-internal-form-field',\n        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"'\n      },\n      styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-form-field{font-family:var(--mdc-form-field-label-text-font);line-height:var(--mdc-form-field-label-text-line-height);font-size:var(--mdc-form-field-label-text-size);font-weight:var(--mdc-form-field-label-text-weight);letter-spacing:var(--mdc-form-field-label-text-tracking);color:var(--mdc-form-field-label-text-color)}.mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}\"]\n    }]\n  }], null, {\n    labelPosition: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, RippleState, ShowOnDirtyErrorStateMatcher, VERSION, _ErrorStateTracker, _MatInternalFormField, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, provideNativeDateAdapter, setLines };\n","import * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, numberAttribute, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { MatRippleLoader, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the button component. */\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [[[\"\", 8, \"material-icons\", 3, \"iconPositionEnd\", \"\"], [\"mat-icon\", 3, \"iconPositionEnd\", \"\"], [\"\", \"matButtonIcon\", \"\", 3, \"iconPositionEnd\", \"\"]], \"*\", [[\"\", \"iconPositionEnd\", \"\", 8, \"material-icons\"], [\"mat-icon\", \"iconPositionEnd\", \"\"], [\"\", \"matButtonIcon\", \"\", \"iconPositionEnd\", \"\"]]];\nconst _c2 = [\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\", \"*\", \".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\"];\nconst _c3 = \".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px);display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);font-weight:var(--mdc-text-button-label-text-weight);text-transform:var(--mdc-text-button-label-text-transform);height:var(--mdc-text-button-container-height);border-radius:var(--mdc-text-button-container-shape);padding:0 var(--mat-text-button-horizontal-padding, 8px)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);font-weight:var(--mdc-filled-button-label-text-weight);text-transform:var(--mdc-filled-button-label-text-transform);height:var(--mdc-filled-button-container-height);border-radius:var(--mdc-filled-button-container-shape);padding:0 var(--mat-filled-button-horizontal-padding, 16px)}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color)}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);font-weight:var(--mdc-protected-button-label-text-weight);text-transform:var(--mdc-protected-button-label-text-transform);height:var(--mdc-protected-button-container-height);border-radius:var(--mdc-protected-button-container-shape);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow)}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color)}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);font-weight:var(--mdc-outlined-button-label-text-weight);text-transform:var(--mdc-outlined-button-label-text-transform);height:var(--mdc-outlined-button-container-height);border-radius:var(--mdc-outlined-button-container-shape);padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width);padding:0 var(--mat-outlined-button-horizontal-padding, 15px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color)}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape)}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width))}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button-base{text-decoration:none}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\";\nconst _c4 = \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\";\nconst _c5 = [\"mat-fab\", \"\"];\nconst _c6 = [\"mat-mini-fab\", \"\"];\nconst _c7 = \".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\";\nconst _c8 = [\"mat-icon-button\", \"\"];\nconst _c9 = [\"*\"];\nconst _c10 = \".mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{color:var(--mdc-icon-button-icon-color)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button{border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\";\nconst MAT_BUTTON_CONFIG = new InjectionToken('MAT_BUTTON_CONFIG');\n/** Shared host configuration for all buttons */\nconst MAT_BUTTON_HOST = {\n  '[attr.disabled]': '_getDisabledAttribute()',\n  '[attr.aria-disabled]': '_getAriaDisabled()',\n  '[class.mat-mdc-button-disabled]': 'disabled',\n  '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n  // Add a class that applies to all buttons. This makes it easier to target if somebody\n  // wants to target all Material buttons.\n  '[class.mat-mdc-button-base]': 'true',\n  '[class]': 'color ? \"mat-\" + color : \"\"'\n};\n/** List of classes to add to buttons instances based on host attribute selector. */\nconst HOST_SELECTOR_MDC_CLASS_PAIR = [{\n  attribute: 'mat-button',\n  mdcClasses: ['mdc-button', 'mat-mdc-button']\n}, {\n  attribute: 'mat-flat-button',\n  mdcClasses: ['mdc-button', 'mdc-button--unelevated', 'mat-mdc-unelevated-button']\n}, {\n  attribute: 'mat-raised-button',\n  mdcClasses: ['mdc-button', 'mdc-button--raised', 'mat-mdc-raised-button']\n}, {\n  attribute: 'mat-stroked-button',\n  mdcClasses: ['mdc-button', 'mdc-button--outlined', 'mat-mdc-outlined-button']\n}, {\n  attribute: 'mat-fab',\n  mdcClasses: ['mdc-fab', 'mat-mdc-fab']\n}, {\n  attribute: 'mat-mini-fab',\n  mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab']\n}, {\n  attribute: 'mat-icon-button',\n  mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button']\n}];\n/** Base class for all buttons.  */\nclass MatButtonBase {\n  /**\n   * Reference to the MatRipple instance of the button.\n   * @deprecated Considered an implementation detail. To be removed.\n   * @breaking-change 17.0.0\n   */\n  get ripple() {\n    return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n  }\n  set ripple(v) {\n    this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n  }\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  set disableRipple(value) {\n    this._disableRipple = value;\n    this._updateRippleDisabled();\n  }\n  /** Whether the button is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._updateRippleDisabled();\n  }\n  constructor(_elementRef, _platform, _ngZone, _animationMode) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._focusMonitor = inject(FocusMonitor);\n    /**\n     * Handles the lazy creation of the MatButton ripple.\n     * Used to improve initial load time of large applications.\n     */\n    this._rippleLoader = inject(MatRippleLoader);\n    /** Whether this button is a FAB. Used to apply the correct class on the ripple. */\n    this._isFab = false;\n    this._disableRipple = false;\n    this._disabled = false;\n    const config = inject(MAT_BUTTON_CONFIG, {\n      optional: true\n    });\n    const element = _elementRef.nativeElement;\n    const classList = element.classList;\n    this.disabledInteractive = config?.disabledInteractive ?? false;\n    this._rippleLoader?.configureRipple(element, {\n      className: 'mat-mdc-button-ripple'\n    });\n    // For each of the variant selectors that is present in the button's host\n    // attributes, add the correct corresponding MDC classes.\n    for (const {\n      attribute,\n      mdcClasses\n    } of HOST_SELECTOR_MDC_CLASS_PAIR) {\n      if (element.hasAttribute(attribute)) {\n        classList.add(...mdcClasses);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n  }\n  /** Focuses the button. */\n  focus(origin = 'program', options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._elementRef.nativeElement, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n  _getAriaDisabled() {\n    if (this.ariaDisabled != null) {\n      return this.ariaDisabled;\n    }\n    return this.disabled && this.disabledInteractive ? true : null;\n  }\n  _getDisabledAttribute() {\n    return this.disabledInteractive || !this.disabled ? null : true;\n  }\n  _updateRippleDisabled() {\n    this._rippleLoader?.setDisabled(this._elementRef.nativeElement, this.disableRipple || this.disabled);\n  }\n  static {\n    this.ɵfac = function MatButtonBase_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatButtonBase,\n      inputs: {\n        color: \"color\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        ariaDisabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"aria-disabled\", \"ariaDisabled\", booleanAttribute],\n        disabledInteractive: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n      },\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonBase, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }], {\n    color: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute,\n        alias: 'aria-disabled'\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/** Shared host configuration for buttons using the `<a>` tag. */\nconst MAT_ANCHOR_HOST = {\n  '[attr.disabled]': '_getDisabledAttribute()',\n  '[class.mat-mdc-button-disabled]': 'disabled',\n  '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  // Note that we ignore the user-specified tabindex when it's disabled for\n  // consistency with the `mat-button` applied on native buttons where even\n  // though they have an index, they're not tabbable.\n  '[attr.tabindex]': 'disabled && !disabledInteractive ? -1 : tabIndex',\n  '[attr.aria-disabled]': '_getDisabledAttribute()',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n  // Add a class that applies to all buttons. This makes it easier to target if somebody\n  // wants to target all Material buttons.\n  '[class.mat-mdc-button-base]': 'true',\n  '[class]': 'color ? \"mat-\" + color : \"\"'\n};\n/**\n * Anchor button base.\n */\nclass MatAnchorBase extends MatButtonBase {\n  constructor(elementRef, platform, ngZone, animationMode) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._haltDisabledEvents = event => {\n      // A disabled button shouldn't apply any actions\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    };\n  }\n  ngOnInit() {\n    this._ngZone.runOutsideAngular(() => {\n      this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n    });\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n  }\n  _getAriaDisabled() {\n    return this.ariaDisabled == null ? this.disabled : this.ariaDisabled;\n  }\n  static {\n    this.ɵfac = function MatAnchorBase_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAnchorBase,\n      inputs: {\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => {\n          return value == null ? undefined : numberAttribute(value);\n        }]\n      },\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAnchorBase, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }], {\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => {\n          return value == null ? undefined : numberAttribute(value);\n        }\n      }]\n    }]\n  });\n})();\n\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://material.io/components/buttons\n *\n * The `MatButton` class applies to native button elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatButton` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nclass MatButton extends MatButtonBase {\n  constructor(elementRef, platform, ngZone, animationMode) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n  static {\n    this.ɵfac = function MatButton_Factory(t) {\n      return new (t || MatButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatButton,\n      selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"], [\"button\", \"mat-stroked-button\", \"\"]],\n      hostVars: 14,\n      hostBindings: function MatButton_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatButton_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px);display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);font-weight:var(--mdc-text-button-label-text-weight);text-transform:var(--mdc-text-button-label-text-transform);height:var(--mdc-text-button-container-height);border-radius:var(--mdc-text-button-container-shape);padding:0 var(--mat-text-button-horizontal-padding, 8px)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);font-weight:var(--mdc-filled-button-label-text-weight);text-transform:var(--mdc-filled-button-label-text-transform);height:var(--mdc-filled-button-container-height);border-radius:var(--mdc-filled-button-container-shape);padding:0 var(--mat-filled-button-horizontal-padding, 16px)}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color)}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);font-weight:var(--mdc-protected-button-label-text-weight);text-transform:var(--mdc-protected-button-label-text-transform);height:var(--mdc-protected-button-container-height);border-radius:var(--mdc-protected-button-container-shape);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow)}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color)}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);font-weight:var(--mdc-outlined-button-label-text-weight);text-transform:var(--mdc-outlined-button-label-text-transform);height:var(--mdc-outlined-button-container-height);border-radius:var(--mdc-outlined-button-container-shape);padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width);padding:0 var(--mat-outlined-button-horizontal-padding, 15px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color)}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape)}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width))}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button-base{text-decoration:none}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButton, [{\n    type: Component,\n    args: [{\n      selector: `\n    button[mat-button], button[mat-raised-button], button[mat-flat-button],\n    button[mat-stroked-button]\n  `,\n      host: MAT_BUTTON_HOST,\n      exportAs: 'matButton',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px);display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);font-weight:var(--mdc-text-button-label-text-weight);text-transform:var(--mdc-text-button-label-text-transform);height:var(--mdc-text-button-container-height);border-radius:var(--mdc-text-button-container-shape);padding:0 var(--mat-text-button-horizontal-padding, 8px)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);font-weight:var(--mdc-filled-button-label-text-weight);text-transform:var(--mdc-filled-button-label-text-transform);height:var(--mdc-filled-button-container-height);border-radius:var(--mdc-filled-button-container-shape);padding:0 var(--mat-filled-button-horizontal-padding, 16px)}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color)}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);font-weight:var(--mdc-protected-button-label-text-weight);text-transform:var(--mdc-protected-button-label-text-transform);height:var(--mdc-protected-button-container-height);border-radius:var(--mdc-protected-button-container-shape);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow)}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color)}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);font-weight:var(--mdc-outlined-button-label-text-weight);text-transform:var(--mdc-outlined-button-label-text-transform);height:var(--mdc-outlined-button-container-height);border-radius:var(--mdc-outlined-button-container-shape);padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width);padding:0 var(--mat-outlined-button-horizontal-padding, 15px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color)}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape)}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width))}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button-base{text-decoration:none}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], null);\n})();\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons\n *\n * The `MatAnchor` class applies to native anchor elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatAnchor` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nclass MatAnchor extends MatAnchorBase {\n  constructor(elementRef, platform, ngZone, animationMode) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n  static {\n    this.ɵfac = function MatAnchor_Factory(t) {\n      return new (t || MatAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatAnchor,\n      selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"], [\"a\", \"mat-stroked-button\", \"\"]],\n      hostVars: 15,\n      hostBindings: function MatAnchor_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\", \"matAnchor\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatAnchor_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [_c3, _c4],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAnchor, [{\n    type: Component,\n    args: [{\n      selector: `a[mat-button], a[mat-raised-button], a[mat-flat-button], a[mat-stroked-button]`,\n      exportAs: 'matButton, matAnchor',\n      host: MAT_ANCHOR_HOST,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px);display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);font-weight:var(--mdc-text-button-label-text-weight);text-transform:var(--mdc-text-button-label-text-transform);height:var(--mdc-text-button-container-height);border-radius:var(--mdc-text-button-container-shape);padding:0 var(--mat-text-button-horizontal-padding, 8px)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);font-weight:var(--mdc-filled-button-label-text-weight);text-transform:var(--mdc-filled-button-label-text-transform);height:var(--mdc-filled-button-container-height);border-radius:var(--mdc-filled-button-container-shape);padding:0 var(--mat-filled-button-horizontal-padding, 16px)}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color)}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);font-weight:var(--mdc-protected-button-label-text-weight);text-transform:var(--mdc-protected-button-label-text-transform);height:var(--mdc-protected-button-container-height);border-radius:var(--mdc-protected-button-container-shape);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow)}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color)}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);font-weight:var(--mdc-outlined-button-label-text-weight);text-transform:var(--mdc-outlined-button-label-text-transform);height:var(--mdc-outlined-button-container-height);border-radius:var(--mdc-outlined-button-container-shape);padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width);padding:0 var(--mat-outlined-button-horizontal-padding, 15px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color)}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape)}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width))}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button-base{text-decoration:none}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], null);\n})();\n\n/** Injection token to be used to override the default options for FAB. */\nconst MAT_FAB_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-fab-default-options', {\n  providedIn: 'root',\n  factory: MAT_FAB_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_FAB_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    // The FAB by default has its color set to accent.\n    color: 'accent'\n  };\n}\n// Default FAB configuration.\nconst defaults = MAT_FAB_DEFAULT_OPTIONS_FACTORY();\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabButton` class has two appearances: normal and extended.\n */\nclass MatFabButton extends MatButtonBase {\n  constructor(elementRef, platform, ngZone, animationMode, _options) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._options = _options;\n    this._isFab = true;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n  }\n  static {\n    this.ɵfac = function MatFabButton_Factory(t) {\n      return new (t || MatFabButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFabButton,\n      selectors: [[\"button\", \"mat-fab\", \"\"]],\n      hostVars: 18,\n      hostBindings: function MatFabButton_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true)(\"mdc-fab--extended\", ctx.extended)(\"mat-mdc-extended-fab\", ctx.extended);\n        }\n      },\n      inputs: {\n        extended: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"extended\", \"extended\", booleanAttribute]\n      },\n      exportAs: [\"matButton\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c5,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatFabButton_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFabButton, [{\n    type: Component,\n    args: [{\n      selector: `button[mat-fab]`,\n      host: {\n        ...MAT_BUTTON_HOST,\n        '[class.mdc-fab--extended]': 'extended',\n        '[class.mat-mdc-extended-fab]': 'extended'\n      },\n      exportAs: 'matButton',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FAB_DEFAULT_OPTIONS]\n    }]\n  }], {\n    extended: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Material Design mini floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n */\nclass MatMiniFabButton extends MatButtonBase {\n  constructor(elementRef, platform, ngZone, animationMode, _options) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._options = _options;\n    this._isFab = true;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n  }\n  static {\n    this.ɵfac = function MatMiniFabButton_Factory(t) {\n      return new (t || MatMiniFabButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMiniFabButton,\n      selectors: [[\"button\", \"mat-mini-fab\", \"\"]],\n      hostVars: 14,\n      hostBindings: function MatMiniFabButton_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c6,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatMiniFabButton_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [_c7],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMiniFabButton, [{\n    type: Component,\n    args: [{\n      selector: `button[mat-mini-fab]`,\n      host: MAT_BUTTON_HOST,\n      exportAs: 'matButton',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FAB_DEFAULT_OPTIONS]\n    }]\n  }], null);\n})();\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabAnchor` class has two appearances: normal and extended.\n */\nclass MatFabAnchor extends MatAnchor {\n  constructor(elementRef, platform, ngZone, animationMode, _options) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._options = _options;\n    this._isFab = true;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n  }\n  static {\n    this.ɵfac = function MatFabAnchor_Factory(t) {\n      return new (t || MatFabAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFabAnchor,\n      selectors: [[\"a\", \"mat-fab\", \"\"]],\n      hostVars: 19,\n      hostBindings: function MatFabAnchor_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true)(\"mdc-fab--extended\", ctx.extended)(\"mat-mdc-extended-fab\", ctx.extended);\n        }\n      },\n      inputs: {\n        extended: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"extended\", \"extended\", booleanAttribute]\n      },\n      exportAs: [\"matButton\", \"matAnchor\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c5,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatFabAnchor_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [_c7],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFabAnchor, [{\n    type: Component,\n    args: [{\n      selector: `a[mat-fab]`,\n      host: {\n        ...MAT_ANCHOR_HOST,\n        '[class.mdc-fab--extended]': 'extended',\n        '[class.mat-mdc-extended-fab]': 'extended'\n      },\n      exportAs: 'matButton, matAnchor',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FAB_DEFAULT_OPTIONS]\n    }]\n  }], {\n    extended: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Material Design mini floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n */\nclass MatMiniFabAnchor extends MatAnchor {\n  constructor(elementRef, platform, ngZone, animationMode, _options) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._options = _options;\n    this._isFab = true;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n  }\n  static {\n    this.ɵfac = function MatMiniFabAnchor_Factory(t) {\n      return new (t || MatMiniFabAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMiniFabAnchor,\n      selectors: [[\"a\", \"mat-mini-fab\", \"\"]],\n      hostVars: 15,\n      hostBindings: function MatMiniFabAnchor_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\", \"matAnchor\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c6,\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatMiniFabAnchor_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 1);\n          i0.ɵɵprojection(3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 2);\n          i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n        }\n      },\n      styles: [_c7],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMiniFabAnchor, [{\n    type: Component,\n    args: [{\n      selector: `a[mat-mini-fab]`,\n      host: MAT_ANCHOR_HOST,\n      exportAs: 'matButton, matAnchor',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-fab{background-color:var(--mdc-fab-container-color)}.mat-mdc-fab .mdc-fab__icon{width:var(--mdc-fab-icon-size);height:var(--mdc-fab-icon-size);font-size:var(--mdc-fab-icon-size)}.mat-mdc-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape)}.mat-mdc-mini-fab{background-color:var(--mdc-fab-small-container-color)}.mat-mdc-mini-fab .mdc-fab__icon{width:var(--mdc-fab-small-icon-size);height:var(--mdc-fab-small-icon-size);font-size:var(--mdc-fab-small-icon-size)}.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-small-container-shape)}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:var(--mdc-extended-fab-container-shape)}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab[disabled],.mat-mdc-fab[disabled]:focus,.mat-mdc-fab.mat-mdc-button-disabled,.mat-mdc-fab.mat-mdc-button-disabled:focus,.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab[disabled]:focus,.mat-mdc-mini-fab.mat-mdc-button-disabled,.mat-mdc-mini-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab.mat-mdc-button-disabled-interactive,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{box-shadow:var(--mdc-extended-fab-container-elevation-shadow)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FAB_DEFAULT_OPTIONS]\n    }]\n  }], null);\n})();\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconButton extends MatButtonBase {\n  constructor(elementRef, platform, ngZone, animationMode) {\n    super(elementRef, platform, ngZone, animationMode);\n    this._rippleLoader.configureRipple(this._elementRef.nativeElement, {\n      centered: true\n    });\n  }\n  static {\n    this.ɵfac = function MatIconButton_Factory(t) {\n      return new (t || MatIconButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatIconButton,\n      selectors: [[\"button\", \"mat-icon-button\", \"\"]],\n      hostVars: 14,\n      hostBindings: function MatIconButton_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c8,\n      ngContentSelectors: _c9,\n      decls: 4,\n      vars: 0,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\", \"mdc-icon-button__ripple\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatIconButton_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelement(2, \"span\", 1)(3, \"span\", 2);\n        }\n      },\n      styles: [\".mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{color:var(--mdc-icon-button-icon-color)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button{border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", _c4],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatIconButton, [{\n    type: Component,\n    args: [{\n      selector: `button[mat-icon-button]`,\n      host: MAT_BUTTON_HOST,\n      exportAs: 'matButton',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{color:var(--mdc-icon-button-icon-color)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button{border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], null);\n})();\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconAnchor extends MatAnchorBase {\n  constructor(elementRef, platform, ngZone, animationMode) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n  static {\n    this.ɵfac = function MatIconAnchor_Factory(t) {\n      return new (t || MatIconAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatIconAnchor,\n      selectors: [[\"a\", \"mat-icon-button\", \"\"]],\n      hostVars: 15,\n      hostBindings: function MatIconAnchor_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n        }\n      },\n      exportAs: [\"matButton\", \"matAnchor\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c8,\n      ngContentSelectors: _c9,\n      decls: 4,\n      vars: 0,\n      consts: [[1, \"mat-mdc-button-persistent-ripple\", \"mdc-icon-button__ripple\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n      template: function MatIconAnchor_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelement(2, \"span\", 1)(3, \"span\", 2);\n        }\n      },\n      styles: [_c10, _c4],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatIconAnchor, [{\n    type: Component,\n    args: [{\n      selector: `a[mat-icon-button]`,\n      host: MAT_ANCHOR_HOST,\n      exportAs: 'matButton, matAnchor',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\",\n      styles: [\".mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{color:var(--mdc-icon-button-icon-color)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button{border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], null);\n})();\nclass MatButtonModule {\n  static {\n    this.ɵfac = function MatButtonModule_Factory(t) {\n      return new (t || MatButtonModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatButtonModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatAnchor, MatButton, MatIconAnchor, MatMiniFabAnchor, MatMiniFabButton, MatIconButton, MatFabAnchor, MatFabButton],\n      exports: [MatAnchor, MatButton, MatIconAnchor, MatIconButton, MatMiniFabAnchor, MatMiniFabButton, MatFabAnchor, MatFabButton, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_CONFIG, MAT_FAB_DEFAULT_OPTIONS, MAT_FAB_DEFAULT_OPTIONS_FACTORY, MatAnchor, MatButton, MatButtonModule, MatFabAnchor, MatFabButton, MatIconAnchor, MatIconButton, MatMiniFabAnchor, MatMiniFabButton };\n","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable } from '@angular/core';\nclass DataSource {}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n  // Check if the value is a DataSource by observing if it has a connect function. Cannot\n  // be checked as an `instanceof DataSource` since people could create their own sources\n  // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n  // here, because of some internal apps.\n  return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n  constructor(_data) {\n    super();\n    this._data = _data;\n  }\n  connect() {\n    return isObservable(this._data) ? this._data : of(this._data);\n  }\n  disconnect() {}\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n  /** The content of an existing view was replaced with another item. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n  /** A new view was created with `createEmbeddedView`. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n  /** The position of a view changed, but the content remains the same. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n  /** A view was detached from the view container. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n        operation = _ViewRepeaterOperation.INSERTED;\n      } else if (currentIndex == null) {\n        viewContainerRef.remove(adjustedPreviousIndex);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {}\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n  constructor() {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    this.viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    this._viewCache = [];\n  }\n  /** Apply changes to the DOM. */\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        // Item added.\n        const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n      } else if (currentIndex == null) {\n        // Item removed.\n        this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        // Item moved.\n        view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {\n    for (const view of this._viewCache) {\n      view.destroy();\n    }\n    this._viewCache = [];\n  }\n  /**\n   * Inserts a view for a new item, either from the cache or by creating a new\n   * one. Returns `undefined` if the item was inserted into a cached view.\n   */\n  _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n    const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n    if (cachedView) {\n      cachedView.context.$implicit = value;\n      return undefined;\n    }\n    const viewArgs = viewArgsFactory();\n    return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n  }\n  /** Detaches the view at the given index and inserts into the view cache. */\n  _detachAndCacheView(index, viewContainerRef) {\n    const detachedView = viewContainerRef.detach(index);\n    this._maybeCacheView(detachedView, viewContainerRef);\n  }\n  /** Moves view at the previous index to the current index. */\n  _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n    const view = viewContainerRef.get(adjustedPreviousIndex);\n    viewContainerRef.move(view, currentIndex);\n    view.context.$implicit = value;\n    return view;\n  }\n  /**\n   * Cache the given detached view. If the cache is full, the view will be\n   * destroyed.\n   */\n  _maybeCacheView(view, viewContainerRef) {\n    if (this._viewCache.length < this.viewCacheSize) {\n      this._viewCache.push(view);\n    } else {\n      const index = viewContainerRef.indexOf(view);\n      // The host component could remove views from the container outside of\n      // the view repeater. It's unlikely this will occur, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        viewContainerRef.remove(index);\n      }\n    }\n  }\n  /** Inserts a recycled view from the cache at the given index. */\n  _insertViewFromCache(index, viewContainerRef) {\n    const cachedView = this._viewCache.pop();\n    if (cachedView) {\n      viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n  /** Selected values. */\n  get selected() {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n    return this._selected;\n  }\n  constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n    this._multiple = _multiple;\n    this._emitChanges = _emitChanges;\n    this.compareWith = compareWith;\n    /** Currently-selected values. */\n    this._selection = new Set();\n    /** Keeps track of the deselected options that haven't been emitted by the change event. */\n    this._deselectedToEmit = [];\n    /** Keeps track of the selected options that haven't been emitted by the change event. */\n    this._selectedToEmit = [];\n    /** Event emitted when the value has changed. */\n    this.changed = new Subject();\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n  /**\n   * Selects a value or an array of values.\n   * @param values The values to select\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  select(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._markSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Deselects a value or an array of values.\n   * @param values The values to deselect\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  deselect(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Sets the selected values\n   * @param values The new selected values\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  setSelection(...values) {\n    this._verifyValueAssignment(values);\n    const oldValues = this.selected;\n    const newSelectedSet = new Set(values);\n    values.forEach(value => this._markSelected(value));\n    oldValues.filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet))).forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Toggles a value between selected and deselected.\n   * @param value The value to toggle\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  toggle(value) {\n    return this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n  /**\n   * Clears all of the selected values.\n   * @param flushEvent Whether to flush the changes in an event.\n   *   If false, the changes to the selection will be flushed along with the next event.\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  clear(flushEvent = true) {\n    this._unmarkAll();\n    const changed = this._hasQueuedChanges();\n    if (flushEvent) {\n      this._emitChangeEvent();\n    }\n    return changed;\n  }\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value) {\n    return this._selection.has(this._getConcreteValue(value));\n  }\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty() {\n    return this._selection.size === 0;\n  }\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue() {\n    return !this.isEmpty();\n  }\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate) {\n    if (this._multiple && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n  /** Emits a change event and clears the records of selected and deselected values. */\n  _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit\n      });\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n  /** Selects a value. */\n  _markSelected(value) {\n    value = this._getConcreteValue(value);\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n      if (!this.isSelected(value)) {\n        this._selection.add(value);\n      }\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n  /** Deselects a value. */\n  _unmarkSelected(value) {\n    value = this._getConcreteValue(value);\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n  /** Clears out the selected values. */\n  _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  _verifyValueAssignment(values) {\n    if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n  /** Whether there are queued up change to be emitted. */\n  _hasQueuedChanges() {\n    return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n  }\n  /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n  _getConcreteValue(inputValue, selection) {\n    if (!this.compareWith) {\n      return inputValue;\n    } else {\n      selection = selection ?? this._selection;\n      for (let selectedValue of selection) {\n        if (this.compareWith(inputValue, selectedValue)) {\n          return selectedValue;\n        }\n      }\n      return inputValue;\n    }\n  }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n  constructor() {\n    this._listeners = [];\n  }\n  /**\n   * Notify other items that selection for the given name has been set.\n   * @param id ID of the item.\n   * @param name Name of the item.\n   */\n  notify(id, name) {\n    for (let listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n  /**\n   * Listen for future changes to item selection.\n   * @return Function used to deregister listener\n   */\n  listen(listener) {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter(registered => {\n        return listener !== registered;\n      });\n    };\n  }\n  ngOnDestroy() {\n    this._listeners = [];\n  }\n  static {\n    this.ɵfac = function UniqueSelectionDispatcher_Factory(t) {\n      return new (t || UniqueSelectionDispatcher)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UniqueSelectionDispatcher,\n      factory: UniqueSelectionDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation, getMultipleValuesInSingleSelectionError, isDataSource };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    this._viewport = null;\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n  constructor() {\n    this._itemSize = 20;\n    this._minBufferPx = 100;\n    this._maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n  /** The size of the items in the list (in pixels). */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(value) {\n    this._itemSize = coerceNumberProperty(value);\n  }\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  get minBufferPx() {\n    return this._minBufferPx;\n  }\n  set minBufferPx(value) {\n    this._minBufferPx = coerceNumberProperty(value);\n  }\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  get maxBufferPx() {\n    return this._maxBufferPx;\n  }\n  set maxBufferPx(value) {\n    this._maxBufferPx = coerceNumberProperty(value);\n  }\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n  static {\n    this.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) {\n      return new (t || CdkFixedSizeVirtualScroll)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFixedSizeVirtualScroll,\n      selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n      inputs: {\n        itemSize: \"itemSize\",\n        minBufferPx: \"minBufferPx\",\n        maxBufferPx: \"maxBufferPx\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLL_STRATEGY,\n        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[itemSize]',\n      standalone: true,\n      providers: [{\n        provide: VIRTUAL_SCROLL_STRATEGY,\n        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n      }]\n    }]\n  }], null, {\n    itemSize: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n  constructor(_ngZone, _platform, document) {\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    this._scrolled = new Subject();\n    /** Keeps track of the global `scroll` and `resize` subscriptions. */\n    this._globalSubscription = null;\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    this._scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    this.scrollContainers = new Map();\n    this._document = document;\n  }\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable) {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n  /**\n   * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable) {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n    if (!this._platform.isBrowser) {\n      return of();\n    }\n    return new Observable(observer => {\n      if (!this._globalSubscription) {\n        this._addGlobalListener();\n      }\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n      this._scrolledCount++;\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n        if (!this._scrolledCount) {\n          this._removeGlobalListener();\n        }\n      };\n    });\n  }\n  ngOnDestroy() {\n    this._removeGlobalListener();\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementOrElementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n    const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n    return this.scrolled(auditTimeInMs).pipe(filter(target => {\n      return !target || ancestors.indexOf(target) > -1;\n    }));\n  }\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementOrElementRef) {\n    const scrollingContainers = [];\n    this.scrollContainers.forEach((_subscription, scrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n    return scrollingContainers;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /** Returns true if the element is contained within the provided Scrollable. */\n  _scrollableContainsElement(scrollable, elementOrElementRef) {\n    let element = coerceElement(elementOrElementRef);\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) {\n        return true;\n      }\n    } while (element = element.parentElement);\n    return false;\n  }\n  /** Sets up the global scroll listeners. */\n  _addGlobalListener() {\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      const window = this._getWindow();\n      return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n    });\n  }\n  /** Cleans up the global scroll listener. */\n  _removeGlobalListener() {\n    if (this._globalSubscription) {\n      this._globalSubscription.unsubscribe();\n      this._globalSubscription = null;\n    }\n  }\n  static {\n    this.ɵfac = function ScrollDispatcher_Factory(t) {\n      return new (t || ScrollDispatcher)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScrollDispatcher,\n      factory: ScrollDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n  constructor(elementRef, scrollDispatcher, ngZone, dir) {\n    this.elementRef = elementRef;\n    this.scrollDispatcher = scrollDispatcher;\n    this.ngZone = ngZone;\n    this.dir = dir;\n    this._destroyed = new Subject();\n    this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n  }\n  ngOnInit() {\n    this.scrollDispatcher.register(this);\n  }\n  ngOnDestroy() {\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled() {\n    return this._elementScrolled;\n  }\n  /** Gets the ElementRef for the viewport. */\n  getElementRef() {\n    return this.elementRef;\n  }\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options) {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    // Rewrite start & end offsets as right or left offsets.\n    if (options.left == null) {\n      options.left = isRtl ? options.end : options.start;\n    }\n    if (options.right == null) {\n      options.right = isRtl ? options.start : options.end;\n    }\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      options.top = el.scrollHeight - el.clientHeight - options.bottom;\n    }\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        options.right = el.scrollWidth - el.clientWidth - options.left;\n      }\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        options.left = el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n    this._applyScrollToOptions(options);\n  }\n  _applyScrollToOptions(options) {\n    const el = this.elementRef.nativeElement;\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from) {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n  static {\n    this.ɵfac = function CdkScrollable_Factory(t) {\n      return new (t || CdkScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkScrollable,\n      selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkScrollable, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-scrollable], [cdkScrollable]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n  constructor(_platform, ngZone, document) {\n    this._platform = _platform;\n    /** Stream of viewport change events. */\n    this._change = new Subject();\n    /** Event listener that will be used to handle the viewport change events. */\n    this._changeListener = event => {\n      this._change.next(event);\n    };\n    this._document = document;\n    ngZone.runOutsideAngular(() => {\n      if (_platform.isBrowser) {\n        const window = this._getWindow();\n        // Note that bind the events ourselves, rather than going through something like RxJS's\n        // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n        window.addEventListener('resize', this._changeListener);\n        window.addEventListener('orientationchange', this._changeListener);\n      }\n      // Clear the cached position so that the viewport is re-measured next time it is required.\n      // We don't need to keep track of the subscription, because it is completed on destroy.\n      this.change().subscribe(() => this._viewportSize = null);\n    });\n  }\n  ngOnDestroy() {\n    if (this._platform.isBrowser) {\n      const window = this._getWindow();\n      window.removeEventListener('resize', this._changeListener);\n      window.removeEventListener('orientationchange', this._changeListener);\n    }\n    this._change.complete();\n  }\n  /** Returns the viewport's width and height. */\n  getViewportSize() {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n    const output = {\n      width: this._viewportSize.width,\n      height: this._viewportSize.height\n    };\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null;\n    }\n    return output;\n  }\n  /** Gets a DOMRect for the viewport's bounds. */\n  getViewportRect() {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {\n      width,\n      height\n    } = this.getViewportSize();\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width\n    };\n  }\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition() {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const document = this._document;\n    const window = this._getWindow();\n    const documentElement = document.documentElement;\n    const documentRect = documentElement.getBoundingClientRect();\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * This stream emits outside of the Angular zone.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime = DEFAULT_RESIZE_TIME) {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /** Updates the cached viewport size. */\n  _updateViewportSize() {\n    const window = this._getWindow();\n    this._viewportSize = this._platform.isBrowser ? {\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : {\n      width: 0,\n      height: 0\n    };\n  }\n  static {\n    this.ɵfac = function ViewportRuler_Factory(t) {\n      return new (t || ViewportRuler)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ViewportRuler,\n      factory: ViewportRuler.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewportRuler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n  constructor(elementRef, scrollDispatcher, ngZone, dir) {\n    super(elementRef, scrollDispatcher, ngZone, dir);\n  }\n  /**\n   * Measure the viewport size for the provided orientation.\n   *\n   * @param orientation The orientation to measure the size from.\n   */\n  measureViewportSize(orientation) {\n    const viewportEl = this.elementRef.nativeElement;\n    return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n  }\n  static {\n    this.ɵfac = function CdkVirtualScrollable_Factory(t) {\n      return new (t || CdkVirtualScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollable,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollable, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n  /** The direction the viewport scrolls. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(orientation) {\n    if (this._orientation !== orientation) {\n      this._orientation = orientation;\n      this._calculateSpacerSize();\n    }\n  }\n  constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n    super(elementRef, scrollDispatcher, ngZone, dir);\n    this.elementRef = elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._scrollStrategy = _scrollStrategy;\n    this.scrollable = scrollable;\n    this._platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    this._detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    this._renderedRangeSubject = new Subject();\n    this._orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    this.appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    this.scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** A stream that emits whenever the rendered range changes. */\n    this.renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    this._totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    this._totalContentWidth = '';\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    this._totalContentHeight = '';\n    /** The currently rendered range of indices. */\n    this._renderedRange = {\n      start: 0,\n      end: 0\n    };\n    /** The length of the data bound to this viewport (in number of items). */\n    this._dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    this._viewportSize = 0;\n    /** The last rendered content offset that was set. */\n    this._renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    this._renderedContentOffsetNeedsRewrite = false;\n    /** Whether there is a pending change detection cycle. */\n    this._isChangeDetectionPending = false;\n    /** A list of functions to run after the next change detection cycle. */\n    this._runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    this._viewportChanges = Subscription.EMPTY;\n    if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }\n    this._viewportChanges = viewportRuler.change().subscribe(() => {\n      this.checkViewportSize();\n    });\n    if (!this.scrollable) {\n      // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n      this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n      this.scrollable = this;\n    }\n  }\n  ngOnInit() {\n    // Scrolling depends on the element dimensions which we can't get during SSR.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    if (this.scrollable === this) {\n      super.ngOnInit();\n    }\n    // It's still too early to measure the viewport at this point. Deferring with a promise allows\n    // the Viewport to be rendered with the correct size before we measure. We run this outside the\n    // zone to avoid causing more change detection cycles. We handle the change detection loop\n    // ourselves instead.\n    this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n      this._measureViewportSize();\n      this._scrollStrategy.attach(this);\n      this.scrollable.elementScrolled().pipe(\n      // Start off with a fake scroll event so we properly detect our initial position.\n      startWith(null),\n      // Collect multiple events into one until the next animation frame. This way if\n      // there are multiple scroll events in the same frame we only need to recheck\n      // our layout once.\n      auditTime(0, SCROLL_SCHEDULER),\n      // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n      // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n      // to unsubscribe here just in case.\n      takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n      this._markChangeDetectionNeeded();\n    }));\n  }\n  ngOnDestroy() {\n    this.detach();\n    this._scrollStrategy.detach();\n    // Complete all subjects\n    this._renderedRangeSubject.complete();\n    this._detachedSubject.complete();\n    this._viewportChanges.unsubscribe();\n    super.ngOnDestroy();\n  }\n  /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n  attach(forOf) {\n    if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkVirtualScrollViewport is already attached.');\n    }\n    // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n    // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n    // change detection loop ourselves.\n    this.ngZone.runOutsideAngular(() => {\n      this._forOf = forOf;\n      this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n        const newLength = data.length;\n        if (newLength !== this._dataLength) {\n          this._dataLength = newLength;\n          this._scrollStrategy.onDataLengthChanged();\n        }\n        this._doChangeDetection();\n      });\n    });\n  }\n  /** Detaches the current `CdkVirtualForOf`. */\n  detach() {\n    this._forOf = null;\n    this._detachedSubject.next();\n  }\n  /** Gets the length of the data bound to this viewport (in number of items). */\n  getDataLength() {\n    return this._dataLength;\n  }\n  /** Gets the size of the viewport (in pixels). */\n  getViewportSize() {\n    return this._viewportSize;\n  }\n  // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n  // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n  // setting it to something else, but its error prone and should probably be split into\n  // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n  /** Get the current rendered range of items. */\n  getRenderedRange() {\n    return this._renderedRange;\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  /**\n   * Sets the total size of all content (in pixels), including content that is not currently\n   * rendered.\n   */\n  setTotalContentSize(size) {\n    if (this._totalContentSize !== size) {\n      this._totalContentSize = size;\n      this._calculateSpacerSize();\n      this._markChangeDetectionNeeded();\n    }\n  }\n  /** Sets the currently rendered range of indices. */\n  setRenderedRange(range) {\n    if (!rangesEqual(this._renderedRange, range)) {\n      if (this.appendOnly) {\n        range = {\n          start: 0,\n          end: Math.max(this._renderedRange.end, range.end)\n        };\n      }\n      this._renderedRangeSubject.next(this._renderedRange = range);\n      this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n    }\n  }\n  /**\n   * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n   */\n  getOffsetToRenderedContentStart() {\n    return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n  }\n  /**\n   * Sets the offset from the start of the viewport to either the start or end of the rendered data\n   * (in pixels).\n   */\n  setRenderedContentOffset(offset, to = 'to-start') {\n    // In appendOnly, we always start from the top\n    offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n    // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n    // in the negative direction.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    const isHorizontal = this.orientation == 'horizontal';\n    const axis = isHorizontal ? 'X' : 'Y';\n    const axisDirection = isHorizontal && isRtl ? -1 : 1;\n    let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n    this._renderedContentOffset = offset;\n    if (to === 'to-end') {\n      transform += ` translate${axis}(-100%)`;\n      // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n      // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n      // expand upward).\n      this._renderedContentOffsetNeedsRewrite = true;\n    }\n    if (this._renderedContentTransform != transform) {\n      // We know this value is safe because we parse `offset` with `Number()` before passing it\n      // into the string.\n      this._renderedContentTransform = transform;\n      this._markChangeDetectionNeeded(() => {\n        if (this._renderedContentOffsetNeedsRewrite) {\n          this._renderedContentOffset -= this.measureRenderedContentSize();\n          this._renderedContentOffsetNeedsRewrite = false;\n          this.setRenderedContentOffset(this._renderedContentOffset);\n        } else {\n          this._scrollStrategy.onRenderedOffsetChanged();\n        }\n      });\n    }\n  }\n  /**\n   * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n   * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n   * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n   * @param offset The offset to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToOffset(offset, behavior = 'auto') {\n    const options = {\n      behavior\n    };\n    if (this.orientation === 'horizontal') {\n      options.start = offset;\n    } else {\n      options.top = offset;\n    }\n    this.scrollable.scrollTo(options);\n  }\n  /**\n   * Scrolls to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToIndex(index, behavior = 'auto') {\n    this._scrollStrategy.scrollToIndex(index, behavior);\n  }\n  /**\n   * Gets the current scroll offset from the start of the scrollable (in pixels).\n   * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n   *     in horizontal mode.\n   */\n  measureScrollOffset(from) {\n    // This is to break the call cycle\n    let measureScrollOffset;\n    if (this.scrollable == this) {\n      measureScrollOffset = _from => super.measureScrollOffset(_from);\n    } else {\n      measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n    }\n    return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n  }\n  /**\n   * Measures the offset of the viewport from the scrolling container\n   * @param from The edge to measure from.\n   */\n  measureViewportOffset(from) {\n    let fromRect;\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const isRtl = this.dir?.value == 'rtl';\n    if (from == 'start') {\n      fromRect = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      fromRect = isRtl ? LEFT : RIGHT;\n    } else if (from) {\n      fromRect = from;\n    } else {\n      fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n    }\n    const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n    const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n    return viewportClientRect - scrollerClientRect;\n  }\n  /** Measure the combined size of all of the rendered items. */\n  measureRenderedContentSize() {\n    const contentEl = this._contentWrapper.nativeElement;\n    return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n  }\n  /**\n   * Measure the total combined size of the given range. Throws if the range includes items that are\n   * not rendered.\n   */\n  measureRangeSize(range) {\n    if (!this._forOf) {\n      return 0;\n    }\n    return this._forOf.measureRangeSize(range, this.orientation);\n  }\n  /** Update the viewport dimensions and re-render. */\n  checkViewportSize() {\n    // TODO: Cleanup later when add logic for handling content resize\n    this._measureViewportSize();\n    this._scrollStrategy.onDataLengthChanged();\n  }\n  /** Measure the viewport size. */\n  _measureViewportSize() {\n    this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n  }\n  /** Queue up change detection to run. */\n  _markChangeDetectionNeeded(runAfter) {\n    if (runAfter) {\n      this._runAfterChangeDetection.push(runAfter);\n    }\n    // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n    // properties sequentially we only have to run `_doChangeDetection` once at the end.\n    if (!this._isChangeDetectionPending) {\n      this._isChangeDetectionPending = true;\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._doChangeDetection();\n      }));\n    }\n  }\n  /** Run change detection. */\n  _doChangeDetection() {\n    this._isChangeDetectionPending = false;\n    // Apply the content transform. The transform can't be set via an Angular binding because\n    // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n    // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n    // the `Number` function first to coerce it to a numeric value.\n    this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n    // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n    // from the root, since the repeated items are content projected in. Calling `detectChanges`\n    // instead does not properly check the projected content.\n    this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n    const runAfterChangeDetection = this._runAfterChangeDetection;\n    this._runAfterChangeDetection = [];\n    for (const fn of runAfterChangeDetection) {\n      fn();\n    }\n  }\n  /** Calculates the `style.width` and `style.height` for the spacer element. */\n  _calculateSpacerSize() {\n    this._totalContentHeight = this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n    this._totalContentWidth = this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n  }\n  static {\n    this.ɵfac = function CdkVirtualScrollViewport_Factory(t) {\n      return new (t || CdkVirtualScrollViewport)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(ViewportRuler), i0.ɵɵdirectiveInject(VIRTUAL_SCROLLABLE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkVirtualScrollViewport,\n      selectors: [[\"cdk-virtual-scroll-viewport\"]],\n      viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n        }\n      },\n      hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n      hostVars: 4,\n      hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n        }\n      },\n      inputs: {\n        orientation: \"orientation\",\n        appendOnly: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"appendOnly\", \"appendOnly\", booleanAttribute]\n      },\n      outputs: {\n        scrolledIndexChange: \"scrolledIndexChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n        deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 4,\n      consts: [[\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-content-wrapper\"], [1, \"cdk-virtual-scroll-spacer\"]],\n      template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n        }\n      },\n      styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport',\n      host: {\n        'class': 'cdk-virtual-scroll-viewport',\n        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      providers: [{\n        provide: CdkScrollable,\n        useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n        deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n      }],\n      template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n      styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [VIRTUAL_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: ViewportRuler\n  }, {\n    type: CdkVirtualScrollable,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [VIRTUAL_SCROLLABLE]\n    }]\n  }], {\n    orientation: [{\n      type: Input\n    }],\n    appendOnly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrolledIndexChange: [{\n      type: Output\n    }],\n    _contentWrapper: [{\n      type: ViewChild,\n      args: ['contentWrapper', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n  /** The DataSource to display. */\n  get cdkVirtualForOf() {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value) {\n    this._cdkVirtualForOf = value;\n    if (isDataSource(value)) {\n      this._dataSourceChanges.next(value);\n    } else {\n      // If value is an an NgIterable, convert it to an array.\n      this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n    }\n  }\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  get cdkVirtualForTrackBy() {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n  }\n  /** The template used to stamp out new elements. */\n  set cdkVirtualForTemplate(value) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  get cdkVirtualForTemplateCacheSize() {\n    return this._viewRepeater.viewCacheSize;\n  }\n  set cdkVirtualForTemplateCacheSize(size) {\n    this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n  }\n  constructor( /** The view container to add items to. */\n  _viewContainerRef, /** The template to use when stamping out new items. */\n  _template, /** The set of available differs. */\n  _differs, /** The strategy used to render items in the virtual scroll viewport. */\n  _viewRepeater, /** The virtual scrolling viewport that these items are being rendered in. */\n  _viewport, ngZone) {\n    this._viewContainerRef = _viewContainerRef;\n    this._template = _template;\n    this._differs = _differs;\n    this._viewRepeater = _viewRepeater;\n    this._viewport = _viewport;\n    /** Emits when the rendered view of the data changes. */\n    this.viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    this._dataSourceChanges = new Subject();\n    /** Emits whenever the data in the current DataSource changes. */\n    this.dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null),\n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(),\n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    this._differ = null;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    this._needsUpdate = false;\n    this._destroyed = new Subject();\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      if (this.viewChange.observers.length) {\n        ngZone.run(() => this.viewChange.next(this._renderedRange));\n      }\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range, orientation) {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n    // Loop over all the views, find the first and land node and compute the size by subtracting\n    // the top of the first node from the bottom of the last one.\n    let firstNode;\n    let lastNode;\n    // Find the first node by starting from the beginning and going forwards.\n    for (let i = 0; i < rangeLen; i++) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        firstNode = lastNode = view.rootNodes[0];\n        break;\n      }\n    }\n    // Find the last node by starting from the end and going backwards.\n    for (let i = rangeLen - 1; i > -1; i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        lastNode = view.rootNodes[view.rootNodes.length - 1];\n        break;\n      }\n    }\n    return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n  }\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n  ngOnDestroy() {\n    this._viewport.detach();\n    this._dataSourceChanges.next(undefined);\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._viewRepeater.detach();\n  }\n  /** React to scroll state changes in the viewport. */\n  _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      // Use a wrapper function for the `trackBy` so any new values are\n      // picked up automatically without having to recreate the differ.\n      this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n        return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n      });\n    }\n    this._needsUpdate = true;\n  }\n  /** Swap out one `DataSource` for another. */\n  _changeDataSource(oldDs, newDs) {\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : of();\n  }\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n  /** Apply changes to the DOM. */\n  _applyChanges(changes) {\n    this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange(record => {\n      const view = this._viewContainerRef.get(record.currentIndex);\n      view.context.$implicit = record.item;\n    });\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  _updateComputedContextProperties(context) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n  _getEmbeddedViewArgs(record, index) {\n    // Note that it's important that we insert the item directly at the proper index,\n    // rather than inserting it and the moving it in place, because if there's a directive\n    // on the same node that injects the `ViewContainerRef`, Angular will insert another\n    // comment node which can throw off the move when it's being repeated for all items.\n    return {\n      templateRef: this._template,\n      context: {\n        $implicit: record.item,\n        // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n        // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n        cdkVirtualForOf: this._cdkVirtualForOf,\n        index: -1,\n        count: -1,\n        first: false,\n        last: false,\n        odd: false,\n        even: false\n      },\n      index\n    };\n  }\n  static {\n    this.ɵfac = function CdkVirtualForOf_Factory(t) {\n      return new (t || CdkVirtualForOf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), i0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualForOf,\n      selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n      inputs: {\n        cdkVirtualForOf: \"cdkVirtualForOf\",\n        cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n        cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n        cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualForOf, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualFor][cdkVirtualForOf]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }, {\n    type: i2$1._RecycleViewRepeaterStrategy,\n    decorators: [{\n      type: Inject,\n      args: [_VIEW_REPEATER_STRATEGY]\n    }]\n  }, {\n    type: CdkVirtualScrollViewport,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: i0.NgZone\n  }], {\n    cdkVirtualForOf: [{\n      type: Input\n    }],\n    cdkVirtualForTrackBy: [{\n      type: Input\n    }],\n    cdkVirtualForTemplate: [{\n      type: Input\n    }],\n    cdkVirtualForTemplateCacheSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n  constructor(elementRef, scrollDispatcher, ngZone, dir) {\n    super(elementRef, scrollDispatcher, ngZone, dir);\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n  }\n  static {\n    this.ɵfac = function CdkVirtualScrollableElement_Factory(t) {\n      return new (t || CdkVirtualScrollableElement)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollableElement,\n      selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n      hostAttrs: [1, \"cdk-virtual-scrollable\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableElement\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollableElement, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualScrollingElement]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableElement\n      }],\n      standalone: true,\n      host: {\n        'class': 'cdk-virtual-scrollable'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n  constructor(scrollDispatcher, ngZone, dir) {\n    super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n    this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  static {\n    this.ɵfac = function CdkVirtualScrollableWindow_Factory(t) {\n      return new (t || CdkVirtualScrollableWindow)(i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollableWindow,\n      selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableWindow\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollableWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableWindow\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass CdkScrollableModule {\n  static {\n    this.ɵfac = function CdkScrollableModule_Factory(t) {\n      return new (t || CdkScrollableModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkScrollableModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkScrollableModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkScrollable],\n      imports: [CdkScrollable]\n    }]\n  }], null, null);\n})();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n  static {\n    this.ɵfac = function ScrollingModule_Factory(t) {\n      return new (t || ScrollingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ScrollingModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollableWindow, CdkVirtualScrollableElement],\n      exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollableWindow, CdkVirtualScrollableElement]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n  throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' + 'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n  /** Attach this portal to a host. */\n  attach(host) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (host == null) {\n        throwNullPortalOutletError();\n      }\n      if (host.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n    }\n    this._attachedHost = host;\n    return host.attach(this);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    let host = this._attachedHost;\n    if (host != null) {\n      this._attachedHost = null;\n      host.detach();\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwNoPortalAttachedError();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n  constructor(component, viewContainerRef, injector, componentFactoryResolver, projectableNodes) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.projectableNodes = projectableNodes;\n  }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n  constructor( /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef, /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef, /** Contextual data to be passed in to the embedded view. */\n  context, /** The injector to use for the embedded view. */\n  injector) {\n    super();\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n    this.context = context;\n    this.injector = injector;\n  }\n  get origin() {\n    return this.templateRef.elementRef;\n  }\n  /**\n   * Attach the portal to the provided `PortalOutlet`.\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\n   * instance.\n   */\n  attach(host, context = this.context) {\n    this.context = context;\n    return super.attach(host);\n  }\n  detach() {\n    this.context = undefined;\n    return super.detach();\n  }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n  constructor(element) {\n    super();\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n  constructor() {\n    /** Whether this host has already been permanently disposed. */\n    this._isDisposed = false;\n    // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n    this.attachDomPortal = null;\n  }\n  /** Whether this host has an attached portal. */\n  hasAttached() {\n    return !!this._attachedPortal;\n  }\n  /** Attaches a portal. */\n  attach(portal) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!portal) {\n        throwNullPortalError();\n      }\n      if (this.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n      if (this._isDisposed) {\n        throwPortalOutletAlreadyDisposedError();\n      }\n    }\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n      // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n    } else if (this.attachDomPortal && portal instanceof DomPortal) {\n      this._attachedPortal = portal;\n      return this.attachDomPortal(portal);\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwUnknownPortalTypeError();\n    }\n  }\n  /** Detaches a previously attached portal. */\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n    this._invokeDisposeFn();\n  }\n  /** Permanently dispose of this portal host. */\n  dispose() {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n  /** @docs-private */\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n  _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n  /**\n   * @param outletElement Element into which the content is projected.\n   * @param _componentFactoryResolver Used to resolve the component factory.\n   *   Only required when attaching component portals.\n   * @param _appRef Reference to the application. Only used in component portals when there\n   *   is no `ViewContainerRef` available.\n   * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n   *   have one. Only used for component portals.\n   * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n   *   become a required parameter.\n   */\n  constructor( /** Element into which the content is projected. */\n  outletElement, _componentFactoryResolver, _appRef, _defaultInjector,\n  /**\n   * @deprecated `_document` Parameter to be made required.\n   * @breaking-change 10.0.0\n   */\n  _document) {\n    super();\n    this.outletElement = outletElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._defaultInjector = _defaultInjector;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      // @breaking-change 10.0.0 Remove check and error once the\n      // `_document` constructor parameter is required.\n      if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Cannot attach DOM portal without _document constructor parameter');\n      }\n      const element = portal.element;\n      if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('DOM portal content must be attached to a parent node.');\n      }\n      // Anchor used to save the element's previous position so\n      // that we can restore it when the portal is detached.\n      const anchorNode = this._document.createComment('dom-portal');\n      element.parentNode.insertBefore(anchorNode, element);\n      this.outletElement.appendChild(element);\n      this._attachedPortal = portal;\n      super.setDisposeFn(() => {\n        // We can't use `replaceWith` here because IE doesn't support it.\n        if (anchorNode.parentNode) {\n          anchorNode.parentNode.replaceChild(element, anchorNode);\n        }\n      });\n    };\n    this._document = _document;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal(portal) {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n      throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n    }\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector, portal.projectableNodes || undefined);\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n        throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n      }\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        // Verify that the ApplicationRef has registered views before trying to detach a host view.\n        // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n        if (this._appRef.viewCount > 0) {\n          this._appRef.detachView(componentRef.hostView);\n        }\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n    this._attachedPortal = portal;\n    return componentRef;\n  }\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal(portal) {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n      injector: portal.injector\n    });\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n    // Note that we want to detect changes after the nodes have been moved so that\n    // any directives inside the portal that are looking at the DOM inside a lifecycle\n    // hook won't be invoked too early.\n    viewRef.detectChanges();\n    this.setDisposeFn(() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    });\n    this._attachedPortal = portal;\n    // TODO(jelbourn): Return locals from view.\n    return viewRef;\n  }\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose() {\n    super.dispose();\n    this.outletElement.remove();\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n  constructor(templateRef, viewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n  static {\n    this.ɵfac = function CdkPortal_Factory(t) {\n      return new (t || CdkPortal)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkPortal,\n      selectors: [[\"\", \"cdkPortal\", \"\"]],\n      exportAs: [\"cdkPortal\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkPortal]',\n      exportAs: 'cdkPortal',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.ViewContainerRef\n  }], null);\n})();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTemplatePortalDirective_BaseFactory;\n      return function TemplatePortalDirective_Factory(t) {\n        return (ɵTemplatePortalDirective_BaseFactory || (ɵTemplatePortalDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TemplatePortalDirective)))(t || TemplatePortalDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TemplatePortalDirective,\n      selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]],\n      exportAs: [\"cdkPortal\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkPortal,\n        useExisting: TemplatePortalDirective\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplatePortalDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-portal], [portal]',\n      exportAs: 'cdkPortal',\n      providers: [{\n        provide: CdkPortal,\n        useExisting: TemplatePortalDirective\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n  constructor(_componentFactoryResolver, _viewContainerRef,\n  /**\n   * @deprecated `_document` parameter to be made required.\n   * @breaking-change 9.0.0\n   */\n  _document) {\n    super();\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._viewContainerRef = _viewContainerRef;\n    /** Whether the portal component is initialized. */\n    this._isInitialized = false;\n    /** Emits when a portal is attached to the outlet. */\n    this.attached = new EventEmitter();\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      // @breaking-change 9.0.0 Remove check and error once the\n      // `_document` constructor parameter is required.\n      if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Cannot attach DOM portal without _document constructor parameter');\n      }\n      const element = portal.element;\n      if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('DOM portal content must be attached to a parent node.');\n      }\n      // Anchor used to save the element's previous position so\n      // that we can restore it when the portal is detached.\n      const anchorNode = this._document.createComment('dom-portal');\n      portal.setAttachedHost(this);\n      element.parentNode.insertBefore(anchorNode, element);\n      this._getRootNode().appendChild(element);\n      this._attachedPortal = portal;\n      super.setDisposeFn(() => {\n        if (anchorNode.parentNode) {\n          anchorNode.parentNode.replaceChild(element, anchorNode);\n        }\n      });\n    };\n    this._document = _document;\n  }\n  /** Portal associated with the Portal outlet. */\n  get portal() {\n    return this._attachedPortal;\n  }\n  set portal(portal) {\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\n    if (this.hasAttached() && !portal && !this._isInitialized) {\n      return;\n    }\n    if (this.hasAttached()) {\n      super.detach();\n    }\n    if (portal) {\n      super.attach(portal);\n    }\n    this._attachedPortal = portal || null;\n  }\n  /** Component or view reference that is attached to the portal. */\n  get attachedRef() {\n    return this._attachedRef;\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n  }\n  ngOnDestroy() {\n    super.dispose();\n    this._attachedRef = this._attachedPortal = null;\n  }\n  /**\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal outlet.\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal(portal) {\n    portal.setAttachedHost(this);\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalOutlet.\n    const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector, portal.projectableNodes || undefined);\n    // If we're using a view container that's different from the injected one (e.g. when the portal\n    // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n    // inside of the alternate view container.\n    if (viewContainerRef !== this._viewContainerRef) {\n      this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n    }\n    super.setDisposeFn(() => ref.destroy());\n    this._attachedPortal = portal;\n    this._attachedRef = ref;\n    this.attached.emit(ref);\n    return ref;\n  }\n  /**\n   * Attach the given TemplatePortal to this PortalHost as an embedded View.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal(portal) {\n    portal.setAttachedHost(this);\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n      injector: portal.injector\n    });\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n    this._attachedPortal = portal;\n    this._attachedRef = viewRef;\n    this.attached.emit(viewRef);\n    return viewRef;\n  }\n  /** Gets the root node of the portal outlet. */\n  _getRootNode() {\n    const nativeElement = this._viewContainerRef.element.nativeElement;\n    // The directive could be set on a template which will result in a comment\n    // node being the root. Use the comment's parent node if that is the case.\n    return nativeElement.nodeType === nativeElement.ELEMENT_NODE ? nativeElement : nativeElement.parentNode;\n  }\n  static {\n    this.ɵfac = function CdkPortalOutlet_Factory(t) {\n      return new (t || CdkPortalOutlet)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkPortalOutlet,\n      selectors: [[\"\", \"cdkPortalOutlet\", \"\"]],\n      inputs: {\n        portal: [i0.ɵɵInputFlags.None, \"cdkPortalOutlet\", \"portal\"]\n      },\n      outputs: {\n        attached: \"attached\"\n      },\n      exportAs: [\"cdkPortalOutlet\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkPortalOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkPortalOutlet]',\n      exportAs: 'cdkPortalOutlet',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    portal: [{\n      type: Input,\n      args: ['cdkPortalOutlet']\n    }],\n    attached: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵPortalHostDirective_BaseFactory;\n      return function PortalHostDirective_Factory(t) {\n        return (ɵPortalHostDirective_BaseFactory || (ɵPortalHostDirective_BaseFactory = i0.ɵɵgetInheritedFactory(PortalHostDirective)))(t || PortalHostDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PortalHostDirective,\n      selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]],\n      inputs: {\n        portal: [i0.ɵɵInputFlags.None, \"cdkPortalHost\", \"portal\"]\n      },\n      exportAs: [\"cdkPortalHost\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkPortalOutlet,\n        useExisting: PortalHostDirective\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PortalHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkPortalHost], [portalHost]',\n      exportAs: 'cdkPortalHost',\n      inputs: [{\n        name: 'portal',\n        alias: 'cdkPortalHost'\n      }],\n      providers: [{\n        provide: CdkPortalOutlet,\n        useExisting: PortalHostDirective\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass PortalModule {\n  static {\n    this.ɵfac = function PortalModule_Factory(t) {\n      return new (t || PortalModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PortalModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PortalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n      exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n  constructor(_parentInjector, _customTokens) {\n    this._parentInjector = _parentInjector;\n    this._customTokens = _customTokens;\n  }\n  get(token, notFoundValue) {\n    const value = this._customTokens.get(token);\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, NgZone, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n  constructor(_viewportRuler, document) {\n    this._viewportRuler = _viewportRuler;\n    this._previousHTMLStyles = {\n      top: '',\n      left: ''\n    };\n    this._isEnabled = false;\n    this._document = document;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach() {}\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement;\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n      root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement;\n      const body = this._document.body;\n      const htmlStyle = html.style;\n      const bodyStyle = body.style;\n      const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n      const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n      this._isEnabled = false;\n      htmlStyle.left = this._previousHTMLStyles.left;\n      htmlStyle.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n      // because it can throw off feature detections in `supportsScrollBehavior` which\n      // checks for `'scrollBehavior' in documentElement.style`.\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n      }\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n        bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n      }\n    }\n  }\n  _canBeEnabled() {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement;\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n  return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n  constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._config = _config;\n    this._scrollSubscription = null;\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    this._detach = () => {\n      this.disable();\n      if (this._overlayRef.hasAttached()) {\n        this._ngZone.run(() => this._overlayRef.detach());\n      }\n    };\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n    const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n      return !scrollable || !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement);\n    }));\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() {}\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n  constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._viewportRuler = _viewportRuler;\n    this._ngZone = _ngZone;\n    this._config = _config;\n    this._scrollSubscription = null;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {\n            width,\n            height\n          } = this._viewportRuler.getViewportSize();\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{\n            width,\n            height,\n            bottom: height,\n            right: width,\n            top: 0,\n            left: 0\n          }];\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n  constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._viewportRuler = _viewportRuler;\n    this._ngZone = _ngZone;\n    /** Do nothing on scroll. */\n    this.noop = () => new NoopScrollStrategy();\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * @param config Configuration to be used inside the scroll strategy.\n     */\n    this.close = config => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n    /** Block scrolling. */\n    this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n    /**\n     * Update the overlay's position on scroll.\n     * @param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     */\n    this.reposition = config => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n    this._document = document;\n  }\n  static {\n    this.ɵfac = function ScrollStrategyOptions_Factory(t) {\n      return new (t || ScrollStrategyOptions)(i0.ɵɵinject(i1.ScrollDispatcher), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScrollStrategyOptions,\n      factory: ScrollStrategyOptions.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.ScrollDispatcher\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n  constructor(config) {\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    this.scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    this.panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    this.hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    this.backdropClass = 'cdk-overlay-dark-backdrop';\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.disposeOnNavigation = false;\n    if (config) {\n      // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n      const configKeys = Object.keys(config);\n      for (const key of configKeys) {\n        if (config[key] !== undefined) {\n          // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n          // as \"I don't know *which* key this is, so the only valid value is the intersection\n          // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n          // is not smart enough to see that the right-hand-side is actually an access of the same\n          // exact type with the same exact key, meaning that the value type must be identical.\n          // So we use `any` to work around this.\n          this[key] = config[key];\n        }\n      }\n    }\n  }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n  constructor(origin, overlay, /** Offset along the X axis. */\n  offsetX, /** Offset along the Y axis. */\n  offsetY, /** Class(es) to be applied to the panel while this position is active. */\n  panelClass) {\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.panelClass = panelClass;\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n  constructor( /** The position used as a result of this change. */\n  connectionPair, /** @docs-private */\n  scrollableViewProperties) {\n    this.connectionPair = connectionPair;\n    this.scrollableViewProperties = scrollableViewProperties;\n  }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n  if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"top\", \"bottom\" or \"center\".`);\n  }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n  if (value !== 'start' && value !== 'end' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"start\", \"end\" or \"center\".`);\n  }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n  constructor(document) {\n    /** Currently attached overlays in the order they were attached. */\n    this._attachedOverlays = [];\n    this._document = document;\n  }\n  ngOnDestroy() {\n    this.detach();\n  }\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef) {\n    // Ensure that we don't get the same overlay multiple times.\n    this.remove(overlayRef);\n    this._attachedOverlays.push(overlayRef);\n  }\n  /** Remove an overlay from the list of attached overlay refs. */\n  remove(overlayRef) {\n    const index = this._attachedOverlays.indexOf(overlayRef);\n    if (index > -1) {\n      this._attachedOverlays.splice(index, 1);\n    }\n    // Remove the global listener once there are no more overlays.\n    if (this._attachedOverlays.length === 0) {\n      this.detach();\n    }\n  }\n  static {\n    this.ɵfac = function BaseOverlayDispatcher_Factory(t) {\n      return new (t || BaseOverlayDispatcher)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BaseOverlayDispatcher,\n      factory: BaseOverlayDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n  constructor(document, /** @breaking-change 14.0.0 _ngZone will be required. */\n  _ngZone) {\n    super(document);\n    this._ngZone = _ngZone;\n    /** Keyboard event listener that will be attached to the body. */\n    this._keydownListener = event => {\n      const overlays = this._attachedOverlays;\n      for (let i = overlays.length - 1; i > -1; i--) {\n        // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n        // We want to target the most recent overlay, rather than trying to match where the event came\n        // from, because some components might open an overlay, but keep focus on a trigger element\n        // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n        // because we don't want overlays that don't handle keyboard events to block the ones below\n        // them that do.\n        if (overlays[i]._keydownEvents.observers.length > 0) {\n          const keydownEvents = overlays[i]._keydownEvents;\n          /** @breaking-change 14.0.0 _ngZone will be required. */\n          if (this._ngZone) {\n            this._ngZone.run(() => keydownEvents.next(event));\n          } else {\n            keydownEvents.next(event);\n          }\n          break;\n        }\n      }\n    };\n  }\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef) {\n    super.add(overlayRef);\n    // Lazily start dispatcher once first overlay is added\n    if (!this._isAttached) {\n      /** @breaking-change 14.0.0 _ngZone will be required. */\n      if (this._ngZone) {\n        this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n      } else {\n        this._document.body.addEventListener('keydown', this._keydownListener);\n      }\n      this._isAttached = true;\n    }\n  }\n  /** Detaches the global keyboard event listener. */\n  detach() {\n    if (this._isAttached) {\n      this._document.body.removeEventListener('keydown', this._keydownListener);\n      this._isAttached = false;\n    }\n  }\n  static {\n    this.ɵfac = function OverlayKeyboardDispatcher_Factory(t) {\n      return new (t || OverlayKeyboardDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayKeyboardDispatcher,\n      factory: OverlayKeyboardDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.NgZone,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n  constructor(document, _platform, /** @breaking-change 14.0.0 _ngZone will be required. */\n  _ngZone) {\n    super(document);\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._cursorStyleIsSet = false;\n    /** Store pointerdown event target to track origin of click. */\n    this._pointerDownListener = event => {\n      this._pointerDownEventTarget = _getEventTarget(event);\n    };\n    /** Click event listener that will be attached to the body propagate phase. */\n    this._clickListener = event => {\n      const target = _getEventTarget(event);\n      // In case of a click event, we want to check the origin of the click\n      // (e.g. in case where a user starts a click inside the overlay and\n      // releases the click outside of it).\n      // This is done by using the event target of the preceding pointerdown event.\n      // Every click event caused by a pointer device has a preceding pointerdown\n      // event, unless the click was programmatically triggered (e.g. in a unit test).\n      const origin = event.type === 'click' && this._pointerDownEventTarget ? this._pointerDownEventTarget : target;\n      // Reset the stored pointerdown event target, to avoid having it interfere\n      // in subsequent events.\n      this._pointerDownEventTarget = null;\n      // We copy the array because the original may be modified asynchronously if the\n      // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n      // the for loop.\n      const overlays = this._attachedOverlays.slice();\n      // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n      // We want to target all overlays for which the click could be considered as outside click.\n      // As soon as we reach an overlay for which the click is not outside click we break off\n      // the loop.\n      for (let i = overlays.length - 1; i > -1; i--) {\n        const overlayRef = overlays[i];\n        if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n          continue;\n        }\n        // If it's a click inside the overlay, just break - we should do nothing\n        // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n        // and proceed with the next overlay\n        if (overlayRef.overlayElement.contains(target) || overlayRef.overlayElement.contains(origin)) {\n          break;\n        }\n        const outsidePointerEvents = overlayRef._outsidePointerEvents;\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n          this._ngZone.run(() => outsidePointerEvents.next(event));\n        } else {\n          outsidePointerEvents.next(event);\n        }\n      }\n    };\n  }\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef) {\n    super.add(overlayRef);\n    // Safari on iOS does not generate click events for non-interactive\n    // elements. However, we want to receive a click for any element outside\n    // the overlay. We can force a \"clickable\" state by setting\n    // `cursor: pointer` on the document body. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n    // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n    if (!this._isAttached) {\n      const body = this._document.body;\n      /** @breaking-change 14.0.0 _ngZone will be required. */\n      if (this._ngZone) {\n        this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n      } else {\n        this._addEventListeners(body);\n      }\n      // click event is not fired on iOS. To make element \"clickable\" we are\n      // setting the cursor to pointer\n      if (this._platform.IOS && !this._cursorStyleIsSet) {\n        this._cursorOriginalValue = body.style.cursor;\n        body.style.cursor = 'pointer';\n        this._cursorStyleIsSet = true;\n      }\n      this._isAttached = true;\n    }\n  }\n  /** Detaches the global keyboard event listener. */\n  detach() {\n    if (this._isAttached) {\n      const body = this._document.body;\n      body.removeEventListener('pointerdown', this._pointerDownListener, true);\n      body.removeEventListener('click', this._clickListener, true);\n      body.removeEventListener('auxclick', this._clickListener, true);\n      body.removeEventListener('contextmenu', this._clickListener, true);\n      if (this._platform.IOS && this._cursorStyleIsSet) {\n        body.style.cursor = this._cursorOriginalValue;\n        this._cursorStyleIsSet = false;\n      }\n      this._isAttached = false;\n    }\n  }\n  _addEventListeners(body) {\n    body.addEventListener('pointerdown', this._pointerDownListener, true);\n    body.addEventListener('click', this._clickListener, true);\n    body.addEventListener('auxclick', this._clickListener, true);\n    body.addEventListener('contextmenu', this._clickListener, true);\n  }\n  static {\n    this.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) {\n      return new (t || OverlayOutsideClickDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(i0.NgZone, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayOutsideClickDispatcher,\n      factory: OverlayOutsideClickDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1$1.Platform\n  }, {\n    type: i0.NgZone,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n  constructor(document, _platform) {\n    this._platform = _platform;\n    this._document = document;\n  }\n  ngOnDestroy() {\n    this._containerElement?.remove();\n  }\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement() {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  _createContainer() {\n    const containerClass = 'cdk-overlay-container';\n    // TODO(crisbeto): remove the testing check once we have an overlay testing\n    // module or Angular starts tearing down the testing `NgModule`. See:\n    // https://github.com/angular/angular/issues/18831\n    if (this._platform.isBrowser || _isTestEnvironment()) {\n      const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n      // Remove any old containers from the opposite platform.\n      // This can happen when transitioning from the server to the client.\n      for (let i = 0; i < oppositePlatformContainers.length; i++) {\n        oppositePlatformContainers[i].remove();\n      }\n    }\n    const container = this._document.createElement('div');\n    container.classList.add(containerClass);\n    // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n    // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n    // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n    // To mitigate the problem we made it so that only containers from a different platform are\n    // cleared, but the side-effect was that people started depending on the overly-aggressive\n    // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n    // module which does the cleanup, we try to detect that we're in a test environment and we\n    // always clear the container. See #17006.\n    // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n    if (_isTestEnvironment()) {\n      container.setAttribute('platform', 'test');\n    } else if (!this._platform.isBrowser) {\n      container.setAttribute('platform', 'server');\n    }\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n  static {\n    this.ɵfac = function OverlayContainer_Factory(t) {\n      return new (t || OverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayContainer,\n      factory: OverlayContainer.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayContainer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1$1.Platform\n  }], null);\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n    this._portalOutlet = _portalOutlet;\n    this._host = _host;\n    this._pane = _pane;\n    this._config = _config;\n    this._ngZone = _ngZone;\n    this._keyboardDispatcher = _keyboardDispatcher;\n    this._document = _document;\n    this._location = _location;\n    this._outsideClickDispatcher = _outsideClickDispatcher;\n    this._animationsDisabled = _animationsDisabled;\n    this._backdropElement = null;\n    this._backdropClick = new Subject();\n    this._attachments = new Subject();\n    this._detachments = new Subject();\n    this._locationChanges = Subscription.EMPTY;\n    this._backdropClickHandler = event => this._backdropClick.next(event);\n    this._backdropTransitionendHandler = event => {\n      this._disposeBackdrop(event.target);\n    };\n    /** Stream of keydown events dispatched to this overlay. */\n    this._keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    this._outsidePointerEvents = new Subject();\n    if (_config.scrollStrategy) {\n      this._scrollStrategy = _config.scrollStrategy;\n      this._scrollStrategy.attach(this);\n    }\n    this._positionStrategy = _config.positionStrategy;\n  }\n  /** The overlay's HTML element */\n  get overlayElement() {\n    return this._pane;\n  }\n  /** The overlay's backdrop HTML element. */\n  get backdropElement() {\n    return this._backdropElement;\n  }\n  /**\n   * Wrapper around the panel element. Can be used for advanced\n   * positioning where a wrapper with specific styling is\n   * required around the overlay pane.\n   */\n  get hostElement() {\n    return this._host;\n  }\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal) {\n    // Insert the host into the DOM before attaching the portal, otherwise\n    // the animations module will skip animations on repeat attachments.\n    if (!this._host.parentElement && this._previousHostParent) {\n      this._previousHostParent.appendChild(this._host);\n    }\n    const attachResult = this._portalOutlet.attach(portal);\n    if (this._positionStrategy) {\n      this._positionStrategy.attach(this);\n    }\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n    if (this._scrollStrategy) {\n      this._scrollStrategy.enable();\n    }\n    // Update the position once the zone is stable so that the overlay will be fully rendered\n    // before attempting to position it, as the position may depend on the size of the rendered\n    // content.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      // The overlay could've been detached before the zone has stabilized.\n      if (this.hasAttached()) {\n        this.updatePosition();\n      }\n    });\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n    if (this._config.panelClass) {\n      this._toggleClasses(this._pane, this._config.panelClass, true);\n    }\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n    if (this._config.disposeOnNavigation) {\n      this._locationChanges = this._location.subscribe(() => this.dispose());\n    }\n    this._outsideClickDispatcher.add(this);\n    // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n    // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n    // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n    if (typeof attachResult?.onDestroy === 'function') {\n      // In most cases we control the portal and we know when it is being detached so that\n      // we can finish the disposal process. The exception is if the user passes in a custom\n      // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n      // `detach` here instead of `dispose`, because we don't know if the user intends to\n      // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n      attachResult.onDestroy(() => {\n        if (this.hasAttached()) {\n          // We have to delay the `detach` call, because detaching immediately prevents\n          // other destroy hooks from running. This is likely a framework bug similar to\n          // https://github.com/angular/angular/issues/46119\n          this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n        }\n      });\n    }\n    return attachResult;\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach() {\n    if (!this.hasAttached()) {\n      return;\n    }\n    this.detachBackdrop();\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n    if (this._positionStrategy && this._positionStrategy.detach) {\n      this._positionStrategy.detach();\n    }\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n    }\n    const detachmentResult = this._portalOutlet.detach();\n    // Only emit after everything is detached.\n    this._detachments.next();\n    // Remove this overlay from keyboard dispatcher tracking.\n    this._keyboardDispatcher.remove(this);\n    // Keeping the host element in the DOM can cause scroll jank, because it still gets\n    // rendered, even though it's transparent and unclickable which is why we remove it.\n    this._detachContentWhenStable();\n    this._locationChanges.unsubscribe();\n    this._outsideClickDispatcher.remove(this);\n    return detachmentResult;\n  }\n  /** Cleans up the overlay from the DOM. */\n  dispose() {\n    const isAttached = this.hasAttached();\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._disposeScrollStrategy();\n    this._disposeBackdrop(this._backdropElement);\n    this._locationChanges.unsubscribe();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n    this._outsidePointerEvents.complete();\n    this._outsideClickDispatcher.remove(this);\n    this._host?.remove();\n    this._previousHostParent = this._pane = this._host = null;\n    if (isAttached) {\n      this._detachments.next();\n    }\n    this._detachments.complete();\n  }\n  /** Whether the overlay has attached content. */\n  hasAttached() {\n    return this._portalOutlet.hasAttached();\n  }\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick() {\n    return this._backdropClick;\n  }\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments() {\n    return this._attachments;\n  }\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments() {\n    return this._detachments;\n  }\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents() {\n    return this._keydownEvents;\n  }\n  /** Gets an observable of pointer events targeted outside this overlay. */\n  outsidePointerEvents() {\n    return this._outsidePointerEvents;\n  }\n  /** Gets the current overlay configuration, which is immutable. */\n  getConfig() {\n    return this._config;\n  }\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n  /** Switches to a new position strategy and updates the overlay position. */\n  updatePositionStrategy(strategy) {\n    if (strategy === this._positionStrategy) {\n      return;\n    }\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._positionStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      this.updatePosition();\n    }\n  }\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig) {\n    this._config = {\n      ...this._config,\n      ...sizeConfig\n    };\n    this._updateElementSize();\n  }\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir) {\n    this._config = {\n      ...this._config,\n      direction: dir\n    };\n    this._updateElementDirection();\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, true);\n    }\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, false);\n    }\n  }\n  /**\n   * Returns the layout direction of the overlay panel.\n   */\n  getDirection() {\n    const direction = this._config.direction;\n    if (!direction) {\n      return 'ltr';\n    }\n    return typeof direction === 'string' ? direction : direction.value;\n  }\n  /** Switches to a new scroll strategy. */\n  updateScrollStrategy(strategy) {\n    if (strategy === this._scrollStrategy) {\n      return;\n    }\n    this._disposeScrollStrategy();\n    this._scrollStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      strategy.enable();\n    }\n  }\n  /** Updates the text direction of the overlay panel. */\n  _updateElementDirection() {\n    this._host.setAttribute('dir', this.getDirection());\n  }\n  /** Updates the size of the overlay element based on the overlay config. */\n  _updateElementSize() {\n    if (!this._pane) {\n      return;\n    }\n    const style = this._pane.style;\n    style.width = coerceCssPixelValue(this._config.width);\n    style.height = coerceCssPixelValue(this._config.height);\n    style.minWidth = coerceCssPixelValue(this._config.minWidth);\n    style.minHeight = coerceCssPixelValue(this._config.minHeight);\n    style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n    style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n  }\n  /** Toggles the pointer events for the overlay pane element. */\n  _togglePointerEvents(enablePointer) {\n    this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n  }\n  /** Attaches a backdrop for this overlay. */\n  _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n    if (this._animationsDisabled) {\n      this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n    }\n    if (this._config.backdropClass) {\n      this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n    }\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._host.parentElement.insertBefore(this._backdropElement, this._host);\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', this._backdropClickHandler);\n    // Add class to fade-in the backdrop after one frame.\n    if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  _updateStackingOrder() {\n    if (this._host.nextSibling) {\n      this._host.parentNode.appendChild(this._host);\n    }\n  }\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop() {\n    const backdropToDetach = this._backdropElement;\n    if (!backdropToDetach) {\n      return;\n    }\n    if (this._animationsDisabled) {\n      this._disposeBackdrop(backdropToDetach);\n      return;\n    }\n    backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n    this._ngZone.runOutsideAngular(() => {\n      backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n    });\n    // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n    // In this case we make it unclickable and we try to remove it after a delay.\n    backdropToDetach.style.pointerEvents = 'none';\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\n    // If it were to run inside the Angular zone, every test that used Overlay would have to be\n    // either async or fakeAsync.\n    this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n      this._disposeBackdrop(backdropToDetach);\n    }, 500));\n  }\n  /** Toggles a single CSS class or an array of classes on an element. */\n  _toggleClasses(element, cssClasses, isAdd) {\n    const classes = coerceArray(cssClasses || []).filter(c => !!c);\n    if (classes.length) {\n      isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n    }\n  }\n  /** Detaches the overlay content next time the zone stabilizes. */\n  _detachContentWhenStable() {\n    // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n    // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n    // be patched to run inside the zone, which will throw us into an infinite loop.\n    this._ngZone.runOutsideAngular(() => {\n      // We can't remove the host here immediately, because the overlay pane's content\n      // might still be animating. This stream helps us avoid interrupting the animation\n      // by waiting for the pane to become empty.\n      const subscription = this._ngZone.onStable.pipe(takeUntil(merge(this._attachments, this._detachments))).subscribe(() => {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n          if (this._pane && this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, false);\n          }\n          if (this._host && this._host.parentElement) {\n            this._previousHostParent = this._host.parentElement;\n            this._host.remove();\n          }\n          subscription.unsubscribe();\n        }\n      });\n    });\n  }\n  /** Disposes of a scroll strategy. */\n  _disposeScrollStrategy() {\n    const scrollStrategy = this._scrollStrategy;\n    if (scrollStrategy) {\n      scrollStrategy.disable();\n      if (scrollStrategy.detach) {\n        scrollStrategy.detach();\n      }\n    }\n  }\n  /** Removes a backdrop element from the DOM. */\n  _disposeBackdrop(backdrop) {\n    if (backdrop) {\n      backdrop.removeEventListener('click', this._backdropClickHandler);\n      backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n      backdrop.remove();\n      // It is possible that a new portal has been attached to this overlay since we started\n      // removing the backdrop. If that is the case, only clear the backdrop reference if it\n      // is still the same instance that we started to remove.\n      if (this._backdropElement === backdrop) {\n        this._backdropElement = null;\n      }\n    }\n    if (this._backdropTimeout) {\n      clearTimeout(this._backdropTimeout);\n      this._backdropTimeout = undefined;\n    }\n  }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions() {\n    return this._preferredPositions;\n  }\n  constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n    this._viewportRuler = _viewportRuler;\n    this._document = _document;\n    this._platform = _platform;\n    this._overlayContainer = _overlayContainer;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    this._lastBoundingBoxSize = {\n      width: 0,\n      height: 0\n    };\n    /** Whether the overlay was pushed in a previous positioning. */\n    this._isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    this._canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    this._growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    this._hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    this._positionLocked = false;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    this._viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    this._scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    this._preferredPositions = [];\n    /** Subject that emits whenever the position changes. */\n    this._positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    this._resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    this._offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    this._offsetY = 0;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    this._appliedPanelClasses = [];\n    /** Observable sequence of position changes. */\n    this.positionChanges = this._positionChanges;\n    this.setOrigin(connectedTo);\n  }\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && overlayRef !== this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n    this._validatePositions();\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply() {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n    // We need the bounding rects for the origin, the overlay and the container to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n    this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n    const containerRect = this._containerRect;\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits = [];\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback;\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n        });\n        continue;\n      }\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = {\n          overlayFit,\n          overlayPoint,\n          originPoint,\n          position: pos,\n          overlayRect\n        };\n      }\n    }\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n      this._isPushed = false;\n      this._applyPosition(bestFit.position, bestFit.origin);\n      return;\n    }\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback.position, fallback.originPoint);\n      return;\n    }\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback.position, fallback.originPoint);\n  }\n  detach() {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Cleanup after the element gets destroyed. */\n  dispose() {\n    if (this._isDisposed) {\n      return;\n    }\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: ''\n      });\n    }\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null;\n    this._isDisposed = true;\n  }\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition() {\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    const lastPosition = this._lastPosition;\n    if (lastPosition) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n      this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n      const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n      this._applyPosition(lastPosition, originPoint);\n    } else {\n      this.apply();\n    }\n  }\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables) {\n    this._scrollables = scrollables;\n    return this;\n  }\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions) {\n    this._preferredPositions = positions;\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition) === -1) {\n      this._lastPosition = null;\n    }\n    this._validatePositions();\n    return this;\n  }\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin) {\n    this._viewportMargin = margin;\n    return this;\n  }\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true) {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true) {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true) {\n    this._canPush = canPush;\n    return this;\n  }\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true) {\n    this._positionLocked = isLocked;\n    return this;\n  }\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset) {\n    this._offsetX = offset;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset) {\n    this._offsetY = offset;\n    return this;\n  }\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector) {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  _getOriginPoint(originRect, containerRect, pos) {\n    let x;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + originRect.width / 2;\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n    // When zooming in Safari the container rectangle contains negative values for the position\n    // and we need to re-add them to the calculated coordinates.\n    if (containerRect.left < 0) {\n      x -= containerRect.left;\n    }\n    let y;\n    if (pos.originY == 'center') {\n      y = originRect.top + originRect.height / 2;\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n    // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n    // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    // Additionally, when zooming in Safari this fixes the vertical position.\n    if (containerRect.top < 0) {\n      y -= containerRect.top;\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  _getOverlayPoint(originPoint, overlayRect, pos) {\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n    let overlayStartY;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY\n    };\n  }\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  _getOverlayFit(point, rawOverlayRect, viewport, position) {\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    let {\n      x,\n      y\n    } = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n    if (offsetY) {\n      y += offsetY;\n    }\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = x + overlay.width - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = y + overlay.height - viewport.height;\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width\n    };\n  }\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlay at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  _canFitWithFlexibleDimensions(fit, point, viewport) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n      const verticalFit = fit.fitsInViewportVertically || minHeight != null && minHeight <= availableHeight;\n      const horizontalFit = fit.fitsInViewportHorizontally || minWidth != null && minWidth <= availableWidth;\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param rawOverlayRect Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y\n      };\n    }\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    const viewport = this._viewportRect;\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n    }\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n    }\n    this._previousPushAmount = {\n      x: pushX,\n      y: pushY\n    };\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY\n    };\n  }\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  _applyPosition(position, originPoint) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollVisibility = this._getScrollVisibility();\n      // We're recalculating on scroll, but we only want to emit if anything\n      // changed since downstream code might be hitting the `NgZone`.\n      if (position !== this._lastPosition || !this._lastScrollVisibility || !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n        const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n        this._positionChanges.next(changeEvent);\n      }\n      this._lastScrollVisibility = scrollVisibility;\n    }\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n    this._isInitialRender = false;\n  }\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  _setTransformOrigin(position) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n    const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n    let xOrigin;\n    let yOrigin = position.overlayY;\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  _calculateBoundingBoxRect(origin, position) {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height, top, bottom;\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n      const previousHeight = this._lastBoundingBoxSize.height;\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - previousHeight / 2;\n      }\n    }\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge = position.overlayX === 'start' && !isRtl || position.overlayX === 'end' && isRtl;\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge = position.overlayX === 'end' && !isRtl || position.overlayX === 'start' && isRtl;\n    let width, left, right;\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin * 2;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - previousWidth / 2;\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right,\n      width,\n      height\n    };\n  }\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stretches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  _setBoundingBoxStyles(origin, position) {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n    const styles = {};\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n    this._lastBoundingBoxSize = boundingBoxRect;\n    extendStyles(this._boundingBox.style, styles);\n  }\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: ''\n    });\n  }\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: ''\n    });\n  }\n  /** Sets positioning styles to the overlay element. */\n  _setOverlayElementStyles(originPoint, position) {\n    const styles = {};\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n    styles.transform = transformString.trim();\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n    extendStyles(this._pane.style, styles);\n  }\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayY(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = {\n      top: '',\n      bottom: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n    return styles;\n  }\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayX(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = {\n      left: '',\n      right: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty;\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n    return styles;\n  }\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  _getScrollVisibility() {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds = this._pane.getBoundingClientRect();\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds)\n    };\n  }\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  _subtractOverflows(length, ...overflows) {\n    return overflows.reduce((currentValue, currentOverflow) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  _getNarrowedViewportRect() {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement.clientWidth;\n    const height = this._document.documentElement.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n    return {\n      top: scrollPosition.top + this._viewportMargin,\n      left: scrollPosition.left + this._viewportMargin,\n      right: scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width: width - 2 * this._viewportMargin,\n      height: height - 2 * this._viewportMargin\n    };\n  }\n  /** Whether the we're dealing with an RTL context */\n  _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n  /** Retrieves the offset of a position along the x or y axis. */\n  _getOffset(position, axis) {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breaking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n  /** Validates that the current position match the expected values. */\n  _validatePositions() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  _addPanelClasses(cssClasses) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n  /** Returns the DOMRect of the current origin. */\n  _getOriginRect() {\n    const origin = this._origin;\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n  return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return !units || units === 'px' ? parseFloat(value) : null;\n  }\n  return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n  return {\n    top: Math.floor(clientRect.top),\n    right: Math.floor(clientRect.right),\n    bottom: Math.floor(clientRect.bottom),\n    left: Math.floor(clientRect.left),\n    width: Math.floor(clientRect.width),\n    height: Math.floor(clientRect.height)\n  };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n  if (a === b) {\n    return true;\n  }\n  return a.isOriginClipped === b.isOriginClipped && a.isOriginOutsideView === b.isOriginOutsideView && a.isOverlayClipped === b.isOverlayClipped && a.isOverlayOutsideView === b.isOverlayOutsideView;\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [{\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n  constructor() {\n    this._cssPosition = 'static';\n    this._topOffset = '';\n    this._bottomOffset = '';\n    this._alignItems = '';\n    this._xPosition = '';\n    this._xOffset = '';\n    this._width = '';\n    this._height = '';\n    this._isDisposed = false;\n  }\n  attach(overlayRef) {\n    const config = overlayRef.getConfig();\n    this._overlayRef = overlayRef;\n    if (this._width && !config.width) {\n      overlayRef.updateSize({\n        width: this._width\n      });\n    }\n    if (this._height && !config.height) {\n      overlayRef.updateSize({\n        height: this._height\n      });\n    }\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value = '') {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'left';\n    return this;\n  }\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value = '') {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'right';\n    return this;\n  }\n  /**\n   * Sets the overlay to the start of the viewport, depending on the overlay direction.\n   * This will be to the left in LTR layouts and to the right in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  start(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'start';\n    return this;\n  }\n  /**\n   * Sets the overlay to the end of the viewport, depending on the overlay direction.\n   * This will be to the right in LTR layouts and to the left in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  end(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'end';\n    return this;\n  }\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        width: value\n      });\n    } else {\n      this._width = value;\n    }\n    return this;\n  }\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        height: value\n      });\n    } else {\n      this._height = value;\n    }\n    return this;\n  }\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset = '') {\n    this.left(offset);\n    this._xPosition = 'center';\n    return this;\n  }\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset = '') {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply() {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n    const {\n      width,\n      height,\n      maxWidth,\n      maxHeight\n    } = config;\n    const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') && (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n    const shouldBeFlushVertically = (height === '100%' || height === '100vh') && (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n    const xPosition = this._xPosition;\n    const xOffset = this._xOffset;\n    const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n    let marginLeft = '';\n    let marginRight = '';\n    let justifyContent = '';\n    if (shouldBeFlushHorizontally) {\n      justifyContent = 'flex-start';\n    } else if (xPosition === 'center') {\n      justifyContent = 'center';\n      if (isRtl) {\n        marginRight = xOffset;\n      } else {\n        marginLeft = xOffset;\n      }\n    } else if (isRtl) {\n      if (xPosition === 'left' || xPosition === 'end') {\n        justifyContent = 'flex-end';\n        marginLeft = xOffset;\n      } else if (xPosition === 'right' || xPosition === 'start') {\n        justifyContent = 'flex-start';\n        marginRight = xOffset;\n      }\n    } else if (xPosition === 'left' || xPosition === 'start') {\n      justifyContent = 'flex-start';\n      marginLeft = xOffset;\n    } else if (xPosition === 'right' || xPosition === 'end') {\n      justifyContent = 'flex-end';\n      marginRight = xOffset;\n    }\n    styles.position = this._cssPosition;\n    styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n    styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n    parentStyles.justifyContent = justifyContent;\n    parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n  }\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose() {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop = styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n    this._overlayRef = null;\n    this._isDisposed = true;\n  }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n  constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n    this._viewportRuler = _viewportRuler;\n    this._document = _document;\n    this._platform = _platform;\n    this._overlayContainer = _overlayContainer;\n  }\n  /**\n   * Creates a global position strategy.\n   */\n  global() {\n    return new GlobalPositionStrategy();\n  }\n  /**\n   * Creates a flexible position strategy.\n   * @param origin Origin relative to which to position the overlay.\n   */\n  flexibleConnectedTo(origin) {\n    return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n  }\n  static {\n    this.ɵfac = function OverlayPositionBuilder_Factory(t) {\n      return new (t || OverlayPositionBuilder)(i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(OverlayContainer));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayPositionBuilder,\n      factory: OverlayPositionBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1$1.Platform\n  }, {\n    type: OverlayContainer\n  }], null);\n})();\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n  constructor( /** Scrolling strategies that can be used when creating an overlay. */\n  scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n    this.scrollStrategies = scrollStrategies;\n    this._overlayContainer = _overlayContainer;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._positionBuilder = _positionBuilder;\n    this._keyboardDispatcher = _keyboardDispatcher;\n    this._injector = _injector;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._directionality = _directionality;\n    this._location = _location;\n    this._outsideClickDispatcher = _outsideClickDispatcher;\n    this._animationsModuleType = _animationsModuleType;\n  }\n  /**\n   * Creates an overlay.\n   * @param config Configuration applied to the overlay.\n   * @returns Reference to the created overlay.\n   */\n  create(config) {\n    const host = this._createHostElement();\n    const pane = this._createPaneElement(host);\n    const portalOutlet = this._createPortalOutlet(pane);\n    const overlayConfig = new OverlayConfig(config);\n    overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n  }\n  /**\n   * Gets a position builder that can be used, via fluent API,\n   * to construct and configure a position strategy.\n   * @returns An overlay position builder.\n   */\n  position() {\n    return this._positionBuilder;\n  }\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  _createPaneElement(host) {\n    const pane = this._document.createElement('div');\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n    return pane;\n  }\n  /**\n   * Creates the host element that wraps around an overlay\n   * and can be used for advanced positioning.\n   * @returns Newly-create host element.\n   */\n  _createHostElement() {\n    const host = this._document.createElement('div');\n    this._overlayContainer.getContainerElement().appendChild(host);\n    return host;\n  }\n  /**\n   * Create a DomPortalOutlet into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal outlet.\n   * @returns A portal outlet for the given DOM element.\n   */\n  _createPortalOutlet(pane) {\n    // We have to resolve the ApplicationRef later in order to allow people\n    // to use overlay-based providers during app initialization.\n    if (!this._appRef) {\n      this._appRef = this._injector.get(ApplicationRef);\n    }\n    return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n  }\n  static {\n    this.ɵfac = function Overlay_Factory(t) {\n      return new (t || Overlay)(i0.ɵɵinject(ScrollStrategyOptions), i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(OverlayPositionBuilder), i0.ɵɵinject(OverlayKeyboardDispatcher), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i5.Directionality), i0.ɵɵinject(i6.Location), i0.ɵɵinject(OverlayOutsideClickDispatcher), i0.ɵɵinject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Overlay,\n      factory: Overlay.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Overlay, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: ScrollStrategyOptions\n  }, {\n    type: OverlayContainer\n  }, {\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: OverlayPositionBuilder\n  }, {\n    type: OverlayKeyboardDispatcher\n  }, {\n    type: i0.Injector\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i5.Directionality\n  }, {\n    type: i6.Location\n  }, {\n    type: OverlayOutsideClickDispatcher\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n  constructor( /** Reference to the element on which the directive is applied. */\n  elementRef) {\n    this.elementRef = elementRef;\n  }\n  static {\n    this.ɵfac = function CdkOverlayOrigin_Factory(t) {\n      return new (t || CdkOverlayOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkOverlayOrigin,\n      selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]],\n      exportAs: [\"cdkOverlayOrigin\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n      exportAs: 'cdkOverlayOrigin',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  get offsetX() {\n    return this._offsetX;\n  }\n  set offsetX(offsetX) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  get offsetY() {\n    return this._offsetY;\n  }\n  set offsetY(offsetY) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n  /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n  get disposeOnNavigation() {\n    return this._disposeOnNavigation;\n  }\n  set disposeOnNavigation(value) {\n    this._disposeOnNavigation = value;\n  }\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n  constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n    this._overlay = _overlay;\n    this._dir = _dir;\n    this._backdropSubscription = Subscription.EMPTY;\n    this._attachSubscription = Subscription.EMPTY;\n    this._detachSubscription = Subscription.EMPTY;\n    this._positionSubscription = Subscription.EMPTY;\n    this._disposeOnNavigation = false;\n    this._ngZone = inject(NgZone);\n    /** Margin between the overlay and the viewport edges. */\n    this.viewportMargin = 0;\n    /** Whether the overlay is open. */\n    this.open = false;\n    /** Whether the overlay can be closed by user interaction. */\n    this.disableClose = false;\n    /** Whether or not the overlay should attach a backdrop. */\n    this.hasBackdrop = false;\n    /** Whether or not the overlay should be locked when scrolling. */\n    this.lockPosition = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    this.flexibleDimensions = false;\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    this.growAfterOpen = false;\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    this.push = false;\n    /** Event emitted when the backdrop is clicked. */\n    this.backdropClick = new EventEmitter();\n    /** Event emitted when the position has changed. */\n    this.positionChange = new EventEmitter();\n    /** Event emitted when the overlay has been attached. */\n    this.attach = new EventEmitter();\n    /** Event emitted when the overlay has been detached. */\n    this.detach = new EventEmitter();\n    /** Emits when there are keyboard events that are targeted at the overlay. */\n    this.overlayKeydown = new EventEmitter();\n    /** Emits when there are mouse outside click events that are targeted at the overlay. */\n    this.overlayOutsideClick = new EventEmitter();\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this.scrollStrategy = this._scrollStrategyFactory();\n  }\n  /** The associated overlay reference. */\n  get overlayRef() {\n    return this._overlayRef;\n  }\n  /** The element's layout direction. */\n  get dir() {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n  ngOnDestroy() {\n    this._attachSubscription.unsubscribe();\n    this._detachSubscription.unsubscribe();\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n  }\n  ngOnChanges(changes) {\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n      this._overlayRef.updateSize({\n        width: this.width,\n        minWidth: this.minWidth,\n        height: this.height,\n        minHeight: this.minHeight\n      });\n      if (changes['origin'] && this.open) {\n        this._position.apply();\n      }\n    }\n    if (changes['open']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n  /** Creates an overlay */\n  _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n    const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n    this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n    this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n    overlayRef.keydownEvents().subscribe(event => {\n      this.overlayKeydown.next(event);\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this._detachOverlay();\n      }\n    });\n    this._overlayRef.outsidePointerEvents().subscribe(event => {\n      const origin = this._getOriginElement();\n      const target = _getEventTarget(event);\n      if (!origin || origin !== target && !origin.contains(target)) {\n        this.overlayOutsideClick.next(event);\n      }\n    });\n  }\n  /** Builds the overlay config based on the directive's inputs */\n  _buildConfig() {\n    const positionStrategy = this._position = this.positionStrategy || this._createPositionStrategy();\n    const overlayConfig = new OverlayConfig({\n      direction: this._dir,\n      positionStrategy,\n      scrollStrategy: this.scrollStrategy,\n      hasBackdrop: this.hasBackdrop,\n      disposeOnNavigation: this.disposeOnNavigation\n    });\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n    if (this.panelClass) {\n      overlayConfig.panelClass = this.panelClass;\n    }\n    return overlayConfig;\n  }\n  /** Updates the state of a position strategy, based on the values of the directive inputs. */\n  _updatePositionStrategy(positionStrategy) {\n    const positions = this.positions.map(currentPosition => ({\n      originX: currentPosition.originX,\n      originY: currentPosition.originY,\n      overlayX: currentPosition.overlayX,\n      overlayY: currentPosition.overlayY,\n      offsetX: currentPosition.offsetX || this.offsetX,\n      offsetY: currentPosition.offsetY || this.offsetY,\n      panelClass: currentPosition.panelClass || undefined\n    }));\n    return positionStrategy.setOrigin(this._getOrigin()).withPositions(positions).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector);\n  }\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  _createPositionStrategy() {\n    const strategy = this._overlay.position().flexibleConnectedTo(this._getOrigin());\n    this._updatePositionStrategy(strategy);\n    return strategy;\n  }\n  _getOrigin() {\n    if (this.origin instanceof CdkOverlayOrigin) {\n      return this.origin.elementRef;\n    } else {\n      return this.origin;\n    }\n  }\n  _getOriginElement() {\n    if (this.origin instanceof CdkOverlayOrigin) {\n      return this.origin.elementRef.nativeElement;\n    }\n    if (this.origin instanceof ElementRef) {\n      return this.origin.nativeElement;\n    }\n    if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n      return this.origin;\n    }\n    return null;\n  }\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    } else {\n      // Update the overlay size, in case the directive's inputs have changed\n      this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n    }\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n    }\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n        this.backdropClick.emit(event);\n      });\n    } else {\n      this._backdropSubscription.unsubscribe();\n    }\n    this._positionSubscription.unsubscribe();\n    // Only subscribe to `positionChanges` if requested, because putting\n    // together all the information for it can be expensive.\n    if (this.positionChange.observers.length > 0) {\n      this._positionSubscription = this._position.positionChanges.pipe(takeWhile(() => this.positionChange.observers.length > 0)).subscribe(position => {\n        this._ngZone.run(() => this.positionChange.emit(position));\n        if (this.positionChange.observers.length === 0) {\n          this._positionSubscription.unsubscribe();\n        }\n      });\n    }\n  }\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CdkConnectedOverlay_Factory(t) {\n      return new (t || CdkConnectedOverlay)(i0.ɵɵdirectiveInject(Overlay), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkConnectedOverlay,\n      selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]],\n      inputs: {\n        origin: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayOrigin\", \"origin\"],\n        positions: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayPositions\", \"positions\"],\n        positionStrategy: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"],\n        offsetX: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayOffsetX\", \"offsetX\"],\n        offsetY: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayOffsetY\", \"offsetY\"],\n        width: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayWidth\", \"width\"],\n        height: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayHeight\", \"height\"],\n        minWidth: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayMinWidth\", \"minWidth\"],\n        minHeight: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayMinHeight\", \"minHeight\"],\n        backdropClass: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayBackdropClass\", \"backdropClass\"],\n        panelClass: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayPanelClass\", \"panelClass\"],\n        viewportMargin: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"],\n        scrollStrategy: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"],\n        open: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayOpen\", \"open\"],\n        disableClose: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayDisableClose\", \"disableClose\"],\n        transformOriginSelector: [i0.ɵɵInputFlags.None, \"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"],\n        hasBackdrop: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute],\n        lockPosition: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute],\n        flexibleDimensions: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute],\n        growAfterOpen: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute],\n        push: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayPush\", \"push\", booleanAttribute],\n        disposeOnNavigation: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute]\n      },\n      outputs: {\n        backdropClick: \"backdropClick\",\n        positionChange: \"positionChange\",\n        attach: \"attach\",\n        detach: \"detach\",\n        overlayKeydown: \"overlayKeydown\",\n        overlayOutsideClick: \"overlayOutsideClick\"\n      },\n      exportAs: [\"cdkConnectedOverlay\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n      exportAs: 'cdkConnectedOverlay',\n      standalone: true\n    }]\n  }], () => [{\n    type: Overlay\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i5.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    origin: [{\n      type: Input,\n      args: ['cdkConnectedOverlayOrigin']\n    }],\n    positions: [{\n      type: Input,\n      args: ['cdkConnectedOverlayPositions']\n    }],\n    positionStrategy: [{\n      type: Input,\n      args: ['cdkConnectedOverlayPositionStrategy']\n    }],\n    offsetX: [{\n      type: Input,\n      args: ['cdkConnectedOverlayOffsetX']\n    }],\n    offsetY: [{\n      type: Input,\n      args: ['cdkConnectedOverlayOffsetY']\n    }],\n    width: [{\n      type: Input,\n      args: ['cdkConnectedOverlayWidth']\n    }],\n    height: [{\n      type: Input,\n      args: ['cdkConnectedOverlayHeight']\n    }],\n    minWidth: [{\n      type: Input,\n      args: ['cdkConnectedOverlayMinWidth']\n    }],\n    minHeight: [{\n      type: Input,\n      args: ['cdkConnectedOverlayMinHeight']\n    }],\n    backdropClass: [{\n      type: Input,\n      args: ['cdkConnectedOverlayBackdropClass']\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['cdkConnectedOverlayPanelClass']\n    }],\n    viewportMargin: [{\n      type: Input,\n      args: ['cdkConnectedOverlayViewportMargin']\n    }],\n    scrollStrategy: [{\n      type: Input,\n      args: ['cdkConnectedOverlayScrollStrategy']\n    }],\n    open: [{\n      type: Input,\n      args: ['cdkConnectedOverlayOpen']\n    }],\n    disableClose: [{\n      type: Input,\n      args: ['cdkConnectedOverlayDisableClose']\n    }],\n    transformOriginSelector: [{\n      type: Input,\n      args: ['cdkConnectedOverlayTransformOriginOn']\n    }],\n    hasBackdrop: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayHasBackdrop',\n        transform: booleanAttribute\n      }]\n    }],\n    lockPosition: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayLockPosition',\n        transform: booleanAttribute\n      }]\n    }],\n    flexibleDimensions: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayFlexibleDimensions',\n        transform: booleanAttribute\n      }]\n    }],\n    growAfterOpen: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayGrowAfterOpen',\n        transform: booleanAttribute\n      }]\n    }],\n    push: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayPush',\n        transform: booleanAttribute\n      }]\n    }],\n    disposeOnNavigation: [{\n      type: Input,\n      args: [{\n        alias: 'cdkConnectedOverlayDisposeOnNavigation',\n        transform: booleanAttribute\n      }]\n    }],\n    backdropClick: [{\n      type: Output\n    }],\n    positionChange: [{\n      type: Output\n    }],\n    attach: [{\n      type: Output\n    }],\n    detach: [{\n      type: Output\n    }],\n    overlayKeydown: [{\n      type: Output\n    }],\n    overlayOutsideClick: [{\n      type: Output\n    }]\n  });\n})();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nclass OverlayModule {\n  static {\n    this.ɵfac = function OverlayModule_Factory(t) {\n      return new (t || OverlayModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: OverlayModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n      imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n      exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n      providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n  constructor(_document, platform) {\n    super(_document, platform);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._fullScreenEventName && this._fullScreenListener) {\n      this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n    }\n  }\n  _createContainer() {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n  _adjustParentForFullscreenChange() {\n    if (!this._containerElement) {\n      return;\n    }\n    const fullscreenElement = this.getFullscreenElement();\n    const parent = fullscreenElement || this._document.body;\n    parent.appendChild(this._containerElement);\n  }\n  _addFullscreenChangeListener(fn) {\n    const eventName = this._getEventName();\n    if (eventName) {\n      if (this._fullScreenListener) {\n        this._document.removeEventListener(eventName, this._fullScreenListener);\n      }\n      this._document.addEventListener(eventName, fn);\n      this._fullScreenListener = fn;\n    }\n  }\n  _getEventName() {\n    if (!this._fullScreenEventName) {\n      const _document = this._document;\n      if (_document.fullscreenEnabled) {\n        this._fullScreenEventName = 'fullscreenchange';\n      } else if (_document.webkitFullscreenEnabled) {\n        this._fullScreenEventName = 'webkitfullscreenchange';\n      } else if (_document.mozFullScreenEnabled) {\n        this._fullScreenEventName = 'mozfullscreenchange';\n      } else if (_document.msFullscreenEnabled) {\n        this._fullScreenEventName = 'MSFullscreenChange';\n      }\n    }\n    return this._fullScreenEventName;\n  }\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n   */\n  getFullscreenElement() {\n    const _document = this._document;\n    return _document.fullscreenElement || _document.webkitFullscreenElement || _document.mozFullScreenElement || _document.msFullscreenElement || null;\n  }\n  static {\n    this.ɵfac = function FullscreenOverlayContainer_Factory(t) {\n      return new (t || FullscreenOverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FullscreenOverlayContainer,\n      factory: FullscreenOverlayContainer.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1$1.Platform\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nfunction CdkDialogContainer_ng_template_0_Template(rf, ctx) {}\nclass DialogConfig {\n  constructor() {\n    /** The ARIA role of the dialog element. */\n    this.role = 'dialog';\n    /** Optional CSS class or classes applied to the overlay panel. */\n    this.panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    this.hasBackdrop = true;\n    /** Optional CSS class or classes applied to the overlay backdrop. */\n    this.backdropClass = '';\n    /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n    this.disableClose = false;\n    /** Width of the dialog. */\n    this.width = '';\n    /** Height of the dialog. */\n    this.height = '';\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** ID of the element that describes the dialog. */\n    this.ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    this.ariaLabelledBy = null;\n    /** Dialog label applied via `aria-label` */\n    this.ariaLabel = null;\n    /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n    this.ariaModal = true;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the previously-focused element upon closing.\n     * Has the following behavior based on the type that is passed in:\n     * - `boolean` - when true, will return focus to the element that was focused before the dialog\n     *    was opened, otherwise won't restore focus at all.\n     * - `string` - focus will be restored to the first element that matches the CSS selector.\n     * - `HTMLElement` - focus will be restored to the specific element.\n     */\n    this.restoreFocus = true;\n    /**\n     * Whether the dialog should close when the user navigates backwards or forwards through browser\n     * history. This does not apply to navigation via anchor element unless using URL-hash based\n     * routing (`HashLocationStrategy` in the Angular router).\n     */\n    this.closeOnNavigation = true;\n    /**\n     * Whether the dialog should close when the dialog service is destroyed. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead.\n     */\n    this.closeOnDestroy = true;\n    /**\n     * Whether the dialog should close when the underlying overlay is detached. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n     * external detachment can happen as a result of a scroll strategy triggering it or when the\n     * browser location changes.\n     */\n    this.closeOnOverlayDetachments = true;\n  }\n}\nfunction throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n  constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n    super();\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._config = _config;\n    this._interactivityChecker = _interactivityChecker;\n    this._ngZone = _ngZone;\n    this._overlayRef = _overlayRef;\n    this._focusMonitor = _focusMonitor;\n    this._platform = inject(Platform);\n    /** The class that traps and manages focus within the dialog. */\n    this._focusTrap = null;\n    /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n    this._elementFocusedBeforeDialogWasOpened = null;\n    /**\n     * Type of interaction that led to the dialog being closed. This is used to determine\n     * whether the focus style will be applied when returning focus to its original location\n     * after the dialog is closed.\n     */\n    this._closeInteractionType = null;\n    /**\n     * Queue of the IDs of the dialog's label element, based on their definition order. The first\n     * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n     * where there are two or more titles in the DOM at a time and the first one is destroyed while\n     * the rest are present.\n     */\n    this._ariaLabelledByQueue = [];\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwDialogContentAlreadyAttachedError();\n      }\n      const result = this._portalOutlet.attachDomPortal(portal);\n      this._contentAttached();\n      return result;\n    };\n    this._document = _document;\n    if (this._config.ariaLabelledBy) {\n      this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n    }\n  }\n  _addAriaLabelledBy(id) {\n    this._ariaLabelledByQueue.push(id);\n    this._changeDetectorRef.markForCheck();\n  }\n  _removeAriaLabelledBy(id) {\n    const index = this._ariaLabelledByQueue.indexOf(id);\n    if (index > -1) {\n      this._ariaLabelledByQueue.splice(index, 1);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _contentAttached() {\n    this._initializeFocusTrap();\n    this._handleBackdropClicks();\n    this._captureInitialFocus();\n  }\n  /**\n   * Can be used by child classes to customize the initial focus\n   * capturing behavior (e.g. if it's tied to an animation).\n   */\n  _captureInitialFocus() {\n    this._trapFocus();\n  }\n  ngOnDestroy() {\n    this._restoreFocus();\n  }\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n  /** Captures focus if it isn't already inside the dialog. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n   * cannot be moved then focus will go to the dialog container.\n   */\n  _trapFocus() {\n    const element = this._elementRef.nativeElement;\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n    // dialog. If the element inside the dialog can't be focused, then the container is focused\n    // so the user can't tab into other elements behind it.\n    switch (this._config.autoFocus) {\n      case false:\n      case 'dialog':\n        // Ensure that focus is on the dialog container. It's possible that a different\n        // component tried to move focus while the open animation was running. See:\n        // https://github.com/angular/components/issues/16215. Note that we only want to do this\n        // if the focus isn't inside the dialog already, because it's possible that the consumer\n        // turned off `autoFocus` in order to move focus themselves.\n        if (!this._containsFocus()) {\n          element.focus();\n        }\n        break;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap?.focusInitialElementWhenReady().then(focusedSuccessfully => {\n          // If we weren't able to find a focusable element in the dialog, then focus the dialog\n          // container instead.\n          if (!focusedSuccessfully) {\n            this._focusDialogContainer();\n          }\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this._config.autoFocus);\n        break;\n    }\n  }\n  /** Restores focus to the element that was focused before the dialog opened. */\n  _restoreFocus() {\n    const focusConfig = this._config.restoreFocus;\n    let focusTargetElement = null;\n    if (typeof focusConfig === 'string') {\n      focusTargetElement = this._document.querySelector(focusConfig);\n    } else if (typeof focusConfig === 'boolean') {\n      focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n    } else if (focusConfig) {\n      focusTargetElement = focusConfig;\n    }\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && focusTargetElement && typeof focusTargetElement.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          focusTargetElement.focus();\n        }\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Focuses the dialog container. */\n  _focusDialogContainer() {\n    // Note that there is no focus method when rendering on the server.\n    if (this._elementRef.nativeElement.focus) {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /** Returns whether focus is inside the dialog. */\n  _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = _getFocusedElementPierceShadowDom();\n    return element === activeElement || element.contains(activeElement);\n  }\n  /** Sets up the focus trap. */\n  _initializeFocusTrap() {\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      // Save the previously focused element. This element will be re-focused\n      // when the dialog closes.\n      if (this._document) {\n        this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n      }\n    }\n  }\n  /** Sets up the listener that handles clicks on the dialog backdrop. */\n  _handleBackdropClicks() {\n    // Clicking on the backdrop will move focus out of dialog.\n    // Recapture it if closing via the backdrop is disabled.\n    this._overlayRef.backdropClick().subscribe(() => {\n      if (this._config.disableClose) {\n        this._recaptureFocus();\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CdkDialogContainer_Factory(t) {\n      return new (t || CdkDialogContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(DialogConfig), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.OverlayRef), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkDialogContainer,\n      selectors: [[\"cdk-dialog-container\"]],\n      viewQuery: function CdkDialogContainer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n        }\n      },\n      hostAttrs: [\"tabindex\", \"-1\", 1, \"cdk-dialog-container\"],\n      hostVars: 6,\n      hostBindings: function CdkDialogContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx._config.id || null)(\"role\", ctx._config.role)(\"aria-modal\", ctx._config.ariaModal)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkPortalOutlet\", \"\"]],\n      template: function CdkDialogContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CdkDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        }\n      },\n      dependencies: [CdkPortalOutlet],\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'cdk-dialog-container',\n        'tabindex': '-1',\n        '[attr.id]': '_config.id || null',\n        '[attr.role]': '_config.role',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null'\n      },\n      template: \"<ng-template cdkPortalOutlet />\\n\",\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusTrapFactory\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DialogConfig]\n    }]\n  }, {\n    type: i1.InteractivityChecker\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1$1.OverlayRef\n  }, {\n    type: i1.FocusMonitor\n  }], {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n  constructor(overlayRef, config) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    /** Emits when the dialog has been closed. */\n    this.closed = new Subject();\n    this.disableClose = config.disableClose;\n    this.backdropClick = overlayRef.backdropClick();\n    this.keydownEvents = overlayRef.keydownEvents();\n    this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n    this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n    this.keydownEvents.subscribe(event => {\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close(undefined, {\n          focusOrigin: 'keyboard'\n        });\n      }\n    });\n    this.backdropClick.subscribe(() => {\n      if (!this.disableClose) {\n        this.close(undefined, {\n          focusOrigin: 'mouse'\n        });\n      }\n    });\n    this._detachSubscription = overlayRef.detachments().subscribe(() => {\n      // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n      if (config.closeOnOverlayDetachments !== false) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param result Optional result to return to the dialog opener.\n   * @param options Additional options to customize the closing behavior.\n   */\n  close(result, options) {\n    if (this.containerInstance) {\n      const closedSubject = this.closed;\n      this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n      // Drop the detach subscription first since it can be triggered by the\n      // `dispose` call and override the result of this closing sequence.\n      this._detachSubscription.unsubscribe();\n      this.overlayRef.dispose();\n      closedSubject.next(result);\n      closedSubject.complete();\n      this.componentInstance = this.containerInstance = null;\n    }\n  }\n  /** Updates the position of the dialog based on the current position strategy. */\n  updatePosition() {\n    this.overlayRef.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this.overlayRef.updateSize({\n      width,\n      height\n    });\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this.overlayRef.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this.overlayRef.removePanelClass(classes);\n    return this;\n  }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._defaultOptions = _defaultOptions;\n    this._parentDialog = _parentDialog;\n    this._overlayContainer = _overlayContainer;\n    this._openDialogsAtThisLevel = [];\n    this._afterAllClosedAtThisLevel = new Subject();\n    this._afterOpenedAtThisLevel = new Subject();\n    this._ariaHiddenElements = new Map();\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n    this.afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n    this._scrollStrategy = scrollStrategy;\n  }\n  open(componentOrTemplateRef, config) {\n    const defaults = this._defaultOptions || new DialogConfig();\n    config = {\n      ...defaults,\n      ...config\n    };\n    config.id = config.id || `cdk-dialog-${uniqueId++}`;\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const overlayConfig = this._getOverlayConfig(config);\n    const overlayRef = this._overlay.create(overlayConfig);\n    const dialogRef = new DialogRef(overlayRef, config);\n    const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n    dialogRef.containerInstance = dialogContainer;\n    this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n    this.openDialogs.push(dialogRef);\n    dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n    this.afterOpened.next(dialogRef);\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    reverseForEach(this.openDialogs, dialog => dialog.close());\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n    // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n    // determines when `aria-hidden` is removed from elements outside the dialog.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => {\n      // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n      if (dialog.config.closeOnDestroy === false) {\n        this._removeOpenDialog(dialog, false);\n      }\n    });\n    // Make a second pass and close the remaining dialogs. We do this second pass in order to\n    // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n    // that should be closed and dialogs that should not.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n    this._openDialogsAtThisLevel = [];\n  }\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param config The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  _getOverlayConfig(config) {\n    const state = new OverlayConfig({\n      positionStrategy: config.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n      panelClass: config.panelClass,\n      hasBackdrop: config.hasBackdrop,\n      direction: config.direction,\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight,\n      width: config.width,\n      height: config.height,\n      disposeOnNavigation: config.closeOnNavigation\n    });\n    if (config.backdropClass) {\n      state.backdropClass = config.backdropClass;\n    }\n    return state;\n  }\n  /**\n   * Attaches a dialog container to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  _attachContainer(overlay, dialogRef, config) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DialogConfig,\n      useValue: config\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }, {\n      provide: OverlayRef,\n      useValue: overlay\n    }];\n    let containerType;\n    if (config.container) {\n      if (typeof config.container === 'function') {\n        containerType = config.container;\n      } else {\n        containerType = config.container.type;\n        providers.push(...config.container.providers(config));\n      }\n    } else {\n      containerType = CdkDialogContainer;\n    }\n    const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    }), config.componentFactoryResolver);\n    const containerRef = overlay.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param config Configuration used to open the dialog.\n   */\n  _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n      let context = {\n        $implicit: config.data,\n        dialogRef\n      };\n      if (config.templateContext) {\n        context = {\n          ...context,\n          ...(typeof config.templateContext === 'function' ? config.templateContext() : config.templateContext)\n        };\n      }\n      dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n    } else {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n      const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n      dialogRef.componentRef = contentRef;\n      dialogRef.componentInstance = contentRef.instance;\n    }\n  }\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n   * dialog injector, if the user didn't provide a custom one.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DIALOG_DATA,\n      useValue: config.data\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }];\n    if (config.providers) {\n      if (typeof config.providers === 'function') {\n        providers.push(...config.providers(dialogRef, config, dialogContainer));\n      } else {\n        providers.push(...config.providers);\n      }\n    }\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, {\n      optional: true\n    }))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || fallbackInjector,\n      providers\n    });\n  }\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   * @param emitEvent Whether to emit an event if this is the last dialog.\n   */\n  _removeOpenDialog(dialogRef, emitEvent) {\n    const index = this.openDialogs.indexOf(dialogRef);\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n        this._ariaHiddenElements.clear();\n        if (emitEvent) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    }\n  }\n  /** Hides all of the content that isn't an overlay from assistive technology. */\n  _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n        if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  static {\n    this.ɵfac = function Dialog_Factory(t) {\n      return new (t || Dialog)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DEFAULT_DIALOG_CONFIG, 8), i0.ɵɵinject(Dialog, 12), i0.ɵɵinject(i1$1.OverlayContainer), i0.ɵɵinject(DIALOG_SCROLL_STRATEGY));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Dialog,\n      factory: Dialog.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i0.Injector\n  }, {\n    type: DialogConfig,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DEFAULT_DIALOG_CONFIG]\n    }]\n  }, {\n    type: Dialog,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: i1$1.OverlayContainer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DIALOG_SCROLL_STRATEGY]\n    }]\n  }], null);\n})();\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n  let i = items.length;\n  while (i--) {\n    callback(items[i]);\n  }\n}\nclass DialogModule {\n  static {\n    this.ɵfac = function DialogModule_Factory(t) {\n      return new (t || DialogModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DialogModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [Dialog],\n      imports: [OverlayModule, PortalModule, A11yModule,\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n      exports: [\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule, CdkDialogContainer],\n      providers: [Dialog]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nfunction MatDialogContainer_ng_template_2_Template(rf, ctx) {}\nclass MatDialogConfig {\n  constructor() {\n    /** The ARIA role of the dialog element. */\n    this.role = 'dialog';\n    /** Custom class for the overlay pane. */\n    this.panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    this.hasBackdrop = true;\n    /** Custom class for the backdrop. */\n    this.backdropClass = '';\n    /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n    this.disableClose = false;\n    /** Width of the dialog. */\n    this.width = '';\n    /** Height of the dialog. */\n    this.height = '';\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** ID of the element that describes the dialog. */\n    this.ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    this.ariaLabelledBy = null;\n    /** Aria label to assign to the dialog element. */\n    this.ariaLabel = null;\n    /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n    this.ariaModal = true;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    this.restoreFocus = true;\n    /** Whether to wait for the opening animation to finish before trapping focus. */\n    this.delayFocusTrap = true;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.closeOnNavigation = true;\n    // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n  }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n  constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n    super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n    this._animationMode = _animationMode;\n    /** Emits when an animation state changes. */\n    this._animationStateChanged = new EventEmitter();\n    /** Whether animations are enabled. */\n    this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n    /** Number of actions projected in the dialog. */\n    this._actionSectionCount = 0;\n    /** Host element of the dialog container component. */\n    this._hostElement = this._elementRef.nativeElement;\n    /** Duration of the dialog open animation. */\n    this._enterAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION : 0;\n    /** Duration of the dialog close animation. */\n    this._exitAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION : 0;\n    /** Current timer for dialog animations. */\n    this._animationTimer = null;\n    /**\n     * Completes the dialog open by clearing potential animation classes, trapping\n     * focus and emitting an opened event.\n     */\n    this._finishDialogOpen = () => {\n      this._clearAnimationClasses();\n      this._openAnimationDone(this._enterAnimationDuration);\n    };\n    /**\n     * Completes the dialog close by clearing potential animation classes, restoring\n     * focus and emitting a closed event.\n     */\n    this._finishDialogClose = () => {\n      this._clearAnimationClasses();\n      this._animationStateChanged.emit({\n        state: 'closed',\n        totalTime: this._exitAnimationDuration\n      });\n    };\n  }\n  _contentAttached() {\n    // Delegate to the original dialog-container initialization (i.e. saving the\n    // previous element, setting up the focus trap and moving focus to the container).\n    super._contentAttached();\n    // Note: Usually we would be able to use the MDC dialog foundation here to handle\n    // the dialog animation for us, but there are a few reasons why we just leverage\n    // their styles and not use the runtime foundation code:\n    //   1. Foundation does not allow us to disable animations.\n    //   2. Foundation contains unnecessary features we don't need and aren't\n    //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n    //   3. Foundation uses unnecessary timers for animations to work around limitations\n    //      in React's `setState` mechanism.\n    //      https://github.com/material-components/material-components-web/pull/3682.\n    this._startOpenAnimation();\n  }\n  /** Starts the dialog open animation if enabled. */\n  _startOpenAnimation() {\n    this._animationStateChanged.emit({\n      state: 'opening',\n      totalTime: this._enterAnimationDuration\n    });\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      // One would expect that the open class is added once the animation finished, but MDC\n      // uses the open class in combination with the opening class to start the animation.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n      this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n    } else {\n      this._hostElement.classList.add(OPEN_CLASS);\n      // Note: We could immediately finish the dialog opening here with noop animations,\n      // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n      // Executing this immediately would mean that `afterOpened` emits synchronously\n      // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n      Promise.resolve().then(() => this._finishDialogOpen());\n    }\n  }\n  /**\n   * Starts the exit animation of the dialog if enabled. This method is\n   * called by the dialog ref.\n   */\n  _startExitAnimation() {\n    this._animationStateChanged.emit({\n      state: 'closing',\n      totalTime: this._exitAnimationDuration\n    });\n    this._hostElement.classList.remove(OPEN_CLASS);\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n      this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n    } else {\n      // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n      // set up before any user can subscribe to the backdrop click. The subscription triggers\n      // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n      // animation state event if animations are disabled, the overlay would be disposed\n      // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n      // skipped. We work around this by waiting with the dialog close until the next tick when\n      // all subscriptions have been fired as expected. This is not an ideal solution, but\n      // there doesn't seem to be any other good way. Alternatives that have been considered:\n      //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n      //      Also this issue is specific to the MDC implementation where the dialog could\n      //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n      //      and closing always takes at least a tick.\n      //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n      //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n      //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n      // Based on the fact that this is specific to the MDC-based implementation of the dialog\n      // animations, the defer is applied here.\n      Promise.resolve().then(() => this._finishDialogClose());\n    }\n  }\n  /**\n   * Updates the number action sections.\n   * @param delta Increase/decrease in the number of sections.\n   */\n  _updateActionSectionCount(delta) {\n    this._actionSectionCount += delta;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Clears all dialog animation classes. */\n  _clearAnimationClasses() {\n    this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n  }\n  _waitForAnimationToComplete(duration, callback) {\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n    // Note that we want this timer to run inside the NgZone, because we want\n    // the related events like `afterClosed` to be inside the zone as well.\n    this._animationTimer = setTimeout(callback, duration);\n  }\n  /** Runs a callback in `requestAnimationFrame`, if available. */\n  _requestAnimationFrame(callback) {\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame === 'function') {\n        requestAnimationFrame(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  _captureInitialFocus() {\n    if (!this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Callback for when the open dialog animation has finished. Intended to\n   * be called by sub-classes that use different animation implementations.\n   */\n  _openAnimationDone(totalTime) {\n    if (this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n    this._animationStateChanged.next({\n      state: 'opened',\n      totalTime\n    });\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n  }\n  attachComponentPortal(portal) {\n    // When a component is passed into the dialog, the host element interrupts\n    // the `display:flex` from affecting the dialog title, content, and\n    // actions. To fix this, we make the component host `display: contents` by\n    // marking its host with the `mat-mdc-dialog-component-host` class.\n    //\n    // Note that this problem does not exist when a template ref is used since\n    // the title, contents, and actions are then nested directly under the\n    // dialog surface.\n    const ref = super.attachComponentPortal(portal);\n    ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n    return ref;\n  }\n  static {\n    this.ɵfac = function MatDialogContainer_Factory(t) {\n      return new (t || MatDialogContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MatDialogConfig), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.OverlayRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDialogContainer,\n      selectors: [[\"mat-dialog-container\"]],\n      hostAttrs: [\"tabindex\", \"-1\", 1, \"mat-mdc-dialog-container\", \"mdc-dialog\"],\n      hostVars: 10,\n      hostBindings: function MatDialogContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx._config.id);\n          i0.ɵɵattribute(\"aria-modal\", ctx._config.ariaModal)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", !ctx._animationsEnabled)(\"mat-mdc-dialog-container-with-actions\", ctx._actionSectionCount > 0);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 0,\n      consts: [[1, \"mdc-dialog__container\"], [1, \"mat-mdc-dialog-surface\", \"mdc-dialog__surface\"], [\"cdkPortalOutlet\", \"\"]],\n      template: function MatDialogContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, MatDialogContainer_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd()();\n        }\n      },\n      dependencies: [CdkPortalOutlet],\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'mat-mdc-dialog-container mdc-dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[id]': '_config.id',\n        '[attr.role]': '_config.role',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n        '[class._mat-animation-noopable]': '!_animationsEnabled',\n        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0'\n      },\n      template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\",\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusTrapFactory\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatDialogConfig\n  }, {\n    type: i1.InteractivityChecker\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1$1.OverlayRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: i1.FocusMonitor\n  }], null);\n})();\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n  if (time == null) {\n    return null;\n  }\n  if (typeof time === 'number') {\n    return time;\n  }\n  if (time.endsWith('ms')) {\n    return coerceNumberProperty(time.substring(0, time.length - 2));\n  }\n  if (time.endsWith('s')) {\n    return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n  }\n  if (time === '0') {\n    return 0;\n  }\n  return null; // anything else is invalid.\n}\nvar MatDialogState;\n(function (MatDialogState) {\n  MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n  MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n  MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n  constructor(_ref, config, _containerInstance) {\n    this._ref = _ref;\n    this._containerInstance = _containerInstance;\n    /** Subject for notifying the user that the dialog has finished opening. */\n    this._afterOpened = new Subject();\n    /** Subject for notifying the user that the dialog has started closing. */\n    this._beforeClosed = new Subject();\n    /** Current state of the dialog. */\n    this._state = MatDialogState.OPEN;\n    this.disableClose = config.disableClose;\n    this.id = _ref.id;\n    // Used to target panels specifically tied to dialogs.\n    _ref.addPanelClass('mat-mdc-dialog-panel');\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n    _ref.overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._finishDialogClose();\n    });\n    merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n      if (!this.disableClose) {\n        event.preventDefault();\n        _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult) {\n    this._result = dialogResult;\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1)).subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._ref.overlayRef.detachBackdrop();\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n    });\n    this._state = MatDialogState.CLOSING;\n    this._containerInstance._startExitAnimation();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed() {\n    return this._ref.closed;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed() {\n    return this._beforeClosed;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._ref.backdropClick;\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._ref.keydownEvents;\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position) {\n    let strategy = this._ref.config.positionStrategy;\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n    this._ref.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this._ref.updateSize(width, height);\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this._ref.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this._ref.removePanelClass(classes);\n    return this;\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState() {\n    return this._state;\n  }\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._ref.close(this._result, {\n      focusOrigin: this._closeInteractionType\n    });\n    this.componentInstance = null;\n  }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n  ref._closeInteractionType = interactionType;\n  return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  constructor(_overlay, injector,\n  /**\n   * @deprecated `_location` parameter to be removed.\n   * @breaking-change 10.0.0\n   */\n  location, _defaultOptions, _scrollStrategy, _parentDialog,\n  /**\n   * @deprecated No longer used. To be removed.\n   * @breaking-change 15.0.0\n   */\n  _overlayContainer,\n  /**\n   * @deprecated No longer used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  _animationMode) {\n    this._overlay = _overlay;\n    this._defaultOptions = _defaultOptions;\n    this._scrollStrategy = _scrollStrategy;\n    this._parentDialog = _parentDialog;\n    this._openDialogsAtThisLevel = [];\n    this._afterAllClosedAtThisLevel = new Subject();\n    this._afterOpenedAtThisLevel = new Subject();\n    this.dialogConfigClass = MatDialogConfig;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n    this.afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n    this._dialog = injector.get(Dialog);\n    this._dialogRefConstructor = MatDialogRef;\n    this._dialogContainerType = MatDialogContainer;\n    this._dialogDataToken = MAT_DIALOG_DATA;\n  }\n  open(componentOrTemplateRef, config) {\n    let dialogRef;\n    config = {\n      ...(this._defaultOptions || new MatDialogConfig()),\n      ...config\n    };\n    config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n    config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n    const cdkRef = this._dialog.open(componentOrTemplateRef, {\n      ...config,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      // Disable closing since we need to sync it up to the animation ourselves.\n      disableClose: true,\n      // Disable closing on destroy, because this service cleans up its open dialogs as well.\n      // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n      // the dialogs immediately whereas we want it to wait for the animations to finish.\n      closeOnDestroy: false,\n      // Disable closing on detachments so that we can sync up the animation.\n      // The Material dialog ref handles this manually.\n      closeOnOverlayDetachments: false,\n      container: {\n        type: this._dialogContainerType,\n        providers: () => [\n        // Provide our config as the CDK config as well since it has the same interface as the\n        // CDK one, but it contains the actual values passed in by the user for things like\n        // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n        {\n          provide: this.dialogConfigClass,\n          useValue: config\n        }, {\n          provide: DialogConfig,\n          useValue: config\n        }]\n      },\n      templateContext: () => ({\n        dialogRef\n      }),\n      providers: (ref, cdkConfig, dialogContainer) => {\n        dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n        dialogRef.updatePosition(config?.position);\n        return [{\n          provide: this._dialogContainerType,\n          useValue: dialogContainer\n        }, {\n          provide: this._dialogDataToken,\n          useValue: cdkConfig.data\n        }, {\n          provide: this._dialogRefConstructor,\n          useValue: dialogRef\n        }];\n      }\n    });\n    // This can't be assigned in the `providers` callback, because\n    // the instance hasn't been assigned to the CDK ref yet.\n    dialogRef.componentRef = cdkRef.componentRef;\n    dialogRef.componentInstance = cdkRef.componentInstance;\n    this.openDialogs.push(dialogRef);\n    this.afterOpened.next(dialogRef);\n    dialogRef.afterClosed().subscribe(() => {\n      const index = this.openDialogs.indexOf(dialogRef);\n      if (index > -1) {\n        this.openDialogs.splice(index, 1);\n        if (!this.openDialogs.length) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    });\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    this._closeDialogs(this.openDialogs);\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n  _closeDialogs(dialogs) {\n    let i = dialogs.length;\n    while (i--) {\n      dialogs[i].close();\n    }\n  }\n  static {\n    this.ɵfac = function MatDialog_Factory(t) {\n      return new (t || MatDialog)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2.Location, 8), i0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), i0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), i0.ɵɵinject(MatDialog, 12), i0.ɵɵinject(i1$1.OverlayContainer), i0.ɵɵinject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatDialog,\n      factory: MatDialog.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i0.Injector\n  }, {\n    type: i2.Location,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: MatDialogConfig,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DIALOG_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DIALOG_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: MatDialog,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: i1$1.OverlayContainer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], null);\n})();\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n  constructor(\n  // The dialog title directive is always used in combination with a `MatDialogRef`.\n  // tslint:disable-next-line: lightweight-tokens\n  dialogRef, _elementRef, _dialog) {\n    this.dialogRef = dialogRef;\n    this._elementRef = _elementRef;\n    this._dialog = _dialog;\n    /** Default to \"button\" to prevents accidental form submits. */\n    this.type = 'button';\n  }\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n  }\n  ngOnChanges(changes) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n  _onButtonClick(event) {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n  }\n  static {\n    this.ɵfac = function MatDialogClose_Factory(t) {\n      return new (t || MatDialogClose)(i0.ɵɵdirectiveInject(MatDialogRef, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatDialog));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatDialogClose,\n      selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]],\n      hostVars: 2,\n      hostBindings: function MatDialogClose_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) {\n            return ctx._onButtonClick($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n        }\n      },\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        type: \"type\",\n        dialogResult: [i0.ɵɵInputFlags.None, \"mat-dialog-close\", \"dialogResult\"],\n        _matDialogClose: [i0.ɵɵInputFlags.None, \"matDialogClose\", \"_matDialogClose\"]\n      },\n      exportAs: [\"matDialogClose\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogClose, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-close], [matDialogClose]',\n      exportAs: 'matDialogClose',\n      standalone: true,\n      host: {\n        '(click)': '_onButtonClick($event)',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.type]': 'type'\n      }\n    }]\n  }], () => [{\n    type: MatDialogRef,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: MatDialog\n  }], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    type: [{\n      type: Input\n    }],\n    dialogResult: [{\n      type: Input,\n      args: ['mat-dialog-close']\n    }],\n    _matDialogClose: [{\n      type: Input,\n      args: ['matDialogClose']\n    }]\n  });\n})();\nclass MatDialogLayoutSection {\n  constructor(\n  // The dialog title directive is always used in combination with a `MatDialogRef`.\n  // tslint:disable-next-line: lightweight-tokens\n  _dialogRef, _elementRef, _dialog) {\n    this._dialogRef = _dialogRef;\n    this._elementRef = _elementRef;\n    this._dialog = _dialog;\n  }\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        this._onAdd();\n      });\n    }\n  }\n  ngOnDestroy() {\n    // Note: we null check because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    const instance = this._dialogRef?._containerInstance;\n    if (instance) {\n      Promise.resolve().then(() => {\n        this._onRemove();\n      });\n    }\n  }\n  static {\n    this.ɵfac = function MatDialogLayoutSection_Factory(t) {\n      return new (t || MatDialogLayoutSection)(i0.ɵɵdirectiveInject(MatDialogRef, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatDialog));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatDialogLayoutSection,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogLayoutSection, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], () => [{\n    type: MatDialogRef,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: MatDialog\n  }], null);\n})();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n  constructor() {\n    super(...arguments);\n    this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n  }\n  _onAdd() {\n    // Note: we null check the queue, because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n  }\n  _onRemove() {\n    this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatDialogTitle_BaseFactory;\n      return function MatDialogTitle_Factory(t) {\n        return (ɵMatDialogTitle_BaseFactory || (ɵMatDialogTitle_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogTitle)))(t || MatDialogTitle);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatDialogTitle,\n      selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-dialog-title\", \"mdc-dialog__title\"],\n      hostVars: 1,\n      hostBindings: function MatDialogTitle_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      exportAs: [\"matDialogTitle\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogTitle, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-title], [matDialogTitle]',\n      exportAs: 'matDialogTitle',\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n        '[id]': 'id'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n  static {\n    this.ɵfac = function MatDialogContent_Factory(t) {\n      return new (t || MatDialogContent)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatDialogContent,\n      selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-dialog-content\", \"mdc-dialog__content\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContent, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n      host: {\n        'class': 'mat-mdc-dialog-content mdc-dialog__content'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n  _onAdd() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n  }\n  _onRemove() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatDialogActions_BaseFactory;\n      return function MatDialogActions_Factory(t) {\n        return (ɵMatDialogActions_BaseFactory || (ɵMatDialogActions_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogActions)))(t || MatDialogActions);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatDialogActions,\n      selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-dialog-actions\", \"mdc-dialog__actions\"],\n      hostVars: 6,\n      hostBindings: function MatDialogActions_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-dialog-actions-align-start\", ctx.align === \"start\")(\"mat-mdc-dialog-actions-align-center\", ctx.align === \"center\")(\"mat-mdc-dialog-actions-align-end\", ctx.align === \"end\");\n        }\n      },\n      inputs: {\n        align: \"align\"\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogActions, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n  let parent = element.nativeElement.parentElement;\n  while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n    parent = parent.parentElement;\n  }\n  return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\nconst DIRECTIVES = [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent];\nclass MatDialogModule {\n  static {\n    this.ɵfac = function MatDialogModule_Factory(t) {\n      return new (t || MatDialogModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatDialogModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MatDialog],\n      imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n      exports: [MatCommonModule, ...DIRECTIVES],\n      providers: [MatDialog]\n    }]\n  }], null, null);\n})();\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n  params: {\n    enterAnimationDuration: '150ms',\n    exitAnimationDuration: '75ms'\n  }\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n  /** Animation that is applied on the dialog container by default. */\n  dialogContainer: trigger('dialogContainer', [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({\n    opacity: 0,\n    transform: 'scale(0.7)'\n  })), state('enter', style({\n    transform: 'none'\n  })), transition('* => enter', group([animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({\n    transform: 'none',\n    opacity: 1\n  })), query('@*', animateChild(), {\n    optional: true\n  })]), _defaultParams), transition('* => void, * => exit', group([animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({\n    opacity: 0\n  })), query('@*', animateChild(), {\n    optional: true\n  })]), _defaultParams)])\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  constructor( /** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    this._destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    this._resizeSubject = new Subject();\n    /** A map of elements to streams of their resize events. */\n    this._elementObservables = new Map();\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nclass SharedResizeObserver {\n  constructor() {\n    /** Map of box type to shared resize observer. */\n    this._observers = new Map();\n    /** The Angular zone. */\n    this._ngZone = inject(NgZone);\n    if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      this._ngZone.runOutsideAngular(() => {\n        window.addEventListener('error', loopLimitExceededErrorHandler);\n      });\n    }\n  }\n  ngOnDestroy() {\n    for (const [, observer] of this._observers) {\n      observer.destroy();\n    }\n    this._observers.clear();\n    if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      window.removeEventListener('error', loopLimitExceededErrorHandler);\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given target element and box type.\n   * @param target The element to observe for resizes.\n   * @param options Options to pass to the `ResizeObserver`\n   * @return The stream of resize events for the element.\n   */\n  observe(target, options) {\n    const box = options?.box || 'content-box';\n    if (!this._observers.has(box)) {\n      this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n    }\n    return this._observers.get(box).observe(target);\n  }\n  static {\n    this.ɵfac = function SharedResizeObserver_Factory(t) {\n      return new (t || SharedResizeObserver)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedResizeObserver,\n      factory: SharedResizeObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedResizeObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, Attribute, Input, inject, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ANIMATION_MODULE_TYPE, Optional, Inject, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"textField\"];\nconst _c4 = [\"iconPrefixContainer\"];\nconst _c5 = [\"textPrefixContainer\"];\nconst _c6 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c7 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 16);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(2, !ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(0, ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, !ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵprojection(1, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵprojection(1, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\nfunction MatFormField_Case_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵprojection(1, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n  }\n}\nfunction MatFormField_Case_17_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, MatFormField_Case_17_Conditional_1_Template, 2, 2, \"mat-hint\", 20);\n    i0.ɵɵprojection(2, 7);\n    i0.ɵɵelement(3, \"div\", 21);\n    i0.ɵɵprojection(4, 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, ctx_r1.hintLabel ? 1 : -1);\n  }\n}\nclass MatLabel {\n  static {\n    this.ɵfac = function MatLabel_Factory(t) {\n      return new (t || MatLabel)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatLabel,\n      selectors: [[\"mat-label\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label',\n      standalone: true\n    }]\n  }], null, null);\n})();\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n  constructor(ariaLive, elementRef) {\n    this.id = `mat-mdc-error-${nextUniqueId$2++}`;\n    // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n    // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n    if (!ariaLive) {\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\n    }\n  }\n  static {\n    this.ɵfac = function MatError_Factory(t) {\n      return new (t || MatError)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatError,\n      selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n      hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n      hostVars: 1,\n      hostBindings: function MatError_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error, [matError]',\n      host: {\n        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n        'aria-atomic': 'true',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['aria-live']\n    }]\n  }, {\n    type: i0.ElementRef\n  }], {\n    id: [{\n      type: Input\n    }]\n  });\n})();\nlet nextUniqueId$1 = 0;\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n  constructor() {\n    /** Whether to align the hint label at the start or end of the line. */\n    this.align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    this.id = `mat-mdc-hint-${nextUniqueId$1++}`;\n  }\n  static {\n    this.ɵfac = function MatHint_Factory(t) {\n      return new (t || MatHint)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHint,\n      selectors: [[\"mat-hint\"]],\n      hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n      hostVars: 4,\n      hostBindings: function MatHint_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n        }\n      },\n      inputs: {\n        align: \"align\",\n        id: \"id\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n        '[id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      },\n      standalone: true\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n  constructor() {\n    this._isText = false;\n  }\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  static {\n    this.ɵfac = function MatPrefix_Factory(t) {\n      return new (t || MatPrefix)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPrefix,\n      selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n      inputs: {\n        _isTextSelector: [i0.ɵɵInputFlags.None, \"matTextPrefix\", \"_isTextSelector\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n      providers: [{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }],\n      standalone: true\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextPrefix']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n  constructor() {\n    this._isText = false;\n  }\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  static {\n    this.ɵfac = function MatSuffix_Factory(t) {\n      return new (t || MatSuffix)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSuffix,\n      selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n      inputs: {\n        _isTextSelector: [i0.ɵɵInputFlags.None, \"matTextSuffix\", \"_isTextSelector\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n      providers: [{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }],\n      standalone: true\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextSuffix']\n    }]\n  });\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nclass MatFormFieldFloatingLabel {\n  /** Whether the label is floating. */\n  get floating() {\n    return this._floating;\n  }\n  set floating(value) {\n    this._floating = value;\n    if (this.monitorResize) {\n      this._handleResize();\n    }\n  }\n  /** Whether to monitor for resize events on the floating label. */\n  get monitorResize() {\n    return this._monitorResize;\n  }\n  set monitorResize(value) {\n    this._monitorResize = value;\n    if (this._monitorResize) {\n      this._subscribeToResize();\n    } else {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n    this._floating = false;\n    this._monitorResize = false;\n    /** The shared ResizeObserver. */\n    this._resizeObserver = inject(SharedResizeObserver);\n    /** The Angular zone. */\n    this._ngZone = inject(NgZone);\n    /** The parent form-field. */\n    this._parent = inject(FLOATING_LABEL_PARENT);\n    /** The current resize event subscription. */\n    this._resizeSubscription = new Subscription();\n  }\n  ngOnDestroy() {\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Gets the width of the label. Used for the outline notch. */\n  getWidth() {\n    return estimateScrollWidth(this._elementRef.nativeElement);\n  }\n  /** Gets the HTML element for the floating label. */\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n  /** Handles resize events from the ResizeObserver. */\n  _handleResize() {\n    // In the case where the label grows in size, the following sequence of events occurs:\n    // 1. The label grows by 1px triggering the ResizeObserver\n    // 2. The notch is expanded to accommodate the entire label\n    // 3. The label expands to its full width, triggering the ResizeObserver again\n    //\n    // This is expected, but If we allow this to all happen within the same macro task it causes an\n    // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n    // the next macro task.\n    setTimeout(() => this._parent._handleLabelResized());\n  }\n  /** Subscribes to resize events. */\n  _subscribeToResize() {\n    this._resizeSubscription.unsubscribe();\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n        box: 'border-box'\n      }).subscribe(() => this._handleResize());\n    });\n  }\n  static {\n    this.ɵfac = function MatFormFieldFloatingLabel_Factory(t) {\n      return new (t || MatFormFieldFloatingLabel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldFloatingLabel,\n      selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n      hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n      hostVars: 2,\n      hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n        }\n      },\n      inputs: {\n        floating: \"floating\",\n        monitorResize: \"monitorResize\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldFloatingLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'label[matFormFieldFloatingLabel]',\n      host: {\n        'class': 'mdc-floating-label mat-mdc-floating-label',\n        '[class.mdc-floating-label--float-above]': 'floating'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    floating: [{\n      type: Input\n    }],\n    monitorResize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nclass MatFormFieldLineRipple {\n  constructor(_elementRef, ngZone) {\n    this._elementRef = _elementRef;\n    this._handleTransitionEnd = event => {\n      const classList = this._elementRef.nativeElement.classList;\n      const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n      if (event.propertyName === 'opacity' && isDeactivating) {\n        classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n      }\n    };\n    ngZone.runOutsideAngular(() => {\n      _elementRef.nativeElement.addEventListener('transitionend', this._handleTransitionEnd);\n    });\n  }\n  activate() {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(DEACTIVATING_CLASS);\n    classList.add(ACTIVATE_CLASS);\n  }\n  deactivate() {\n    this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n  }\n  ngOnDestroy() {\n    this._elementRef.nativeElement.removeEventListener('transitionend', this._handleTransitionEnd);\n  }\n  static {\n    this.ɵfac = function MatFormFieldLineRipple_Factory(t) {\n      return new (t || MatFormFieldLineRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldLineRipple,\n      selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n      hostAttrs: [1, \"mdc-line-ripple\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldLineRipple, [{\n    type: Directive,\n    args: [{\n      selector: 'div[matFormFieldLineRipple]',\n      host: {\n        'class': 'mdc-line-ripple'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nclass MatFormFieldNotchedOutline {\n  constructor(_elementRef, _ngZone) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /** Whether the notch should be opened. */\n    this.open = false;\n  }\n  ngAfterViewInit() {\n    const label = this._elementRef.nativeElement.querySelector('.mdc-floating-label');\n    if (label) {\n      this._elementRef.nativeElement.classList.add('mdc-notched-outline--upgraded');\n      if (typeof requestAnimationFrame === 'function') {\n        label.style.transitionDuration = '0s';\n        this._ngZone.runOutsideAngular(() => {\n          requestAnimationFrame(() => label.style.transitionDuration = '');\n        });\n      }\n    } else {\n      this._elementRef.nativeElement.classList.add('mdc-notched-outline--no-label');\n    }\n  }\n  _setNotchWidth(labelWidth) {\n    if (!this.open || !labelWidth) {\n      this._notch.nativeElement.style.width = '';\n    } else {\n      const NOTCH_ELEMENT_PADDING = 8;\n      const NOTCH_ELEMENT_BORDER = 1;\n      this._notch.nativeElement.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n    }\n  }\n  static {\n    this.ɵfac = function MatFormFieldNotchedOutline_Factory(t) {\n      return new (t || MatFormFieldNotchedOutline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFormFieldNotchedOutline,\n      selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n      viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mdc-notched-outline\"],\n      hostVars: 2,\n      hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n        }\n      },\n      inputs: {\n        open: [i0.ɵɵInputFlags.None, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c1,\n      ngContentSelectors: _c2,\n      decls: 5,\n      vars: 0,\n      consts: [[\"notch\", \"\"], [1, \"mdc-notched-outline__leading\"], [1, \"mdc-notched-outline__notch\"], [1, \"mdc-notched-outline__trailing\"]],\n      template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"div\", 1);\n          i0.ɵɵelementStart(1, \"div\", 2, 0);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"div\", 3);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldNotchedOutline, [{\n    type: Component,\n    args: [{\n      selector: 'div[matFormFieldNotchedOutline]',\n      host: {\n        'class': 'mdc-notched-outline',\n        // Besides updating the notch state through the MDC component, we toggle this class through\n        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n        '[class.mdc-notched-outline--notched]': 'open'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<div class=\\\"mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mdc-notched-outline__trailing\\\"></div>\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    open: [{\n      type: Input,\n      args: ['matFormFieldNotchedOutlineOpen']\n    }],\n    _notch: [{\n      type: ViewChild,\n      args: ['notch']\n    }]\n  });\n})();\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n  // TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), transition('void => enter', [style({\n    opacity: 0,\n    transform: 'translateY(-5px)'\n  }), animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n  static {\n    this.ɵfac = function MatFormFieldControl_Factory(t) {\n      return new (t || MatFormFieldControl)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldControl\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldControl, [{\n    type: Directive\n  }], null, null);\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n  /** Whether the required marker should be hidden. */\n  get hideRequiredMarker() {\n    return this._hideRequiredMarker;\n  }\n  set hideRequiredMarker(value) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  /** Whether the label should always float or float as the user types. */\n  get floatLabel() {\n    return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n  }\n  set floatLabel(value) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value;\n      // For backwards compatibility. Custom form field controls or directives might set\n      // the \"floatLabel\" input and expect the form field view to be updated automatically.\n      // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n      // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** The form field appearance style. */\n  get appearance() {\n    return this._appearance;\n  }\n  set appearance(value) {\n    const oldValue = this._appearance;\n    const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n        throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n      }\n    }\n    this._appearance = newAppearance;\n    if (this._appearance === 'outline' && this._appearance !== oldValue) {\n      // If the appearance has been switched to `outline`, the label offset needs to be updated.\n      // The update can happen once the view has been re-checked, but not immediately because\n      // the view has not been updated and the notched-outline floating label is not present.\n      this._needsOutlineLabelOffsetUpdateOnStable = true;\n    }\n  }\n  /**\n   * Whether the form field should reserve space for one line of hint/error text (default)\n   * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n   * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n   */\n  get subscriptSizing() {\n    return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  set subscriptSizing(value) {\n    this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  /** Text for the form field hint. */\n  get hintLabel() {\n    return this._hintLabel;\n  }\n  set hintLabel(value) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  /** Gets the current form field control */\n  get _control() {\n    return this._explicitFormFieldControl || this._formFieldControl;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  constructor(_elementRef, _changeDetectorRef, _ngZone, _dir, _platform, _defaults, _animationMode,\n  /**\n   * @deprecated not needed, to be removed.\n   * @breaking-change 17.0.0 remove this param\n   */\n  _unusedDocument) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._dir = _dir;\n    this._platform = _platform;\n    this._defaults = _defaults;\n    this._animationMode = _animationMode;\n    this._hideRequiredMarker = false;\n    /** The color palette for the form field. */\n    this.color = 'primary';\n    this._appearance = DEFAULT_APPEARANCE;\n    this._subscriptSizing = null;\n    this._hintLabel = '';\n    this._hasIconPrefix = false;\n    this._hasTextPrefix = false;\n    this._hasIconSuffix = false;\n    this._hasTextSuffix = false;\n    // Unique id for the internal form field label.\n    this._labelId = `mat-mdc-form-field-label-${nextUniqueId++}`;\n    // Unique id for the hint label.\n    this._hintLabelId = `mat-mdc-hint-${nextUniqueId++}`;\n    /** State of the mat-hint and mat-error animations. */\n    this._subscriptAnimationState = '';\n    this._destroyed = new Subject();\n    this._isFocused = null;\n    this._needsOutlineLabelOffsetUpdateOnStable = false;\n    if (_defaults) {\n      if (_defaults.appearance) {\n        this.appearance = _defaults.appearance;\n      }\n      this._hideRequiredMarker = Boolean(_defaults?.hideRequiredMarker);\n      if (_defaults.color) {\n        this.color = _defaults.color;\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // Initial focus state sync. This happens rarely, but we want to account for\n    // it in case the form field control has \"focused\" set to true on init.\n    this._updateFocusState();\n    // Enable animations now. This ensures we don't animate on initial render.\n    this._subscriptAnimationState = 'enter';\n    // Because the above changes a value used in the template after it was checked, we need\n    // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n    this._changeDetectorRef.detectChanges();\n  }\n  ngAfterContentInit() {\n    this._assertFormFieldControl();\n    this._initializeControl();\n    this._initializeSubscript();\n    this._initializePrefixAndSuffix();\n    this._initializeOutlineLabelOffsetSubscriptions();\n  }\n  ngAfterContentChecked() {\n    this._assertFormFieldControl();\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Gets the id of the label element. If no label is present, returns `null`.\n   */\n  getLabelId() {\n    return this._hasFloatingLabel() ? this._labelId : null;\n  }\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form field\n   * should be positioned relative to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._textField || this._elementRef;\n  }\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel() {\n    // This is for backwards compatibility only. Consumers of the form field might use\n    // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n    // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n    // animation. This is different in MDC where the label always animates, so this method\n    // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n    // the floating label state without animations. The non-MDC implementation was inconsistent\n    // because it always animates if \"floatLabel\" is set away from \"always\".\n    // TODO(devversion): consider removing this method when releasing the MDC form field.\n    if (this._hasFloatingLabel()) {\n      this.floatLabel = 'always';\n    }\n  }\n  /** Initializes the registered form field control. */\n  _initializeControl() {\n    const control = this._control;\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-mdc-form-field-type-${control.controlType}`);\n    }\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.subscribe(() => {\n      this._updateFocusState();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n  }\n  _checkPrefixAndSuffixTypes() {\n    this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n    this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n    this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n    this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n  }\n  /** Initializes the prefix and suffix containers. */\n  _initializePrefixAndSuffix() {\n    this._checkPrefixAndSuffixTypes();\n    // Mark the form field as dirty whenever the prefix or suffix children change. This\n    // is necessary because we conditionally display the prefix/suffix containers based\n    // on whether there is projected content.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._checkPrefixAndSuffixTypes();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n   * with the custom form field control. Also subscribes to hint and error changes in order\n   * to be able to validate and synchronize ids on change.\n   */\n  _initializeSubscript() {\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Initial mat-hint validation and subscript describedByIds sync.\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /** Throws an error if the form field's control is missing. */\n  _assertFormFieldControl() {\n    if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n  _updateFocusState() {\n    // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n    // certain DOM events are emitted. This is not possible in our implementation of the\n    // form field because we support abstract form field controls which are not necessarily\n    // of type input, nor do we have a reference to a native form field control element. Instead\n    // we handle the focus by checking if the abstract form field control focused state changes.\n    if (this._control.focused && !this._isFocused) {\n      this._isFocused = true;\n      this._lineRipple?.activate();\n    } else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n      this._isFocused = false;\n      this._lineRipple?.deactivate();\n    }\n    this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n  }\n  /**\n   * The floating label in the docked state needs to account for prefixes. The horizontal offset\n   * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n   * form field is added to the DOM. This method sets up all subscriptions which are needed to\n   * trigger the label offset update. In general, we want to avoid performing measurements often,\n   * so we rely on the `NgZone` as indicator when the offset should be recalculated, instead of\n   * checking every change detection cycle.\n   */\n  _initializeOutlineLabelOffsetSubscriptions() {\n    // Whenever the prefix changes, schedule an update of the label offset.\n    this._prefixChildren.changes.subscribe(() => this._needsOutlineLabelOffsetUpdateOnStable = true);\n    // Note that we have to run outside of the `NgZone` explicitly, in order to avoid\n    // throwing users into an infinite loop if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._needsOutlineLabelOffsetUpdateOnStable) {\n          this._needsOutlineLabelOffsetUpdateOnStable = false;\n          this._updateOutlineLabelOffset();\n        }\n      });\n    });\n    this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._needsOutlineLabelOffsetUpdateOnStable = true);\n  }\n  /** Whether the floating label should always float or not. */\n  _shouldAlwaysFloat() {\n    return this.floatLabel === 'always';\n  }\n  _hasOutline() {\n    return this.appearance === 'outline';\n  }\n  /**\n   * Whether the label should display in the infix. Labels in the outline appearance are\n   * displayed as part of the notched-outline and are horizontally offset to account for\n   * form field prefix content. This won't work in server side rendering since we cannot\n   * measure the width of the prefix container. To make the docked label appear as if the\n   * right offset has been calculated, we forcibly render the label inside the infix. Since\n   * the label is part of the infix, the label cannot overflow the prefix content.\n   */\n  _forceDisplayInfixLabel() {\n    return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n  }\n  _hasFloatingLabel() {\n    return !!this._labelChildNonStatic || !!this._labelChildStatic;\n  }\n  _shouldLabelFloat() {\n    return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n  }\n  /**\n   * Determines whether a class from the AbstractControlDirective\n   * should be forwarded to the host element.\n   */\n  _shouldForward(prop) {\n    const control = this._control ? this._control.ngControl : null;\n    return control && control[prop];\n  }\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages() {\n    return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n  /** Handle label resize events. */\n  _handleLabelResized() {\n    this._refreshOutlineNotchWidth();\n  }\n  /** Refreshes the width of the outline-notch, if present. */\n  _refreshOutlineNotchWidth() {\n    if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n      this._notchedOutline?._setNotchWidth(0);\n    } else {\n      this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n    }\n  }\n  /** Does any extra processing that is required when handling the hints. */\n  _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /**\n   * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n   * label specified set through the input is being considered as \"start\" aligned.\n   *\n   * This method is a noop if Angular runs in production mode.\n   */\n  _validateHints() {\n    if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      let startHint;\n      let endHint;\n      this._hintChildren.forEach(hint => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  _syncDescribedByIds() {\n    if (this._control) {\n      let ids = [];\n      // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n      if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n        ids.push(...this._control.userAriaDescribedBy.split(' '));\n      }\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids.push(...this._errorChildren.map(error => error.id));\n      }\n      this._control.setDescribedByIds(ids);\n    }\n  }\n  /**\n   * Updates the horizontal offset of the label in the outline appearance. In the outline\n   * appearance, the notched-outline and label are not relative to the infix container because\n   * the outline intends to surround prefixes, suffixes and the infix. This means that the\n   * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n   * horizontally offset the label by the width of the prefix container. The MDC text-field does\n   * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n   * incorporate the horizontal offset into their default text-field styles.\n   */\n  _updateOutlineLabelOffset() {\n    if (!this._platform.isBrowser || !this._hasOutline() || !this._floatingLabel) {\n      return;\n    }\n    const floatingLabel = this._floatingLabel.element;\n    // If no prefix is displayed, reset the outline label offset from potential\n    // previous label offset updates.\n    if (!(this._iconPrefixContainer || this._textPrefixContainer)) {\n      floatingLabel.style.transform = '';\n      return;\n    }\n    // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n    // the label offset update until the zone stabilizes.\n    if (!this._isAttachedToDom()) {\n      this._needsOutlineLabelOffsetUpdateOnStable = true;\n      return;\n    }\n    const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n    const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n    const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n    const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n    // If the directionality is RTL, the x-axis transform needs to be inverted. This\n    // is because `transformX` does not change based on the page directionality.\n    const negate = this._dir.value === 'rtl' ? '-1' : '1';\n    const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n    const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n    const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n    // Update the translateX of the floating label to account for the prefix container,\n    // but allow the CSS to override this setting via a CSS variable when the label is\n    // floating.\n    floatingLabel.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        ${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset})\n    )`;\n  }\n  /** Checks whether the form field is attached to the DOM. */\n  _isAttachedToDom() {\n    const element = this._elementRef.nativeElement;\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement.contains(element);\n  }\n  static {\n    this.ɵfac = function MatFormField_Factory(t) {\n      return new (t || MatFormField)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.Directionality), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFormField,\n      selectors: [[\"mat-form-field\"]],\n      contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n          i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        }\n      },\n      viewQuery: function MatFormField_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n          i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n          i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-form-field\"],\n      hostVars: 42,\n      hostBindings: function MatFormField_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-no-animations\", ctx._animationMode === \"NoopAnimations\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-focused\", ctx._control.focused)(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n        }\n      },\n      inputs: {\n        hideRequiredMarker: \"hideRequiredMarker\",\n        color: \"color\",\n        floatLabel: \"floatLabel\",\n        appearance: \"appearance\",\n        subscriptSizing: \"subscriptSizing\",\n        hintLabel: \"hintLabel\"\n      },\n      exportAs: [\"matFormField\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }, {\n        provide: FLOATING_LABEL_PARENT,\n        useExisting: MatFormField\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c7,\n      decls: 18,\n      vars: 21,\n      consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [1, \"mat-mdc-form-field-error-wrapper\"], [1, \"mat-mdc-form-field-hint-wrapper\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n      template: function MatFormField_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c6);\n          i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(2, \"div\", 4, 1);\n          i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n          });\n          i0.ɵɵtemplate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 5);\n          i0.ɵɵelementStart(5, \"div\", 6);\n          i0.ɵɵtemplate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 7)(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 8)(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 9);\n          i0.ɵɵelementStart(9, \"div\", 10);\n          i0.ɵɵtemplate(10, MatFormField_Conditional_10_Template, 1, 1, null, 11);\n          i0.ɵɵprojection(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, MatFormField_Conditional_12_Template, 2, 0, \"div\", 12)(13, MatFormField_Conditional_13_Template, 2, 0, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 15);\n          i0.ɵɵtemplate(16, MatFormField_Case_16_Template, 2, 1)(17, MatFormField_Case_17_Template, 5, 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_16_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(4, !ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(6, ctx._hasOutline() ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(7, ctx._hasIconPrefix ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(8, ctx._hasTextPrefix ? 8 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(10, !ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(12, ctx._hasTextSuffix ? 12 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(13, ctx._hasIconSuffix ? 13 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(14, !ctx._hasOutline() ? 14 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(16, (tmp_16_0 = ctx._getDisplayedMessages()) === \"error\" ? 16 : tmp_16_0 === \"hint\" ? 17 : -1);\n        }\n      },\n      dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n      styles: [\".mdc-text-field{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px,var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px,var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px,var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px,var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px,var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:\\\"\\\";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 64px/0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 64px/0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 96px/0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;pointer-events:none}.mdc-notched-outline__trailing{flex-grow:1}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{border-top:1px solid;border-bottom:1px solid}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{max-width:calc(100% - 12px*2)}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-text-field--filled{border-top-left-radius:var(--mdc-filled-text-field-container-shape);border-top-right-radius:var(--mdc-filled-text-field-container-shape);border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-caret-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-focus-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-hover-label-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-focus-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-hover-label-text-color)}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font);font-size:var(--mdc-filled-text-field-label-text-size);font-weight:var(--mdc-filled-text-field-label-text-weight);letter-spacing:var(--mdc-filled-text-field-label-text-tracking)}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color)}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color)}.mdc-text-field--filled .mdc-line-ripple::before{border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-caret-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-focus-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-hover-label-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-focus-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-hover-label-text-color)}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font);font-size:var(--mdc-outlined-text-field-label-text-size);font-weight:var(--mdc-outlined-text-field-label-text-weight);letter-spacing:var(--mdc-outlined-text-field-label-text-tracking)}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(.75*var(--mdc-outlined-text-field-label-text-size))}.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mdc-outlined-text-field-label-text-size)}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px,var(--mdc-outlined-text-field-container-shape))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px,var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-hover-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-focus-outline-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-hover-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-focus-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height);padding-top:var(--mat-form-field-filled-with-label-container-padding-top);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding);padding-bottom:var(--mat-form-field-container-vertical-padding)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color)}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font);line-height:var(--mat-form-field-subscript-text-line-height);font-size:var(--mat-form-field-subscript-text-size);letter-spacing:var(--mat-form-field-subscript-text-tracking);font-weight:var(--mat-form-field-subscript-text-weight)}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color)}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity)}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color)}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color)}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font);line-height:var(--mat-form-field-container-text-line-height);font-size:var(--mat-form-field-container-text-size);letter-spacing:var(--mat-form-field-container-text-tracking);font-weight:var(--mat-form-field-container-text-weight)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color)}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color)}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color)}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color)}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color)}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color)}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color)}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matFormFieldAnimations.transitionMessages]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      animations: [matFormFieldAnimations.transitionMessages],\n      host: {\n        'class': 'mat-mdc-form-field',\n        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n        // Note that these classes reuse the same names as the non-MDC version, because they can be\n        // considered a public API since custom form controls may use them to style themselves.\n        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-form-field-no-animations]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n        '[class.mat-focused]': '_control.focused',\n        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }, {\n        provide: FLOATING_LABEL_PARENT,\n        useExisting: MatFormField\n      }],\n      standalone: true,\n      imports: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n      template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label matFormFieldFloatingLabel\\n           [floating]=\\\"_shouldLabelFloat()\\\"\\n           [monitorResize]=\\\"_hasOutline()\\\"\\n           [id]=\\\"_labelId\\\"\\n           [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\">\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n       @if (!hideRequiredMarker && _control.required) {\\n         <span\\n           aria-hidden=\\\"true\\\"\\n           class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"></span>\\n       }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\" #textField\\n     [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n     [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n     [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n     [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n     [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n     (click)=\\\"_control.onContainerClick($event)\\\">\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\">\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\">\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n     [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\">\\n\\n  @switch (_getDisplayedMessages()) {\\n    @case ('error') {\\n      <div class=\\\"mat-mdc-form-field-error-wrapper\\\"\\n           [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @case ('hint') {\\n      <div class=\\\"mat-mdc-form-field-hint-wrapper\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      </div>\\n    }\\n  }\\n</div>\\n\",\n      styles: [\".mdc-text-field{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px,var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px,var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px,var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px,var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px,var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px,calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:\\\"\\\";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 64px/0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 64px/0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 96px/0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;pointer-events:none}.mdc-notched-outline__trailing{flex-grow:1}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{border-top:1px solid;border-bottom:1px solid}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{max-width:calc(100% - 12px*2)}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-text-field--filled{border-top-left-radius:var(--mdc-filled-text-field-container-shape);border-top-right-radius:var(--mdc-filled-text-field-container-shape);border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-caret-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-focus-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-hover-label-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-focus-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-hover-label-text-color)}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font);font-size:var(--mdc-filled-text-field-label-text-size);font-weight:var(--mdc-filled-text-field-label-text-weight);letter-spacing:var(--mdc-filled-text-field-label-text-tracking)}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color)}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color)}.mdc-text-field--filled .mdc-line-ripple::before{border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-caret-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-focus-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-hover-label-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-focus-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-hover-label-text-color)}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font);font-size:var(--mdc-outlined-text-field-label-text-size);font-weight:var(--mdc-outlined-text-field-label-text-weight);letter-spacing:var(--mdc-outlined-text-field-label-text-tracking)}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(.75*var(--mdc-outlined-text-field-label-text-size))}.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mdc-outlined-text-field-label-text-size)}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px,var(--mdc-outlined-text-field-container-shape))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px,var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px,calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-hover-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-focus-outline-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-hover-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-focus-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height);padding-top:var(--mat-form-field-filled-with-label-container-padding-top);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding);padding-bottom:var(--mat-form-field-container-vertical-padding)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color)}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font);line-height:var(--mat-form-field-subscript-text-line-height);font-size:var(--mat-form-field-subscript-text-size);letter-spacing:var(--mat-form-field-subscript-text-tracking);font-weight:var(--mat-form-field-subscript-text-weight)}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color)}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity)}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color)}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color)}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font);line-height:var(--mat-form-field-container-text-line-height);font-size:var(--mat-form-field-container-text-size);letter-spacing:var(--mat-form-field-container-text-tracking);font-weight:var(--mat-form-field-container-text-weight)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color)}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color)}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color)}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color)}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color)}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color)}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color)}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.Directionality\n  }, {\n    type: i2.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    _textField: [{\n      type: ViewChild,\n      args: ['textField']\n    }],\n    _iconPrefixContainer: [{\n      type: ViewChild,\n      args: ['iconPrefixContainer']\n    }],\n    _textPrefixContainer: [{\n      type: ViewChild,\n      args: ['textPrefixContainer']\n    }],\n    _floatingLabel: [{\n      type: ViewChild,\n      args: [MatFormFieldFloatingLabel]\n    }],\n    _notchedOutline: [{\n      type: ViewChild,\n      args: [MatFormFieldNotchedOutline]\n    }],\n    _lineRipple: [{\n      type: ViewChild,\n      args: [MatFormFieldLineRipple]\n    }],\n    _labelChildNonStatic: [{\n      type: ContentChild,\n      args: [MatLabel]\n    }],\n    _labelChildStatic: [{\n      type: ContentChild,\n      args: [MatLabel, {\n        static: true\n      }]\n    }],\n    _formFieldControl: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MAT_PREFIX, {\n        descendants: true\n      }]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MAT_SUFFIX, {\n        descendants: true\n      }]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MAT_ERROR, {\n        descendants: true\n      }]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [MatHint, {\n        descendants: true\n      }]\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    subscriptSizing: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }]\n  });\n})();\nclass MatFormFieldModule {\n  static {\n    this.ɵfac = function MatFormFieldModule_Factory(t) {\n      return new (t || MatFormFieldModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatFormFieldModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CommonModule, ObserversModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, ObserversModule, MatFormField, MatLabel, MatError, MatHint, MatPrefix, MatSuffix],\n      exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nconst _c0 = [\"*\"];\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n  if (policy === undefined) {\n    policy = null;\n    if (typeof window !== 'undefined') {\n      const ttWindow = window;\n      if (ttWindow.trustedTypes !== undefined) {\n        policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n          createHTML: s => s\n        });\n      }\n    }\n  }\n  return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n  return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n  return Error('Could not find HttpClient provider for use with Angular Material icons. ' + 'Please include the HttpClientModule from @angular/common/http in your ' + 'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n  return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` + `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n  return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` + `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n  constructor(url, svgText, options) {\n    this.url = url;\n    this.svgText = svgText;\n    this.options = options;\n  }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n  constructor(_httpClient, _sanitizer, document, _errorHandler) {\n    this._httpClient = _httpClient;\n    this._sanitizer = _sanitizer;\n    this._errorHandler = _errorHandler;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     */\n    this._svgIconConfigs = new Map();\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     */\n    this._iconSetConfigs = new Map();\n    /** Cache for icons loaded by direct URLs. */\n    this._cachedIconsByUrl = new Map();\n    /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n    this._inProgressUrlFetches = new Map();\n    /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n    this._fontCssClassesByAlias = new Map();\n    /** Registered icon resolver functions. */\n    this._resolvers = [];\n    /**\n     * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n     * specified. The default 'material-icons' value assumes that the material icon font has been\n     * loaded as described at https://google.github.io/material-design-icons/#icon-font-for-the-web\n     */\n    this._defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n    this._document = document;\n  }\n  /**\n   * Registers an icon by URL in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIcon(iconName, url, options) {\n    return this.addSvgIconInNamespace('', iconName, url, options);\n  }\n  /**\n   * Registers an icon using an HTML string in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteral(iconName, literal, options) {\n    return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n  }\n  /**\n   * Registers an icon by URL in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIconInNamespace(namespace, iconName, url, options) {\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n  }\n  /**\n   * Registers an icon resolver function with the registry. The function will be invoked with the\n   * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n   * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n   * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n   * will be invoked in the order in which they have been registered.\n   * @param resolver Resolver function to be registered.\n   */\n  addSvgIconResolver(resolver) {\n    this._resolvers.push(resolver);\n    return this;\n  }\n  /**\n   * Registers an icon using an HTML string in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n    const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n    // TODO: add an ngDevMode check\n    if (!cleanLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n    // Security: The literal is passed in as SafeHtml, and is thus trusted.\n    const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n  }\n  /**\n   * Registers an icon set by URL in the default namespace.\n   * @param url\n   */\n  addSvgIconSet(url, options) {\n    return this.addSvgIconSetInNamespace('', url, options);\n  }\n  /**\n   * Registers an icon set using an HTML string in the default namespace.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteral(literal, options) {\n    return this.addSvgIconSetLiteralInNamespace('', literal, options);\n  }\n  /**\n   * Registers an icon set by URL in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param url\n   */\n  addSvgIconSetInNamespace(namespace, url, options) {\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n  }\n  /**\n   * Registers an icon set using an HTML string in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n    const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n    if (!cleanLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n    // Security: The literal is passed in as SafeHtml, and is thus trusted.\n    const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n  }\n  /**\n   * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n   * component with the alias as the fontSet input will cause the class name to be applied\n   * to the `<mat-icon>` element.\n   *\n   * If the registered font is a ligature font, then don't forget to also include the special\n   * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n   *\n   * ```ts\n   * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n   * ```\n   *\n   * And use like this:\n   *\n   * ```html\n   * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n   * ```\n   *\n   * @param alias Alias for the font.\n   * @param classNames Class names override to be used instead of the alias.\n   */\n  registerFontClassAlias(alias, classNames = alias) {\n    this._fontCssClassesByAlias.set(alias, classNames);\n    return this;\n  }\n  /**\n   * Returns the CSS class name associated with the alias by a previous call to\n   * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n   */\n  classNameForFontAlias(alias) {\n    return this._fontCssClassesByAlias.get(alias) || alias;\n  }\n  /**\n   * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   */\n  setDefaultFontSetClass(...classNames) {\n    this._defaultFontSetClass = classNames;\n    return this;\n  }\n  /**\n   * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   */\n  getDefaultFontSetClass() {\n    return this._defaultFontSetClass;\n  }\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\n   * it will not contain any modifications made to elements previously returned).\n   *\n   * @param safeUrl URL from which to fetch the SVG icon.\n   */\n  getSvgIconFromUrl(safeUrl) {\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n    const cachedIcon = this._cachedIconsByUrl.get(url);\n    if (cachedIcon) {\n      return of(cloneSvg(cachedIcon));\n    }\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n  }\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n   * if not, the Observable will throw an error.\n   *\n   * @param name Name of the icon to be retrieved.\n   * @param namespace Namespace in which to look for the icon.\n   */\n  getNamedSvgIcon(name, namespace = '') {\n    const key = iconKey(namespace, name);\n    let config = this._svgIconConfigs.get(key);\n    // Return (copy of) cached icon if possible.\n    if (config) {\n      return this._getSvgFromConfig(config);\n    }\n    // Otherwise try to resolve the config from one of the resolver functions.\n    config = this._getIconConfigFromResolvers(namespace, name);\n    if (config) {\n      this._svgIconConfigs.set(key, config);\n      return this._getSvgFromConfig(config);\n    }\n    // See if we have any icon sets registered for the namespace.\n    const iconSetConfigs = this._iconSetConfigs.get(namespace);\n    if (iconSetConfigs) {\n      return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n    }\n    return throwError(getMatIconNameNotFoundError(key));\n  }\n  ngOnDestroy() {\n    this._resolvers = [];\n    this._svgIconConfigs.clear();\n    this._iconSetConfigs.clear();\n    this._cachedIconsByUrl.clear();\n  }\n  /**\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n   */\n  _getSvgFromConfig(config) {\n    if (config.svgText) {\n      // We already have the SVG element for this icon, return a copy.\n      return of(cloneSvg(this._svgElementFromConfig(config)));\n    } else {\n      // Fetch the icon from the config's URL, cache it, and return a copy.\n      return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n    }\n  }\n  /**\n   * Attempts to find an icon with the specified name in any of the SVG icon sets.\n   * First searches the available cached icons for a nested element with a matching name, and\n   * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n   * that have not been cached, and searches again after all fetches are completed.\n   * The returned Observable produces the SVG element if possible, and throws\n   * an error if no icon with the specified name can be found.\n   */\n  _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n    // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n    // requested name.\n    const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n    if (namedIcon) {\n      // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n      // time anyway, there's probably not much advantage compared to just always extracting\n      // it from the icon set.\n      return of(namedIcon);\n    }\n    // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n    // fetched, fetch them now and look for iconName in the results.\n    const iconSetFetchRequests = iconSetConfigs.filter(iconSetConfig => !iconSetConfig.svgText).map(iconSetConfig => {\n      return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError(err => {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n        // Swallow errors fetching individual URLs so the\n        // combined Observable won't necessarily fail.\n        const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n        this._errorHandler.handleError(new Error(errorMessage));\n        return of(null);\n      }));\n    });\n    // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n    // cached SVG element (unless the request failed), and we can check again for the icon.\n    return forkJoin(iconSetFetchRequests).pipe(map(() => {\n      const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n      // TODO: add an ngDevMode check\n      if (!foundIcon) {\n        throw getMatIconNameNotFoundError(name);\n      }\n      return foundIcon;\n    }));\n  }\n  /**\n   * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n    // Iterate backwards, so icon sets added later have precedence.\n    for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n      const config = iconSetConfigs[i];\n      // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n      // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n      // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n      // some of the parsing.\n      if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n        const svg = this._svgElementFromConfig(config);\n        const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n        if (foundIcon) {\n          return foundIcon;\n        }\n      }\n    }\n    return null;\n  }\n  /**\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n   * from it.\n   */\n  _loadSvgIconFromConfig(config) {\n    return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n  }\n  /**\n   * Loads the content of the icon set URL specified in the\n   * SvgIconConfig and attaches it to the config.\n   */\n  _loadSvgIconSetFromConfig(config) {\n    if (config.svgText) {\n      return of(null);\n    }\n    return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n  }\n  /**\n   * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  _extractSvgIconFromSet(iconSet, iconName, options) {\n    // Use the `id=\"iconName\"` syntax in order to escape special\n    // characters in the ID (versus using the #iconName syntax).\n    const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n    if (!iconSource) {\n      return null;\n    }\n    // Clone the element and remove the ID to prevent multiple elements from being added\n    // to the page with the same ID.\n    const iconElement = iconSource.cloneNode(true);\n    iconElement.removeAttribute('id');\n    // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n    // the content of a new <svg> node.\n    if (iconElement.nodeName.toLowerCase() === 'svg') {\n      return this._setSvgAttributes(iconElement, options);\n    }\n    // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n    // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n    // tag is problematic on Firefox, because it needs to include the current page path.\n    if (iconElement.nodeName.toLowerCase() === 'symbol') {\n      return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n    }\n    // createElement('SVG') doesn't work as expected; the DOM ends up with\n    // the correct nodes, but the SVG content doesn't render. Instead we\n    // have to create an empty SVG node using innerHTML and append its content.\n    // Elements created using DOMParser.parseFromString have the same problem.\n    // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n    const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n    // Clone the node so we don't remove it from the parent icon set element.\n    svg.appendChild(iconElement);\n    return this._setSvgAttributes(svg, options);\n  }\n  /**\n   * Creates a DOM element from the given SVG string.\n   */\n  _svgElementFromString(str) {\n    const div = this._document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg');\n    // TODO: add an ngDevMode check\n    if (!svg) {\n      throw Error('<svg> tag not found');\n    }\n    return svg;\n  }\n  /**\n   * Converts an element into an SVG node by cloning all of its children.\n   */\n  _toSvgElement(element) {\n    const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n    const attributes = element.attributes;\n    // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n    for (let i = 0; i < attributes.length; i++) {\n      const {\n        name,\n        value\n      } = attributes[i];\n      if (name !== 'id') {\n        svg.setAttribute(name, value);\n      }\n    }\n    for (let i = 0; i < element.childNodes.length; i++) {\n      if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n        svg.appendChild(element.childNodes[i].cloneNode(true));\n      }\n    }\n    return svg;\n  }\n  /**\n   * Sets the default attributes for an SVG element to be used as an icon.\n   */\n  _setSvgAttributes(svg, options) {\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n    if (options && options.viewBox) {\n      svg.setAttribute('viewBox', options.viewBox);\n    }\n    return svg;\n  }\n  /**\n   * Returns an Observable which produces the string contents of the given icon. Results may be\n   * cached, so future calls with the same URL may not cause another HTTP request.\n   */\n  _fetchIcon(iconConfig) {\n    const {\n      url: safeUrl,\n      options\n    } = iconConfig;\n    const withCredentials = options?.withCredentials ?? false;\n    if (!this._httpClient) {\n      throw getMatIconNoHttpProviderError();\n    }\n    // TODO: add an ngDevMode check\n    if (safeUrl == null) {\n      throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n    }\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n    // TODO: add an ngDevMode check\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n    // already a request in progress for that URL. It's necessary to call share() on the\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n    const req = this._httpClient.get(url, {\n      responseType: 'text',\n      withCredentials\n    }).pipe(map(svg => {\n      // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n      // trusted HTML.\n      return trustedHTMLFromString(svg);\n    }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n    this._inProgressUrlFetches.set(url, req);\n    return req;\n  }\n  /**\n   * Registers an icon config by name in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param iconName Name under which to register the config.\n   * @param config Config to be registered.\n   */\n  _addSvgIconConfig(namespace, iconName, config) {\n    this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n    return this;\n  }\n  /**\n   * Registers an icon set config in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param config Config to be registered.\n   */\n  _addSvgIconSetConfig(namespace, config) {\n    const configNamespace = this._iconSetConfigs.get(namespace);\n    if (configNamespace) {\n      configNamespace.push(config);\n    } else {\n      this._iconSetConfigs.set(namespace, [config]);\n    }\n    return this;\n  }\n  /** Parses a config's text into an SVG element. */\n  _svgElementFromConfig(config) {\n    if (!config.svgElement) {\n      const svg = this._svgElementFromString(config.svgText);\n      this._setSvgAttributes(svg, config.options);\n      config.svgElement = svg;\n    }\n    return config.svgElement;\n  }\n  /** Tries to create an icon config through the registered resolver functions. */\n  _getIconConfigFromResolvers(namespace, name) {\n    for (let i = 0; i < this._resolvers.length; i++) {\n      const result = this._resolvers[i](name, namespace);\n      if (result) {\n        return isSafeUrlWithOptions(result) ? new SvgIconConfig(result.url, null, result.options) : new SvgIconConfig(result, null);\n      }\n    }\n    return undefined;\n  }\n  static {\n    this.ɵfac = function MatIconRegistry_Factory(t) {\n      return new (t || MatIconRegistry)(i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(i0.ErrorHandler));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatIconRegistry,\n      factory: MatIconRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatIconRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.HttpClient,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.DomSanitizer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.ErrorHandler\n  }], null);\n})();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n  provide: MatIconRegistry,\n  deps: [[new Optional(), new SkipSelf(), MatIconRegistry], [new Optional(), HttpClient], DomSanitizer, ErrorHandler, [new Optional(), DOCUMENT]],\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n  return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n  return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n  return !!(value.url && value.options);\n}\n\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n  providedIn: 'root',\n  factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = ['clip-path', 'color-profile', 'src', 'cursor', 'fill', 'filter', 'marker', 'marker-start', 'marker-mid', 'marker-end', 'mask', 'stroke'];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon {\n  /** Theme palette color of the icon. */\n  get color() {\n    return this._color || this._defaultColor;\n  }\n  set color(value) {\n    this._color = value;\n  }\n  /** Name of the icon in the SVG icon set. */\n  get svgIcon() {\n    return this._svgIcon;\n  }\n  set svgIcon(value) {\n    if (value !== this._svgIcon) {\n      if (value) {\n        this._updateSvgIcon(value);\n      } else if (this._svgIcon) {\n        this._clearSvgElement();\n      }\n      this._svgIcon = value;\n    }\n  }\n  /** Font set that the icon is a part of. */\n  get fontSet() {\n    return this._fontSet;\n  }\n  set fontSet(value) {\n    const newValue = this._cleanupFontValue(value);\n    if (newValue !== this._fontSet) {\n      this._fontSet = newValue;\n      this._updateFontIconClasses();\n    }\n  }\n  /** Name of an icon within a font set. */\n  get fontIcon() {\n    return this._fontIcon;\n  }\n  set fontIcon(value) {\n    const newValue = this._cleanupFontValue(value);\n    if (newValue !== this._fontIcon) {\n      this._fontIcon = newValue;\n      this._updateFontIconClasses();\n    }\n  }\n  constructor(_elementRef, _iconRegistry, ariaHidden, _location, _errorHandler, defaults) {\n    this._elementRef = _elementRef;\n    this._iconRegistry = _iconRegistry;\n    this._location = _location;\n    this._errorHandler = _errorHandler;\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    this.inline = false;\n    this._previousFontSetClass = [];\n    /** Subscription to the current in-progress SVG icon request. */\n    this._currentIconFetch = Subscription.EMPTY;\n    if (defaults) {\n      if (defaults.color) {\n        this.color = this._defaultColor = defaults.color;\n      }\n      if (defaults.fontSet) {\n        this.fontSet = defaults.fontSet;\n      }\n    }\n    // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n    // the right thing to do for the majority of icon use-cases.\n    if (!ariaHidden) {\n      _elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\n   * Splits an svgIcon binding value into its icon set and icon name components.\n   * Returns a 2-element array of [(icon set), (icon name)].\n   * The separator for the two fields is ':'. If there is no separator, an empty\n   * string is returned for the icon set and the entire value is returned for\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\n   * Throws an error if the name contains two or more ':' separators.\n   * Examples:\n   *   `'social:cake' -> ['social', 'cake']\n   *   'penguin' -> ['', 'penguin']\n   *   null -> ['', '']\n   *   'a:b:c' -> (throws Error)`\n   */\n  _splitIconName(iconName) {\n    if (!iconName) {\n      return ['', ''];\n    }\n    const parts = iconName.split(':');\n    switch (parts.length) {\n      case 1:\n        return ['', parts[0]];\n      // Use default namespace.\n      case 2:\n        return parts;\n      default:\n        throw Error(`Invalid icon name: \"${iconName}\"`);\n      // TODO: add an ngDevMode check\n    }\n  }\n  ngOnInit() {\n    // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n    // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n    this._updateFontIconClasses();\n  }\n  ngAfterViewChecked() {\n    const cachedElements = this._elementsWithExternalReferences;\n    if (cachedElements && cachedElements.size) {\n      const newPath = this._location.getPathname();\n      // We need to check whether the URL has changed on each change detection since\n      // the browser doesn't have an API that will let us react on link clicks and\n      // we can't depend on the Angular router. The references need to be updated,\n      // because while most browsers don't care whether the URL is correct after\n      // the first render, Safari will break if the user navigates to a different\n      // page and the SVG isn't re-rendered.\n      if (newPath !== this._previousPath) {\n        this._previousPath = newPath;\n        this._prependPathToReferences(newPath);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._currentIconFetch.unsubscribe();\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n  }\n  _usingFontIcon() {\n    return !this.svgIcon;\n  }\n  _setSvgElement(svg) {\n    this._clearSvgElement();\n    // Note: we do this fix here, rather than the icon registry, because the\n    // references have to point to the URL at the time that the icon was created.\n    const path = this._location.getPathname();\n    this._previousPath = path;\n    this._cacheChildrenWithExternalReferences(svg);\n    this._prependPathToReferences(path);\n    this._elementRef.nativeElement.appendChild(svg);\n  }\n  _clearSvgElement() {\n    const layoutElement = this._elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n    // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n    // we can't use innerHTML, because IE will throw if the element has a data binding.\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n      // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n      // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n        child.remove();\n      }\n    }\n  }\n  _updateFontIconClasses() {\n    if (!this._usingFontIcon()) {\n      return;\n    }\n    const elem = this._elementRef.nativeElement;\n    const fontSetClasses = (this.fontSet ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/) : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n    this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n    fontSetClasses.forEach(className => elem.classList.add(className));\n    this._previousFontSetClass = fontSetClasses;\n    if (this.fontIcon !== this._previousFontIconClass && !fontSetClasses.includes('mat-ligature-font')) {\n      if (this._previousFontIconClass) {\n        elem.classList.remove(this._previousFontIconClass);\n      }\n      if (this.fontIcon) {\n        elem.classList.add(this.fontIcon);\n      }\n      this._previousFontIconClass = this.fontIcon;\n    }\n  }\n  /**\n   * Cleans up a value to be used as a fontIcon or fontSet.\n   * Since the value ends up being assigned as a CSS class, we\n   * have to trim the value and omit space-separated values.\n   */\n  _cleanupFontValue(value) {\n    return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n  }\n  /**\n   * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n   * reference. This is required because WebKit browsers require references to be prefixed with\n   * the current path, if the page has a `base` tag.\n   */\n  _prependPathToReferences(path) {\n    const elements = this._elementsWithExternalReferences;\n    if (elements) {\n      elements.forEach((attrs, element) => {\n        attrs.forEach(attr => {\n          element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n        });\n      });\n    }\n  }\n  /**\n   * Caches the children of an SVG element that have `url()`\n   * references that we need to prefix with the current path.\n   */\n  _cacheChildrenWithExternalReferences(element) {\n    const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n    const elements = this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map();\n    for (let i = 0; i < elementsWithFuncIri.length; i++) {\n      funcIriAttributes.forEach(attr => {\n        const elementWithReference = elementsWithFuncIri[i];\n        const value = elementWithReference.getAttribute(attr);\n        const match = value ? value.match(funcIriPattern) : null;\n        if (match) {\n          let attributes = elements.get(elementWithReference);\n          if (!attributes) {\n            attributes = [];\n            elements.set(elementWithReference, attributes);\n          }\n          attributes.push({\n            name: attr,\n            value: match[1]\n          });\n        }\n      });\n    }\n  }\n  /** Sets a new SVG icon with a particular name. */\n  _updateSvgIcon(rawName) {\n    this._svgNamespace = null;\n    this._svgName = null;\n    this._currentIconFetch.unsubscribe();\n    if (rawName) {\n      const [namespace, iconName] = this._splitIconName(rawName);\n      if (namespace) {\n        this._svgNamespace = namespace;\n      }\n      if (iconName) {\n        this._svgName = iconName;\n      }\n      this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(svg => this._setSvgElement(svg), err => {\n        const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n        this._errorHandler.handleError(new Error(errorMessage));\n      });\n    }\n  }\n  static {\n    this.ɵfac = function MatIcon_Factory(t) {\n      return new (t || MatIcon)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatIconRegistry), i0.ɵɵinjectAttribute('aria-hidden'), i0.ɵɵdirectiveInject(MAT_ICON_LOCATION), i0.ɵɵdirectiveInject(i0.ErrorHandler), i0.ɵɵdirectiveInject(MAT_ICON_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatIcon,\n      selectors: [[\"mat-icon\"]],\n      hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"],\n      hostVars: 10,\n      hostBindings: function MatIcon_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet)(\"fontIcon\", ctx._usingFontIcon() ? ctx.fontIcon : null);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n        }\n      },\n      inputs: {\n        color: \"color\",\n        inline: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"inline\", \"inline\", booleanAttribute],\n        svgIcon: \"svgIcon\",\n        fontSet: \"fontSet\",\n        fontIcon: \"fontIcon\"\n      },\n      exportAs: [\"matIcon\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatIcon, [{\n    type: Component,\n    args: [{\n      template: '<ng-content></ng-content>',\n      selector: 'mat-icon',\n      exportAs: 'matIcon',\n      host: {\n        'role': 'img',\n        'class': 'mat-icon notranslate',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n        '[attr.fontIcon]': '_usingFontIcon() ? fontIcon : null',\n        '[class.mat-icon-inline]': 'inline',\n        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: MatIconRegistry\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['aria-hidden']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_ICON_LOCATION]\n    }]\n  }, {\n    type: i0.ErrorHandler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_ICON_DEFAULT_OPTIONS]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    fontSet: [{\n      type: Input\n    }],\n    fontIcon: [{\n      type: Input\n    }]\n  });\n})();\nclass MatIconModule {\n  static {\n    this.ɵfac = function MatIconModule_Factory(t) {\n      return new (t || MatIconModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatIconModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatIconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatIcon],\n      exports: [MatIcon, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, booleanAttribute, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n  constructor(_platform, _ngZone) {\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._monitoredElements = new Map();\n  }\n  monitor(elementOrRef) {\n    if (!this._platform.isBrowser) {\n      return EMPTY;\n    }\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n    if (info) {\n      return info.subject;\n    }\n    const result = new Subject();\n    const cssClass = 'cdk-text-field-autofilled';\n    const listener = event => {\n      // Animation events fire on initial element render, we check for the presence of the autofill\n      // CSS class to make sure this is a real change in state, not just the initial render before\n      // we fire off events.\n      if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {\n        element.classList.add(cssClass);\n        this._ngZone.run(() => result.next({\n          target: event.target,\n          isAutofilled: true\n        }));\n      } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {\n        element.classList.remove(cssClass);\n        this._ngZone.run(() => result.next({\n          target: event.target,\n          isAutofilled: false\n        }));\n      }\n    };\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('animationstart', listener, listenerOptions);\n      element.classList.add('cdk-text-field-autofill-monitored');\n    });\n    this._monitoredElements.set(element, {\n      subject: result,\n      unlisten: () => {\n        element.removeEventListener('animationstart', listener, listenerOptions);\n      }\n    });\n    return result;\n  }\n  stopMonitoring(elementOrRef) {\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n    if (info) {\n      info.unlisten();\n      info.subject.complete();\n      element.classList.remove('cdk-text-field-autofill-monitored');\n      element.classList.remove('cdk-text-field-autofilled');\n      this._monitoredElements.delete(element);\n    }\n  }\n  ngOnDestroy() {\n    this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n  }\n  static {\n    this.ɵfac = function AutofillMonitor_Factory(t) {\n      return new (t || AutofillMonitor)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AutofillMonitor,\n      factory: AutofillMonitor.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutofillMonitor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n  constructor(_elementRef, _autofillMonitor) {\n    this._elementRef = _elementRef;\n    this._autofillMonitor = _autofillMonitor;\n    /** Emits when the autofill state of the element changes. */\n    this.cdkAutofill = new EventEmitter();\n  }\n  ngOnInit() {\n    this._autofillMonitor.monitor(this._elementRef).subscribe(event => this.cdkAutofill.emit(event));\n  }\n  ngOnDestroy() {\n    this._autofillMonitor.stopMonitoring(this._elementRef);\n  }\n  static {\n    this.ɵfac = function CdkAutofill_Factory(t) {\n      return new (t || CdkAutofill)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(AutofillMonitor));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkAutofill,\n      selectors: [[\"\", \"cdkAutofill\", \"\"]],\n      outputs: {\n        cdkAutofill: \"cdkAutofill\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAutofill, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkAutofill]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: AutofillMonitor\n  }], {\n    cdkAutofill: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n  /** Minimum amount of rows in the textarea. */\n  get minRows() {\n    return this._minRows;\n  }\n  set minRows(value) {\n    this._minRows = coerceNumberProperty(value);\n    this._setMinHeight();\n  }\n  /** Maximum amount of rows in the textarea. */\n  get maxRows() {\n    return this._maxRows;\n  }\n  set maxRows(value) {\n    this._maxRows = coerceNumberProperty(value);\n    this._setMaxHeight();\n  }\n  /** Whether autosizing is enabled or not */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    // Only act if the actual value changed. This specifically helps to not run\n    // resizeToFitContent too early (i.e. before ngAfterViewInit)\n    if (this._enabled !== value) {\n      (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n    }\n  }\n  get placeholder() {\n    return this._textareaElement.placeholder;\n  }\n  set placeholder(value) {\n    this._cachedPlaceholderHeight = undefined;\n    if (value) {\n      this._textareaElement.setAttribute('placeholder', value);\n    } else {\n      this._textareaElement.removeAttribute('placeholder');\n    }\n    this._cacheTextareaPlaceholderHeight();\n  }\n  constructor(_elementRef, _platform, _ngZone, /** @breaking-change 11.0.0 make document required */\n  document) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._destroyed = new Subject();\n    this._enabled = true;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     */\n    this._previousMinRows = -1;\n    this._isViewInited = false;\n    /** Handles `focus` and `blur` events. */\n    this._handleFocusEvent = event => {\n      this._hasFocus = event.type === 'focus';\n    };\n    this._document = document;\n    this._textareaElement = this._elementRef.nativeElement;\n  }\n  /** Sets the minimum height of the textarea as determined by minRows. */\n  _setMinHeight() {\n    const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n    if (minHeight) {\n      this._textareaElement.style.minHeight = minHeight;\n    }\n  }\n  /** Sets the maximum height of the textarea as determined by maxRows. */\n  _setMaxHeight() {\n    const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n    if (maxHeight) {\n      this._textareaElement.style.maxHeight = maxHeight;\n    }\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      // Remember the height which we started with in case autosizing is disabled\n      this._initialHeight = this._textareaElement.style.height;\n      this.resizeToFitContent();\n      this._ngZone.runOutsideAngular(() => {\n        const window = this._getWindow();\n        fromEvent(window, 'resize').pipe(auditTime(16), takeUntil(this._destroyed)).subscribe(() => this.resizeToFitContent(true));\n        this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n      });\n      this._isViewInited = true;\n      this.resizeToFitContent(true);\n    }\n  }\n  ngOnDestroy() {\n    this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n    this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Cache the height of a single-row textarea if it has not already been cached.\n   *\n   * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n   * maxRows. For the initial version, we will assume that the height of a single line in the\n   * textarea does not ever change.\n   */\n  _cacheTextareaLineHeight() {\n    if (this._cachedLineHeight) {\n      return;\n    }\n    // Use a clone element because we have to override some styles.\n    let textareaClone = this._textareaElement.cloneNode(false);\n    textareaClone.rows = 1;\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden';\n    this._textareaElement.parentNode.appendChild(textareaClone);\n    this._cachedLineHeight = textareaClone.clientHeight;\n    textareaClone.remove();\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this._setMinHeight();\n    this._setMaxHeight();\n  }\n  _measureScrollHeight() {\n    const element = this._textareaElement;\n    const previousMargin = element.style.marginBottom || '';\n    const isFirefox = this._platform.FIREFOX;\n    const needsMarginFiller = isFirefox && this._hasFocus;\n    const measuringClass = isFirefox ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';\n    // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n    // work around it by assigning a temporary margin with the same height as the `textarea` so that\n    // it occupies the same amount of space. See #23233.\n    if (needsMarginFiller) {\n      element.style.marginBottom = `${element.clientHeight}px`;\n    }\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    element.classList.add(measuringClass);\n    // The measuring class includes a 2px padding to workaround an issue with Chrome,\n    // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n    const scrollHeight = element.scrollHeight - 4;\n    element.classList.remove(measuringClass);\n    if (needsMarginFiller) {\n      element.style.marginBottom = previousMargin;\n    }\n    return scrollHeight;\n  }\n  _cacheTextareaPlaceholderHeight() {\n    if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n      return;\n    }\n    if (!this.placeholder) {\n      this._cachedPlaceholderHeight = 0;\n      return;\n    }\n    const value = this._textareaElement.value;\n    this._textareaElement.value = this._textareaElement.placeholder;\n    this._cachedPlaceholderHeight = this._measureScrollHeight();\n    this._textareaElement.value = value;\n  }\n  ngDoCheck() {\n    if (this._platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n  /**\n   * Resize the textarea to fit its content.\n   * @param force Whether to force a height recalculation. By default the height will be\n   *    recalculated only if the value changed since the last call.\n   */\n  resizeToFitContent(force = false) {\n    // If autosizing is disabled, just skip everything else\n    if (!this._enabled) {\n      return;\n    }\n    this._cacheTextareaLineHeight();\n    this._cacheTextareaPlaceholderHeight();\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this._cachedLineHeight) {\n      return;\n    }\n    const textarea = this._elementRef.nativeElement;\n    const value = textarea.value;\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n      return;\n    }\n    const scrollHeight = this._measureScrollHeight();\n    const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n      } else {\n        setTimeout(() => this._scrollToCaretPosition(textarea));\n      }\n    });\n    this._previousValue = value;\n    this._previousMinRows = this._minRows;\n  }\n  /**\n   * Resets the textarea to its original size\n   */\n  reset() {\n    // Do not try to change the textarea, if the initialHeight has not been determined yet\n    // This might potentially remove styles when reset() is called before ngAfterViewInit\n    if (this._initialHeight !== undefined) {\n      this._textareaElement.style.height = this._initialHeight;\n    }\n  }\n  _noopInputHandler() {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n  /** Access injected document if available or fallback to global document reference */\n  _getDocument() {\n    return this._document || document;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n  /**\n   * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n   * prevent it from scrolling to the caret position. We need to re-set the selection\n   * in order for it to scroll to the proper position.\n   */\n  _scrollToCaretPosition(textarea) {\n    const {\n      selectionStart,\n      selectionEnd\n    } = textarea;\n    // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n    // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n    // between the time we requested the animation frame and when it was executed.\n    // Also note that we have to assert that the textarea is focused before we set the\n    // selection range. Setting the selection range on a non-focused textarea will cause\n    // it to receive focus on IE and Edge.\n    if (!this._destroyed.isStopped && this._hasFocus) {\n      textarea.setSelectionRange(selectionStart, selectionEnd);\n    }\n  }\n  static {\n    this.ɵfac = function CdkTextareaAutosize_Factory(t) {\n      return new (t || CdkTextareaAutosize)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkTextareaAutosize,\n      selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]],\n      hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"],\n      hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() {\n            return ctx._noopInputHandler();\n          });\n        }\n      },\n      inputs: {\n        minRows: [i0.ɵɵInputFlags.None, \"cdkAutosizeMinRows\", \"minRows\"],\n        maxRows: [i0.ɵɵInputFlags.None, \"cdkAutosizeMaxRows\", \"maxRows\"],\n        enabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTextareaAutosize\", \"enabled\", booleanAttribute],\n        placeholder: \"placeholder\"\n      },\n      exportAs: [\"cdkTextareaAutosize\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[cdkTextareaAutosize]',\n      exportAs: 'cdkTextareaAutosize',\n      host: {\n        'class': 'cdk-textarea-autosize',\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        'rows': '1',\n        '(input)': '_noopInputHandler()'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    minRows: [{\n      type: Input,\n      args: ['cdkAutosizeMinRows']\n    }],\n    maxRows: [{\n      type: Input,\n      args: ['cdkAutosizeMaxRows']\n    }],\n    enabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTextareaAutosize',\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }]\n  });\n})();\nclass TextFieldModule {\n  static {\n    this.ɵfac = function TextFieldModule_Factory(t) {\n      return new (t || TextFieldModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TextFieldModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextFieldModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkAutofill, CdkTextareaAutosize],\n      exports: [CdkAutofill, CdkTextareaAutosize]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","/**\n * @license Angular v17.3.10\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n  constructor(_renderer, _elementRef) {\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    this.onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    this.onTouched = () => {};\n  }\n  /**\n   * Helper method that sets a property on a target element using the current Renderer\n   * implementation.\n   * @nodoc\n   */\n  setProperty(key, value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n  }\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Sets the \"disabled\" property on the range input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled) {\n    this.setProperty('disabled', isDisabled);\n  }\n  static {\n    this.ɵfac = function BaseControlValueAccessor_Factory(t) {\n      return new (t || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseControlValueAccessor, [{\n    type: Directive\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(t) {\n        return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(t || BuiltInControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BuiltInControlValueAccessor, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"checked\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('checked', value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(t) {\n        return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(t || CheckboxControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.checked)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n  constructor(renderer, elementRef, _compositionMode) {\n    super(renderer, elementRef);\n    this._compositionMode = _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    this._composing = false;\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /** @internal */\n  _handleInput(value) {\n    if (!this._compositionMode || this._compositionMode && !this._composing) {\n      this.onChange(value);\n    }\n  }\n  /** @internal */\n  _compositionStart() {\n    this._composing = true;\n  }\n  /** @internal */\n  _compositionEnd(value) {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\n  static {\n    this.ɵfac = function DefaultValueAccessor_Factory(t) {\n      return new (t || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n      // TODO: vsavkin replace the above selector with the one below it once\n      // https://github.com/angular/angular/issues/3011 is implemented\n      // selector: '[ngModel],[formControl],[formControlName]',\n      host: {\n        '(input)': '$any(this)._handleInput($event.target.value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '$any(this)._compositionStart()',\n        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n      },\n      providers: [DEFAULT_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [COMPOSITION_BUFFER_MODE]\n    }]\n  }], null);\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ɵisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.ɵfac = function NgControlStatus_Factory(t) {\n      return new (t || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgControlStatus, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName],[ngModel],[formControl]',\n      host: ngControlStatusHost\n    }]\n  }], () => [{\n    type: NgControl,\n    decorators: [{\n      type: Self\n    }]\n  }], null);\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.ɵfac = function NgControlStatusGroup_Factory(t) {\n      return new (t || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgControlStatusGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n      host: ngGroupStatusHost\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }], null);\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException() {\n  return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n  return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = false;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    this.pristine = true;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   */\n  markAllAsTouched() {\n    this.markAsTouched({\n      onlySelf: true\n    });\n    this._forEachChild(control => control.markAllAsTouched());\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    if (opts.emitEvent !== false) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control errors are set.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event after the errors are set.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    this._directives = new Set();\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    this.ngSubmit = new EventEmitter();\n    this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n  /** @nodoc */\n  ngAfterViewInit() {\n    this._setUpdateStrategy();\n  }\n  /**\n   * @description\n   * The directive instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * The internal `FormGroup` instance.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it is always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Returns a map of the controls in this group.\n   */\n  get controls() {\n    return this.form.controls;\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  addControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      dir.control = container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir, this.callSetDisabledState);\n      dir.control.updateValueAndValidity({\n        emitEvent: false\n      });\n      this._directives.add(dir);\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `NgModel` instance from the internal list of directives\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  removeControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n      this._directives.delete(dir);\n    });\n  }\n  /**\n   * @description\n   * Adds a new `NgModelGroup` directive instance to the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  addFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({\n        emitEvent: false\n      });\n    });\n  }\n  /**\n   * @description\n   * Removes the `NgModelGroup` directive instance from the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  removeFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `NgControl` directive.\n   *\n   * @param dir The `NgControl` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    resolvedPromise$1.then(() => {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    });\n  }\n  /**\n   * @description\n   * Sets the value for this `FormGroup`.\n   *\n   * @param value The new value\n   */\n  setValue(value) {\n    this.control.setValue(value);\n  }\n  /**\n   * @description\n   * Method called when the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this._directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior\n    // that won't reload the page and that shouldn't be prevented.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.form._updateOn = this.options.updateOn;\n    }\n  }\n  _findContainer(path) {\n    path.pop();\n    return path.length ? this.form.get(path) : this.form;\n  }\n  static {\n    this.ɵfac = function NgForm_Factory(t) {\n      return new (t || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [i0.ɵɵInputFlags.None, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgForm, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n      providers: [formDirectiveProvider$1],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      outputs: ['ngSubmit'],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    options: [{\n      type: Input,\n      args: ['ngFormOptions']\n    }]\n  });\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n  /** @nodoc */\n  ngOnInit() {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective.addFormGroup(this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormGroup(this);\n  }\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /** @internal */\n  _checkParentType() {}\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(t) {\n        return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(t || AbstractFormGroupDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractFormGroupDirective,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n    type: Directive\n  }], null, null);\n})();\nfunction modelParentException() {\n  return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    this.name = '';\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw modelGroupParentException();\n    }\n  }\n  static {\n    this.ɵfac = function NgModelGroup_Factory(t) {\n      return new (t || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgModelGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModelGroup]',\n      providers: [modelGroupProvider],\n      exportAs: 'ngModelGroup'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['ngModelGroup']\n    }]\n  });\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n  constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n    super();\n    this._changeDetectorRef = _changeDetectorRef;\n    this.callSetDisabledState = callSetDisabledState;\n    this.control = new FormControl();\n    /** @internal */\n    this._registered = false;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    this.name = '';\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    this.update = new EventEmitter();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkForErrors();\n    if (!this._registered || 'name' in changes) {\n      if (this._registered) {\n        this._checkName();\n        if (this.formDirective) {\n          // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n          // changed. We also can't reset the name temporarily since the logic in `removeControl`\n          // is inside a promise and it won't run immediately. We work around it by giving it an\n          // object with the same shape instead.\n          const oldName = changes['name'].previousValue;\n          this.formDirective.removeControl({\n            name: oldName,\n            path: this._getPath(oldName)\n          });\n        }\n      }\n      this._setUpControl();\n    }\n    if ('isDisabled' in changes) {\n      this._updateDisabled(changes);\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.formDirective && this.formDirective.removeControl(this);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return this._getPath(this.name);\n  }\n  /**\n   * @description\n   * The top-level directive for this control if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value emitted by `ngModelChange`.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _setUpControl() {\n    this._setUpdateStrategy();\n    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n    this._registered = true;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.control._updateOn = this.options.updateOn;\n    }\n  }\n  _isStandalone() {\n    return !this._parent || !!(this.options && this.options.standalone);\n  }\n  _setUpStandalone() {\n    setUpControl(this.control, this, this.callSetDisabledState);\n    this.control.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _checkForErrors() {\n    if (!this._isStandalone()) {\n      this._checkParentType();\n    }\n    this._checkName();\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n        throw formGroupNameException();\n      } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n        throw modelParentException();\n      }\n    }\n  }\n  _checkName() {\n    if (this.options && this.options.name) this.name = this.options.name;\n    if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingNameException();\n    }\n  }\n  _updateValue(value) {\n    resolvedPromise.then(() => {\n      this.control.setValue(value, {\n        emitViewToModelChange: false\n      });\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _updateDisabled(changes) {\n    const disabledValue = changes['isDisabled'].currentValue;\n    // checking for 0 to avoid breaking change\n    const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n    resolvedPromise.then(() => {\n      if (isDisabled && !this.control.disabled) {\n        this.control.disable();\n      } else if (!isDisabled && this.control.disabled) {\n        this.control.enable();\n      }\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _getPath(controlName) {\n    return this._parent ? controlPath(controlName, this._parent) : [controlName];\n  }\n  static {\n    this.ɵfac = function NgModel_Factory(t) {\n      return new (t || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"],\n        options: [i0.ɵɵInputFlags.None, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgModel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModel]:not([formControlName]):not([formControl])',\n      providers: [formControlBinding$1],\n      exportAs: 'ngModel'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ChangeDetectorRef]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    name: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    options: [{\n      type: Input,\n      args: ['ngModelOptions']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n  static {\n    this.ɵfac = function ɵNgNoValidate_Factory(t) {\n      return new (t || ɵNgNoValidate)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵNgNoValidate, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n      host: {\n        'novalidate': ''\n      }\n    }]\n  }], null, null);\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(t) {\n        return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(t || NumberValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n      host: {\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [NUMBER_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n  constructor() {\n    this._accessors = [];\n  }\n  /**\n   * @description\n   * Adds a control to the internal registry. For internal use only.\n   */\n  add(control, accessor) {\n    this._accessors.push([control, accessor]);\n  }\n  /**\n   * @description\n   * Removes a control from the internal registry. For internal use only.\n   */\n  remove(accessor) {\n    for (let i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n  /**\n   * @description\n   * Selects a radio button. For internal use only.\n   */\n  select(accessor) {\n    this._accessors.forEach(c => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n  _isSameGroup(controlPair, accessor) {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n  }\n  static {\n    this.ɵfac = function RadioControlRegistry_Factory(t) {\n      return new (t || RadioControlRegistry)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioControlRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor(renderer, elementRef, _registry, _injector) {\n    super(renderer, elementRef);\n    this._registry = _registry;\n    this._injector = _injector;\n    this.setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    this.onChange = () => {};\n    this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n  }\n  /** @nodoc */\n  ngOnInit() {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this._registry.remove(this);\n  }\n  /**\n   * Sets the \"checked\" property value on the radio input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this._state = value === this.value;\n    this.setProperty('checked', this._state);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n  /** @nodoc */\n  setDisabledState(isDisabled) {\n    /**\n     * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n     * including upon control creation. However, a longstanding bug caused the method to not fire\n     * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n     *\n     * This had a side effect: previously, it was possible to instantiate a reactive form control\n     * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n     * model. This resulted in a mismatch between the model and the DOM. Now, because\n     * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n     * with the \"correct\" enabled value.\n     *\n     * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n     * models the entire group of radio buttons as a single `FormControl`, there is no way to\n     * control the disabled state for individual radios, so they can no longer be configured as\n     * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n     * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n     * is `false`, and we are not in legacy mode.\n     */\n    if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n      this.setProperty('disabled', isDisabled);\n    }\n    this.setDisabledStateFired = true;\n  }\n  /**\n   * Sets the \"value\" on the radio input element and unchecks it.\n   *\n   * @param value\n   */\n  fireUncheck(value) {\n    this.writeValue(value);\n  }\n  _checkName() {\n    if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n  static {\n    this.ɵfac = function RadioControlValueAccessor_Factory(t) {\n      return new (t || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n      host: {\n        '(change)': 'onChange()',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RADIO_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: RadioControlRegistry\n  }, {\n    type: i0.Injector\n  }], {\n    name: [{\n      type: Input\n    }],\n    formControlName: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('value', parseFloat(value));\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(t) {\n        return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(t || RangeValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RANGE_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlDirective. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this.callSetDisabledState = callSetDisabledState;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this._isControlChanged(changes)) {\n      const previousForm = changes['form'].previousValue;\n      if (previousForm) {\n        cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n      }\n      setUpControl(this.form, this, this.callSetDisabledState);\n      this.form.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n      }\n      this.form.setValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n    }\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * The `FormControl` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _isControlChanged(changes) {\n    return changes.hasOwnProperty('form');\n  }\n  static {\n    this.ɵfac = function FormControlDirective_Factory(t) {\n      return new (t || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [i0.ɵɵInputFlags.None, \"formControl\", \"form\"],\n        isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formControl]',\n      providers: [formControlBinding],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formControl']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    this._onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    this.directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    this.form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    this.ngSubmit = new EventEmitter();\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n      this._oldForm = this.form;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpValidators(this.form, this);\n      // Currently the `onCollectionChange` callback is rewritten each time the\n      // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n      // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n      // Otherwise it might cause overriding a callback of some other directive instances. We should\n      // consider updating this logic later to make it similar to how `onChange` callbacks are\n      // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n      if (this.form._onCollectionChange === this._onCollectionChange) {\n        this.form._registerOnCollectionChange(() => {});\n      }\n    }\n  }\n  /**\n   * @description\n   * Returns this directive's instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * Returns the `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  addControl(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpControl(ctrl, dir, this.callSetDisabledState);\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n    this.directives.push(dir);\n    return ctrl;\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `FormControlName` instance from the internal list of directives\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  removeControl(dir) {\n    cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n    removeListItem$1(this.directives, dir);\n  }\n  /**\n   * Adds a new `FormGroupName` directive instance to the form.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  addFormGroup(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  removeFormGroup(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  addFormArray(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  removeFormArray(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  getFormArray(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `FormControlName` directive.\n   *\n   * @param dir The `FormControlName` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    const ctrl = this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n  /**\n   * @description\n   * Method called with the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n    // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n    // some internal apps call this method directly with the wrong arguments.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const oldCtrl = dir.control;\n      const newCtrl = this.form.get(dir.path);\n      if (oldCtrl !== newCtrl) {\n        // Note: the value of the `dir.control` may not be defined, for example when it's a first\n        // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n        cleanUpControl(oldCtrl || null, dir);\n        // Check whether new control at the same location inside the corresponding `FormGroup` is an\n        // instance of `FormControl` and perform control setup only if that's the case.\n        // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n        // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n        // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n        if (isFormControl(newCtrl)) {\n          setUpControl(newCtrl, dir, this.callSetDisabledState);\n          dir.control = newCtrl;\n        }\n      }\n    });\n    this.form._updateTreeValidity({\n      emitEvent: false\n    });\n  }\n  _setUpFormContainer(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    // NOTE: this operation looks unnecessary in case no new validators were added in\n    // `setUpFormContainer` call. Consider updating this code to match the logic in\n    // `_cleanUpFormContainer` function.\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _cleanUpFormContainer(dir) {\n    if (this.form) {\n      const ctrl = this.form.get(dir.path);\n      if (ctrl) {\n        const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n        if (isControlUpdated) {\n          // Run validity check only in case a control was updated (i.e. view validators were\n          // removed) as removing view validators might cause validity to change.\n          ctrl.updateValueAndValidity({\n            emitEvent: false\n          });\n        }\n      }\n    }\n  }\n  _updateRegistrations() {\n    this.form._registerOnCollectionChange(this._onCollectionChange);\n    if (this._oldForm) {\n      this._oldForm._registerOnCollectionChange(() => {});\n    }\n  }\n  _updateValidators() {\n    setUpValidators(this.form, this);\n    if (this._oldForm) {\n      cleanUpValidators(this._oldForm, this);\n    }\n  }\n  _checkFormPresent() {\n    if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingFormException();\n    }\n  }\n  static {\n    this.ɵfac = function FormGroupDirective_Factory(t) {\n      return new (t || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [i0.ɵɵInputFlags.None, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroup]',\n      providers: [formDirectiveProvider],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formGroup']\n    }],\n    ngSubmit: [{\n      type: Output\n    }]\n  });\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw groupParentException();\n    }\n  }\n  static {\n    this.ɵfac = function FormGroupName_Factory(t) {\n      return new (t || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"formGroupName\", \"name\"]\n      },\n      features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGroupName, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName]',\n      providers: [formGroupNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formGroupName']\n    }]\n  });\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /**\n   * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n   * @throws If the directive does not have a valid parent.\n   * @nodoc\n   */\n  ngOnInit() {\n    this._checkParentType();\n    this.formDirective.addFormArray(this);\n  }\n  /**\n   * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n   * @nodoc\n   */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormArray` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormArray(this);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw arrayParentException();\n    }\n  }\n  static {\n    this.ɵfac = function FormArrayName_Factory(t) {\n      return new (t || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"formArrayName\", \"name\"]\n      },\n      features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormArrayName, [{\n    type: Directive,\n    args: [{\n      selector: '[formArrayName]',\n      providers: [formArrayNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formArrayName']\n    }]\n  });\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlName. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this._added = false;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    this.name = null;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n      }\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n        throw ngModelGroupException();\n      } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n        throw controlParentException();\n      }\n    }\n  }\n  _setUpControl() {\n    this._checkParentType();\n    this.control = this.formDirective.addControl(this);\n    this._added = true;\n  }\n  static {\n    this.ɵfac = function FormControlName_Factory(t) {\n      return new (t || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"formControlName\", \"name\"],\n        isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormControlName, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName]',\n      providers: [controlNameBinding]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formControlName']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on the select element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    const id = this._getOptionId(value);\n    const valueString = _buildValueString$1(id, value);\n    this.setProperty('value', valueString);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = valueString => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n  /** @internal */\n  _registerOption() {\n    return (this._idCounter++).toString();\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId$1(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(t) {\n        return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(t || SelectControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) this.id = this._select._registerOption();\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString$1(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.ɵfac = function NgSelectOption_Factory(t) {\n      return new (t || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSelectOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on one or of more of the select's options.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    let optionSelectedStateSetter;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const ids = value.map(v => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(ids.indexOf(o.toString()) > -1);\n      };\n    } else {\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(false);\n      };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n  /**\n   * Registers a function called when the control value changes\n   * and writes an array of the selected options.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = element => {\n      const selected = [];\n      const selectedOptions = element.selectedOptions;\n      if (selectedOptions !== undefined) {\n        const options = selectedOptions;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          const val = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade to use `options` when `selectedOptions` property is not available.\n      // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n      // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n      else {\n        const options = element.options;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          if (opt.selected) {\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n  /** @internal */\n  _registerOption(value) {\n    const id = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(t) {\n        return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(t || SelectMultipleControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @internal */\n  _setSelected(selected) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.ɵfac = function ɵNgSelectMultipleOption_Factory(t) {\n      return new (t || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectMultipleControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n  constructor() {\n    this._validator = nullValidator;\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this.inputName in changes) {\n      const input = this.normalizeInput(changes[this.inputName].currentValue);\n      this._enabled = this.enabled(input);\n      this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n      if (this._onChange) {\n        this._onChange();\n      }\n    }\n  }\n  /** @nodoc */\n  validate(control) {\n    return this._validator(control);\n  }\n  /** @nodoc */\n  registerOnValidatorChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * @description\n   * Determines whether this validator should be active or not based on an input.\n   * Base class implementation checks whether an input is defined (if the value is different from\n   * `null` and `undefined`). Validator classes that extend this base class can override this\n   * function with the logic specific to a particular validator directive.\n   */\n  enabled(input) {\n    return input != null /* both `null` and `undefined` */;\n  }\n  static {\n    this.ɵfac = function AbstractValidatorDirective_Factory(t) {\n      return new (t || AbstractValidatorDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractValidatorDirective, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'max';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = max => maxValidator(max);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(t) {\n        return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(t || MaxValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaxValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n      providers: [MAX_VALIDATOR],\n      host: {\n        '[attr.max]': '_enabled ? max : null'\n      }\n    }]\n  }], null, {\n    max: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'min';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = min => minValidator(min);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMinValidator_BaseFactory;\n      return function MinValidator_Factory(t) {\n        return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(t || MinValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n      providers: [MIN_VALIDATOR],\n      host: {\n        '[attr.min]': '_enabled ? min : null'\n      }\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'required';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => requiredValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(t) {\n        return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(t || RequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n      providers: [REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, {\n    required: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.createValidator = input => requiredTrueValidator;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(t) {\n        return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(t || CheckboxRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n      providers: [CHECKBOX_REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'email';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => emailValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(t) {\n        return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(t || EmailValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EmailValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n      providers: [EMAIL_VALIDATOR]\n    }]\n  }], null, {\n    email: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'minlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = minlength => minLengthValidator(minlength);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(t) {\n        return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(t || MinLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n      providers: [MIN_LENGTH_VALIDATOR],\n      host: {\n        '[attr.minlength]': '_enabled ? minlength : null'\n      }\n    }]\n  }], null, {\n    minlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'maxlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = maxlength => maxLengthValidator(maxlength);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(t) {\n        return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(t || MaxLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaxLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n      providers: [MAX_LENGTH_VALIDATOR],\n      host: {\n        '[attr.maxlength]': '_enabled ? maxlength : null'\n      }\n    }]\n  }], null, {\n    maxlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'pattern';\n    /** @internal */\n    this.normalizeInput = input => input;\n    /** @internal */\n    this.createValidator = input => patternValidator(input);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(t) {\n        return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(t || PatternValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PatternValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n      providers: [PATTERN_VALIDATOR],\n      host: {\n        '[attr.pattern]': '_enabled ? pattern : null'\n      }\n    }]\n  }], null, {\n    pattern: [{\n      type: Input\n    }]\n  });\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n  static {\n    this.ɵfac = function ɵInternalFormsSharedModule_Factory(t) {\n      return new (t || ɵInternalFormsSharedModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ɵInternalFormsSharedModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: SHARED_FORM_DIRECTIVES,\n      exports: SHARED_FORM_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n  constructor() {\n    this.useNonNullable = false;\n  }\n  /**\n   * @description\n   * Returns a FormBuilder in which automatically constructed `FormControl` elements\n   * have `{nonNullable: true}` and are non-nullable.\n   *\n   * **Constructing non-nullable controls**\n   *\n   * When constructing a control, it will be non-nullable, and will reset to its initial value.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.control('Alex'); // FormControl<string>\n   * name.reset();\n   * console.log(name); // 'Alex'\n   * ```\n   *\n   * **Constructing non-nullable groups or arrays**\n   *\n   * When constructing a group or array, all automatically created inner controls will be\n   * non-nullable, and will reset to their initial values.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n   * name.reset();\n   * console.log(name); // {who: 'Alex'}\n   * ```\n   * **Constructing *nullable* fields on groups or arrays**\n   *\n   * It is still possible to have a nullable field. In particular, any `FormControl` which is\n   * *already* constructed will not be altered. For example:\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * // FormGroup<{who: FormControl<string|null>}>\n   * let name = nnfb.group({who: new FormControl('Alex')});\n   * name.reset(); console.log(name); // {who: null}\n   * ```\n   *\n   * Because the inner control is constructed explicitly by the caller, the builder has\n   * no control over how it is created, and cannot exclude the `null`.\n   */\n  get nonNullable() {\n    const nnfb = new FormBuilder();\n    nnfb.useNonNullable = true;\n    return nnfb;\n  }\n  group(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    let newOptions = {};\n    if (isAbstractControlOptions(options)) {\n      // `options` are `AbstractControlOptions`\n      newOptions = options;\n    } else if (options !== null) {\n      // `options` are legacy form group options\n      newOptions.validators = options.validator;\n      newOptions.asyncValidators = options.asyncValidator;\n    }\n    return new FormGroup(reducedControls, newOptions);\n  }\n  /**\n   * @description\n   * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n   * containing all the keys and corresponding inner control types.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param options Configuration options object for the `FormRecord`. The object should have the\n   * `AbstractControlOptions` type and might contain the following fields:\n   * * `validators`: A synchronous validator function, or an array of validator functions.\n   * * `asyncValidators`: A single async validator or array of async validator functions.\n   * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n   * | submit').\n   */\n  record(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormRecord(reducedControls, options);\n  }\n  /**\n   * @description\n   * Constructs a new `FormControl` with the given state, validators and options. Sets\n   * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n   * control will be nullable. Accepts a single generic argument, which is the type  of the\n   * control's value.\n   *\n   * @param formState Initializes the control with an initial state value, or\n   * with an object that contains both a value and a disabled status.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or a `FormControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   *\n   * @usageNotes\n   *\n   * ### Initialize a control as disabled\n   *\n   * The following example returns a control with an initial value in a disabled state.\n   *\n   * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n   * </code-example>\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    let newOptions = {};\n    if (!this.useNonNullable) {\n      return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    if (isAbstractControlOptions(validatorOrOpts)) {\n      // If the second argument is options, then they are copied.\n      newOptions = validatorOrOpts;\n    } else {\n      // If the other arguments are validators, they are copied into an options object.\n      newOptions.validators = validatorOrOpts;\n      newOptions.asyncValidators = asyncValidator;\n    }\n    return new FormControl(formState, {\n      ...newOptions,\n      nonNullable: true\n    });\n  }\n  /**\n   * Constructs a new `FormArray` from the given array of configurations,\n   * validators and options. Accepts a single generic argument, which is the type of each control\n   * inside the array.\n   *\n   * @param controls An array of child controls or control configs. Each child control is given an\n   *     index when it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n   *     `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions.\n   */\n  array(controls, validatorOrOpts, asyncValidator) {\n    const createdControls = controls.map(c => this._createControl(c));\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n  }\n  /** @internal */\n  _reduceControls(controls) {\n    const createdControls = {};\n    Object.keys(controls).forEach(controlName => {\n      createdControls[controlName] = this._createControl(controls[controlName]);\n    });\n    return createdControls;\n  }\n  /** @internal */\n  _createControl(controls) {\n    if (controls instanceof FormControl) {\n      return controls;\n    } else if (controls instanceof AbstractControl) {\n      // A control; just return it\n      return controls;\n    } else if (Array.isArray(controls)) {\n      // ControlConfig Tuple\n      const value = controls[0];\n      const validator = controls.length > 1 ? controls[1] : null;\n      const asyncValidator = controls.length > 2 ? controls[2] : null;\n      return this.control(value, validator, asyncValidator);\n    } else {\n      // T or FormControlState<T>\n      return this.control(controls);\n    }\n  }\n  static {\n    this.ɵfac = function FormBuilder_Factory(t) {\n      return new (t || FormBuilder)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n  static {\n    this.ɵfac = function NonNullableFormBuilder_Factory(t) {\n      return new (t || NonNullableFormBuilder)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NonNullableFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(FormBuilder).nonNullable\n    }]\n  }], null, null);\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n  group(controlsConfig, options = null) {\n    return super.group(controlsConfig, options);\n  }\n  /**\n   * Like `FormBuilder#control`, except the resulting control is untyped.\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    return super.control(formState, validatorOrOpts, asyncValidator);\n  }\n  /**\n   * Like `FormBuilder#array`, except the resulting array is untyped.\n   */\n  array(controlsConfig, validatorOrOpts, asyncValidator) {\n    return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(t) {\n        return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(t || UntypedFormBuilder);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UntypedFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.10');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n  /**\n   * @description\n   * Provides options for configuring the forms module.\n   *\n   * @param opts An object of configuration options\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: FormsModule,\n      providers: [{\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function FormsModule_Factory(t) {\n      return new (t || FormsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FormsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n      exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [{\n        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n        useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n      }, {\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function ReactiveFormsModule_Factory(t) {\n      return new (t || ReactiveFormsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ReactiveFormsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReactiveFormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n      exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];\nlet nextUniqueId = 0;\nclass MatInput {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || this._uid;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  /** Input type of the element. */\n  get type() {\n    return this._type;\n  }\n  set type(value) {\n    this._type = value || 'text';\n    this._validateType();\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n      this._elementRef.nativeElement.type = this._type;\n    }\n  }\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._inputValueAccessor.value;\n  }\n  set value(value) {\n    if (value !== this.value) {\n      this._inputValueAccessor.value = value;\n      this.stateChanges.next();\n    }\n  }\n  /** Whether the element is readonly. */\n  get readonly() {\n    return this._readonly;\n  }\n  set readonly(value) {\n    this._readonly = coerceBooleanProperty(value);\n  }\n  /** Whether the input is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor(_elementRef, _platform, ngControl, parentForm, parentFormGroup, defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone,\n  // TODO: Remove this once the legacy appearance has been removed. We only need\n  // to inject the form field for determining whether the placeholder has been promoted.\n  _formField) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    this.ngControl = ngControl;\n    this._autofillMonitor = _autofillMonitor;\n    this._formField = _formField;\n    this._uid = `mat-input-${nextUniqueId++}`;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.focused = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.stateChanges = new Subject();\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.controlType = 'mat-input';\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.autofilled = false;\n    this._disabled = false;\n    this._type = 'text';\n    this._readonly = false;\n    this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(t => getSupportedInputTypes().has(t));\n    this._iOSKeyupListener = event => {\n      const el = event.target;\n      // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n      // indicate different things. If the value is 0, it means that the caret is at the start\n      // of the input, whereas a value of `null` means that the input doesn't support\n      // manipulating the selection range. Inputs that don't support setting the selection range\n      // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n      // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n      if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n        // `1, 1` fixes it for the first time that you type text and\n        // then hold delete. Toggling to `1, 1` and then back to\n        // `0, 0` seems to completely fix it.\n        el.setSelectionRange(1, 1);\n        el.setSelectionRange(0, 0);\n      }\n    };\n    const element = this._elementRef.nativeElement;\n    const nodeName = element.nodeName.toLowerCase();\n    // If no input value accessor was explicitly specified, use the element as the input value\n    // accessor.\n    this._inputValueAccessor = inputValueAccessor || element;\n    this._previousNativeValue = this.value;\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n      });\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeSelect = nodeName === 'select';\n    this._isTextarea = nodeName === 'textarea';\n    this._isInFormField = !!_formField;\n    if (this._isNativeSelect) {\n      this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';\n    }\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n        this.autofilled = event.isAutofilled;\n        this.stateChanges.next();\n      });\n    }\n  }\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n    if (this._platform.IOS) {\n      this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n      // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n      // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n      // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n      // disabled.\n      if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n        this.disabled = this.ngControl.disabled;\n        this.stateChanges.next();\n      }\n    }\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this._dirtyCheckNativeValue();\n    // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n    // present or not depends on a query which is prone to \"changed after checked\" errors.\n    this._dirtyCheckPlaceholder();\n  }\n  /** Focuses the input. */\n  focus(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Refreshes the error state of the input. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Callback for the cases where the focused state of the input changes. */\n  _focusChanged(isFocused) {\n    if (isFocused !== this.focused) {\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n  _onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n  /** Does some manual dirty checking on the native input `value` property. */\n  _dirtyCheckNativeValue() {\n    const newValue = this._elementRef.nativeElement.value;\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n  /** Does some manual dirty checking on the native input `placeholder` attribute. */\n  _dirtyCheckPlaceholder() {\n    const placeholder = this._getPlaceholder();\n    if (placeholder !== this._previousPlaceholder) {\n      const element = this._elementRef.nativeElement;\n      this._previousPlaceholder = placeholder;\n      placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n    }\n  }\n  /** Gets the current placeholder of the form field. */\n  _getPlaceholder() {\n    return this.placeholder || null;\n  }\n  /** Make sure the input is a supported type. */\n  _validateType() {\n    if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatInputUnsupportedTypeError(this._type);\n    }\n  }\n  /** Checks whether the input type is one of the types that are never empty. */\n  _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n  /** Checks whether the input is invalid based on the native validation. */\n  _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let validity = this._elementRef.nativeElement.validity;\n    return validity && validity.badInput;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    if (this._isNativeSelect) {\n      // For a single-selection `<select>`, the label should float when the selected option has\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n      // overlapping the label with the options.\n      const selectElement = this._elementRef.nativeElement;\n      const firstOption = selectElement.options[0];\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n      return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n    } else {\n      return this.focused || !this.empty;\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    if (ids.length) {\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n  /** Whether the form control is a native select that is displayed inline. */\n  _isInlineSelect() {\n    const element = this._elementRef.nativeElement;\n    return this._isNativeSelect && (element.multiple || element.size > 1);\n  }\n  static {\n    this.ɵfac = function MatInput_Factory(t) {\n      return new (t || MatInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.NgControl, 10), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(i4.AutofillMonitor), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatInput,\n      selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-input-element\"],\n      hostVars: 18,\n      hostBindings: function MatInput_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() {\n            return ctx._focusChanged(true);\n          })(\"blur\", function MatInput_blur_HostBindingHandler() {\n            return ctx._focusChanged(false);\n          })(\"input\", function MatInput_input_HostBindingHandler() {\n            return ctx._onInput();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n          i0.ɵɵattribute(\"name\", ctx.name || null)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required)(\"id\", ctx.id);\n          i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-form-field-textarea-control\", ctx._isInFormField && ctx._isTextarea)(\"mat-mdc-form-field-input-control\", ctx._isInFormField)(\"mdc-text-field__input\", ctx._isInFormField)(\"mat-mdc-native-select-inline\", ctx._isInlineSelect());\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        id: \"id\",\n        placeholder: \"placeholder\",\n        name: \"name\",\n        required: \"required\",\n        type: \"type\",\n        errorStateMatcher: \"errorStateMatcher\",\n        userAriaDescribedBy: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"userAriaDescribedBy\"],\n        value: \"value\",\n        readonly: \"readonly\"\n      },\n      exportAs: [\"matInput\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatFormFieldControl,\n        useExisting: MatInput\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInput, [{\n    type: Directive,\n    args: [{\n      selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n      exportAs: 'matInput',\n      host: {\n        'class': 'mat-mdc-input-element',\n        // The BaseMatInput parent class adds `mat-input-element`, `mat-form-field-control` and\n        // `mat-form-field-autofill-control` to the CSS class list, but this should not be added for\n        // this MDC equivalent input.\n        '[class.mat-input-server]': '_isServer',\n        '[class.mat-mdc-form-field-textarea-control]': '_isInFormField && _isTextarea',\n        '[class.mat-mdc-form-field-input-control]': '_isInFormField',\n        '[class.mdc-text-field__input]': '_isInFormField',\n        '[class.mat-mdc-native-select-inline]': '_isInlineSelect()',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[id]': 'id',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.name]': 'name || null',\n        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n        // Only mark the input as invalid for assistive technology if it has a value since the\n        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n        '[attr.aria-required]': 'required',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '(focus)': '_focusChanged(true)',\n        '(blur)': '_focusChanged(false)',\n        '(input)': '_onInput()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatInput\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: i2.NgControl,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: i2.NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.ErrorStateMatcher\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [MAT_INPUT_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: i4.AutofillMonitor\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i5.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }]\n  }], {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    userAriaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    value: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }]\n  });\n})();\nclass MatInputModule {\n  static {\n    this.ɵfac = function MatInputModule_Factory(t) {\n      return new (t || MatInputModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatInputModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInputModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatFormFieldModule, MatInput],\n      exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NgClass, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Self, Attribute, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, _ErrorStateTracker, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._panelDoneAnimatingStream.next($event.toState));\n    })(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass)(\"@transformPanel\", \"showing\");\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nconst matSelectAnimations = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: trigger('transformPanelWrap', [transition('* => void', query('@transformPanel', [animateChild()], {\n    optional: true\n  }))]),\n  /** This animation transforms the select's overlay panel on and off the page. */\n  transformPanel: trigger('transformPanel', [state('void', style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), transition('void => showing', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))])\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  constructor( /** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nclass MatSelect {\n  /** Scrolls a particular option into the view. */\n  _scrollOptionIntoView(index) {\n    const option = this.options.toArray()[index];\n    if (option) {\n      const panel = this.panel.nativeElement;\n      const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n      const element = option._getHostElement();\n      if (index === 0 && labelCount === 1) {\n        // If we've got one group label before the option and we're at the top option,\n        // scroll the list to the top. This is better UX than scrolling the list to the\n        // top of the option, because it allows the user to read the top group's label.\n        panel.scrollTop = 0;\n      } else {\n        panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n      }\n    }\n  }\n  /** Called when the panel has been opened and the overlay has settled on its final position. */\n  _positioningSettled() {\n    this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n  }\n  /** Creates a change event object that should be emitted by the select. */\n  _getChangeEvent(value) {\n    return new MatSelectChange(this, value);\n  }\n  /** Whether the select is focused. */\n  get focused() {\n    return this._focused || this._panelOpen;\n  }\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  /** Placeholder to be shown if no value has been selected. */\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  /** Whether the component is required. */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  /** Whether the user should be allowed to select multiple options. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectDynamicMultipleError();\n    }\n    this._multiple = value;\n  }\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  get compareWith() {\n    return this._compareWith;\n  }\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  /** Value of the select control. */\n  get value() {\n    return this._value;\n  }\n  set value(newValue) {\n    const hasAssigned = this._assignValue(newValue);\n    if (hasAssigned) {\n      this._onChange(newValue);\n    }\n  }\n  /** Object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Unique id of the element. */\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  /** Whether the select is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor(_viewportRuler, _changeDetectorRef,\n  /**\n   * @deprecated Unused param, will be removed.\n   * @breaking-change 19.0.0\n   */\n  _unusedNgZone, defaultErrorStateMatcher, _elementRef, _dir, parentForm, parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n    this._viewportRuler = _viewportRuler;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._parentFormField = _parentFormField;\n    this.ngControl = ngControl;\n    this._liveAnnouncer = _liveAnnouncer;\n    this._defaultOptions = _defaultOptions;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    this._positions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }, {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      panelClass: 'mat-mdc-select-panel-above'\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      panelClass: 'mat-mdc-select-panel-above'\n    }];\n    /** Whether or not the overlay panel is open. */\n    this._panelOpen = false;\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    this._compareWith = (o1, o2) => o1 === o2;\n    /** Unique id for this input. */\n    this._uid = `mat-select-${nextUniqueId++}`;\n    /** Current `aria-labelledby` value for the select trigger. */\n    this._triggerAriaLabelledBy = null;\n    /** Emits whenever the component is destroyed. */\n    this._destroy = new Subject();\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    this.stateChanges = new Subject();\n    /**\n     * Disable the automatic labeling to avoid issues like #27241.\n     * @docs-private\n     */\n    this.disableAutomaticLabeling = true;\n    /** `View -> model callback called when value changes` */\n    this._onChange = () => {};\n    /** `View -> model callback called when select has been touched` */\n    this._onTouched = () => {};\n    /** ID for the DOM node containing the select's value. */\n    this._valueId = `mat-select-value-${nextUniqueId++}`;\n    /** Emits when the panel element is finished transforming in. */\n    this._panelDoneAnimatingStream = new Subject();\n    this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n    this._focused = false;\n    /** A name for this control that can be used by `mat-form-field`. */\n    this.controlType = 'mat-select';\n    /** Whether the select is disabled. */\n    this.disabled = false;\n    /** Whether ripples in the select are disabled. */\n    this.disableRipple = false;\n    /** Tab index of the select. */\n    this.tabIndex = 0;\n    this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this._multiple = false;\n    /** Whether to center the active option over the trigger. */\n    this.disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n    /** Aria label of the select. */\n    this.ariaLabel = '';\n    /**\n     * Width of the panel. If set to `auto`, the panel will match the trigger width.\n     * If set to null or an empty string, the panel will grow to match the longest option's text.\n     */\n    this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n    this._initialized = new Subject();\n    /** Combined stream of all of the child options' change events. */\n    this.optionSelectionChanges = defer(() => {\n      const options = this.options;\n      if (options) {\n        return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n      }\n      return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n    });\n    /** Event emitted when the select panel has been toggled. */\n    this.openedChange = new EventEmitter();\n    /** Event emitted when the select has been opened. */\n    this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the select has been closed. */\n    this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the selected value has been changed by the user. */\n    this.selectionChange = new EventEmitter();\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    this._trackedModal = null;\n    // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n    // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n    // recommendation.\n    //\n    // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n    // makes a few exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    //\n    // The user can focus disabled options using the keyboard, but the user cannot click disabled\n    // options.\n    this._skipPredicate = option => {\n      if (this.panelOpen) {\n        // Support keyboard focusing disabled options in an ARIA listbox.\n        return false;\n      }\n      // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n      // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n      // closed.\n      return option.disabled;\n    };\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n    // Note that we only want to set this when the defaults pass it in, otherwise it should\n    // stay as `undefined` so that it falls back to the default in the key manager.\n    if (_defaultOptions?.typeaheadDebounceInterval != null) {\n      this.typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = parseInt(tabIndex) || 0;\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple);\n    this.stateChanges.next();\n    // We need `distinctUntilChanged` here, because some browsers will\n    // fire the animation end event twice for the same animation. See:\n    // https://github.com/angular/angular/issues/24084\n    this._panelDoneAnimatingStream.pipe(distinctUntilChanged(), takeUntil(this._destroy)).subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._changeDetectorRef.detectChanges();\n      }\n    });\n  }\n  ngAfterContentInit() {\n    this._initialized.next();\n    this._initialized.complete();\n    this._initKeyManager();\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n  ngDoCheck() {\n    const newAriaLabelledby = this._getTriggerAriaLabelledby();\n    const ngControl = this.ngControl;\n    // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n    // is computed as a result of a content query which can cause this binding to trigger a\n    // \"changed after checked\" error.\n    if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n      const element = this._elementRef.nativeElement;\n      this._triggerAriaLabelledBy = newAriaLabelledby;\n      if (newAriaLabelledby) {\n        element.setAttribute('aria-labelledby', newAriaLabelledby);\n      } else {\n        element.removeAttribute('aria-labelledby');\n      }\n    }\n    if (ngControl) {\n      // The disabled state might go out of sync if the form group is swapped out. See #17860.\n      if (this._previousControl !== ngControl.control) {\n        if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n          this.disabled = ngControl.disabled;\n        }\n        this._previousControl = ngControl.control;\n      }\n      this.updateErrorState();\n    }\n  }\n  ngOnChanges(changes) {\n    // Updating the disabled state is handled by the input, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled'] || changes['userAriaDescribedBy']) {\n      this.stateChanges.next();\n    }\n    if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n      this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n    }\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n    this._clearFromModal();\n  }\n  /** Toggles the overlay panel open or closed. */\n  toggle() {\n    this.panelOpen ? this.close() : this.open();\n  }\n  /** Opens the overlay panel. */\n  open() {\n    if (!this._canOpen()) {\n      return;\n    }\n    // It's important that we read this as late as possible, because doing so earlier will\n    // return a different element since it's based on queries in the form field which may\n    // not have run yet. Also this needs to be assigned before we measure the overlay width.\n    if (this._parentFormField) {\n      this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n    }\n    this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n    this._applyModalPanelOwnership();\n    this._panelOpen = true;\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n    // Required for the MDC form field to pick up when the overlay has been opened.\n    this.stateChanges.next();\n  }\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the reference to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (!this._trackedModal) {\n      // Most commonly, the autocomplete trigger is not used inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    this._trackedModal = null;\n  }\n  /** Closes the overlay panel and focuses the host element. */\n  close() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      // Required for the MDC form field to pick up when the overlay has been closed.\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value) {\n    this._assignValue(value);\n  }\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** Whether or not the overlay panel is open. */\n  get panelOpen() {\n    return this._panelOpen;\n  }\n  /** The currently selected option. */\n  get selected() {\n    return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n  }\n  /** The value displayed in the trigger. */\n  get triggerValue() {\n    if (this.empty) {\n      return '';\n    }\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n  /** Refreshes the error state of the select. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Whether the element is in RTL mode. */\n  _isRtl() {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event) {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n  /** Handles keyboard events while the select is closed. */\n  _handleClosedKeydown(event) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n    // Open the select on ALT + arrow key to match the native <select>\n    if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n      manager.onKeydown(event);\n      const selectedOption = this.selected;\n      // Since the value has changed, we need to announce it ourselves.\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n      }\n    }\n  }\n  /** Handles keyboard events when the selected is open. */\n  _handleOpenKeydown(event) {\n    const manager = this._keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n    this._keyManager?.cancelTypeahead();\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached() {\n    this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n      this._positioningSettled();\n    });\n  }\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme() {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n  /** Whether the select has a value. */\n  get empty() {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n  _initializeSelection() {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl) {\n        this._value = this.ngControl.value;\n      }\n      this._setSelectionByValue(this._value);\n      this.stateChanges.next();\n    });\n  }\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  _setSelectionByValue(value) {\n    this.options.forEach(option => option.setInactiveStyles());\n    this._selectionModel.clear();\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonArrayValueError();\n      }\n      value.forEach(currentValue => this._selectOptionByValue(currentValue));\n      this._sortValues();\n    } else {\n      const correspondingOption = this._selectOptionByValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  _selectOptionByValue(value) {\n    const correspondingOption = this.options.find(option => {\n      // Skip options that are already in the model. This allows us to handle cases\n      // where the same primitive value is selected multiple times.\n      if (this._selectionModel.isSelected(option)) {\n        return false;\n      }\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n  /** Assigns a specific value to the select. Returns whether the value has changed. */\n  _assignValue(newValue) {\n    // Always re-assign an array, because it might have been mutated.\n    if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n      this._value = newValue;\n      return true;\n    }\n    return false;\n  }\n  /** Gets how wide the overlay panel should be. */\n  _getOverlayWidth(preferredOrigin) {\n    if (this.panelWidth === 'auto') {\n      const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n      return refToMeasure.nativeElement.getBoundingClientRect().width;\n    }\n    return this.panelWidth === null ? '' : this.panelWidth;\n  }\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n    this._keyManager.tabOut.subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.close();\n      }\n    });\n    this._keyManager.change.subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  _resetOptions() {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n      // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n      // be the result of an expression changing. We have to use `detectChanges` in order\n      // to avoid \"changed after checked\" errors (see #14793).\n      this._changeDetectorRef.detectChanges();\n      this.stateChanges.next();\n    });\n  }\n  /** Invoked when an option is clicked. */\n  _onSelect(option, isUserInput) {\n    const wasSelected = this._selectionModel.isSelected(option);\n    if (option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n      }\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n      if (this.multiple) {\n        this._sortValues();\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n    this.stateChanges.next();\n  }\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges(fallbackValue) {\n    let valueToEmit;\n    if (this.multiple) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first *enabled* option.\n   */\n  _highlightCorrectOption() {\n    if (this._keyManager) {\n      if (this.empty) {\n        // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n        // because it activates the first option that passes the skip predicate, rather than the\n        // first *enabled* option.\n        let firstEnabledOptionIndex = -1;\n        for (let index = 0; index < this.options.length; index++) {\n          const option = this.options.get(index);\n          if (!option.disabled) {\n            firstEnabledOptionIndex = index;\n            break;\n          }\n        }\n        this._keyManager.setActiveItem(firstEnabledOptionIndex);\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n  /** Whether the panel is allowed to open. */\n  _canOpen() {\n    return !this._panelOpen && !this.disabled && this.options?.length > 0;\n  }\n  /** Focuses the select element. */\n  focus(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Gets the aria-labelledby for the select panel. */\n  _getPanelAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelId = this._parentFormField?.getLabelId();\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant() {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n    return null;\n  }\n  /** Gets the aria-labelledby of the select component trigger. */\n  _getTriggerAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelId = this._parentFormField?.getLabelId();\n    let value = (labelId ? labelId + ' ' : '') + this._valueId;\n    if (this.ariaLabelledby) {\n      value += ' ' + this.ariaLabelledby;\n    }\n    return value;\n  }\n  /** Called when the overlay panel is done animating. */\n  _panelDoneAnimating(isOpen) {\n    this.openedChange.emit(isOpen);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    if (ids.length) {\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    // Since the panel doesn't overlap the trigger, we\n    // want the label to only float when there's a value.\n    return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n  }\n  static {\n    this.ɵfac = function MatSelect_Factory(t) {\n      return new (t || MatSelect)(i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.NgForm, 8), i0.ɵɵdirectiveInject(i4.FormGroupDirective, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), i0.ɵɵdirectiveInject(i4.NgControl, 10), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.LiveAnnouncer), i0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSelect,\n      selectors: [[\"mat-select\"]],\n      contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        }\n      },\n      viewQuery: function MatSelect_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n      hostVars: 19,\n      hostBindings: function MatSelect_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n            return ctx._onFocus();\n          })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n            return ctx._onBlur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n          i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n        }\n      },\n      inputs: {\n        userAriaDescribedBy: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"userAriaDescribedBy\"],\n        panelClass: \"panelClass\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        hideSingleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n        placeholder: \"placeholder\",\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        multiple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"multiple\", \"multiple\", booleanAttribute],\n        disableOptionCentering: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n        compareWith: \"compareWith\",\n        value: \"value\",\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        errorStateMatcher: \"errorStateMatcher\",\n        typeaheadDebounceInterval: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n        sortComparator: \"sortComparator\",\n        id: \"id\",\n        panelWidth: \"panelWidth\"\n      },\n      outputs: {\n        openedChange: \"openedChange\",\n        _openedStream: \"opened\",\n        _closedStream: \"closed\",\n        selectionChange: \"selectionChange\",\n        valueChange: \"valueChange\"\n      },\n      exportAs: [\"matSelect\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatFormFieldControl,\n        useExisting: MatSelect\n      }, {\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatSelect\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c3,\n      decls: 11,\n      vars: 8,\n      consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"attach\", \"detach\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n      template: function MatSelect_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵelementStart(0, \"div\", 2, 0);\n          i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.open());\n          });\n          i0.ɵɵelementStart(3, \"div\", 3);\n          i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 7);\n          i0.ɵɵelement(9, \"path\", 8);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 9, \"ng-template\", 9);\n          i0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          })(\"attach\", function MatSelect_Template_ng_template_attach_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onAttached());\n          })(\"detach\", function MatSelect_Template_ng_template_detach_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          });\n        }\n        if (rf & 2) {\n          const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵattribute(\"id\", ctx._valueId);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(4, ctx.empty ? 4 : 5);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth);\n        }\n      },\n      dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n      styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matSelectAnimations.transformPanel]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelect, [{\n    type: Component,\n    args: [{\n      selector: 'mat-select',\n      exportAs: 'matSelect',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'combobox',\n        'aria-autocomplete': 'none',\n        'aria-haspopup': 'listbox',\n        'class': 'mat-mdc-select',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n        '[attr.aria-expanded]': 'panelOpen',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.aria-required]': 'required.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n        '[class.mat-mdc-select-disabled]': 'disabled',\n        '[class.mat-mdc-select-invalid]': 'errorState',\n        '[class.mat-mdc-select-required]': 'required',\n        '[class.mat-mdc-select-empty]': 'empty',\n        '[class.mat-mdc-select-multiple]': 'multiple',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()'\n      },\n      animations: [matSelectAnimations.transformPanel],\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatSelect\n      }, {\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatSelect\n      }],\n      standalone: true,\n      imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n      template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"]\n    }]\n  }], () => [{\n    type: i1.ViewportRuler\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.ErrorStateMatcher\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i4.NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i4.FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i6.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }]\n  }, {\n    type: i4.NgControl,\n    decorators: [{\n      type: Self\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SELECT_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i5.LiveAnnouncer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SELECT_CONFIG]\n    }]\n  }], {\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    customTrigger: [{\n      type: ContentChild,\n      args: [MAT_SELECT_TRIGGER]\n    }],\n    userAriaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    trigger: [{\n      type: ViewChild,\n      args: ['trigger']\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    _overlayDir: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay]\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableOptionCentering: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    typeaheadDebounceInterval: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    sortComparator: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n  static {\n    this.ɵfac = function MatSelectTrigger_Factory(t) {\n      return new (t || MatSelectTrigger)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSelectTrigger,\n      selectors: [[\"mat-select-trigger\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SELECT_TRIGGER,\n        useExisting: MatSelectTrigger\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectTrigger, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-select-trigger',\n      providers: [{\n        provide: MAT_SELECT_TRIGGER,\n        useExisting: MatSelectTrigger\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MatSelectModule {\n  static {\n    this.ɵfac = function MatSelectModule_Factory(t) {\n      return new (t || MatSelectModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSelectModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n      imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n      exports: [CdkScrollableModule, MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, matSelectAnimations };\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst _c0 = [\"tooltip\"];\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n  }\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition({\n    scrollThrottle: SCROLL_THROTTLE_MS\n  });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n  };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n  providedIn: 'root',\n  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    if (value !== this._position) {\n      this._position = value;\n      if (this._overlayRef) {\n        this._updatePosition(this._overlayRef);\n        this._tooltipInstance?.show(0);\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n  /**\n   * Whether tooltip should be relative to the click or touch origin\n   * instead of outside the element bounding box.\n   */\n  get positionAtOrigin() {\n    return this._positionAtOrigin;\n  }\n  set positionAtOrigin(value) {\n    this._positionAtOrigin = coerceBooleanProperty(value);\n    this._detach();\n    this._overlayRef = null;\n  }\n  /** Disables the display of the tooltip. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n    }\n  }\n  /** The default delay in ms before showing the tooltip after show is called */\n  get showDelay() {\n    return this._showDelay;\n  }\n  set showDelay(value) {\n    this._showDelay = coerceNumberProperty(value);\n  }\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  get hideDelay() {\n    return this._hideDelay;\n  }\n  set hideDelay(value) {\n    this._hideDelay = coerceNumberProperty(value);\n    if (this._tooltipInstance) {\n      this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n    }\n  }\n  /** The message to be displayed in the tooltip */\n  get message() {\n    return this._message;\n  }\n  set message(value) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n    // away the string-conversion: https://github.com/angular/components/issues/20684\n    this._message = value != null ? String(value).trim() : '';\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n      this._updateTooltipMessage();\n      this._ngZone.runOutsideAngular(() => {\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        Promise.resolve().then(() => {\n          this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n        });\n      });\n    }\n  }\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  get tooltipClass() {\n    return this._tooltipClass;\n  }\n  set tooltipClass(value) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n  constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n    this._overlay = _overlay;\n    this._elementRef = _elementRef;\n    this._scrollDispatcher = _scrollDispatcher;\n    this._viewContainerRef = _viewContainerRef;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._ariaDescriber = _ariaDescriber;\n    this._focusMonitor = _focusMonitor;\n    this._dir = _dir;\n    this._defaultOptions = _defaultOptions;\n    this._position = 'below';\n    this._positionAtOrigin = false;\n    this._disabled = false;\n    this._viewInitialized = false;\n    this._pointerExitEventsInitialized = false;\n    this._tooltipComponent = TooltipComponent;\n    this._viewportMargin = 8;\n    this._cssClassPrefix = 'mat-mdc';\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     */\n    this.touchGestures = 'auto';\n    this._message = '';\n    /** Manually-bound passive event listeners. */\n    this._passiveListeners = [];\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    this._scrollStrategy = scrollStrategy;\n    this._document = _document;\n    if (_defaultOptions) {\n      this._showDelay = _defaultOptions.showDelay;\n      this._hideDelay = _defaultOptions.hideDelay;\n      if (_defaultOptions.position) {\n        this.position = _defaultOptions.position;\n      }\n      if (_defaultOptions.positionAtOrigin) {\n        this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n      }\n      if (_defaultOptions.touchGestures) {\n        this.touchGestures = _defaultOptions.touchGestures;\n      }\n    }\n    _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (this._overlayRef) {\n        this._updatePosition(this._overlayRef);\n      }\n    });\n    this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n  }\n  ngAfterViewInit() {\n    // This needs to happen after view init so the initial values for all inputs have been set.\n    this._viewInitialized = true;\n    this._setupPointerEnterEventsIfNeeded();\n    this._focusMonitor.monitor(this._elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        this._ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        this._ngZone.run(() => this.show());\n      }\n    });\n  }\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    const nativeElement = this._elementRef.nativeElement;\n    clearTimeout(this._touchstartTimeout);\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n    // Clean up the event listeners set in the constructor\n    this._passiveListeners.forEach(([event, listener]) => {\n      nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n    });\n    this._passiveListeners.length = 0;\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n    this._focusMonitor.stopMonitoring(nativeElement);\n  }\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay = this.showDelay, origin) {\n    if (this.disabled || !this.message || this._isTooltipVisible()) {\n      this._tooltipInstance?._cancelPendingAnimations();\n      return;\n    }\n    const overlayRef = this._createOverlay(origin);\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n    const instance = this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    instance._triggerElement = this._elementRef.nativeElement;\n    instance._mouseLeaveHideDelay = this._hideDelay;\n    instance.afterHidden().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    instance.show(delay);\n  }\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay = this.hideDelay) {\n    const instance = this._tooltipInstance;\n    if (instance) {\n      if (instance.isVisible()) {\n        instance.hide(delay);\n      } else {\n        instance._cancelPendingAnimations();\n        this._detach();\n      }\n    }\n  }\n  /** Shows/hides the tooltip */\n  toggle(origin) {\n    this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n  }\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible() {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n  /** Create the overlay config and position strategy */\n  _createOverlay(origin) {\n    if (this._overlayRef) {\n      const existingStrategy = this._overlayRef.getConfig().positionStrategy;\n      if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n        return this._overlayRef;\n      }\n      this._detach();\n    }\n    const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position().flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(false).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      this._updateCurrentPositionClass(change.connectionPair);\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n      scrollStrategy: this._scrollStrategy()\n    });\n    this._updatePosition(this._overlayRef);\n    this._overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n    this._overlayRef.outsidePointerEvents().pipe(takeUntil(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n    this._overlayRef.keydownEvents().pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._ngZone.run(() => this.hide(0));\n      }\n    });\n    if (this._defaultOptions?.disableTooltipInteractivity) {\n      this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n    }\n    return this._overlayRef;\n  }\n  /** Detaches the currently-attached tooltip. */\n  _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n    this._tooltipInstance = null;\n  }\n  /** Updates the position of the current tooltip. */\n  _updatePosition(overlayRef) {\n    const position = overlayRef.getConfig().positionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n    position.withPositions([this._addOffset({\n      ...origin.main,\n      ...overlay.main\n    }), this._addOffset({\n      ...origin.fallback,\n      ...overlay.fallback\n    })]);\n  }\n  /** Adds the configured offset to a position. Used as a hook for child classes. */\n  _addOffset(position) {\n    const offset = UNBOUNDED_ANCHOR_GAP;\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    if (position.originY === 'top') {\n      position.offsetY = -offset;\n    } else if (position.originY === 'bottom') {\n      position.offsetY = offset;\n    } else if (position.originX === 'start') {\n      position.offsetX = isLtr ? -offset : offset;\n    } else if (position.originX === 'end') {\n      position.offsetX = isLtr ? offset : -offset;\n    }\n    return position;\n  }\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin() {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition;\n    if (position == 'above' || position == 'below') {\n      originPosition = {\n        originX: 'center',\n        originY: position == 'above' ? 'top' : 'bottom'\n      };\n    } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n      originPosition = {\n        originX: 'start',\n        originY: 'center'\n      };\n    } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n      originPosition = {\n        originX: 'end',\n        originY: 'center'\n      };\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n    const {\n      x,\n      y\n    } = this._invertPosition(originPosition.originX, originPosition.originY);\n    return {\n      main: originPosition,\n      fallback: {\n        originX: x,\n        originY: y\n      }\n    };\n  }\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition() {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition;\n    if (position == 'above') {\n      overlayPosition = {\n        overlayX: 'center',\n        overlayY: 'bottom'\n      };\n    } else if (position == 'below') {\n      overlayPosition = {\n        overlayX: 'center',\n        overlayY: 'top'\n      };\n    } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n      overlayPosition = {\n        overlayX: 'end',\n        overlayY: 'center'\n      };\n    } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n      overlayPosition = {\n        overlayX: 'start',\n        overlayY: 'center'\n      };\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n    const {\n      x,\n      y\n    } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n    return {\n      main: overlayPosition,\n      fallback: {\n        overlayX: x,\n        overlayY: y\n      }\n    };\n  }\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n      this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef.updatePosition();\n        }\n      });\n    }\n  }\n  /** Updates the tooltip class */\n  _setTooltipClass(tooltipClass) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n  /** Inverts an overlay position. */\n  _invertPosition(x, y) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the class on the overlay panel based on the current position of the tooltip. */\n  _updateCurrentPositionClass(connectionPair) {\n    const {\n      overlayY,\n      originX,\n      originY\n    } = connectionPair;\n    let newPosition;\n    // If the overlay is in the middle along the Y axis,\n    // it means that it's either before or after.\n    if (overlayY === 'center') {\n      // Note that since this information is used for styling, we want to\n      // resolve `start` and `end` to their real values, otherwise consumers\n      // would have to remember to do it themselves on each consumption.\n      if (this._dir && this._dir.value === 'rtl') {\n        newPosition = originX === 'end' ? 'left' : 'right';\n      } else {\n        newPosition = originX === 'start' ? 'left' : 'right';\n      }\n    } else {\n      newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n    }\n    if (newPosition !== this._currentPosition) {\n      const overlayRef = this._overlayRef;\n      if (overlayRef) {\n        const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n        overlayRef.removePanelClass(classPrefix + this._currentPosition);\n        overlayRef.addPanelClass(classPrefix + newPosition);\n      }\n      this._currentPosition = newPosition;\n    }\n  }\n  /** Binds the pointer events to the tooltip trigger. */\n  _setupPointerEnterEventsIfNeeded() {\n    // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n    if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {\n      return;\n    }\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (this._platformSupportsMouseEvents()) {\n      this._passiveListeners.push(['mouseenter', event => {\n        this._setupPointerExitEventsIfNeeded();\n        let point = undefined;\n        if (event.x !== undefined && event.y !== undefined) {\n          point = event;\n        }\n        this.show(undefined, point);\n      }]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      this._passiveListeners.push(['touchstart', event => {\n        const touch = event.targetTouches?.[0];\n        const origin = touch ? {\n          x: touch.clientX,\n          y: touch.clientY\n        } : undefined;\n        // Note that it's important that we don't `preventDefault` here,\n        // because it can prevent click events from firing on the element.\n        this._setupPointerExitEventsIfNeeded();\n        clearTimeout(this._touchstartTimeout);\n        const DEFAULT_LONGPRESS_DELAY = 500;\n        this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n      }]);\n    }\n    this._addListeners(this._passiveListeners);\n  }\n  _setupPointerExitEventsIfNeeded() {\n    if (this._pointerExitEventsInitialized) {\n      return;\n    }\n    this._pointerExitEventsInitialized = true;\n    const exitListeners = [];\n    if (this._platformSupportsMouseEvents()) {\n      exitListeners.push(['mouseleave', event => {\n        const newTarget = event.relatedTarget;\n        if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n          this.hide();\n        }\n      }], ['wheel', event => this._wheelListener(event)]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      const touchendListener = () => {\n        clearTimeout(this._touchstartTimeout);\n        this.hide(this._defaultOptions.touchendHideDelay);\n      };\n      exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n    }\n    this._addListeners(exitListeners);\n    this._passiveListeners.push(...exitListeners);\n  }\n  _addListeners(listeners) {\n    listeners.forEach(([event, listener]) => {\n      this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n    });\n  }\n  _platformSupportsMouseEvents() {\n    return !this._platform.IOS && !this._platform.ANDROID;\n  }\n  /** Listener for the `wheel` event on the element. */\n  _wheelListener(event) {\n    if (this._isTooltipVisible()) {\n      const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n      const element = this._elementRef.nativeElement;\n      // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n      // won't fire if the user scrolls away using the wheel without moving their cursor. We\n      // work around it by finding the element under the user's cursor and closing the tooltip\n      // if it's not the trigger.\n      if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n        this.hide();\n      }\n    }\n  }\n  /** Disables the native browser gestures, based on how the tooltip has been configured. */\n  _disableNativeGesturesIfNecessary() {\n    const gestures = this.touchGestures;\n    if (gestures !== 'off') {\n      const element = this._elementRef.nativeElement;\n      const style = element.style;\n      // If gestures are set to `auto`, we don't disable text selection on inputs and\n      // textareas, because it prevents the user from typing into them on iOS Safari.\n      if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {\n        style.userSelect = style.msUserSelect = style.webkitUserSelect = style.MozUserSelect = 'none';\n      }\n      // If we have `auto` gestures and the element uses native HTML dragging,\n      // we don't set `-webkit-user-drag` because it prevents the native behavior.\n      if (gestures === 'on' || !element.draggable) {\n        style.webkitUserDrag = 'none';\n      }\n      style.touchAction = 'none';\n      style.webkitTapHighlightColor = 'transparent';\n    }\n  }\n  static {\n    this.ɵfac = function MatTooltip_Factory(t) {\n      return new (t || MatTooltip)(i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.AriaDescriber), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i4.Directionality), i0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTooltip,\n      selectors: [[\"\", \"matTooltip\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-tooltip-trigger\"],\n      hostVars: 2,\n      hostBindings: function MatTooltip_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tooltip-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        position: [i0.ɵɵInputFlags.None, \"matTooltipPosition\", \"position\"],\n        positionAtOrigin: [i0.ɵɵInputFlags.None, \"matTooltipPositionAtOrigin\", \"positionAtOrigin\"],\n        disabled: [i0.ɵɵInputFlags.None, \"matTooltipDisabled\", \"disabled\"],\n        showDelay: [i0.ɵɵInputFlags.None, \"matTooltipShowDelay\", \"showDelay\"],\n        hideDelay: [i0.ɵɵInputFlags.None, \"matTooltipHideDelay\", \"hideDelay\"],\n        touchGestures: [i0.ɵɵInputFlags.None, \"matTooltipTouchGestures\", \"touchGestures\"],\n        message: [i0.ɵɵInputFlags.None, \"matTooltip\", \"message\"],\n        tooltipClass: [i0.ɵɵInputFlags.None, \"matTooltipClass\", \"tooltipClass\"]\n      },\n      exportAs: [\"matTooltip\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[matTooltip]',\n      exportAs: 'matTooltip',\n      host: {\n        'class': 'mat-mdc-tooltip-trigger',\n        '[class.mat-mdc-tooltip-disabled]': 'disabled'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i1.Overlay\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.ScrollDispatcher\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.Platform\n  }, {\n    type: i3.AriaDescriber\n  }, {\n    type: i3.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i4.Directionality\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    position: [{\n      type: Input,\n      args: ['matTooltipPosition']\n    }],\n    positionAtOrigin: [{\n      type: Input,\n      args: ['matTooltipPositionAtOrigin']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matTooltipDisabled']\n    }],\n    showDelay: [{\n      type: Input,\n      args: ['matTooltipShowDelay']\n    }],\n    hideDelay: [{\n      type: Input,\n      args: ['matTooltipHideDelay']\n    }],\n    touchGestures: [{\n      type: Input,\n      args: ['matTooltipTouchGestures']\n    }],\n    message: [{\n      type: Input,\n      args: ['matTooltip']\n    }],\n    tooltipClass: [{\n      type: Input,\n      args: ['matTooltipClass']\n    }]\n  });\n})();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n  constructor(_changeDetectorRef, _elementRef, animationMode) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    /* Whether the tooltip text overflows to multiple lines */\n    this._isMultiline = false;\n    /** Whether interactions on the page should close the tooltip */\n    this._closeOnInteraction = false;\n    /** Whether the tooltip is currently visible. */\n    this._isVisible = false;\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    this._onHide = new Subject();\n    /** Name of the show animation and the class that toggles it. */\n    this._showAnimation = 'mat-mdc-tooltip-show';\n    /** Name of the hide animation and the class that toggles it. */\n    this._hideAnimation = 'mat-mdc-tooltip-hide';\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n  }\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay) {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId != null) {\n      clearTimeout(this._hideTimeoutId);\n    }\n    this._showTimeoutId = setTimeout(() => {\n      this._toggleVisibility(true);\n      this._showTimeoutId = undefined;\n    }, delay);\n  }\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay) {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId != null) {\n      clearTimeout(this._showTimeoutId);\n    }\n    this._hideTimeoutId = setTimeout(() => {\n      this._toggleVisibility(false);\n      this._hideTimeoutId = undefined;\n    }, delay);\n  }\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden() {\n    return this._onHide;\n  }\n  /** Whether the tooltip is being displayed. */\n  isVisible() {\n    return this._isVisible;\n  }\n  ngOnDestroy() {\n    this._cancelPendingAnimations();\n    this._onHide.complete();\n    this._triggerElement = null;\n  }\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction() {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck() {\n    this._changeDetectorRef.markForCheck();\n  }\n  _handleMouseLeave({\n    relatedTarget\n  }) {\n    if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n      if (this.isVisible()) {\n        this.hide(this._mouseLeaveHideDelay);\n      } else {\n        this._finalizeAnimation(false);\n      }\n    }\n  }\n  /**\n   * Callback for when the timeout in this.show() gets completed.\n   * This method is only needed by the mdc-tooltip, and so it is only implemented\n   * in the mdc-tooltip, not here.\n   */\n  _onShow() {\n    this._isMultiline = this._isTooltipMultiline();\n    this._markForCheck();\n  }\n  /** Whether the tooltip text has overflown to the next line */\n  _isTooltipMultiline() {\n    const rect = this._elementRef.nativeElement.getBoundingClientRect();\n    return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n  }\n  /** Event listener dispatched when an animation on the tooltip finishes. */\n  _handleAnimationEnd({\n    animationName\n  }) {\n    if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n      this._finalizeAnimation(animationName === this._showAnimation);\n    }\n  }\n  /** Cancels any pending animation sequences. */\n  _cancelPendingAnimations() {\n    if (this._showTimeoutId != null) {\n      clearTimeout(this._showTimeoutId);\n    }\n    if (this._hideTimeoutId != null) {\n      clearTimeout(this._hideTimeoutId);\n    }\n    this._showTimeoutId = this._hideTimeoutId = undefined;\n  }\n  /** Handles the cleanup after an animation has finished. */\n  _finalizeAnimation(toVisible) {\n    if (toVisible) {\n      this._closeOnInteraction = true;\n    } else if (!this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n  /** Toggles the visibility of the tooltip element. */\n  _toggleVisibility(isVisible) {\n    // We set the classes directly here ourselves so that toggling the tooltip state\n    // isn't bound by change detection. This allows us to hide it even if the\n    // view ref has been detached from the CD tree.\n    const tooltip = this._tooltip.nativeElement;\n    const showClass = this._showAnimation;\n    const hideClass = this._hideAnimation;\n    tooltip.classList.remove(isVisible ? hideClass : showClass);\n    tooltip.classList.add(isVisible ? showClass : hideClass);\n    if (this._isVisible !== isVisible) {\n      this._isVisible = isVisible;\n      this._changeDetectorRef.markForCheck();\n    }\n    // It's common for internal apps to disable animations using `* { animation: none !important }`\n    // which can break the opening sequence. Try to detect such cases and work around them.\n    if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n      const styles = getComputedStyle(tooltip);\n      // Use `getPropertyValue` to avoid issues with property renaming.\n      if (styles.getPropertyValue('animation-duration') === '0s' || styles.getPropertyValue('animation-name') === 'none') {\n        this._animationsDisabled = true;\n      }\n    }\n    if (isVisible) {\n      this._onShow();\n    }\n    if (this._animationsDisabled) {\n      tooltip.classList.add('_mat-animation-noopable');\n      this._finalizeAnimation(isVisible);\n    }\n  }\n  static {\n    this.ɵfac = function TooltipComponent_Factory(t) {\n      return new (t || TooltipComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TooltipComponent,\n      selectors: [[\"mat-tooltip-component\"]],\n      viewQuery: function TooltipComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tooltip = _t.first);\n        }\n      },\n      hostAttrs: [\"aria-hidden\", \"true\"],\n      hostVars: 2,\n      hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseleave\", function TooltipComponent_mouseleave_HostBindingHandler($event) {\n            return ctx._handleMouseLeave($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"zoom\", ctx.isVisible() ? 1 : null);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 4,\n      consts: [[\"tooltip\", \"\"], [1, \"mdc-tooltip\", \"mdc-tooltip--shown\", \"mat-mdc-tooltip\", 3, \"animationend\", \"ngClass\"], [1, \"mdc-tooltip__surface\", \"mdc-tooltip__surface-animation\"]],\n      template: function TooltipComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵlistener(\"animationend\", function TooltipComponent_Template_div_animationend_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleAnimationEnd($event));\n          });\n          i0.ɵɵelementStart(2, \"div\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-tooltip--multiline\", ctx._isMultiline);\n          i0.ɵɵproperty(\"ngClass\", ctx.tooltipClass);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.message);\n        }\n      },\n      dependencies: [NgClass],\n      styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tooltip-component',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n        '[style.zoom]': 'isVisible() ? 1 : null',\n        '(mouseleave)': '_handleMouseLeave($event)',\n        'aria-hidden': 'true'\n      },\n      standalone: true,\n      imports: [NgClass],\n      template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\",\n      styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _tooltip: [{\n      type: ViewChild,\n      args: ['tooltip', {\n        // Use a static query here since we interact directly with\n        // the DOM which can happen before `ngAfterViewInit`.\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n  // TODO(crisbeto): these values are based on MDC's CSS.\n  // We should be able to use their styles directly once we land #19432.\n  state('initial, void, hidden', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), state('visible', style({\n    transform: 'scale(1)'\n  })), transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')), transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)'))])\n};\nclass MatTooltipModule {\n  static {\n    this.ɵfac = function MatTooltipModule_Factory(t) {\n      return new (t || MatTooltipModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTooltipModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n      exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n      providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 13)(1, \"mat-select\", 15);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(2, MatPaginator_Conditional_2_Conditional_3_For_3_Template, 2, 2, \"mat-option\", 16, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 4, 7, \"mat-form-field\", 13)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(3, ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(4, ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.firstPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 7);\n    i0.ɵɵelement(2, \"path\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.lastPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 7);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._nextButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nclass MatPaginatorIntl {\n  constructor() {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    this.changes = new Subject();\n    /** A label for the page size selector. */\n    this.itemsPerPageLabel = 'Items per page:';\n    /** A label for the button that increments the current page. */\n    this.nextPageLabel = 'Next page';\n    /** A label for the button that decrements the current page. */\n    this.previousPageLabel = 'Previous page';\n    /** A label for the button that moves to the first page. */\n    this.firstPageLabel = 'First page';\n    /** A label for the button that moves to the last page. */\n    this.lastPageLabel = 'Last page';\n    /** A label for the range of items within the current page and the length of the whole list. */\n    this.getRangeLabel = (page, pageSize, length) => {\n      if (length == 0 || pageSize == 0) {\n        return `0 of ${length}`;\n      }\n      length = Math.max(length, 0);\n      const startIndex = page * pageSize;\n      // If the start index exceeds the list length, do not try and fix the end index to the end.\n      const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n      return `${startIndex + 1} – ${endIndex} of ${length}`;\n    };\n  }\n  static {\n    this.ɵfac = function MatPaginatorIntl_Factory(t) {\n      return new (t || MatPaginatorIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatPaginatorIntl,\n      factory: MatPaginatorIntl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  get pageIndex() {\n    return this._pageIndex;\n  }\n  set pageIndex(value) {\n    this._pageIndex = Math.max(value || 0, 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  get length() {\n    return this._length;\n  }\n  set length(value) {\n    this._length = value || 0;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Number of items to display on a page. By default set to 50. */\n  get pageSize() {\n    return this._pageSize;\n  }\n  set pageSize(value) {\n    this._pageSize = Math.max(value || 0, 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  /** The set of provided page size options to display to the user. */\n  get pageSizeOptions() {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value) {\n    this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n    this._updateDisplayedPageSizeOptions();\n  }\n  constructor(_intl, _changeDetectorRef, defaults) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** ID for the DOM node containing the paginator's items per page label. */\n    this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n    this._isInitialized = false;\n    this._initializedStream = new ReplaySubject(1);\n    this._pageIndex = 0;\n    this._length = 0;\n    this._pageSizeOptions = [];\n    /** Whether to hide the page size selection UI from the user. */\n    this.hidePageSize = false;\n    /** Whether to show the first/last buttons UI to the user. */\n    this.showFirstLastButtons = false;\n    /** Used to configure the underlying `MatSelect` inside the paginator. */\n    this.selectConfig = {};\n    /** Whether the paginator is disabled. */\n    this.disabled = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n    this.page = new EventEmitter();\n    /** Emits when the paginator is initialized. */\n    this.initialized = this._initializedStream;\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n    if (defaults) {\n      const {\n        pageSize,\n        pageSizeOptions,\n        hidePageSize,\n        showFirstLastButtons\n      } = defaults;\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n      if (hidePageSize != null) {\n        this.hidePageSize = hidePageSize;\n      }\n      if (showFirstLastButtons != null) {\n        this.showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n    this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._initializedStream.next();\n  }\n  ngOnDestroy() {\n    this._initializedStream.complete();\n    this._intlChanges.unsubscribe();\n  }\n  /** Advances to the next page if it exists. */\n  nextPage() {\n    if (!this.hasNextPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex + 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move back to the previous page if it exists. */\n  previousPage() {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move to the first page if not already there. */\n  firstPage() {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move to the last page if not already there. */\n  lastPage() {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Whether there is a previous page. */\n  hasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n  /** Whether there is a next page. */\n  hasNextPage() {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n  /** Calculate the number of pages */\n  getNumberOfPages() {\n    if (!this.pageSize) {\n      return 0;\n    }\n    return Math.ceil(this.length / this.pageSize);\n  }\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  _updateDisplayedPageSizeOptions() {\n    if (!this._isInitialized) {\n      return;\n    }\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  _emitPageEvent(previousPageIndex) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n  static {\n    this.ɵfac = function MatPaginator_Factory(t) {\n      return new (t || MatPaginator)(i0.ɵɵdirectiveInject(MatPaginatorIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatPaginator,\n      selectors: [[\"mat-paginator\"]],\n      hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n      inputs: {\n        color: \"color\",\n        pageIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"pageIndex\", \"pageIndex\", numberAttribute],\n        length: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"length\", \"length\", numberAttribute],\n        pageSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"pageSize\", \"pageSize\", numberAttribute],\n        pageSizeOptions: \"pageSizeOptions\",\n        hidePageSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n        showFirstLastButtons: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n        selectConfig: \"selectConfig\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        page: \"page\"\n      },\n      exportAs: [\"matPaginator\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 14,\n      consts: [[1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n      template: function MatPaginator_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 5, \"button\", 5);\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n            return ctx.previousPage();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 7);\n          i0.ɵɵelement(9, \"path\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(10, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n            return ctx.nextPage();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(11, \"svg\", 7);\n          i0.ɵɵelement(12, \"path\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 5, \"button\", 11);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(2, !ctx.hidePageSize ? 2 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(6, ctx.showFirstLastButtons ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n          i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n          i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(13, ctx.showFirstLastButtons ? 13 : -1);\n        }\n      },\n      dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginator, [{\n    type: Component,\n    args: [{\n      selector: 'mat-paginator',\n      exportAs: 'matPaginator',\n      host: {\n        'class': 'mat-mdc-paginator',\n        'role': 'group'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"]\n    }]\n  }], () => [{\n    type: MatPaginatorIntl\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    pageIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    length: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSizeOptions: [{\n      type: Input\n    }],\n    hidePageSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastButtons: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectConfig: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    page: [{\n      type: Output\n    }]\n  });\n})();\nclass MatPaginatorModule {\n  static {\n    this.ɵfac = function MatPaginatorModule_Factory(t) {\n      return new (t || MatPaginatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatPaginatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_PAGINATOR_INTL_PROVIDER],\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n      exports: [MatPaginator],\n      providers: [MAT_PAGINATOR_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst _c0 = [\"determinateSpinner\"];\nfunction MatProgressSpinner_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵelement(1, \"circle\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"viewBox\", ctx_r0._viewBox());\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"stroke-dasharray\", ctx_r0._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx_r0._strokeCircumference() / 2, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth(), \"%\");\n    i0.ɵɵattribute(\"r\", ctx_r0._circleRadius());\n  }\n}\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    diameter: BASE_SIZE\n  };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /** Theme palette color of the progress spinner. */\n  get color() {\n    return this._color || this._defaultColor;\n  }\n  set color(value) {\n    this._color = value;\n  }\n  constructor(_elementRef, animationMode, defaults) {\n    this._elementRef = _elementRef;\n    this._defaultColor = 'primary';\n    this._value = 0;\n    this._diameter = BASE_SIZE;\n    this._noopAnimations = animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n    this.mode = _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner' ? 'indeterminate' : 'determinate';\n    if (defaults) {\n      if (defaults.color) {\n        this.color = this._defaultColor = defaults.color;\n      }\n      if (defaults.diameter) {\n        this.diameter = defaults.diameter;\n      }\n      if (defaults.strokeWidth) {\n        this.strokeWidth = defaults.strokeWidth;\n      }\n    }\n  }\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  get value() {\n    return this.mode === 'determinate' ? this._value : 0;\n  }\n  set value(v) {\n    this._value = Math.max(0, Math.min(100, v || 0));\n  }\n  /** The diameter of the progress spinner (will set width and height of svg). */\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(size) {\n    this._diameter = size || 0;\n  }\n  /** Stroke width of the progress spinner. */\n  get strokeWidth() {\n    return this._strokeWidth ?? this.diameter / 10;\n  }\n  set strokeWidth(value) {\n    this._strokeWidth = value || 0;\n  }\n  /** The radius of the spinner, adjusted for stroke width. */\n  _circleRadius() {\n    return (this.diameter - BASE_STROKE_WIDTH) / 2;\n  }\n  /** The view box of the spinner's svg element. */\n  _viewBox() {\n    const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n    return `0 0 ${viewBox} ${viewBox}`;\n  }\n  /** The stroke circumference of the svg circle. */\n  _strokeCircumference() {\n    return 2 * Math.PI * this._circleRadius();\n  }\n  /** The dash offset of the svg circle. */\n  _strokeDashOffset() {\n    if (this.mode === 'determinate') {\n      return this._strokeCircumference() * (100 - this._value) / 100;\n    }\n    return null;\n  }\n  /** Stroke width of the circle in percent. */\n  _circleStrokeWidth() {\n    return this.strokeWidth / this.diameter * 100;\n  }\n  static {\n    this.ɵfac = function MatProgressSpinner_Factory(t) {\n      return new (t || MatProgressSpinner)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatProgressSpinner,\n      selectors: [[\"mat-progress-spinner\"], [\"mat-spinner\"]],\n      viewQuery: function MatProgressSpinner_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._determinateCircle = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-spinner\", \"mdc-circular-progress\"],\n      hostVars: 18,\n      hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuemin\", 0)(\"aria-valuemax\", 100)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n          i0.ɵɵclassMap(\"mat-\" + ctx.color);\n          i0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\")(\"--mdc-circular-progress-size\", ctx.diameter + \"px\")(\"--mdc-circular-progress-active-indicator-width\", ctx.diameter + \"px\");\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mdc-circular-progress--indeterminate\", ctx.mode === \"indeterminate\");\n        }\n      },\n      inputs: {\n        color: \"color\",\n        mode: \"mode\",\n        value: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"value\", \"value\", numberAttribute],\n        diameter: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"diameter\", \"diameter\", numberAttribute],\n        strokeWidth: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"strokeWidth\", \"strokeWidth\", numberAttribute]\n      },\n      exportAs: [\"matProgressSpinner\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 11,\n      consts: [[\"circle\", \"\"], [\"determinateSpinner\", \"\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__determinate-container\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__determinate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\", 1, \"mdc-circular-progress__determinate-circle\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__indeterminate-container\"], [1, \"mdc-circular-progress__spinner-layer\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-left\"], [3, \"ngTemplateOutlet\"], [1, \"mdc-circular-progress__gap-patch\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-right\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__indeterminate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\"]],\n      template: function MatProgressSpinner_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, MatProgressSpinner_ng_template_0_Template, 2, 8, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(2, \"div\", 2, 1);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(4, \"svg\", 3);\n          i0.ɵɵelement(5, \"circle\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n          i0.ɵɵelementContainer(9, 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 9);\n          i0.ɵɵelementContainer(11, 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 10);\n          i0.ɵɵelementContainer(13, 8);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const circle_r2 = i0.ɵɵreference(1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵattribute(\"viewBox\", ctx._viewBox());\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"stroke-dasharray\", ctx._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx._strokeDashOffset(), \"px\")(\"stroke-width\", ctx._circleStrokeWidth(), \"%\");\n          i0.ɵɵattribute(\"r\", ctx._circleRadius());\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressSpinner, [{\n    type: Component,\n    args: [{\n      selector: 'mat-progress-spinner, mat-spinner',\n      exportAs: 'matProgressSpinner',\n      host: {\n        'role': 'progressbar',\n        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n        // set tab index to -1 so screen readers will read the aria-label\n        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n        'tabindex': '-1',\n        '[class]': '\"mat-\" + color',\n        '[class._mat-animation-noopable]': `_noopAnimations`,\n        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n        '[style.width.px]': 'diameter',\n        '[style.height.px]': 'diameter',\n        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuemax]': '100',\n        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n        '[attr.mode]': 'mode'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [NgTemplateOutlet],\n      template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    _determinateCircle: [{\n      type: ViewChild,\n      args: ['determinateSpinner']\n    }],\n    mode: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    diameter: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    strokeWidth: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }]\n  });\n})();\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\nclass MatProgressSpinnerModule {\n  static {\n    this.ɵfac = function MatProgressSpinnerModule_Factory(t) {\n      return new (t || MatProgressSpinnerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatProgressSpinnerModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatProgressSpinner, MatSpinner],\n      exports: [MatProgressSpinner, MatSpinner, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatSortHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = true);\n    })(\"@arrowPosition.done\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = false);\n    });\n    i0.ɵɵelement(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelement(3, \"div\", 5)(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@arrowOpacity\", ctx_r1._getArrowViewState())(\"@arrowPosition\", ctx_r1._getArrowViewState())(\"@allowChildren\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"@indicator\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@leftPointer\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@rightPointer\", ctx_r1._getArrowDirectionState());\n  }\n}\nfunction getSortDuplicateSortableIdError(id) {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n  /** The sort direction of the currently active MatSortable. */\n  get direction() {\n    return this._direction;\n  }\n  set direction(direction) {\n    if (direction && direction !== 'asc' && direction !== 'desc' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  constructor(_defaultOptions) {\n    this._defaultOptions = _defaultOptions;\n    this._initializedStream = new ReplaySubject(1);\n    /** Collection of all registered sortables that this directive manages. */\n    this.sortables = new Map();\n    /** Used to notify any child components listening to state changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overridden by the MatSortable's sort start.\n     */\n    this.start = 'asc';\n    this._direction = '';\n    /** Whether the sortable is disabled. */\n    this.disabled = false;\n    /** Event emitted when the user changes either the active sort or sort direction. */\n    this.sortChange = new EventEmitter();\n    /** Emits when the paginator is initialized. */\n    this.initialized = this._initializedStream;\n  }\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!sortable.id) {\n        throw getSortHeaderMissingIdError();\n      }\n      if (this.sortables.has(sortable.id)) {\n        throw getSortDuplicateSortableIdError(sortable.id);\n      }\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable) {\n    this.sortables.delete(sortable.id);\n  }\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable) {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n    this.sortChange.emit({\n      active: this.active,\n      direction: this.direction\n    });\n  }\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable) {\n    if (!sortable) {\n      return '';\n    }\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n  ngOnInit() {\n    this._initializedStream.next();\n  }\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._initializedStream.complete();\n  }\n  static {\n    this.ɵfac = function MatSort_Factory(t) {\n      return new (t || MatSort)(i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSort,\n      selectors: [[\"\", \"matSort\", \"\"]],\n      hostAttrs: [1, \"mat-sort\"],\n      inputs: {\n        active: [i0.ɵɵInputFlags.None, \"matSortActive\", \"active\"],\n        start: [i0.ɵɵInputFlags.None, \"matSortStart\", \"start\"],\n        direction: [i0.ɵɵInputFlags.None, \"matSortDirection\", \"direction\"],\n        disableClear: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matSortDisableClear\", \"disableClear\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matSortDisabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        sortChange: \"matSortChange\"\n      },\n      exportAs: [\"matSort\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSort, [{\n    type: Directive,\n    args: [{\n      selector: '[matSort]',\n      exportAs: 'matSort',\n      host: {\n        'class': 'mat-sort'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SORT_DEFAULT_OPTIONS]\n    }]\n  }], {\n    active: [{\n      type: Input,\n      args: ['matSortActive']\n    }],\n    start: [{\n      type: Input,\n      args: ['matSortStart']\n    }],\n    direction: [{\n      type: Input,\n      args: ['matSortDirection']\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisableClear',\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortChange: [{\n      type: Output,\n      args: ['matSortChange']\n    }]\n  });\n})();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n  let sortOrder = ['asc', 'desc'];\n  if (start == 'desc') {\n    sortOrder.reverse();\n  }\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n  return sortOrder;\n}\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [state('active-asc, asc', style({\n    transform: 'translateY(0px)'\n  })),\n  // 10px is the height of the sort indicator, minus the width of the pointers\n  state('active-desc, desc', style({\n    transform: 'translateY(10px)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [state('active-asc, asc', style({\n    transform: 'rotate(-45deg)'\n  })), state('active-desc, desc', style({\n    transform: 'rotate(45deg)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [state('active-asc, asc', style({\n    transform: 'rotate(45deg)'\n  })), state('active-desc, desc', style({\n    transform: 'rotate(-45deg)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: trigger('arrowOpacity', [state('desc-to-active, asc-to-active, active', style({\n    opacity: 1\n  })), state('desc-to-hint, asc-to-hint, hint', style({\n    opacity: 0.54\n  })), state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({\n    opacity: 0\n  })),\n  // Transition between all states except for immediate transitions\n  transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')), transition('* <=> *', animate(SORT_ANIMATION_TRANSITION))]),\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: trigger('arrowPosition', [\n  // Hidden Above => Hint Center\n  transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(-25%)'\n  }), style({\n    transform: 'translateY(0)'\n  })]))),\n  // Hint Center => Hidden Below\n  transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(0)'\n  }), style({\n    transform: 'translateY(25%)'\n  })]))),\n  // Hidden Below => Hint Center\n  transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(25%)'\n  }), style({\n    transform: 'translateY(0)'\n  })]))),\n  // Hint Center => Hidden Above\n  transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(0)'\n  }), style({\n    transform: 'translateY(-25%)'\n  })]))), state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({\n    transform: 'translateY(0)'\n  })), state('hint-to-desc, active-to-desc, desc', style({\n    transform: 'translateY(-25%)'\n  })), state('hint-to-asc, active-to-asc, asc', style({\n    transform: 'translateY(25%)'\n  }))]),\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: trigger('allowChildren', [transition('* <=> *', [query('@*', animateChild(), {\n    optional: true\n  })])])\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    this.changes = new Subject();\n  }\n  static {\n    this.ɵfac = function MatSortHeaderIntl_Factory(t) {\n      return new (t || MatSortHeaderIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatSortHeaderIntl,\n      factory: MatSortHeaderIntl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n  /**\n   * Description applied to MatSortHeader's button element with aria-describedby. This text should\n   * describe the action that will occur when the user clicks the sort header.\n   */\n  get sortActionDescription() {\n    return this._sortActionDescription;\n  }\n  set sortActionDescription(value) {\n    this._updateSortActionDescription(value);\n  }\n  constructor(\n  /**\n   * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n   * @breaking-change 13.0.0\n   */\n  _intl, _changeDetectorRef,\n  // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n  // tslint:disable-next-line: lightweight-tokens\n  _sort, _columnDef, _focusMonitor, _elementRef, /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n  _ariaDescriber, defaultOptions) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._sort = _sort;\n    this._columnDef = _columnDef;\n    this._focusMonitor = _focusMonitor;\n    this._elementRef = _elementRef;\n    this._ariaDescriber = _ariaDescriber;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     */\n    this._showIndicatorHint = false;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     */\n    this._viewState = {};\n    /** The direction the arrow should be facing according to the current state. */\n    this._arrowDirection = '';\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     */\n    this._disableViewStateAnimation = false;\n    /** Sets the position of the arrow that displays when sorted. */\n    this.arrowPosition = 'after';\n    /** whether the sort header is disabled. */\n    this.disabled = false;\n    // Default the action description to \"Sort\" because it's better than nothing.\n    // Without a description, the button's label comes from the sort header text content,\n    // which doesn't give any indication that it performs a sorting operation.\n    this._sortActionDescription = 'Sort';\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n    if (defaultOptions?.arrowPosition) {\n      this.arrowPosition = defaultOptions?.arrowPosition;\n    }\n    this._handleStateChanges();\n  }\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\n    this._updateArrowDirection();\n    this._setAnimationTransitionState({\n      toState: this._isSorted() ? 'active' : this._arrowDirection\n    });\n    this._sort.register(this);\n    this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n    this._updateSortActionDescription(this._sortActionDescription);\n  }\n  ngAfterViewInit() {\n    // We use the focus monitor because we also want to style\n    // things differently based on the focus origin.\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const newState = !!origin;\n      if (newState !== this._showIndicatorHint) {\n        this._setIndicatorHintVisible(newState);\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n    if (this._sortButton) {\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n    }\n  }\n  /**\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\n   */\n  _setIndicatorHintVisible(visible) {\n    // No-op if the sort header is disabled - should not make the hint visible.\n    if (this._isDisabled() && visible) {\n      return;\n    }\n    this._showIndicatorHint = visible;\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'hint'\n        });\n      } else {\n        this._setAnimationTransitionState({\n          fromState: 'hint',\n          toState: this._arrowDirection\n        });\n      }\n    }\n  }\n  /**\n   * Sets the animation transition view state for the arrow's position and opacity. If the\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n   * no animation appears.\n   */\n  _setAnimationTransitionState(viewState) {\n    this._viewState = viewState || {};\n    // If the animation for arrow position state (opacity/translation) should be disabled,\n    // remove the fromState so that it jumps right to the toState.\n    if (this._disableViewStateAnimation) {\n      this._viewState = {\n        toState: viewState.toState\n      };\n    }\n  }\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _toggleOnInteraction() {\n    this._sort.sort(this);\n    // Do not show the animation if the header was already shown in the right position.\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n      this._disableViewStateAnimation = true;\n    }\n  }\n  _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n  _handleKeydown(event) {\n    if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n      event.preventDefault();\n      this._toggleOnInteraction();\n    }\n  }\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\n  _getArrowDirectionState() {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n  /** Returns the arrow position state (opacity, translation). */\n  _getArrowViewState() {\n    const fromState = this._viewState.fromState;\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n  }\n  /**\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n   * active sorted direction. The reason this is updated through a function is because the direction\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n   * preserving its direction, even though the next sort direction is actually different and should\n   * only be changed once the arrow displays again (hint or activation).\n   */\n  _updateArrowDirection() {\n    this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n  }\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n  _updateSortActionDescription(newDescription) {\n    // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n    // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n    // for every *cell* in the table, creating a lot of unnecessary noise.\n    // If _sortButton is undefined, the component hasn't been initialized yet so there's\n    // nothing to update in the DOM.\n    if (this._sortButton) {\n      // removeDescription will no-op if there is no existing message.\n      // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n      this._ariaDescriber?.describe(this._sortButton, newDescription);\n    }\n    this._sortActionDescription = newDescription;\n  }\n  /** Handles changes in the sorting state. */\n  _handleStateChanges() {\n    this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n      if (this._isSorted()) {\n        this._updateArrowDirection();\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n          this._disableViewStateAnimation = true;\n        }\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'active'\n        });\n        this._showIndicatorHint = false;\n      }\n      // If this header was recently active and now no longer sorted, animate away the arrow.\n      if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n        this._disableViewStateAnimation = false;\n        this._setAnimationTransitionState({\n          fromState: 'active',\n          toState: this._arrowDirection\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function MatSortHeader_Factory(t) {\n      return new (t || MatSortHeader)(i0.ɵɵdirectiveInject(MatSortHeaderIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MatSort, 8), i0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.AriaDescriber, 8), i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSortHeader,\n      selectors: [[\"\", \"mat-sort-header\", \"\"]],\n      hostAttrs: [1, \"mat-sort-header\"],\n      hostVars: 3,\n      hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() {\n            return ctx._handleClick();\n          })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() {\n            return ctx._setIndicatorHintVisible(true);\n          })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() {\n            return ctx._setIndicatorHintVisible(false);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n          i0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n        }\n      },\n      inputs: {\n        id: [i0.ɵɵInputFlags.None, \"mat-sort-header\", \"id\"],\n        arrowPosition: \"arrowPosition\",\n        start: \"start\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        sortActionDescription: \"sortActionDescription\",\n        disableClear: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableClear\", \"disableClear\", booleanAttribute]\n      },\n      exportAs: [\"matSortHeader\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 7,\n      consts: [[1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]],\n      template: function MatSortHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, MatSortHeader_Conditional_3_Template, 6, 6, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition === \"before\");\n          i0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0)(\"role\", ctx._isDisabled() ? null : \"button\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(3, ctx._renderArrow() ? 3 : -1);\n        }\n      },\n      styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeader, [{\n    type: Component,\n    args: [{\n      selector: '[mat-sort-header]',\n      exportAs: 'matSortHeader',\n      host: {\n        'class': 'mat-sort-header',\n        '(click)': '_handleClick()',\n        '(keydown)': '_handleKeydown($event)',\n        '(mouseenter)': '_setIndicatorHintVisible(true)',\n        '(mouseleave)': '_setIndicatorHintVisible(false)',\n        '[attr.aria-sort]': '_getAriaSortAttribute()',\n        '[class.mat-sort-header-disabled]': '_isDisabled()'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren],\n      standalone: true,\n      template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\",\n      styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"]\n    }]\n  }], () => [{\n    type: MatSortHeaderIntl\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatSort,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: ['MAT_SORT_HEADER_COLUMN_DEF']\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: i3.FocusMonitor\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i3.AriaDescriber,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SORT_DEFAULT_OPTIONS]\n    }]\n  }], {\n    id: [{\n      type: Input,\n      args: ['mat-sort-header']\n    }],\n    arrowPosition: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    sortActionDescription: [{\n      type: Input\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatSortModule {\n  static {\n    this.ɵfac = function MatSortModule_Factory(t) {\n      return new (t || MatSortModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSortModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n      imports: [MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatSort, MatSortHeader],\n      exports: [MatSort, MatSortHeader],\n      providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i1 from '@angular/cdk/bidi';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _ViewRepeaterOperation, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, booleanAttribute, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, inject, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction CdkTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction CdkTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 0);\n    i0.ɵɵelementContainer(3, 2)(4, 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CdkTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 2)(2, 3)(3, 4);\n  }\n}\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n  constructor( /** @docs-private */template) {\n    this.template = template;\n  }\n  static {\n    this.ɵfac = function CdkCellDef_Factory(t) {\n      return new (t || CdkCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCellDef,\n      selectors: [[\"\", \"cdkCellDef\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellDef]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n  constructor( /** @docs-private */template) {\n    this.template = template;\n  }\n  static {\n    this.ɵfac = function CdkHeaderCellDef_Factory(t) {\n      return new (t || CdkHeaderCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderCellDef,\n      selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderCellDef]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n  constructor( /** @docs-private */template) {\n    this.template = template;\n  }\n  static {\n    this.ɵfac = function CdkFooterCellDef_Factory(t) {\n      return new (t || CdkFooterCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterCellDef,\n      selectors: [[\"\", \"cdkFooterCellDef\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterCellDef]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef {\n  /** Unique name for this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._setNameInput(name);\n  }\n  /** Whether the cell is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  get stickyEnd() {\n    return this._stickyEnd;\n  }\n  set stickyEnd(value) {\n    if (value !== this._stickyEnd) {\n      this._stickyEnd = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  constructor(_table) {\n    this._table = _table;\n    this._hasStickyChanged = false;\n    this._sticky = false;\n    this._stickyEnd = false;\n  }\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  /**\n   * Overridable method that sets the css classes that will be added to every cell in this\n   * column.\n   * In the future, columnCssClassName will change from type string[] to string and this\n   * will set a single string value.\n   * @docs-private\n   */\n  _updateColumnCssClassName() {\n    this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setNameInput(value) {\n    // If the directive is set without a name (updated programmatically), then this setter will\n    // trigger with an empty string and should not overwrite the programmatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n      this._updateColumnCssClassName();\n    }\n  }\n  static {\n    this.ɵfac = function CdkColumnDef_Factory(t) {\n      return new (t || CdkColumnDef)(i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkColumnDef,\n      selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n      contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n        }\n      },\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"cdkColumnDef\", \"name\"],\n        sticky: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"sticky\", \"sticky\", booleanAttribute],\n        stickyEnd: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"stickyEnd\", \"stickyEnd\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkColumnDef]',\n      providers: [{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['cdkColumnDef']\n    }],\n    sticky: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stickyEnd: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    cell: [{\n      type: ContentChild,\n      args: [CdkCellDef]\n    }],\n    headerCell: [{\n      type: ContentChild,\n      args: [CdkHeaderCellDef]\n    }],\n    footerCell: [{\n      type: ContentChild,\n      args: [CdkFooterCellDef]\n    }]\n  });\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n  }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n  static {\n    this.ɵfac = function CdkHeaderCell_Factory(t) {\n      return new (t || CdkHeaderCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderCell,\n      selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n      hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-header-cell, th[cdk-header-cell]',\n      host: {\n        'class': 'cdk-header-cell',\n        'role': 'columnheader'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: CdkColumnDef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n    const role = columnDef._table?._getCellRole();\n    if (role) {\n      elementRef.nativeElement.setAttribute('role', role);\n    }\n  }\n  static {\n    this.ɵfac = function CdkFooterCell_Factory(t) {\n      return new (t || CdkFooterCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterCell,\n      selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n      hostAttrs: [1, \"cdk-footer-cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n      host: {\n        'class': 'cdk-footer-cell'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: CdkColumnDef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n    const role = columnDef._table?._getCellRole();\n    if (role) {\n      elementRef.nativeElement.setAttribute('role', role);\n    }\n  }\n  static {\n    this.ɵfac = function CdkCell_Factory(t) {\n      return new (t || CdkCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCell,\n      selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n      hostAttrs: [1, \"cdk-cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-cell, td[cdk-cell]',\n      host: {\n        'class': 'cdk-cell'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: CdkColumnDef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n\n/**\n * @docs-private\n */\nclass _Schedule {\n  constructor() {\n    this.tasks = [];\n    this.endTasks = [];\n  }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    this._currentSchedule = null;\n    this._destroyed = new Subject();\n  }\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n  schedule(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.tasks.push(task);\n  }\n  /**\n   * Schedules the specified task to run after other scheduled tasks at the end of the current\n   * VM turn.\n   */\n  scheduleEnd(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.endTasks.push(task);\n  }\n  /** Prevent any further tasks from running. */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  _createScheduleIfNeeded() {\n    if (this._currentSchedule) {\n      return;\n    }\n    this._currentSchedule = new _Schedule();\n    this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n      while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n        const schedule = this._currentSchedule;\n        // Capture new tasks scheduled by the current set of tasks.\n        this._currentSchedule = new _Schedule();\n        for (const task of schedule.tasks) {\n          task();\n        }\n        for (const task of schedule.endTasks) {\n          task();\n        }\n      }\n      this._currentSchedule = null;\n    });\n  }\n  _getScheduleObservable() {\n    // Use onStable when in the context of an ongoing change detection cycle so that we\n    // do not accidentally trigger additional cycles.\n    return this._ngZone.isStable ? from(Promise.resolve(undefined)) : this._ngZone.onStable.pipe(take(1));\n  }\n  static {\n    this.ɵfac = function _CoalescedStyleScheduler_Factory(t) {\n      return new (t || _CoalescedStyleScheduler)(i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: _CoalescedStyleScheduler,\n      factory: _CoalescedStyleScheduler.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n    type: Injectable\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n  constructor( /** @docs-private */template, _differs) {\n    this.template = template;\n    this._differs = _differs;\n  }\n  ngOnChanges(changes) {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = changes['columns'] && changes['columns'].currentValue || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n      this._columnsDiffer.diff(columns);\n    }\n  }\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n  getColumnsDiff() {\n    return this._columnsDiffer.diff(this.columns);\n  }\n  /** Gets this row def's relevant cell template from the provided column def. */\n  extractCellTemplate(column) {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    }\n    if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n  static {\n    this.ɵfac = function BaseRowDef_Factory(t) {\n      return new (t || BaseRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseRowDef,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseRowDef, [{\n    type: Directive\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }], null);\n})();\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends BaseRowDef {\n  /** Whether the row is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n    this._hasStickyChanged = false;\n    this._sticky = false;\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  static {\n    this.ɵfac = function CdkHeaderRowDef_Factory(t) {\n      return new (t || CdkHeaderRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderRowDef,\n      selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"cdkHeaderRowDef\", \"columns\"],\n        sticky: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkHeaderRowDef'\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }], {\n    sticky: [{\n      type: Input,\n      args: [{\n        alias: 'cdkHeaderRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends BaseRowDef {\n  /** Whether the row is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n    this._hasStickyChanged = false;\n    this._sticky = false;\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  static {\n    this.ɵfac = function CdkFooterRowDef_Factory(t) {\n      return new (t || CdkFooterRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterRowDef,\n      selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"cdkFooterRowDef\", \"columns\"],\n        sticky: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkFooterRowDef'\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }], {\n    sticky: [{\n      type: Input,\n      args: [{\n        alias: 'cdkFooterRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  }\n  static {\n    this.ɵfac = function CdkRowDef_Factory(t) {\n      return new (t || CdkRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkRowDef,\n      selectors: [[\"\", \"cdkRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"cdkRowDefColumns\", \"columns\"],\n        when: [i0.ɵɵInputFlags.None, \"cdkRowDefWhen\", \"when\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkRowDefColumns'\n      }, {\n        name: 'when',\n        alias: 'cdkRowDefWhen'\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n  /**\n   * Static property containing the latest constructed instance of this class.\n   * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n   * createEmbeddedView. After one of these components are created, this property will provide\n   * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n   * construct the cells with the provided context.\n   */\n  static {\n    this.mostRecentCellOutlet = null;\n  }\n  constructor(_viewContainer) {\n    this._viewContainer = _viewContainer;\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n  static {\n    this.ɵfac = function CdkCellOutlet_Factory(t) {\n      return new (t || CdkCellOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCellOutlet,\n      selectors: [[\"\", \"cdkCellOutlet\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCellOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellOutlet]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }], null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n  static {\n    this.ɵfac = function CdkHeaderRow_Factory(t) {\n      return new (t || CdkHeaderRow)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkHeaderRow,\n      selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkHeaderRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-header-row, tr[cdk-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n  static {\n    this.ɵfac = function CdkFooterRow_Factory(t) {\n      return new (t || CdkFooterRow)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkFooterRow,\n      selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkFooterRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-footer-row, tr[cdk-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-footer-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n  static {\n    this.ɵfac = function CdkRow_Factory(t) {\n      return new (t || CdkRow)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkRow,\n      selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-row, tr[cdk-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n    this._contentClassName = 'cdk-no-data-row';\n  }\n  static {\n    this.ɵfac = function CdkNoDataRow_Factory(t) {\n      return new (t || CdkNoDataRow)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkNoDataRow,\n      selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkNoDataRow]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._cachedCellWidths = [];\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows, stickyDirections) {\n    const elementsToClear = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n      elementsToClear.push(row);\n      for (let i = 0; i < row.children.length; i++) {\n        elementsToClear.push(row.children[i]);\n      }\n    }\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      for (const element of elementsToClear) {\n        this._removeStickyStyle(element, stickyDirections);\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   */\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: []\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: []\n        });\n      }\n      return;\n    }\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      const firstRow = rows[0];\n      const numCells = firstRow.children.length;\n      const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n      const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n      const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n      const lastStickyStart = stickyStartStates.lastIndexOf(true);\n      const firstStickyEnd = stickyEndStates.indexOf(true);\n      const isRtl = this.direction === 'rtl';\n      const start = isRtl ? 'right' : 'left';\n      const end = isRtl ? 'left' : 'right';\n      for (const row of rows) {\n        for (let i = 0; i < numCells; i++) {\n          const cell = row.children[i];\n          if (stickyStartStates[i]) {\n            this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n          }\n          if (stickyEndStates[i]) {\n            this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n          }\n        }\n      }\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n        });\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n      // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n      // sticky states need to be reversed as well.\n      const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n      const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n      // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n      const stickyOffsets = [];\n      const stickyCellHeights = [];\n      const elementsToStick = [];\n      for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n        stickyOffsets[rowIndex] = stickyOffset;\n        const row = rows[rowIndex];\n        elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n        const height = row.getBoundingClientRect().height;\n        stickyOffset += height;\n        stickyCellHeights[rowIndex] = height;\n      }\n      const borderedRowIndex = states.lastIndexOf(true);\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n        const offset = stickyOffsets[rowIndex];\n        const isBorderedRowIndex = rowIndex === borderedRowIndex;\n        for (const element of elementsToStick[rowIndex]) {\n          this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n        }\n      }\n      if (position === 'top') {\n        this._positionListener?.stickyHeaderRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      } else {\n        this._positionListener?.stickyFooterRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      const tfoot = tableElement.querySelector('tfoot');\n      if (tfoot) {\n        if (stickyStates.some(state => !state)) {\n          this._removeStickyStyle(tfoot, ['bottom']);\n        } else {\n          this._addStickyStyle(tfoot, 'bottom', 0, false);\n        }\n      }\n    });\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element, stickyDirections) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    }\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n    const cellWidths = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell = firstRowCells[i];\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n  static {\n    this.ɵfac = function CdkRecycleRows_Factory(t) {\n      return new (t || CdkRecycleRows)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkRecycleRows,\n      selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n    const table = inject(CDK_TABLE);\n    table._rowOutlet = this;\n    table._outletAssigned();\n  }\n  static {\n    this.ɵfac = function DataRowOutlet_Factory(t) {\n      return new (t || DataRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DataRowOutlet,\n      selectors: [[\"\", \"rowOutlet\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[rowOutlet]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n    const table = inject(CDK_TABLE);\n    table._headerRowOutlet = this;\n    table._outletAssigned();\n  }\n  static {\n    this.ɵfac = function HeaderRowOutlet_Factory(t) {\n      return new (t || HeaderRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: HeaderRowOutlet,\n      selectors: [[\"\", \"headerRowOutlet\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[headerRowOutlet]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n    const table = inject(CDK_TABLE);\n    table._footerRowOutlet = this;\n    table._outletAssigned();\n  }\n  static {\n    this.ɵfac = function FooterRowOutlet_Factory(t) {\n      return new (t || FooterRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FooterRowOutlet,\n      selectors: [[\"\", \"footerRowOutlet\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[footerRowOutlet]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n    const table = inject(CDK_TABLE);\n    table._noDataRowOutlet = this;\n    table._outletAssigned();\n  }\n  static {\n    this.ɵfac = function NoDataRowOutlet_Factory(t) {\n      return new (t || NoDataRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NoDataRowOutlet,\n      selectors: [[\"\", \"noDataRowOutlet\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoDataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[noDataRowOutlet]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE =\n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n  /** Aria role to apply to the table's cells based on the table's own role. */\n  _getCellRole() {\n    if (this._cellRoleInternal === undefined) {\n      // Perform this lazily in case the table's role was updated by a directive after construction.\n      const role = this._elementRef.nativeElement.getAttribute('role');\n      const cellRole = role === 'grid' || role === 'treegrid' ? 'gridcell' : 'cell';\n      this._cellRoleInternal = this._isNativeHtmlTable && cellRole === 'cell' ? null : cellRole;\n    }\n    return this._cellRoleInternal;\n  }\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  get trackBy() {\n    return this._trackByFn;\n  }\n  set trackBy(fn) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n  get dataSource() {\n    return this._dataSource;\n  }\n  set dataSource(dataSource) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n  get multiTemplateDataRows() {\n    return this._multiTemplateDataRows;\n  }\n  set multiTemplateDataRows(value) {\n    this._multiTemplateDataRows = value;\n    // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n    // this setter will be invoked before the row outlet has been defined hence the null check.\n    if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n   * and optimize rendering sticky styles for native tables. No-op for flex tables.\n   */\n  get fixedLayout() {\n    return this._fixedLayout;\n  }\n  set fixedLayout(value) {\n    this._fixedLayout = value;\n    // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n    this._forceRecalculateCellWidths = true;\n    this._stickyColumnStylesNeedReset = true;\n  }\n  constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler,\n  /**\n   * @deprecated `_stickyPositioningListener` parameter to become required.\n   * @breaking-change 13.0.0\n   */\n  _stickyPositioningListener,\n  /**\n   * @deprecated `_ngZone` parameter to become required.\n   * @breaking-change 14.0.0\n   */\n  _ngZone) {\n    this._differs = _differs;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._platform = _platform;\n    this._viewRepeater = _viewRepeater;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._viewportRuler = _viewportRuler;\n    this._stickyPositioningListener = _stickyPositioningListener;\n    this._ngZone = _ngZone;\n    /** Subject that emits when the component has been destroyed. */\n    this._onDestroy = new Subject();\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n    this._columnDefsByName = new Map();\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n    this._customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n    this._customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n    this._customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n    this._customFooterRowDefs = new Set();\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    this._headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    this._footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n    this._stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n    this._forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n    this._cachedRenderRowsMap = new Map();\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n     * table subclasses.\n     */\n    this.stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n    this.needsPositionStickyOnElement = true;\n    /** Whether the no data row is currently showing anything. */\n    this._isShowingNoDataRow = false;\n    /** Whether the table has rendered out all the outlets for the first time. */\n    this._hasAllOutlets = false;\n    /** Whether the table is done initializing. */\n    this._hasInitialized = false;\n    this._cellRoleInternal = undefined;\n    this._multiTemplateDataRows = false;\n    this._fixedLayout = false;\n    /**\n     * Emits when the table completes rendering a set of data rows based on the latest data from the\n     * data source, even if the set of rows is empty.\n     */\n    this.contentChanged = new EventEmitter();\n    // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n    this.viewChange = new BehaviorSubject({\n      start: 0,\n      end: Number.MAX_VALUE\n    });\n    if (!role) {\n      _elementRef.nativeElement.setAttribute('role', 'table');\n    }\n    this._document = _document;\n    this._isServer = !_platform.isBrowser;\n    this._isNativeHtmlTable = _elementRef.nativeElement.nodeName === 'TABLE';\n  }\n  ngOnInit() {\n    this._setupStickyStyler();\n    // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n    this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n    this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this._forceRecalculateCellWidths = true;\n    });\n  }\n  ngAfterContentInit() {\n    this._hasInitialized = true;\n  }\n  ngAfterContentChecked() {\n    // Only start re-rendering in `ngAfterContentChecked` after the first render.\n    if (this._canRender()) {\n      this._render();\n    }\n  }\n  ngOnDestroy() {\n    [this._rowOutlet?.viewContainer, this._headerRowOutlet?.viewContainer, this._footerRowOutlet?.viewContainer, this._cachedRenderRowsMap, this._customColumnDefs, this._customRowDefs, this._customHeaderRowDefs, this._customFooterRowDefs, this._columnDefsByName].forEach(def => {\n      def?.clear();\n    });\n    this._headerRowDefs = [];\n    this._footerRowDefs = [];\n    this._defaultRowDef = null;\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n  }\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n    const changes = this._dataDiffer.diff(this._renderRows);\n    if (!changes) {\n      this._updateNoDataRow();\n      this.contentChanged.next();\n      return;\n    }\n    const viewContainer = this._rowOutlet.viewContainer;\n    this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n      if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n        this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n      }\n    });\n    // Update the meta context of a row's context data (index, count, first, last, ...)\n    this._updateRowIndexContext();\n    // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n    changes.forEachIdentityChange(record => {\n      const rowView = viewContainer.get(record.currentIndex);\n      rowView.context.$implicit = record.item.data;\n    });\n    this._updateNoDataRow();\n    // Allow the new row data to render before measuring it.\n    // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n    if (this._ngZone && NgZone.isInAngularZone()) {\n      this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n        this.updateStickyColumnStyles();\n      });\n    } else {\n      this.updateStickyColumnStyles();\n    }\n    this.contentChanged.next();\n  }\n  /** Adds a column definition that was not included as part of the content children. */\n  addColumnDef(columnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n  /** Removes a column definition that was not included as part of the content children. */\n  removeColumnDef(columnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n  /** Adds a row definition that was not included as part of the content children. */\n  addRowDef(rowDef) {\n    this._customRowDefs.add(rowDef);\n  }\n  /** Removes a row definition that was not included as part of the content children. */\n  removeRowDef(rowDef) {\n    this._customRowDefs.delete(rowDef);\n  }\n  /** Adds a header row definition that was not included as part of the content children. */\n  addHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Removes a header row definition that was not included as part of the content children. */\n  removeHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Adds a footer row definition that was not included as part of the content children. */\n  addFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Removes a footer row definition that was not included as part of the content children. */\n  removeFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Sets a no data row definition that was not included as a part of the content children. */\n  setNoDataRow(noDataRow) {\n    this._customNoDataRow = noDataRow;\n  }\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyHeaderRowStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    // Hide the thead element if there are no header rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    if (this._isNativeHtmlTable) {\n      const thead = closestTableSection(this._headerRowOutlet, 'thead');\n      if (thead) {\n        thead.style.display = headerRows.length ? '' : 'none';\n      }\n    }\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyFooterRowStyles() {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    if (this._isNativeHtmlTable) {\n      const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n      if (tfoot) {\n        tfoot.style.display = footerRows.length ? '' : 'none';\n      }\n    }\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n    // In a table using a fixed layout, row content won't affect column width, so sticky styles\n    // don't need to be cleared unless either the sticky column config changes or one of the row\n    // defs change.\n    if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n      // Clear the left and right positioning from all columns in the table across all rows since\n      // sticky columns span across all table sections (header, data, footer)\n      this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n      this._stickyColumnStylesNeedReset = false;\n    }\n    // Update the sticky styles for each header row depending on the def's sticky state\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    });\n    // Update the sticky styles for each data row depending on its def's sticky state\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows = [];\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n      this._addStickyColumnStyles(rows, rowDef);\n    });\n    // Update the sticky styles for each footer row depending on the def's sticky state\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    });\n    // Reset the dirty state of the sticky input change since it has been used.\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n  /** Invoked whenever an outlet is created and has been assigned to the table. */\n  _outletAssigned() {\n    // Trigger the first render once all outlets have been assigned. We do it this way, as\n    // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n    // the next change detection will happen.\n    // Also we can't use queries to resolve the outlets, because they're wrapped in a\n    // conditional, so we have to rely on them being assigned via DI.\n    if (!this._hasAllOutlets && this._rowOutlet && this._headerRowOutlet && this._footerRowOutlet && this._noDataRowOutlet) {\n      this._hasAllOutlets = true;\n      // In some setups this may fire before `ngAfterContentInit`\n      // so we need a check here. See #28538.\n      if (this._canRender()) {\n        this._render();\n      }\n    }\n  }\n  /** Whether the table has all the information to start rendering. */\n  _canRender() {\n    return this._hasAllOutlets && this._hasInitialized;\n  }\n  /** Renders the table if its state has changed. */\n  _render() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n    this._cacheColumnDefs();\n    // Make sure that the user has at least added header, footer, or data row def.\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingRowDefsError();\n    }\n    // Render updates if the list of columns have been changed for the header, row, or footer defs.\n    const columnsChanged = this._renderUpdatedColumns();\n    const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n    // Ensure sticky column styles are reset if set to `true` elsewhere.\n    this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n    this._forceRecalculateCellWidths = rowDefsChanged;\n    // If the header row definition has been changed, trigger a render to the header row.\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n      this._headerRowDefChanged = false;\n    }\n    // If the footer row definition has been changed, trigger a render to the footer row.\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n      this._footerRowDefChanged = false;\n    }\n    // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    } else if (this._stickyColumnStylesNeedReset) {\n      // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n      // called when it row data arrives. Otherwise, we need to call it proactively.\n      this.updateStickyColumnStyles();\n    }\n    this._checkStickyStates();\n  }\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n  _getAllRenderRows() {\n    const renderRows = [];\n    // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map();\n    // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n        const cache = this._cachedRenderRowsMap.get(renderRow.data);\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef).push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n        renderRows.push(renderRow);\n      }\n    }\n    return renderRows;\n  }\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n  _getRenderRowsForData(data, dataIndex, cache) {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift();\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {\n          data,\n          rowDef,\n          dataIndex\n        };\n      }\n    });\n  }\n  /** Update the map containing the content's column definitions. */\n  _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n    const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n  /** Update the list of all available row definitions that can be used. */\n  _cacheRowDefs() {\n    this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n    this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n    this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n    // After all row definitions are determined, find the row definition to be considered default.\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n  _renderUpdatedColumns() {\n    const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n    // Force re-render data rows if the list of column definitions have changed.\n    const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n    if (dataColumnsChanged) {\n      this._forceRenderDataRows();\n    }\n    // Force re-render header/footer rows if the list of column definitions have changed.\n    const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n    if (headerColumnsChanged) {\n      this._forceRenderHeaderRows();\n    }\n    const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n    if (footerColumnsChanged) {\n      this._forceRenderFooterRows();\n    }\n    return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n  }\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n  _switchDataSource(dataSource) {\n    this._data = [];\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n    // Stop listening for data from the previous data source.\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n      if (this._rowOutlet) {\n        this._rowOutlet.viewContainer.clear();\n      }\n    }\n    this._dataSource = dataSource;\n  }\n  /** Set up a subscription for the data provided by the data source. */\n  _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) {\n      return;\n    }\n    let dataStream;\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect(this);\n    } else if (isObservable(this.dataSource)) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = of(this.dataSource);\n    }\n    if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableUnknownDataSourceError();\n    }\n    this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n      this._data = data || [];\n      this.renderRows();\n    });\n  }\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n  _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n    this.updateStickyHeaderRowStyles();\n  }\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n  _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n    this.updateStickyFooterRowStyles();\n  }\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n  _addStickyColumnStyles(rows, rowDef) {\n    const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n      const columnDef = this._columnDefsByName.get(columnName);\n      if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnName);\n      }\n      return columnDef;\n    });\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n  }\n  /** Gets the list of rows that have been rendered in the row outlet. */\n  _getRenderedRows(rowOutlet) {\n    const renderedRows = [];\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = rowOutlet.viewContainer.get(i);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n    return renderedRows;\n  }\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n  _getRowDefs(data, dataIndex) {\n    if (this._rowDefs.length == 1) {\n      return [this._rowDefs[0]];\n    }\n    let rowDefs = [];\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n    if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n    return rowDefs;\n  }\n  _getEmbeddedViewArgs(renderRow, index) {\n    const rowDef = renderRow.rowDef;\n    const context = {\n      $implicit: renderRow.data\n    };\n    return {\n      templateRef: rowDef.template,\n      context,\n      index\n    };\n  }\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n  _renderRow(outlet, rowDef, index, context = {}) {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n    this._renderCellTemplateForItem(rowDef, context);\n    return view;\n  }\n  _renderCellTemplateForItem(rowDef, context) {\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n  _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex);\n      const context = viewRef.context;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n  /** Gets the column definitions for the provided row def. */\n  _getCellTemplates(rowDef) {\n    if (!rowDef || !rowDef.columns) {\n      return [];\n    }\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n      if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnId);\n      }\n      return rowDef.extractCellTemplate(column);\n    });\n  }\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n  _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n    this._rowOutlet.viewContainer.clear();\n    this.renderRows();\n  }\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n  _checkStickyStates() {\n    const stickyCheckReducer = (acc, d) => {\n      return acc || d.hasStickyChanged();\n    };\n    // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this._stickyColumnStylesNeedReset = true;\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n  _setupStickyStyler() {\n    const direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n    (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n      this._stickyStyler.direction = value;\n      this.updateStickyColumnStyles();\n    });\n  }\n  /** Filters definitions that belong to this table from a QueryList. */\n  _getOwnDefs(items) {\n    return items.filter(item => !item._table || item._table === this);\n  }\n  /** Creates or removes the no data row, depending on whether any data is being shown. */\n  _updateNoDataRow() {\n    const noDataRow = this._customNoDataRow || this._noDataRow;\n    if (!noDataRow) {\n      return;\n    }\n    const shouldShow = this._rowOutlet.viewContainer.length === 0;\n    if (shouldShow === this._isShowingNoDataRow) {\n      return;\n    }\n    const container = this._noDataRowOutlet.viewContainer;\n    if (shouldShow) {\n      const view = container.createEmbeddedView(noDataRow.templateRef);\n      const rootNode = view.rootNodes[0];\n      // Only add the attributes if we have a single root node since it's hard\n      // to figure out which one to add it to when there are multiple.\n      if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n        rootNode.setAttribute('role', 'row');\n        rootNode.classList.add(noDataRow._contentClassName);\n      }\n    } else {\n      container.clear();\n    }\n    this._isShowingNoDataRow = shouldShow;\n    this._changeDetectorRef.markForCheck();\n  }\n  static {\n    this.ɵfac = function CdkTable_Factory(t) {\n      return new (t || CdkTable)(i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), i0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), i0.ɵɵdirectiveInject(i3.ViewportRuler), i0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), i0.ɵɵdirectiveInject(i0.NgZone, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkTable,\n      selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n      contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n        }\n      },\n      hostAttrs: [1, \"cdk-table\"],\n      hostVars: 2,\n      hostBindings: function CdkTable_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n        }\n      },\n      inputs: {\n        trackBy: \"trackBy\",\n        dataSource: \"dataSource\",\n        multiTemplateDataRows: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute],\n        fixedLayout: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"fixedLayout\", \"fixedLayout\", booleanAttribute]\n      },\n      outputs: {\n        contentChanged: \"contentChanged\"\n      },\n      exportAs: [\"cdkTable\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 2,\n      consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n      template: function CdkTable_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵtemplate(2, CdkTable_Conditional_2_Template, 1, 0)(3, CdkTable_Conditional_3_Template, 7, 0)(4, CdkTable_Conditional_4_Template, 4, 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(2, ctx._isServer ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(3, ctx._isNativeHtmlTable ? 3 : 4);\n        }\n      },\n      dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTable, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-table, table[cdk-table]',\n      exportAs: 'cdkTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'cdk-table',\n        '[class.cdk-table-fixed-layout]': 'fixedLayout'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      standalone: true,\n      imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"]\n    }]\n  }], () => [{\n    type: i0.IterableDiffers\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: i1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i2.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [_VIEW_REPEATER_STRATEGY]\n    }]\n  }, {\n    type: _CoalescedStyleScheduler,\n    decorators: [{\n      type: Inject,\n      args: [_COALESCED_STYLE_SCHEDULER]\n    }]\n  }, {\n    type: i3.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [STICKY_POSITIONING_LISTENER]\n    }]\n  }, {\n    type: i0.NgZone,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    trackBy: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    multiTemplateDataRows: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    fixedLayout: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    _contentColumnDefs: [{\n      type: ContentChildren,\n      args: [CdkColumnDef, {\n        descendants: true\n      }]\n    }],\n    _contentRowDefs: [{\n      type: ContentChildren,\n      args: [CdkRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentHeaderRowDefs: [{\n      type: ContentChildren,\n      args: [CdkHeaderRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentFooterRowDefs: [{\n      type: ContentChildren,\n      args: [CdkFooterRowDef, {\n        descendants: true\n      }]\n    }],\n    _noDataRow: [{\n      type: ContentChild,\n      args: [CdkNoDataRow]\n    }]\n  });\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n  const uppercaseSection = section.toUpperCase();\n  let current = outlet.viewContainer.element.nativeElement;\n  while (current) {\n    // 1 is an element node.\n    const nodeName = current.nodeType === 1 ? current.nodeName : null;\n    if (nodeName === uppercaseSection) {\n      return current;\n    } else if (nodeName === 'TABLE') {\n      // Stop traversing past the `table` node.\n      break;\n    }\n    current = current.parentNode;\n  }\n  return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n  /** Column name that should be used to reference this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._name = name;\n    // With Ivy, inputs can be initialized before static query results are\n    // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n    this._syncColumnDefName();\n  }\n  constructor(\n  // `CdkTextColumn` is always requiring a table, but we just assert it manually\n  // for better error reporting.\n  // tslint:disable-next-line: lightweight-tokens\n  _table, _options) {\n    this._table = _table;\n    this._options = _options;\n    /** Alignment of the cell values. */\n    this.justify = 'start';\n    this._options = _options || {};\n  }\n  ngOnInit() {\n    this._syncColumnDefName();\n    if (this.headerText === undefined) {\n      this.headerText = this._createDefaultHeaderText();\n    }\n    if (!this.dataAccessor) {\n      this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n    }\n    if (this._table) {\n      // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n      // since the columnDef will not pick up its content by the time the table finishes checking\n      // its content and initializing the rows.\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getTableTextColumnMissingParentTableError();\n    }\n  }\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n  /**\n   * Creates a default header text. Use the options' header text transformation function if one\n   * has been provided. Otherwise simply capitalize the column name.\n   */\n  _createDefaultHeaderText() {\n    const name = this.name;\n    if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableTextColumnMissingNameError();\n    }\n    if (this._options && this._options.defaultHeaderTextTransform) {\n      return this._options.defaultHeaderTextTransform(name);\n    }\n    return name[0].toUpperCase() + name.slice(1);\n  }\n  /** Synchronizes the column definition name with the text column name. */\n  _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n  static {\n    this.ɵfac = function CdkTextColumn_Factory(t) {\n      return new (t || CdkTextColumn)(i0.ɵɵdirectiveInject(CdkTable, 8), i0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkTextColumn,\n      selectors: [[\"cdk-text-column\"]],\n      viewQuery: function CdkTextColumn_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkColumnDef, 7);\n          i0.ɵɵviewQuery(CdkCellDef, 7);\n          i0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        }\n      },\n      inputs: {\n        name: \"name\",\n        headerText: \"headerText\",\n        dataAccessor: \"dataAccessor\",\n        justify: \"justify\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 0,\n      consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n      template: function CdkTextColumn_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainerStart(0, 0);\n          i0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n          i0.ɵɵelementContainerEnd();\n        }\n      },\n      dependencies: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-text-column',\n      template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell]\n    }]\n  }], () => [{\n    type: CdkTable,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TEXT_COLUMN_OPTIONS]\n    }]\n  }], {\n    name: [{\n      type: Input\n    }],\n    headerText: [{\n      type: Input\n    }],\n    dataAccessor: [{\n      type: Input\n    }],\n    justify: [{\n      type: Input\n    }],\n    columnDef: [{\n      type: ViewChild,\n      args: [CdkColumnDef, {\n        static: true\n      }]\n    }],\n    cell: [{\n      type: ViewChild,\n      args: [CdkCellDef, {\n        static: true\n      }]\n    }],\n    headerCell: [{\n      type: ViewChild,\n      args: [CdkHeaderCellDef, {\n        static: true\n      }]\n    }]\n  });\n})();\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\nclass CdkTableModule {\n  static {\n    this.ɵfac = function CdkTableModule_Factory(t) {\n      return new (t || CdkTableModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkTableModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ScrollingModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTableModule, [{\n    type: NgModule,\n    args: [{\n      exports: EXPORTED_DECLARATIONS,\n      imports: [ScrollingModule, ...EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    constructor(...args) {\n      super(...args);\n      this._sticky = false;\n      /** Whether the sticky input has changed since it was last checked. */\n      this._hasStickyChanged = false;\n    }\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction MatTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 2);\n    i0.ɵɵelementContainer(3, 3)(4, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 3)(2, 4)(3, 5);\n  }\n}\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nclass MatRecycleRows {\n  static {\n    this.ɵfac = function MatRecycleRows_Factory(t) {\n      return new (t || MatRecycleRows)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRecycleRows,\n      selectors: [[\"mat-table\", \"recycleRows\", \"\"], [\"table\", \"mat-table\", \"\", \"recycleRows\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MatTable extends CdkTable {\n  constructor() {\n    super(...arguments);\n    /** Overrides the sticky CSS class set by the `CdkTable`. */\n    this.stickyCssClass = 'mat-mdc-table-sticky';\n    /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n    this.needsPositionStickyOnElement = false;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTable_BaseFactory;\n      return function MatTable_Factory(t) {\n        return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = i0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTable,\n      selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-table\", \"mdc-data-table__table\"],\n      hostVars: 2,\n      hostBindings: function MatTable_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-table-fixed-layout\", ctx.fixedLayout);\n        }\n      },\n      exportAs: [\"matTable\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkTable,\n        useExisting: MatTable\n      }, {\n        provide: CDK_TABLE,\n        useExisting: MatTable\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n      //  is only included in the build if used.\n      {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 2,\n      consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"role\", \"rowgroup\", 1, \"mdc-data-table__content\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n      template: function MatTable_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵtemplate(2, MatTable_Conditional_2_Template, 1, 0)(3, MatTable_Conditional_3_Template, 7, 0)(4, MatTable_Conditional_4_Template, 4, 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(2, ctx._isServer ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(3, ctx._isNativeHtmlTable ? 3 : 4);\n        }\n      },\n      dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTable, [{\n    type: Component,\n    args: [{\n      selector: 'mat-table, table[mat-table]',\n      exportAs: 'matTable',\n      template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `,\n      host: {\n        'class': 'mat-mdc-table mdc-data-table__table',\n        '[class.mdc-table-fixed-layout]': 'fixedLayout'\n      },\n      providers: [{\n        provide: CdkTable,\n        useExisting: MatTable\n      }, {\n        provide: CDK_TABLE,\n        useExisting: MatTable\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n      //  is only included in the build if used.\n      {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCellDef_BaseFactory;\n      return function MatCellDef_Factory(t) {\n        return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCellDef,\n      selectors: [[\"\", \"matCellDef\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matCellDef]',\n      providers: [{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderCellDef_BaseFactory;\n      return function MatHeaderCellDef_Factory(t) {\n        return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderCellDef,\n      selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderCellDef]',\n      providers: [{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterCellDef_BaseFactory;\n      return function MatFooterCellDef_Factory(t) {\n        return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterCellDef,\n      selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterCellDef]',\n      providers: [{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._setNameInput(name);\n  }\n  /**\n   * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n   * In the future, this will only add \"mat-column-\" and columnCssClassName\n   * will change from type string[] to string.\n   * @docs-private\n   */\n  _updateColumnCssClassName() {\n    super._updateColumnCssClassName();\n    this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatColumnDef_BaseFactory;\n      return function MatColumnDef_Factory(t) {\n        return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatColumnDef,\n      selectors: [[\"\", \"matColumnDef\", \"\"]],\n      inputs: {\n        name: [i0.ɵɵInputFlags.None, \"matColumnDef\", \"name\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }, {\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: MatColumnDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matColumnDef]',\n      providers: [{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }, {\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: MatColumnDef\n      }],\n      standalone: true\n    }]\n  }], null, {\n    name: [{\n      type: Input,\n      args: ['matColumnDef']\n    }]\n  });\n})();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderCell_BaseFactory;\n      return function MatHeaderCell_Factory(t) {\n        return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCell)))(t || MatHeaderCell);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderCell,\n      selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n      hostAttrs: [\"role\", \"columnheader\", 1, \"mat-mdc-header-cell\", \"mdc-data-table__header-cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-header-cell, th[mat-header-cell]',\n      host: {\n        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n        'role': 'columnheader'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterCell_BaseFactory;\n      return function MatFooterCell_Factory(t) {\n        return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCell)))(t || MatFooterCell);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterCell,\n      selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-footer-cell\", \"mdc-data-table__cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-footer-cell, td[mat-footer-cell]',\n      host: {\n        'class': 'mat-mdc-footer-cell mdc-data-table__cell'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCell_BaseFactory;\n      return function MatCell_Factory(t) {\n        return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatCell)))(t || MatCell);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCell,\n      selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-cell\", \"mdc-data-table__cell\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-cell, td[mat-cell]',\n      host: {\n        'class': 'mat-mdc-cell mdc-data-table__cell'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderRowDef_BaseFactory;\n      return function MatHeaderRowDef_Factory(t) {\n        return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderRowDef,\n      selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"matHeaderRowDef\", \"columns\"],\n        sticky: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderRowDef]',\n      providers: [{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matHeaderRowDef'\n      }, {\n        name: 'sticky',\n        alias: 'matHeaderRowDefSticky',\n        transform: booleanAttribute\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterRowDef_BaseFactory;\n      return function MatFooterRowDef_Factory(t) {\n        return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterRowDef,\n      selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"matFooterRowDef\", \"columns\"],\n        sticky: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matFooterRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterRowDef]',\n      providers: [{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matFooterRowDef'\n      }, {\n        name: 'sticky',\n        alias: 'matFooterRowDefSticky',\n        transform: booleanAttribute\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatRowDef_BaseFactory;\n      return function MatRowDef_Factory(t) {\n        return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRowDef,\n      selectors: [[\"\", \"matRowDef\", \"\"]],\n      inputs: {\n        columns: [i0.ɵɵInputFlags.None, \"matRowDefColumns\", \"columns\"],\n        when: [i0.ɵɵInputFlags.None, \"matRowDefWhen\", \"when\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matRowDef]',\n      providers: [{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matRowDefColumns'\n      }, {\n        name: 'when',\n        alias: 'matRowDefWhen'\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderRow_BaseFactory;\n      return function MatHeaderRow_Factory(t) {\n        return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatHeaderRow,\n      selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-header-row\", \"mdc-data-table__header-row\"],\n      exportAs: [\"matHeaderRow\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatHeaderRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-header-row, tr[mat-header-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matHeaderRow',\n      providers: [{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }],\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterRow_BaseFactory;\n      return function MatFooterRow_Factory(t) {\n        return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFooterRow,\n      selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-footer-row\", \"mdc-data-table__row\"],\n      exportAs: [\"matFooterRow\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatFooterRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-footer-row, tr[mat-footer-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-footer-row mdc-data-table__row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matFooterRow',\n      providers: [{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }],\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatRow_BaseFactory;\n      return function MatRow_Factory(t) {\n        return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatRow,\n      selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-row\", \"mdc-data-table__row\"],\n      exportAs: [\"matRow\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkRow,\n        useExisting: MatRow\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-row, tr[mat-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-row mdc-data-table__row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matRow',\n      providers: [{\n        provide: CdkRow,\n        useExisting: MatRow\n      }],\n      standalone: true,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n  constructor() {\n    super(...arguments);\n    this._contentClassName = 'mat-mdc-no-data-row';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatNoDataRow_BaseFactory;\n      return function MatNoDataRow_Factory(t) {\n        return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatNoDataRow)))(t || MatNoDataRow);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatNoDataRow,\n      selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkNoDataRow,\n        useExisting: MatNoDataRow\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matNoDataRow]',\n      providers: [{\n        provide: CdkNoDataRow,\n        useExisting: MatNoDataRow\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTextColumn_BaseFactory;\n      return function MatTextColumn_Factory(t) {\n        return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = i0.ɵɵgetInheritedFactory(MatTextColumn)))(t || MatTextColumn);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTextColumn,\n      selectors: [[\"mat-text-column\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 0,\n      consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n      template: function MatTextColumn_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainerStart(0, 0);\n          i0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n          i0.ɵɵelementContainerEnd();\n        }\n      },\n      dependencies: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'mat-text-column',\n      template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell]\n    }]\n  }], null, null);\n})();\nconst EXPORTED_DECLARATIONS = [\n// Table\nMatTable, MatRecycleRows,\n// Template defs\nMatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef,\n// Cell directives\nMatHeaderCell, MatCell, MatFooterCell,\n// Row directives\nMatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];\nclass MatTableModule {\n  static {\n    this.ɵfac = function MatTableModule_Factory(t) {\n      return new (t || MatTableModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTableModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CdkTableModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkTableModule, ...EXPORTED_DECLARATIONS],\n      exports: [MatCommonModule, EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() {\n    return this._data.value;\n  }\n  set data(data) {\n    data = Array.isArray(data) ? data : [];\n    this._data.next(data);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter() {\n    return this._filter.value;\n  }\n  set filter(filter) {\n    this._filter.next(filter);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort() {\n    return this._sort;\n  }\n  set sort(sort) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  /**\n   * Instance of the paginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the paginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator() {\n    return this._paginator;\n  }\n  set paginator(paginator) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  constructor(initialData = []) {\n    super();\n    /** Stream emitting render data to the table (depends on ordered data changes). */\n    this._renderData = new BehaviorSubject([]);\n    /** Stream that emits when a new filter string is set on the data source. */\n    this._filter = new BehaviorSubject('');\n    /** Used to react to internal changes of the paginator that are made by the data source itself. */\n    this._internalPageChanges = new Subject();\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n    this._renderChangesSubscription = null;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n    this.sortingDataAccessor = (data, sortHeaderId) => {\n      const value = data[sortHeaderId];\n      if (_isNumberValue(value)) {\n        const numberValue = Number(value);\n        // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n      }\n      return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n    this.sortData = (data, sort) => {\n      const active = sort.active;\n      const direction = sort.direction;\n      if (!active || direction == '') {\n        return data;\n      }\n      return data.sort((a, b) => {\n        let valueA = this.sortingDataAccessor(a, active);\n        let valueB = this.sortingDataAccessor(b, active);\n        // If there are data in the column that can be converted to a number,\n        // it must be ensured that the rest of the data\n        // is of the same type so as not to order incorrectly.\n        const valueAType = typeof valueA;\n        const valueBType = typeof valueB;\n        if (valueAType !== valueBType) {\n          if (valueAType === 'number') {\n            valueA += '';\n          }\n          if (valueBType === 'number') {\n            valueB += '';\n          }\n        }\n        // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n        // one value exists while the other doesn't. In this case, existing value should come last.\n        // This avoids inconsistent results when comparing values to undefined/null.\n        // If neither value exists, return 0 (equal).\n        let comparatorResult = 0;\n        if (valueA != null && valueB != null) {\n          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n          if (valueA > valueB) {\n            comparatorResult = 1;\n          } else if (valueA < valueB) {\n            comparatorResult = -1;\n          }\n        } else if (valueA != null) {\n          comparatorResult = 1;\n        } else if (valueB != null) {\n          comparatorResult = -1;\n        }\n        return comparatorResult * (direction == 'asc' ? 1 : -1);\n      });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @returns Whether the filter matches against the data\n     */\n    this.filterPredicate = (data, filter) => {\n      // Transform the data into a lowercase string of all property values.\n      const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\n        // This avoids matches where the values of two columns combined will match the user's query\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n        // that has a very low chance of being typed in by somebody in a text field. This one in\n        // particular is \"White up-pointing triangle with dot\" from\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n        return currentTerm + data[key] + '◬';\n      }, '').toLowerCase();\n      // Transform the filter by converting it to lowercase and removing whitespace.\n      const transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) != -1;\n    };\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n    const pageChange = this._paginator ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : of(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterPredicate function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterPredicate.\n    // May be overridden for customization.\n    this.filteredData = this.filter == null || this.filter === '' ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n    return this.filteredData;\n  }\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data) {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) {\n      return data;\n    }\n    return this.sortData(data.slice(), this.sort);\n  }\n  /**\n   * Returns a paged slice of the provided data array according to the provided paginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data) {\n    if (!this.paginator) {\n      return data;\n    }\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n      if (!paginator) {\n        return;\n      }\n      paginator.length = filteredDataLength;\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n    return this._renderData;\n  }\n  /**\n   * Used by the MatTable. Called when it disconnects from the data source.\n   * @docs-private\n   */\n  disconnect() {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, Injector, TemplateRef, Injectable, Optional, SkipSelf, NgModule } from '@angular/core';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nfunction SimpleSnackBar_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function SimpleSnackBar_Conditional_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.action());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.data.action, \" \");\n  }\n}\nconst _c0 = [\"label\"];\nfunction MatSnackBarContainer_ng_template_4_Template(rf, ctx) {}\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n  constructor(containerInstance, _overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Subject for notifying the user that the snack bar has been dismissed. */\n    this._afterDismissed = new Subject();\n    /** Subject for notifying the user that the snack bar has opened and appeared. */\n    this._afterOpened = new Subject();\n    /** Subject for notifying the user that the snack bar action was called. */\n    this._onAction = new Subject();\n    /** Whether the snack bar was dismissed using the action button. */\n    this._dismissedByAction = false;\n    this.containerInstance = containerInstance;\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n  /** Dismisses the snack bar. */\n  dismiss() {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n  /** Marks the snackbar action clicked. */\n  dismissWithAction() {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n      this.dismiss();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n  /**\n   * Marks the snackbar action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction() {\n    this.dismissWithAction();\n  }\n  /** Dismisses the snack bar after some duration */\n  _dismissAfter(duration) {\n    // Note that we need to cap the duration to the maximum value for setTimeout, because\n    // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n  }\n  /** Marks the snackbar as opened */\n  _open() {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n  /** Cleans up the DOM after closing. */\n  _finishDismiss() {\n    this._overlayRef.dispose();\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n    this._afterDismissed.next({\n      dismissedByAction: this._dismissedByAction\n    });\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed() {\n    return this._afterDismissed;\n  }\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\n  afterOpened() {\n    return this.containerInstance._onEnter;\n  }\n  /** Gets an observable that is notified when the snack bar action is called. */\n  onAction() {\n    return this._onAction;\n  }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n  constructor() {\n    /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n    this.politeness = 'assertive';\n    /**\n     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n     * component or template, the announcement message will default to the specified message.\n     */\n    this.announcementMessage = '';\n    /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n    this.duration = 0;\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** The horizontal position to place the snack bar. */\n    this.horizontalPosition = 'center';\n    /** The vertical position to place the snack bar. */\n    this.verticalPosition = 'bottom';\n  }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n  static {\n    this.ɵfac = function MatSnackBarLabel_Factory(t) {\n      return new (t || MatSnackBarLabel)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSnackBarLabel,\n      selectors: [[\"\", \"matSnackBarLabel\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-snack-bar-label\", \"mdc-snackbar__label\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBarLabel, [{\n    type: Directive,\n    args: [{\n      selector: `[matSnackBarLabel]`,\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label'\n      }\n    }]\n  }], null, null);\n})();\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n  static {\n    this.ɵfac = function MatSnackBarActions_Factory(t) {\n      return new (t || MatSnackBarActions)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSnackBarActions,\n      selectors: [[\"\", \"matSnackBarActions\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-snack-bar-actions\", \"mdc-snackbar__actions\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBarActions, [{\n    type: Directive,\n    args: [{\n      selector: `[matSnackBarActions]`,\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions'\n      }\n    }]\n  }], null, null);\n})();\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n  static {\n    this.ɵfac = function MatSnackBarAction_Factory(t) {\n      return new (t || MatSnackBarAction)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSnackBarAction,\n      selectors: [[\"\", \"matSnackBarAction\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-snack-bar-action\", \"mdc-snackbar__action\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBarAction, [{\n    type: Directive,\n    args: [{\n      selector: `[matSnackBarAction]`,\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action'\n      }\n    }]\n  }], null, null);\n})();\nclass SimpleSnackBar {\n  constructor(snackBarRef, data) {\n    this.snackBarRef = snackBarRef;\n    this.data = data;\n  }\n  /** Performs the action on the snack bar. */\n  action() {\n    this.snackBarRef.dismissWithAction();\n  }\n  /** If the action button should be shown. */\n  get hasAction() {\n    return !!this.data.action;\n  }\n  static {\n    this.ɵfac = function SimpleSnackBar_Factory(t) {\n      return new (t || SimpleSnackBar)(i0.ɵɵdirectiveInject(MatSnackBarRef), i0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: SimpleSnackBar,\n      selectors: [[\"simple-snack-bar\"]],\n      hostAttrs: [1, \"mat-mdc-simple-snack-bar\"],\n      exportAs: [\"matSnackBar\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"matSnackBarLabel\", \"\"], [\"matSnackBarActions\", \"\"], [\"mat-button\", \"\", \"matSnackBarAction\", \"\", 3, \"click\"]],\n      template: function SimpleSnackBar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, SimpleSnackBar_Conditional_2_Template, 3, 1, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.data.message, \"\\n\");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(2, ctx.hasAction ? 2 : -1);\n        }\n      },\n      dependencies: [MatButton, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction],\n      styles: [\".mat-mdc-simple-snack-bar{display:flex}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SimpleSnackBar, [{\n    type: Component,\n    args: [{\n      selector: 'simple-snack-bar',\n      exportAs: 'matSnackBar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatButton, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction],\n      standalone: true,\n      host: {\n        'class': 'mat-mdc-simple-snack-bar'\n      },\n      template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\",\n      styles: [\".mat-mdc-simple-snack-bar{display:flex}\"]\n    }]\n  }], () => [{\n    type: MatSnackBarRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SNACK_BAR_DATA]\n    }]\n  }], null);\n})();\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n  /** Animation that shows and hides a snack bar. */\n  snackBarState: trigger('state', [state('void, hidden', style({\n    transform: 'scale(0.8)',\n    opacity: 0\n  })), state('visible', style({\n    transform: 'scale(1)',\n    opacity: 1\n  })), transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')), transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n    opacity: 0\n  })))])\n};\nlet uniqueId = 0;\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n  constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, /** The snack bar configuration. */\n  snackBarConfig) {\n    super();\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._platform = _platform;\n    this.snackBarConfig = snackBarConfig;\n    this._document = inject(DOCUMENT);\n    this._trackedModals = new Set();\n    /** The number of milliseconds to wait before announcing the snack bar's content. */\n    this._announceDelay = 150;\n    /** Whether the component has been destroyed. */\n    this._destroyed = false;\n    /** Subject for notifying that the snack bar has announced to screen readers. */\n    this._onAnnounce = new Subject();\n    /** Subject for notifying that the snack bar has exited from view. */\n    this._onExit = new Subject();\n    /** Subject for notifying that the snack bar has finished entering the view. */\n    this._onEnter = new Subject();\n    /** The state of the snack bar animations. */\n    this._animationState = 'void';\n    /** Unique ID of the aria-live element. */\n    this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n    /**\n     * Attaches a DOM portal to the snack bar container.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      this._assertNotAttached();\n      const result = this._portalOutlet.attachDomPortal(portal);\n      this._afterPortalAttached();\n      return result;\n    };\n    // Use aria-live rather than a live role like 'alert' or 'status'\n    // because NVDA and JAWS have show inconsistent behavior with live roles.\n    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n      this._live = 'assertive';\n    } else if (snackBarConfig.politeness === 'off') {\n      this._live = 'off';\n    } else {\n      this._live = 'polite';\n    }\n    // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n    // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n    if (this._platform.FIREFOX) {\n      if (this._live === 'polite') {\n        this._role = 'status';\n      }\n      if (this._live === 'assertive') {\n        this._role = 'alert';\n      }\n    }\n  }\n  /** Attach a component portal as content to this snack bar container. */\n  attachComponentPortal(portal) {\n    this._assertNotAttached();\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    this._afterPortalAttached();\n    return result;\n  }\n  /** Attach a template portal as content to this snack bar container. */\n  attachTemplatePortal(portal) {\n    this._assertNotAttached();\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    this._afterPortalAttached();\n    return result;\n  }\n  /** Handle end of animations, updating the state of the snackbar. */\n  onAnimationEnd(event) {\n    const {\n      fromState,\n      toState\n    } = event;\n    if (toState === 'void' && fromState !== 'void' || toState === 'hidden') {\n      this._completeExit();\n    }\n    if (toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this._onEnter;\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n  /** Begin animation of snack bar entrance into view. */\n  enter() {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      // _animationState lives in host bindings and `detectChanges` does not refresh host bindings\n      // so we have to call `markForCheck` to ensure the host view is refreshed eventually.\n      this._changeDetectorRef.markForCheck();\n      this._changeDetectorRef.detectChanges();\n      this._screenReaderAnnounce();\n    }\n  }\n  /** Begin animation of the snack bar exiting from view. */\n  exit() {\n    // It's common for snack bars to be opened by random outside calls like HTTP requests or\n    // errors. Run inside the NgZone to ensure that it functions correctly.\n    this._ngZone.run(() => {\n      // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n      // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n      // `MatSnackBar.open`).\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n      // Mark this element with an 'exit' attribute to indicate that the snackbar has\n      // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n      // test harness.\n      this._elementRef.nativeElement.setAttribute('mat-exit', '');\n      // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n      // long enough to visually read it either, so clear the timeout for announcing.\n      clearTimeout(this._announceTimeoutId);\n    });\n    return this._onExit;\n  }\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._clearFromModals();\n    this._completeExit();\n  }\n  /**\n   * Removes the element in a microtask. Helps prevent errors where we end up\n   * removing an element which is in the middle of an animation.\n   */\n  _completeExit() {\n    queueMicrotask(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n  /**\n   * Called after the portal contents have been attached. Can be\n   * used to modify the DOM once it's guaranteed to be in place.\n   */\n  _afterPortalAttached() {\n    const element = this._elementRef.nativeElement;\n    const panelClasses = this.snackBarConfig.panelClass;\n    if (panelClasses) {\n      if (Array.isArray(panelClasses)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClasses.forEach(cssClass => element.classList.add(cssClass));\n      } else {\n        element.classList.add(panelClasses);\n      }\n    }\n    this._exposeToModals();\n    // Check to see if the attached component or template uses the MDC template structure,\n    // specifically the MDC label. If not, the container should apply the MDC label class to this\n    // component's label container, which will apply MDC's label styles to the attached view.\n    const label = this._label.nativeElement;\n    const labelClass = 'mdc-snackbar__label';\n    label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n  }\n  /**\n   * Some browsers won't expose the accessibility node of the live element if there is an\n   * `aria-modal` and the live element is outside of it. This method works around the issue by\n   * pointing the `aria-owns` of all modals to the live element.\n   */\n  _exposeToModals() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with the\n    // `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const id = this._liveElementId;\n    const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    for (let i = 0; i < modals.length; i++) {\n      const modal = modals[i];\n      const ariaOwns = modal.getAttribute('aria-owns');\n      this._trackedModals.add(modal);\n      if (!ariaOwns) {\n        modal.setAttribute('aria-owns', id);\n      } else if (ariaOwns.indexOf(id) === -1) {\n        modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n      }\n    }\n  }\n  /** Clears the references to the live element from any modals it was added to. */\n  _clearFromModals() {\n    this._trackedModals.forEach(modal => {\n      const ariaOwns = modal.getAttribute('aria-owns');\n      if (ariaOwns) {\n        const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n        if (newValue.length > 0) {\n          modal.setAttribute('aria-owns', newValue);\n        } else {\n          modal.removeAttribute('aria-owns');\n        }\n      }\n    });\n    this._trackedModals.clear();\n  }\n  /** Asserts that no content is already attached to the container. */\n  _assertNotAttached() {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n  }\n  /**\n   * Starts a timeout to move the snack bar content to the live region so screen readers will\n   * announce it.\n   */\n  _screenReaderAnnounce() {\n    if (!this._announceTimeoutId) {\n      this._ngZone.runOutsideAngular(() => {\n        this._announceTimeoutId = setTimeout(() => {\n          const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n          const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n          if (inertElement && liveElement) {\n            // If an element in the snack bar content is focused before being moved\n            // track it and restore focus after moving to the live region.\n            let focusedElement = null;\n            if (this._platform.isBrowser && document.activeElement instanceof HTMLElement && inertElement.contains(document.activeElement)) {\n              focusedElement = document.activeElement;\n            }\n            inertElement.removeAttribute('aria-hidden');\n            liveElement.appendChild(inertElement);\n            focusedElement?.focus();\n            this._onAnnounce.next();\n            this._onAnnounce.complete();\n          }\n        }, this._announceDelay);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function MatSnackBarContainer_Factory(t) {\n      return new (t || MatSnackBarContainer)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(MatSnackBarConfig));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSnackBarContainer,\n      selectors: [[\"mat-snack-bar-container\"]],\n      viewQuery: function MatSnackBarContainer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._label = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mdc-snackbar\", \"mat-mdc-snack-bar-container\", \"mdc-snackbar--open\"],\n      hostVars: 1,\n      hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵsyntheticHostListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) {\n            return ctx.onAnimationEnd($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 3,\n      consts: [[\"label\", \"\"], [1, \"mdc-snackbar__surface\"], [1, \"mat-mdc-snack-bar-label\"], [\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]],\n      template: function MatSnackBarContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2, 0)(3, \"div\", 3);\n          i0.ɵɵtemplate(4, MatSnackBarContainer_ng_template_4_Template, 0, 0, \"ng-template\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"div\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role)(\"id\", ctx._liveElementId);\n        }\n      },\n      dependencies: [CdkPortalOutlet],\n      styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matSnackBarAnimations.snackBarState]\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBarContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-snack-bar-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matSnackBarAnimations.snackBarState],\n      standalone: true,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n        '[@state]': '_animationState',\n        '(@state.done)': 'onAnimationEnd($event)'\n      },\n      template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: MatSnackBarConfig\n  }], {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['label', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n  return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n  providedIn: 'root',\n  factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n  /** Reference to the currently opened snackbar at *any* level. */\n  get _openedSnackBarRef() {\n    const parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n  set _openedSnackBarRef(value) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n  constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n    this._overlay = _overlay;\n    this._live = _live;\n    this._injector = _injector;\n    this._breakpointObserver = _breakpointObserver;\n    this._parentSnackBar = _parentSnackBar;\n    this._defaultConfig = _defaultConfig;\n    /**\n     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n     * If there is a parent snack-bar service, all operations should delegate to that parent\n     * via `_openedSnackBarRef`.\n     */\n    this._snackBarRefAtThisLevel = null;\n    /** The component that should be rendered as the snack bar's simple component. */\n    this.simpleSnackBarComponent = SimpleSnackBar;\n    /** The container component that attaches the provided template or component. */\n    this.snackBarContainerComponent = MatSnackBarContainer;\n    /** The CSS class to apply for handset mode. */\n    this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n  }\n  /**\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param component Component to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromComponent(component, config) {\n    return this._attach(component, config);\n  }\n  /**\n   * Creates and dispatches a snack bar with a custom template for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param template Template to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromTemplate(template, config) {\n    return this._attach(template, config);\n  }\n  /**\n   * Opens a snackbar with a message and an optional action.\n   * @param message The message to show in the snackbar.\n   * @param action The label for the snackbar action.\n   * @param config Additional configuration options for the snackbar.\n   */\n  open(message, action = '', config) {\n    const _config = {\n      ...this._defaultConfig,\n      ...config\n    };\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {\n      message,\n      action\n    };\n    // Since the snack bar has `role=\"alert\"`, we don't\n    // want to announce the same message twice.\n    if (_config.announcementMessage === message) {\n      _config.announcementMessage = undefined;\n    }\n    return this.openFromComponent(this.simpleSnackBarComponent, _config);\n  }\n  /**\n   * Dismisses the currently-visible snack bar.\n   */\n  dismiss() {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n  ngOnDestroy() {\n    // Only dismiss the snack bar at the current level on destroy.\n    if (this._snackBarRefAtThisLevel) {\n      this._snackBarRefAtThisLevel.dismiss();\n    }\n  }\n  /**\n   * Attaches the snack bar container component to the overlay.\n   */\n  _attachSnackBarContainer(overlayRef, config) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{\n        provide: MatSnackBarConfig,\n        useValue: config\n      }]\n    });\n    const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n    const containerRef = overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n  /**\n   * Places a new component or a template as the content of the snack bar container.\n   */\n  _attach(content, userConfig) {\n    const config = {\n      ...new MatSnackBarConfig(),\n      ...this._defaultConfig,\n      ...userConfig\n    };\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachSnackBarContainer(overlayRef, config);\n    const snackBarRef = new MatSnackBarRef(container, overlayRef);\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null, {\n        $implicit: config.data,\n        snackBarRef\n      });\n      snackBarRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, snackBarRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal(portal);\n      // We can't pass this via the injector, because the injector is created earlier.\n      snackBarRef.instance = contentRef.instance;\n    }\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\n    // fill the width of the screen for full width snackbars.\n    this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n      overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n    });\n    if (config.announcementMessage) {\n      // Wait until the snack bar contents have been announced then deliver this message.\n      container._onAnnounce.subscribe(() => {\n        this._live.announce(config.announcementMessage, config.politeness);\n      });\n    }\n    this._animateSnackBar(snackBarRef, config);\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n  /** Animates the old snack bar out and the new one in. */\n  _animateSnackBar(snackBarRef, config) {\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (config.duration && config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n    }\n  }\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified snack bar config.\n   */\n  _createOverlay(config) {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n    let positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft = config.horizontalPosition === 'left' || config.horizontalPosition === 'start' && !isRtl || config.horizontalPosition === 'end' && isRtl;\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n  /**\n   * Creates an injector to be used inside of a snack bar component.\n   * @param config Config that was used to create the snack bar.\n   * @param snackBarRef Reference to the snack bar.\n   */\n  _createInjector(config, snackBarRef) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{\n        provide: MatSnackBarRef,\n        useValue: snackBarRef\n      }, {\n        provide: MAT_SNACK_BAR_DATA,\n        useValue: config.data\n      }]\n    });\n  }\n  static {\n    this.ɵfac = function MatSnackBar_Factory(t) {\n      return new (t || MatSnackBar)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i2.LiveAnnouncer), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3.BreakpointObserver), i0.ɵɵinject(MatSnackBar, 12), i0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatSnackBar,\n      factory: MatSnackBar.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i2.LiveAnnouncer\n  }, {\n    type: i0.Injector\n  }, {\n    type: i3.BreakpointObserver\n  }, {\n    type: MatSnackBar,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: MatSnackBarConfig,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n    }]\n  }], null);\n})();\nconst DIRECTIVES = [MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction];\nclass MatSnackBarModule {\n  static {\n    this.ɵfac = function MatSnackBarModule_Factory(t) {\n      return new (t || MatSnackBarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSnackBarModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MatSnackBar],\n      imports: [OverlayModule, PortalModule, MatButtonModule, MatCommonModule, SimpleSnackBar, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSnackBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, MatButtonModule, MatCommonModule, SimpleSnackBar, ...DIRECTIVES],\n      exports: [MatCommonModule, ...DIRECTIVES],\n      providers: [MatSnackBar]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n","import { Injectable, inject } from \"@angular/core\";\r\nimport { MatSnackBar, MatSnackBarConfig } from \"@angular/material/snack-bar\";\r\nimport { ComponentType } from \"@angular/cdk/portal\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ToastService {\r\n\t/**\r\n\t * Injected dependency for Material Snack Bar\r\n\t */\r\n\tprivate readonly snackBar: MatSnackBar = inject(MatSnackBar);\r\n\r\n\topenFromComponent<T, D = any>(component: ComponentType<T>, config?: MatSnackBarConfig<D>) {\r\n\t\tthis.snackBar.openFromComponent(component, config);\r\n\t}\r\n}\r\n","import { ChangeDetectorRef, Directive, OnDestroy, OnInit, inject } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ILoad } from \"../../../shared/interfaces/common.interface\";\r\nimport { ToastService } from \"../../services/toast.service\";\r\n\r\n/**\r\n * Generic component, which implements ILoad, OnInit, OnDestroy.\r\n * This way all components can extend this class if they want to use subscriptions,\r\n * and lifecycle hooks and/or a generic way to load/unload the component.\r\n */\r\n@Directive()\r\nexport abstract class CommonComponent implements ILoad, OnInit, OnDestroy {\r\n\tpublic readonly toastService: ToastService = inject(ToastService);\r\n\r\n\t/**\r\n\t * Array of subscriptions, where all subscriptions will be stored, so they can be unsubscribed on component destroy.\r\n\t */\r\n\tpublic subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * On component init.\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.load();\r\n\t}\r\n\r\n\t/**\r\n\t * Load the component.\r\n\t */\r\n\tload(): void {}\r\n\r\n\t/**\r\n\t * On component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.unload();\r\n\t\tthis.subscriptions.forEach((sub) => sub.unsubscribe());\r\n\t}\r\n\r\n\t/**\r\n\t * Unload the component.\r\n\t */\r\n\tunload(): void {}\r\n}\r\n","import { Component, Inject, inject } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogRef, MatDialogTitle } from \"@angular/material/dialog\";\r\n\r\nexport interface DialogData {\r\n\ttitle: string;\r\n\tcancelText: string;\r\n\tconfirmText: string;\r\n}\r\n\r\n@Component({\r\n\tselector: \"modal-confirm\",\r\n\tstandalone: true,\r\n\timports: [MatButtonModule, MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose],\r\n\ttemplateUrl: \"./modal-confirm.component.html\",\r\n\tstyleUrl: \"./modal-confirm.component.scss\",\r\n})\r\nexport class ModalConfirmComponent {\r\n\tprotected readonly dialogRef: MatDialogRef<ModalConfirmComponent> = inject(MatDialogRef);\r\n\r\n\tconstructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\t\tif (!data.title) data.title = \"Are you sure?\";\r\n\t\tif (!data.cancelText) data.cancelText = \"Cancel\";\r\n\t\tif (!data.confirmText) data.confirmText = \"Confirm\";\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>{{ data.title }}</h2>\r\n<mat-dialog-actions align=\"end\">\r\n\t<button mat-flat-button [mat-dialog-close]=\"false\">{{ data.cancelText }}</button>\r\n\t<button mat-flat-button color=\"warn\" [mat-dialog-close]=\"true\" cdkFocusInitial>{{ data.confirmText }}</button>\r\n</mat-dialog-actions>\r\n","export const environment = {\r\n\tproduction: false,\r\n\tapiUrl: \"https://heroes-service.vercel.app\",\r\n\tapiPort: \"\",\r\n\tapiPath: \"/api\",\r\n};\r\n","import { Injectable, inject } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { environment } from \"../../../../../environments/environment\";\r\nimport { IHero, IHeroCreate } from \"../../../../../../../back/src/interfaces/hero.interface\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class HeroService {\r\n\tprotected readonly http: HttpClient = inject(HttpClient);\r\n\r\n\tprivate readonly urlToEndpoint = `${environment.apiUrl}${environment.apiPort ? \":\" + environment.apiPort : \"\"}${environment.apiPath}/heroes`;\r\n\r\n\tpublic getAll(): Observable<IHero[]> {\r\n\t\treturn this.http.get<IHero[]>(this.urlToEndpoint);\r\n\t}\r\n\r\n\tpublic getById(id: string): Observable<IHero> {\r\n\t\treturn this.http.get<IHero>(`${this.urlToEndpoint}/${id}`);\r\n\t}\r\n\r\n\tpublic create(data: IHeroCreate): Observable<IHero> {\r\n\t\treturn this.http.post<IHero>(this.urlToEndpoint, data);\r\n\t}\r\n\r\n\tpublic update(id: string, data: Partial<IHeroCreate>): Observable<IHero> {\r\n\t\treturn this.http.put<IHero>(`${this.urlToEndpoint}/${id}`, data);\r\n\t}\r\n\r\n\tpublic deleteById(id: string): Observable<IHero> {\r\n\t\treturn this.http.delete<IHero>(`${this.urlToEndpoint}/${id}`);\r\n\t}\r\n}\r\n","import { Gender } from \"../../../../../../back/src/enums/common.enum\";\r\nimport { Locales } from \"../interfaces/common.interface\";\r\n\r\nexport const LOCALES = [\"en\", \"es\"] as const;\r\n\r\nexport const LocalesList: Record<Locales, string> = {\r\n\t[\"en\"]: $localize`:@@Locales.English:English`,\r\n\t[\"es\"]: $localize`:@@Locales.Spanish:Spanish`,\r\n};\r\n\r\nexport const GenderLocalized: Record<Gender, string> = {\r\n\t[\"male\"]: $localize`:@@Gender.Male:Male`,\r\n\t[\"female\"]: $localize`:@@Gender.Female:Female`,\r\n};\r\n","@if (data.title) {\r\n<span class=\"title title--{{ data.type }}\" matSnackBarLabel>{{ data.title }}</span>\r\n} @if (data.message) {\r\n<span class=\"message\" matSnackBarMessage>{{ data.message }}</span>\r\n}\r\n<span class=\"content\" matSnackBarActions>\r\n\t<button mat-button matSnackBarAction (click)=\"snackBarRef.dismissWithAction()\">\r\n\t\t<mat-icon>close</mat-icon>\r\n\t</button>\r\n</span>\r\n","import { Component, HostBinding, Inject, inject } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarAction, MatSnackBarActions, MatSnackBarLabel, MatSnackBarRef } from \"@angular/material/snack-bar\";\r\nimport { Toast } from \"../../../shared/interfaces/common.interface\";\r\n\r\n/**\r\n * Localized text keys for this component messages\r\n */\r\ntype Messages = \"ERROR\";\r\n\r\n/**\r\n * Localized texts for this component messages\r\n */\r\nconst MessagesLocalized: Record<Messages, string> = {\r\n\t[\"ERROR\"]: $localize`:@@Toast.DefaultError:An error occurred while processing the request`,\r\n};\r\n\r\n@Component({\r\n\tselector: \"toast\",\r\n\tstandalone: true,\r\n\timports: [MatButtonModule, MatIconModule, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction],\r\n\ttemplateUrl: \"./toast.component.html\",\r\n\tstyleUrl: \"./toast.component.scss\",\r\n})\r\nexport class ToastComponent {\r\n\treadonly snackBarRef = inject(MatSnackBarRef);\r\n\r\n\t@HostBinding(\"class\") get hostClass() {\r\n\t\treturn `toast toast--${this.data.type}`;\r\n\t}\r\n\r\n\tconstructor(@Inject(MAT_SNACK_BAR_DATA) public data: Toast) {\r\n\t\tif (data.type === \"error\" && !data.title) data.title = MessagesLocalized[\"ERROR\"];\r\n\t}\r\n}\r\n","<div class=\"modifiers\" [hidden]=\"true\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>{{ localizedMessages[\"FILTER\"] }}</mat-label>\r\n\r\n\t\t<input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Mia\" #input />\r\n\t</mat-form-field>\r\n\r\n\t<a mat-flat-button color=\"primary\" [routerLink]=\"'/' + RouteEnum.HEROES + '/' + HeroSubRouteEnum.CREATE\">\r\n\t\t<mat-icon>add</mat-icon>\r\n\r\n\t\t<span>{{ localizedMessages[\"ADD\"] }}</span>\r\n\t</a>\r\n</div>\r\n\r\n@defer (when dataSource) {\r\n<div class=\"table-section\">\r\n\t<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\t\t@for(column of displayedColumns; track $index) { @if (column !== 'edit' && column !== 'delete') {\r\n\t\t<ng-container [matColumnDef]=\"column\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>{{ localizedColumns[column] }}</th>\r\n\r\n\t\t\t<td mat-cell *matCellDef=\"let element\">{{ column === \"gender\" ? GenderLocalized[element[column]] : (element[column] | capitalize) }}</td>\r\n\t\t</ng-container>\r\n\t\t} @else {\r\n\t\t<ng-container [matColumnDef]=\"column\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef>{{ localizedExtraColumns[column] }}</th>\r\n\r\n\t\t\t<td mat-cell *matCellDef=\"let element\">\r\n\t\t\t\t<button mat-mini-fab [color]=\"column === 'delete' ? 'warn' : 'primary'\" (click)=\"interact(column, element)\">\r\n\t\t\t\t\t<mat-icon justify=\"end\">{{ column }}</mat-icon>\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</ng-container>\r\n\t\t} }\r\n\r\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n\t\t<tr *matNoDataRow>\r\n\t\t\t@if(dataSource.filter) {\r\n\t\t\t<td class=\"no-data\" colspan=\"99\">{{ localizedMessages[\"NO_DATA_MATCHING\"] + '\"' + input.value + '\"' }}</td>\r\n\t\t\t} @else {\r\n\t\t\t<td class=\"no-data\" colspan=\"99\">{{ localizedMessages[\"NO_DATA\"] }}</td>\r\n\t\t\t}\r\n\t\t</tr>\r\n\t</table>\r\n</div>\r\n} @loading (minimum 500ms) {\r\n<div class=\"table-section table-section--loading\">\r\n\t<mat-spinner color=\"accent\"></mat-spinner>\r\n</div>\r\n} @error {\r\n<p>{{ localizedMessages[\"ERROR\"] }}</p>\r\n}\r\n\r\n<mat-paginator class=\"paginator\"  [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page\"> </mat-paginator>\r\n","import { HeroKeysLocalized } from \"./../../enums/hero.enum\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { Subject, debounceTime, distinctUntilChanged } from \"rxjs\";\r\nimport { AfterViewInit, Component, ViewChild, inject, isDevMode } from \"@angular/core\";\r\nimport { Router, RouterModule } from \"@angular/router\";\r\n\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\r\n\r\nimport { CommonComponent } from \"../../../../core/components/common/common.component\";\r\nimport { DialogData, ModalConfirmComponent } from \"../../../../core/components/modal-confirm/modal-confirm.component\";\r\n\r\nimport { HeroService } from \"../../services/hero.service\";\r\nimport { GenderLocalized } from \"../../../../shared/enums/common.enum\";\r\nimport { HeroSubRouteEnum, RouteEnum } from \"../../../../core/constants/routes\";\r\nimport { IHero } from \"../../../../../../../../back/src/interfaces/hero.interface\";\r\nimport { CapitalizePipe } from \"../../../../shared/pipes/capitalize.pipe\";\r\nimport { ToastComponent } from \"../../../../core/components/toast/toast.component\";\r\nimport { Toast } from \"../../../../shared/interfaces/common.interface\";\r\n\r\n/**\r\n * Extra columns for the table that are not part of the data model\r\n */\r\ntype ExtraColumns = \"edit\" | \"delete\";\r\n\r\n/**\r\n * Localized texts for the extra columns\r\n \r\n */\r\nconst ExtraColumnsLocalized: Record<ExtraColumns, string> = {\r\n\t[\"edit\"]: $localize`:@@HeroListExtraColumns.Edit:Edit`,\r\n\t[\"delete\"]: $localize`:@@HeroListExtraColumns.Delete:Delete`,\r\n};\r\n\r\n/**\r\n * Localized text keys for dialog's messages\r\n */\r\ntype DialogTexts = keyof DialogData;\r\n\r\n/**\r\n * Localized texts for the dialog messages\r\n */\r\nconst DialogTextsLocalized: Record<DialogTexts, string> = {\r\n\t[\"title\"]: $localize`:@@DialogTexts.Title:Are you sure you want to delete `,\r\n\t[\"cancelText\"]: $localize`:@@DialogTexts.Cancel:Cancel`,\r\n\t[\"confirmText\"]: $localize`:@@DialogTexts.Confirm:Confirm`,\r\n};\r\n\r\n/**\r\n * Localized text keys for this component messages\r\n */\r\ntype Messages = \"NO_DATA_MATCHING\" | \"NO_DATA\" | \"ERROR\" | \"FILTER\" | \"ITEMS_PER_PAGE\" | \"ADD\" | \"DELETED\";\r\n\r\n/**\r\n * Localized texts for this component messages\r\n */\r\nconst MessagesLocalized: Record<Messages, string> = {\r\n\t[\"NO_DATA_MATCHING\"]: $localize`:@@HeroListMessages.NoDataMatching:No data matching the filter `,\r\n\t[\"NO_DATA\"]: $localize`:@@HeroListMessages.NoData:No data to display`,\r\n\t[\"ERROR\"]: $localize`:@@HeroListMessages.Error:An error occurred while processing the request`,\r\n\t[\"FILTER\"]: $localize`:@@HeroListMessages.Filter:Filter`,\r\n\t[\"ITEMS_PER_PAGE\"]: $localize`:@@HeroListMessages.ItemsPerPage:Items per page`,\r\n\t[\"ADD\"]: $localize`:@@HeroListMessages.Add:Add new hero`,\r\n\t[\"DELETED\"]: $localize`:@@HeroListMessages.Deleted: deleted successfully`,\r\n};\r\n\r\n/**\r\n * This page serve as the home page for the application, it displays a table with all the heroes and allows the user to interact with them\r\n */\r\n@Component({\r\n\tselector: \"hero-list\",\r\n\tstandalone: true,\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatButtonModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatIconModule,\r\n\t\tMatInputModule,\r\n\t\tMatPaginator,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatSortModule,\r\n\t\tMatTableModule,\r\n\t\tCapitalizePipe,\r\n\t],\r\n\ttemplateUrl: \"./hero-list.component.html\",\r\n\tstyleUrl: \"./hero-list.component.scss\",\r\n})\r\nexport class HeroListComponent extends CommonComponent implements AfterViewInit {\r\n\t/**\r\n\t * Injected dependency for Router\r\n\t */\r\n\tprotected readonly router: Router = inject(Router);\r\n\r\n\t/**\r\n\t * Injected dependency for Material Dialog\r\n\t */\r\n\tprotected readonly dialog: MatDialog = inject(MatDialog);\r\n\r\n\t/**\r\n\t * Injected dependency for Hero Service\r\n\t */\r\n\tprotected readonly heroService: HeroService = inject(HeroService);\r\n\r\n\t/**\r\n\t * Table's paginator\r\n\t */\r\n\t@ViewChild(MatPaginator) paginator!: MatPaginator;\r\n\r\n\t/**\r\n\t * Table's sort\r\n\t */\r\n\t@ViewChild(MatSort) sort!: MatSort;\r\n\r\n\t/**\r\n\t * Table's data source\r\n\t */\r\n\tpublic dataSource: MatTableDataSource<IHero> = new MatTableDataSource<IHero>();\r\n\r\n\t/**\r\n\t * Filter queue to debounce the filter input\r\n\t */\r\n\tpublic filterQueue$: Subject<string> = new Subject<string>();\r\n\r\n\t/**\r\n\t * Filter predicate to search for the filter value in the data\r\n\t */\r\n\tpublic filterPredicate: (data: IHero, filter: string) => boolean = (data: IHero, filter: string) => {\r\n\t\treturn (\r\n\t\t\tdata.first_name.toLowerCase().includes(filter) ||\r\n\t\t\tdata.last_name.toLowerCase().includes(filter) ||\r\n\t\t\tdata.hero_name.toLowerCase().includes(filter)\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * Columns to be displayed in the table\r\n\t */\r\n\tprotected readonly displayedColumns: (keyof IHero | ExtraColumns)[] = [\"first_name\", \"last_name\", \"hero_name\", \"gender\", \"edit\", \"delete\"];\r\n\r\n\t/**\r\n\t * Localized texts for the Genders\r\n\t */\r\n\tprotected readonly GenderLocalized: Record<string, string> = GenderLocalized;\r\n\r\n\t/**\r\n\t * Localized texts for the Hero keys\r\n\t */\r\n\tprotected readonly localizedColumns: Record<keyof IHero, string> = HeroKeysLocalized;\r\n\r\n\t/**\r\n\t * Localized texts for the extra columns\r\n\t */\r\n\tprotected readonly localizedExtraColumns: Record<ExtraColumns, string> = ExtraColumnsLocalized;\r\n\r\n\t/**\r\n\t * Localized texts for the dialog messages\r\n\t */\r\n\tprotected readonly localizedMessages: Record<Messages, string> = MessagesLocalized;\r\n\r\n\t/**\r\n\t * Reference to the RouteEnum\r\n\t */\r\n\tprotected readonly RouteEnum = RouteEnum;\r\n\r\n\t/**\r\n\t * Reference to the HeroSubRouteEnum\r\n\t */\r\n\tprotected readonly HeroSubRouteEnum = HeroSubRouteEnum;\r\n\r\n\t/**\r\n\t * Override of the load method to fetch the data from the Hero Service\r\n\t */\r\n\toverride load(): void {\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.heroService.getAll().subscribe({\r\n\t\t\t\tnext: (data) => {\r\n\t\t\t\t\tif (!data.length) return;\r\n\r\n\t\t\t\t\tthis.dataSource.data = data;\r\n\t\t\t\t},\r\n\t\t\t\terror: (error) => {\r\n\t\t\t\t\tif (isDevMode()) console.error(error);\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\r\n\t\t\tthis.filterQueue$.pipe(debounceTime(300), distinctUntilChanged()).subscribe((filterValue) => {\r\n\t\t\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\t\t\tif (!this.dataSource.paginator) return;\r\n\t\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t\t\tthis.dataSource._updatePaginator(this.dataSource.filteredData.length);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * After view init lifecycle hook\r\n\t */\r\n\tngAfterViewInit() {\r\n\t\tthis.paginator._intl.itemsPerPageLabel = MessagesLocalized[\"ITEMS_PER_PAGE\"];\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t\tthis.dataSource.filterPredicate = this.filterPredicate;\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the filter value to the filter queue\r\n\t * @param event\r\n\t */\r\n\tprotected applyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\r\n\t\tthis.filterQueue$.next(filterValue);\r\n\t}\r\n\r\n\t/**\r\n\t * Interact with the hero based on the action\r\n\t * @param action Action to be performed\r\n\t * @param hero Hero to interact with\r\n\t */\r\n\tprotected interact(action: ExtraColumns, hero: IHero): void {\r\n\t\tthis[action](hero);\r\n\t}\r\n\r\n\t/**\r\n\t * Redirects to the edit page\r\n\t * @param hero Hero to be edited, ID is passed as a parameter to the route\r\n\t */\r\n\tprivate edit(hero: IHero): void {\r\n\t\tthis.router.navigate([RouteEnum.HEROES, HeroSubRouteEnum.EDIT, hero.id]);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a dialog to confirm the deletion of the hero.\r\n\t * If the action is confirmed, calls the delete method from the Hero Service and updates the table.\r\n\t * @param hero Hero to be deleted\r\n\t */\r\n\tprivate delete(hero: IHero): void {\r\n\t\tconst dialogRef = this.dialog.open(ModalConfirmComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: `${DialogTextsLocalized[\"title\"]}${hero.hero_name}?`,\r\n\t\t\t\tcancelText: DialogTextsLocalized[\"cancelText\"],\r\n\t\t\t\tconfirmText: DialogTextsLocalized[\"confirmText\"],\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tdialogRef.backdropClick().subscribe((_) => dialogRef.close()),\r\n\r\n\t\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\t\tif (!result) return;\r\n\r\n\t\t\t\tthis.subscriptions.push(\r\n\t\t\t\t\tthis.heroService.deleteById(hero.id).subscribe({\r\n\t\t\t\t\t\tnext: (_) => {\r\n\t\t\t\t\t\t\tconst index = this.dataSource.data.findIndex((item) => item.id === hero.id);\r\n\r\n\t\t\t\t\t\t\tthis.dataSource.data.splice(index, 1);\r\n\t\t\t\t\t\t\tthis.dataSource._updateChangeSubscription();\r\n\r\n\t\t\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\ttitle: `${hero.hero_name} ${MessagesLocalized[\"DELETED\"]}`,\r\n\t\t\t\t\t\t\t\t\ttype: \"success\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: (error) => {\r\n\t\t\t\t\t\t\tif (isDevMode()) console.error(error);\r\n\r\n\t\t\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { KeyValuePair } from \"../interfaces/common.interface\";\r\n\r\nexport function mapKeysToArray<T extends object>(enumObject: T, ...omittedKeys: (keyof T)[]): (keyof Omit<T, (typeof omittedKeys)[number]>)[] {\r\n\tif (omittedKeys.length)\r\n\t\treturn Object.keys(enumObject).filter((key) => !omittedKeys.includes(key as keyof T)) as (keyof Omit<T, (typeof omittedKeys)[number]>)[];\r\n\treturn Object.keys(enumObject) as (keyof Omit<T, (typeof omittedKeys)[number]>)[];\r\n}\r\n\r\nexport function mapValuesToArray<T extends object>(enumObject: T): T[keyof T][] {\r\n\treturn Object.values(enumObject);\r\n}\r\n\r\nexport function mapRecordToKeyValuePair<T extends Record<K, V>, V, K extends string>(record: T): KeyValuePair<V, K>[] {\r\n\treturn Object.entries(record).map<KeyValuePair<V, K>>(([key, value]) => ({ key: key as K, value: value as V }));\r\n}\r\n","<form class=\"mat-elevation-z8\" [formGroup]=\"form\">\r\n\t@for (field of fields; track $index) {\r\n\t<mat-form-field appearance=\"outline\">\r\n\t\t<mat-label>{{ HeroKeysLocalized[field] }}</mat-label>\r\n\r\n\t\t<mat-icon matPrefix>{{ HeroKeysIcons[field] }}</mat-icon>\r\n\r\n\t\t@if (isSelectField(field)) {\r\n\t\t<mat-select formControlName=\"{{ field }}\">\r\n\t\t\t@for (option of selectsOptions[field] | keyvalue; track $index) {\r\n\t\t\t<mat-option mat-option [value]=\"option.key\">{{ option.value }}</mat-option>\r\n\t\t\t}\r\n\t\t</mat-select>\r\n\t\t} @else {\r\n\t\t<input [ngClass]=\"{ 'first-name': field === 'first_name' }\" matInput formControlName=\"{{ field }}\" />\r\n\t\t}\r\n\t</mat-form-field>\r\n\t}\r\n\r\n\t<div class=\"buttons\">\r\n\t\t<button mat-flat-button color=\"warn\" [routerLink]=\"'7' + RouteEnum.HEROES\">\r\n\t\t\t<mat-icon>close</mat-icon>\r\n\r\n\t\t\t<span>{{ cancelText }}</span>\r\n\t\t</button>\r\n\r\n\t\t<button mat-flat-button color=\"accent\" (click)=\"resetForm()\">\r\n\t\t\t<mat-icon>restart_alt</mat-icon>\r\n\r\n\t\t\t<span>{{ resetText }}</span>\r\n\t\t</button>\r\n\r\n\t\t<button mat-flat-button color=\"primary\" (click)=\"submitForm()\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\r\n\t\t\t<span>{{ acceptText }}</span>\r\n\t\t</button>\r\n\t</div>\r\n</form>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { Component, Input, inject, isDevMode } from \"@angular/core\";\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { ActivatedRoute, Router, RouterModule } from \"@angular/router\";\r\n\r\nimport { CommonComponent } from \"../../../../core/components/common/common.component\";\r\n\r\nimport { HeroService } from \"../../services/hero.service\";\r\nimport { HeroSubRouteEnum, RouteEnum } from \"../../../../core/constants/routes\";\r\nimport { GenderLocalized } from \"../../../../shared/enums/common.enum\";\r\nimport { Gender } from \"../../../../../../../../back/src/enums/common.enum\";\r\nimport { HeroSecretIdentityStatus, HeroSuperpower, HeroTeamAffiliation } from \"../../../../../../../../back/src/enums/hero.enum\";\r\nimport { HeroKeysLocalized, HeroSecretIdentityStatusLocalized, HeroSuperpowerLocalized, HeroTeamAffiliationLocalized } from \"../../enums/hero.enum\";\r\nimport { ModelFormGroup, Toast } from \"../../../../shared/interfaces/common.interface\";\r\nimport { IHeroCreate } from \"../../../../../../../../back/src/interfaces/hero.interface\";\r\n\r\nimport { mapKeysToArray } from \"../../../../shared/utils/mappers.util\";\r\nimport { ToastComponent } from \"../../../../core/components/toast/toast.component\";\r\n\r\ntype Variant = \"create\" | \"update\";\r\n\r\n/**\r\n * Select fields for the Hero\r\n */\r\nconst SelectFields = [\"secret_identity\", \"gender\", \"superpower\", \"team_affiliation\"] as const;\r\n\r\n/**\r\n * Type for the select fields\r\n */\r\ntype SelectField = (typeof SelectFields)[number];\r\n\r\n/**\r\n * Icons for the Hero keys\r\n */\r\nconst HeroKeysIcons: Record<keyof IHeroCreate, string> = {\r\n\t[\"first_name\"]: \"person\",\r\n\t[\"last_name\"]: \"person\",\r\n\t[\"hero_name\"]: \"badge\",\r\n\t[\"secret_identity\"]: \"no_accounts\",\r\n\t[\"gender\"]: \"wc\",\r\n\t[\"birth_date\"]: \"celebration\",\r\n\t[\"superpower\"]: \"bolt\",\r\n\t[\"team_affiliation\"]: \"groups\",\r\n};\r\n\r\n/**\r\n * Localized text keys for this component messages\r\n */\r\ntype Messages = \"FIELDS_ERROR\" | \"CREATED\" | \"UPDATED\";\r\n\r\n/**\r\n * Localized texts for this component messages\r\n */\r\nconst MessagesLocalized: Record<Messages, string> = {\r\n\t[\"FIELDS_ERROR\"]: $localize`:@@HeroForm.FieldsError:Please fill in all required fields`,\r\n\t[\"CREATED\"]: $localize`:@@HeroForm.Created: created successfully`,\r\n\t[\"UPDATED\"]: $localize`:@@HeroForm.Updated: updated successfully`,\r\n};\r\n\r\n/**\r\n * This component is a form for the Hero model\r\n */\r\n@Component({\r\n\tselector: \"hero-form\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, RouterModule, ReactiveFormsModule, MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule],\r\n\ttemplateUrl: \"./hero-form.component.html\",\r\n\tstyleUrl: \"./hero-form.component.scss\",\r\n})\r\nexport class HeroFormComponent extends CommonComponent {\r\n\t/**\r\n\t * Injected dependency for Router\r\n\t */\r\n\tprotected readonly router: Router = inject(Router);\r\n\r\n\t/**\r\n\t * Injected dependency for Form Builder\r\n\t */\r\n\tprotected readonly fb: FormBuilder = inject(FormBuilder);\r\n\r\n\t/**\r\n\t * Injected dependency for the ActivatedRoute\r\n\t */\r\n\tprotected readonly route: ActivatedRoute = inject(ActivatedRoute);\r\n\r\n\t/**\r\n\t * Injected dependency for Hero Service\r\n\t */\r\n\tprotected readonly heroService: HeroService = inject(HeroService);\r\n\r\n\t/**\r\n\t * Variant for the form\r\n\t */\r\n\t@Input({ required: true }) public variant!: Variant;\r\n\r\n\t/**\r\n\t * Text for the accept button\r\n\t */\r\n\t@Input() public acceptText: string = \"Save\";\r\n\r\n\t/**\r\n\t * Text for the reset button\r\n\t */\r\n\t@Input() public resetText: string = \"Reset\";\r\n\r\n\t/**\r\n\t * Text for the cancel button\r\n\t */\r\n\t@Input() public cancelText: string = \"Cancel\";\r\n\r\n\t/**\r\n\t * Form group for the Hero\r\n\t */\r\n\tpublic form: ModelFormGroup<IHeroCreate> = this.initForm();\r\n\r\n\t/**\r\n\t * Hero's ID\r\n\t */\r\n\tpublic id: string | null = this.route.snapshot.params[\"id\"] ?? null;\r\n\r\n\t/**\r\n\t * Keys for the Hero\r\n\t */\r\n\tpublic readonly fields: (keyof IHeroCreate)[] = mapKeysToArray(HeroKeysLocalized, \"id\");\r\n\r\n\t/**\r\n\t * Options for every select field\r\n\t */\r\n\tpublic readonly selectsOptions: Record<SelectField, Record<string, string>> = {\r\n\t\t[\"secret_identity\"]: HeroSecretIdentityStatusLocalized,\r\n\t\t[\"gender\"]: GenderLocalized,\r\n\t\t[\"superpower\"]: HeroSuperpowerLocalized,\r\n\t\t[\"team_affiliation\"]: HeroTeamAffiliationLocalized,\r\n\t};\r\n\r\n\t/**\r\n\t * Localized texts for the Hero keys\r\n\t */\r\n\tprotected readonly HeroKeysLocalized = HeroKeysLocalized;\r\n\r\n\t/**\r\n\t * Icons for the Hero keys\r\n\t */\r\n\tprotected readonly HeroKeysIcons = HeroKeysIcons;\r\n\r\n\t/**\r\n\t * Reference to the RouteEnum\r\n\t */\r\n\tprotected readonly RouteEnum = RouteEnum;\r\n\r\n\t/**\r\n\t * Loads the Hero if the variant is \"update\"\r\n\t */\r\n\toverride load(): void {\r\n\t\tif (this.variant === \"create\" || !this.id) return;\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.heroService.getById(this.id).subscribe((hero) => {\r\n\t\t\t\tthis.form.patchValue(hero);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the form\r\n\t */\r\n\tprivate initForm(): ModelFormGroup<IHeroCreate> {\r\n\t\treturn this.fb.nonNullable.group({\r\n\t\t\tfirst_name: this.fb.nonNullable.control(\"\", Validators.required),\r\n\t\t\tlast_name: this.fb.nonNullable.control(\"\", Validators.required),\r\n\t\t\thero_name: this.fb.nonNullable.control(\"\", Validators.required),\r\n\t\t\tbirth_date: this.fb.nonNullable.control(\"\", Validators.required),\r\n\t\t\tsecret_identity: this.fb.nonNullable.control<HeroSecretIdentityStatus>(\"public\", Validators.required),\r\n\t\t\tgender: this.fb.nonNullable.control<Gender>(\"male\", Validators.required),\r\n\t\t\tsuperpower: this.fb.nonNullable.control<HeroSuperpower>(\"flight\", Validators.required),\r\n\t\t\tteam_affiliation: this.fb.nonNullable.control<HeroTeamAffiliation>(\"avengers\", Validators.required),\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Type guard that checks if a field is a select field\r\n\t * @param field Field to check\r\n\t * @returns Whether the field is a select field\r\n\t */\r\n\tprotected isSelectField(field: keyof IHeroCreate): field is SelectField {\r\n\t\treturn SelectFields.findIndex((selectField) => selectField === field) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the form\r\n\t */\r\n\tpublic resetForm(): void {\r\n\t\tthis.form.reset();\r\n\t\tthis.form.markAsPristine();\r\n\t\tthis.form.markAsUntouched();\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the form\r\n\t */\r\n\tpublic submitForm(): void {\r\n\t\tthis.form.markAllAsTouched();\r\n\t\tif (!this.form.valid) {\r\n\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\tduration: 2500,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\ttitle: `${MessagesLocalized[\"FIELDS_ERROR\"]}`,\r\n\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis[this.variant]();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Hero\r\n\t */\r\n\tprivate create(): void {\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.heroService.create(this.form.getRawValue()).subscribe({\r\n\t\t\t\tnext: (hero) => {\r\n\t\t\t\t\tthis.router.navigate([RouteEnum.HEROES, HeroSubRouteEnum.LIST]);\r\n\r\n\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\ttitle: `${hero.hero_name} ${MessagesLocalized[\"CREATED\"]}`,\r\n\t\t\t\t\t\t\ttype: \"success\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terror: (error) => {\r\n\t\t\t\t\tif (isDevMode()) console.error(error);\r\n\r\n\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\tdata: { type: \"error\" },\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the Hero\r\n\t */\r\n\tprivate update(): void {\r\n\t\tif (!this.id) return;\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.heroService.update(this.id, this.form.value).subscribe({\r\n\t\t\t\tnext: (hero) => {\r\n\t\t\t\t\tthis.router.navigate([RouteEnum.HEROES, HeroSubRouteEnum.LIST]);\r\n\r\n\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\ttitle: `${hero.hero_name} ${MessagesLocalized[\"UPDATED\"]}`,\r\n\t\t\t\t\t\t\ttype: \"success\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terror: (error) => {\r\n\t\t\t\t\tif (isDevMode()) console.error(error);\r\n\r\n\t\t\t\t\tthis.toastService.openFromComponent<ToastComponent, Toast>(ToastComponent, {\r\n\t\t\t\t\t\tduration: 2500,\r\n\t\t\t\t\t\tdata: { type: \"error\" },\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { HeroFormComponent } from \"../../components/hero-form/hero-form.component\";\r\n\r\n/**\r\n * This page serves as the creation page for a hero in the application.\r\n */\r\n@Component({\r\n\tselector: \"hero-create\",\r\n\tstandalone: true,\r\n\timports: [HeroFormComponent],\r\n\ttemplateUrl: \"./hero-create.component.html\",\r\n\tstyleUrl: \"./hero-create.component.scss\",\r\n})\r\nexport class HeroCreateComponent {\r\n\t/**\r\n\t * Text for the accept button of the form\r\n\t */\r\n\tpublic acceptText: string = \"Add\";\r\n}\r\n","<hero-form variant=\"create\" [acceptText]=\"acceptText\"></hero-form>\r\n","import { Component } from \"@angular/core\";\r\nimport { HeroFormComponent } from \"../../components/hero-form/hero-form.component\";\r\n\r\n@Component({\r\n\tselector: 'hero-edit',\r\n\tstandalone: true,\r\n\timports: [HeroFormComponent],\r\n\ttemplateUrl: './hero-edit.component.html',\r\n\tstyleUrl: './hero-edit.component.scss',\r\n})\r\nexport class HeroEditComponent {}\r\n","<hero-form variant=\"update\"></hero-form>\r\n","import { Routes } from \"@angular/router\";\r\nimport { HeroSubRouteEnum } from \"../../core/constants/routes\";\r\nimport { HeroListComponent } from \"./pages/hero-list/hero-list.component\";\r\nimport { HeroCreateComponent } from \"./pages/hero-create/hero-create.component\";\r\nimport { HeroEditComponent } from \"./pages/hero-edit/hero-edit.component\";\r\n\r\nexport const heroesRoutes: Routes = [\r\n\t{\r\n\t\tpath: \"\",\r\n\t\tredirectTo: HeroSubRouteEnum.LIST,\r\n\t\tpathMatch: \"full\",\r\n\t},\r\n\t{\r\n\t\tpath: HeroSubRouteEnum.LIST,\r\n\t\tcomponent: HeroListComponent,\r\n\t},\r\n\t{\r\n\t\tpath: HeroSubRouteEnum.CREATE,\r\n\t\tcomponent: HeroCreateComponent,\r\n\t},\r\n\t{\r\n\t\tpath: `${HeroSubRouteEnum.EDIT}/:id`,\r\n\t\tcomponent: HeroEditComponent,\r\n\t},\r\n\t{ path: \"**\", redirectTo: HeroSubRouteEnum.LIST },\r\n];\r\n","import { Routes } from \"@angular/router\";\r\nimport { heroesRoutes } from \"./modules/features/heroes/heroes.routing\";\r\nimport { RouteEnum } from \"./modules/core/constants/routes\";\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: \"\",\r\n\t\tredirectTo: RouteEnum.HEROES,\r\n\t\tpathMatch: \"full\",\r\n\t},\r\n\t{\r\n\t\tpath: RouteEnum.HEROES,\r\n\t\tloadChildren: () => heroesRoutes,\r\n\t},\r\n\t{ path: \"**\", redirectTo: RouteEnum.HEROES },\r\n];\r\n","/**\n * @license Angular v17.3.10\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, ɵRuntimeError, Injectable, ɵperformanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nconst ANIMATION_PREFIX = '@';\nclass AsyncAnimationRendererFactory {\n  /**\n   *\n   * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n   */\n  constructor(doc, delegate, zone, animationType, moduleImpl) {\n    this.doc = doc;\n    this.delegate = delegate;\n    this.zone = zone;\n    this.animationType = animationType;\n    this.moduleImpl = moduleImpl;\n    this._rendererFactoryPromise = null;\n    this.scheduler = inject(ɵChangeDetectionScheduler, {\n      optional: true\n    });\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    // When the root view is removed, the renderer defers the actual work to the\n    // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n    // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n    // removed until `TransitionAnimationEngine` \"flushes\".\n    // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n    // engine is not provided when async animations are used.\n    this._engine?.flush();\n  }\n  /**\n   * @internal\n   */\n  loadImpl() {\n    const moduleImpl = this.moduleImpl ?? import('@angular/animations/browser');\n    return moduleImpl.catch(e => {\n      throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + 'No animations will be displayed and their styles won\\'t be applied.');\n    }).then(({\n      ɵcreateEngine,\n      ɵAnimationRendererFactory\n    }) => {\n      // We can't create the renderer yet because we might need the hostElement and the type\n      // Both are provided in createRenderer().\n      this._engine = ɵcreateEngine(this.animationType, this.doc, this.scheduler);\n      const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n      this.delegate = rendererFactory;\n      return rendererFactory;\n    });\n  }\n  /**\n   * This method is delegating the renderer creation to the factories.\n   * It uses default factory while the animation factory isn't loaded\n   * and will rely on the animation factory once it is loaded.\n   *\n   * Calling this method will trigger as side effect the loading of the animation module\n   * if the renderered component uses animations.\n   */\n  createRenderer(hostElement, rendererType) {\n    const renderer = this.delegate.createRenderer(hostElement, rendererType);\n    if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n      // The factory is already loaded, this is an animation renderer\n      return renderer;\n    }\n    // We need to prevent the DomRenderer to throw an error because of synthetic properties\n    if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n      renderer.throwOnSyntheticProps = false;\n    }\n    // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n    const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n    // Kick off the module loading if the component uses animations but the module hasn't been\n    // loaded yet.\n    if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n      this._rendererFactoryPromise = this.loadImpl();\n    }\n    this._rendererFactoryPromise?.then(animationRendererFactory => {\n      const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n      dynamicRenderer.use(animationRenderer);\n    }).catch(e => {\n      // Permanently use regular renderer when loading fails.\n      dynamicRenderer.use(renderer);\n    });\n    return dynamicRenderer;\n  }\n  begin() {\n    this.delegate.begin?.();\n  }\n  end() {\n    this.delegate.end?.();\n  }\n  whenRenderingDone() {\n    return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n  }\n  static {\n    this.ɵfac = function AsyncAnimationRendererFactory_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsyncAnimationRendererFactory, [{\n    type: Injectable\n  }], () => [{\n    type: Document\n  }, {\n    type: i0.RendererFactory2\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }, {\n    type: Promise\n  }], null);\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  constructor(delegate) {\n    this.delegate = delegate;\n    // List of callbacks that need to be replayed on the animation renderer once its loaded\n    this.replay = [];\n    this.ɵtype = 1 /* AnimationRendererType.Delegated */;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback));\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * renderered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  ɵperformanceMarkFeature('NgAsyncAnimations');\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, ɵDomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport { provideHttpClient } from '@angular/common/http';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [provideRouter(routes), provideAnimationsAsync(), provideHttpClient()],\r\n\r\n};\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ThemeType } from \"../../shared/interfaces/common.interface\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ThemeManagerService {\r\n\treadonly defaultTheme: ThemeType = \"dark\";\r\n\tpublic readonly theme$ = new BehaviorSubject<ThemeType>(this.defaultTheme);\r\n\r\n\tconstructor() {\r\n\t\tthis.defaultTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\r\n\t}\r\n\r\n\tget theme(): ThemeType {\r\n\t\treturn this.theme$.value;\r\n\t}\r\n\r\n\tset theme(theme: ThemeType) {\r\n\t\tthis.theme$.next(theme);\r\n\t\tdocument.body.className = theme + \"-theme\";\r\n\t}\r\n\r\n\ttoggleTheme(): void {\r\n\t\tthis.theme = this.theme === \"dark\" ? \"light\" : \"dark\";\r\n\t}\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static {\n    this.ɵfac = function MatToolbarRow_Factory(t) {\n      return new (t || MatToolbarRow)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatToolbarRow,\n      selectors: [[\"mat-toolbar-row\"]],\n      hostAttrs: [1, \"mat-toolbar-row\"],\n      exportAs: [\"matToolbarRow\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  constructor(_elementRef, _platform, document) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static {\n    this.ɵfac = function MatToolbar_Factory(t) {\n      return new (t || MatToolbar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatToolbar,\n      selectors: [[\"mat-toolbar\"]],\n      contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-toolbar\"],\n      hostVars: 6,\n      hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n        }\n      },\n      inputs: {\n        color: \"color\"\n      },\n      exportAs: [\"matToolbar\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 0,\n      template: function MatToolbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n        }\n      },\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color);--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color)}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color);--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color)}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static {\n    this.ɵfac = function MatToolbarModule_Factory(t) {\n      return new (t || MatToolbarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatToolbarModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nconst _c1 = [\"*\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor( /** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nclass MatSlideToggle {\n  _createChangeEvent(isChecked) {\n    return new MatSlideToggleChange(this, isChecked);\n  }\n  /** Returns the unique id for the visual hidden button. */\n  get buttonId() {\n    return `${this.id || this._uniqueId}-button`;\n  }\n  /** Focuses the slide-toggle. */\n  focus() {\n    this._switchElement.nativeElement.focus();\n  }\n  /** Whether the slide-toggle element is checked or not. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this.defaults = defaults;\n    this._onChange = _ => {};\n    this._onTouched = () => {};\n    this._validatorOnChange = () => {};\n    this._checked = false;\n    /** Name value will be applied to the input element if present. */\n    this.name = null;\n    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n    this.labelPosition = 'after';\n    /** Used to set the aria-label attribute on the underlying input element. */\n    this.ariaLabel = null;\n    /** Used to set the aria-labelledby attribute on the underlying input element. */\n    this.ariaLabelledby = null;\n    /** Whether the slide toggle is disabled. */\n    this.disabled = false;\n    /** Whether the slide toggle has a ripple. */\n    this.disableRipple = false;\n    /** Tabindex of slide toggle. */\n    this.tabIndex = 0;\n    /** An event will be dispatched each time the slide-toggle changes its value. */\n    this.change = new EventEmitter();\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     */\n    this.toggleChange = new EventEmitter();\n    this.tabIndex = parseInt(tabIndex) || 0;\n    this.color = defaults.color || 'accent';\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n    this.hideIcon = defaults.hideIcon ?? false;\n    this._labelId = this._uniqueId + '-label';\n  }\n  ngAfterContentInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n      if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n        this._focused = true;\n        this._changeDetectorRef.markForCheck();\n      } else if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state\n        // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n          this._focused = false;\n          this._onTouched();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorOnChange();\n    }\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /** Implemented as a part of Validator. */\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  /** Implemented as a part of Validator. */\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Toggles the checked state of the slide-toggle. */\n  toggle() {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n  /**\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n   */\n  _emitChangeEvent() {\n    this._onChange(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n  }\n  /** Method being called whenever the underlying button is clicked. */\n  _handleClick() {\n    this.toggleChange.emit();\n    if (!this.defaults.disableToggleValue) {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n      this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n  }\n  _getAriaLabelledBy() {\n    if (this.ariaLabelledby) {\n      return this.ariaLabelledby;\n    }\n    // Even though we have a `label` element with a `for` pointing to the button, we need the\n    // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n    return this.ariaLabel ? null : this._labelId;\n  }\n  static {\n    this.ɵfac = function MatSlideToggle_Factory(t) {\n      return new (t || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSlideToggle,\n      selectors: [[\"mat-slide-toggle\"]],\n      viewQuery: function MatSlideToggle_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n      hostVars: 13,\n      hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        name: \"name\",\n        id: \"id\",\n        labelPosition: \"labelPosition\",\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedby\"],\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        color: \"color\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n        hideIcon: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideIcon\", \"hideIcon\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\",\n        toggleChange: \"toggleChange\"\n      },\n      exportAs: [\"matSlideToggle\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatSlideToggle,\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 13,\n      vars: 24,\n      consts: [[\"switch\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"click\", \"tabIndex\", \"disabled\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"click\", \"for\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n      template: function MatSlideToggle_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2, 0);\n          i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleClick());\n          });\n          i0.ɵɵelement(3, \"div\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n          i0.ɵɵelement(7, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8);\n          i0.ɵɵelement(9, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"div\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"label\", 11);\n          i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView($event.stopPropagation());\n          });\n          i0.ɵɵprojection(12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const switch_r2 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled);\n          i0.ɵɵproperty(\"tabIndex\", ctx.disabled ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"matRippleTrigger\", switch_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(10, !ctx.hideIcon ? 10 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", ctx.buttonId);\n          i0.ɵɵattribute(\"id\", ctx._labelId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mdc-switch__handle{transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle:active .mdc-switch:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--selected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--unselected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch__track::after,.mdc-switch__track::before{border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color)}.mdc-switch--selected .mdc-switch__track::after,.mdc-switch--selected .mdc-switch__track::before{border-width:var(--mat-switch-selected-track-outline-width)}.mdc-switch--disabled .mdc-switch__track::after,.mdc-switch--disabled .mdc-switch__track::before{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slide-toggle',\n      host: {\n        'class': 'mat-mdc-slide-toggle',\n        '[id]': 'id',\n        // Needs to be removed since it causes some a11y issues (see #21266).\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.name]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n        '[class._mat-animation-noopable]': '_noopAnimations',\n        '[class]': 'color ? \"mat-\" + color : \"\"'\n      },\n      exportAs: 'matSlideToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatSlideToggle,\n        multi: true\n      }],\n      standalone: true,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        @if (!hideIcon) {\\n          <div class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mdc-switch__handle{transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle:active .mdc-switch:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--selected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--unselected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch__track::after,.mdc-switch__track::before{border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color)}.mdc-switch--selected .mdc-switch__track::after,.mdc-switch--selected .mdc-switch__track::before{border-width:var(--mat-switch-selected-track-outline-width)}.mdc-switch--disabled .mdc-switch__track::after,.mdc-switch--disabled .mdc-switch__track::before{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _switchElement: [{\n      type: ViewChild,\n      args: ['switch']\n    }],\n    name: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }],\n    toggleChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSlideToggleRequiredValidator_BaseFactory;\n      return function MatSlideToggleRequiredValidator_Factory(t) {\n        return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSlideToggleRequiredValidator,\n      selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n      providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatSlideToggleRequiredValidatorModule {\n  static {\n    this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) {\n      return new (t || _MatSlideToggleRequiredValidatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: _MatSlideToggleRequiredValidatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatSlideToggleRequiredValidator],\n      exports: [MatSlideToggleRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatSlideToggleModule {\n  static {\n    this.ɵfac = function MatSlideToggleModule_Factory(t) {\n      return new (t || MatSlideToggleModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSlideToggleModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatSlideToggle, MatCommonModule],\n      exports: [MatSlideToggle, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","<header class=\"header\">\r\n\t<mat-toolbar class=\"toolbar\">\r\n\t\t<a routerLink=\"/\">\r\n\t\t\t<img class=\"logo\" src=\"assets/logo.svg\" alt=\"logo\" />\r\n\t\t</a>\r\n\r\n\t\t<div class=\"right\">\r\n\t\t\t<nav class=\"nav\">\r\n\t\t\t\t@for (tab of tabs; track $index) {\r\n\t\t\t\t<a mat-button color=\"primary\" class=\"tab\" [routerLink]=\"tab.key\" routerLinkActive=\"tab--active\">{{ tab.value }}</a>\r\n\t\t\t\t}\r\n\t\t\t</nav>\r\n\r\n\t\t\t<div class=\"togglers\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t\t<img matPrefix [src]=\"'assets/icons/flags/' + selectedLocale + '.svg'\" [alt]=\"selectedLocale + '-flag'\" />\r\n\r\n\t\t\t\t\t<mat-select [(value)]=\"selectedLocale\">\r\n\t\t\t\t\t\t@for (locale of locales | keyvalue; track $index) {\r\n\t\t\t\t\t\t<mat-option mat-option [value]=\"locale.key\" [routerLink]=\"'/' + locale.key\">\r\n\t\t\t\t\t\t\t<img [src]=\"'assets/icons/flags/' + locale.key + '.svg'\" [alt]=\"locale.value\" />\r\n\t\t\t\t\t\t\t{{ locale.value }}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-slide-toggle #modeSwitch (change)=\"toggleTheme()\" color=\"primary\" class=\"theme-toggle\" aria-label=\"Toggle Dark Theme\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-toolbar>\r\n</header>\r\n","import { ThemeManagerService } from \"../../services/theme-manager.service\";\r\nimport { Component, ElementRef, ViewChild, inject } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ActivatedRoute, Router, RouterModule } from \"@angular/router\";\r\nimport { NavbarRoutesLocalized, RouteEnum } from \"../../constants/routes\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { LOCALES, LocalesList } from \"../../../shared/enums/common.enum\";\r\nimport { MatFormField } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { Locales } from \"../../../shared/interfaces/common.interface\";\r\n\r\n/**\r\n * This core component is the navbar of the application\r\n */\r\n@Component({\r\n\tselector: \"navbar\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, RouterModule, MatButtonModule, MatFormField, MatSelectModule, MatSlideToggleModule, MatToolbarModule],\r\n\ttemplateUrl: \"./navbar.component.html\",\r\n\tstyleUrls: [\"./navbar.component.scss\"],\r\n})\r\nexport class NavbarComponent {\r\n\t/**\r\n\t * Injected dependency for Router\r\n\t */\r\n\tprotected readonly router: Router = inject(Router);\r\n\r\n\t/**\r\n\t * Injected dependency for Theme Manager Service\r\n\t */\r\n\tprotected readonly themeManagerService: ThemeManagerService = inject(ThemeManagerService);\r\n\r\n\t/**\r\n\t * Reference to the mode switch\r\n\t */\r\n\t@ViewChild(\"modeSwitch\", { read: ElementRef }) element: ElementRef | undefined;\r\n\r\n\t/**\r\n\t * Selected locale\r\n\t */\r\n\tpublic selectedLocale: Locales = this.extractLocaleFromUrl(this.router.url);\r\n\r\n\t/**\r\n\t * Navbar routes\r\n\t */\r\n\tpublic readonly tabs = NavbarRoutesLocalized;\r\n\r\n\t/**\r\n\t * Locales list\r\n\t */\r\n\tpublic readonly locales = LocalesList;\r\n\r\n\t/**\r\n\t * Reference to the RouteEnum\r\n\t */\r\n\tprotected readonly RouteEnum = RouteEnum;\r\n\r\n\t/**\r\n\t * SVG icon for the sun\r\n\t */\r\n\tprivate readonly sun =\r\n\t\t\"M12 15.5q1.45 0 2.475-1.025Q15.5 13.45 15.5 12q0-1.45-1.025-2.475Q13.45 8.5 12 8.5q-1.45 0-2.475 1.025Q8.5 10.55 8.5 12q0 1.45 1.025 2.475Q10.55 15.5 12 15.5Zm0 1.5q-2.075 0-3.537-1.463T7 12q0-2.075 1.463-3.537T12 7q2.075 0 3.537 1.463T17 12q0 2.075-1.463 3.537T12 17ZM1.75 12.75q-.325 0-.538-.213Q1 12.325 1 12q0-.325.212-.537Q1.425 11.25 1.75 11.25h2.5q.325 0 .537.213Q5 11.675 5 12q0 .325-.213.537-.213.213-.537.213Zm18 0q-.325 0-.538-.213Q19 12.325 19 12q0-.325.212-.537.212-.213.538-.213h2.5q.325 0 .538.213Q23 11.675 23 12q0 .325-.212.537-.212.213-.538.213ZM12 5q-.325 0-.537-.213Q11.25 4.575 11.25 4.25v-2.5q0-.325.213-.538Q11.675 1 12 1q.325 0 .537.212 .213.212 .213.538v2.5q0 .325-.213.537Q12.325 5 12 5Zm0 18q-.325 0-.537-.212-.213-.212-.213-.538v-2.5q0-.325.213-.538Q11.675 19 12 19q.325 0 .537.212 .213.212 .213.538v2.5q0 .325-.213.538Q12.325 23 12 23ZM6 7.05l-1.425-1.4q-.225-.225-.213-.537.013-.312.213-.537.225-.225.537-.225t.537.225L7.05 6q.2.225 .2.525 0 .3-.2.5-.2.225-.513.225-.312 0-.537-.2Zm12.35 12.375L16.95 18q-.2-.225-.2-.538t.225-.512q.2-.225.5-.225t.525.225l1.425 1.4q.225.225 .212.538-.012.313-.212.538-.225.225-.538.225t-.538-.225ZM16.95 7.05q-.225-.225-.225-.525 0-.3.225-.525l1.4-1.425q.225-.225.538-.213.313 .013.538 .213.225 .225.225 .537t-.225.537L18 7.05q-.2.2-.512.2-.312 0-.538-.2ZM4.575 19.425q-.225-.225-.225-.538t.225-.538L6 16.95q.225-.225.525-.225.3 0 .525.225 .225.225 .225.525 0 .3-.225.525l-1.4 1.425q-.225.225-.537.212-.312-.012-.537-.212ZM12 12Z\";\r\n\r\n\t/**\r\n\t * SVG icon for the moon\r\n\t */\r\n\tprivate readonly moon =\r\n\t\t\"M12 21q-3.75 0-6.375-2.625T3 12q0-3.75 2.625-6.375T12 3q.2 0 .425.013 .225.013 .575.038-.9.8-1.4 1.975-.5 1.175-.5 2.475 0 2.25 1.575 3.825Q14.25 12.9 16.5 12.9q1.3 0 2.475-.463T20.95 11.15q.025.3 .038.488Q21 11.825 21 12q0 3.75-2.625 6.375T12 21Zm0-1.5q2.725 0 4.75-1.687t2.525-3.963q-.625.275-1.337.412Q17.225 14.4 16.5 14.4q-2.875 0-4.887-2.013T9.6 7.5q0-.6.125-1.287.125-.687.45-1.562-2.45.675-4.062 2.738Q4.5 9.45 4.5 12q0 3.125 2.188 5.313T12 19.5Zm-.1-7.425Z\";\r\n\r\n\t/**\r\n\t * On component after view init\r\n\t */\r\n\tngAfterViewInit(): void {\r\n\t\tif (!this.element) return;\r\n\r\n\t\tconst defaultTheme = this.themeManagerService.theme;\r\n\r\n\t\tthis.element.nativeElement\r\n\t\t\t.querySelector(\".mdc-switch__icon--on\")\r\n\t\t\t.firstChild.setAttribute(\"d\", defaultTheme === \"light\" ? this.moon : this.sun);\r\n\t\tthis.element.nativeElement\r\n\t\t\t.querySelector(\".mdc-switch__icon--off\")\r\n\t\t\t.firstChild.setAttribute(\"d\", defaultTheme === \"light\" ? this.sun : this.moon);\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts the locale from the URL\r\n\t * @param url URL to extract the locale from\r\n\t * @returns The locale\r\n\t */\r\n\tprivate extractLocaleFromUrl(url: string): Locales {\r\n\t\tconst locale = url.split(\"/\")[1] as Locales;\r\n\r\n\t\treturn LOCALES.includes(locale) ? locale : \"en\";\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the theme\r\n\t */\r\n\ttoggleTheme(): void {\r\n\t\tthis.themeManagerService.toggleTheme();\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\nimport { NavbarComponent } from \"./modules/core/components/navbar/navbar.component\";\r\n\r\n@Component({\r\n\tselector: \"app-root\",\r\n\tstandalone: true,\r\n\timports: [RouterOutlet, NavbarComponent],\r\n\ttemplateUrl: \"./app.component.html\",\r\n\tstyleUrl: \"./app.component.scss\",\r\n})\r\nexport class AppComponent {\r\n\ttitle = \"heroes-service\";\r\n}\r\n","<navbar />\r\n\r\n<main class=\"main\">\r\n\t<router-outlet />\r\n</main>\r\n","/// <reference types=\"@angular/localize\" />\n\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"]}